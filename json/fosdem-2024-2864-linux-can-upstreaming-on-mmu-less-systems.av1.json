{"text": " So let's start it. Ciao everyone and welcome to my talk. I am Dario. I work at Amarulla Solution, a software consultant company mainly working on embedded Linux and Android projects with a focus on open source. And about me I am a contributor for some open source projects like Buildroot, Linux and UBoot and they come from Italy. This talk describes my experience in streaming the big scan driver for the Linux kernel for STM32 platforms and testing the driver as we will see required also applying some patches to the tools used for configuring and accessing the scan interface. Before jumping into the rest in things, let me spend a few words about the origin of this experience. The idea was to create a kernel driver from scratch in order to satisfy some curiosities of mine about the kernel development process. So creating a kernel from scratch is not like a backfixing patch but you have to create documentation, you have to update the device tree, thinking about the design of the driver in addition to its implementation. So it's a lot of stuff and it is easy to get in trouble but it is also a great opportunity to understand a lot of things. So why did I choose the big scan controller? First of all because I gained some experience in streaming patches for the kernel subsystems finding that both the maintainers and the guys are responsive and proactive. Then the big scan controller is present on development boards that are not so much expensive and with the developer boards you can find also the build root configuration. It is a good starting point to start the kernel development. Furthermore you can find also a lot of examples, a lot of code online of how to set up the controller and in the case of the Zephyr project for example you can find a old driver or lady implemented. Then finally you can test the driver without modifying the hardware because you can enable the loopback and silent board that are the test mode of such chips. So let's explore the internals to a static RAM like in the single-can configuration but in dual-can configuration they are shared and only the primary channel has direct access to the SRAM. There are also three test modes. For both of these test modes the transmission is looped back internally to the reception. But in silent mode the node is disconnected from the bus on a transmission. In loopback mode the node is disconnected from the bus on a reception and in combined loopback and silent mode the node is totally disconnected from the bus and this will be the mode I will use for testing the driver. Let's now have a look to the roadmap. You have to modify the build root configuration and create the Linux driver for handling the dual-can setup on the 469 disco board. Then create a new build root configuration and modify the Linux kernel in order to handle the single-can for the 769 disco and in both cases we have to test the driver and upstream the patches. So let's start with the 469 disco board. I started from the disco SD configuration and I enabled the networking and can bus support in the Linux fragment file. When I put the Linux kernel in override in order to be able to create my driver I start with the implementation. The implementation I started from the documentation describing the properties to be added to the device tree. In addition to the common properties that you can find in a driver like a compatible or a reg, I added the SD-can primary property in order to distinguish between master and secondary channel. Then I added the SD-can node as a reference to the shared memory. Then I added the can node and the can node to the platform device tree. I configured the pin mix control about the pins owned by the can controller. And finally I added to the device tree of the board the I enabled in the device tree of the board the can nodes and I disabled the peripherals with pins shared with the can controller in order to avoid conflicts. About the source code I opted for simplicity for the first version of the driver. So I in the driver handles all the free mailbox for transmission but in case of reception handles only 5 for 0. And about the filters I hardwired the assignment of the filters. So I assigned the filter 0 to the primary channel and filter 14 to the secondary channel. And in both cases I configured the filter register in order that all incoming messages were accepted. So in this way disabling these particular features. And for the interrupts I handled all the interrupt except for the interrupt on the 5.1 reception that was related to the 5.1 that is disabled. So now we are on the testing. I split the procedure of testing the driver in two steps. In the first steps I checked the DMS output in order to verify that there were not issues about the driver probing. Then I tried to set up the can interface enabling the loop and listen mode and verify that the transmitted messages were also received. But in this case I realized that the tools I had to use to test the driver didn't compile on platforms without MMU. The point is that the fork system doesn't work on such as Sipson. And the table clearly shows that only the busybox package is able to be compiled on a SAC system. But its IP link command is not able to set up a can interface. So I had to decide whether to patch busybox, whether to patch IP root 2 or add in support for can interface to busybox. I opted for busybox because it was already used in the system and farmed because on a system with limited resources using lightweight packages is preferred. Let's go also on the patches I had to apply. So in this way I updated the build root configuration in order to enable the can interface package. I put in override both the busybox and can interface package. And so I was able to create an IP link can applet to add to busybox and to patch can interface in order so that I didn't compile the program using the fork function. And fortunately the can dump can send application and don't use these functions. So in this way after applying the patches I was able to set up the can interface and verify that the transmitted messages were also received. After the test let's talk about the code review. The code review reached version 10 so many things has been changed and also has been fixed but among them some I think are really interesting like the use of the Cisco node for handling the shared memory, the replacement of the master and slave terms with primary and secondary according to the kernel coding guidelines. The use of the field get field prep macros for accessing the register bitfills in order to standardize the code for accessing the register and so reduce the errors. And finally the use of a rackback function to access shared memory. After the patches were upstreamed I started so with adding the single can handling for the driver. So I create a new configuration inside build root and just like the 469 disco I created a configuration where both the Linux can the root file system and the device tree were stored because were used only for me to test the driver. The changes required for handling the single peripheral configuration were quite minimal but overall without modifying the driver design and more or less these are the changes I had to apply to the driver. About the testing of the driver I used the same procedure I used before so I checked for the DMS output and I set up the free can interfaces and once again I try to verify that the transmitted messages were also received in a proper way. And even in this case with the code review even if it didn't take long brought out some interesting insights. The maintainer's idea was to change the source code as little as possible so he suggested me to use the Cisco node also for the primary channel even if there isn't a shared memory for it. And also to use the STCAN secondary property to distinguish between primary and secondary channel even if the change was not backward compatible with the dual can configuration. But it didn't matter since the driver wasn't yet in a stable version of the kernel. Then have a look at the merge problem we had with this series. Due to a misunderstanding in the application in applying the patches to the main line the order of application for patches A and B was inverted causing a failure in the compilation of the device tree that was fixed by reverting the patch B. So it was a situation not so good for me and also for the maintainers because everybody got really nervous. So there was one last question to ask to the maintainer of the CANSAP system that is what to do with the patches I had to apply to the tools used for testing the driver. And this was the response. So I upstreamed everything including a new further implementation of the IP link command using the library that is a lightweight library. I was quite curious about the use of this library so I ran some tests on it and finally I arrived to a further implementation of the IP link CAN command after the busybox one. So to sum up I upstreamed 12 patches for the Linux kernel. One patch for busybox, one patch for canutes and three patches for the libmnl. And then seven patches for bitroot. All the patches were accepted except for the one of busybox. I resend the patch multiple times but I didn't get any answer from the maintainer. So if you think that it could be useful for busybox to support the setup of a CAN interface please review the patch. Finally, finally for people who are interested I uploaded the buildroot project of my personal GitHub account and these are the commands you can use to build the images to store on the development board and to run tests for accessing the CAN interface. That's all for me. Thank you for your attention. Anybody have any questions? Maybe from buildroot. Hi. Thank you for your presentation. How long did it take to explain to all the patches and development of the drivers? Quite a long. I think it is the work I think of one year more or less. But not full time. Yeah, of course. You have to wait for the response of the maintainers. Thank you. Hi. So thank you again for your work. This is very useful because without MMU less system I haven't seen on Linux running CAN yet and the main problem was the IP link set because without that you CAN is configured as a network device on Linux and without that you cannot set the bit rate. So that was very important. My question is that on the STM only has a CAN controller. The CAN transceiver is always on the outside. So CAN transceiver any PCB changes, any hardware changes, did you ever have to make for these kinds of systems if somebody builds a product that does not have MMU? If this goes into production with Linux running do we need something else from the hardware side or that was the transceiver side nothing has to change? Could you repeat the question because I didn't catch a... So normally if I use a Raspberry Pi or something you have a MCP2151 that has a CAN controller and a CAN transceiver. STM32 only has a CAN controller. And on the board you would need to have external IP, IC, right, that would run as a CAN transceiver. I don't know if the board I have can transceiver because I didn't modify the hardware. I put in Lubeck internally the CAN controller and so I was able to test because I'm not an hardware engineer. I am a software engineer and I am more confident on software than on hardware. So I didn't want to put the hand on the hardware. I bought a transceiver but after finding that I was able to enable the Lubeck... Inasmuch... Okay, okay, thank you. You can basically use the same transceiver with the SD microcontroller so they are compatible. Was that your question? Yeah, so I just wanted to ask that in an MMU and MMU less system the CAN bus, the 120 or nothing else would change in a... Right, that was my question. Yes, the CAN controller usually has a digital interface with RX and TX line and this is connected to the transceiver that makes it into what's going over the wire and the transceiver doesn't care what kind of CAN controller was on the digital side you attached to. Hi, some STM32 have a newer IP for CAN that is named FD-CAN. I am familiar with FD-CAN so I wasn't aware... FD-CAN, FD-CAN. Yeah, and it seems like it's backwards compatible with DX-CAN so it looks like it should be compatible with your work so that's really nice but were you aware about FD-CAN? No? Okay. So I was wondering if it was planned to support the functionalities that are in FD-CAN and not in DX-CAN. But I think the FD-CAN features are not on this type of platform I think. I think that it's on the STM32MP because this is a microcontroller. No, no, I was using FD-CAN on STM32F303. But I suppose they have some weird... I can say something to this also. On the modern STM microcontrollers where you have FD-CAN they are using the M-CAN IP core from WOSH and this is already supported by Linux. Non-MU system. Was you able to test the very latest CAN-Utils and non-MU system with the very latest new ISOBus file system support? No. Okay, we have time for one more question if there is one. Okay, I think we're done. Thank you very much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.68, "text": " So let's start it.", "tokens": [50364, 407, 718, 311, 722, 309, 13, 50798], "temperature": 0.0, "avg_logprob": -0.3810218875691042, "compression_ratio": 1.3375796178343948, "no_speech_prob": 0.5319061279296875}, {"id": 1, "seek": 0, "start": 8.68, "end": 11.52, "text": " Ciao everyone and welcome to my talk.", "tokens": [50798, 28473, 1518, 293, 2928, 281, 452, 751, 13, 50940], "temperature": 0.0, "avg_logprob": -0.3810218875691042, "compression_ratio": 1.3375796178343948, "no_speech_prob": 0.5319061279296875}, {"id": 2, "seek": 0, "start": 11.52, "end": 12.52, "text": " I am Dario.", "tokens": [50940, 286, 669, 413, 4912, 13, 50990], "temperature": 0.0, "avg_logprob": -0.3810218875691042, "compression_ratio": 1.3375796178343948, "no_speech_prob": 0.5319061279296875}, {"id": 3, "seek": 0, "start": 12.52, "end": 18.88, "text": " I work at Amarulla Solution, a software consultant company mainly working on embedded Linux and", "tokens": [50990, 286, 589, 412, 2012, 289, 26891, 318, 3386, 11, 257, 4722, 24676, 2237, 8704, 1364, 322, 16741, 18734, 293, 51308], "temperature": 0.0, "avg_logprob": -0.3810218875691042, "compression_ratio": 1.3375796178343948, "no_speech_prob": 0.5319061279296875}, {"id": 4, "seek": 0, "start": 18.88, "end": 23.28, "text": " Android projects with a focus on open source.", "tokens": [51308, 8853, 4455, 365, 257, 1879, 322, 1269, 4009, 13, 51528], "temperature": 0.0, "avg_logprob": -0.3810218875691042, "compression_ratio": 1.3375796178343948, "no_speech_prob": 0.5319061279296875}, {"id": 5, "seek": 2328, "start": 23.28, "end": 31.94, "text": " And about me I am a contributor for some open source projects like Buildroot, Linux and", "tokens": [50364, 400, 466, 385, 286, 669, 257, 42859, 337, 512, 1269, 4009, 4455, 411, 11875, 44147, 11, 18734, 293, 50797], "temperature": 0.0, "avg_logprob": -0.42057383401053294, "compression_ratio": 1.4541062801932367, "no_speech_prob": 0.09291306138038635}, {"id": 6, "seek": 2328, "start": 31.94, "end": 34.760000000000005, "text": " UBoot and they come from Italy.", "tokens": [50797, 624, 33, 6259, 293, 436, 808, 490, 10705, 13, 50938], "temperature": 0.0, "avg_logprob": -0.42057383401053294, "compression_ratio": 1.4541062801932367, "no_speech_prob": 0.09291306138038635}, {"id": 7, "seek": 2328, "start": 34.760000000000005, "end": 41.88, "text": " This talk describes my experience in streaming the big scan driver for the Linux kernel for", "tokens": [50938, 639, 751, 15626, 452, 1752, 294, 11791, 264, 955, 11049, 6787, 337, 264, 18734, 28256, 337, 51294], "temperature": 0.0, "avg_logprob": -0.42057383401053294, "compression_ratio": 1.4541062801932367, "no_speech_prob": 0.09291306138038635}, {"id": 8, "seek": 2328, "start": 41.88, "end": 50.68000000000001, "text": " STM32 platforms and testing the driver as we will see required also applying some patches", "tokens": [51294, 4904, 44, 11440, 9473, 293, 4997, 264, 6787, 382, 321, 486, 536, 4739, 611, 9275, 512, 26531, 51734], "temperature": 0.0, "avg_logprob": -0.42057383401053294, "compression_ratio": 1.4541062801932367, "no_speech_prob": 0.09291306138038635}, {"id": 9, "seek": 5068, "start": 50.68, "end": 57.72, "text": " to the tools used for configuring and accessing the scan interface.", "tokens": [50364, 281, 264, 3873, 1143, 337, 6662, 1345, 293, 26440, 264, 11049, 9226, 13, 50716], "temperature": 0.0, "avg_logprob": -0.22712414701220016, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.04010852426290512}, {"id": 10, "seek": 5068, "start": 57.72, "end": 65.92, "text": " Before jumping into the rest in things, let me spend a few words about the origin of this", "tokens": [50716, 4546, 11233, 666, 264, 1472, 294, 721, 11, 718, 385, 3496, 257, 1326, 2283, 466, 264, 4957, 295, 341, 51126], "temperature": 0.0, "avg_logprob": -0.22712414701220016, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.04010852426290512}, {"id": 11, "seek": 5068, "start": 65.92, "end": 67.92, "text": " experience.", "tokens": [51126, 1752, 13, 51226], "temperature": 0.0, "avg_logprob": -0.22712414701220016, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.04010852426290512}, {"id": 12, "seek": 5068, "start": 67.92, "end": 75.24000000000001, "text": " The idea was to create a kernel driver from scratch in order to satisfy some curiosities", "tokens": [51226, 440, 1558, 390, 281, 1884, 257, 28256, 6787, 490, 8459, 294, 1668, 281, 19319, 512, 13625, 1088, 51592], "temperature": 0.0, "avg_logprob": -0.22712414701220016, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.04010852426290512}, {"id": 13, "seek": 5068, "start": 75.24000000000001, "end": 80.36, "text": " of mine about the kernel development process.", "tokens": [51592, 295, 3892, 466, 264, 28256, 3250, 1399, 13, 51848], "temperature": 0.0, "avg_logprob": -0.22712414701220016, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.04010852426290512}, {"id": 14, "seek": 8036, "start": 80.36, "end": 88.03999999999999, "text": " So creating a kernel from scratch is not like a backfixing patch but you have to create", "tokens": [50364, 407, 4084, 257, 28256, 490, 8459, 307, 406, 411, 257, 646, 69, 970, 278, 9972, 457, 291, 362, 281, 1884, 50748], "temperature": 0.0, "avg_logprob": -0.17448642140343076, "compression_ratio": 1.6584158415841583, "no_speech_prob": 0.0292348675429821}, {"id": 15, "seek": 8036, "start": 88.03999999999999, "end": 93.6, "text": " documentation, you have to update the device tree, thinking about the design of the driver", "tokens": [50748, 14333, 11, 291, 362, 281, 5623, 264, 4302, 4230, 11, 1953, 466, 264, 1715, 295, 264, 6787, 51026], "temperature": 0.0, "avg_logprob": -0.17448642140343076, "compression_ratio": 1.6584158415841583, "no_speech_prob": 0.0292348675429821}, {"id": 16, "seek": 8036, "start": 93.6, "end": 96.2, "text": " in addition to its implementation.", "tokens": [51026, 294, 4500, 281, 1080, 11420, 13, 51156], "temperature": 0.0, "avg_logprob": -0.17448642140343076, "compression_ratio": 1.6584158415841583, "no_speech_prob": 0.0292348675429821}, {"id": 17, "seek": 8036, "start": 96.2, "end": 103.64, "text": " So it's a lot of stuff and it is easy to get in trouble but it is also a great opportunity", "tokens": [51156, 407, 309, 311, 257, 688, 295, 1507, 293, 309, 307, 1858, 281, 483, 294, 5253, 457, 309, 307, 611, 257, 869, 2650, 51528], "temperature": 0.0, "avg_logprob": -0.17448642140343076, "compression_ratio": 1.6584158415841583, "no_speech_prob": 0.0292348675429821}, {"id": 18, "seek": 8036, "start": 103.64, "end": 106.4, "text": " to understand a lot of things.", "tokens": [51528, 281, 1223, 257, 688, 295, 721, 13, 51666], "temperature": 0.0, "avg_logprob": -0.17448642140343076, "compression_ratio": 1.6584158415841583, "no_speech_prob": 0.0292348675429821}, {"id": 19, "seek": 10640, "start": 106.4, "end": 110.52000000000001, "text": " So why did I choose the big scan controller?", "tokens": [50364, 407, 983, 630, 286, 2826, 264, 955, 11049, 10561, 30, 50570], "temperature": 0.0, "avg_logprob": -0.2307764451895187, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.1357644647359848}, {"id": 20, "seek": 10640, "start": 110.52000000000001, "end": 118.24000000000001, "text": " First of all because I gained some experience in streaming patches for the kernel subsystems", "tokens": [50570, 2386, 295, 439, 570, 286, 12634, 512, 1752, 294, 11791, 26531, 337, 264, 28256, 2090, 9321, 82, 50956], "temperature": 0.0, "avg_logprob": -0.2307764451895187, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.1357644647359848}, {"id": 21, "seek": 10640, "start": 118.24000000000001, "end": 125.36000000000001, "text": " finding that both the maintainers and the guys are responsive and proactive.", "tokens": [50956, 5006, 300, 1293, 264, 6909, 433, 293, 264, 1074, 366, 21826, 293, 28028, 13, 51312], "temperature": 0.0, "avg_logprob": -0.2307764451895187, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.1357644647359848}, {"id": 22, "seek": 10640, "start": 125.36000000000001, "end": 132.64000000000001, "text": " Then the big scan controller is present on development boards that are not so much expensive", "tokens": [51312, 1396, 264, 955, 11049, 10561, 307, 1974, 322, 3250, 13293, 300, 366, 406, 370, 709, 5124, 51676], "temperature": 0.0, "avg_logprob": -0.2307764451895187, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.1357644647359848}, {"id": 23, "seek": 13264, "start": 132.64, "end": 139.55999999999997, "text": " and with the developer boards you can find also the build root configuration.", "tokens": [50364, 293, 365, 264, 10754, 13293, 291, 393, 915, 611, 264, 1322, 5593, 11694, 13, 50710], "temperature": 0.0, "avg_logprob": -0.32470622694635964, "compression_ratio": 1.693467336683417, "no_speech_prob": 0.043496742844581604}, {"id": 24, "seek": 13264, "start": 139.55999999999997, "end": 144.64, "text": " It is a good starting point to start the kernel development.", "tokens": [50710, 467, 307, 257, 665, 2891, 935, 281, 722, 264, 28256, 3250, 13, 50964], "temperature": 0.0, "avg_logprob": -0.32470622694635964, "compression_ratio": 1.693467336683417, "no_speech_prob": 0.043496742844581604}, {"id": 25, "seek": 13264, "start": 144.64, "end": 151.95999999999998, "text": " Furthermore you can find also a lot of examples, a lot of code online of how to set up the", "tokens": [50964, 23999, 291, 393, 915, 611, 257, 688, 295, 5110, 11, 257, 688, 295, 3089, 2950, 295, 577, 281, 992, 493, 264, 51330], "temperature": 0.0, "avg_logprob": -0.32470622694635964, "compression_ratio": 1.693467336683417, "no_speech_prob": 0.043496742844581604}, {"id": 26, "seek": 13264, "start": 151.95999999999998, "end": 158.72, "text": " controller and in the case of the Zephyr project for example you can find a old driver or lady", "tokens": [51330, 10561, 293, 294, 264, 1389, 295, 264, 1176, 595, 3495, 81, 1716, 337, 1365, 291, 393, 915, 257, 1331, 6787, 420, 7262, 51668], "temperature": 0.0, "avg_logprob": -0.32470622694635964, "compression_ratio": 1.693467336683417, "no_speech_prob": 0.043496742844581604}, {"id": 27, "seek": 13264, "start": 158.72, "end": 160.23999999999998, "text": " implemented.", "tokens": [51668, 12270, 13, 51744], "temperature": 0.0, "avg_logprob": -0.32470622694635964, "compression_ratio": 1.693467336683417, "no_speech_prob": 0.043496742844581604}, {"id": 28, "seek": 16024, "start": 160.24, "end": 169.76000000000002, "text": " Then finally you can test the driver without modifying the hardware because you can enable", "tokens": [50364, 1396, 2721, 291, 393, 1500, 264, 6787, 1553, 42626, 264, 8837, 570, 291, 393, 9528, 50840], "temperature": 0.0, "avg_logprob": -0.2396725939031233, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.03419801965355873}, {"id": 29, "seek": 16024, "start": 169.76000000000002, "end": 177.96, "text": " the loopback and silent board that are the test mode of such chips.", "tokens": [50840, 264, 6367, 3207, 293, 12784, 3150, 300, 366, 264, 1500, 4391, 295, 1270, 11583, 13, 51250], "temperature": 0.0, "avg_logprob": -0.2396725939031233, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.03419801965355873}, {"id": 30, "seek": 16024, "start": 177.96, "end": 185.68, "text": " So let's explore the internals to a static RAM like in the single-can configuration but", "tokens": [51250, 407, 718, 311, 6839, 264, 2154, 1124, 281, 257, 13437, 14561, 411, 294, 264, 2167, 12, 7035, 11694, 457, 51636], "temperature": 0.0, "avg_logprob": -0.2396725939031233, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.03419801965355873}, {"id": 31, "seek": 18568, "start": 185.68, "end": 196.64000000000001, "text": " in dual-can configuration they are shared and only the primary channel has direct access", "tokens": [50364, 294, 11848, 12, 7035, 11694, 436, 366, 5507, 293, 787, 264, 6194, 2269, 575, 2047, 2105, 50912], "temperature": 0.0, "avg_logprob": -0.294546820900657, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.08211884647607803}, {"id": 32, "seek": 18568, "start": 196.64000000000001, "end": 198.64000000000001, "text": " to the SRAM.", "tokens": [50912, 281, 264, 20840, 2865, 13, 51012], "temperature": 0.0, "avg_logprob": -0.294546820900657, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.08211884647607803}, {"id": 33, "seek": 18568, "start": 198.64000000000001, "end": 204.60000000000002, "text": " There are also three test modes.", "tokens": [51012, 821, 366, 611, 1045, 1500, 14068, 13, 51310], "temperature": 0.0, "avg_logprob": -0.294546820900657, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.08211884647607803}, {"id": 34, "seek": 18568, "start": 204.60000000000002, "end": 212.60000000000002, "text": " For both of these test modes the transmission is looped back internally to the reception.", "tokens": [51310, 1171, 1293, 295, 613, 1500, 14068, 264, 11574, 307, 6367, 292, 646, 19501, 281, 264, 21682, 13, 51710], "temperature": 0.0, "avg_logprob": -0.294546820900657, "compression_ratio": 1.4451612903225806, "no_speech_prob": 0.08211884647607803}, {"id": 35, "seek": 21260, "start": 212.6, "end": 219.28, "text": " But in silent mode the node is disconnected from the bus on a transmission.", "tokens": [50364, 583, 294, 12784, 4391, 264, 9984, 307, 29426, 490, 264, 1255, 322, 257, 11574, 13, 50698], "temperature": 0.0, "avg_logprob": -0.20377891446337287, "compression_ratio": 1.9939759036144578, "no_speech_prob": 0.11591440439224243}, {"id": 36, "seek": 21260, "start": 219.28, "end": 227.0, "text": " In loopback mode the node is disconnected from the bus on a reception and in combined", "tokens": [50698, 682, 6367, 3207, 4391, 264, 9984, 307, 29426, 490, 264, 1255, 322, 257, 21682, 293, 294, 9354, 51084], "temperature": 0.0, "avg_logprob": -0.20377891446337287, "compression_ratio": 1.9939759036144578, "no_speech_prob": 0.11591440439224243}, {"id": 37, "seek": 21260, "start": 227.0, "end": 233.68, "text": " loopback and silent mode the node is totally disconnected from the bus and this will be", "tokens": [51084, 6367, 3207, 293, 12784, 4391, 264, 9984, 307, 3879, 29426, 490, 264, 1255, 293, 341, 486, 312, 51418], "temperature": 0.0, "avg_logprob": -0.20377891446337287, "compression_ratio": 1.9939759036144578, "no_speech_prob": 0.11591440439224243}, {"id": 38, "seek": 21260, "start": 233.68, "end": 238.12, "text": " the mode I will use for testing the driver.", "tokens": [51418, 264, 4391, 286, 486, 764, 337, 4997, 264, 6787, 13, 51640], "temperature": 0.0, "avg_logprob": -0.20377891446337287, "compression_ratio": 1.9939759036144578, "no_speech_prob": 0.11591440439224243}, {"id": 39, "seek": 21260, "start": 238.12, "end": 242.35999999999999, "text": " Let's now have a look to the roadmap.", "tokens": [51640, 961, 311, 586, 362, 257, 574, 281, 264, 35738, 13, 51852], "temperature": 0.0, "avg_logprob": -0.20377891446337287, "compression_ratio": 1.9939759036144578, "no_speech_prob": 0.11591440439224243}, {"id": 40, "seek": 24236, "start": 242.36, "end": 247.96, "text": " You have to modify the build root configuration and create the Linux driver for handling the", "tokens": [50364, 509, 362, 281, 16927, 264, 1322, 5593, 11694, 293, 1884, 264, 18734, 6787, 337, 13175, 264, 50644], "temperature": 0.0, "avg_logprob": -0.23250731939001928, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.0360078364610672}, {"id": 41, "seek": 24236, "start": 247.96, "end": 253.36, "text": " dual-can setup on the 469 disco board.", "tokens": [50644, 11848, 12, 7035, 8657, 322, 264, 17835, 24, 3622, 3150, 13, 50914], "temperature": 0.0, "avg_logprob": -0.23250731939001928, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.0360078364610672}, {"id": 42, "seek": 24236, "start": 253.36, "end": 259.76, "text": " Then create a new build root configuration and modify the Linux kernel in order to handle", "tokens": [50914, 1396, 1884, 257, 777, 1322, 5593, 11694, 293, 16927, 264, 18734, 28256, 294, 1668, 281, 4813, 51234], "temperature": 0.0, "avg_logprob": -0.23250731939001928, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.0360078364610672}, {"id": 43, "seek": 24236, "start": 259.76, "end": 267.12, "text": " the single-can for the 769 disco and in both cases we have to test the driver and upstream", "tokens": [51234, 264, 2167, 12, 7035, 337, 264, 24733, 24, 3622, 293, 294, 1293, 3331, 321, 362, 281, 1500, 264, 6787, 293, 33915, 51602], "temperature": 0.0, "avg_logprob": -0.23250731939001928, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.0360078364610672}, {"id": 44, "seek": 24236, "start": 267.12, "end": 268.48, "text": " the patches.", "tokens": [51602, 264, 26531, 13, 51670], "temperature": 0.0, "avg_logprob": -0.23250731939001928, "compression_ratio": 1.7015706806282722, "no_speech_prob": 0.0360078364610672}, {"id": 45, "seek": 26848, "start": 268.48, "end": 272.6, "text": " So let's start with the 469 disco board.", "tokens": [50364, 407, 718, 311, 722, 365, 264, 17835, 24, 3622, 3150, 13, 50570], "temperature": 0.0, "avg_logprob": -0.2557845115661621, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.1198948323726654}, {"id": 46, "seek": 26848, "start": 272.6, "end": 282.64000000000004, "text": " I started from the disco SD configuration and I enabled the networking and can bus support", "tokens": [50570, 286, 1409, 490, 264, 3622, 14638, 11694, 293, 286, 15172, 264, 17985, 293, 393, 1255, 1406, 51072], "temperature": 0.0, "avg_logprob": -0.2557845115661621, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.1198948323726654}, {"id": 47, "seek": 26848, "start": 282.64000000000004, "end": 285.08000000000004, "text": " in the Linux fragment file.", "tokens": [51072, 294, 264, 18734, 26424, 3991, 13, 51194], "temperature": 0.0, "avg_logprob": -0.2557845115661621, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.1198948323726654}, {"id": 48, "seek": 26848, "start": 285.08000000000004, "end": 291.88, "text": " When I put the Linux kernel in override in order to be able to create my driver I start", "tokens": [51194, 1133, 286, 829, 264, 18734, 28256, 294, 42321, 294, 1668, 281, 312, 1075, 281, 1884, 452, 6787, 286, 722, 51534], "temperature": 0.0, "avg_logprob": -0.2557845115661621, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.1198948323726654}, {"id": 49, "seek": 26848, "start": 291.88, "end": 294.08000000000004, "text": " with the implementation.", "tokens": [51534, 365, 264, 11420, 13, 51644], "temperature": 0.0, "avg_logprob": -0.2557845115661621, "compression_ratio": 1.5027624309392265, "no_speech_prob": 0.1198948323726654}, {"id": 50, "seek": 29408, "start": 294.08, "end": 300.91999999999996, "text": " The implementation I started from the documentation describing the properties to be added to the", "tokens": [50364, 440, 11420, 286, 1409, 490, 264, 14333, 16141, 264, 7221, 281, 312, 3869, 281, 264, 50706], "temperature": 0.0, "avg_logprob": -0.37405956492704506, "compression_ratio": 1.581151832460733, "no_speech_prob": 0.23036207258701324}, {"id": 51, "seek": 29408, "start": 300.91999999999996, "end": 305.8, "text": " device tree.", "tokens": [50706, 4302, 4230, 13, 50950], "temperature": 0.0, "avg_logprob": -0.37405956492704506, "compression_ratio": 1.581151832460733, "no_speech_prob": 0.23036207258701324}, {"id": 52, "seek": 29408, "start": 305.8, "end": 313.03999999999996, "text": " In addition to the common properties that you can find in a driver like a compatible", "tokens": [50950, 682, 4500, 281, 264, 2689, 7221, 300, 291, 393, 915, 294, 257, 6787, 411, 257, 18218, 51312], "temperature": 0.0, "avg_logprob": -0.37405956492704506, "compression_ratio": 1.581151832460733, "no_speech_prob": 0.23036207258701324}, {"id": 53, "seek": 29408, "start": 313.03999999999996, "end": 321.03999999999996, "text": " or a reg, I added the SD-can primary property in order to distinguish between master and", "tokens": [51312, 420, 257, 1121, 11, 286, 3869, 264, 14638, 12, 7035, 6194, 4707, 294, 1668, 281, 20206, 1296, 4505, 293, 51712], "temperature": 0.0, "avg_logprob": -0.37405956492704506, "compression_ratio": 1.581151832460733, "no_speech_prob": 0.23036207258701324}, {"id": 54, "seek": 29408, "start": 321.03999999999996, "end": 322.79999999999995, "text": " secondary channel.", "tokens": [51712, 11396, 2269, 13, 51800], "temperature": 0.0, "avg_logprob": -0.37405956492704506, "compression_ratio": 1.581151832460733, "no_speech_prob": 0.23036207258701324}, {"id": 55, "seek": 32280, "start": 322.8, "end": 330.16, "text": " Then I added the SD-can node as a reference to the shared memory.", "tokens": [50364, 1396, 286, 3869, 264, 14638, 12, 7035, 9984, 382, 257, 6408, 281, 264, 5507, 4675, 13, 50732], "temperature": 0.0, "avg_logprob": -0.34272592717950995, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.12323934584856033}, {"id": 56, "seek": 32280, "start": 330.16, "end": 340.52, "text": " Then I added the can node and the can node to the platform device tree.", "tokens": [50732, 1396, 286, 3869, 264, 393, 9984, 293, 264, 393, 9984, 281, 264, 3663, 4302, 4230, 13, 51250], "temperature": 0.0, "avg_logprob": -0.34272592717950995, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.12323934584856033}, {"id": 57, "seek": 32280, "start": 340.52, "end": 350.2, "text": " I configured the pin mix control about the pins owned by the can controller.", "tokens": [51250, 286, 30538, 264, 5447, 2890, 1969, 466, 264, 16392, 11684, 538, 264, 393, 10561, 13, 51734], "temperature": 0.0, "avg_logprob": -0.34272592717950995, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.12323934584856033}, {"id": 58, "seek": 35020, "start": 350.2, "end": 357.44, "text": " And finally I added to the device tree of the board the I enabled in the device tree", "tokens": [50364, 400, 2721, 286, 3869, 281, 264, 4302, 4230, 295, 264, 3150, 264, 286, 15172, 294, 264, 4302, 4230, 50726], "temperature": 0.0, "avg_logprob": -0.20467770617941153, "compression_ratio": 1.7294117647058824, "no_speech_prob": 0.02589288540184498}, {"id": 59, "seek": 35020, "start": 357.44, "end": 365.84, "text": " of the board the can nodes and I disabled the peripherals with pins shared with the can", "tokens": [50726, 295, 264, 3150, 264, 393, 13891, 293, 286, 15191, 264, 26807, 1124, 365, 16392, 5507, 365, 264, 393, 51146], "temperature": 0.0, "avg_logprob": -0.20467770617941153, "compression_ratio": 1.7294117647058824, "no_speech_prob": 0.02589288540184498}, {"id": 60, "seek": 35020, "start": 365.84, "end": 371.0, "text": " controller in order to avoid conflicts.", "tokens": [51146, 10561, 294, 1668, 281, 5042, 19807, 13, 51404], "temperature": 0.0, "avg_logprob": -0.20467770617941153, "compression_ratio": 1.7294117647058824, "no_speech_prob": 0.02589288540184498}, {"id": 61, "seek": 35020, "start": 371.0, "end": 379.4, "text": " About the source code I opted for simplicity for the first version of the driver.", "tokens": [51404, 7769, 264, 4009, 3089, 286, 40768, 337, 25632, 337, 264, 700, 3037, 295, 264, 6787, 13, 51824], "temperature": 0.0, "avg_logprob": -0.20467770617941153, "compression_ratio": 1.7294117647058824, "no_speech_prob": 0.02589288540184498}, {"id": 62, "seek": 37940, "start": 379.4, "end": 388.2, "text": " So I in the driver handles all the free mailbox for transmission but in case of reception", "tokens": [50364, 407, 286, 294, 264, 6787, 18722, 439, 264, 1737, 43602, 337, 11574, 457, 294, 1389, 295, 21682, 50804], "temperature": 0.0, "avg_logprob": -0.3226870903602013, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.08317282795906067}, {"id": 63, "seek": 37940, "start": 388.2, "end": 391.91999999999996, "text": " handles only 5 for 0.", "tokens": [50804, 18722, 787, 1025, 337, 1958, 13, 50990], "temperature": 0.0, "avg_logprob": -0.3226870903602013, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.08317282795906067}, {"id": 64, "seek": 37940, "start": 391.91999999999996, "end": 398.23999999999995, "text": " And about the filters I hardwired the assignment of the filters.", "tokens": [50990, 400, 466, 264, 15995, 286, 1152, 86, 1824, 264, 15187, 295, 264, 15995, 13, 51306], "temperature": 0.0, "avg_logprob": -0.3226870903602013, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.08317282795906067}, {"id": 65, "seek": 37940, "start": 398.23999999999995, "end": 406.88, "text": " So I assigned the filter 0 to the primary channel and filter 14 to the secondary channel.", "tokens": [51306, 407, 286, 13279, 264, 6608, 1958, 281, 264, 6194, 2269, 293, 6608, 3499, 281, 264, 11396, 2269, 13, 51738], "temperature": 0.0, "avg_logprob": -0.3226870903602013, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.08317282795906067}, {"id": 66, "seek": 40688, "start": 406.88, "end": 417.96, "text": " And in both cases I configured the filter register in order that all incoming messages", "tokens": [50364, 400, 294, 1293, 3331, 286, 30538, 264, 6608, 7280, 294, 1668, 300, 439, 22341, 7897, 50918], "temperature": 0.0, "avg_logprob": -0.2435877569790544, "compression_ratio": 1.5337423312883436, "no_speech_prob": 0.06524059176445007}, {"id": 67, "seek": 40688, "start": 417.96, "end": 419.08, "text": " were accepted.", "tokens": [50918, 645, 9035, 13, 50974], "temperature": 0.0, "avg_logprob": -0.2435877569790544, "compression_ratio": 1.5337423312883436, "no_speech_prob": 0.06524059176445007}, {"id": 68, "seek": 40688, "start": 419.08, "end": 424.08, "text": " So in this way disabling these particular features.", "tokens": [50974, 407, 294, 341, 636, 717, 20112, 613, 1729, 4122, 13, 51224], "temperature": 0.0, "avg_logprob": -0.2435877569790544, "compression_ratio": 1.5337423312883436, "no_speech_prob": 0.06524059176445007}, {"id": 69, "seek": 40688, "start": 424.08, "end": 436.04, "text": " And for the interrupts I handled all the interrupt except for the interrupt on the 5.1 reception", "tokens": [51224, 400, 337, 264, 12729, 82, 286, 18033, 439, 264, 12729, 3993, 337, 264, 12729, 322, 264, 1025, 13, 16, 21682, 51822], "temperature": 0.0, "avg_logprob": -0.2435877569790544, "compression_ratio": 1.5337423312883436, "no_speech_prob": 0.06524059176445007}, {"id": 70, "seek": 43604, "start": 436.04, "end": 441.48, "text": " that was related to the 5.1 that is disabled.", "tokens": [50364, 300, 390, 4077, 281, 264, 1025, 13, 16, 300, 307, 15191, 13, 50636], "temperature": 0.0, "avg_logprob": -0.25005929366402, "compression_ratio": 1.5182926829268293, "no_speech_prob": 0.036555610597133636}, {"id": 71, "seek": 43604, "start": 441.48, "end": 444.52000000000004, "text": " So now we are on the testing.", "tokens": [50636, 407, 586, 321, 366, 322, 264, 4997, 13, 50788], "temperature": 0.0, "avg_logprob": -0.25005929366402, "compression_ratio": 1.5182926829268293, "no_speech_prob": 0.036555610597133636}, {"id": 72, "seek": 43604, "start": 444.52000000000004, "end": 449.44, "text": " I split the procedure of testing the driver in two steps.", "tokens": [50788, 286, 7472, 264, 10747, 295, 4997, 264, 6787, 294, 732, 4439, 13, 51034], "temperature": 0.0, "avg_logprob": -0.25005929366402, "compression_ratio": 1.5182926829268293, "no_speech_prob": 0.036555610597133636}, {"id": 73, "seek": 43604, "start": 449.44, "end": 457.56, "text": " In the first steps I checked the DMS output in order to verify that there were not issues", "tokens": [51034, 682, 264, 700, 4439, 286, 10033, 264, 413, 10288, 5598, 294, 1668, 281, 16888, 300, 456, 645, 406, 2663, 51440], "temperature": 0.0, "avg_logprob": -0.25005929366402, "compression_ratio": 1.5182926829268293, "no_speech_prob": 0.036555610597133636}, {"id": 74, "seek": 43604, "start": 457.56, "end": 460.28000000000003, "text": " about the driver probing.", "tokens": [51440, 466, 264, 6787, 1239, 278, 13, 51576], "temperature": 0.0, "avg_logprob": -0.25005929366402, "compression_ratio": 1.5182926829268293, "no_speech_prob": 0.036555610597133636}, {"id": 75, "seek": 46028, "start": 460.28, "end": 469.47999999999996, "text": " Then I tried to set up the can interface enabling the loop and listen mode and verify that the", "tokens": [50364, 1396, 286, 3031, 281, 992, 493, 264, 393, 9226, 23148, 264, 6367, 293, 2140, 4391, 293, 16888, 300, 264, 50824], "temperature": 0.0, "avg_logprob": -0.20563156878361938, "compression_ratio": 1.4508670520231215, "no_speech_prob": 0.08652783930301666}, {"id": 76, "seek": 46028, "start": 469.47999999999996, "end": 471.76, "text": " transmitted messages were also received.", "tokens": [50824, 25355, 7897, 645, 611, 4613, 13, 50938], "temperature": 0.0, "avg_logprob": -0.20563156878361938, "compression_ratio": 1.4508670520231215, "no_speech_prob": 0.08652783930301666}, {"id": 77, "seek": 46028, "start": 471.76, "end": 480.08, "text": " But in this case I realized that the tools I had to use to test the driver didn't compile", "tokens": [50938, 583, 294, 341, 1389, 286, 5334, 300, 264, 3873, 286, 632, 281, 764, 281, 1500, 264, 6787, 994, 380, 31413, 51354], "temperature": 0.0, "avg_logprob": -0.20563156878361938, "compression_ratio": 1.4508670520231215, "no_speech_prob": 0.08652783930301666}, {"id": 78, "seek": 46028, "start": 480.08, "end": 484.71999999999997, "text": " on platforms without MMU.", "tokens": [51354, 322, 9473, 1553, 34191, 52, 13, 51586], "temperature": 0.0, "avg_logprob": -0.20563156878361938, "compression_ratio": 1.4508670520231215, "no_speech_prob": 0.08652783930301666}, {"id": 79, "seek": 48472, "start": 484.72, "end": 492.0, "text": " The point is that the fork system doesn't work on such as Sipson.", "tokens": [50364, 440, 935, 307, 300, 264, 17716, 1185, 1177, 380, 589, 322, 1270, 382, 318, 2600, 266, 13, 50728], "temperature": 0.0, "avg_logprob": -0.29280561208724976, "compression_ratio": 1.4037267080745341, "no_speech_prob": 0.17837567627429962}, {"id": 80, "seek": 48472, "start": 492.0, "end": 499.96000000000004, "text": " And the table clearly shows that only the busybox package is able to be compiled on a", "tokens": [50728, 400, 264, 3199, 4448, 3110, 300, 787, 264, 5856, 4995, 7372, 307, 1075, 281, 312, 36548, 322, 257, 51126], "temperature": 0.0, "avg_logprob": -0.29280561208724976, "compression_ratio": 1.4037267080745341, "no_speech_prob": 0.17837567627429962}, {"id": 81, "seek": 48472, "start": 499.96000000000004, "end": 501.04, "text": " SAC system.", "tokens": [51126, 318, 4378, 1185, 13, 51180], "temperature": 0.0, "avg_logprob": -0.29280561208724976, "compression_ratio": 1.4037267080745341, "no_speech_prob": 0.17837567627429962}, {"id": 82, "seek": 48472, "start": 501.04, "end": 508.64000000000004, "text": " But its IP link command is not able to set up a can interface.", "tokens": [51180, 583, 1080, 8671, 2113, 5622, 307, 406, 1075, 281, 992, 493, 257, 393, 9226, 13, 51560], "temperature": 0.0, "avg_logprob": -0.29280561208724976, "compression_ratio": 1.4037267080745341, "no_speech_prob": 0.17837567627429962}, {"id": 83, "seek": 50864, "start": 508.64, "end": 517.88, "text": " So I had to decide whether to patch busybox, whether to patch IP root 2 or add in support", "tokens": [50364, 407, 286, 632, 281, 4536, 1968, 281, 9972, 5856, 4995, 11, 1968, 281, 9972, 8671, 5593, 568, 420, 909, 294, 1406, 50826], "temperature": 0.0, "avg_logprob": -0.2959622625094741, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.09360280632972717}, {"id": 84, "seek": 50864, "start": 517.88, "end": 520.48, "text": " for can interface to busybox.", "tokens": [50826, 337, 393, 9226, 281, 5856, 4995, 13, 50956], "temperature": 0.0, "avg_logprob": -0.2959622625094741, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.09360280632972717}, {"id": 85, "seek": 50864, "start": 520.48, "end": 528.4, "text": " I opted for busybox because it was already used in the system and farmed because on a", "tokens": [50956, 286, 40768, 337, 5856, 4995, 570, 309, 390, 1217, 1143, 294, 264, 1185, 293, 1400, 1912, 570, 322, 257, 51352], "temperature": 0.0, "avg_logprob": -0.2959622625094741, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.09360280632972717}, {"id": 86, "seek": 50864, "start": 528.4, "end": 534.96, "text": " system with limited resources using lightweight packages is preferred.", "tokens": [51352, 1185, 365, 5567, 3593, 1228, 22052, 17401, 307, 16494, 13, 51680], "temperature": 0.0, "avg_logprob": -0.2959622625094741, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.09360280632972717}, {"id": 87, "seek": 53496, "start": 534.96, "end": 543.24, "text": " Let's go also on the patches I had to apply.", "tokens": [50364, 961, 311, 352, 611, 322, 264, 26531, 286, 632, 281, 3079, 13, 50778], "temperature": 0.0, "avg_logprob": -0.306060607616718, "compression_ratio": 1.5036496350364963, "no_speech_prob": 0.07935061305761337}, {"id": 88, "seek": 53496, "start": 543.24, "end": 549.6800000000001, "text": " So in this way I updated the build root configuration in order to enable the can interface package.", "tokens": [50778, 407, 294, 341, 636, 286, 10588, 264, 1322, 5593, 11694, 294, 1668, 281, 9528, 264, 393, 9226, 7372, 13, 51100], "temperature": 0.0, "avg_logprob": -0.306060607616718, "compression_ratio": 1.5036496350364963, "no_speech_prob": 0.07935061305761337}, {"id": 89, "seek": 53496, "start": 549.6800000000001, "end": 555.9200000000001, "text": " I put in override both the busybox and can interface package.", "tokens": [51100, 286, 829, 294, 42321, 1293, 264, 5856, 4995, 293, 393, 9226, 7372, 13, 51412], "temperature": 0.0, "avg_logprob": -0.306060607616718, "compression_ratio": 1.5036496350364963, "no_speech_prob": 0.07935061305761337}, {"id": 90, "seek": 55592, "start": 555.92, "end": 564.64, "text": " And so I was able to create an IP link can applet to add to busybox and to patch can", "tokens": [50364, 400, 370, 286, 390, 1075, 281, 1884, 364, 8671, 2113, 393, 724, 2631, 281, 909, 281, 5856, 4995, 293, 281, 9972, 393, 50800], "temperature": 0.0, "avg_logprob": -0.23569629231437308, "compression_ratio": 1.5, "no_speech_prob": 0.324014812707901}, {"id": 91, "seek": 55592, "start": 564.64, "end": 573.0799999999999, "text": " interface in order so that I didn't compile the program using the fork function.", "tokens": [50800, 9226, 294, 1668, 370, 300, 286, 994, 380, 31413, 264, 1461, 1228, 264, 17716, 2445, 13, 51222], "temperature": 0.0, "avg_logprob": -0.23569629231437308, "compression_ratio": 1.5, "no_speech_prob": 0.324014812707901}, {"id": 92, "seek": 55592, "start": 573.0799999999999, "end": 581.36, "text": " And fortunately the can dump can send application and don't use these functions.", "tokens": [51222, 400, 25511, 264, 393, 11430, 393, 2845, 3861, 293, 500, 380, 764, 613, 6828, 13, 51636], "temperature": 0.0, "avg_logprob": -0.23569629231437308, "compression_ratio": 1.5, "no_speech_prob": 0.324014812707901}, {"id": 93, "seek": 58136, "start": 581.36, "end": 590.72, "text": " So in this way after applying the patches I was able to set up the can interface and", "tokens": [50364, 407, 294, 341, 636, 934, 9275, 264, 26531, 286, 390, 1075, 281, 992, 493, 264, 393, 9226, 293, 50832], "temperature": 0.0, "avg_logprob": -0.18856838475102963, "compression_ratio": 1.3970588235294117, "no_speech_prob": 0.06820116192102432}, {"id": 94, "seek": 58136, "start": 590.72, "end": 599.16, "text": " verify that the transmitted messages were also received.", "tokens": [50832, 16888, 300, 264, 25355, 7897, 645, 611, 4613, 13, 51254], "temperature": 0.0, "avg_logprob": -0.18856838475102963, "compression_ratio": 1.3970588235294117, "no_speech_prob": 0.06820116192102432}, {"id": 95, "seek": 58136, "start": 599.16, "end": 605.0, "text": " After the test let's talk about the code review.", "tokens": [51254, 2381, 264, 1500, 718, 311, 751, 466, 264, 3089, 3131, 13, 51546], "temperature": 0.0, "avg_logprob": -0.18856838475102963, "compression_ratio": 1.3970588235294117, "no_speech_prob": 0.06820116192102432}, {"id": 96, "seek": 60500, "start": 605.0, "end": 612.28, "text": " The code review reached version 10 so many things has been changed and also has been", "tokens": [50364, 440, 3089, 3131, 6488, 3037, 1266, 370, 867, 721, 575, 668, 3105, 293, 611, 575, 668, 50728], "temperature": 0.0, "avg_logprob": -0.23673382927389705, "compression_ratio": 1.5533980582524272, "no_speech_prob": 0.7781457901000977}, {"id": 97, "seek": 60500, "start": 612.28, "end": 621.6, "text": " fixed but among them some I think are really interesting like the use of the Cisco node", "tokens": [50728, 6806, 457, 3654, 552, 512, 286, 519, 366, 534, 1880, 411, 264, 764, 295, 264, 38528, 9984, 51194], "temperature": 0.0, "avg_logprob": -0.23673382927389705, "compression_ratio": 1.5533980582524272, "no_speech_prob": 0.7781457901000977}, {"id": 98, "seek": 60500, "start": 621.6, "end": 627.8, "text": " for handling the shared memory, the replacement of the master and slave terms with primary", "tokens": [51194, 337, 13175, 264, 5507, 4675, 11, 264, 14419, 295, 264, 4505, 293, 14777, 2115, 365, 6194, 51504], "temperature": 0.0, "avg_logprob": -0.23673382927389705, "compression_ratio": 1.5533980582524272, "no_speech_prob": 0.7781457901000977}, {"id": 99, "seek": 60500, "start": 627.8, "end": 633.8, "text": " and secondary according to the kernel coding guidelines.", "tokens": [51504, 293, 11396, 4650, 281, 264, 28256, 17720, 12470, 13, 51804], "temperature": 0.0, "avg_logprob": -0.23673382927389705, "compression_ratio": 1.5533980582524272, "no_speech_prob": 0.7781457901000977}, {"id": 100, "seek": 63380, "start": 633.8, "end": 642.68, "text": " The use of the field get field prep macros for accessing the register bitfills in order", "tokens": [50364, 440, 764, 295, 264, 2519, 483, 2519, 2666, 7912, 2635, 337, 26440, 264, 7280, 857, 69, 2565, 294, 1668, 50808], "temperature": 0.0, "avg_logprob": -0.3002257687704904, "compression_ratio": 1.6223776223776223, "no_speech_prob": 0.07612358778715134}, {"id": 101, "seek": 63380, "start": 642.68, "end": 649.5999999999999, "text": " to standardize the code for accessing the register and so reduce the errors.", "tokens": [50808, 281, 3832, 1125, 264, 3089, 337, 26440, 264, 7280, 293, 370, 5407, 264, 13603, 13, 51154], "temperature": 0.0, "avg_logprob": -0.3002257687704904, "compression_ratio": 1.6223776223776223, "no_speech_prob": 0.07612358778715134}, {"id": 102, "seek": 63380, "start": 649.5999999999999, "end": 656.12, "text": " And finally the use of a rackback function to access shared memory.", "tokens": [51154, 400, 2721, 264, 764, 295, 257, 14788, 3207, 2445, 281, 2105, 5507, 4675, 13, 51480], "temperature": 0.0, "avg_logprob": -0.3002257687704904, "compression_ratio": 1.6223776223776223, "no_speech_prob": 0.07612358778715134}, {"id": 103, "seek": 65612, "start": 656.12, "end": 664.64, "text": " After the patches were upstreamed I started so with adding the single can handling for", "tokens": [50364, 2381, 264, 26531, 645, 33915, 292, 286, 1409, 370, 365, 5127, 264, 2167, 393, 13175, 337, 50790], "temperature": 0.0, "avg_logprob": -0.3363745855906653, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.7915204167366028}, {"id": 104, "seek": 65612, "start": 664.64, "end": 665.64, "text": " the driver.", "tokens": [50790, 264, 6787, 13, 50840], "temperature": 0.0, "avg_logprob": -0.3363745855906653, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.7915204167366028}, {"id": 105, "seek": 65612, "start": 665.64, "end": 674.44, "text": " So I create a new configuration inside build root and just like the 469 disco I created", "tokens": [50840, 407, 286, 1884, 257, 777, 11694, 1854, 1322, 5593, 293, 445, 411, 264, 17835, 24, 3622, 286, 2942, 51280], "temperature": 0.0, "avg_logprob": -0.3363745855906653, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.7915204167366028}, {"id": 106, "seek": 65612, "start": 674.44, "end": 680.6, "text": " a configuration where both the Linux can the root file system and the device tree were", "tokens": [51280, 257, 11694, 689, 1293, 264, 18734, 393, 264, 5593, 3991, 1185, 293, 264, 4302, 4230, 645, 51588], "temperature": 0.0, "avg_logprob": -0.3363745855906653, "compression_ratio": 1.5166666666666666, "no_speech_prob": 0.7915204167366028}, {"id": 107, "seek": 68060, "start": 680.6, "end": 688.6, "text": " stored because were used only for me to test the driver.", "tokens": [50364, 12187, 570, 645, 1143, 787, 337, 385, 281, 1500, 264, 6787, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24341324397495814, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.19322705268859863}, {"id": 108, "seek": 68060, "start": 688.6, "end": 700.72, "text": " The changes required for handling the single peripheral configuration were quite minimal", "tokens": [50764, 440, 2962, 4739, 337, 13175, 264, 2167, 40235, 11694, 645, 1596, 13206, 51370], "temperature": 0.0, "avg_logprob": -0.24341324397495814, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.19322705268859863}, {"id": 109, "seek": 68060, "start": 700.72, "end": 710.0, "text": " but overall without modifying the driver design and more or less these are the changes I had", "tokens": [51370, 457, 4787, 1553, 42626, 264, 6787, 1715, 293, 544, 420, 1570, 613, 366, 264, 2962, 286, 632, 51834], "temperature": 0.0, "avg_logprob": -0.24341324397495814, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.19322705268859863}, {"id": 110, "seek": 71000, "start": 710.0, "end": 714.92, "text": " to apply to the driver.", "tokens": [50364, 281, 3079, 281, 264, 6787, 13, 50610], "temperature": 0.0, "avg_logprob": -0.24737716087928185, "compression_ratio": 1.5086705202312138, "no_speech_prob": 0.2279018759727478}, {"id": 111, "seek": 71000, "start": 714.92, "end": 722.32, "text": " About the testing of the driver I used the same procedure I used before so I checked for", "tokens": [50610, 7769, 264, 4997, 295, 264, 6787, 286, 1143, 264, 912, 10747, 286, 1143, 949, 370, 286, 10033, 337, 50980], "temperature": 0.0, "avg_logprob": -0.24737716087928185, "compression_ratio": 1.5086705202312138, "no_speech_prob": 0.2279018759727478}, {"id": 112, "seek": 71000, "start": 722.32, "end": 733.52, "text": " the DMS output and I set up the free can interfaces and once again I try to verify that the transmitted", "tokens": [50980, 264, 413, 10288, 5598, 293, 286, 992, 493, 264, 1737, 393, 28416, 293, 1564, 797, 286, 853, 281, 16888, 300, 264, 25355, 51540], "temperature": 0.0, "avg_logprob": -0.24737716087928185, "compression_ratio": 1.5086705202312138, "no_speech_prob": 0.2279018759727478}, {"id": 113, "seek": 71000, "start": 733.52, "end": 738.28, "text": " messages were also received in a proper way.", "tokens": [51540, 7897, 645, 611, 4613, 294, 257, 2296, 636, 13, 51778], "temperature": 0.0, "avg_logprob": -0.24737716087928185, "compression_ratio": 1.5086705202312138, "no_speech_prob": 0.2279018759727478}, {"id": 114, "seek": 73828, "start": 738.28, "end": 747.52, "text": " And even in this case with the code review even if it didn't take long brought out some", "tokens": [50364, 400, 754, 294, 341, 1389, 365, 264, 3089, 3131, 754, 498, 309, 994, 380, 747, 938, 3038, 484, 512, 50826], "temperature": 0.0, "avg_logprob": -0.20670976241429648, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.14424213767051697}, {"id": 115, "seek": 73828, "start": 747.52, "end": 751.48, "text": " interesting insights.", "tokens": [50826, 1880, 14310, 13, 51024], "temperature": 0.0, "avg_logprob": -0.20670976241429648, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.14424213767051697}, {"id": 116, "seek": 73828, "start": 751.48, "end": 760.04, "text": " The maintainer's idea was to change the source code as little as possible so he suggested", "tokens": [51024, 440, 6909, 260, 311, 1558, 390, 281, 1319, 264, 4009, 3089, 382, 707, 382, 1944, 370, 415, 10945, 51452], "temperature": 0.0, "avg_logprob": -0.20670976241429648, "compression_ratio": 1.4316546762589928, "no_speech_prob": 0.14424213767051697}, {"id": 117, "seek": 76004, "start": 760.04, "end": 769.68, "text": " me to use the Cisco node also for the primary channel even if there isn't a shared memory", "tokens": [50364, 385, 281, 764, 264, 38528, 9984, 611, 337, 264, 6194, 2269, 754, 498, 456, 1943, 380, 257, 5507, 4675, 50846], "temperature": 0.0, "avg_logprob": -0.22429893130347842, "compression_ratio": 1.5625, "no_speech_prob": 0.6806698441505432}, {"id": 118, "seek": 76004, "start": 769.68, "end": 771.68, "text": " for it.", "tokens": [50846, 337, 309, 13, 50946], "temperature": 0.0, "avg_logprob": -0.22429893130347842, "compression_ratio": 1.5625, "no_speech_prob": 0.6806698441505432}, {"id": 119, "seek": 76004, "start": 771.68, "end": 779.88, "text": " And also to use the STCAN secondary property to distinguish between primary and secondary", "tokens": [50946, 400, 611, 281, 764, 264, 4904, 34, 1770, 11396, 4707, 281, 20206, 1296, 6194, 293, 11396, 51356], "temperature": 0.0, "avg_logprob": -0.22429893130347842, "compression_ratio": 1.5625, "no_speech_prob": 0.6806698441505432}, {"id": 120, "seek": 76004, "start": 779.88, "end": 787.28, "text": " channel even if the change was not backward compatible with the dual can configuration.", "tokens": [51356, 2269, 754, 498, 264, 1319, 390, 406, 23897, 18218, 365, 264, 11848, 393, 11694, 13, 51726], "temperature": 0.0, "avg_logprob": -0.22429893130347842, "compression_ratio": 1.5625, "no_speech_prob": 0.6806698441505432}, {"id": 121, "seek": 78728, "start": 787.28, "end": 797.28, "text": " But it didn't matter since the driver wasn't yet in a stable version of the kernel.", "tokens": [50364, 583, 309, 994, 380, 1871, 1670, 264, 6787, 2067, 380, 1939, 294, 257, 8351, 3037, 295, 264, 28256, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24429590660229064, "compression_ratio": 1.4842767295597483, "no_speech_prob": 0.11045566946268082}, {"id": 122, "seek": 78728, "start": 797.28, "end": 804.64, "text": " Then have a look at the merge problem we had with this series.", "tokens": [50864, 1396, 362, 257, 574, 412, 264, 22183, 1154, 321, 632, 365, 341, 2638, 13, 51232], "temperature": 0.0, "avg_logprob": -0.24429590660229064, "compression_ratio": 1.4842767295597483, "no_speech_prob": 0.11045566946268082}, {"id": 123, "seek": 78728, "start": 804.64, "end": 811.68, "text": " Due to a misunderstanding in the application in applying the patches to the main line the", "tokens": [51232, 18980, 281, 257, 29227, 294, 264, 3861, 294, 9275, 264, 26531, 281, 264, 2135, 1622, 264, 51584], "temperature": 0.0, "avg_logprob": -0.24429590660229064, "compression_ratio": 1.4842767295597483, "no_speech_prob": 0.11045566946268082}, {"id": 124, "seek": 81168, "start": 811.68, "end": 818.88, "text": " order of application for patches A and B was inverted causing a failure in the compilation", "tokens": [50364, 1668, 295, 3861, 337, 26531, 316, 293, 363, 390, 38969, 9853, 257, 7763, 294, 264, 40261, 50724], "temperature": 0.0, "avg_logprob": -0.15819399697440012, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.02549956552684307}, {"id": 125, "seek": 81168, "start": 818.88, "end": 827.9599999999999, "text": " of the device tree that was fixed by reverting the patch B.", "tokens": [50724, 295, 264, 4302, 4230, 300, 390, 6806, 538, 18438, 783, 264, 9972, 363, 13, 51178], "temperature": 0.0, "avg_logprob": -0.15819399697440012, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.02549956552684307}, {"id": 126, "seek": 81168, "start": 827.9599999999999, "end": 838.3199999999999, "text": " So it was a situation not so good for me and also for the maintainers because everybody", "tokens": [51178, 407, 309, 390, 257, 2590, 406, 370, 665, 337, 385, 293, 611, 337, 264, 6909, 433, 570, 2201, 51696], "temperature": 0.0, "avg_logprob": -0.15819399697440012, "compression_ratio": 1.515923566878981, "no_speech_prob": 0.02549956552684307}, {"id": 127, "seek": 83832, "start": 838.32, "end": 841.88, "text": " got really nervous.", "tokens": [50364, 658, 534, 6296, 13, 50542], "temperature": 0.0, "avg_logprob": -0.20916180691476596, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.1421157270669937}, {"id": 128, "seek": 83832, "start": 841.88, "end": 851.48, "text": " So there was one last question to ask to the maintainer of the CANSAP system that is what", "tokens": [50542, 407, 456, 390, 472, 1036, 1168, 281, 1029, 281, 264, 6909, 260, 295, 264, 22931, 50, 4715, 1185, 300, 307, 437, 51022], "temperature": 0.0, "avg_logprob": -0.20916180691476596, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.1421157270669937}, {"id": 129, "seek": 83832, "start": 851.48, "end": 857.88, "text": " to do with the patches I had to apply to the tools used for testing the driver.", "tokens": [51022, 281, 360, 365, 264, 26531, 286, 632, 281, 3079, 281, 264, 3873, 1143, 337, 4997, 264, 6787, 13, 51342], "temperature": 0.0, "avg_logprob": -0.20916180691476596, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.1421157270669937}, {"id": 130, "seek": 83832, "start": 857.88, "end": 859.6800000000001, "text": " And this was the response.", "tokens": [51342, 400, 341, 390, 264, 4134, 13, 51432], "temperature": 0.0, "avg_logprob": -0.20916180691476596, "compression_ratio": 1.4210526315789473, "no_speech_prob": 0.1421157270669937}, {"id": 131, "seek": 85968, "start": 859.68, "end": 869.4, "text": " So I upstreamed everything including a new further implementation of the IP link command", "tokens": [50364, 407, 286, 33915, 292, 1203, 3009, 257, 777, 3052, 11420, 295, 264, 8671, 2113, 5622, 50850], "temperature": 0.0, "avg_logprob": -0.24405410243015663, "compression_ratio": 1.4610389610389611, "no_speech_prob": 0.6398440599441528}, {"id": 132, "seek": 85968, "start": 869.4, "end": 876.16, "text": " using the library that is a lightweight library.", "tokens": [50850, 1228, 264, 6405, 300, 307, 257, 22052, 6405, 13, 51188], "temperature": 0.0, "avg_logprob": -0.24405410243015663, "compression_ratio": 1.4610389610389611, "no_speech_prob": 0.6398440599441528}, {"id": 133, "seek": 85968, "start": 876.16, "end": 883.4399999999999, "text": " I was quite curious about the use of this library so I ran some tests on it and finally", "tokens": [51188, 286, 390, 1596, 6369, 466, 264, 764, 295, 341, 6405, 370, 286, 5872, 512, 6921, 322, 309, 293, 2721, 51552], "temperature": 0.0, "avg_logprob": -0.24405410243015663, "compression_ratio": 1.4610389610389611, "no_speech_prob": 0.6398440599441528}, {"id": 134, "seek": 88344, "start": 883.44, "end": 894.7600000000001, "text": " I arrived to a further implementation of the IP link CAN command after the busybox one.", "tokens": [50364, 286, 6678, 281, 257, 3052, 11420, 295, 264, 8671, 2113, 22931, 5622, 934, 264, 5856, 4995, 472, 13, 50930], "temperature": 0.0, "avg_logprob": -0.2676700538312885, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.16177287697792053}, {"id": 135, "seek": 88344, "start": 894.7600000000001, "end": 902.5200000000001, "text": " So to sum up I upstreamed 12 patches for the Linux kernel.", "tokens": [50930, 407, 281, 2408, 493, 286, 33915, 292, 2272, 26531, 337, 264, 18734, 28256, 13, 51318], "temperature": 0.0, "avg_logprob": -0.2676700538312885, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.16177287697792053}, {"id": 136, "seek": 88344, "start": 902.5200000000001, "end": 909.4000000000001, "text": " One patch for busybox, one patch for canutes and three patches for the libmnl.", "tokens": [51318, 1485, 9972, 337, 5856, 4995, 11, 472, 9972, 337, 393, 1819, 293, 1045, 26531, 337, 264, 22854, 76, 77, 75, 13, 51662], "temperature": 0.0, "avg_logprob": -0.2676700538312885, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.16177287697792053}, {"id": 137, "seek": 88344, "start": 909.4000000000001, "end": 913.08, "text": " And then seven patches for bitroot.", "tokens": [51662, 400, 550, 3407, 26531, 337, 857, 44147, 13, 51846], "temperature": 0.0, "avg_logprob": -0.2676700538312885, "compression_ratio": 1.535294117647059, "no_speech_prob": 0.16177287697792053}, {"id": 138, "seek": 91308, "start": 913.08, "end": 918.08, "text": " All the patches were accepted except for the one of busybox.", "tokens": [50364, 1057, 264, 26531, 645, 9035, 3993, 337, 264, 472, 295, 5856, 4995, 13, 50614], "temperature": 0.0, "avg_logprob": -0.22599744085055679, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.2035675197839737}, {"id": 139, "seek": 91308, "start": 918.08, "end": 925.8000000000001, "text": " I resend the patch multiple times but I didn't get any answer from the maintainer.", "tokens": [50614, 286, 725, 521, 264, 9972, 3866, 1413, 457, 286, 994, 380, 483, 604, 1867, 490, 264, 6909, 260, 13, 51000], "temperature": 0.0, "avg_logprob": -0.22599744085055679, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.2035675197839737}, {"id": 140, "seek": 91308, "start": 925.8000000000001, "end": 934.6800000000001, "text": " So if you think that it could be useful for busybox to support the setup of a CAN interface", "tokens": [51000, 407, 498, 291, 519, 300, 309, 727, 312, 4420, 337, 5856, 4995, 281, 1406, 264, 8657, 295, 257, 22931, 9226, 51444], "temperature": 0.0, "avg_logprob": -0.22599744085055679, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.2035675197839737}, {"id": 141, "seek": 91308, "start": 934.6800000000001, "end": 938.32, "text": " please review the patch.", "tokens": [51444, 1767, 3131, 264, 9972, 13, 51626], "temperature": 0.0, "avg_logprob": -0.22599744085055679, "compression_ratio": 1.4772727272727273, "no_speech_prob": 0.2035675197839737}, {"id": 142, "seek": 93832, "start": 938.32, "end": 955.0400000000001, "text": " Finally, finally for people who are interested I uploaded the buildroot project of my personal", "tokens": [50364, 6288, 11, 2721, 337, 561, 567, 366, 3102, 286, 17135, 264, 1322, 44147, 1716, 295, 452, 2973, 51200], "temperature": 0.0, "avg_logprob": -0.38854668140411375, "compression_ratio": 1.40625, "no_speech_prob": 0.1484641283750534}, {"id": 143, "seek": 93832, "start": 955.0400000000001, "end": 962.2800000000001, "text": " GitHub account and these are the commands you can use to build the images to store on", "tokens": [51200, 23331, 2696, 293, 613, 366, 264, 16901, 291, 393, 764, 281, 1322, 264, 5267, 281, 3531, 322, 51562], "temperature": 0.0, "avg_logprob": -0.38854668140411375, "compression_ratio": 1.40625, "no_speech_prob": 0.1484641283750534}, {"id": 144, "seek": 96228, "start": 962.28, "end": 970.72, "text": " the development board and to run tests for accessing the CAN interface.", "tokens": [50364, 264, 3250, 3150, 293, 281, 1190, 6921, 337, 26440, 264, 22931, 9226, 13, 50786], "temperature": 0.0, "avg_logprob": -0.5647293090820312, "compression_ratio": 1.0714285714285714, "no_speech_prob": 0.23326396942138672}, {"id": 145, "seek": 96228, "start": 970.72, "end": 972.72, "text": " That's all for me.", "tokens": [50786, 663, 311, 439, 337, 385, 13, 50886], "temperature": 0.0, "avg_logprob": -0.5647293090820312, "compression_ratio": 1.0714285714285714, "no_speech_prob": 0.23326396942138672}, {"id": 146, "seek": 97272, "start": 972.72, "end": 985.44, "text": " Thank you for your attention.", "tokens": [50364, 1044, 291, 337, 428, 3202, 13, 51000], "temperature": 0.0, "avg_logprob": -0.544847223493788, "compression_ratio": 1.2210526315789474, "no_speech_prob": 0.1457923948764801}, {"id": 147, "seek": 97272, "start": 985.44, "end": 987.72, "text": " Anybody have any questions?", "tokens": [51000, 19082, 362, 604, 1651, 30, 51114], "temperature": 0.0, "avg_logprob": -0.544847223493788, "compression_ratio": 1.2210526315789474, "no_speech_prob": 0.1457923948764801}, {"id": 148, "seek": 97272, "start": 987.72, "end": 990.72, "text": " Maybe from buildroot.", "tokens": [51114, 2704, 490, 1322, 44147, 13, 51264], "temperature": 0.0, "avg_logprob": -0.544847223493788, "compression_ratio": 1.2210526315789474, "no_speech_prob": 0.1457923948764801}, {"id": 149, "seek": 97272, "start": 990.72, "end": 992.76, "text": " Hi.", "tokens": [51264, 2421, 13, 51366], "temperature": 0.0, "avg_logprob": -0.544847223493788, "compression_ratio": 1.2210526315789474, "no_speech_prob": 0.1457923948764801}, {"id": 150, "seek": 97272, "start": 992.76, "end": 999.2, "text": " Thank you for your presentation.", "tokens": [51366, 1044, 291, 337, 428, 5860, 13, 51688], "temperature": 0.0, "avg_logprob": -0.544847223493788, "compression_ratio": 1.2210526315789474, "no_speech_prob": 0.1457923948764801}, {"id": 151, "seek": 99920, "start": 999.2, "end": 1007.1600000000001, "text": " How long did it take to explain to all the patches and development of the drivers?", "tokens": [50364, 1012, 938, 630, 309, 747, 281, 2903, 281, 439, 264, 26531, 293, 3250, 295, 264, 11590, 30, 50762], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 152, "seek": 99920, "start": 1007.1600000000001, "end": 1008.1600000000001, "text": " Quite a long.", "tokens": [50762, 20464, 257, 938, 13, 50812], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 153, "seek": 99920, "start": 1008.1600000000001, "end": 1013.24, "text": " I think it is the work I think of one year more or less.", "tokens": [50812, 286, 519, 309, 307, 264, 589, 286, 519, 295, 472, 1064, 544, 420, 1570, 13, 51066], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 154, "seek": 99920, "start": 1013.24, "end": 1015.24, "text": " But not full time.", "tokens": [51066, 583, 406, 1577, 565, 13, 51166], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 155, "seek": 99920, "start": 1015.24, "end": 1017.24, "text": " Yeah, of course.", "tokens": [51166, 865, 11, 295, 1164, 13, 51266], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 156, "seek": 99920, "start": 1017.24, "end": 1021.5600000000001, "text": " You have to wait for the response of the maintainers.", "tokens": [51266, 509, 362, 281, 1699, 337, 264, 4134, 295, 264, 6909, 433, 13, 51482], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 157, "seek": 99920, "start": 1021.5600000000001, "end": 1024.56, "text": " Thank you.", "tokens": [51482, 1044, 291, 13, 51632], "temperature": 0.0, "avg_logprob": -0.34496299941818437, "compression_ratio": 1.4350282485875707, "no_speech_prob": 0.29578739404678345}, {"id": 158, "seek": 102456, "start": 1024.56, "end": 1027.6399999999999, "text": " Hi.", "tokens": [50364, 2421, 13, 50518], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 159, "seek": 102456, "start": 1027.6399999999999, "end": 1029.56, "text": " So thank you again for your work.", "tokens": [50518, 407, 1309, 291, 797, 337, 428, 589, 13, 50614], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 160, "seek": 102456, "start": 1029.56, "end": 1036.36, "text": " This is very useful because without MMU less system I haven't seen on Linux running CAN", "tokens": [50614, 639, 307, 588, 4420, 570, 1553, 34191, 52, 1570, 1185, 286, 2378, 380, 1612, 322, 18734, 2614, 22931, 50954], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 161, "seek": 102456, "start": 1036.36, "end": 1043.56, "text": " yet and the main problem was the IP link set because without that you CAN is configured", "tokens": [50954, 1939, 293, 264, 2135, 1154, 390, 264, 8671, 2113, 992, 570, 1553, 300, 291, 22931, 307, 30538, 51314], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 162, "seek": 102456, "start": 1043.56, "end": 1048.24, "text": " as a network device on Linux and without that you cannot set the bit rate.", "tokens": [51314, 382, 257, 3209, 4302, 322, 18734, 293, 1553, 300, 291, 2644, 992, 264, 857, 3314, 13, 51548], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 163, "seek": 102456, "start": 1048.24, "end": 1050.28, "text": " So that was very important.", "tokens": [51548, 407, 300, 390, 588, 1021, 13, 51650], "temperature": 0.0, "avg_logprob": -0.25197410583496094, "compression_ratio": 1.5643564356435644, "no_speech_prob": 0.07614187151193619}, {"id": 164, "seek": 105028, "start": 1050.28, "end": 1055.6399999999999, "text": " My question is that on the STM only has a CAN controller.", "tokens": [50364, 1222, 1168, 307, 300, 322, 264, 4904, 44, 787, 575, 257, 22931, 10561, 13, 50632], "temperature": 0.0, "avg_logprob": -0.22429397668731346, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.2136041820049286}, {"id": 165, "seek": 105028, "start": 1055.6399999999999, "end": 1059.68, "text": " The CAN transceiver is always on the outside.", "tokens": [50632, 440, 22931, 1145, 384, 1837, 307, 1009, 322, 264, 2380, 13, 50834], "temperature": 0.0, "avg_logprob": -0.22429397668731346, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.2136041820049286}, {"id": 166, "seek": 105028, "start": 1059.68, "end": 1067.04, "text": " So CAN transceiver any PCB changes, any hardware changes, did you ever have to make for these", "tokens": [50834, 407, 22931, 1145, 384, 1837, 604, 42065, 2962, 11, 604, 8837, 2962, 11, 630, 291, 1562, 362, 281, 652, 337, 613, 51202], "temperature": 0.0, "avg_logprob": -0.22429397668731346, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.2136041820049286}, {"id": 167, "seek": 105028, "start": 1067.04, "end": 1073.72, "text": " kinds of systems if somebody builds a product that does not have MMU?", "tokens": [51202, 3685, 295, 3652, 498, 2618, 15182, 257, 1674, 300, 775, 406, 362, 34191, 52, 30, 51536], "temperature": 0.0, "avg_logprob": -0.22429397668731346, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.2136041820049286}, {"id": 168, "seek": 105028, "start": 1073.72, "end": 1078.84, "text": " If this goes into production with Linux running do we need something else from the hardware", "tokens": [51536, 759, 341, 1709, 666, 4265, 365, 18734, 2614, 360, 321, 643, 746, 1646, 490, 264, 8837, 51792], "temperature": 0.0, "avg_logprob": -0.22429397668731346, "compression_ratio": 1.5676855895196506, "no_speech_prob": 0.2136041820049286}, {"id": 169, "seek": 107884, "start": 1078.8799999999999, "end": 1082.9199999999998, "text": " side or that was the transceiver side nothing has to change?", "tokens": [50366, 1252, 420, 300, 390, 264, 1145, 384, 1837, 1252, 1825, 575, 281, 1319, 30, 50568], "temperature": 0.0, "avg_logprob": -0.35878073541741623, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.3099879324436188}, {"id": 170, "seek": 107884, "start": 1082.9199999999998, "end": 1086.56, "text": " Could you repeat the question because I didn't catch a...", "tokens": [50568, 7497, 291, 7149, 264, 1168, 570, 286, 994, 380, 3745, 257, 485, 50750], "temperature": 0.0, "avg_logprob": -0.35878073541741623, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.3099879324436188}, {"id": 171, "seek": 107884, "start": 1086.56, "end": 1095.84, "text": " So normally if I use a Raspberry Pi or something you have a MCP2151 that has a CAN controller", "tokens": [50750, 407, 5646, 498, 286, 764, 257, 41154, 17741, 420, 746, 291, 362, 257, 8797, 47, 4436, 18682, 300, 575, 257, 22931, 10561, 51214], "temperature": 0.0, "avg_logprob": -0.35878073541741623, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.3099879324436188}, {"id": 172, "seek": 107884, "start": 1095.84, "end": 1097.9199999999998, "text": " and a CAN transceiver.", "tokens": [51214, 293, 257, 22931, 1145, 384, 1837, 13, 51318], "temperature": 0.0, "avg_logprob": -0.35878073541741623, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.3099879324436188}, {"id": 173, "seek": 107884, "start": 1097.9199999999998, "end": 1102.9199999999998, "text": " STM32 only has a CAN controller.", "tokens": [51318, 4904, 44, 11440, 787, 575, 257, 22931, 10561, 13, 51568], "temperature": 0.0, "avg_logprob": -0.35878073541741623, "compression_ratio": 1.4725274725274726, "no_speech_prob": 0.3099879324436188}, {"id": 174, "seek": 110292, "start": 1103.0, "end": 1111.0, "text": " And on the board you would need to have external IP, IC, right, that would run as a CAN transceiver.", "tokens": [50368, 400, 322, 264, 3150, 291, 576, 643, 281, 362, 8320, 8671, 11, 14360, 11, 558, 11, 300, 576, 1190, 382, 257, 22931, 1145, 384, 1837, 13, 50768], "temperature": 0.0, "avg_logprob": -0.2932323130165658, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.3206690549850464}, {"id": 175, "seek": 110292, "start": 1111.0, "end": 1120.52, "text": " I don't know if the board I have can transceiver because I didn't modify the hardware.", "tokens": [50768, 286, 500, 380, 458, 498, 264, 3150, 286, 362, 393, 1145, 384, 1837, 570, 286, 994, 380, 16927, 264, 8837, 13, 51244], "temperature": 0.0, "avg_logprob": -0.2932323130165658, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.3206690549850464}, {"id": 176, "seek": 110292, "start": 1120.52, "end": 1128.8000000000002, "text": " I put in Lubeck internally the CAN controller and so I was able to test because I'm not", "tokens": [51244, 286, 829, 294, 441, 1977, 547, 19501, 264, 22931, 10561, 293, 370, 286, 390, 1075, 281, 1500, 570, 286, 478, 406, 51658], "temperature": 0.0, "avg_logprob": -0.2932323130165658, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.3206690549850464}, {"id": 177, "seek": 110292, "start": 1128.8000000000002, "end": 1129.8000000000002, "text": " an hardware engineer.", "tokens": [51658, 364, 8837, 11403, 13, 51708], "temperature": 0.0, "avg_logprob": -0.2932323130165658, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.3206690549850464}, {"id": 178, "seek": 112980, "start": 1129.8, "end": 1135.8799999999999, "text": " I am a software engineer and I am more confident on software than on hardware.", "tokens": [50364, 286, 669, 257, 4722, 11403, 293, 286, 669, 544, 6679, 322, 4722, 813, 322, 8837, 13, 50668], "temperature": 0.0, "avg_logprob": -0.3254452546437581, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.1004791110754013}, {"id": 179, "seek": 112980, "start": 1135.8799999999999, "end": 1141.76, "text": " So I didn't want to put the hand on the hardware.", "tokens": [50668, 407, 286, 994, 380, 528, 281, 829, 264, 1011, 322, 264, 8837, 13, 50962], "temperature": 0.0, "avg_logprob": -0.3254452546437581, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.1004791110754013}, {"id": 180, "seek": 112980, "start": 1141.76, "end": 1150.96, "text": " I bought a transceiver but after finding that I was able to enable the Lubeck...", "tokens": [50962, 286, 4243, 257, 1145, 384, 1837, 457, 934, 5006, 300, 286, 390, 1075, 281, 9528, 264, 441, 1977, 547, 485, 51422], "temperature": 0.0, "avg_logprob": -0.3254452546437581, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.1004791110754013}, {"id": 181, "seek": 112980, "start": 1150.96, "end": 1151.96, "text": " Inasmuch...", "tokens": [51422, 682, 14774, 625, 485, 51472], "temperature": 0.0, "avg_logprob": -0.3254452546437581, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.1004791110754013}, {"id": 182, "seek": 112980, "start": 1151.96, "end": 1154.72, "text": " Okay, okay, thank you.", "tokens": [51472, 1033, 11, 1392, 11, 1309, 291, 13, 51610], "temperature": 0.0, "avg_logprob": -0.3254452546437581, "compression_ratio": 1.4787878787878788, "no_speech_prob": 0.1004791110754013}, {"id": 183, "seek": 115472, "start": 1154.72, "end": 1164.3600000000001, "text": " You can basically use the same transceiver with the SD microcontroller so they are compatible.", "tokens": [50364, 509, 393, 1936, 764, 264, 912, 1145, 384, 1837, 365, 264, 14638, 4532, 9000, 22922, 370, 436, 366, 18218, 13, 50846], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 184, "seek": 115472, "start": 1164.3600000000001, "end": 1165.3600000000001, "text": " Was that your question?", "tokens": [50846, 3027, 300, 428, 1168, 30, 50896], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 185, "seek": 115472, "start": 1165.3600000000001, "end": 1173.3600000000001, "text": " Yeah, so I just wanted to ask that in an MMU and MMU less system the CAN bus, the 120", "tokens": [50896, 865, 11, 370, 286, 445, 1415, 281, 1029, 300, 294, 364, 34191, 52, 293, 34191, 52, 1570, 1185, 264, 22931, 1255, 11, 264, 10411, 51296], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 186, "seek": 115472, "start": 1173.3600000000001, "end": 1175.3600000000001, "text": " or nothing else would change in a...", "tokens": [51296, 420, 1825, 1646, 576, 1319, 294, 257, 485, 51396], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 187, "seek": 115472, "start": 1175.3600000000001, "end": 1177.3600000000001, "text": " Right, that was my question.", "tokens": [51396, 1779, 11, 300, 390, 452, 1168, 13, 51496], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 188, "seek": 115472, "start": 1177.3600000000001, "end": 1184.28, "text": " Yes, the CAN controller usually has a digital interface with RX and TX line and this is", "tokens": [51496, 1079, 11, 264, 22931, 10561, 2673, 575, 257, 4562, 9226, 365, 46197, 293, 314, 55, 1622, 293, 341, 307, 51842], "temperature": 0.0, "avg_logprob": -0.25830632632540673, "compression_ratio": 1.510548523206751, "no_speech_prob": 0.12018264830112457}, {"id": 189, "seek": 118428, "start": 1184.28, "end": 1190.72, "text": " connected to the transceiver that makes it into what's going over the wire and the transceiver", "tokens": [50364, 4582, 281, 264, 1145, 384, 1837, 300, 1669, 309, 666, 437, 311, 516, 670, 264, 6234, 293, 264, 1145, 384, 1837, 50686], "temperature": 0.0, "avg_logprob": -0.32128103455500817, "compression_ratio": 1.427710843373494, "no_speech_prob": 0.032784104347229004}, {"id": 190, "seek": 118428, "start": 1190.72, "end": 1197.04, "text": " doesn't care what kind of CAN controller was on the digital side you attached to.", "tokens": [50686, 1177, 380, 1127, 437, 733, 295, 22931, 10561, 390, 322, 264, 4562, 1252, 291, 8570, 281, 13, 51002], "temperature": 0.0, "avg_logprob": -0.32128103455500817, "compression_ratio": 1.427710843373494, "no_speech_prob": 0.032784104347229004}, {"id": 191, "seek": 118428, "start": 1197.04, "end": 1212.72, "text": " Hi, some STM32 have a newer IP for CAN that is named FD-CAN.", "tokens": [51002, 2421, 11, 512, 4904, 44, 11440, 362, 257, 17628, 8671, 337, 22931, 300, 307, 4926, 479, 35, 12, 34, 1770, 13, 51786], "temperature": 0.0, "avg_logprob": -0.32128103455500817, "compression_ratio": 1.427710843373494, "no_speech_prob": 0.032784104347229004}, {"id": 192, "seek": 121272, "start": 1213.72, "end": 1217.84, "text": " I am familiar with FD-CAN so I wasn't aware...", "tokens": [50414, 286, 669, 4963, 365, 479, 35, 12, 34, 1770, 370, 286, 2067, 380, 3650, 485, 50620], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 193, "seek": 121272, "start": 1217.84, "end": 1218.84, "text": " FD-CAN, FD-CAN.", "tokens": [50620, 479, 35, 12, 34, 1770, 11, 479, 35, 12, 34, 1770, 13, 50670], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 194, "seek": 121272, "start": 1218.84, "end": 1226.16, "text": " Yeah, and it seems like it's backwards compatible with DX-CAN so it looks like it should be", "tokens": [50670, 865, 11, 293, 309, 2544, 411, 309, 311, 12204, 18218, 365, 48817, 12, 34, 1770, 370, 309, 1542, 411, 309, 820, 312, 51036], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 195, "seek": 121272, "start": 1226.16, "end": 1233.0, "text": " compatible with your work so that's really nice but were you aware about FD-CAN?", "tokens": [51036, 18218, 365, 428, 589, 370, 300, 311, 534, 1481, 457, 645, 291, 3650, 466, 479, 35, 12, 34, 1770, 30, 51378], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 196, "seek": 121272, "start": 1233.0, "end": 1234.0, "text": " No?", "tokens": [51378, 883, 30, 51428], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 197, "seek": 121272, "start": 1234.0, "end": 1235.0, "text": " Okay.", "tokens": [51428, 1033, 13, 51478], "temperature": 0.0, "avg_logprob": -0.2756398957351158, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.3208354711532593}, {"id": 198, "seek": 123500, "start": 1235.64, "end": 1242.0, "text": " So I was wondering if it was planned to support the functionalities that are in FD-CAN and", "tokens": [50396, 407, 286, 390, 6359, 498, 309, 390, 8589, 281, 1406, 264, 11745, 1088, 300, 366, 294, 479, 35, 12, 34, 1770, 293, 50714], "temperature": 0.0, "avg_logprob": -0.205216007232666, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.10088097304105759}, {"id": 199, "seek": 123500, "start": 1242.0, "end": 1243.64, "text": " not in DX-CAN.", "tokens": [50714, 406, 294, 48817, 12, 34, 1770, 13, 50796], "temperature": 0.0, "avg_logprob": -0.205216007232666, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.10088097304105759}, {"id": 200, "seek": 123500, "start": 1243.64, "end": 1249.8, "text": " But I think the FD-CAN features are not on this type of platform I think.", "tokens": [50796, 583, 286, 519, 264, 479, 35, 12, 34, 1770, 4122, 366, 406, 322, 341, 2010, 295, 3663, 286, 519, 13, 51104], "temperature": 0.0, "avg_logprob": -0.205216007232666, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.10088097304105759}, {"id": 201, "seek": 123500, "start": 1249.8, "end": 1258.12, "text": " I think that it's on the STM32MP because this is a microcontroller.", "tokens": [51104, 286, 519, 300, 309, 311, 322, 264, 4904, 44, 11440, 12224, 570, 341, 307, 257, 4532, 9000, 22922, 13, 51520], "temperature": 0.0, "avg_logprob": -0.205216007232666, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.10088097304105759}, {"id": 202, "seek": 123500, "start": 1258.12, "end": 1263.2, "text": " No, no, I was using FD-CAN on STM32F303.", "tokens": [51520, 883, 11, 572, 11, 286, 390, 1228, 479, 35, 12, 34, 1770, 322, 4904, 44, 11440, 37, 3446, 18, 13, 51774], "temperature": 0.0, "avg_logprob": -0.205216007232666, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.10088097304105759}, {"id": 203, "seek": 126320, "start": 1263.2, "end": 1267.8, "text": " But I suppose they have some weird...", "tokens": [50364, 583, 286, 7297, 436, 362, 512, 3657, 485, 50594], "temperature": 0.0, "avg_logprob": -0.3295295536518097, "compression_ratio": 1.3525641025641026, "no_speech_prob": 0.019500993192195892}, {"id": 204, "seek": 126320, "start": 1267.8, "end": 1272.1200000000001, "text": " I can say something to this also.", "tokens": [50594, 286, 393, 584, 746, 281, 341, 611, 13, 50810], "temperature": 0.0, "avg_logprob": -0.3295295536518097, "compression_ratio": 1.3525641025641026, "no_speech_prob": 0.019500993192195892}, {"id": 205, "seek": 126320, "start": 1272.1200000000001, "end": 1279.8400000000001, "text": " On the modern STM microcontrollers where you have FD-CAN they are using the M-CAN IP", "tokens": [50810, 1282, 264, 4363, 4904, 44, 4532, 9000, 3970, 433, 689, 291, 362, 479, 35, 12, 34, 1770, 436, 366, 1228, 264, 376, 12, 34, 1770, 8671, 51196], "temperature": 0.0, "avg_logprob": -0.3295295536518097, "compression_ratio": 1.3525641025641026, "no_speech_prob": 0.019500993192195892}, {"id": 206, "seek": 126320, "start": 1279.8400000000001, "end": 1283.6000000000001, "text": " core from WOSH and this is already supported by Linux.", "tokens": [51196, 4965, 490, 343, 4367, 39, 293, 341, 307, 1217, 8104, 538, 18734, 13, 51384], "temperature": 0.0, "avg_logprob": -0.3295295536518097, "compression_ratio": 1.3525641025641026, "no_speech_prob": 0.019500993192195892}, {"id": 207, "seek": 129320, "start": 1294.2, "end": 1296.8, "text": " Non-MU system.", "tokens": [50414, 8774, 12, 44, 52, 1185, 13, 50544], "temperature": 0.0, "avg_logprob": -0.4581301212310791, "compression_ratio": 1.375886524822695, "no_speech_prob": 0.11815326660871506}, {"id": 208, "seek": 129320, "start": 1296.8, "end": 1306.52, "text": " Was you able to test the very latest CAN-Utils and non-MU system with the very latest new", "tokens": [50544, 3027, 291, 1075, 281, 1500, 264, 588, 6792, 22931, 12, 52, 83, 4174, 293, 2107, 12, 44, 52, 1185, 365, 264, 588, 6792, 777, 51030], "temperature": 0.0, "avg_logprob": -0.4581301212310791, "compression_ratio": 1.375886524822695, "no_speech_prob": 0.11815326660871506}, {"id": 209, "seek": 129320, "start": 1306.52, "end": 1308.8400000000001, "text": " ISOBus file system support?", "tokens": [51030, 25042, 33, 301, 3991, 1185, 1406, 30, 51146], "temperature": 0.0, "avg_logprob": -0.4581301212310791, "compression_ratio": 1.375886524822695, "no_speech_prob": 0.11815326660871506}, {"id": 210, "seek": 129320, "start": 1308.8400000000001, "end": 1309.8400000000001, "text": " No.", "tokens": [51146, 883, 13, 51196], "temperature": 0.0, "avg_logprob": -0.4581301212310791, "compression_ratio": 1.375886524822695, "no_speech_prob": 0.11815326660871506}, {"id": 211, "seek": 129320, "start": 1314.8400000000001, "end": 1318.2, "text": " Okay, we have time for one more question if there is one.", "tokens": [51446, 1033, 11, 321, 362, 565, 337, 472, 544, 1168, 498, 456, 307, 472, 13, 51614], "temperature": 0.0, "avg_logprob": -0.4581301212310791, "compression_ratio": 1.375886524822695, "no_speech_prob": 0.11815326660871506}, {"id": 212, "seek": 132320, "start": 1324.2, "end": 1326.0, "text": " Okay, I think we're done.", "tokens": [50414, 1033, 11, 286, 519, 321, 434, 1096, 13, 50504], "temperature": 0.0, "avg_logprob": -0.4242117140028212, "compression_ratio": 0.8679245283018868, "no_speech_prob": 0.45732465386390686}, {"id": 213, "seek": 132320, "start": 1326.0, "end": 1326.52, "text": " Thank you very much.", "tokens": [50504, 1044, 291, 588, 709, 13, 50530], "temperature": 0.0, "avg_logprob": -0.4242117140028212, "compression_ratio": 0.8679245283018868, "no_speech_prob": 0.45732465386390686}], "language": "en"}