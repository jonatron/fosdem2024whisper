{"text": " Hi everyone. How many Django users in here? Raise your hands. Keep your hands up if you are dealing with Django projects with a lot of migrations, with time and continuous integration minutes. Okay, let's talk it for you. Perfect. You are in the right room. Now, I am Denny. I am on your right side of the photo. I work again in JavaScript, Python, Vue.js, Django, everything. It's pain-me-stuff. So let's start with Django migrations. Our way to propagate changes from your models to a database schema and keeping track of them. Let's quickly recap migration commands. So you can use make migrations, migrate, show migration, and SQL migrate. The first one, make migrations, create new migrations based on your model chains. You can use different parameters in there. For example, an empty migration you can customize. You can give a migration a specific name, and you can restrict the creation of a migration to a specific application. The model, for example, if you want to recreate Twitter, we know the reason for that, is this one. You can create a class for a model, and then creating the migration with the command will create a new file in your project in the migration folder with this content. So initial equal true if it's the first migration in your project. A list of dependencies if you are using something like, for example, authentication, or if you are on the second migration in the project, the first dependency is the first migration, and a list of operations performed during the migration. Then you can migrate your migration, of course, using this command specifying an application or not, or a migration name. So if you want to move to a specific point in the history of your migration, you can specify this. So as a new project, you can migrate everything using managepi migrates, and everything is at the last version of your database schema. Then if you want to roll back every migration in a project, you can migrate to the zero migration, and everything is rolled back. You can move to the second migration in your project with this, and without specifying a migration number, you can migrate everything to the latest version. Now how this works under the hood, you have in your database a Django migration table with a content like this, so the application name, the name of the migration, and the date time when the migration has been applied to your database, so everything is on your database. There is a better way to show this, so using show migration, you can have a view of your list of migration in your database, in your schema, with a tick if the migration has been already applied in your database. And then with SQL Migrate, you can print your SQL statement for a specific migration. So with our example, we can display the SQL code for this. So let's take a look at this. A transaction will be opened, every command will be applied on your database, and then the transaction will be committed if no errors. Now if you need to make further changes in your model, you can apply those changes and then create another migration. The migration will depend on the first one, and then the code will be another transaction, the SQL command, and commit. And again, and again, you can apply migration on your database in production using this. What if you need to do further changes, then for example, an every tweet likes and a lot of other stuff, then you can make change in your models, create a single migration, because of course I like to be well organized and structured, so every single change for me means a single migration. Then you end up having a lot of migration like this one. But even worse, if you need to create, for example, a shop app for a customer, then you need to create a model, and then during the lifetime of your application, you need to do a lot of changes to your model structures. Okay, we won't list this, but we had to do a lot of changes, for example, adding tables, switching data from a table to another, to a main table to a detailed table, and a lot of other stuff, changing data during your workflow. So changes can be a lot of pain, a lot of stuff, and when migrations become a lot, then your performance during tests could decrease a lot, because during the deploy is perfect, you can move forward and backward with simplicity, but in tests it's not that simple, because you need to wait for every migration to apply before running tests. And if you are paying for your testing time on GitHub workflows or other platforms, then that could be painful. As a disclaimer, the timing for this talk may change from laptop to laptop, so keep this in mind, but on my old laptop, this is brand new, so it's faster, hopefully, on my old laptop, it was the timing. So running tests on 20 apps like Shop, I just copy pasted them 20 times in the example repository. Test took just a single second, less than a second to run, and that was perfect, so there's no need to do this talk. Well, not exactly, because creating the test database took 20 seconds. So one second of tests for this project, and 20 seconds for database creation. And that was not optimal, because we were on the verge between the team license and the enterprise license for the timing of workflow runs, so between 3,000 minutes monthly, and that wasn't optimal, we wanted to remain in the team license, because it was cheap, and then we wanted to optimize that time. The first possible workaround is to use KIPDB, running tests, and this parameter preserve the test database between runs, and that's perfect, because the first run applies the migrations, and then the database will be kept on your cache somewhere, on your Oculus, for example. If the database, of course, does not exist, it will be first created and migrated, and during other changes in other prequests, for example, migration will also be applied, so everything is okay, hopefully. So this approach saves 20 seconds for us after the first test run. The problem was configuring your CI CD, because a solution could be using cache or artifacts in GitHub workflow, but this takes time to create and store artifacts in GitHub, or, for example, using an external test database from inside the GitHub workflow, but that wasn't optimal, and a friend of mine, or mistaken, suggested me this package, Django migration CI, that allows you to simply configure an external test database, so you can consider this and save 20 seconds if you have an external database. Another possible workaround, one line workaround, is to use in your settings migrate equal false, so if you are using this, migration won't run during the test, and this is similar to set none as a value in migration modules, but for every apps in your project, so it's better this way, so single line change, and this has a lot of pros and cons, pros, of course, single line change, and it doesn't run migration during tests. The problem is it's like make migrations plus migrate before every test run, so this will add in our example repository five seconds of time, so that was the opposite of what I wanted to obtain. So diving into the Django documentation, I discovered this great, great comment, squash migration, and this squash an existing set of migrations into a single one, you can specify your migration name, and optionally start migration name, it will squash every migration into a single one. This was pretty good, I tried this one on the shop application, and I decided to squash every migration into a single one. It was good, not perfect for us, but it was good. The problem is that we needed to add manual porting, because for example we used a lot of functions, manual function, from a migration to another, from a version to another, and that weren't migrated or automatically squashed, so we had to copy paste the function code into the squash migration and make some adjustments. And if we inspect the squash migration file, we can see there is on the top of the class definition a list of things, a list of tuples in the replaces variable. So the first item is shop, the application name, and the second one is the migration name, for every one of the 26 migration. And the recommended process is first squash, keep the old files, commit and release to production, to staging the demo until production, then wait until all systems are upgraded with the new release, then you can remove the old migration files, commit and do a second release. Then last but not least, you need to transition your squash migration to a normal migration, delete all migration files, all old migration files that has been replaced, and update all migration that depends on the deleted ones with the new squash migration, and after everything you can remove the replaces attribute in the squash migration, and everything is fine. Then if you want to clean up your database, you can prove references, so in your database there won't be references to old migrations. Let's test performances after squashing, after spending a week on my work project doing that, and oh no changes, so I lost a week doing that without results, and don't tell my chief. So what's the point? Well the point of squash migration is to move back from having several hundred migrations, five to just a few, for example if you create a branch, a separate branch where you are working you alone, you can squash migrations and propose just a single migration file in your request. I know, I know you wanted to speed up tests, so let's do it. Are you ready? It's not that easy, but first you need to recreate migrations. So let's annotate migrations for a single specific application with show migrations, and then copy paste all the names of your migration files, and then you need to manually create a replaces, you remember this one from a moment ago, you need to recreate the replaces list with application name and migration file name, and store it somewhere in your computer, then move your migrations in a temporary directory, so out of the way, and make sure that show migrations doesn't show stuff. Now it's time to recreate migrations using your application name and a name, a specific name, for example init squash, so you remember that this is the squash migration, and that will create the first migration at your last model version. Then open your migration file, copy paste the replaces array list, you created a moment ago inside your class, then you can restore your old migration files in the original directories, make sure for missing or overwritten files, and then remove the temporary directory. Now with show migrations you need to check that everything is there, so all in this case 26 migrations are there, and the first one, the squash migration is there but has not been applied, then apply your squash migrations and check again with squash show migrations that everything has been squashed and you have just a single migration, and then you can go back to your post squash task, so commit and release to production, upgrade those systems, of course staging demo production, everything else, update on migrations that depends on the deleted migrations, remove the replace attribute, and if you want to bring references to the little migration, and everything is perfect, right? Well, not exactly, if you have migrations providing initial data, you need to create a new migration for that, because recreating migration from scratch, it doesn't create that insertion in your modules, or even better, you can use fixtures, and in the doc you can see how to use fixtures in both database migration and also in testing, and that's perfect, and then you need to be aware of circular dependencies, because if your project is big and grows during the time, you could have circular dependencies from a project to another and backward, and this problem requires you to remove all foreign key, causing the circular dependency, create the first migration, restore the foreign keys, and create a second migration, and this way you will hopefully solve this. Now, let's try to test performances after all of this, after another week spent on the project trying to tell your chief that, oh, I'm working on something useful, I promise you, and yeah, of course, after recreating everything from scratch, our database creation task took five seconds instead of 20, that was perfect. Yeah, it was perfect, but does this apply to everyone? It depends, because if you have really big, big projects and you are paying by the minute your CI CD workflows, and you are on the verge of having to pay $3-4 per user per month, to 20 something dollars per user per month, then maybe you want to stay on the little cheaper branch of this, so that could be a solution, but if you just want to make order in your migration file, then just use squash migration without everything else, or if you want to speed up tests on your localhost, you just need to use KipDB, and everything is fine, without having to spend, in my case, two weeks working on this, just to save maybe a couple of seconds on your project, so it depends on your use case, and we are done, so if you want to see the example repository, it's there with three different branches, if you want to compare them on your local machine, and I uploaded the slides on the FOSDEN website, so they are there if you want to take a look at them. Thank you very much. Okay, we have time for quite a few questions, I see one up there. Given your salary, and these two weeks of work you've done, how many years of enterprise lessons did you avoid? That's a nice question, hopefully my chief didn't ask me that, but I think we could have paid maybe a year, I don't know, one year of this, but yeah, it was fun to play with this, and for me at least spending two weeks trying new stuff, or trying to discover hidden stuff from the jungle. More questions? Good question. Yeah, thanks for the great talk, I was wondering if you looked into using like seed data betas for CI, so that... Sorry. Yeah, you don't hear it? No, I didn't hear you, sorry. If you looked into seed data betas for CI, so that you run your migrations locally, and then dump the database, and then use that database during CI to start off with a pre-migrated database. No, I didn't think about that, it's a good idea, so you just upload your database dump, and then on your... Yeah, so you just set up your CI script to use that database when it initializes. That could be a good idea, I need to try that, thank you. So you restore the database and just applies your last migrations without having to apply everything. Yeah, exactly. Yeah, that's a good idea, thank you. Thank you. I was also wondering if you're using Postgres for example, you can disable fsync that will just keep database in memory, so that probably be a solution for big time. So locally we kept the database in memory, the problem was on our CI CD, so we created a service in the workflow files, and that was creating a database from scratch. So it was just a configuration you can just add on your Postgres site on the CI... We had to consider the time for storing and restoring the database on that configuration from the cache. So it was a little bit of time for that, but yeah, that was an option I tried to... More questions? So very cool talk. I like your method. I basically came up with the same method about five years ago for this approach. Do you think there's an opportunity to create a tool to automate some of this process? Well, that's a good question. Maybe implementing that in the squash migration in some way, I don't know. We could, we can try to do it just to save other two weeks of salary from other people. Okay, I think we're done with questions, so we're going to have another five minute break and then continue with the next talk. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.66, "text": " Hi everyone.", "tokens": [50364, 2421, 1518, 13, 50747], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 1, "seek": 0, "start": 7.66, "end": 9.8, "text": " How many Django users in here?", "tokens": [50747, 1012, 867, 33464, 17150, 5022, 294, 510, 30, 50854], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 2, "seek": 0, "start": 9.8, "end": 11.120000000000001, "text": " Raise your hands.", "tokens": [50854, 30062, 428, 2377, 13, 50920], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 3, "seek": 0, "start": 11.120000000000001, "end": 18.6, "text": " Keep your hands up if you are dealing with Django projects with a lot of migrations, with", "tokens": [50920, 5527, 428, 2377, 493, 498, 291, 366, 6260, 365, 33464, 17150, 4455, 365, 257, 688, 295, 6186, 12154, 11, 365, 51294], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 4, "seek": 0, "start": 18.6, "end": 21.72, "text": " time and continuous integration minutes.", "tokens": [51294, 565, 293, 10957, 10980, 2077, 13, 51450], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 5, "seek": 0, "start": 21.72, "end": 25.12, "text": " Okay, let's talk it for you.", "tokens": [51450, 1033, 11, 718, 311, 751, 309, 337, 291, 13, 51620], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 6, "seek": 0, "start": 25.12, "end": 26.12, "text": " Perfect.", "tokens": [51620, 10246, 13, 51670], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 7, "seek": 0, "start": 26.12, "end": 28.28, "text": " You are in the right room.", "tokens": [51670, 509, 366, 294, 264, 558, 1808, 13, 51778], "temperature": 0.0, "avg_logprob": -0.38535910767394227, "compression_ratio": 1.4438202247191012, "no_speech_prob": 0.1549183428287506}, {"id": 8, "seek": 2828, "start": 28.28, "end": 29.68, "text": " Now, I am Denny.", "tokens": [50364, 823, 11, 286, 669, 6458, 1634, 13, 50434], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 9, "seek": 2828, "start": 29.68, "end": 33.56, "text": " I am on your right side of the photo.", "tokens": [50434, 286, 669, 322, 428, 558, 1252, 295, 264, 5052, 13, 50628], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 10, "seek": 2828, "start": 33.56, "end": 40.52, "text": " I work again in JavaScript, Python, Vue.js, Django, everything.", "tokens": [50628, 286, 589, 797, 294, 15778, 11, 15329, 11, 691, 622, 13, 25530, 11, 33464, 17150, 11, 1203, 13, 50976], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 11, "seek": 2828, "start": 40.52, "end": 42.72, "text": " It's pain-me-stuff.", "tokens": [50976, 467, 311, 1822, 12, 1398, 12, 372, 1245, 13, 51086], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 12, "seek": 2828, "start": 42.72, "end": 47.480000000000004, "text": " So let's start with Django migrations.", "tokens": [51086, 407, 718, 311, 722, 365, 33464, 17150, 6186, 12154, 13, 51324], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 13, "seek": 2828, "start": 47.480000000000004, "end": 55.16, "text": " Our way to propagate changes from your models to a database schema and keeping track of", "tokens": [51324, 2621, 636, 281, 48256, 2962, 490, 428, 5245, 281, 257, 8149, 34078, 293, 5145, 2837, 295, 51708], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 14, "seek": 2828, "start": 55.16, "end": 56.16, "text": " them.", "tokens": [51708, 552, 13, 51758], "temperature": 0.0, "avg_logprob": -0.30759648843245074, "compression_ratio": 1.3897435897435897, "no_speech_prob": 0.011039435863494873}, {"id": 15, "seek": 5616, "start": 56.16, "end": 59.239999999999995, "text": " Let's quickly recap migration commands.", "tokens": [50364, 961, 311, 2661, 20928, 17011, 16901, 13, 50518], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 16, "seek": 5616, "start": 59.239999999999995, "end": 65.28, "text": " So you can use make migrations, migrate, show migration, and SQL migrate.", "tokens": [50518, 407, 291, 393, 764, 652, 6186, 12154, 11, 31821, 11, 855, 17011, 11, 293, 19200, 31821, 13, 50820], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 17, "seek": 5616, "start": 65.28, "end": 71.8, "text": " The first one, make migrations, create new migrations based on your model chains.", "tokens": [50820, 440, 700, 472, 11, 652, 6186, 12154, 11, 1884, 777, 6186, 12154, 2361, 322, 428, 2316, 12626, 13, 51146], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 18, "seek": 5616, "start": 71.8, "end": 74.44, "text": " You can use different parameters in there.", "tokens": [51146, 509, 393, 764, 819, 9834, 294, 456, 13, 51278], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 19, "seek": 5616, "start": 74.44, "end": 77.84, "text": " For example, an empty migration you can customize.", "tokens": [51278, 1171, 1365, 11, 364, 6707, 17011, 291, 393, 19734, 13, 51448], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 20, "seek": 5616, "start": 77.84, "end": 83.16, "text": " You can give a migration a specific name, and you can restrict the creation of a migration", "tokens": [51448, 509, 393, 976, 257, 17011, 257, 2685, 1315, 11, 293, 291, 393, 7694, 264, 8016, 295, 257, 17011, 51714], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 21, "seek": 5616, "start": 83.16, "end": 86.12, "text": " to a specific application.", "tokens": [51714, 281, 257, 2685, 3861, 13, 51862], "temperature": 0.0, "avg_logprob": -0.18564536354758523, "compression_ratio": 1.8669724770642202, "no_speech_prob": 0.013816755264997482}, {"id": 22, "seek": 8612, "start": 87.12, "end": 95.36, "text": " The model, for example, if you want to recreate Twitter, we know the reason for that, is this", "tokens": [50414, 440, 2316, 11, 337, 1365, 11, 498, 291, 528, 281, 25833, 5794, 11, 321, 458, 264, 1778, 337, 300, 11, 307, 341, 50826], "temperature": 0.0, "avg_logprob": -0.18760796052863798, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.01070461980998516}, {"id": 23, "seek": 8612, "start": 95.36, "end": 96.36, "text": " one.", "tokens": [50826, 472, 13, 50876], "temperature": 0.0, "avg_logprob": -0.18760796052863798, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.01070461980998516}, {"id": 24, "seek": 8612, "start": 96.36, "end": 103.76, "text": " You can create a class for a model, and then creating the migration with the command will", "tokens": [50876, 509, 393, 1884, 257, 1508, 337, 257, 2316, 11, 293, 550, 4084, 264, 17011, 365, 264, 5622, 486, 51246], "temperature": 0.0, "avg_logprob": -0.18760796052863798, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.01070461980998516}, {"id": 25, "seek": 8612, "start": 103.76, "end": 109.80000000000001, "text": " create a new file in your project in the migration folder with this content.", "tokens": [51246, 1884, 257, 777, 3991, 294, 428, 1716, 294, 264, 17011, 10820, 365, 341, 2701, 13, 51548], "temperature": 0.0, "avg_logprob": -0.18760796052863798, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.01070461980998516}, {"id": 26, "seek": 8612, "start": 109.80000000000001, "end": 114.76, "text": " So initial equal true if it's the first migration in your project.", "tokens": [51548, 407, 5883, 2681, 2074, 498, 309, 311, 264, 700, 17011, 294, 428, 1716, 13, 51796], "temperature": 0.0, "avg_logprob": -0.18760796052863798, "compression_ratio": 1.7202072538860103, "no_speech_prob": 0.01070461980998516}, {"id": 27, "seek": 11476, "start": 114.76, "end": 121.08000000000001, "text": " A list of dependencies if you are using something like, for example, authentication, or if you", "tokens": [50364, 316, 1329, 295, 36606, 498, 291, 366, 1228, 746, 411, 11, 337, 1365, 11, 26643, 11, 420, 498, 291, 50680], "temperature": 0.0, "avg_logprob": -0.16543404452772026, "compression_ratio": 1.846938775510204, "no_speech_prob": 0.004869101103395224}, {"id": 28, "seek": 11476, "start": 121.08000000000001, "end": 127.76, "text": " are on the second migration in the project, the first dependency is the first migration,", "tokens": [50680, 366, 322, 264, 1150, 17011, 294, 264, 1716, 11, 264, 700, 33621, 307, 264, 700, 17011, 11, 51014], "temperature": 0.0, "avg_logprob": -0.16543404452772026, "compression_ratio": 1.846938775510204, "no_speech_prob": 0.004869101103395224}, {"id": 29, "seek": 11476, "start": 127.76, "end": 132.12, "text": " and a list of operations performed during the migration.", "tokens": [51014, 293, 257, 1329, 295, 7705, 10332, 1830, 264, 17011, 13, 51232], "temperature": 0.0, "avg_logprob": -0.16543404452772026, "compression_ratio": 1.846938775510204, "no_speech_prob": 0.004869101103395224}, {"id": 30, "seek": 11476, "start": 132.12, "end": 139.68, "text": " Then you can migrate your migration, of course, using this command specifying an application", "tokens": [51232, 1396, 291, 393, 31821, 428, 17011, 11, 295, 1164, 11, 1228, 341, 5622, 1608, 5489, 364, 3861, 51610], "temperature": 0.0, "avg_logprob": -0.16543404452772026, "compression_ratio": 1.846938775510204, "no_speech_prob": 0.004869101103395224}, {"id": 31, "seek": 11476, "start": 139.68, "end": 143.0, "text": " or not, or a migration name.", "tokens": [51610, 420, 406, 11, 420, 257, 17011, 1315, 13, 51776], "temperature": 0.0, "avg_logprob": -0.16543404452772026, "compression_ratio": 1.846938775510204, "no_speech_prob": 0.004869101103395224}, {"id": 32, "seek": 14300, "start": 143.0, "end": 148.28, "text": " So if you want to move to a specific point in the history of your migration, you can specify", "tokens": [50364, 407, 498, 291, 528, 281, 1286, 281, 257, 2685, 935, 294, 264, 2503, 295, 428, 17011, 11, 291, 393, 16500, 50628], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 33, "seek": 14300, "start": 148.28, "end": 149.92, "text": " this.", "tokens": [50628, 341, 13, 50710], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 34, "seek": 14300, "start": 149.92, "end": 158.44, "text": " So as a new project, you can migrate everything using managepi migrates, and everything is", "tokens": [50710, 407, 382, 257, 777, 1716, 11, 291, 393, 31821, 1203, 1228, 3067, 22630, 6186, 12507, 11, 293, 1203, 307, 51136], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 35, "seek": 14300, "start": 158.44, "end": 162.44, "text": " at the last version of your database schema.", "tokens": [51136, 412, 264, 1036, 3037, 295, 428, 8149, 34078, 13, 51336], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 36, "seek": 14300, "start": 162.44, "end": 168.68, "text": " Then if you want to roll back every migration in a project, you can migrate to the zero", "tokens": [51336, 1396, 498, 291, 528, 281, 3373, 646, 633, 17011, 294, 257, 1716, 11, 291, 393, 31821, 281, 264, 4018, 51648], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 37, "seek": 14300, "start": 168.68, "end": 172.0, "text": " migration, and everything is rolled back.", "tokens": [51648, 17011, 11, 293, 1203, 307, 14306, 646, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19765491275996952, "compression_ratio": 1.956989247311828, "no_speech_prob": 0.0022326726466417313}, {"id": 38, "seek": 17200, "start": 172.0, "end": 178.68, "text": " You can move to the second migration in your project with this, and without specifying a", "tokens": [50364, 509, 393, 1286, 281, 264, 1150, 17011, 294, 428, 1716, 365, 341, 11, 293, 1553, 1608, 5489, 257, 50698], "temperature": 0.0, "avg_logprob": -0.1536681139016453, "compression_ratio": 1.69, "no_speech_prob": 0.009667872451245785}, {"id": 39, "seek": 17200, "start": 178.68, "end": 183.12, "text": " migration number, you can migrate everything to the latest version.", "tokens": [50698, 17011, 1230, 11, 291, 393, 31821, 1203, 281, 264, 6792, 3037, 13, 50920], "temperature": 0.0, "avg_logprob": -0.1536681139016453, "compression_ratio": 1.69, "no_speech_prob": 0.009667872451245785}, {"id": 40, "seek": 17200, "start": 183.12, "end": 190.4, "text": " Now how this works under the hood, you have in your database a Django migration table with", "tokens": [50920, 823, 577, 341, 1985, 833, 264, 13376, 11, 291, 362, 294, 428, 8149, 257, 33464, 17150, 17011, 3199, 365, 51284], "temperature": 0.0, "avg_logprob": -0.1536681139016453, "compression_ratio": 1.69, "no_speech_prob": 0.009667872451245785}, {"id": 41, "seek": 17200, "start": 190.4, "end": 197.48, "text": " a content like this, so the application name, the name of the migration, and the date time", "tokens": [51284, 257, 2701, 411, 341, 11, 370, 264, 3861, 1315, 11, 264, 1315, 295, 264, 17011, 11, 293, 264, 4002, 565, 51638], "temperature": 0.0, "avg_logprob": -0.1536681139016453, "compression_ratio": 1.69, "no_speech_prob": 0.009667872451245785}, {"id": 42, "seek": 19748, "start": 197.48, "end": 205.16, "text": " when the migration has been applied to your database, so everything is on your database.", "tokens": [50364, 562, 264, 17011, 575, 668, 6456, 281, 428, 8149, 11, 370, 1203, 307, 322, 428, 8149, 13, 50748], "temperature": 0.0, "avg_logprob": -0.11230859364548774, "compression_ratio": 1.9050632911392404, "no_speech_prob": 0.08153067529201508}, {"id": 43, "seek": 19748, "start": 205.16, "end": 214.39999999999998, "text": " There is a better way to show this, so using show migration, you can have a view of your", "tokens": [50748, 821, 307, 257, 1101, 636, 281, 855, 341, 11, 370, 1228, 855, 17011, 11, 291, 393, 362, 257, 1910, 295, 428, 51210], "temperature": 0.0, "avg_logprob": -0.11230859364548774, "compression_ratio": 1.9050632911392404, "no_speech_prob": 0.08153067529201508}, {"id": 44, "seek": 19748, "start": 214.39999999999998, "end": 221.79999999999998, "text": " list of migration in your database, in your schema, with a tick if the migration has been", "tokens": [51210, 1329, 295, 17011, 294, 428, 8149, 11, 294, 428, 34078, 11, 365, 257, 5204, 498, 264, 17011, 575, 668, 51580], "temperature": 0.0, "avg_logprob": -0.11230859364548774, "compression_ratio": 1.9050632911392404, "no_speech_prob": 0.08153067529201508}, {"id": 45, "seek": 19748, "start": 221.79999999999998, "end": 225.51999999999998, "text": " already applied in your database.", "tokens": [51580, 1217, 6456, 294, 428, 8149, 13, 51766], "temperature": 0.0, "avg_logprob": -0.11230859364548774, "compression_ratio": 1.9050632911392404, "no_speech_prob": 0.08153067529201508}, {"id": 46, "seek": 22552, "start": 225.52, "end": 231.0, "text": " And then with SQL Migrate, you can print your SQL statement for a specific migration.", "tokens": [50364, 400, 550, 365, 19200, 18951, 4404, 11, 291, 393, 4482, 428, 19200, 5629, 337, 257, 2685, 17011, 13, 50638], "temperature": 0.0, "avg_logprob": -0.18902001199843008, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.01031640823930502}, {"id": 47, "seek": 22552, "start": 231.0, "end": 238.12, "text": " So with our example, we can display the SQL code for this.", "tokens": [50638, 407, 365, 527, 1365, 11, 321, 393, 4674, 264, 19200, 3089, 337, 341, 13, 50994], "temperature": 0.0, "avg_logprob": -0.18902001199843008, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.01031640823930502}, {"id": 48, "seek": 22552, "start": 238.12, "end": 240.72, "text": " So let's take a look at this.", "tokens": [50994, 407, 718, 311, 747, 257, 574, 412, 341, 13, 51124], "temperature": 0.0, "avg_logprob": -0.18902001199843008, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.01031640823930502}, {"id": 49, "seek": 22552, "start": 240.72, "end": 247.16000000000003, "text": " A transaction will be opened, every command will be applied on your database, and then", "tokens": [51124, 316, 14425, 486, 312, 5625, 11, 633, 5622, 486, 312, 6456, 322, 428, 8149, 11, 293, 550, 51446], "temperature": 0.0, "avg_logprob": -0.18902001199843008, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.01031640823930502}, {"id": 50, "seek": 22552, "start": 247.16000000000003, "end": 250.92000000000002, "text": " the transaction will be committed if no errors.", "tokens": [51446, 264, 14425, 486, 312, 7784, 498, 572, 13603, 13, 51634], "temperature": 0.0, "avg_logprob": -0.18902001199843008, "compression_ratio": 1.6263157894736842, "no_speech_prob": 0.01031640823930502}, {"id": 51, "seek": 25092, "start": 250.92, "end": 257.84, "text": " Now if you need to make further changes in your model, you can apply those changes and", "tokens": [50364, 823, 498, 291, 643, 281, 652, 3052, 2962, 294, 428, 2316, 11, 291, 393, 3079, 729, 2962, 293, 50710], "temperature": 0.0, "avg_logprob": -0.1788945198059082, "compression_ratio": 1.7157894736842105, "no_speech_prob": 0.008187856525182724}, {"id": 52, "seek": 25092, "start": 257.84, "end": 260.03999999999996, "text": " then create another migration.", "tokens": [50710, 550, 1884, 1071, 17011, 13, 50820], "temperature": 0.0, "avg_logprob": -0.1788945198059082, "compression_ratio": 1.7157894736842105, "no_speech_prob": 0.008187856525182724}, {"id": 53, "seek": 25092, "start": 260.03999999999996, "end": 267.68, "text": " The migration will depend on the first one, and then the code will be another transaction,", "tokens": [50820, 440, 17011, 486, 5672, 322, 264, 700, 472, 11, 293, 550, 264, 3089, 486, 312, 1071, 14425, 11, 51202], "temperature": 0.0, "avg_logprob": -0.1788945198059082, "compression_ratio": 1.7157894736842105, "no_speech_prob": 0.008187856525182724}, {"id": 54, "seek": 25092, "start": 267.68, "end": 270.91999999999996, "text": " the SQL command, and commit.", "tokens": [51202, 264, 19200, 5622, 11, 293, 5599, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1788945198059082, "compression_ratio": 1.7157894736842105, "no_speech_prob": 0.008187856525182724}, {"id": 55, "seek": 25092, "start": 270.91999999999996, "end": 278.52, "text": " And again, and again, you can apply migration on your database in production using this.", "tokens": [51364, 400, 797, 11, 293, 797, 11, 291, 393, 3079, 17011, 322, 428, 8149, 294, 4265, 1228, 341, 13, 51744], "temperature": 0.0, "avg_logprob": -0.1788945198059082, "compression_ratio": 1.7157894736842105, "no_speech_prob": 0.008187856525182724}, {"id": 56, "seek": 27852, "start": 278.52, "end": 285.44, "text": " What if you need to do further changes, then for example, an every tweet likes and a lot", "tokens": [50364, 708, 498, 291, 643, 281, 360, 3052, 2962, 11, 550, 337, 1365, 11, 364, 633, 15258, 5902, 293, 257, 688, 50710], "temperature": 0.0, "avg_logprob": -0.2758054330315388, "compression_ratio": 1.6201117318435754, "no_speech_prob": 0.03881001099944115}, {"id": 57, "seek": 27852, "start": 285.44, "end": 293.56, "text": " of other stuff, then you can make change in your models, create a single migration, because", "tokens": [50710, 295, 661, 1507, 11, 550, 291, 393, 652, 1319, 294, 428, 5245, 11, 1884, 257, 2167, 17011, 11, 570, 51116], "temperature": 0.0, "avg_logprob": -0.2758054330315388, "compression_ratio": 1.6201117318435754, "no_speech_prob": 0.03881001099944115}, {"id": 58, "seek": 27852, "start": 293.56, "end": 300.15999999999997, "text": " of course I like to be well organized and structured, so every single change for me", "tokens": [51116, 295, 1164, 286, 411, 281, 312, 731, 9983, 293, 18519, 11, 370, 633, 2167, 1319, 337, 385, 51446], "temperature": 0.0, "avg_logprob": -0.2758054330315388, "compression_ratio": 1.6201117318435754, "no_speech_prob": 0.03881001099944115}, {"id": 59, "seek": 27852, "start": 300.15999999999997, "end": 303.44, "text": " means a single migration.", "tokens": [51446, 1355, 257, 2167, 17011, 13, 51610], "temperature": 0.0, "avg_logprob": -0.2758054330315388, "compression_ratio": 1.6201117318435754, "no_speech_prob": 0.03881001099944115}, {"id": 60, "seek": 30344, "start": 303.44, "end": 308.08, "text": " Then you end up having a lot of migration like this one.", "tokens": [50364, 1396, 291, 917, 493, 1419, 257, 688, 295, 17011, 411, 341, 472, 13, 50596], "temperature": 0.0, "avg_logprob": -0.20874451937740796, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.012576168403029442}, {"id": 61, "seek": 30344, "start": 308.08, "end": 316.04, "text": " But even worse, if you need to create, for example, a shop app for a customer, then you", "tokens": [50596, 583, 754, 5324, 11, 498, 291, 643, 281, 1884, 11, 337, 1365, 11, 257, 3945, 724, 337, 257, 5474, 11, 550, 291, 50994], "temperature": 0.0, "avg_logprob": -0.20874451937740796, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.012576168403029442}, {"id": 62, "seek": 30344, "start": 316.04, "end": 322.36, "text": " need to create a model, and then during the lifetime of your application, you need to do", "tokens": [50994, 643, 281, 1884, 257, 2316, 11, 293, 550, 1830, 264, 11364, 295, 428, 3861, 11, 291, 643, 281, 360, 51310], "temperature": 0.0, "avg_logprob": -0.20874451937740796, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.012576168403029442}, {"id": 63, "seek": 30344, "start": 322.36, "end": 328.96, "text": " a lot of changes to your model structures.", "tokens": [51310, 257, 688, 295, 2962, 281, 428, 2316, 9227, 13, 51640], "temperature": 0.0, "avg_logprob": -0.20874451937740796, "compression_ratio": 1.6331360946745561, "no_speech_prob": 0.012576168403029442}, {"id": 64, "seek": 32896, "start": 328.96, "end": 337.23999999999995, "text": " Okay, we won't list this, but we had to do a lot of changes, for example, adding tables,", "tokens": [50364, 1033, 11, 321, 1582, 380, 1329, 341, 11, 457, 321, 632, 281, 360, 257, 688, 295, 2962, 11, 337, 1365, 11, 5127, 8020, 11, 50778], "temperature": 0.0, "avg_logprob": -0.1876970414192446, "compression_ratio": 1.5442176870748299, "no_speech_prob": 0.03173809126019478}, {"id": 65, "seek": 32896, "start": 337.23999999999995, "end": 344.47999999999996, "text": " switching data from a table to another, to a main table to a detailed table, and a lot", "tokens": [50778, 16493, 1412, 490, 257, 3199, 281, 1071, 11, 281, 257, 2135, 3199, 281, 257, 9942, 3199, 11, 293, 257, 688, 51140], "temperature": 0.0, "avg_logprob": -0.1876970414192446, "compression_ratio": 1.5442176870748299, "no_speech_prob": 0.03173809126019478}, {"id": 66, "seek": 32896, "start": 344.47999999999996, "end": 351.88, "text": " of other stuff, changing data during your workflow.", "tokens": [51140, 295, 661, 1507, 11, 4473, 1412, 1830, 428, 20993, 13, 51510], "temperature": 0.0, "avg_logprob": -0.1876970414192446, "compression_ratio": 1.5442176870748299, "no_speech_prob": 0.03173809126019478}, {"id": 67, "seek": 35188, "start": 351.88, "end": 363.2, "text": " So changes can be a lot of pain, a lot of stuff, and when migrations become a lot, then", "tokens": [50364, 407, 2962, 393, 312, 257, 688, 295, 1822, 11, 257, 688, 295, 1507, 11, 293, 562, 6186, 12154, 1813, 257, 688, 11, 550, 50930], "temperature": 0.0, "avg_logprob": -0.1364226774735884, "compression_ratio": 1.622754491017964, "no_speech_prob": 0.051215145736932755}, {"id": 68, "seek": 35188, "start": 363.2, "end": 370.24, "text": " your performance during tests could decrease a lot, because during the deploy is perfect,", "tokens": [50930, 428, 3389, 1830, 6921, 727, 11514, 257, 688, 11, 570, 1830, 264, 7274, 307, 2176, 11, 51282], "temperature": 0.0, "avg_logprob": -0.1364226774735884, "compression_ratio": 1.622754491017964, "no_speech_prob": 0.051215145736932755}, {"id": 69, "seek": 35188, "start": 370.24, "end": 379.44, "text": " you can move forward and backward with simplicity, but in tests it's not that simple, because", "tokens": [51282, 291, 393, 1286, 2128, 293, 23897, 365, 25632, 11, 457, 294, 6921, 309, 311, 406, 300, 2199, 11, 570, 51742], "temperature": 0.0, "avg_logprob": -0.1364226774735884, "compression_ratio": 1.622754491017964, "no_speech_prob": 0.051215145736932755}, {"id": 70, "seek": 37944, "start": 379.52, "end": 385.32, "text": " you need to wait for every migration to apply before running tests.", "tokens": [50368, 291, 643, 281, 1699, 337, 633, 17011, 281, 3079, 949, 2614, 6921, 13, 50658], "temperature": 0.0, "avg_logprob": -0.1733337789773941, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.08718083798885345}, {"id": 71, "seek": 37944, "start": 385.32, "end": 394.4, "text": " And if you are paying for your testing time on GitHub workflows or other platforms, then", "tokens": [50658, 400, 498, 291, 366, 6229, 337, 428, 4997, 565, 322, 23331, 43461, 420, 661, 9473, 11, 550, 51112], "temperature": 0.0, "avg_logprob": -0.1733337789773941, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.08718083798885345}, {"id": 72, "seek": 37944, "start": 394.4, "end": 397.88, "text": " that could be painful.", "tokens": [51112, 300, 727, 312, 11697, 13, 51286], "temperature": 0.0, "avg_logprob": -0.1733337789773941, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.08718083798885345}, {"id": 73, "seek": 37944, "start": 397.88, "end": 405.72, "text": " As a disclaimer, the timing for this talk may change from laptop to laptop, so keep this", "tokens": [51286, 1018, 257, 40896, 11, 264, 10822, 337, 341, 751, 815, 1319, 490, 10732, 281, 10732, 11, 370, 1066, 341, 51678], "temperature": 0.0, "avg_logprob": -0.1733337789773941, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.08718083798885345}, {"id": 74, "seek": 40572, "start": 405.8, "end": 411.6, "text": " in mind, but on my old laptop, this is brand new, so it's faster, hopefully, on my old", "tokens": [50368, 294, 1575, 11, 457, 322, 452, 1331, 10732, 11, 341, 307, 3360, 777, 11, 370, 309, 311, 4663, 11, 4696, 11, 322, 452, 1331, 50658], "temperature": 0.0, "avg_logprob": -0.25721642066692485, "compression_ratio": 1.5670103092783505, "no_speech_prob": 0.017149794846773148}, {"id": 75, "seek": 40572, "start": 411.6, "end": 416.0, "text": " laptop, it was the timing.", "tokens": [50658, 10732, 11, 309, 390, 264, 10822, 13, 50878], "temperature": 0.0, "avg_logprob": -0.25721642066692485, "compression_ratio": 1.5670103092783505, "no_speech_prob": 0.017149794846773148}, {"id": 76, "seek": 40572, "start": 416.0, "end": 425.0, "text": " So running tests on 20 apps like Shop, I just copy pasted them 20 times in the example", "tokens": [50878, 407, 2614, 6921, 322, 945, 7733, 411, 16319, 11, 286, 445, 5055, 1791, 292, 552, 945, 1413, 294, 264, 1365, 51328], "temperature": 0.0, "avg_logprob": -0.25721642066692485, "compression_ratio": 1.5670103092783505, "no_speech_prob": 0.017149794846773148}, {"id": 77, "seek": 40572, "start": 425.0, "end": 426.8, "text": " repository.", "tokens": [51328, 25841, 13, 51418], "temperature": 0.0, "avg_logprob": -0.25721642066692485, "compression_ratio": 1.5670103092783505, "no_speech_prob": 0.017149794846773148}, {"id": 78, "seek": 40572, "start": 426.8, "end": 433.48, "text": " Test took just a single second, less than a second to run, and that was perfect, so there's", "tokens": [51418, 9279, 1890, 445, 257, 2167, 1150, 11, 1570, 813, 257, 1150, 281, 1190, 11, 293, 300, 390, 2176, 11, 370, 456, 311, 51752], "temperature": 0.0, "avg_logprob": -0.25721642066692485, "compression_ratio": 1.5670103092783505, "no_speech_prob": 0.017149794846773148}, {"id": 79, "seek": 43348, "start": 433.56, "end": 435.8, "text": " no need to do this talk.", "tokens": [50368, 572, 643, 281, 360, 341, 751, 13, 50480], "temperature": 0.0, "avg_logprob": -0.20636036212627704, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.011567178182303905}, {"id": 80, "seek": 43348, "start": 435.8, "end": 441.56, "text": " Well, not exactly, because creating the test database took 20 seconds.", "tokens": [50480, 1042, 11, 406, 2293, 11, 570, 4084, 264, 1500, 8149, 1890, 945, 3949, 13, 50768], "temperature": 0.0, "avg_logprob": -0.20636036212627704, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.011567178182303905}, {"id": 81, "seek": 43348, "start": 441.56, "end": 448.24, "text": " So one second of tests for this project, and 20 seconds for database creation.", "tokens": [50768, 407, 472, 1150, 295, 6921, 337, 341, 1716, 11, 293, 945, 3949, 337, 8149, 8016, 13, 51102], "temperature": 0.0, "avg_logprob": -0.20636036212627704, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.011567178182303905}, {"id": 82, "seek": 43348, "start": 448.24, "end": 456.6, "text": " And that was not optimal, because we were on the verge between the team license and the", "tokens": [51102, 400, 300, 390, 406, 16252, 11, 570, 321, 645, 322, 264, 37164, 1296, 264, 1469, 10476, 293, 264, 51520], "temperature": 0.0, "avg_logprob": -0.20636036212627704, "compression_ratio": 1.5975609756097562, "no_speech_prob": 0.011567178182303905}, {"id": 83, "seek": 45660, "start": 456.6, "end": 468.20000000000005, "text": " enterprise license for the timing of workflow runs, so between 3,000 minutes monthly, and", "tokens": [50364, 14132, 10476, 337, 264, 10822, 295, 20993, 6676, 11, 370, 1296, 805, 11, 1360, 2077, 12878, 11, 293, 50944], "temperature": 0.0, "avg_logprob": -0.19521556077180086, "compression_ratio": 1.4930555555555556, "no_speech_prob": 0.01390760112553835}, {"id": 84, "seek": 45660, "start": 468.20000000000005, "end": 476.68, "text": " that wasn't optimal, we wanted to remain in the team license, because it was cheap, and", "tokens": [50944, 300, 2067, 380, 16252, 11, 321, 1415, 281, 6222, 294, 264, 1469, 10476, 11, 570, 309, 390, 7084, 11, 293, 51368], "temperature": 0.0, "avg_logprob": -0.19521556077180086, "compression_ratio": 1.4930555555555556, "no_speech_prob": 0.01390760112553835}, {"id": 85, "seek": 45660, "start": 476.68, "end": 480.36, "text": " then we wanted to optimize that time.", "tokens": [51368, 550, 321, 1415, 281, 19719, 300, 565, 13, 51552], "temperature": 0.0, "avg_logprob": -0.19521556077180086, "compression_ratio": 1.4930555555555556, "no_speech_prob": 0.01390760112553835}, {"id": 86, "seek": 48036, "start": 480.36, "end": 488.96000000000004, "text": " The first possible workaround is to use KIPDB, running tests, and this parameter preserve", "tokens": [50364, 440, 700, 1944, 589, 25762, 307, 281, 764, 591, 9139, 27735, 11, 2614, 6921, 11, 293, 341, 13075, 15665, 50794], "temperature": 0.0, "avg_logprob": -0.23609750535753038, "compression_ratio": 1.6805555555555556, "no_speech_prob": 0.05954493582248688}, {"id": 87, "seek": 48036, "start": 488.96000000000004, "end": 494.24, "text": " the test database between runs, and that's perfect, because the first run applies the", "tokens": [50794, 264, 1500, 8149, 1296, 6676, 11, 293, 300, 311, 2176, 11, 570, 264, 700, 1190, 13165, 264, 51058], "temperature": 0.0, "avg_logprob": -0.23609750535753038, "compression_ratio": 1.6805555555555556, "no_speech_prob": 0.05954493582248688}, {"id": 88, "seek": 48036, "start": 494.24, "end": 500.64, "text": " migrations, and then the database will be kept on your cache somewhere, on your Oculus,", "tokens": [51058, 6186, 12154, 11, 293, 550, 264, 8149, 486, 312, 4305, 322, 428, 19459, 4079, 11, 322, 428, 49094, 11, 51378], "temperature": 0.0, "avg_logprob": -0.23609750535753038, "compression_ratio": 1.6805555555555556, "no_speech_prob": 0.05954493582248688}, {"id": 89, "seek": 48036, "start": 500.64, "end": 502.08000000000004, "text": " for example.", "tokens": [51378, 337, 1365, 13, 51450], "temperature": 0.0, "avg_logprob": -0.23609750535753038, "compression_ratio": 1.6805555555555556, "no_speech_prob": 0.05954493582248688}, {"id": 90, "seek": 48036, "start": 502.08000000000004, "end": 509.64, "text": " If the database, of course, does not exist, it will be first created and migrated, and", "tokens": [51450, 759, 264, 8149, 11, 295, 1164, 11, 775, 406, 2514, 11, 309, 486, 312, 700, 2942, 293, 48329, 11, 293, 51828], "temperature": 0.0, "avg_logprob": -0.23609750535753038, "compression_ratio": 1.6805555555555556, "no_speech_prob": 0.05954493582248688}, {"id": 91, "seek": 50964, "start": 509.64, "end": 515.36, "text": " during other changes in other prequests, for example, migration will also be applied,", "tokens": [50364, 1830, 661, 2962, 294, 661, 659, 358, 4409, 11, 337, 1365, 11, 17011, 486, 611, 312, 6456, 11, 50650], "temperature": 0.0, "avg_logprob": -0.15164339720313227, "compression_ratio": 1.4234693877551021, "no_speech_prob": 0.0017476018983870745}, {"id": 92, "seek": 50964, "start": 515.36, "end": 520.3199999999999, "text": " so everything is okay, hopefully.", "tokens": [50650, 370, 1203, 307, 1392, 11, 4696, 13, 50898], "temperature": 0.0, "avg_logprob": -0.15164339720313227, "compression_ratio": 1.4234693877551021, "no_speech_prob": 0.0017476018983870745}, {"id": 93, "seek": 50964, "start": 520.3199999999999, "end": 526.72, "text": " So this approach saves 20 seconds for us after the first test run.", "tokens": [50898, 407, 341, 3109, 19155, 945, 3949, 337, 505, 934, 264, 700, 1500, 1190, 13, 51218], "temperature": 0.0, "avg_logprob": -0.15164339720313227, "compression_ratio": 1.4234693877551021, "no_speech_prob": 0.0017476018983870745}, {"id": 94, "seek": 50964, "start": 526.72, "end": 535.08, "text": " The problem was configuring your CI CD, because a solution could be using cache or artifacts", "tokens": [51218, 440, 1154, 390, 6662, 1345, 428, 37777, 6743, 11, 570, 257, 3827, 727, 312, 1228, 19459, 420, 24617, 51636], "temperature": 0.0, "avg_logprob": -0.15164339720313227, "compression_ratio": 1.4234693877551021, "no_speech_prob": 0.0017476018983870745}, {"id": 95, "seek": 53508, "start": 535.08, "end": 545.5200000000001, "text": " in GitHub workflow, but this takes time to create and store artifacts in GitHub, or,", "tokens": [50364, 294, 23331, 20993, 11, 457, 341, 2516, 565, 281, 1884, 293, 3531, 24617, 294, 23331, 11, 420, 11, 50886], "temperature": 0.0, "avg_logprob": -0.2455342762053959, "compression_ratio": 1.5375722543352601, "no_speech_prob": 0.03863038867712021}, {"id": 96, "seek": 53508, "start": 545.5200000000001, "end": 551.48, "text": " for example, using an external test database from inside the GitHub workflow, but that wasn't", "tokens": [50886, 337, 1365, 11, 1228, 364, 8320, 1500, 8149, 490, 1854, 264, 23331, 20993, 11, 457, 300, 2067, 380, 51184], "temperature": 0.0, "avg_logprob": -0.2455342762053959, "compression_ratio": 1.5375722543352601, "no_speech_prob": 0.03863038867712021}, {"id": 97, "seek": 53508, "start": 551.48, "end": 558.6800000000001, "text": " optimal, and a friend of mine, or mistaken, suggested me this package, Django migration", "tokens": [51184, 16252, 11, 293, 257, 1277, 295, 3892, 11, 420, 21333, 11, 10945, 385, 341, 7372, 11, 33464, 17150, 17011, 51544], "temperature": 0.0, "avg_logprob": -0.2455342762053959, "compression_ratio": 1.5375722543352601, "no_speech_prob": 0.03863038867712021}, {"id": 98, "seek": 55868, "start": 558.68, "end": 567.52, "text": " CI, that allows you to simply configure an external test database, so you can consider", "tokens": [50364, 37777, 11, 300, 4045, 291, 281, 2935, 22162, 364, 8320, 1500, 8149, 11, 370, 291, 393, 1949, 50806], "temperature": 0.0, "avg_logprob": -0.22650765536124245, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.09473073482513428}, {"id": 99, "seek": 55868, "start": 567.52, "end": 575.12, "text": " this and save 20 seconds if you have an external database.", "tokens": [50806, 341, 293, 3155, 945, 3949, 498, 291, 362, 364, 8320, 8149, 13, 51186], "temperature": 0.0, "avg_logprob": -0.22650765536124245, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.09473073482513428}, {"id": 100, "seek": 55868, "start": 575.12, "end": 584.1999999999999, "text": " Another possible workaround, one line workaround, is to use in your settings migrate equal false,", "tokens": [51186, 3996, 1944, 589, 25762, 11, 472, 1622, 589, 25762, 11, 307, 281, 764, 294, 428, 6257, 31821, 2681, 7908, 11, 51640], "temperature": 0.0, "avg_logprob": -0.22650765536124245, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.09473073482513428}, {"id": 101, "seek": 58420, "start": 584.2, "end": 593.36, "text": " so if you are using this, migration won't run during the test, and this is similar to", "tokens": [50364, 370, 498, 291, 366, 1228, 341, 11, 17011, 1582, 380, 1190, 1830, 264, 1500, 11, 293, 341, 307, 2531, 281, 50822], "temperature": 0.0, "avg_logprob": -0.17396633965628489, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.02977314032614231}, {"id": 102, "seek": 58420, "start": 593.36, "end": 601.96, "text": " set none as a value in migration modules, but for every apps in your project, so it's", "tokens": [50822, 992, 6022, 382, 257, 2158, 294, 17011, 16679, 11, 457, 337, 633, 7733, 294, 428, 1716, 11, 370, 309, 311, 51252], "temperature": 0.0, "avg_logprob": -0.17396633965628489, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.02977314032614231}, {"id": 103, "seek": 58420, "start": 601.96, "end": 609.4000000000001, "text": " better this way, so single line change, and this has a lot of pros and cons, pros, of", "tokens": [51252, 1101, 341, 636, 11, 370, 2167, 1622, 1319, 11, 293, 341, 575, 257, 688, 295, 6267, 293, 1014, 11, 6267, 11, 295, 51624], "temperature": 0.0, "avg_logprob": -0.17396633965628489, "compression_ratio": 1.6163522012578617, "no_speech_prob": 0.02977314032614231}, {"id": 104, "seek": 60940, "start": 609.4, "end": 615.68, "text": " course, single line change, and it doesn't run migration during tests.", "tokens": [50364, 1164, 11, 2167, 1622, 1319, 11, 293, 309, 1177, 380, 1190, 17011, 1830, 6921, 13, 50678], "temperature": 0.0, "avg_logprob": -0.18454988075025153, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.14101681113243103}, {"id": 105, "seek": 60940, "start": 615.68, "end": 623.64, "text": " The problem is it's like make migrations plus migrate before every test run, so this will", "tokens": [50678, 440, 1154, 307, 309, 311, 411, 652, 6186, 12154, 1804, 31821, 949, 633, 1500, 1190, 11, 370, 341, 486, 51076], "temperature": 0.0, "avg_logprob": -0.18454988075025153, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.14101681113243103}, {"id": 106, "seek": 60940, "start": 623.64, "end": 631.9599999999999, "text": " add in our example repository five seconds of time, so that was the opposite of what", "tokens": [51076, 909, 294, 527, 1365, 25841, 1732, 3949, 295, 565, 11, 370, 300, 390, 264, 6182, 295, 437, 51492], "temperature": 0.0, "avg_logprob": -0.18454988075025153, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.14101681113243103}, {"id": 107, "seek": 60940, "start": 631.9599999999999, "end": 634.36, "text": " I wanted to obtain.", "tokens": [51492, 286, 1415, 281, 12701, 13, 51612], "temperature": 0.0, "avg_logprob": -0.18454988075025153, "compression_ratio": 1.497175141242938, "no_speech_prob": 0.14101681113243103}, {"id": 108, "seek": 63436, "start": 634.36, "end": 642.4, "text": " So diving into the Django documentation, I discovered this great, great comment, squash", "tokens": [50364, 407, 20241, 666, 264, 33464, 17150, 14333, 11, 286, 6941, 341, 869, 11, 869, 2871, 11, 30725, 50766], "temperature": 0.0, "avg_logprob": -0.17685342190870598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.0443912148475647}, {"id": 109, "seek": 63436, "start": 642.4, "end": 649.96, "text": " migration, and this squash an existing set of migrations into a single one, you can specify", "tokens": [50766, 17011, 11, 293, 341, 30725, 364, 6741, 992, 295, 6186, 12154, 666, 257, 2167, 472, 11, 291, 393, 16500, 51144], "temperature": 0.0, "avg_logprob": -0.17685342190870598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.0443912148475647}, {"id": 110, "seek": 63436, "start": 649.96, "end": 657.5600000000001, "text": " your migration name, and optionally start migration name, it will squash every migration", "tokens": [51144, 428, 17011, 1315, 11, 293, 3614, 379, 722, 17011, 1315, 11, 309, 486, 30725, 633, 17011, 51524], "temperature": 0.0, "avg_logprob": -0.17685342190870598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.0443912148475647}, {"id": 111, "seek": 63436, "start": 657.5600000000001, "end": 660.52, "text": " into a single one.", "tokens": [51524, 666, 257, 2167, 472, 13, 51672], "temperature": 0.0, "avg_logprob": -0.17685342190870598, "compression_ratio": 1.7826086956521738, "no_speech_prob": 0.0443912148475647}, {"id": 112, "seek": 66052, "start": 660.52, "end": 668.56, "text": " This was pretty good, I tried this one on the shop application, and I decided to squash", "tokens": [50364, 639, 390, 1238, 665, 11, 286, 3031, 341, 472, 322, 264, 3945, 3861, 11, 293, 286, 3047, 281, 30725, 50766], "temperature": 0.0, "avg_logprob": -0.1914504369099935, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.11089237779378891}, {"id": 113, "seek": 66052, "start": 668.56, "end": 671.56, "text": " every migration into a single one.", "tokens": [50766, 633, 17011, 666, 257, 2167, 472, 13, 50916], "temperature": 0.0, "avg_logprob": -0.1914504369099935, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.11089237779378891}, {"id": 114, "seek": 66052, "start": 671.56, "end": 676.72, "text": " It was good, not perfect for us, but it was good.", "tokens": [50916, 467, 390, 665, 11, 406, 2176, 337, 505, 11, 457, 309, 390, 665, 13, 51174], "temperature": 0.0, "avg_logprob": -0.1914504369099935, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.11089237779378891}, {"id": 115, "seek": 66052, "start": 676.72, "end": 683.4, "text": " The problem is that we needed to add manual porting, because for example we used a lot", "tokens": [51174, 440, 1154, 307, 300, 321, 2978, 281, 909, 9688, 2436, 278, 11, 570, 337, 1365, 321, 1143, 257, 688, 51508], "temperature": 0.0, "avg_logprob": -0.1914504369099935, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.11089237779378891}, {"id": 116, "seek": 68340, "start": 683.4, "end": 691.56, "text": " of functions, manual function, from a migration to another, from a version to another, and", "tokens": [50364, 295, 6828, 11, 9688, 2445, 11, 490, 257, 17011, 281, 1071, 11, 490, 257, 3037, 281, 1071, 11, 293, 50772], "temperature": 0.0, "avg_logprob": -0.1849716588070518, "compression_ratio": 1.7747252747252746, "no_speech_prob": 0.12078983336687088}, {"id": 117, "seek": 68340, "start": 691.56, "end": 698.92, "text": " that weren't migrated or automatically squashed, so we had to copy paste the function code", "tokens": [50772, 300, 4999, 380, 48329, 420, 6772, 2339, 12219, 11, 370, 321, 632, 281, 5055, 9163, 264, 2445, 3089, 51140], "temperature": 0.0, "avg_logprob": -0.1849716588070518, "compression_ratio": 1.7747252747252746, "no_speech_prob": 0.12078983336687088}, {"id": 118, "seek": 68340, "start": 698.92, "end": 705.4, "text": " into the squash migration and make some adjustments.", "tokens": [51140, 666, 264, 30725, 17011, 293, 652, 512, 18624, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1849716588070518, "compression_ratio": 1.7747252747252746, "no_speech_prob": 0.12078983336687088}, {"id": 119, "seek": 68340, "start": 705.4, "end": 712.4, "text": " And if we inspect the squash migration file, we can see there is on the top of the class", "tokens": [51464, 400, 498, 321, 15018, 264, 30725, 17011, 3991, 11, 321, 393, 536, 456, 307, 322, 264, 1192, 295, 264, 1508, 51814], "temperature": 0.0, "avg_logprob": -0.1849716588070518, "compression_ratio": 1.7747252747252746, "no_speech_prob": 0.12078983336687088}, {"id": 120, "seek": 71240, "start": 712.4, "end": 721.92, "text": " definition a list of things, a list of tuples in the replaces variable.", "tokens": [50364, 7123, 257, 1329, 295, 721, 11, 257, 1329, 295, 2604, 2622, 294, 264, 46734, 7006, 13, 50840], "temperature": 0.0, "avg_logprob": -0.26941616718585676, "compression_ratio": 1.5271317829457365, "no_speech_prob": 0.02217424102127552}, {"id": 121, "seek": 71240, "start": 721.92, "end": 727.4399999999999, "text": " So the first item is shop, the application name, and the second one is the migration", "tokens": [50840, 407, 264, 700, 3174, 307, 3945, 11, 264, 3861, 1315, 11, 293, 264, 1150, 472, 307, 264, 17011, 51116], "temperature": 0.0, "avg_logprob": -0.26941616718585676, "compression_ratio": 1.5271317829457365, "no_speech_prob": 0.02217424102127552}, {"id": 122, "seek": 71240, "start": 727.4399999999999, "end": 735.24, "text": " name, for every one of the 26 migration.", "tokens": [51116, 1315, 11, 337, 633, 472, 295, 264, 7551, 17011, 13, 51506], "temperature": 0.0, "avg_logprob": -0.26941616718585676, "compression_ratio": 1.5271317829457365, "no_speech_prob": 0.02217424102127552}, {"id": 123, "seek": 73524, "start": 735.24, "end": 741.88, "text": " And the recommended process is first squash, keep the old files, commit and release to", "tokens": [50364, 400, 264, 9628, 1399, 307, 700, 30725, 11, 1066, 264, 1331, 7098, 11, 5599, 293, 4374, 281, 50696], "temperature": 0.0, "avg_logprob": -0.2479884239935106, "compression_ratio": 1.6932515337423313, "no_speech_prob": 0.26468127965927124}, {"id": 124, "seek": 73524, "start": 741.88, "end": 750.08, "text": " production, to staging the demo until production, then wait until all systems are upgraded with", "tokens": [50696, 4265, 11, 281, 41085, 264, 10723, 1826, 4265, 11, 550, 1699, 1826, 439, 3652, 366, 24133, 365, 51106], "temperature": 0.0, "avg_logprob": -0.2479884239935106, "compression_ratio": 1.6932515337423313, "no_speech_prob": 0.26468127965927124}, {"id": 125, "seek": 73524, "start": 750.08, "end": 758.88, "text": " the new release, then you can remove the old migration files, commit and do a second release.", "tokens": [51106, 264, 777, 4374, 11, 550, 291, 393, 4159, 264, 1331, 17011, 7098, 11, 5599, 293, 360, 257, 1150, 4374, 13, 51546], "temperature": 0.0, "avg_logprob": -0.2479884239935106, "compression_ratio": 1.6932515337423313, "no_speech_prob": 0.26468127965927124}, {"id": 126, "seek": 75888, "start": 758.88, "end": 766.4, "text": " Then last but not least, you need to transition your squash migration to a normal migration,", "tokens": [50364, 1396, 1036, 457, 406, 1935, 11, 291, 643, 281, 6034, 428, 30725, 17011, 281, 257, 2710, 17011, 11, 50740], "temperature": 0.0, "avg_logprob": -0.20501972792984605, "compression_ratio": 1.994535519125683, "no_speech_prob": 0.13316960632801056}, {"id": 127, "seek": 75888, "start": 766.4, "end": 773.88, "text": " delete all migration files, all old migration files that has been replaced, and update all", "tokens": [50740, 12097, 439, 17011, 7098, 11, 439, 1331, 17011, 7098, 300, 575, 668, 10772, 11, 293, 5623, 439, 51114], "temperature": 0.0, "avg_logprob": -0.20501972792984605, "compression_ratio": 1.994535519125683, "no_speech_prob": 0.13316960632801056}, {"id": 128, "seek": 75888, "start": 773.88, "end": 780.72, "text": " migration that depends on the deleted ones with the new squash migration, and after everything", "tokens": [51114, 17011, 300, 5946, 322, 264, 22981, 2306, 365, 264, 777, 30725, 17011, 11, 293, 934, 1203, 51456], "temperature": 0.0, "avg_logprob": -0.20501972792984605, "compression_ratio": 1.994535519125683, "no_speech_prob": 0.13316960632801056}, {"id": 129, "seek": 75888, "start": 780.72, "end": 786.76, "text": " you can remove the replaces attribute in the squash migration, and everything is fine.", "tokens": [51456, 291, 393, 4159, 264, 46734, 19667, 294, 264, 30725, 17011, 11, 293, 1203, 307, 2489, 13, 51758], "temperature": 0.0, "avg_logprob": -0.20501972792984605, "compression_ratio": 1.994535519125683, "no_speech_prob": 0.13316960632801056}, {"id": 130, "seek": 78676, "start": 786.76, "end": 794.52, "text": " Then if you want to clean up your database, you can prove references, so in your database", "tokens": [50364, 1396, 498, 291, 528, 281, 2541, 493, 428, 8149, 11, 291, 393, 7081, 15400, 11, 370, 294, 428, 8149, 50752], "temperature": 0.0, "avg_logprob": -0.20577956948961532, "compression_ratio": 1.509933774834437, "no_speech_prob": 0.11869556456804276}, {"id": 131, "seek": 78676, "start": 794.52, "end": 800.28, "text": " there won't be references to old migrations.", "tokens": [50752, 456, 1582, 380, 312, 15400, 281, 1331, 6186, 12154, 13, 51040], "temperature": 0.0, "avg_logprob": -0.20577956948961532, "compression_ratio": 1.509933774834437, "no_speech_prob": 0.11869556456804276}, {"id": 132, "seek": 78676, "start": 800.28, "end": 808.52, "text": " Let's test performances after squashing, after spending a week on my work project doing that,", "tokens": [51040, 961, 311, 1500, 16087, 934, 2339, 11077, 11, 934, 6434, 257, 1243, 322, 452, 589, 1716, 884, 300, 11, 51452], "temperature": 0.0, "avg_logprob": -0.20577956948961532, "compression_ratio": 1.509933774834437, "no_speech_prob": 0.11869556456804276}, {"id": 133, "seek": 80852, "start": 808.52, "end": 823.0, "text": " and oh no changes, so I lost a week doing that without results, and don't tell my chief.", "tokens": [50364, 293, 1954, 572, 2962, 11, 370, 286, 2731, 257, 1243, 884, 300, 1553, 3542, 11, 293, 500, 380, 980, 452, 9588, 13, 51088], "temperature": 0.0, "avg_logprob": -0.27950153710707176, "compression_ratio": 1.3793103448275863, "no_speech_prob": 0.3316222131252289}, {"id": 134, "seek": 80852, "start": 823.0, "end": 826.6, "text": " So what's the point?", "tokens": [51088, 407, 437, 311, 264, 935, 30, 51268], "temperature": 0.0, "avg_logprob": -0.27950153710707176, "compression_ratio": 1.3793103448275863, "no_speech_prob": 0.3316222131252289}, {"id": 135, "seek": 80852, "start": 826.6, "end": 833.4, "text": " Well the point of squash migration is to move back from having several hundred migrations,", "tokens": [51268, 1042, 264, 935, 295, 30725, 17011, 307, 281, 1286, 646, 490, 1419, 2940, 3262, 6186, 12154, 11, 51608], "temperature": 0.0, "avg_logprob": -0.27950153710707176, "compression_ratio": 1.3793103448275863, "no_speech_prob": 0.3316222131252289}, {"id": 136, "seek": 83340, "start": 833.4, "end": 839.76, "text": " five to just a few, for example if you create a branch, a separate branch where you are", "tokens": [50364, 1732, 281, 445, 257, 1326, 11, 337, 1365, 498, 291, 1884, 257, 9819, 11, 257, 4994, 9819, 689, 291, 366, 50682], "temperature": 0.0, "avg_logprob": -0.27961671674573746, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.464410662651062}, {"id": 137, "seek": 83340, "start": 839.76, "end": 846.52, "text": " working you alone, you can squash migrations and propose just a single migration file in", "tokens": [50682, 1364, 291, 3312, 11, 291, 393, 30725, 6186, 12154, 293, 17421, 445, 257, 2167, 17011, 3991, 294, 51020], "temperature": 0.0, "avg_logprob": -0.27961671674573746, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.464410662651062}, {"id": 138, "seek": 83340, "start": 846.52, "end": 849.92, "text": " your request.", "tokens": [51020, 428, 5308, 13, 51190], "temperature": 0.0, "avg_logprob": -0.27961671674573746, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.464410662651062}, {"id": 139, "seek": 83340, "start": 849.92, "end": 854.92, "text": " I know, I know you wanted to speed up tests, so let's do it.", "tokens": [51190, 286, 458, 11, 286, 458, 291, 1415, 281, 3073, 493, 6921, 11, 370, 718, 311, 360, 309, 13, 51440], "temperature": 0.0, "avg_logprob": -0.27961671674573746, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.464410662651062}, {"id": 140, "seek": 83340, "start": 854.92, "end": 856.28, "text": " Are you ready?", "tokens": [51440, 2014, 291, 1919, 30, 51508], "temperature": 0.0, "avg_logprob": -0.27961671674573746, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.464410662651062}, {"id": 141, "seek": 85628, "start": 856.28, "end": 865.0799999999999, "text": " It's not that easy, but first you need to recreate migrations.", "tokens": [50364, 467, 311, 406, 300, 1858, 11, 457, 700, 291, 643, 281, 25833, 6186, 12154, 13, 50804], "temperature": 0.0, "avg_logprob": -0.18706528893832503, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.08673455566167831}, {"id": 142, "seek": 85628, "start": 865.0799999999999, "end": 872.4399999999999, "text": " So let's annotate migrations for a single specific application with show migrations,", "tokens": [50804, 407, 718, 311, 25339, 473, 6186, 12154, 337, 257, 2167, 2685, 3861, 365, 855, 6186, 12154, 11, 51172], "temperature": 0.0, "avg_logprob": -0.18706528893832503, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.08673455566167831}, {"id": 143, "seek": 85628, "start": 872.4399999999999, "end": 880.64, "text": " and then copy paste all the names of your migration files, and then you need to manually", "tokens": [51172, 293, 550, 5055, 9163, 439, 264, 5288, 295, 428, 17011, 7098, 11, 293, 550, 291, 643, 281, 16945, 51582], "temperature": 0.0, "avg_logprob": -0.18706528893832503, "compression_ratio": 1.6388888888888888, "no_speech_prob": 0.08673455566167831}, {"id": 144, "seek": 88064, "start": 880.64, "end": 888.24, "text": " create a replaces, you remember this one from a moment ago, you need to recreate the", "tokens": [50364, 1884, 257, 46734, 11, 291, 1604, 341, 472, 490, 257, 1623, 2057, 11, 291, 643, 281, 25833, 264, 50744], "temperature": 0.0, "avg_logprob": -0.24293888592329183, "compression_ratio": 1.6518987341772151, "no_speech_prob": 0.1528569459915161}, {"id": 145, "seek": 88064, "start": 888.24, "end": 895.88, "text": " replaces list with application name and migration file name, and store it somewhere in your", "tokens": [50744, 46734, 1329, 365, 3861, 1315, 293, 17011, 3991, 1315, 11, 293, 3531, 309, 4079, 294, 428, 51126], "temperature": 0.0, "avg_logprob": -0.24293888592329183, "compression_ratio": 1.6518987341772151, "no_speech_prob": 0.1528569459915161}, {"id": 146, "seek": 88064, "start": 895.88, "end": 904.6, "text": " computer, then move your migrations in a temporary directory, so out of the way, and", "tokens": [51126, 3820, 11, 550, 1286, 428, 6186, 12154, 294, 257, 13413, 21120, 11, 370, 484, 295, 264, 636, 11, 293, 51562], "temperature": 0.0, "avg_logprob": -0.24293888592329183, "compression_ratio": 1.6518987341772151, "no_speech_prob": 0.1528569459915161}, {"id": 147, "seek": 90460, "start": 904.6, "end": 911.48, "text": " make sure that show migrations doesn't show stuff.", "tokens": [50364, 652, 988, 300, 855, 6186, 12154, 1177, 380, 855, 1507, 13, 50708], "temperature": 0.0, "avg_logprob": -0.22246578761509486, "compression_ratio": 1.5578231292517006, "no_speech_prob": 0.06970299780368805}, {"id": 148, "seek": 90460, "start": 911.48, "end": 919.28, "text": " Now it's time to recreate migrations using your application name and a name, a specific", "tokens": [50708, 823, 309, 311, 565, 281, 25833, 6186, 12154, 1228, 428, 3861, 1315, 293, 257, 1315, 11, 257, 2685, 51098], "temperature": 0.0, "avg_logprob": -0.22246578761509486, "compression_ratio": 1.5578231292517006, "no_speech_prob": 0.06970299780368805}, {"id": 149, "seek": 90460, "start": 919.28, "end": 927.24, "text": " name, for example init squash, so you remember that this is the squash migration, and that", "tokens": [51098, 1315, 11, 337, 1365, 3157, 30725, 11, 370, 291, 1604, 300, 341, 307, 264, 30725, 17011, 11, 293, 300, 51496], "temperature": 0.0, "avg_logprob": -0.22246578761509486, "compression_ratio": 1.5578231292517006, "no_speech_prob": 0.06970299780368805}, {"id": 150, "seek": 92724, "start": 927.24, "end": 933.16, "text": " will create the first migration at your last model version.", "tokens": [50364, 486, 1884, 264, 700, 17011, 412, 428, 1036, 2316, 3037, 13, 50660], "temperature": 0.0, "avg_logprob": -0.1664370450106534, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.4762319028377533}, {"id": 151, "seek": 92724, "start": 933.16, "end": 941.4, "text": " Then open your migration file, copy paste the replaces array list, you created a moment", "tokens": [50660, 1396, 1269, 428, 17011, 3991, 11, 5055, 9163, 264, 46734, 10225, 1329, 11, 291, 2942, 257, 1623, 51072], "temperature": 0.0, "avg_logprob": -0.1664370450106534, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.4762319028377533}, {"id": 152, "seek": 92724, "start": 941.4, "end": 951.8, "text": " ago inside your class, then you can restore your old migration files in the original directories,", "tokens": [51072, 2057, 1854, 428, 1508, 11, 550, 291, 393, 15227, 428, 1331, 17011, 7098, 294, 264, 3380, 5391, 530, 11, 51592], "temperature": 0.0, "avg_logprob": -0.1664370450106534, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.4762319028377533}, {"id": 153, "seek": 95180, "start": 951.8, "end": 959.0799999999999, "text": " make sure for missing or overwritten files, and then remove the temporary directory.", "tokens": [50364, 652, 988, 337, 5361, 420, 670, 26859, 7098, 11, 293, 550, 4159, 264, 13413, 21120, 13, 50728], "temperature": 0.0, "avg_logprob": -0.23909665331428434, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.1462273895740509}, {"id": 154, "seek": 95180, "start": 959.0799999999999, "end": 966.5999999999999, "text": " Now with show migrations you need to check that everything is there, so all in this case", "tokens": [50728, 823, 365, 855, 6186, 12154, 291, 643, 281, 1520, 300, 1203, 307, 456, 11, 370, 439, 294, 341, 1389, 51104], "temperature": 0.0, "avg_logprob": -0.23909665331428434, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.1462273895740509}, {"id": 155, "seek": 95180, "start": 966.5999999999999, "end": 973.3599999999999, "text": " 26 migrations are there, and the first one, the squash migration is there but has not been", "tokens": [51104, 7551, 6186, 12154, 366, 456, 11, 293, 264, 700, 472, 11, 264, 30725, 17011, 307, 456, 457, 575, 406, 668, 51442], "temperature": 0.0, "avg_logprob": -0.23909665331428434, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.1462273895740509}, {"id": 156, "seek": 95180, "start": 973.3599999999999, "end": 981.24, "text": " applied, then apply your squash migrations and check again with squash show migrations", "tokens": [51442, 6456, 11, 550, 3079, 428, 30725, 6186, 12154, 293, 1520, 797, 365, 30725, 855, 6186, 12154, 51836], "temperature": 0.0, "avg_logprob": -0.23909665331428434, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.1462273895740509}, {"id": 157, "seek": 98124, "start": 981.6800000000001, "end": 987.44, "text": " that everything has been squashed and you have just a single migration, and then you", "tokens": [50386, 300, 1203, 575, 668, 2339, 12219, 293, 291, 362, 445, 257, 2167, 17011, 11, 293, 550, 291, 50674], "temperature": 0.0, "avg_logprob": -0.27468459606170653, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.1801827847957611}, {"id": 158, "seek": 98124, "start": 987.44, "end": 996.92, "text": " can go back to your post squash task, so commit and release to production, upgrade those systems,", "tokens": [50674, 393, 352, 646, 281, 428, 2183, 30725, 5633, 11, 370, 5599, 293, 4374, 281, 4265, 11, 11484, 729, 3652, 11, 51148], "temperature": 0.0, "avg_logprob": -0.27468459606170653, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.1801827847957611}, {"id": 159, "seek": 98124, "start": 996.92, "end": 1003.52, "text": " of course staging demo production, everything else, update on migrations that depends on", "tokens": [51148, 295, 1164, 41085, 10723, 4265, 11, 1203, 1646, 11, 5623, 322, 6186, 12154, 300, 5946, 322, 51478], "temperature": 0.0, "avg_logprob": -0.27468459606170653, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.1801827847957611}, {"id": 160, "seek": 98124, "start": 1003.52, "end": 1010.36, "text": " the deleted migrations, remove the replace attribute, and if you want to bring references", "tokens": [51478, 264, 22981, 6186, 12154, 11, 4159, 264, 7406, 19667, 11, 293, 498, 291, 528, 281, 1565, 15400, 51820], "temperature": 0.0, "avg_logprob": -0.27468459606170653, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.1801827847957611}, {"id": 161, "seek": 101036, "start": 1010.48, "end": 1017.08, "text": " to the little migration, and everything is perfect, right?", "tokens": [50370, 281, 264, 707, 17011, 11, 293, 1203, 307, 2176, 11, 558, 30, 50700], "temperature": 0.0, "avg_logprob": -0.2877574988773891, "compression_ratio": 1.5562913907284768, "no_speech_prob": 0.0063823433592915535}, {"id": 162, "seek": 101036, "start": 1017.08, "end": 1028.24, "text": " Well, not exactly, if you have migrations providing initial data, you need to create", "tokens": [50700, 1042, 11, 406, 2293, 11, 498, 291, 362, 6186, 12154, 6530, 5883, 1412, 11, 291, 643, 281, 1884, 51258], "temperature": 0.0, "avg_logprob": -0.2877574988773891, "compression_ratio": 1.5562913907284768, "no_speech_prob": 0.0063823433592915535}, {"id": 163, "seek": 101036, "start": 1028.24, "end": 1037.32, "text": " a new migration for that, because recreating migration from scratch, it doesn't create that", "tokens": [51258, 257, 777, 17011, 337, 300, 11, 570, 850, 44613, 17011, 490, 8459, 11, 309, 1177, 380, 1884, 300, 51712], "temperature": 0.0, "avg_logprob": -0.2877574988773891, "compression_ratio": 1.5562913907284768, "no_speech_prob": 0.0063823433592915535}, {"id": 164, "seek": 103732, "start": 1037.36, "end": 1044.6799999999998, "text": " insertion in your modules, or even better, you can use fixtures, and in the doc you can", "tokens": [50366, 8969, 313, 294, 428, 16679, 11, 420, 754, 1101, 11, 291, 393, 764, 15848, 37610, 11, 293, 294, 264, 3211, 291, 393, 50732], "temperature": 0.0, "avg_logprob": -0.1543620380003061, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.031972553580999374}, {"id": 165, "seek": 103732, "start": 1044.6799999999998, "end": 1055.24, "text": " see how to use fixtures in both database migration and also in testing, and that's perfect,", "tokens": [50732, 536, 577, 281, 764, 15848, 37610, 294, 1293, 8149, 17011, 293, 611, 294, 4997, 11, 293, 300, 311, 2176, 11, 51260], "temperature": 0.0, "avg_logprob": -0.1543620380003061, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.031972553580999374}, {"id": 166, "seek": 103732, "start": 1055.24, "end": 1062.0, "text": " and then you need to be aware of circular dependencies, because if your project is big", "tokens": [51260, 293, 550, 291, 643, 281, 312, 3650, 295, 16476, 36606, 11, 570, 498, 428, 1716, 307, 955, 51598], "temperature": 0.0, "avg_logprob": -0.1543620380003061, "compression_ratio": 1.6219512195121952, "no_speech_prob": 0.031972553580999374}, {"id": 167, "seek": 106200, "start": 1062.0, "end": 1067.8, "text": " and grows during the time, you could have circular dependencies from a project to another", "tokens": [50364, 293, 13156, 1830, 264, 565, 11, 291, 727, 362, 16476, 36606, 490, 257, 1716, 281, 1071, 50654], "temperature": 0.0, "avg_logprob": -0.20081875687938625, "compression_ratio": 1.6746987951807228, "no_speech_prob": 0.01350430678576231}, {"id": 168, "seek": 106200, "start": 1067.8, "end": 1077.48, "text": " and backward, and this problem requires you to remove all foreign key, causing the circular", "tokens": [50654, 293, 23897, 11, 293, 341, 1154, 7029, 291, 281, 4159, 439, 5329, 2141, 11, 9853, 264, 16476, 51138], "temperature": 0.0, "avg_logprob": -0.20081875687938625, "compression_ratio": 1.6746987951807228, "no_speech_prob": 0.01350430678576231}, {"id": 169, "seek": 106200, "start": 1077.48, "end": 1087.56, "text": " dependency, create the first migration, restore the foreign keys, and create a second migration,", "tokens": [51138, 33621, 11, 1884, 264, 700, 17011, 11, 15227, 264, 5329, 9317, 11, 293, 1884, 257, 1150, 17011, 11, 51642], "temperature": 0.0, "avg_logprob": -0.20081875687938625, "compression_ratio": 1.6746987951807228, "no_speech_prob": 0.01350430678576231}, {"id": 170, "seek": 108756, "start": 1088.32, "end": 1092.84, "text": " and this way you will hopefully solve this.", "tokens": [50402, 293, 341, 636, 291, 486, 4696, 5039, 341, 13, 50628], "temperature": 0.0, "avg_logprob": -0.23219401041666668, "compression_ratio": 1.5743589743589743, "no_speech_prob": 0.018529659137129784}, {"id": 171, "seek": 108756, "start": 1092.84, "end": 1100.04, "text": " Now, let's try to test performances after all of this, after another week spent on the", "tokens": [50628, 823, 11, 718, 311, 853, 281, 1500, 16087, 934, 439, 295, 341, 11, 934, 1071, 1243, 4418, 322, 264, 50988], "temperature": 0.0, "avg_logprob": -0.23219401041666668, "compression_ratio": 1.5743589743589743, "no_speech_prob": 0.018529659137129784}, {"id": 172, "seek": 108756, "start": 1100.04, "end": 1107.8799999999999, "text": " project trying to tell your chief that, oh, I'm working on something useful, I promise", "tokens": [50988, 1716, 1382, 281, 980, 428, 9588, 300, 11, 1954, 11, 286, 478, 1364, 322, 746, 4420, 11, 286, 6228, 51380], "temperature": 0.0, "avg_logprob": -0.23219401041666668, "compression_ratio": 1.5743589743589743, "no_speech_prob": 0.018529659137129784}, {"id": 173, "seek": 108756, "start": 1107.8799999999999, "end": 1116.2, "text": " you, and yeah, of course, after recreating everything from scratch, our database creation", "tokens": [51380, 291, 11, 293, 1338, 11, 295, 1164, 11, 934, 850, 44613, 1203, 490, 8459, 11, 527, 8149, 8016, 51796], "temperature": 0.0, "avg_logprob": -0.23219401041666668, "compression_ratio": 1.5743589743589743, "no_speech_prob": 0.018529659137129784}, {"id": 174, "seek": 111620, "start": 1116.2, "end": 1122.56, "text": " task took five seconds instead of 20, that was perfect.", "tokens": [50364, 5633, 1890, 1732, 3949, 2602, 295, 945, 11, 300, 390, 2176, 13, 50682], "temperature": 0.0, "avg_logprob": -0.2686442106198042, "compression_ratio": 1.4595959595959596, "no_speech_prob": 0.0460188202559948}, {"id": 175, "seek": 111620, "start": 1122.56, "end": 1130.3600000000001, "text": " Yeah, it was perfect, but does this apply to everyone?", "tokens": [50682, 865, 11, 309, 390, 2176, 11, 457, 775, 341, 3079, 281, 1518, 30, 51072], "temperature": 0.0, "avg_logprob": -0.2686442106198042, "compression_ratio": 1.4595959595959596, "no_speech_prob": 0.0460188202559948}, {"id": 176, "seek": 111620, "start": 1130.3600000000001, "end": 1136.96, "text": " It depends, because if you have really big, big projects and you are paying by the minute", "tokens": [51072, 467, 5946, 11, 570, 498, 291, 362, 534, 955, 11, 955, 4455, 293, 291, 366, 6229, 538, 264, 3456, 51402], "temperature": 0.0, "avg_logprob": -0.2686442106198042, "compression_ratio": 1.4595959595959596, "no_speech_prob": 0.0460188202559948}, {"id": 177, "seek": 111620, "start": 1136.96, "end": 1146.16, "text": " your CI CD workflows, and you are on the verge of having to pay $3-4 per user per month,", "tokens": [51402, 428, 37777, 6743, 43461, 11, 293, 291, 366, 322, 264, 37164, 295, 1419, 281, 1689, 1848, 18, 12, 19, 680, 4195, 680, 1618, 11, 51862], "temperature": 0.0, "avg_logprob": -0.2686442106198042, "compression_ratio": 1.4595959595959596, "no_speech_prob": 0.0460188202559948}, {"id": 178, "seek": 114616, "start": 1146.3200000000002, "end": 1157.52, "text": " to 20 something dollars per user per month, then maybe you want to stay on the little", "tokens": [50372, 281, 945, 746, 3808, 680, 4195, 680, 1618, 11, 550, 1310, 291, 528, 281, 1754, 322, 264, 707, 50932], "temperature": 0.0, "avg_logprob": -0.20958487192789713, "compression_ratio": 1.5654761904761905, "no_speech_prob": 0.007068720180541277}, {"id": 179, "seek": 114616, "start": 1157.52, "end": 1165.68, "text": " cheaper branch of this, so that could be a solution, but if you just want to make order", "tokens": [50932, 12284, 9819, 295, 341, 11, 370, 300, 727, 312, 257, 3827, 11, 457, 498, 291, 445, 528, 281, 652, 1668, 51340], "temperature": 0.0, "avg_logprob": -0.20958487192789713, "compression_ratio": 1.5654761904761905, "no_speech_prob": 0.007068720180541277}, {"id": 180, "seek": 114616, "start": 1165.68, "end": 1174.52, "text": " in your migration file, then just use squash migration without everything else, or if you", "tokens": [51340, 294, 428, 17011, 3991, 11, 550, 445, 764, 30725, 17011, 1553, 1203, 1646, 11, 420, 498, 291, 51782], "temperature": 0.0, "avg_logprob": -0.20958487192789713, "compression_ratio": 1.5654761904761905, "no_speech_prob": 0.007068720180541277}, {"id": 181, "seek": 117452, "start": 1174.56, "end": 1180.36, "text": " want to speed up tests on your localhost, you just need to use KipDB, and everything", "tokens": [50366, 528, 281, 3073, 493, 6921, 322, 428, 2654, 6037, 11, 291, 445, 643, 281, 764, 591, 647, 27735, 11, 293, 1203, 50656], "temperature": 0.0, "avg_logprob": -0.21132871379023013, "compression_ratio": 1.6203703703703705, "no_speech_prob": 0.009394994005560875}, {"id": 182, "seek": 117452, "start": 1180.36, "end": 1188.08, "text": " is fine, without having to spend, in my case, two weeks working on this, just to save maybe", "tokens": [50656, 307, 2489, 11, 1553, 1419, 281, 3496, 11, 294, 452, 1389, 11, 732, 3259, 1364, 322, 341, 11, 445, 281, 3155, 1310, 51042], "temperature": 0.0, "avg_logprob": -0.21132871379023013, "compression_ratio": 1.6203703703703705, "no_speech_prob": 0.009394994005560875}, {"id": 183, "seek": 117452, "start": 1188.08, "end": 1196.36, "text": " a couple of seconds on your project, so it depends on your use case, and we are done,", "tokens": [51042, 257, 1916, 295, 3949, 322, 428, 1716, 11, 370, 309, 5946, 322, 428, 764, 1389, 11, 293, 321, 366, 1096, 11, 51456], "temperature": 0.0, "avg_logprob": -0.21132871379023013, "compression_ratio": 1.6203703703703705, "no_speech_prob": 0.009394994005560875}, {"id": 184, "seek": 117452, "start": 1196.36, "end": 1203.68, "text": " so if you want to see the example repository, it's there with three different branches,", "tokens": [51456, 370, 498, 291, 528, 281, 536, 264, 1365, 25841, 11, 309, 311, 456, 365, 1045, 819, 14770, 11, 51822], "temperature": 0.0, "avg_logprob": -0.21132871379023013, "compression_ratio": 1.6203703703703705, "no_speech_prob": 0.009394994005560875}, {"id": 185, "seek": 120368, "start": 1203.72, "end": 1210.04, "text": " if you want to compare them on your local machine, and I uploaded the slides on the", "tokens": [50366, 498, 291, 528, 281, 6794, 552, 322, 428, 2654, 3479, 11, 293, 286, 17135, 264, 9788, 322, 264, 50682], "temperature": 0.0, "avg_logprob": -0.3931138281728707, "compression_ratio": 1.3384615384615384, "no_speech_prob": 0.01244624238461256}, {"id": 186, "seek": 120368, "start": 1210.04, "end": 1216.24, "text": " FOSDEN website, so they are there if you want to take a look at them.", "tokens": [50682, 479, 4367, 35, 2195, 3144, 11, 370, 436, 366, 456, 498, 291, 528, 281, 747, 257, 574, 412, 552, 13, 50992], "temperature": 0.0, "avg_logprob": -0.3931138281728707, "compression_ratio": 1.3384615384615384, "no_speech_prob": 0.01244624238461256}, {"id": 187, "seek": 120368, "start": 1216.24, "end": 1217.24, "text": " Thank you very much.", "tokens": [50992, 1044, 291, 588, 709, 13, 51042], "temperature": 0.0, "avg_logprob": -0.3931138281728707, "compression_ratio": 1.3384615384615384, "no_speech_prob": 0.01244624238461256}, {"id": 188, "seek": 121724, "start": 1217.24, "end": 1229.44, "text": " Okay, we have time for quite a few questions, I see one up there.", "tokens": [50364, 1033, 11, 321, 362, 565, 337, 1596, 257, 1326, 1651, 11, 286, 536, 472, 493, 456, 13, 50974], "temperature": 0.0, "avg_logprob": -0.5006724766322544, "compression_ratio": 0.9558823529411765, "no_speech_prob": 0.1080734133720398}, {"id": 189, "seek": 122944, "start": 1229.44, "end": 1249.8, "text": " Given your salary, and these two weeks of work you've done, how many years of enterprise", "tokens": [50364, 18600, 428, 15360, 11, 293, 613, 732, 3259, 295, 589, 291, 600, 1096, 11, 577, 867, 924, 295, 14132, 51382], "temperature": 0.0, "avg_logprob": -0.34516998926798503, "compression_ratio": 1.1808510638297873, "no_speech_prob": 0.04509620741009712}, {"id": 190, "seek": 122944, "start": 1249.8, "end": 1252.2, "text": " lessons did you avoid?", "tokens": [51382, 8820, 630, 291, 5042, 30, 51502], "temperature": 0.0, "avg_logprob": -0.34516998926798503, "compression_ratio": 1.1808510638297873, "no_speech_prob": 0.04509620741009712}, {"id": 191, "seek": 125220, "start": 1253.16, "end": 1260.92, "text": " That's a nice question, hopefully my chief didn't ask me that, but I think we could have", "tokens": [50412, 663, 311, 257, 1481, 1168, 11, 4696, 452, 9588, 994, 380, 1029, 385, 300, 11, 457, 286, 519, 321, 727, 362, 50800], "temperature": 0.0, "avg_logprob": -0.2650965281895229, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.5662470459938049}, {"id": 192, "seek": 125220, "start": 1260.92, "end": 1268.72, "text": " paid maybe a year, I don't know, one year of this, but yeah, it was fun to play with", "tokens": [50800, 4835, 1310, 257, 1064, 11, 286, 500, 380, 458, 11, 472, 1064, 295, 341, 11, 457, 1338, 11, 309, 390, 1019, 281, 862, 365, 51190], "temperature": 0.0, "avg_logprob": -0.2650965281895229, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.5662470459938049}, {"id": 193, "seek": 125220, "start": 1268.72, "end": 1277.16, "text": " this, and for me at least spending two weeks trying new stuff, or trying to discover hidden", "tokens": [51190, 341, 11, 293, 337, 385, 412, 1935, 6434, 732, 3259, 1382, 777, 1507, 11, 420, 1382, 281, 4411, 7633, 51612], "temperature": 0.0, "avg_logprob": -0.2650965281895229, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.5662470459938049}, {"id": 194, "seek": 125220, "start": 1277.16, "end": 1280.3600000000001, "text": " stuff from the jungle.", "tokens": [51612, 1507, 490, 264, 18228, 13, 51772], "temperature": 0.0, "avg_logprob": -0.2650965281895229, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.5662470459938049}, {"id": 195, "seek": 125220, "start": 1280.3600000000001, "end": 1281.3600000000001, "text": " More questions?", "tokens": [51772, 5048, 1651, 30, 51822], "temperature": 0.0, "avg_logprob": -0.2650965281895229, "compression_ratio": 1.4901960784313726, "no_speech_prob": 0.5662470459938049}, {"id": 196, "seek": 128136, "start": 1281.52, "end": 1282.52, "text": " Good question.", "tokens": [50372, 2205, 1168, 13, 50422], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 197, "seek": 128136, "start": 1282.52, "end": 1297.1999999999998, "text": " Yeah, thanks for the great talk, I was wondering if you looked into using like seed data betas", "tokens": [50422, 865, 11, 3231, 337, 264, 869, 751, 11, 286, 390, 6359, 498, 291, 2956, 666, 1228, 411, 8871, 1412, 778, 296, 51156], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 198, "seek": 128136, "start": 1297.1999999999998, "end": 1299.32, "text": " for CI, so that...", "tokens": [51156, 337, 37777, 11, 370, 300, 485, 51262], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 199, "seek": 128136, "start": 1299.32, "end": 1300.32, "text": " Sorry.", "tokens": [51262, 4919, 13, 51312], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 200, "seek": 128136, "start": 1300.32, "end": 1302.4399999999998, "text": " Yeah, you don't hear it?", "tokens": [51312, 865, 11, 291, 500, 380, 1568, 309, 30, 51418], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 201, "seek": 128136, "start": 1302.4399999999998, "end": 1305.7199999999998, "text": " No, I didn't hear you, sorry.", "tokens": [51418, 883, 11, 286, 994, 380, 1568, 291, 11, 2597, 13, 51582], "temperature": 0.0, "avg_logprob": -0.44513118267059326, "compression_ratio": 1.3571428571428572, "no_speech_prob": 0.2219950556755066}, {"id": 202, "seek": 130572, "start": 1305.72, "end": 1311.8, "text": " If you looked into seed data betas for CI, so that you run your migrations locally,", "tokens": [50364, 759, 291, 2956, 666, 8871, 1412, 778, 296, 337, 37777, 11, 370, 300, 291, 1190, 428, 6186, 12154, 16143, 11, 50668], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 203, "seek": 130572, "start": 1311.8, "end": 1318.56, "text": " and then dump the database, and then use that database during CI to start off with a pre-migrated", "tokens": [50668, 293, 550, 11430, 264, 8149, 11, 293, 550, 764, 300, 8149, 1830, 37777, 281, 722, 766, 365, 257, 659, 12, 76, 328, 5468, 51006], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 204, "seek": 130572, "start": 1318.56, "end": 1319.56, "text": " database.", "tokens": [51006, 8149, 13, 51056], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 205, "seek": 130572, "start": 1319.56, "end": 1326.3600000000001, "text": " No, I didn't think about that, it's a good idea, so you just upload your database dump,", "tokens": [51056, 883, 11, 286, 994, 380, 519, 466, 300, 11, 309, 311, 257, 665, 1558, 11, 370, 291, 445, 6580, 428, 8149, 11430, 11, 51396], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 206, "seek": 130572, "start": 1326.3600000000001, "end": 1327.3600000000001, "text": " and then on your...", "tokens": [51396, 293, 550, 322, 428, 485, 51446], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 207, "seek": 130572, "start": 1327.3600000000001, "end": 1332.96, "text": " Yeah, so you just set up your CI script to use that database when it initializes.", "tokens": [51446, 865, 11, 370, 291, 445, 992, 493, 428, 37777, 5755, 281, 764, 300, 8149, 562, 309, 5883, 5660, 13, 51726], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 208, "seek": 130572, "start": 1332.96, "end": 1335.68, "text": " That could be a good idea, I need to try that, thank you.", "tokens": [51726, 663, 727, 312, 257, 665, 1558, 11, 286, 643, 281, 853, 300, 11, 1309, 291, 13, 51862], "temperature": 0.0, "avg_logprob": -0.1787697269070533, "compression_ratio": 1.7918367346938775, "no_speech_prob": 0.4519428312778473}, {"id": 209, "seek": 133568, "start": 1335.68, "end": 1341.48, "text": " So you restore the database and just applies your last migrations without having to apply", "tokens": [50364, 407, 291, 15227, 264, 8149, 293, 445, 13165, 428, 1036, 6186, 12154, 1553, 1419, 281, 3079, 50654], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 210, "seek": 133568, "start": 1341.48, "end": 1342.48, "text": " everything.", "tokens": [50654, 1203, 13, 50704], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 211, "seek": 133568, "start": 1342.48, "end": 1343.48, "text": " Yeah, exactly.", "tokens": [50704, 865, 11, 2293, 13, 50754], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 212, "seek": 133568, "start": 1343.48, "end": 1349.3200000000002, "text": " Yeah, that's a good idea, thank you.", "tokens": [50754, 865, 11, 300, 311, 257, 665, 1558, 11, 1309, 291, 13, 51046], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 213, "seek": 133568, "start": 1349.3200000000002, "end": 1350.3200000000002, "text": " Thank you.", "tokens": [51046, 1044, 291, 13, 51096], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 214, "seek": 133568, "start": 1350.3200000000002, "end": 1357.64, "text": " I was also wondering if you're using Postgres for example, you can disable fsync that will", "tokens": [51096, 286, 390, 611, 6359, 498, 291, 434, 1228, 10223, 45189, 337, 1365, 11, 291, 393, 28362, 283, 82, 34015, 300, 486, 51462], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 215, "seek": 133568, "start": 1357.64, "end": 1364.3200000000002, "text": " just keep database in memory, so that probably be a solution for big time.", "tokens": [51462, 445, 1066, 8149, 294, 4675, 11, 370, 300, 1391, 312, 257, 3827, 337, 955, 565, 13, 51796], "temperature": 0.0, "avg_logprob": -0.2864861006147406, "compression_ratio": 1.5566037735849056, "no_speech_prob": 0.0253069456666708}, {"id": 216, "seek": 136432, "start": 1364.32, "end": 1369.84, "text": " So locally we kept the database in memory, the problem was on our CI CD, so we created", "tokens": [50364, 407, 16143, 321, 4305, 264, 8149, 294, 4675, 11, 264, 1154, 390, 322, 527, 37777, 6743, 11, 370, 321, 2942, 50640], "temperature": 0.0, "avg_logprob": -0.21856152734091117, "compression_ratio": 1.6465116279069767, "no_speech_prob": 0.15594470500946045}, {"id": 217, "seek": 136432, "start": 1369.84, "end": 1376.84, "text": " a service in the workflow files, and that was creating a database from scratch.", "tokens": [50640, 257, 2643, 294, 264, 20993, 7098, 11, 293, 300, 390, 4084, 257, 8149, 490, 8459, 13, 50990], "temperature": 0.0, "avg_logprob": -0.21856152734091117, "compression_ratio": 1.6465116279069767, "no_speech_prob": 0.15594470500946045}, {"id": 218, "seek": 136432, "start": 1376.84, "end": 1383.24, "text": " So it was just a configuration you can just add on your Postgres site on the CI...", "tokens": [50990, 407, 309, 390, 445, 257, 11694, 291, 393, 445, 909, 322, 428, 10223, 45189, 3621, 322, 264, 37777, 485, 51310], "temperature": 0.0, "avg_logprob": -0.21856152734091117, "compression_ratio": 1.6465116279069767, "no_speech_prob": 0.15594470500946045}, {"id": 219, "seek": 136432, "start": 1383.24, "end": 1390.32, "text": " We had to consider the time for storing and restoring the database on that configuration", "tokens": [51310, 492, 632, 281, 1949, 264, 565, 337, 26085, 293, 36349, 264, 8149, 322, 300, 11694, 51664], "temperature": 0.0, "avg_logprob": -0.21856152734091117, "compression_ratio": 1.6465116279069767, "no_speech_prob": 0.15594470500946045}, {"id": 220, "seek": 136432, "start": 1390.32, "end": 1391.3999999999999, "text": " from the cache.", "tokens": [51664, 490, 264, 19459, 13, 51718], "temperature": 0.0, "avg_logprob": -0.21856152734091117, "compression_ratio": 1.6465116279069767, "no_speech_prob": 0.15594470500946045}, {"id": 221, "seek": 139140, "start": 1391.4, "end": 1402.48, "text": " So it was a little bit of time for that, but yeah, that was an option I tried to...", "tokens": [50364, 407, 309, 390, 257, 707, 857, 295, 565, 337, 300, 11, 457, 1338, 11, 300, 390, 364, 3614, 286, 3031, 281, 485, 50918], "temperature": 0.0, "avg_logprob": -0.2207265884157211, "compression_ratio": 1.422077922077922, "no_speech_prob": 0.16959790885448456}, {"id": 222, "seek": 139140, "start": 1402.48, "end": 1406.24, "text": " More questions?", "tokens": [50918, 5048, 1651, 30, 51106], "temperature": 0.0, "avg_logprob": -0.2207265884157211, "compression_ratio": 1.422077922077922, "no_speech_prob": 0.16959790885448456}, {"id": 223, "seek": 139140, "start": 1406.24, "end": 1409.24, "text": " So very cool talk.", "tokens": [51106, 407, 588, 1627, 751, 13, 51256], "temperature": 0.0, "avg_logprob": -0.2207265884157211, "compression_ratio": 1.422077922077922, "no_speech_prob": 0.16959790885448456}, {"id": 224, "seek": 139140, "start": 1409.24, "end": 1410.3600000000001, "text": " I like your method.", "tokens": [51256, 286, 411, 428, 3170, 13, 51312], "temperature": 0.0, "avg_logprob": -0.2207265884157211, "compression_ratio": 1.422077922077922, "no_speech_prob": 0.16959790885448456}, {"id": 225, "seek": 139140, "start": 1410.3600000000001, "end": 1416.44, "text": " I basically came up with the same method about five years ago for this approach.", "tokens": [51312, 286, 1936, 1361, 493, 365, 264, 912, 3170, 466, 1732, 924, 2057, 337, 341, 3109, 13, 51616], "temperature": 0.0, "avg_logprob": -0.2207265884157211, "compression_ratio": 1.422077922077922, "no_speech_prob": 0.16959790885448456}, {"id": 226, "seek": 141644, "start": 1416.44, "end": 1421.28, "text": " Do you think there's an opportunity to create a tool to automate some of this process?", "tokens": [50364, 1144, 291, 519, 456, 311, 364, 2650, 281, 1884, 257, 2290, 281, 31605, 512, 295, 341, 1399, 30, 50606], "temperature": 0.0, "avg_logprob": -0.2700491343459038, "compression_ratio": 1.4607329842931938, "no_speech_prob": 0.07763215154409409}, {"id": 227, "seek": 141644, "start": 1421.28, "end": 1424.0, "text": " Well, that's a good question.", "tokens": [50606, 1042, 11, 300, 311, 257, 665, 1168, 13, 50742], "temperature": 0.0, "avg_logprob": -0.2700491343459038, "compression_ratio": 1.4607329842931938, "no_speech_prob": 0.07763215154409409}, {"id": 228, "seek": 141644, "start": 1424.0, "end": 1431.64, "text": " Maybe implementing that in the squash migration in some way, I don't know.", "tokens": [50742, 2704, 18114, 300, 294, 264, 30725, 17011, 294, 512, 636, 11, 286, 500, 380, 458, 13, 51124], "temperature": 0.0, "avg_logprob": -0.2700491343459038, "compression_ratio": 1.4607329842931938, "no_speech_prob": 0.07763215154409409}, {"id": 229, "seek": 141644, "start": 1431.64, "end": 1442.0, "text": " We could, we can try to do it just to save other two weeks of salary from other people.", "tokens": [51124, 492, 727, 11, 321, 393, 853, 281, 360, 309, 445, 281, 3155, 661, 732, 3259, 295, 15360, 490, 661, 561, 13, 51642], "temperature": 0.0, "avg_logprob": -0.2700491343459038, "compression_ratio": 1.4607329842931938, "no_speech_prob": 0.07763215154409409}, {"id": 230, "seek": 144200, "start": 1443.0, "end": 1449.16, "text": " Okay, I think we're done with questions, so we're going to have another five minute", "tokens": [50414, 1033, 11, 286, 519, 321, 434, 1096, 365, 1651, 11, 370, 321, 434, 516, 281, 362, 1071, 1732, 3456, 50722], "temperature": 0.0, "avg_logprob": -0.3126733428553531, "compression_ratio": 1.2432432432432432, "no_speech_prob": 0.0303215179592371}, {"id": 231, "seek": 144200, "start": 1449.16, "end": 1451.16, "text": " break and then continue with the next talk.", "tokens": [50722, 1821, 293, 550, 2354, 365, 264, 958, 751, 13, 50822], "temperature": 0.0, "avg_logprob": -0.3126733428553531, "compression_ratio": 1.2432432432432432, "no_speech_prob": 0.0303215179592371}, {"id": 232, "seek": 144200, "start": 1451.16, "end": 1451.92, "text": " Thank you.", "tokens": [50822, 1044, 291, 13, 50860], "temperature": 0.0, "avg_logprob": -0.3126733428553531, "compression_ratio": 1.2432432432432432, "no_speech_prob": 0.0303215179592371}], "language": "en"}