{"text": " Thank youender million that is going Technical question. We can edit the video later. Let's start very lighthearted then. Maybe a shell of hands. Who here has heard of mutation testing? Amazing. I can go very quickly to some flights then. Who has never heard of mutation testing? For who is the completely new concept? I will cover it for you guys. That's nice. Of course I'm here, but I'd like to promote Striker a little bit. Who of you is actually using Striker already? Nobody. One person. Well, that's my colleague. He's also working on it. Cool. You guys are definitely going to learn some stuff today then. I can just start right? Sure. Welcome everybody to the talk, How Mutation Testing Got Practical? I'm really focusing on the Got Practical in this talk. I will be explaining mutation testing a bit, but I'm really looking deep into the internals and why is the idea really old? It's a practical use case, relatively new. So I'll get into that. But first, a little introduction. My name is Jan Dele Kester. I'm a self-engineering consultant at InfoSupport. It's a consultancy organization in the Netherlands. I'm also a trainer there, and I'm a research supervisor. And that last one is very relevant today. You'll hear why soon. If you want to contact me afterwards, you can use the link then, I guess, but you can also find me on GitHub. And as I said, I'm here on behalf of Striker. Striker is a mutation testing framework for JavaScript and TypeScripts, C-Sharp, Scala, and hopefully at some point, Kotlin. There's like a partial implementation there already. We're working hard on it. You can find us at StrikerMutator.io, and of course, I have all these nice socks for you guys. So if you're really good with asking questions and reacting to my questions, you might get some. And otherwise, you'll see us after. We'll have some more. So in this talk, in this next 25 minutes, because I am going to try to leave room for questions as well, I first want to talk about why do we actually need to understand our tests? Why is just writing a test not good enough? I also want to go into what mutation testing is for the people that don't know yet. And finally, and that's the major part, hopefully if I don't run out of time, I'm going to go deep in how we got to practical applicability, how we got into this state now where we can actually run mutation testing in our real projects. And that means talking about some state of art, state of art performance improvements. But first, we have to talk about the false sense of security. Because this is a promotional image I copied shamelessly from the Sonacube website. And they show this nice dashboard where they say, well, everything is good. There's no issues, no bugs, it's all fine. And there's even 76% test coverage. Who would be happy with that? Okay, who wants to say why? Why is 76% good according to you? Lots of green. Lots of green. Larger small socks. I don't wear small socks. You get some anyway. Sorry about that. They're hard to throw in this room. I would say I would not be happy with that. Because, I mean, our tests, apparently when we're running our tests, we reach 76% of our code. I don't think that's enough. Because there is more than 20% of our code that is not even getting executed for doing the test. That's a problem. But even 100% code coverage is actually, it doesn't say much. Because coverage only means that code is being executed. We are only testing, in a worst-case scenario, that the program does not crash. What you actually want to know is if our tests do something, and I can very easily get 100% code coverage on the program without writing any assertions, that I'm just checking that the test execution does not crash. So we need a way of testing our tests. And no, we're not going to write unit tests to test our test logic, because that would be stupid. I mean, it would never end. We need to be smart about that. And that's where mutation testing comes in. So what we're going to do is to introduce changes in production code automatically. That's a tool that's doing that. We're going to test again to see whether the tests start failing. Because when the tests start failing, at that point, you know that your tests are actually able to catch that bug that we purposefully introduced. So it's also from a white box testing, because we really have to know stuff about the internals of the code to change it, and see whether the tests are good enough to catch that. And this is really not a new idea, because there's this nice paper from 79 already, where they talk about a new way of a new type of software test. And you can actually find this on Google, and you can read it if you want. But even back then, 40 years ago, 45 years ago, they were already talking about it. But only recently, and I talk recently in a very broad sense here, because I wasn't even in high school, I think, when I'm talking about reasons. Then it got more traction, because the problem is, in the 70s, or the late 70s, it was just a good idea. We did not have the resources to actually apply it in practice. And what you see here, the dark-colored bars are publications, research publications about practical applicability, and they really spike early this millennium. And there are reasons for that. Mostly also, I think, because our computers got fast enough. And why that is important is because of how mutation testing works, what the process behind it is. Because we start with our source code, and we are feeling very happy about it, of course, because we made all this nice code, we even wrote tests for it, so we're very confident. And what the tool is then doing is going to introduce mutants in your code. And mutants are just changes. And for every change that is made, the tests are executed again. And we can have two results. Either the tests start failing, which in this case is good, because we then detected that mutant, we found the bug, so we say that mutant is killed, or the mutant survived. And that means that your test is not complete. And when you do that for everything, in the end, we get a nice report out of it, like a covers report, except a bit more detail. And how that process actually works is that there are operators for that. And an operator is basically a transformation. Given a certain thing in your code, what kind of changes can we do that might fail your tests? And some examples are here. There are way more, and also one operator on the left could result into, or one source code, original source code on the left, could result into multiple mutants. But you could do, like, just switch the operators, or throw away a whole block of code. And when we do that for every of these mutants, we measure something, right? So I already talked about killed and survived. But that's only in an ideal scenario, because in practice, there might be code that does not even reach by test. So you can say, well, we have no coverage, or we have a timeout. And timeout basically means that there are mutants caused by an infinite loop. And we should consider that, okay, well, infinite loop tests actually failed then, so that's maybe kind of killed. But you can also get runtime errors, or compile errors, because we're just introducing weird code changes without looking at what the code is actually supposed to be doing. And finally, mutants can also be ignored, because that's what a developer said, I don't want a test for this. So I don't want to see the report anymore. So it's just like suppressing warnings for your code code dejects. Who here does that very often? I do, actually, but... And then just like with the code coverage score, we want to have a nice metric. We want to know how good we are doing. And for that, we can compute the score. And we call that a striker-deorientation score. And basically what we say here is we want to express in a nice number on a scale of 0 to 100%. How many mutants did you actually manage to kill? So how many unexpected changes in your code are your tests actually catching? And that's this nice formula, but basically what you do here is everything above the line is what you consider that you killed. And everything below the line, so we divide that by everything that was actually a valid change. So we exclude the crashes, for example. And that gives you, for your whole program, for your whole code base, an indication of how good your tests actually are. But what if you don't have that many tests yet? Well, they can also compute a variant of the mutation score. We just look at the code that's actually being tested. So you see here that we do not include the mutants without coverage anymore. So one might think, just like with code coverage, we should maybe strive for a high number. We should maybe have 100% mutation coverage, 100% mutation score. That would be nice. But there we actually ran into a problem because we cannot actually kill all the mutants. It's very easy, well, relatively easy at least, to reach all your codes, to make sure all your code is getting executed. So basically to get 100% code coverage, that's relatively simple. But because you're still calling functions from the outside, you might not be able to test every single operation happening inside of these functions. And actually, some mutants are, if you split up your whole code base completely, you can never kill them. And what category of these is equivalent mutants? Which is also a problem. So given this code, we have a nice for loop, and we say, well, we want to iterate 10 times. You can also write like this, and it will still work. So this mutant, we cannot kill because even though we changed our code, semantically it's doing the same thing. So that's where you might want to ignore, basically. And mutation testing is also very challenging. That's actually where that practical application problem comes in, because you can imagine that mutation testing, basically changing your code and then running all the tests again, doesn't take a lot of time. And if you have a very large code base, that might actually not finish in a reasonable time. You also need a lot of configuration. The mutation testing tool needs to know stuff. It needs to know how it can run tests. It needs to know how it can verify that those tests did complete successfully or not. It also needs to know stuff about your programming language, for example, in order to make sure that it rewrites the code in a correct way. So that also needs to be a lot of tuning support to make it work. And for a long time, mutation testing was simply not feasible or not easy to do. But we're bracing the gap. Not specifically at Striker. A lot of stuff has already been done. Luckily for us. But when we're looking at performance, this is basically the worst-case scenario. So the time it takes to run a single mutant, to analyze a single mutant, is basically the time it takes to run on your test cases. So we can approximate it by saying, well, let's just count the number of tests that you have. And then the time it takes to mutate your whole program is just the sum of that. So it basically means that you multiply the number of test cases that you have in your code times the number of mutants that you need to check, because mutants need to be checked in isolation, because they can influence each other. So you can imagine already with a very small program, this number, the time approximation, can get really, really, really large. So we need to be smarter about that. We want to make sure that the total time is a lot less, not just a bit less, a lot less than just a multiplication. And basically there are three approaches to get there. It's either to do it faster. And doing it faster, for example, I think we're going to paralyze it. We're going to use love course. Like take a big machine, nowadays it's relatively simple to get a machine with 128 cores, so we can do 128 things at the same time. You can try to do fewer. So you can maybe try to make smart choices and say, well, certain stuff we maybe don't need to analyze, because we kind of know that it's probably fine. Or you can try to do it smarter. And the study I referenced here, they really did an analysis in there, it's like a litigator review. And most of the studies are actually focusing on fewer or smarter. And common techniques there, some of us here, I won't have time to go into detail on all of these. But you can think of like random mutation, like we're just randomly checking stuff sometimes. We're just randomly picking some mutation that we're going to do. But that's not deterministic. So that might not give you the best knowledge about what the quality of the test actually is. Parallel execution already mentioned. You can also do stuff like data flow and control flow analysis and try to reduce the set that way. Or maybe look at AI to try to pick smarter sets of stuff that you're actually going to check. But if you want to use that mutation score as a benchmark, as a comparison, for example, with the pull request, did you actually improve it or not? Or to give you a good indication of how good your tests currently actually are, you actually need to execute everything. So just the approach of we're just going to run less, that doesn't always work. And one big way how this process can be sped up is by looking at how we actually change the code. So a very new eave approach would, for example, be just changing the source code, running the compiler again, running the test again, and then making another change in the source code, and then running the compiler again, running the test again. And if you have a compiled language with a fairly slow compiler, that's quite problematic because then it gets really, really slow. A bit better might be bytecode mutation. So, for example, the JVM languages have bytecodes, they have an intermediate step, maybe you can mutate that. And they only have to compile the source code once, they just change the bytecode and then run it. And while that is a lot faster, it's also a lot more complicated, but it has one big downside, and that is that every change that is possible in the bytecode is not necessarily something you can do in your source code, especially for Java, for example. If you write Kotlin or Scala, there's a lot of, a very simple thing in Scala, for example, can result in a lot of bytecodes, and if you're trying to mutate that with the assumption that the Java compiler compiled it, it might come up with mutants that you did not kill, but you cannot actually kill them because they don't exist in your source code. So, who thinks, who has an idea, how we can, how we can do this smarter? Any ideas? Yes. Are you a step? Sorry, what did you say? You compile all the different mutants, the same as people, and you select which mutants you get from the other side. Exactly. Large or small socks? Large or small socks? You have socks with a logo on it. Large. This is the, the larger the other ones, right? Sorry about that. Thank you, Niko. For testing good device. I didn't test my own system, no. Silver written software to do this. But, yeah, basically, so the answer that was given was basically this, and we call that mutant schematic, and this just makes sure that you compile all the mutants into your code once, and then use an environment variable to just switch them on or not. So, if you do this, your compiled code is just full of if statements, that is, check a certain number. And that is complicated, but it is manageable, it's not that hard. The main problem is in keeping track of it, but if you assign every mutant a unique number, it should be fine. And this really helps with compiled languages, especially with stuff that's a bit slower, like Scala. And this is actually relatively new. In the world of mutation testing, this is relatively new. It is from 1993, though, so it's the same age as me. I wouldn't say that I am relatively new. But, as something else, Martin, that you can do is coverage analysis. That's also something that has been part of Striker for a long time already. So we actually do an initial run where we just check which tests are reaching what code. So we also know if you change one part of the code, which tests actually need to run and which don't. So you can also get that number of test cases down a lot, depending on where you mutate the code. Some codes you don't really know, so if you have something static, for example, it's not extreme defined somewhere, that, you know, you might not be able to figure out how that is used. You might still need to have to run the whole test suite, but you try not to. Something else you can do is incremental analysis. So just try to div some previously stored state and try to guess which mutants you actually need to check. This is very hard to do, fully foolproof, fully complete, but you can get there like 99%. And that means that if you make a small change, a small pull request, that checking whether your changes are tested properly is relatively simple, is relatively fast. So if, uh, Nico here in front, he gave it all yesterday in the JavaScript dev room, and he actually showed this feature, and I think that there was a difference between a couple of seconds and like 30 seconds and three seconds, something like that, on a small project. Another cool thing is mutation levels, and that's where you actually give the user a choice. Do you care about testing it fully, or do you care about performance? And the choice that the user wants to make can depend on the type of project or the domain. Do you have code where it's really important that every single thing is tested, or isn't it that important actually? Do you actually want to spend the time? Or maybe you want to do a quick and dirty but pretty good analysis for every pull request, which you do in the nightly build where you test it fully. There's different approaches here, and this is actually something that is researched by one of my colleagues at InfoSport, he did his master's thesis on it. So it's really cool. But what could be downside of this approach? Any ideas? Remember, you can get some socks. Yes? So the answer was the feedback loop is longer, basically. It might take time to find if your tests are not that great. That's the one. I have another slide, but yeah, another guest. Sorry? The problem is very useful because you run nightly and... Yeah. What kind of size socks do you have? Large. Sorry? Large. Large. It thinks too far, just come get them later. I will put them aside for you. What's your size? Small. Small. Ah, damn it. I'm not good at throwing. But yeah, so the mutation score that you compute, if you choose to run other mutants, the mutation score might not be comparable. So you really need to take care of that. And the tool that my colleague actually created, analyzes a code base so that you can do this actually for a specific project. It analyzes a code base and it analyzes the test and it's trying to find a nice balance between accuracy and the number of test executions that you need to do. So it tries to see if there are some mutants that we can exclude that will gain a lot of performance. So it speeds it up massively, but doesn't reduce a lot in accuracy. So that's really nice. And you can actually find his thesis online. So if you go to the FOSDAM page for this talk, you can have a link there as well. And I'm very hard to press actually, so there is not even documentation for that and it's not even merged. It's project Xavier and that is actually implementing that idea because it was very theoretical, actually implementing that idea in Striker for JavaScript. So if you're really interested in how that all works and what decisions they made, I honestly don't know yet myself. Go look at the request. And it's also a very cool example. Mike is dead. Oh, it's back again. We're a project group from a university, in this case the University of Twente, contributed to Striker in that way and they actually built this. Yeah, documentation as I said, still to follow. And this is also a very new thing that also a student is currently working on is to do more analysis on static analysis on the code to figure out if we can run in one run of test cases, if we can analyze multiple mutants. But in order to do that, we actually need to make sure that these mutants do not influence each other. So this only works if you know for sure that they don't cancel these order out or if you can still, given that the test fields can say with confidence which mutant it was. So this is really, really complicated. Again, I'm not entirely sure on this progress yet, but question. So this is sort of static data for more complicated. Yeah, so the question is whether modularizing your application would help. And it would help because if your modules are smaller, then the test runs are also smaller. They would take less time. But it only works if a normal boot rest for you, normal change that you want to do, if that's only contained to one module or two modules. But if you split your code up instead of changing all modules, then it doesn't help. So it might help. But that's also with, like, in general, I want to make my CI pipeline quicker, just make more repos or build less modules. So yeah, that would definitely work. Come grab a pair of socks later. And now it really is time to also start testing your tests. So if you're not using mutation testing in your products already, it's really good now. We can actually use it. There's been a lot of progress in 45 years. We have better hardware. We have process improvements. And actually, there's a lot of research going on still to make it actually faster every time. We also have production ready tooling. There are many great libraries out there. Some of them are more mature than others. Some of them are faster than others. Not everybody integrates the same process improvements, for example. But in general, for most popular programming languages, there is a tool available and you can run it in your pipeline. And most of these tools just integrate with the build tool that you expect. They use information that the test runner already gives you. So that's great. Here's an overview of some suggestions. But if you just Google your favorite programming languages plus mutation testing, I'm sure you'll probably the first result will be the right one. So in summary, when we're talking about mutation testing, we're really talking about testing your tests, making sure that your tests actually expect what you do. And something, if there's anything, only one thing that you take away from this talk, don't rely on code coverage, please, because it doesn't say anything. And a lot of research has been gone into performance improvements. There's lots of research still being done. There's still always students coming to us interested in contributing to an open source project with research. So there's plenty of open research questions. And it's also applicable now. So if you're maintaining an open source project, at least consider mutation testing, because especially in open source, where there's many contributors, there's a really good metric on to get an idea about the quality of the tests that somebody wrote for our poll request. If you want to know more of the code implementation details, as I said, my colleague gave a talk yesterday in the JavaScript Dev Room, it's probably online at some point, so you can go check that out. And that was my talk, so thank you for listening. APPLAUSE Exactly 25 minutes as well, so that went great. Any questions? Yes? I could determine which expressions do mutate. Sorry? I can determine which expressions do mutate. OK, the question is how do we determine which expressions do mutate? Basically, there's a lookup. So it does abstract syntax free analysis, and it just checks a certain node, and there's a lookup table to say, OK, if we have this kind of operation, these are the options that we can... These are the mutations that we do. So there's basically a big mapping file with all the options, and that is probably not complete for every standard library out there, but for a lot of the logic, comparisons and stuff like that, you can do it pretty complete. Yes? I couldn't hear the last part. Can you repeat that, please? What is the way to find the way to test your... OK, so the question is what is the baseline when you start with mutation testing? Right, so if you have a new code base, if you have green fields and you implement mutation testing from the start, it's actually relatively easy to get high 90% mutation score. When you have an assisting project, it's usually very hard. So actually Striker for JavaScript has a mutation score of around 80%, which is actually pretty good. It's really hard to get very high scores. So it's not very... Not like covered. If you're anywhere close to 80%, you're actually doing pretty well, I think. Yes? Yeah? Yeah, so the question is when the purpose of mutation testing is to make sure your test are good, if you're doing selective mutation, how do you know you're not missing something? Actually, you don't. You might miss stuff. That's the point is because it can take a really long time that you have at least the option like, OK, I'm OK with 80% accuracy if it's half the time, because that's for me a good balance for some use cases. But yeah, you have to accept that you're missing stuff because you're just not running all the mutants. So the combination of mutation testing and test-driven developments. Well, you have to write your test first then, but you can only mutate once the implementation is there. So once you test that green, you can check whether you actually did a good job before writing your implementation, which is kind of strange, actually. Yeah, but that's very nice, actually. If you have to change your testing of changing requirements and you re-implement part of your code, then mutation testing will check whether your test are still complete. So that's actually very good, very nice. Yeah, actually, if you really want to go into that, property-based testing, you're only going to test all possible inputs, even though for sure that is correct, but that's not feasible yet. Property-based testing is really hard, too. Do you have time for more questions? Four minutes. All the time in the world, up front. The question is, from your experience currently, if, for example, you have normal unit tests and they run, let's say, it's called one minute, how many minutes will they be around using the framework? So the question is, if I know how long my unit tests run for, how do I know how long mutation testing will take? And there's only one answer. It really depends, because it really depends why your tests take a minute, but it's going to be a lot longer. It's like, it's not going to be four minutes or five minutes. It's way more than that. The only way to find it out is to just actually run it, because the problem is it really depends on how many mutations can be generated for your specific code, because that is what makes it slow. And because of all these optimizations, you cannot really predict how long it will take. I didn't hear that one. So the question is, how do we report it? And for Striker, and you can go to the talk with my colleague, he went into that in a bit more detail. We have a standardized adjustment for that. That's good. Oh, it's a bit. So there's a nice dashboard, but go watch this talk and you will know more. Up front, yes. So you already run one mutation at a time? Yeah, you have to. If you want to do more, you have to prove first that these will not influence each other, so that you need to know that if one test fails, because of which mutant it is. With coverage, you can have reached that? No, you really have to do data flow, control flow analysis, and stuff like that. So that's very, very difficult. But yeah, there's somebody working on it right now. So maybe in half a year's time, we'll have some more to talk about. Yeah, Sci-GridNet already has an implementation for it, but it's not scientifically proven, so we do not know 100% where that's correct, but at least 95% there. So if that was the last question, if there's any more question if you want to talk some stuff, I'll be outside in the hall. And if you ask a question, feel free to come grab your socks here up front. There's plenty. Thank you. APPLAUSE", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.66, "text": " Thank youender", "tokens": [50364, 1044, 291, 3216, 51047], "temperature": 1.0, "avg_logprob": -3.8065231323242186, "compression_ratio": 0.8181818181818182, "no_speech_prob": 0.4413822293281555}, {"id": 1, "seek": 0, "start": 13.66, "end": 18.66, "text": " million", "tokens": [51047, 2459, 51297], "temperature": 1.0, "avg_logprob": -3.8065231323242186, "compression_ratio": 0.8181818181818182, "no_speech_prob": 0.4413822293281555}, {"id": 2, "seek": 0, "start": 18.66, "end": 25.14, "text": " that is going", "tokens": [51297, 300, 307, 516, 51621], "temperature": 1.0, "avg_logprob": -3.8065231323242186, "compression_ratio": 0.8181818181818182, "no_speech_prob": 0.4413822293281555}, {"id": 3, "seek": 2514, "start": 25.14, "end": 27.14, "text": " Technical question.", "tokens": [50364, 35512, 1168, 13, 50464], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 4, "seek": 2514, "start": 40.14, "end": 42.14, "text": " We can edit the video later.", "tokens": [51114, 492, 393, 8129, 264, 960, 1780, 13, 51214], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 5, "seek": 2514, "start": 44.14, "end": 46.14, "text": " Let's start very lighthearted then.", "tokens": [51314, 961, 311, 722, 588, 1442, 25471, 550, 13, 51414], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 6, "seek": 2514, "start": 46.14, "end": 48.14, "text": " Maybe a shell of hands.", "tokens": [51414, 2704, 257, 8720, 295, 2377, 13, 51514], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 7, "seek": 2514, "start": 48.14, "end": 51.14, "text": " Who here has heard of mutation testing?", "tokens": [51514, 2102, 510, 575, 2198, 295, 27960, 4997, 30, 51664], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 8, "seek": 2514, "start": 51.14, "end": 53.14, "text": " Amazing.", "tokens": [51664, 14165, 13, 51764], "temperature": 0.0, "avg_logprob": -0.37288375695546466, "compression_ratio": 1.2764227642276422, "no_speech_prob": 0.45675021409988403}, {"id": 9, "seek": 5314, "start": 53.14, "end": 55.14, "text": " I can go very quickly to some flights then.", "tokens": [50364, 286, 393, 352, 588, 2661, 281, 512, 21089, 550, 13, 50464], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 10, "seek": 5314, "start": 55.14, "end": 58.14, "text": " Who has never heard of mutation testing?", "tokens": [50464, 2102, 575, 1128, 2198, 295, 27960, 4997, 30, 50614], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 11, "seek": 5314, "start": 58.14, "end": 60.14, "text": " For who is the completely new concept?", "tokens": [50614, 1171, 567, 307, 264, 2584, 777, 3410, 30, 50714], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 12, "seek": 5314, "start": 60.14, "end": 62.14, "text": " I will cover it for you guys.", "tokens": [50714, 286, 486, 2060, 309, 337, 291, 1074, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 13, "seek": 5314, "start": 62.14, "end": 64.14, "text": " That's nice.", "tokens": [50814, 663, 311, 1481, 13, 50914], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 14, "seek": 5314, "start": 64.14, "end": 68.14, "text": " Of course I'm here, but I'd like to promote Striker a little bit.", "tokens": [50914, 2720, 1164, 286, 478, 510, 11, 457, 286, 1116, 411, 281, 9773, 20390, 5767, 257, 707, 857, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 15, "seek": 5314, "start": 68.14, "end": 71.14, "text": " Who of you is actually using Striker already?", "tokens": [51114, 2102, 295, 291, 307, 767, 1228, 20390, 5767, 1217, 30, 51264], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 16, "seek": 5314, "start": 71.14, "end": 73.14, "text": " Nobody. One person.", "tokens": [51264, 9297, 13, 1485, 954, 13, 51364], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 17, "seek": 5314, "start": 73.14, "end": 76.14, "text": " Well, that's my colleague. He's also working on it.", "tokens": [51364, 1042, 11, 300, 311, 452, 13532, 13, 634, 311, 611, 1364, 322, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 18, "seek": 5314, "start": 76.14, "end": 80.14, "text": " Cool. You guys are definitely going to learn some stuff today then.", "tokens": [51514, 8561, 13, 509, 1074, 366, 2138, 516, 281, 1466, 512, 1507, 965, 550, 13, 51714], "temperature": 0.0, "avg_logprob": -0.21258623737934207, "compression_ratio": 1.5255474452554745, "no_speech_prob": 0.08627613633871078}, {"id": 19, "seek": 8014, "start": 81.14, "end": 84.14, "text": " I can just start right?", "tokens": [50414, 286, 393, 445, 722, 558, 30, 50564], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 20, "seek": 8014, "start": 84.14, "end": 85.14, "text": " Sure.", "tokens": [50564, 4894, 13, 50614], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 21, "seek": 8014, "start": 85.14, "end": 87.14, "text": " Welcome everybody to the talk,", "tokens": [50614, 4027, 2201, 281, 264, 751, 11, 50714], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 22, "seek": 8014, "start": 87.14, "end": 89.14, "text": " How Mutation Testing Got Practical?", "tokens": [50714, 1012, 376, 11380, 45517, 5803, 19170, 804, 30, 50814], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 23, "seek": 8014, "start": 89.14, "end": 93.14, "text": " I'm really focusing on the Got Practical in this talk.", "tokens": [50814, 286, 478, 534, 8416, 322, 264, 5803, 19170, 804, 294, 341, 751, 13, 51014], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 24, "seek": 8014, "start": 93.14, "end": 96.14, "text": " I will be explaining mutation testing a bit,", "tokens": [51014, 286, 486, 312, 13468, 27960, 4997, 257, 857, 11, 51164], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 25, "seek": 8014, "start": 96.14, "end": 98.14, "text": " but I'm really looking deep into the internals", "tokens": [51164, 457, 286, 478, 534, 1237, 2452, 666, 264, 2154, 1124, 51264], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 26, "seek": 8014, "start": 98.14, "end": 101.14, "text": " and why is the idea really old?", "tokens": [51264, 293, 983, 307, 264, 1558, 534, 1331, 30, 51414], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 27, "seek": 8014, "start": 101.14, "end": 103.14, "text": " It's a practical use case, relatively new.", "tokens": [51414, 467, 311, 257, 8496, 764, 1389, 11, 7226, 777, 13, 51514], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 28, "seek": 8014, "start": 103.14, "end": 105.14, "text": " So I'll get into that.", "tokens": [51514, 407, 286, 603, 483, 666, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 29, "seek": 8014, "start": 105.14, "end": 107.14, "text": " But first, a little introduction.", "tokens": [51614, 583, 700, 11, 257, 707, 9339, 13, 51714], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 30, "seek": 8014, "start": 107.14, "end": 109.14, "text": " My name is Jan Dele Kester.", "tokens": [51714, 1222, 1315, 307, 4956, 1346, 306, 591, 3011, 13, 51814], "temperature": 0.0, "avg_logprob": -0.21868631662416063, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.03675369173288345}, {"id": 31, "seek": 10914, "start": 109.14, "end": 111.14, "text": " I'm a self-engineering consultant at InfoSupport.", "tokens": [50364, 286, 478, 257, 2698, 12, 25609, 1794, 24676, 412, 11537, 78, 50, 10504, 477, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 32, "seek": 10914, "start": 111.14, "end": 114.14, "text": " It's a consultancy organization in the Netherlands.", "tokens": [50464, 467, 311, 257, 7189, 6717, 4475, 294, 264, 20873, 13, 50614], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 33, "seek": 10914, "start": 114.14, "end": 118.14, "text": " I'm also a trainer there, and I'm a research supervisor.", "tokens": [50614, 286, 478, 611, 257, 21110, 456, 11, 293, 286, 478, 257, 2132, 24610, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 34, "seek": 10914, "start": 118.14, "end": 120.14, "text": " And that last one is very relevant today.", "tokens": [50814, 400, 300, 1036, 472, 307, 588, 7340, 965, 13, 50914], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 35, "seek": 10914, "start": 120.14, "end": 123.14, "text": " You'll hear why soon.", "tokens": [50914, 509, 603, 1568, 983, 2321, 13, 51064], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 36, "seek": 10914, "start": 123.14, "end": 125.14, "text": " If you want to contact me afterwards,", "tokens": [51064, 759, 291, 528, 281, 3385, 385, 10543, 11, 51164], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 37, "seek": 10914, "start": 125.14, "end": 127.14, "text": " you can use the link then, I guess,", "tokens": [51164, 291, 393, 764, 264, 2113, 550, 11, 286, 2041, 11, 51264], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 38, "seek": 10914, "start": 127.14, "end": 130.14, "text": " but you can also find me on GitHub.", "tokens": [51264, 457, 291, 393, 611, 915, 385, 322, 23331, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 39, "seek": 10914, "start": 130.14, "end": 132.14, "text": " And as I said, I'm here on behalf of Striker.", "tokens": [51414, 400, 382, 286, 848, 11, 286, 478, 510, 322, 9490, 295, 20390, 5767, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 40, "seek": 10914, "start": 132.14, "end": 134.14, "text": " Striker is a mutation testing framework", "tokens": [51514, 20390, 5767, 307, 257, 27960, 4997, 8388, 51614], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 41, "seek": 10914, "start": 134.14, "end": 137.14, "text": " for JavaScript and TypeScripts,", "tokens": [51614, 337, 15778, 293, 15576, 14237, 82, 11, 51764], "temperature": 0.0, "avg_logprob": -0.2218086127948044, "compression_ratio": 1.5845070422535212, "no_speech_prob": 0.021539418026804924}, {"id": 42, "seek": 13714, "start": 137.14, "end": 140.14, "text": " C-Sharp, Scala, and hopefully at some point, Kotlin.", "tokens": [50364, 383, 12, 50, 5854, 79, 11, 2747, 5159, 11, 293, 4696, 412, 512, 935, 11, 30123, 5045, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 43, "seek": 13714, "start": 140.14, "end": 143.14, "text": " There's like a partial implementation there already.", "tokens": [50514, 821, 311, 411, 257, 14641, 11420, 456, 1217, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 44, "seek": 13714, "start": 143.14, "end": 145.14, "text": " We're working hard on it.", "tokens": [50664, 492, 434, 1364, 1152, 322, 309, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 45, "seek": 13714, "start": 145.14, "end": 147.14, "text": " You can find us at StrikerMutator.io,", "tokens": [50764, 509, 393, 915, 505, 412, 20390, 5767, 44, 325, 1639, 13, 1004, 11, 50864], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 46, "seek": 13714, "start": 147.14, "end": 150.14, "text": " and of course, I have all these nice socks for you guys.", "tokens": [50864, 293, 295, 1164, 11, 286, 362, 439, 613, 1481, 17564, 337, 291, 1074, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 47, "seek": 13714, "start": 150.14, "end": 152.14, "text": " So if you're really good with asking questions", "tokens": [51014, 407, 498, 291, 434, 534, 665, 365, 3365, 1651, 51114], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 48, "seek": 13714, "start": 152.14, "end": 156.14, "text": " and reacting to my questions, you might get some.", "tokens": [51114, 293, 25817, 281, 452, 1651, 11, 291, 1062, 483, 512, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 49, "seek": 13714, "start": 156.14, "end": 159.14, "text": " And otherwise, you'll see us after. We'll have some more.", "tokens": [51314, 400, 5911, 11, 291, 603, 536, 505, 934, 13, 492, 603, 362, 512, 544, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 50, "seek": 13714, "start": 159.14, "end": 161.14, "text": " So in this talk, in this next 25 minutes,", "tokens": [51464, 407, 294, 341, 751, 11, 294, 341, 958, 3552, 2077, 11, 51564], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 51, "seek": 13714, "start": 161.14, "end": 164.14, "text": " because I am going to try to leave room for questions as well,", "tokens": [51564, 570, 286, 669, 516, 281, 853, 281, 1856, 1808, 337, 1651, 382, 731, 11, 51714], "temperature": 0.0, "avg_logprob": -0.14335792381446677, "compression_ratio": 1.6308724832214765, "no_speech_prob": 0.009753359481692314}, {"id": 52, "seek": 16414, "start": 164.14, "end": 167.14, "text": " I first want to talk about why do we actually need", "tokens": [50364, 286, 700, 528, 281, 751, 466, 983, 360, 321, 767, 643, 50514], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 53, "seek": 16414, "start": 167.14, "end": 169.14, "text": " to understand our tests?", "tokens": [50514, 281, 1223, 527, 6921, 30, 50614], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 54, "seek": 16414, "start": 169.14, "end": 172.14, "text": " Why is just writing a test not good enough?", "tokens": [50614, 1545, 307, 445, 3579, 257, 1500, 406, 665, 1547, 30, 50764], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 55, "seek": 16414, "start": 172.14, "end": 174.14, "text": " I also want to go into what mutation testing is", "tokens": [50764, 286, 611, 528, 281, 352, 666, 437, 27960, 4997, 307, 50864], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 56, "seek": 16414, "start": 174.14, "end": 177.14, "text": " for the people that don't know yet.", "tokens": [50864, 337, 264, 561, 300, 500, 380, 458, 1939, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 57, "seek": 16414, "start": 177.14, "end": 179.14, "text": " And finally, and that's the major part,", "tokens": [51014, 400, 2721, 11, 293, 300, 311, 264, 2563, 644, 11, 51114], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 58, "seek": 16414, "start": 179.14, "end": 182.14, "text": " hopefully if I don't run out of time,", "tokens": [51114, 4696, 498, 286, 500, 380, 1190, 484, 295, 565, 11, 51264], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 59, "seek": 16414, "start": 182.14, "end": 185.14, "text": " I'm going to go deep in how we got to practical applicability,", "tokens": [51264, 286, 478, 516, 281, 352, 2452, 294, 577, 321, 658, 281, 8496, 2580, 2310, 11, 51414], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 60, "seek": 16414, "start": 185.14, "end": 187.14, "text": " how we got into this state now", "tokens": [51414, 577, 321, 658, 666, 341, 1785, 586, 51514], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 61, "seek": 16414, "start": 187.14, "end": 191.14, "text": " where we can actually run mutation testing in our real projects.", "tokens": [51514, 689, 321, 393, 767, 1190, 27960, 4997, 294, 527, 957, 4455, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07080056056503423, "compression_ratio": 1.6793893129770991, "no_speech_prob": 0.04097442328929901}, {"id": 62, "seek": 19114, "start": 191.14, "end": 194.14, "text": " And that means talking about some state of art,", "tokens": [50364, 400, 300, 1355, 1417, 466, 512, 1785, 295, 1523, 11, 50514], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 63, "seek": 19114, "start": 194.14, "end": 197.14, "text": " state of art performance improvements.", "tokens": [50514, 1785, 295, 1523, 3389, 13797, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 64, "seek": 19114, "start": 200.14, "end": 204.14, "text": " But first, we have to talk about the false sense of security.", "tokens": [50814, 583, 700, 11, 321, 362, 281, 751, 466, 264, 7908, 2020, 295, 3825, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 65, "seek": 19114, "start": 204.14, "end": 208.14, "text": " Because this is a promotional image I copied shamelessly", "tokens": [51014, 1436, 341, 307, 257, 41790, 3256, 286, 25365, 40164, 356, 51214], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 66, "seek": 19114, "start": 208.14, "end": 211.14, "text": " from the Sonacube website.", "tokens": [51214, 490, 264, 5185, 326, 1977, 3144, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 67, "seek": 19114, "start": 211.14, "end": 213.14, "text": " And they show this nice dashboard where they say,", "tokens": [51364, 400, 436, 855, 341, 1481, 18342, 689, 436, 584, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 68, "seek": 19114, "start": 213.14, "end": 215.14, "text": " well, everything is good.", "tokens": [51464, 731, 11, 1203, 307, 665, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 69, "seek": 19114, "start": 215.14, "end": 218.14, "text": " There's no issues, no bugs, it's all fine.", "tokens": [51564, 821, 311, 572, 2663, 11, 572, 15120, 11, 309, 311, 439, 2489, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1330946759974703, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.0064591602422297}, {"id": 70, "seek": 21814, "start": 218.14, "end": 222.14, "text": " And there's even 76% test coverage.", "tokens": [50364, 400, 456, 311, 754, 24733, 4, 1500, 9645, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 71, "seek": 21814, "start": 222.14, "end": 225.14, "text": " Who would be happy with that?", "tokens": [50564, 2102, 576, 312, 2055, 365, 300, 30, 50714], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 72, "seek": 21814, "start": 225.14, "end": 228.14, "text": " Okay, who wants to say why?", "tokens": [50714, 1033, 11, 567, 2738, 281, 584, 983, 30, 50864], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 73, "seek": 21814, "start": 228.14, "end": 231.14, "text": " Why is 76% good according to you?", "tokens": [50864, 1545, 307, 24733, 4, 665, 4650, 281, 291, 30, 51014], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 74, "seek": 21814, "start": 231.14, "end": 233.14, "text": " Lots of green.", "tokens": [51014, 15908, 295, 3092, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 75, "seek": 21814, "start": 233.14, "end": 235.14, "text": " Lots of green.", "tokens": [51114, 15908, 295, 3092, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 76, "seek": 21814, "start": 235.14, "end": 237.14, "text": " Larger small socks.", "tokens": [51214, 11569, 1321, 1359, 17564, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 77, "seek": 21814, "start": 237.14, "end": 239.14, "text": " I don't wear small socks.", "tokens": [51314, 286, 500, 380, 3728, 1359, 17564, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 78, "seek": 21814, "start": 239.14, "end": 241.14, "text": " You get some anyway.", "tokens": [51414, 509, 483, 512, 4033, 13, 51514], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 79, "seek": 21814, "start": 241.14, "end": 243.14, "text": " Sorry about that. They're hard to throw in this room.", "tokens": [51514, 4919, 466, 300, 13, 814, 434, 1152, 281, 3507, 294, 341, 1808, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 80, "seek": 21814, "start": 243.14, "end": 246.14, "text": " I would say I would not be happy with that.", "tokens": [51614, 286, 576, 584, 286, 576, 406, 312, 2055, 365, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15623069259355654, "compression_ratio": 1.5631067961165048, "no_speech_prob": 0.008854500018060207}, {"id": 81, "seek": 24614, "start": 246.14, "end": 249.14, "text": " Because, I mean, our tests,", "tokens": [50364, 1436, 11, 286, 914, 11, 527, 6921, 11, 50514], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 82, "seek": 24614, "start": 249.14, "end": 251.14, "text": " apparently when we're running our tests,", "tokens": [50514, 7970, 562, 321, 434, 2614, 527, 6921, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 83, "seek": 24614, "start": 251.14, "end": 253.14, "text": " we reach 76% of our code.", "tokens": [50614, 321, 2524, 24733, 4, 295, 527, 3089, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 84, "seek": 24614, "start": 253.14, "end": 255.14, "text": " I don't think that's enough.", "tokens": [50714, 286, 500, 380, 519, 300, 311, 1547, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 85, "seek": 24614, "start": 255.14, "end": 257.14, "text": " Because there is more than 20% of our code", "tokens": [50814, 1436, 456, 307, 544, 813, 945, 4, 295, 527, 3089, 50914], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 86, "seek": 24614, "start": 257.14, "end": 259.14, "text": " that is not even getting executed for doing the test.", "tokens": [50914, 300, 307, 406, 754, 1242, 17577, 337, 884, 264, 1500, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 87, "seek": 24614, "start": 259.14, "end": 261.14, "text": " That's a problem.", "tokens": [51014, 663, 311, 257, 1154, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 88, "seek": 24614, "start": 261.14, "end": 263.14, "text": " But even 100% code coverage is actually,", "tokens": [51114, 583, 754, 2319, 4, 3089, 9645, 307, 767, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 89, "seek": 24614, "start": 263.14, "end": 265.14, "text": " it doesn't say much.", "tokens": [51214, 309, 1177, 380, 584, 709, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 90, "seek": 24614, "start": 265.14, "end": 268.14, "text": " Because coverage only means that code is being executed.", "tokens": [51314, 1436, 9645, 787, 1355, 300, 3089, 307, 885, 17577, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 91, "seek": 24614, "start": 268.14, "end": 271.14, "text": " We are only testing, in a worst-case scenario,", "tokens": [51464, 492, 366, 787, 4997, 11, 294, 257, 5855, 12, 9765, 9005, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 92, "seek": 24614, "start": 271.14, "end": 273.14, "text": " that the program does not crash.", "tokens": [51614, 300, 264, 1461, 775, 406, 8252, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 93, "seek": 24614, "start": 273.14, "end": 275.14, "text": " What you actually want to know", "tokens": [51714, 708, 291, 767, 528, 281, 458, 51814], "temperature": 0.0, "avg_logprob": -0.1154103489483104, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.002644328400492668}, {"id": 94, "seek": 27514, "start": 275.14, "end": 277.14, "text": " is if our tests do something,", "tokens": [50364, 307, 498, 527, 6921, 360, 746, 11, 50464], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 95, "seek": 27514, "start": 277.14, "end": 279.14, "text": " and I can very easily get 100% code coverage on the program", "tokens": [50464, 293, 286, 393, 588, 3612, 483, 2319, 4, 3089, 9645, 322, 264, 1461, 50564], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 96, "seek": 27514, "start": 279.14, "end": 281.14, "text": " without writing any assertions,", "tokens": [50564, 1553, 3579, 604, 19810, 626, 11, 50664], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 97, "seek": 27514, "start": 281.14, "end": 284.14, "text": " that I'm just checking that the test execution does not crash.", "tokens": [50664, 300, 286, 478, 445, 8568, 300, 264, 1500, 15058, 775, 406, 8252, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 98, "seek": 27514, "start": 284.14, "end": 287.14, "text": " So we need a way of testing our tests.", "tokens": [50814, 407, 321, 643, 257, 636, 295, 4997, 527, 6921, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 99, "seek": 27514, "start": 287.14, "end": 289.14, "text": " And no, we're not going to write unit tests", "tokens": [50964, 400, 572, 11, 321, 434, 406, 516, 281, 2464, 4985, 6921, 51064], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 100, "seek": 27514, "start": 289.14, "end": 291.14, "text": " to test our test logic, because that would be stupid.", "tokens": [51064, 281, 1500, 527, 1500, 9952, 11, 570, 300, 576, 312, 6631, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 101, "seek": 27514, "start": 291.14, "end": 293.14, "text": " I mean, it would never end.", "tokens": [51164, 286, 914, 11, 309, 576, 1128, 917, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 102, "seek": 27514, "start": 293.14, "end": 295.14, "text": " We need to be smart about that.", "tokens": [51264, 492, 643, 281, 312, 4069, 466, 300, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 103, "seek": 27514, "start": 295.14, "end": 297.14, "text": " And that's where mutation testing comes in.", "tokens": [51364, 400, 300, 311, 689, 27960, 4997, 1487, 294, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 104, "seek": 27514, "start": 297.14, "end": 299.14, "text": " So what we're going to do is to introduce changes", "tokens": [51464, 407, 437, 321, 434, 516, 281, 360, 307, 281, 5366, 2962, 51564], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 105, "seek": 27514, "start": 299.14, "end": 301.14, "text": " in production code automatically.", "tokens": [51564, 294, 4265, 3089, 6772, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 106, "seek": 27514, "start": 301.14, "end": 303.14, "text": " That's a tool that's doing that.", "tokens": [51664, 663, 311, 257, 2290, 300, 311, 884, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08021176020304362, "compression_ratio": 1.7540453074433657, "no_speech_prob": 0.0034493720158934593}, {"id": 107, "seek": 30314, "start": 303.14, "end": 306.14, "text": " We're going to test again to see whether the tests start failing.", "tokens": [50364, 492, 434, 516, 281, 1500, 797, 281, 536, 1968, 264, 6921, 722, 18223, 13, 50514], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 108, "seek": 30314, "start": 306.14, "end": 308.14, "text": " Because when the tests start failing,", "tokens": [50514, 1436, 562, 264, 6921, 722, 18223, 11, 50614], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 109, "seek": 30314, "start": 308.14, "end": 310.14, "text": " at that point, you know that your tests", "tokens": [50614, 412, 300, 935, 11, 291, 458, 300, 428, 6921, 50714], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 110, "seek": 30314, "start": 310.14, "end": 312.14, "text": " are actually able to catch that bug", "tokens": [50714, 366, 767, 1075, 281, 3745, 300, 7426, 50814], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 111, "seek": 30314, "start": 312.14, "end": 314.14, "text": " that we purposefully introduced.", "tokens": [50814, 300, 321, 4334, 2277, 7268, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 112, "seek": 30314, "start": 314.14, "end": 316.14, "text": " So it's also from a white box testing,", "tokens": [50914, 407, 309, 311, 611, 490, 257, 2418, 2424, 4997, 11, 51014], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 113, "seek": 30314, "start": 316.14, "end": 319.14, "text": " because we really have to know stuff about the internals of the code", "tokens": [51014, 570, 321, 534, 362, 281, 458, 1507, 466, 264, 2154, 1124, 295, 264, 3089, 51164], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 114, "seek": 30314, "start": 319.14, "end": 324.14, "text": " to change it, and see whether the tests are good enough to catch that.", "tokens": [51164, 281, 1319, 309, 11, 293, 536, 1968, 264, 6921, 366, 665, 1547, 281, 3745, 300, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 115, "seek": 30314, "start": 324.14, "end": 329.14, "text": " And this is really not a new idea,", "tokens": [51414, 400, 341, 307, 534, 406, 257, 777, 1558, 11, 51664], "temperature": 0.0, "avg_logprob": -0.15551204340798513, "compression_ratio": 1.8205128205128205, "no_speech_prob": 0.0062154745683074}, {"id": 116, "seek": 32914, "start": 329.14, "end": 333.14, "text": " because there's this nice paper from 79 already,", "tokens": [50364, 570, 456, 311, 341, 1481, 3035, 490, 32803, 1217, 11, 50564], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 117, "seek": 32914, "start": 333.14, "end": 338.14, "text": " where they talk about a new way of a new type of software test.", "tokens": [50564, 689, 436, 751, 466, 257, 777, 636, 295, 257, 777, 2010, 295, 4722, 1500, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 118, "seek": 32914, "start": 338.14, "end": 341.14, "text": " And you can actually find this on Google,", "tokens": [50814, 400, 291, 393, 767, 915, 341, 322, 3329, 11, 50964], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 119, "seek": 32914, "start": 341.14, "end": 343.14, "text": " and you can read it if you want.", "tokens": [50964, 293, 291, 393, 1401, 309, 498, 291, 528, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 120, "seek": 32914, "start": 343.14, "end": 348.14, "text": " But even back then, 40 years ago, 45 years ago,", "tokens": [51064, 583, 754, 646, 550, 11, 3356, 924, 2057, 11, 6905, 924, 2057, 11, 51314], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 121, "seek": 32914, "start": 348.14, "end": 351.14, "text": " they were already talking about it.", "tokens": [51314, 436, 645, 1217, 1417, 466, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 122, "seek": 32914, "start": 353.14, "end": 357.14, "text": " But only recently, and I talk recently in a very broad sense here,", "tokens": [51564, 583, 787, 3938, 11, 293, 286, 751, 3938, 294, 257, 588, 4152, 2020, 510, 11, 51764], "temperature": 0.0, "avg_logprob": -0.14488372396915516, "compression_ratio": 1.6172248803827751, "no_speech_prob": 0.005696059670299292}, {"id": 123, "seek": 35714, "start": 357.14, "end": 360.14, "text": " because I wasn't even in high school, I think,", "tokens": [50364, 570, 286, 2067, 380, 754, 294, 1090, 1395, 11, 286, 519, 11, 50514], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 124, "seek": 35714, "start": 360.14, "end": 362.14, "text": " when I'm talking about reasons.", "tokens": [50514, 562, 286, 478, 1417, 466, 4112, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 125, "seek": 35714, "start": 362.14, "end": 365.14, "text": " Then it got more traction, because the problem is,", "tokens": [50614, 1396, 309, 658, 544, 23558, 11, 570, 264, 1154, 307, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 126, "seek": 35714, "start": 365.14, "end": 369.14, "text": " in the 70s, or the late 70s, it was just a good idea.", "tokens": [50764, 294, 264, 5285, 82, 11, 420, 264, 3469, 5285, 82, 11, 309, 390, 445, 257, 665, 1558, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 127, "seek": 35714, "start": 369.14, "end": 373.14, "text": " We did not have the resources to actually apply it in practice.", "tokens": [50964, 492, 630, 406, 362, 264, 3593, 281, 767, 3079, 309, 294, 3124, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 128, "seek": 35714, "start": 373.14, "end": 378.14, "text": " And what you see here, the dark-colored bars are publications,", "tokens": [51164, 400, 437, 291, 536, 510, 11, 264, 2877, 12, 42820, 10228, 366, 25618, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 129, "seek": 35714, "start": 378.14, "end": 380.14, "text": " research publications about practical applicability,", "tokens": [51414, 2132, 25618, 466, 8496, 2580, 2310, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 130, "seek": 35714, "start": 380.14, "end": 383.14, "text": " and they really spike early this millennium.", "tokens": [51514, 293, 436, 534, 21053, 2440, 341, 21362, 2197, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 131, "seek": 35714, "start": 383.14, "end": 385.14, "text": " And there are reasons for that.", "tokens": [51664, 400, 456, 366, 4112, 337, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11802943278167208, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.00819121953099966}, {"id": 132, "seek": 38514, "start": 385.14, "end": 390.14, "text": " Mostly also, I think, because our computers got fast enough.", "tokens": [50364, 29035, 611, 11, 286, 519, 11, 570, 527, 10807, 658, 2370, 1547, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 133, "seek": 38514, "start": 390.14, "end": 393.14, "text": " And why that is important is because of how mutation testing works,", "tokens": [50614, 400, 983, 300, 307, 1021, 307, 570, 295, 577, 27960, 4997, 1985, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 134, "seek": 38514, "start": 393.14, "end": 395.14, "text": " what the process behind it is.", "tokens": [50764, 437, 264, 1399, 2261, 309, 307, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 135, "seek": 38514, "start": 395.14, "end": 397.14, "text": " Because we start with our source code,", "tokens": [50864, 1436, 321, 722, 365, 527, 4009, 3089, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 136, "seek": 38514, "start": 397.14, "end": 399.14, "text": " and we are feeling very happy about it, of course,", "tokens": [50964, 293, 321, 366, 2633, 588, 2055, 466, 309, 11, 295, 1164, 11, 51064], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 137, "seek": 38514, "start": 399.14, "end": 402.14, "text": " because we made all this nice code, we even wrote tests for it,", "tokens": [51064, 570, 321, 1027, 439, 341, 1481, 3089, 11, 321, 754, 4114, 6921, 337, 309, 11, 51214], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 138, "seek": 38514, "start": 402.14, "end": 404.14, "text": " so we're very confident.", "tokens": [51214, 370, 321, 434, 588, 6679, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 139, "seek": 38514, "start": 404.14, "end": 408.14, "text": " And what the tool is then doing is going to introduce mutants in your code.", "tokens": [51314, 400, 437, 264, 2290, 307, 550, 884, 307, 516, 281, 5366, 5839, 1719, 294, 428, 3089, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 140, "seek": 38514, "start": 408.14, "end": 410.14, "text": " And mutants are just changes.", "tokens": [51514, 400, 5839, 1719, 366, 445, 2962, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 141, "seek": 38514, "start": 410.14, "end": 414.14, "text": " And for every change that is made, the tests are executed again.", "tokens": [51614, 400, 337, 633, 1319, 300, 307, 1027, 11, 264, 6921, 366, 17577, 797, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11109089495530769, "compression_ratio": 1.7551724137931035, "no_speech_prob": 0.00461888313293457}, {"id": 142, "seek": 41414, "start": 415.14, "end": 417.14, "text": " And we can have two results.", "tokens": [50414, 400, 321, 393, 362, 732, 3542, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 143, "seek": 41414, "start": 417.14, "end": 420.14, "text": " Either the tests start failing, which in this case is good,", "tokens": [50514, 13746, 264, 6921, 722, 18223, 11, 597, 294, 341, 1389, 307, 665, 11, 50664], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 144, "seek": 41414, "start": 420.14, "end": 424.14, "text": " because we then detected that mutant, we found the bug,", "tokens": [50664, 570, 321, 550, 21896, 300, 47198, 11, 321, 1352, 264, 7426, 11, 50864], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 145, "seek": 41414, "start": 424.14, "end": 427.14, "text": " so we say that mutant is killed, or the mutant survived.", "tokens": [50864, 370, 321, 584, 300, 47198, 307, 4652, 11, 420, 264, 47198, 14433, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 146, "seek": 41414, "start": 427.14, "end": 432.14, "text": " And that means that your test is not complete.", "tokens": [51014, 400, 300, 1355, 300, 428, 1500, 307, 406, 3566, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 147, "seek": 41414, "start": 432.14, "end": 434.14, "text": " And when you do that for everything, in the end,", "tokens": [51264, 400, 562, 291, 360, 300, 337, 1203, 11, 294, 264, 917, 11, 51364], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 148, "seek": 41414, "start": 434.14, "end": 437.14, "text": " we get a nice report out of it, like a covers report,", "tokens": [51364, 321, 483, 257, 1481, 2275, 484, 295, 309, 11, 411, 257, 10538, 2275, 11, 51514], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 149, "seek": 41414, "start": 437.14, "end": 439.14, "text": " except a bit more detail.", "tokens": [51514, 3993, 257, 857, 544, 2607, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 150, "seek": 41414, "start": 439.14, "end": 443.14, "text": " And how that process actually works is that there are operators for that.", "tokens": [51614, 400, 577, 300, 1399, 767, 1985, 307, 300, 456, 366, 19077, 337, 300, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13208880306275422, "compression_ratio": 1.7083333333333333, "no_speech_prob": 0.002640163293108344}, {"id": 151, "seek": 44314, "start": 443.14, "end": 445.14, "text": " And an operator is basically a transformation.", "tokens": [50364, 400, 364, 12973, 307, 1936, 257, 9887, 13, 50464], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 152, "seek": 44314, "start": 445.14, "end": 447.14, "text": " Given a certain thing in your code,", "tokens": [50464, 18600, 257, 1629, 551, 294, 428, 3089, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 153, "seek": 44314, "start": 447.14, "end": 452.14, "text": " what kind of changes can we do that might fail your tests?", "tokens": [50564, 437, 733, 295, 2962, 393, 321, 360, 300, 1062, 3061, 428, 6921, 30, 50814], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 154, "seek": 44314, "start": 452.14, "end": 454.14, "text": " And some examples are here.", "tokens": [50814, 400, 512, 5110, 366, 510, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 155, "seek": 44314, "start": 454.14, "end": 457.14, "text": " There are way more, and also one operator on the left could result into,", "tokens": [50914, 821, 366, 636, 544, 11, 293, 611, 472, 12973, 322, 264, 1411, 727, 1874, 666, 11, 51064], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 156, "seek": 44314, "start": 457.14, "end": 461.14, "text": " or one source code, original source code on the left,", "tokens": [51064, 420, 472, 4009, 3089, 11, 3380, 4009, 3089, 322, 264, 1411, 11, 51264], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 157, "seek": 44314, "start": 461.14, "end": 463.14, "text": " could result into multiple mutants.", "tokens": [51264, 727, 1874, 666, 3866, 5839, 1719, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 158, "seek": 44314, "start": 463.14, "end": 466.14, "text": " But you could do, like, just switch the operators,", "tokens": [51364, 583, 291, 727, 360, 11, 411, 11, 445, 3679, 264, 19077, 11, 51514], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 159, "seek": 44314, "start": 466.14, "end": 468.14, "text": " or throw away a whole block of code.", "tokens": [51514, 420, 3507, 1314, 257, 1379, 3461, 295, 3089, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 160, "seek": 44314, "start": 470.14, "end": 472.14, "text": " And when we do that for every of these mutants,", "tokens": [51714, 400, 562, 321, 360, 300, 337, 633, 295, 613, 5839, 1719, 11, 51814], "temperature": 0.0, "avg_logprob": -0.09238720703125, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.0021006606984883547}, {"id": 161, "seek": 47214, "start": 472.14, "end": 474.14, "text": " we measure something, right?", "tokens": [50364, 321, 3481, 746, 11, 558, 30, 50464], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 162, "seek": 47214, "start": 474.14, "end": 476.14, "text": " So I already talked about killed and survived.", "tokens": [50464, 407, 286, 1217, 2825, 466, 4652, 293, 14433, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 163, "seek": 47214, "start": 476.14, "end": 478.14, "text": " But that's only in an ideal scenario,", "tokens": [50564, 583, 300, 311, 787, 294, 364, 7157, 9005, 11, 50664], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 164, "seek": 47214, "start": 478.14, "end": 482.14, "text": " because in practice, there might be code that does not even reach by test.", "tokens": [50664, 570, 294, 3124, 11, 456, 1062, 312, 3089, 300, 775, 406, 754, 2524, 538, 1500, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 165, "seek": 47214, "start": 482.14, "end": 486.14, "text": " So you can say, well, we have no coverage, or we have a timeout.", "tokens": [50864, 407, 291, 393, 584, 11, 731, 11, 321, 362, 572, 9645, 11, 420, 321, 362, 257, 565, 346, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 166, "seek": 47214, "start": 486.14, "end": 490.14, "text": " And timeout basically means that there are mutants caused by an infinite loop.", "tokens": [51064, 400, 565, 346, 1936, 1355, 300, 456, 366, 5839, 1719, 7008, 538, 364, 13785, 6367, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 167, "seek": 47214, "start": 490.14, "end": 494.14, "text": " And we should consider that, okay, well, infinite loop tests actually failed then,", "tokens": [51264, 400, 321, 820, 1949, 300, 11, 1392, 11, 731, 11, 13785, 6367, 6921, 767, 7612, 550, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 168, "seek": 47214, "start": 494.14, "end": 497.14, "text": " so that's maybe kind of killed.", "tokens": [51464, 370, 300, 311, 1310, 733, 295, 4652, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 169, "seek": 47214, "start": 497.14, "end": 501.14, "text": " But you can also get runtime errors, or compile errors,", "tokens": [51614, 583, 291, 393, 611, 483, 34474, 13603, 11, 420, 31413, 13603, 11, 51814], "temperature": 0.0, "avg_logprob": -0.1553198496500651, "compression_ratio": 1.7167235494880546, "no_speech_prob": 0.003591450396925211}, {"id": 170, "seek": 50114, "start": 501.14, "end": 504.14, "text": " because we're just introducing weird code changes", "tokens": [50364, 570, 321, 434, 445, 15424, 3657, 3089, 2962, 50514], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 171, "seek": 50114, "start": 504.14, "end": 507.14, "text": " without looking at what the code is actually supposed to be doing.", "tokens": [50514, 1553, 1237, 412, 437, 264, 3089, 307, 767, 3442, 281, 312, 884, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 172, "seek": 50114, "start": 507.14, "end": 510.14, "text": " And finally, mutants can also be ignored,", "tokens": [50664, 400, 2721, 11, 5839, 1719, 393, 611, 312, 19735, 11, 50814], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 173, "seek": 50114, "start": 510.14, "end": 512.14, "text": " because that's what a developer said, I don't want a test for this.", "tokens": [50814, 570, 300, 311, 437, 257, 10754, 848, 11, 286, 500, 380, 528, 257, 1500, 337, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 174, "seek": 50114, "start": 512.14, "end": 515.14, "text": " So I don't want to see the report anymore.", "tokens": [50914, 407, 286, 500, 380, 528, 281, 536, 264, 2275, 3602, 13, 51064], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 175, "seek": 50114, "start": 515.14, "end": 518.14, "text": " So it's just like suppressing warnings for your code code dejects.", "tokens": [51064, 407, 309, 311, 445, 411, 1003, 18605, 30009, 337, 428, 3089, 3089, 368, 1020, 82, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 176, "seek": 50114, "start": 518.14, "end": 520.14, "text": " Who here does that very often?", "tokens": [51214, 2102, 510, 775, 300, 588, 2049, 30, 51314], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 177, "seek": 50114, "start": 520.14, "end": 522.14, "text": " I do, actually, but...", "tokens": [51314, 286, 360, 11, 767, 11, 457, 485, 51414], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 178, "seek": 50114, "start": 525.14, "end": 527.14, "text": " And then just like with the code coverage score,", "tokens": [51564, 400, 550, 445, 411, 365, 264, 3089, 9645, 6175, 11, 51664], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 179, "seek": 50114, "start": 527.14, "end": 529.14, "text": " we want to have a nice metric.", "tokens": [51664, 321, 528, 281, 362, 257, 1481, 20678, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12967131858648256, "compression_ratio": 1.6967509025270757, "no_speech_prob": 0.0029185020830482244}, {"id": 180, "seek": 52914, "start": 529.14, "end": 533.14, "text": " We want to know how good we are doing.", "tokens": [50364, 492, 528, 281, 458, 577, 665, 321, 366, 884, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 181, "seek": 52914, "start": 533.14, "end": 535.14, "text": " And for that, we can compute the score.", "tokens": [50564, 400, 337, 300, 11, 321, 393, 14722, 264, 6175, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 182, "seek": 52914, "start": 535.14, "end": 538.14, "text": " And we call that a striker-deorientation score.", "tokens": [50664, 400, 321, 818, 300, 257, 3575, 5767, 12, 1479, 19521, 399, 6175, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 183, "seek": 52914, "start": 538.14, "end": 541.14, "text": " And basically what we say here is we want to express in a nice number", "tokens": [50814, 400, 1936, 437, 321, 584, 510, 307, 321, 528, 281, 5109, 294, 257, 1481, 1230, 50964], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 184, "seek": 52914, "start": 541.14, "end": 544.14, "text": " on a scale of 0 to 100%.", "tokens": [50964, 322, 257, 4373, 295, 1958, 281, 2319, 6856, 51114], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 185, "seek": 52914, "start": 544.14, "end": 547.14, "text": " How many mutants did you actually manage to kill?", "tokens": [51114, 1012, 867, 5839, 1719, 630, 291, 767, 3067, 281, 1961, 30, 51264], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 186, "seek": 52914, "start": 547.14, "end": 552.14, "text": " So how many unexpected changes in your code are your tests actually catching?", "tokens": [51264, 407, 577, 867, 13106, 2962, 294, 428, 3089, 366, 428, 6921, 767, 16124, 30, 51514], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 187, "seek": 52914, "start": 552.14, "end": 555.14, "text": " And that's this nice formula, but basically what you do here", "tokens": [51514, 400, 300, 311, 341, 1481, 8513, 11, 457, 1936, 437, 291, 360, 510, 51664], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 188, "seek": 52914, "start": 555.14, "end": 558.14, "text": " is everything above the line is what you consider that you killed.", "tokens": [51664, 307, 1203, 3673, 264, 1622, 307, 437, 291, 1949, 300, 291, 4652, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1602773140734575, "compression_ratio": 1.7345454545454546, "no_speech_prob": 0.006247357465326786}, {"id": 189, "seek": 55814, "start": 558.14, "end": 561.14, "text": " And everything below the line, so we divide that by everything", "tokens": [50364, 400, 1203, 2507, 264, 1622, 11, 370, 321, 9845, 300, 538, 1203, 50514], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 190, "seek": 55814, "start": 561.14, "end": 564.14, "text": " that was actually a valid change.", "tokens": [50514, 300, 390, 767, 257, 7363, 1319, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 191, "seek": 55814, "start": 564.14, "end": 567.14, "text": " So we exclude the crashes, for example.", "tokens": [50664, 407, 321, 33536, 264, 28642, 11, 337, 1365, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 192, "seek": 55814, "start": 567.14, "end": 570.14, "text": " And that gives you, for your whole program, for your whole code base,", "tokens": [50814, 400, 300, 2709, 291, 11, 337, 428, 1379, 1461, 11, 337, 428, 1379, 3089, 3096, 11, 50964], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 193, "seek": 55814, "start": 570.14, "end": 574.14, "text": " an indication of how good your tests actually are.", "tokens": [50964, 364, 18877, 295, 577, 665, 428, 6921, 767, 366, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 194, "seek": 55814, "start": 574.14, "end": 577.14, "text": " But what if you don't have that many tests yet?", "tokens": [51164, 583, 437, 498, 291, 500, 380, 362, 300, 867, 6921, 1939, 30, 51314], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 195, "seek": 55814, "start": 577.14, "end": 580.14, "text": " Well, they can also compute a variant of the mutation score.", "tokens": [51314, 1042, 11, 436, 393, 611, 14722, 257, 17501, 295, 264, 27960, 6175, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 196, "seek": 55814, "start": 580.14, "end": 584.14, "text": " We just look at the code that's actually being tested.", "tokens": [51464, 492, 445, 574, 412, 264, 3089, 300, 311, 767, 885, 8246, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10995902490178379, "compression_ratio": 1.7113821138211383, "no_speech_prob": 0.0008692447445355356}, {"id": 197, "seek": 58414, "start": 584.14, "end": 592.14, "text": " So you see here that we do not include the mutants without coverage anymore.", "tokens": [50364, 407, 291, 536, 510, 300, 321, 360, 406, 4090, 264, 5839, 1719, 1553, 9645, 3602, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 198, "seek": 58414, "start": 592.14, "end": 597.14, "text": " So one might think, just like with code coverage,", "tokens": [50764, 407, 472, 1062, 519, 11, 445, 411, 365, 3089, 9645, 11, 51014], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 199, "seek": 58414, "start": 597.14, "end": 600.14, "text": " we should maybe strive for a high number.", "tokens": [51014, 321, 820, 1310, 23829, 337, 257, 1090, 1230, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 200, "seek": 58414, "start": 600.14, "end": 604.14, "text": " We should maybe have 100% mutation coverage, 100% mutation score.", "tokens": [51164, 492, 820, 1310, 362, 2319, 4, 27960, 9645, 11, 2319, 4, 27960, 6175, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 201, "seek": 58414, "start": 604.14, "end": 606.14, "text": " That would be nice.", "tokens": [51364, 663, 576, 312, 1481, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 202, "seek": 58414, "start": 606.14, "end": 608.14, "text": " But there we actually ran into a problem", "tokens": [51464, 583, 456, 321, 767, 5872, 666, 257, 1154, 51564], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 203, "seek": 58414, "start": 608.14, "end": 611.14, "text": " because we cannot actually kill all the mutants.", "tokens": [51564, 570, 321, 2644, 767, 1961, 439, 264, 5839, 1719, 13, 51714], "temperature": 0.0, "avg_logprob": -0.12154579162597656, "compression_ratio": 1.6618357487922706, "no_speech_prob": 0.0025933377910405397}, {"id": 204, "seek": 61114, "start": 611.14, "end": 615.14, "text": " It's very easy, well, relatively easy at least,", "tokens": [50364, 467, 311, 588, 1858, 11, 731, 11, 7226, 1858, 412, 1935, 11, 50564], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 205, "seek": 61114, "start": 615.14, "end": 619.14, "text": " to reach all your codes, to make sure all your code is getting executed.", "tokens": [50564, 281, 2524, 439, 428, 14211, 11, 281, 652, 988, 439, 428, 3089, 307, 1242, 17577, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 206, "seek": 61114, "start": 619.14, "end": 624.14, "text": " So basically to get 100% code coverage, that's relatively simple.", "tokens": [50764, 407, 1936, 281, 483, 2319, 4, 3089, 9645, 11, 300, 311, 7226, 2199, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 207, "seek": 61114, "start": 624.14, "end": 627.14, "text": " But because you're still calling functions from the outside,", "tokens": [51014, 583, 570, 291, 434, 920, 5141, 6828, 490, 264, 2380, 11, 51164], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 208, "seek": 61114, "start": 627.14, "end": 631.14, "text": " you might not be able to test every single operation", "tokens": [51164, 291, 1062, 406, 312, 1075, 281, 1500, 633, 2167, 6916, 51364], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 209, "seek": 61114, "start": 631.14, "end": 633.14, "text": " happening inside of these functions.", "tokens": [51364, 2737, 1854, 295, 613, 6828, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 210, "seek": 61114, "start": 633.14, "end": 640.14, "text": " And actually, some mutants are, if you split up your whole code base completely,", "tokens": [51464, 400, 767, 11, 512, 5839, 1719, 366, 11, 498, 291, 7472, 493, 428, 1379, 3089, 3096, 2584, 11, 51814], "temperature": 0.0, "avg_logprob": -0.10947756165439643, "compression_ratio": 1.6456692913385826, "no_speech_prob": 0.0026559995021671057}, {"id": 211, "seek": 64014, "start": 640.14, "end": 643.14, "text": " you can never kill them.", "tokens": [50364, 291, 393, 1128, 1961, 552, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 212, "seek": 64014, "start": 643.14, "end": 646.14, "text": " And what category of these is equivalent mutants?", "tokens": [50514, 400, 437, 7719, 295, 613, 307, 10344, 5839, 1719, 30, 50664], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 213, "seek": 64014, "start": 646.14, "end": 648.14, "text": " Which is also a problem.", "tokens": [50664, 3013, 307, 611, 257, 1154, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 214, "seek": 64014, "start": 648.14, "end": 650.14, "text": " So given this code, we have a nice for loop,", "tokens": [50764, 407, 2212, 341, 3089, 11, 321, 362, 257, 1481, 337, 6367, 11, 50864], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 215, "seek": 64014, "start": 650.14, "end": 656.14, "text": " and we say, well, we want to iterate 10 times.", "tokens": [50864, 293, 321, 584, 11, 731, 11, 321, 528, 281, 44497, 1266, 1413, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 216, "seek": 64014, "start": 656.14, "end": 661.14, "text": " You can also write like this, and it will still work.", "tokens": [51164, 509, 393, 611, 2464, 411, 341, 11, 293, 309, 486, 920, 589, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 217, "seek": 64014, "start": 661.14, "end": 663.14, "text": " So this mutant, we cannot kill", "tokens": [51414, 407, 341, 47198, 11, 321, 2644, 1961, 51514], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 218, "seek": 64014, "start": 663.14, "end": 665.14, "text": " because even though we changed our code,", "tokens": [51514, 570, 754, 1673, 321, 3105, 527, 3089, 11, 51614], "temperature": 0.0, "avg_logprob": -0.12228078739617461, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.0018564691999927163}, {"id": 219, "seek": 66514, "start": 665.14, "end": 670.14, "text": " semantically it's doing the same thing.", "tokens": [50364, 4361, 49505, 309, 311, 884, 264, 912, 551, 13, 50614], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 220, "seek": 66514, "start": 670.14, "end": 676.14, "text": " So that's where you might want to ignore, basically.", "tokens": [50614, 407, 300, 311, 689, 291, 1062, 528, 281, 11200, 11, 1936, 13, 50914], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 221, "seek": 66514, "start": 676.14, "end": 682.14, "text": " And mutation testing is also very challenging.", "tokens": [50914, 400, 27960, 4997, 307, 611, 588, 7595, 13, 51214], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 222, "seek": 66514, "start": 682.14, "end": 687.14, "text": " That's actually where that practical application problem comes in,", "tokens": [51214, 663, 311, 767, 689, 300, 8496, 3861, 1154, 1487, 294, 11, 51464], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 223, "seek": 66514, "start": 687.14, "end": 689.14, "text": " because you can imagine that mutation testing,", "tokens": [51464, 570, 291, 393, 3811, 300, 27960, 4997, 11, 51564], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 224, "seek": 66514, "start": 689.14, "end": 692.14, "text": " basically changing your code and then running all the tests again,", "tokens": [51564, 1936, 4473, 428, 3089, 293, 550, 2614, 439, 264, 6921, 797, 11, 51714], "temperature": 0.0, "avg_logprob": -0.155007723215464, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0017665894702076912}, {"id": 225, "seek": 69214, "start": 692.14, "end": 695.14, "text": " doesn't take a lot of time.", "tokens": [50364, 1177, 380, 747, 257, 688, 295, 565, 13, 50514], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 226, "seek": 69214, "start": 695.14, "end": 697.14, "text": " And if you have a very large code base,", "tokens": [50514, 400, 498, 291, 362, 257, 588, 2416, 3089, 3096, 11, 50614], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 227, "seek": 69214, "start": 697.14, "end": 701.14, "text": " that might actually not finish in a reasonable time.", "tokens": [50614, 300, 1062, 767, 406, 2413, 294, 257, 10585, 565, 13, 50814], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 228, "seek": 69214, "start": 701.14, "end": 703.14, "text": " You also need a lot of configuration.", "tokens": [50814, 509, 611, 643, 257, 688, 295, 11694, 13, 50914], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 229, "seek": 69214, "start": 703.14, "end": 705.14, "text": " The mutation testing tool needs to know stuff.", "tokens": [50914, 440, 27960, 4997, 2290, 2203, 281, 458, 1507, 13, 51014], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 230, "seek": 69214, "start": 705.14, "end": 707.14, "text": " It needs to know how it can run tests.", "tokens": [51014, 467, 2203, 281, 458, 577, 309, 393, 1190, 6921, 13, 51114], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 231, "seek": 69214, "start": 707.14, "end": 711.14, "text": " It needs to know how it can verify that those tests did complete successfully or not.", "tokens": [51114, 467, 2203, 281, 458, 577, 309, 393, 16888, 300, 729, 6921, 630, 3566, 10727, 420, 406, 13, 51314], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 232, "seek": 69214, "start": 711.14, "end": 715.14, "text": " It also needs to know stuff about your programming language, for example,", "tokens": [51314, 467, 611, 2203, 281, 458, 1507, 466, 428, 9410, 2856, 11, 337, 1365, 11, 51514], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 233, "seek": 69214, "start": 715.14, "end": 720.14, "text": " in order to make sure that it rewrites the code in a correct way.", "tokens": [51514, 294, 1668, 281, 652, 988, 300, 309, 319, 86, 30931, 264, 3089, 294, 257, 3006, 636, 13, 51764], "temperature": 0.0, "avg_logprob": -0.05801305925943018, "compression_ratio": 1.7803030303030303, "no_speech_prob": 0.003058274043723941}, {"id": 234, "seek": 72014, "start": 720.14, "end": 723.14, "text": " So that also needs to be a lot of tuning support to make it work.", "tokens": [50364, 407, 300, 611, 2203, 281, 312, 257, 688, 295, 15164, 1406, 281, 652, 309, 589, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 235, "seek": 72014, "start": 723.14, "end": 730.14, "text": " And for a long time, mutation testing was simply not feasible or not easy to do.", "tokens": [50514, 400, 337, 257, 938, 565, 11, 27960, 4997, 390, 2935, 406, 26648, 420, 406, 1858, 281, 360, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 236, "seek": 72014, "start": 730.14, "end": 732.14, "text": " But we're bracing the gap.", "tokens": [50864, 583, 321, 434, 738, 5615, 264, 7417, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 237, "seek": 72014, "start": 732.14, "end": 734.14, "text": " Not specifically at Striker.", "tokens": [50964, 1726, 4682, 412, 20390, 5767, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 238, "seek": 72014, "start": 734.14, "end": 736.14, "text": " A lot of stuff has already been done.", "tokens": [51064, 316, 688, 295, 1507, 575, 1217, 668, 1096, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 239, "seek": 72014, "start": 736.14, "end": 738.14, "text": " Luckily for us.", "tokens": [51164, 19726, 337, 505, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 240, "seek": 72014, "start": 738.14, "end": 742.14, "text": " But when we're looking at performance, this is basically the worst-case scenario.", "tokens": [51264, 583, 562, 321, 434, 1237, 412, 3389, 11, 341, 307, 1936, 264, 5855, 12, 9765, 9005, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 241, "seek": 72014, "start": 742.14, "end": 748.14, "text": " So the time it takes to run a single mutant, to analyze a single mutant,", "tokens": [51464, 407, 264, 565, 309, 2516, 281, 1190, 257, 2167, 47198, 11, 281, 12477, 257, 2167, 47198, 11, 51764], "temperature": 0.0, "avg_logprob": -0.11983349048985845, "compression_ratio": 1.6181102362204725, "no_speech_prob": 0.0023516882210969925}, {"id": 242, "seek": 74814, "start": 748.14, "end": 751.14, "text": " is basically the time it takes to run on your test cases.", "tokens": [50364, 307, 1936, 264, 565, 309, 2516, 281, 1190, 322, 428, 1500, 3331, 13, 50514], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 243, "seek": 74814, "start": 751.14, "end": 753.14, "text": " So we can approximate it by saying,", "tokens": [50514, 407, 321, 393, 30874, 309, 538, 1566, 11, 50614], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 244, "seek": 74814, "start": 753.14, "end": 757.14, "text": " well, let's just count the number of tests that you have.", "tokens": [50614, 731, 11, 718, 311, 445, 1207, 264, 1230, 295, 6921, 300, 291, 362, 13, 50814], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 245, "seek": 74814, "start": 757.14, "end": 763.14, "text": " And then the time it takes to mutate your whole program is just the sum of that.", "tokens": [50814, 400, 550, 264, 565, 309, 2516, 281, 5839, 473, 428, 1379, 1461, 307, 445, 264, 2408, 295, 300, 13, 51114], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 246, "seek": 74814, "start": 763.14, "end": 767.14, "text": " So it basically means that you multiply the number of test cases that you have in your code", "tokens": [51114, 407, 309, 1936, 1355, 300, 291, 12972, 264, 1230, 295, 1500, 3331, 300, 291, 362, 294, 428, 3089, 51314], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 247, "seek": 74814, "start": 767.14, "end": 769.14, "text": " times the number of mutants that you need to check,", "tokens": [51314, 1413, 264, 1230, 295, 5839, 1719, 300, 291, 643, 281, 1520, 11, 51414], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 248, "seek": 74814, "start": 769.14, "end": 771.14, "text": " because mutants need to be checked in isolation,", "tokens": [51414, 570, 5839, 1719, 643, 281, 312, 10033, 294, 16001, 11, 51514], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 249, "seek": 74814, "start": 771.14, "end": 774.14, "text": " because they can influence each other.", "tokens": [51514, 570, 436, 393, 6503, 1184, 661, 13, 51664], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 250, "seek": 74814, "start": 774.14, "end": 777.14, "text": " So you can imagine already with a very small program,", "tokens": [51664, 407, 291, 393, 3811, 1217, 365, 257, 588, 1359, 1461, 11, 51814], "temperature": 0.0, "avg_logprob": -0.06793759085915306, "compression_ratio": 1.9695817490494296, "no_speech_prob": 0.008224948309361935}, {"id": 251, "seek": 77714, "start": 777.14, "end": 783.14, "text": " this number, the time approximation, can get really, really, really large.", "tokens": [50364, 341, 1230, 11, 264, 565, 28023, 11, 393, 483, 534, 11, 534, 11, 534, 2416, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 252, "seek": 77714, "start": 783.14, "end": 785.14, "text": " So we need to be smarter about that.", "tokens": [50664, 407, 321, 643, 281, 312, 20294, 466, 300, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 253, "seek": 77714, "start": 785.14, "end": 788.14, "text": " We want to make sure that the total time is a lot less,", "tokens": [50764, 492, 528, 281, 652, 988, 300, 264, 3217, 565, 307, 257, 688, 1570, 11, 50914], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 254, "seek": 77714, "start": 788.14, "end": 791.14, "text": " not just a bit less, a lot less than just a multiplication.", "tokens": [50914, 406, 445, 257, 857, 1570, 11, 257, 688, 1570, 813, 445, 257, 27290, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 255, "seek": 77714, "start": 791.14, "end": 795.14, "text": " And basically there are three approaches to get there.", "tokens": [51064, 400, 1936, 456, 366, 1045, 11587, 281, 483, 456, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 256, "seek": 77714, "start": 795.14, "end": 797.14, "text": " It's either to do it faster.", "tokens": [51264, 467, 311, 2139, 281, 360, 309, 4663, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 257, "seek": 77714, "start": 797.14, "end": 800.14, "text": " And doing it faster, for example, I think we're going to paralyze it.", "tokens": [51364, 400, 884, 309, 4663, 11, 337, 1365, 11, 286, 519, 321, 434, 516, 281, 32645, 1381, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 258, "seek": 77714, "start": 800.14, "end": 802.14, "text": " We're going to use love course.", "tokens": [51514, 492, 434, 516, 281, 764, 959, 1164, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 259, "seek": 77714, "start": 802.14, "end": 806.14, "text": " Like take a big machine, nowadays it's relatively simple to get a machine with 128 cores,", "tokens": [51614, 1743, 747, 257, 955, 3479, 11, 13434, 309, 311, 7226, 2199, 281, 483, 257, 3479, 365, 29810, 24826, 11, 51814], "temperature": 0.0, "avg_logprob": -0.14542560016407685, "compression_ratio": 1.740484429065744, "no_speech_prob": 0.004736700560897589}, {"id": 260, "seek": 80614, "start": 806.14, "end": 810.14, "text": " so we can do 128 things at the same time.", "tokens": [50364, 370, 321, 393, 360, 29810, 721, 412, 264, 912, 565, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 261, "seek": 80614, "start": 810.14, "end": 812.14, "text": " You can try to do fewer.", "tokens": [50564, 509, 393, 853, 281, 360, 13366, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 262, "seek": 80614, "start": 812.14, "end": 814.14, "text": " So you can maybe try to make smart choices and say,", "tokens": [50664, 407, 291, 393, 1310, 853, 281, 652, 4069, 7994, 293, 584, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 263, "seek": 80614, "start": 814.14, "end": 817.14, "text": " well, certain stuff we maybe don't need to analyze,", "tokens": [50764, 731, 11, 1629, 1507, 321, 1310, 500, 380, 643, 281, 12477, 11, 50914], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 264, "seek": 80614, "start": 817.14, "end": 821.14, "text": " because we kind of know that it's probably fine.", "tokens": [50914, 570, 321, 733, 295, 458, 300, 309, 311, 1391, 2489, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 265, "seek": 80614, "start": 821.14, "end": 824.14, "text": " Or you can try to do it smarter.", "tokens": [51114, 1610, 291, 393, 853, 281, 360, 309, 20294, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 266, "seek": 80614, "start": 824.14, "end": 827.14, "text": " And the study I referenced here, they really did an analysis in there,", "tokens": [51264, 400, 264, 2979, 286, 32734, 510, 11, 436, 534, 630, 364, 5215, 294, 456, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 267, "seek": 80614, "start": 827.14, "end": 829.14, "text": " it's like a litigator review.", "tokens": [51414, 309, 311, 411, 257, 7997, 328, 1639, 3131, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 268, "seek": 80614, "start": 829.14, "end": 834.14, "text": " And most of the studies are actually focusing on fewer or smarter.", "tokens": [51514, 400, 881, 295, 264, 5313, 366, 767, 8416, 322, 13366, 420, 20294, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1239666257585798, "compression_ratio": 1.6535433070866141, "no_speech_prob": 0.004868301562964916}, {"id": 269, "seek": 83414, "start": 834.14, "end": 837.14, "text": " And common techniques there, some of us here,", "tokens": [50364, 400, 2689, 7512, 456, 11, 512, 295, 505, 510, 11, 50514], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 270, "seek": 83414, "start": 837.14, "end": 840.14, "text": " I won't have time to go into detail on all of these.", "tokens": [50514, 286, 1582, 380, 362, 565, 281, 352, 666, 2607, 322, 439, 295, 613, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 271, "seek": 83414, "start": 840.14, "end": 842.14, "text": " But you can think of like random mutation,", "tokens": [50664, 583, 291, 393, 519, 295, 411, 4974, 27960, 11, 50764], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 272, "seek": 83414, "start": 842.14, "end": 844.14, "text": " like we're just randomly checking stuff sometimes.", "tokens": [50764, 411, 321, 434, 445, 16979, 8568, 1507, 2171, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 273, "seek": 83414, "start": 844.14, "end": 846.14, "text": " We're just randomly picking some mutation that we're going to do.", "tokens": [50864, 492, 434, 445, 16979, 8867, 512, 27960, 300, 321, 434, 516, 281, 360, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 274, "seek": 83414, "start": 846.14, "end": 848.14, "text": " But that's not deterministic.", "tokens": [50964, 583, 300, 311, 406, 15957, 3142, 13, 51064], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 275, "seek": 83414, "start": 848.14, "end": 855.14, "text": " So that might not give you the best knowledge about what the quality of the test actually is.", "tokens": [51064, 407, 300, 1062, 406, 976, 291, 264, 1151, 3601, 466, 437, 264, 3125, 295, 264, 1500, 767, 307, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 276, "seek": 83414, "start": 855.14, "end": 857.14, "text": " Parallel execution already mentioned.", "tokens": [51414, 3457, 336, 338, 15058, 1217, 2835, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 277, "seek": 83414, "start": 857.14, "end": 860.14, "text": " You can also do stuff like data flow and control flow analysis", "tokens": [51514, 509, 393, 611, 360, 1507, 411, 1412, 3095, 293, 1969, 3095, 5215, 51664], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 278, "seek": 83414, "start": 860.14, "end": 863.14, "text": " and try to reduce the set that way.", "tokens": [51664, 293, 853, 281, 5407, 264, 992, 300, 636, 13, 51814], "temperature": 0.0, "avg_logprob": -0.17110593391187262, "compression_ratio": 1.7533783783783783, "no_speech_prob": 0.002775391796603799}, {"id": 279, "seek": 86314, "start": 863.14, "end": 872.14, "text": " Or maybe look at AI to try to pick smarter sets of stuff that you're actually going to check.", "tokens": [50364, 1610, 1310, 574, 412, 7318, 281, 853, 281, 1888, 20294, 6352, 295, 1507, 300, 291, 434, 767, 516, 281, 1520, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 280, "seek": 86314, "start": 872.14, "end": 876.14, "text": " But if you want to use that mutation score as a benchmark, as a comparison,", "tokens": [50814, 583, 498, 291, 528, 281, 764, 300, 27960, 6175, 382, 257, 18927, 11, 382, 257, 9660, 11, 51014], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 281, "seek": 86314, "start": 876.14, "end": 880.14, "text": " for example, with the pull request, did you actually improve it or not?", "tokens": [51014, 337, 1365, 11, 365, 264, 2235, 5308, 11, 630, 291, 767, 3470, 309, 420, 406, 30, 51214], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 282, "seek": 86314, "start": 880.14, "end": 884.14, "text": " Or to give you a good indication of how good your tests currently actually are,", "tokens": [51214, 1610, 281, 976, 291, 257, 665, 18877, 295, 577, 665, 428, 6921, 4362, 767, 366, 11, 51414], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 283, "seek": 86314, "start": 884.14, "end": 886.14, "text": " you actually need to execute everything.", "tokens": [51414, 291, 767, 643, 281, 14483, 1203, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 284, "seek": 86314, "start": 886.14, "end": 892.14, "text": " So just the approach of we're just going to run less, that doesn't always work.", "tokens": [51514, 407, 445, 264, 3109, 295, 321, 434, 445, 516, 281, 1190, 1570, 11, 300, 1177, 380, 1009, 589, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10768408341841264, "compression_ratio": 1.625, "no_speech_prob": 0.00135757215321064}, {"id": 285, "seek": 89214, "start": 893.14, "end": 900.14, "text": " And one big way how this process can be sped up is by looking at how we actually change the code.", "tokens": [50414, 400, 472, 955, 636, 577, 341, 1399, 393, 312, 637, 292, 493, 307, 538, 1237, 412, 577, 321, 767, 1319, 264, 3089, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 286, "seek": 89214, "start": 900.14, "end": 906.14, "text": " So a very new eave approach would, for example, be just changing the source code,", "tokens": [50764, 407, 257, 588, 777, 308, 946, 3109, 576, 11, 337, 1365, 11, 312, 445, 4473, 264, 4009, 3089, 11, 51064], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 287, "seek": 89214, "start": 906.14, "end": 909.14, "text": " running the compiler again, running the test again,", "tokens": [51064, 2614, 264, 31958, 797, 11, 2614, 264, 1500, 797, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 288, "seek": 89214, "start": 909.14, "end": 911.14, "text": " and then making another change in the source code,", "tokens": [51214, 293, 550, 1455, 1071, 1319, 294, 264, 4009, 3089, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 289, "seek": 89214, "start": 911.14, "end": 914.14, "text": " and then running the compiler again, running the test again.", "tokens": [51314, 293, 550, 2614, 264, 31958, 797, 11, 2614, 264, 1500, 797, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 290, "seek": 89214, "start": 914.14, "end": 918.14, "text": " And if you have a compiled language with a fairly slow compiler,", "tokens": [51464, 400, 498, 291, 362, 257, 36548, 2856, 365, 257, 6457, 2964, 31958, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1367031984990186, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.0007301559671759605}, {"id": 291, "seek": 91814, "start": 918.14, "end": 923.14, "text": " that's quite problematic because then it gets really, really slow.", "tokens": [50364, 300, 311, 1596, 19011, 570, 550, 309, 2170, 534, 11, 534, 2964, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 292, "seek": 91814, "start": 923.14, "end": 926.14, "text": " A bit better might be bytecode mutation.", "tokens": [50614, 316, 857, 1101, 1062, 312, 40846, 22332, 27960, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 293, "seek": 91814, "start": 926.14, "end": 931.14, "text": " So, for example, the JVM languages have bytecodes, they have an intermediate step,", "tokens": [50764, 407, 11, 337, 1365, 11, 264, 508, 53, 44, 8650, 362, 40846, 66, 4789, 11, 436, 362, 364, 19376, 1823, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 294, "seek": 91814, "start": 931.14, "end": 933.14, "text": " maybe you can mutate that.", "tokens": [51014, 1310, 291, 393, 5839, 473, 300, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 295, "seek": 91814, "start": 933.14, "end": 936.14, "text": " And they only have to compile the source code once,", "tokens": [51114, 400, 436, 787, 362, 281, 31413, 264, 4009, 3089, 1564, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 296, "seek": 91814, "start": 936.14, "end": 939.14, "text": " they just change the bytecode and then run it.", "tokens": [51264, 436, 445, 1319, 264, 40846, 22332, 293, 550, 1190, 309, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 297, "seek": 91814, "start": 939.14, "end": 944.14, "text": " And while that is a lot faster, it's also a lot more complicated,", "tokens": [51414, 400, 1339, 300, 307, 257, 688, 4663, 11, 309, 311, 611, 257, 688, 544, 6179, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1158456618969257, "compression_ratio": 1.6536796536796536, "no_speech_prob": 0.0012817465467378497}, {"id": 298, "seek": 94414, "start": 944.14, "end": 948.14, "text": " but it has one big downside, and that is that every change that is possible in the bytecode", "tokens": [50364, 457, 309, 575, 472, 955, 25060, 11, 293, 300, 307, 300, 633, 1319, 300, 307, 1944, 294, 264, 40846, 22332, 50564], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 299, "seek": 94414, "start": 948.14, "end": 951.14, "text": " is not necessarily something you can do in your source code,", "tokens": [50564, 307, 406, 4725, 746, 291, 393, 360, 294, 428, 4009, 3089, 11, 50714], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 300, "seek": 94414, "start": 951.14, "end": 954.14, "text": " especially for Java, for example.", "tokens": [50714, 2318, 337, 10745, 11, 337, 1365, 13, 50864], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 301, "seek": 94414, "start": 954.14, "end": 960.14, "text": " If you write Kotlin or Scala, there's a lot of, a very simple thing in Scala, for example,", "tokens": [50864, 759, 291, 2464, 30123, 5045, 420, 2747, 5159, 11, 456, 311, 257, 688, 295, 11, 257, 588, 2199, 551, 294, 2747, 5159, 11, 337, 1365, 11, 51164], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 302, "seek": 94414, "start": 960.14, "end": 962.14, "text": " can result in a lot of bytecodes,", "tokens": [51164, 393, 1874, 294, 257, 688, 295, 40846, 66, 4789, 11, 51264], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 303, "seek": 94414, "start": 962.14, "end": 966.14, "text": " and if you're trying to mutate that with the assumption that the Java compiler compiled it,", "tokens": [51264, 293, 498, 291, 434, 1382, 281, 5839, 473, 300, 365, 264, 15302, 300, 264, 10745, 31958, 36548, 309, 11, 51464], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 304, "seek": 94414, "start": 966.14, "end": 968.14, "text": " it might come up with mutants that you did not kill,", "tokens": [51464, 309, 1062, 808, 493, 365, 5839, 1719, 300, 291, 630, 406, 1961, 11, 51564], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 305, "seek": 94414, "start": 968.14, "end": 972.14, "text": " but you cannot actually kill them because they don't exist in your source code.", "tokens": [51564, 457, 291, 2644, 767, 1961, 552, 570, 436, 500, 380, 2514, 294, 428, 4009, 3089, 13, 51764], "temperature": 0.0, "avg_logprob": -0.0889101641518729, "compression_ratio": 1.8231292517006803, "no_speech_prob": 0.004950605798512697}, {"id": 306, "seek": 97414, "start": 974.14, "end": 979.14, "text": " So, who thinks, who has an idea, how we can, how we can do this smarter?", "tokens": [50364, 407, 11, 567, 7309, 11, 567, 575, 364, 1558, 11, 577, 321, 393, 11, 577, 321, 393, 360, 341, 20294, 30, 50614], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 307, "seek": 97414, "start": 979.14, "end": 983.14, "text": " Any ideas? Yes.", "tokens": [50614, 2639, 3487, 30, 1079, 13, 50814], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 308, "seek": 97414, "start": 983.14, "end": 985.14, "text": " Are you a step?", "tokens": [50814, 2014, 291, 257, 1823, 30, 50914], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 309, "seek": 97414, "start": 985.14, "end": 987.14, "text": " Sorry, what did you say?", "tokens": [50914, 4919, 11, 437, 630, 291, 584, 30, 51014], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 310, "seek": 97414, "start": 987.14, "end": 994.14, "text": " You compile all the different mutants, the same as people, and you select which mutants you get from the other side.", "tokens": [51014, 509, 31413, 439, 264, 819, 5839, 1719, 11, 264, 912, 382, 561, 11, 293, 291, 3048, 597, 5839, 1719, 291, 483, 490, 264, 661, 1252, 13, 51364], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 311, "seek": 97414, "start": 994.14, "end": 997.14, "text": " Exactly. Large or small socks?", "tokens": [51364, 7587, 13, 33092, 420, 1359, 17564, 30, 51514], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 312, "seek": 97414, "start": 997.14, "end": 1000.14, "text": " Large or small socks? You have socks with a logo on it.", "tokens": [51514, 33092, 420, 1359, 17564, 30, 509, 362, 17564, 365, 257, 9699, 322, 309, 13, 51664], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 313, "seek": 97414, "start": 1000.14, "end": 1002.14, "text": " Large.", "tokens": [51664, 33092, 13, 51764], "temperature": 0.0, "avg_logprob": -0.31513853527250746, "compression_ratio": 1.6346153846153846, "no_speech_prob": 0.011308547109365463}, {"id": 314, "seek": 100214, "start": 1003.14, "end": 1005.14, "text": " This is the, the larger the other ones, right?", "tokens": [50414, 639, 307, 264, 11, 264, 4833, 264, 661, 2306, 11, 558, 30, 50514], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 315, "seek": 100214, "start": 1005.14, "end": 1008.14, "text": " Sorry about that. Thank you, Niko.", "tokens": [50514, 4919, 466, 300, 13, 1044, 291, 11, 426, 10770, 13, 50664], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 316, "seek": 100214, "start": 1008.14, "end": 1010.14, "text": " For testing good device.", "tokens": [50664, 1171, 4997, 665, 4302, 13, 50764], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 317, "seek": 100214, "start": 1010.14, "end": 1013.14, "text": " I didn't test my own system, no.", "tokens": [50764, 286, 994, 380, 1500, 452, 1065, 1185, 11, 572, 13, 50914], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 318, "seek": 100214, "start": 1013.14, "end": 1015.14, "text": " Silver written software to do this.", "tokens": [50914, 15861, 3720, 4722, 281, 360, 341, 13, 51014], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 319, "seek": 100214, "start": 1015.14, "end": 1018.14, "text": " But, yeah, basically, so the answer that was given was basically this,", "tokens": [51014, 583, 11, 1338, 11, 1936, 11, 370, 264, 1867, 300, 390, 2212, 390, 1936, 341, 11, 51164], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 320, "seek": 100214, "start": 1018.14, "end": 1023.14, "text": " and we call that mutant schematic, and this just makes sure that you compile all the mutants into your code once,", "tokens": [51164, 293, 321, 818, 300, 47198, 44739, 11, 293, 341, 445, 1669, 988, 300, 291, 31413, 439, 264, 5839, 1719, 666, 428, 3089, 1564, 11, 51414], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 321, "seek": 100214, "start": 1023.14, "end": 1027.1399999999999, "text": " and then use an environment variable to just switch them on or not.", "tokens": [51414, 293, 550, 764, 364, 2823, 7006, 281, 445, 3679, 552, 322, 420, 406, 13, 51614], "temperature": 0.0, "avg_logprob": -0.22757206291987978, "compression_ratio": 1.5910780669144982, "no_speech_prob": 0.00737779913470149}, {"id": 322, "seek": 102714, "start": 1027.14, "end": 1031.14, "text": " So, if you do this, your compiled code is just full of if statements,", "tokens": [50364, 407, 11, 498, 291, 360, 341, 11, 428, 36548, 3089, 307, 445, 1577, 295, 498, 12363, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1464184856414795, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.0042201741598546505}, {"id": 323, "seek": 102714, "start": 1031.14, "end": 1033.14, "text": " that is, check a certain number.", "tokens": [50564, 300, 307, 11, 1520, 257, 1629, 1230, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1464184856414795, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.0042201741598546505}, {"id": 324, "seek": 102714, "start": 1033.14, "end": 1040.14, "text": " And that is complicated, but it is manageable, it's not that hard.", "tokens": [50664, 400, 300, 307, 6179, 11, 457, 309, 307, 38798, 11, 309, 311, 406, 300, 1152, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1464184856414795, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.0042201741598546505}, {"id": 325, "seek": 102714, "start": 1040.14, "end": 1047.14, "text": " The main problem is in keeping track of it, but if you assign every mutant a unique number, it should be fine.", "tokens": [51014, 440, 2135, 1154, 307, 294, 5145, 2837, 295, 309, 11, 457, 498, 291, 6269, 633, 5839, 394, 257, 3845, 1230, 11, 309, 820, 312, 2489, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1464184856414795, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.0042201741598546505}, {"id": 326, "seek": 102714, "start": 1047.14, "end": 1053.14, "text": " And this really helps with compiled languages, especially with stuff that's a bit slower, like Scala.", "tokens": [51364, 400, 341, 534, 3665, 365, 36548, 8650, 11, 2318, 365, 1507, 300, 311, 257, 857, 14009, 11, 411, 2747, 5159, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1464184856414795, "compression_ratio": 1.61864406779661, "no_speech_prob": 0.0042201741598546505}, {"id": 327, "seek": 105314, "start": 1054.14, "end": 1056.14, "text": " And this is actually relatively new.", "tokens": [50414, 400, 341, 307, 767, 7226, 777, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 328, "seek": 105314, "start": 1056.14, "end": 1059.14, "text": " In the world of mutation testing, this is relatively new.", "tokens": [50514, 682, 264, 1002, 295, 27960, 4997, 11, 341, 307, 7226, 777, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 329, "seek": 105314, "start": 1059.14, "end": 1063.14, "text": " It is from 1993, though, so it's the same age as me.", "tokens": [50664, 467, 307, 490, 25137, 11, 1673, 11, 370, 309, 311, 264, 912, 3205, 382, 385, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 330, "seek": 105314, "start": 1063.14, "end": 1066.14, "text": " I wouldn't say that I am relatively new.", "tokens": [50864, 286, 2759, 380, 584, 300, 286, 669, 7226, 777, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 331, "seek": 105314, "start": 1066.14, "end": 1071.14, "text": " But, as something else, Martin, that you can do is coverage analysis.", "tokens": [51014, 583, 11, 382, 746, 1646, 11, 9184, 11, 300, 291, 393, 360, 307, 9645, 5215, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 332, "seek": 105314, "start": 1071.14, "end": 1075.14, "text": " That's also something that has been part of Striker for a long time already.", "tokens": [51264, 663, 311, 611, 746, 300, 575, 668, 644, 295, 20390, 5767, 337, 257, 938, 565, 1217, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 333, "seek": 105314, "start": 1075.14, "end": 1080.14, "text": " So we actually do an initial run where we just check which tests are reaching what code.", "tokens": [51464, 407, 321, 767, 360, 364, 5883, 1190, 689, 321, 445, 1520, 597, 6921, 366, 9906, 437, 3089, 13, 51714], "temperature": 0.0, "avg_logprob": -0.12292080266135079, "compression_ratio": 1.65625, "no_speech_prob": 0.0021675913594663143}, {"id": 334, "seek": 108014, "start": 1080.14, "end": 1086.14, "text": " So we also know if you change one part of the code, which tests actually need to run and which don't.", "tokens": [50364, 407, 321, 611, 458, 498, 291, 1319, 472, 644, 295, 264, 3089, 11, 597, 6921, 767, 643, 281, 1190, 293, 597, 500, 380, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14447833289784834, "compression_ratio": 1.7671755725190839, "no_speech_prob": 0.0017011963063850999}, {"id": 335, "seek": 108014, "start": 1086.14, "end": 1091.14, "text": " So you can also get that number of test cases down a lot, depending on where you mutate the code.", "tokens": [50664, 407, 291, 393, 611, 483, 300, 1230, 295, 1500, 3331, 760, 257, 688, 11, 5413, 322, 689, 291, 5839, 473, 264, 3089, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14447833289784834, "compression_ratio": 1.7671755725190839, "no_speech_prob": 0.0017011963063850999}, {"id": 336, "seek": 108014, "start": 1091.14, "end": 1096.14, "text": " Some codes you don't really know, so if you have something static, for example,", "tokens": [50914, 2188, 14211, 291, 500, 380, 534, 458, 11, 370, 498, 291, 362, 746, 13437, 11, 337, 1365, 11, 51164], "temperature": 0.0, "avg_logprob": -0.14447833289784834, "compression_ratio": 1.7671755725190839, "no_speech_prob": 0.0017011963063850999}, {"id": 337, "seek": 108014, "start": 1096.14, "end": 1101.14, "text": " it's not extreme defined somewhere, that, you know, you might not be able to figure out how that is used.", "tokens": [51164, 309, 311, 406, 8084, 7642, 4079, 11, 300, 11, 291, 458, 11, 291, 1062, 406, 312, 1075, 281, 2573, 484, 577, 300, 307, 1143, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14447833289784834, "compression_ratio": 1.7671755725190839, "no_speech_prob": 0.0017011963063850999}, {"id": 338, "seek": 108014, "start": 1101.14, "end": 1105.14, "text": " You might still need to have to run the whole test suite, but you try not to.", "tokens": [51414, 509, 1062, 920, 643, 281, 362, 281, 1190, 264, 1379, 1500, 14205, 11, 457, 291, 853, 406, 281, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14447833289784834, "compression_ratio": 1.7671755725190839, "no_speech_prob": 0.0017011963063850999}, {"id": 339, "seek": 110514, "start": 1106.14, "end": 1110.14, "text": " Something else you can do is incremental analysis.", "tokens": [50414, 6595, 1646, 291, 393, 360, 307, 35759, 5215, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11282326019916337, "compression_ratio": 1.656, "no_speech_prob": 0.0023470462765544653}, {"id": 340, "seek": 110514, "start": 1110.14, "end": 1117.14, "text": " So just try to div some previously stored state and try to guess which mutants you actually need to check.", "tokens": [50614, 407, 445, 853, 281, 3414, 512, 8046, 12187, 1785, 293, 853, 281, 2041, 597, 5839, 1719, 291, 767, 643, 281, 1520, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11282326019916337, "compression_ratio": 1.656, "no_speech_prob": 0.0023470462765544653}, {"id": 341, "seek": 110514, "start": 1117.14, "end": 1125.14, "text": " This is very hard to do, fully foolproof, fully complete, but you can get there like 99%.", "tokens": [50964, 639, 307, 588, 1152, 281, 360, 11, 4498, 7979, 15690, 11, 4498, 3566, 11, 457, 291, 393, 483, 456, 411, 11803, 6856, 51364], "temperature": 0.0, "avg_logprob": -0.11282326019916337, "compression_ratio": 1.656, "no_speech_prob": 0.0023470462765544653}, {"id": 342, "seek": 110514, "start": 1125.14, "end": 1129.14, "text": " And that means that if you make a small change, a small pull request,", "tokens": [51364, 400, 300, 1355, 300, 498, 291, 652, 257, 1359, 1319, 11, 257, 1359, 2235, 5308, 11, 51564], "temperature": 0.0, "avg_logprob": -0.11282326019916337, "compression_ratio": 1.656, "no_speech_prob": 0.0023470462765544653}, {"id": 343, "seek": 110514, "start": 1129.14, "end": 1134.14, "text": " that checking whether your changes are tested properly is relatively simple, is relatively fast.", "tokens": [51564, 300, 8568, 1968, 428, 2962, 366, 8246, 6108, 307, 7226, 2199, 11, 307, 7226, 2370, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11282326019916337, "compression_ratio": 1.656, "no_speech_prob": 0.0023470462765544653}, {"id": 344, "seek": 113414, "start": 1134.14, "end": 1139.14, "text": " So if, uh, Nico here in front, he gave it all yesterday in the JavaScript dev room,", "tokens": [50364, 407, 498, 11, 2232, 11, 15115, 510, 294, 1868, 11, 415, 2729, 309, 439, 5186, 294, 264, 15778, 1905, 1808, 11, 50614], "temperature": 0.0, "avg_logprob": -0.22019616488752694, "compression_ratio": 1.5903083700440528, "no_speech_prob": 0.0025723595172166824}, {"id": 345, "seek": 113414, "start": 1139.14, "end": 1144.14, "text": " and he actually showed this feature, and I think that there was a difference between a couple of seconds", "tokens": [50614, 293, 415, 767, 4712, 341, 4111, 11, 293, 286, 519, 300, 456, 390, 257, 2649, 1296, 257, 1916, 295, 3949, 50864], "temperature": 0.0, "avg_logprob": -0.22019616488752694, "compression_ratio": 1.5903083700440528, "no_speech_prob": 0.0025723595172166824}, {"id": 346, "seek": 113414, "start": 1144.14, "end": 1150.14, "text": " and like 30 seconds and three seconds, something like that, on a small project.", "tokens": [50864, 293, 411, 2217, 3949, 293, 1045, 3949, 11, 746, 411, 300, 11, 322, 257, 1359, 1716, 13, 51164], "temperature": 0.0, "avg_logprob": -0.22019616488752694, "compression_ratio": 1.5903083700440528, "no_speech_prob": 0.0025723595172166824}, {"id": 347, "seek": 113414, "start": 1154.14, "end": 1162.14, "text": " Another cool thing is mutation levels, and that's where you actually give the user a choice.", "tokens": [51364, 3996, 1627, 551, 307, 27960, 4358, 11, 293, 300, 311, 689, 291, 767, 976, 264, 4195, 257, 3922, 13, 51764], "temperature": 0.0, "avg_logprob": -0.22019616488752694, "compression_ratio": 1.5903083700440528, "no_speech_prob": 0.0025723595172166824}, {"id": 348, "seek": 116214, "start": 1162.14, "end": 1166.14, "text": " Do you care about testing it fully, or do you care about performance?", "tokens": [50364, 1144, 291, 1127, 466, 4997, 309, 4498, 11, 420, 360, 291, 1127, 466, 3389, 30, 50564], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 349, "seek": 116214, "start": 1166.14, "end": 1170.14, "text": " And the choice that the user wants to make can depend on the type of project or the domain.", "tokens": [50564, 400, 264, 3922, 300, 264, 4195, 2738, 281, 652, 393, 5672, 322, 264, 2010, 295, 1716, 420, 264, 9274, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 350, "seek": 116214, "start": 1170.14, "end": 1174.14, "text": " Do you have code where it's really important that every single thing is tested,", "tokens": [50764, 1144, 291, 362, 3089, 689, 309, 311, 534, 1021, 300, 633, 2167, 551, 307, 8246, 11, 50964], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 351, "seek": 116214, "start": 1174.14, "end": 1179.14, "text": " or isn't it that important actually? Do you actually want to spend the time?", "tokens": [50964, 420, 1943, 380, 309, 300, 1021, 767, 30, 1144, 291, 767, 528, 281, 3496, 264, 565, 30, 51214], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 352, "seek": 116214, "start": 1179.14, "end": 1184.14, "text": " Or maybe you want to do a quick and dirty but pretty good analysis for every pull request,", "tokens": [51214, 1610, 1310, 291, 528, 281, 360, 257, 1702, 293, 9360, 457, 1238, 665, 5215, 337, 633, 2235, 5308, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 353, "seek": 116214, "start": 1184.14, "end": 1187.14, "text": " which you do in the nightly build where you test it fully.", "tokens": [51464, 597, 291, 360, 294, 264, 1818, 356, 1322, 689, 291, 1500, 309, 4498, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 354, "seek": 116214, "start": 1187.14, "end": 1191.14, "text": " There's different approaches here, and this is actually something that is researched", "tokens": [51614, 821, 311, 819, 11587, 510, 11, 293, 341, 307, 767, 746, 300, 307, 37098, 51814], "temperature": 0.0, "avg_logprob": -0.10805555154349057, "compression_ratio": 1.8013029315960911, "no_speech_prob": 0.004011879675090313}, {"id": 355, "seek": 119114, "start": 1191.14, "end": 1195.14, "text": " by one of my colleagues at InfoSport, he did his master's thesis on it.", "tokens": [50364, 538, 472, 295, 452, 7734, 412, 11537, 78, 50, 2707, 11, 415, 630, 702, 4505, 311, 22288, 322, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.18724942207336426, "compression_ratio": 1.2808219178082192, "no_speech_prob": 0.005439749453216791}, {"id": 356, "seek": 119114, "start": 1195.14, "end": 1198.14, "text": " So it's really cool.", "tokens": [50564, 407, 309, 311, 534, 1627, 13, 50714], "temperature": 0.0, "avg_logprob": -0.18724942207336426, "compression_ratio": 1.2808219178082192, "no_speech_prob": 0.005439749453216791}, {"id": 357, "seek": 119114, "start": 1198.14, "end": 1202.14, "text": " But what could be downside of this approach? Any ideas?", "tokens": [50714, 583, 437, 727, 312, 25060, 295, 341, 3109, 30, 2639, 3487, 30, 50914], "temperature": 0.0, "avg_logprob": -0.18724942207336426, "compression_ratio": 1.2808219178082192, "no_speech_prob": 0.005439749453216791}, {"id": 358, "seek": 119114, "start": 1202.14, "end": 1205.14, "text": " Remember, you can get some socks.", "tokens": [50914, 5459, 11, 291, 393, 483, 512, 17564, 13, 51064], "temperature": 0.0, "avg_logprob": -0.18724942207336426, "compression_ratio": 1.2808219178082192, "no_speech_prob": 0.005439749453216791}, {"id": 359, "seek": 119114, "start": 1209.14, "end": 1210.14, "text": " Yes?", "tokens": [51264, 1079, 30, 51314], "temperature": 0.0, "avg_logprob": -0.18724942207336426, "compression_ratio": 1.2808219178082192, "no_speech_prob": 0.005439749453216791}, {"id": 360, "seek": 121014, "start": 1210.14, "end": 1236.14, "text": " So the answer was the feedback loop is longer, basically.", "tokens": [50364, 407, 264, 1867, 390, 264, 5824, 6367, 307, 2854, 11, 1936, 13, 51664], "temperature": 0.0, "avg_logprob": -0.4964151084423065, "compression_ratio": 0.95, "no_speech_prob": 0.10013359040021896}, {"id": 361, "seek": 123614, "start": 1236.14, "end": 1240.14, "text": " It might take time to find if your tests are not that great.", "tokens": [50364, 467, 1062, 747, 565, 281, 915, 498, 428, 6921, 366, 406, 300, 869, 13, 50564], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 362, "seek": 123614, "start": 1240.14, "end": 1244.14, "text": " That's the one. I have another slide, but yeah, another guest.", "tokens": [50564, 663, 311, 264, 472, 13, 286, 362, 1071, 4137, 11, 457, 1338, 11, 1071, 8341, 13, 50764], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 363, "seek": 123614, "start": 1244.14, "end": 1245.14, "text": " Sorry?", "tokens": [50764, 4919, 30, 50814], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 364, "seek": 123614, "start": 1245.14, "end": 1249.14, "text": " The problem is very useful because you run nightly and...", "tokens": [50814, 440, 1154, 307, 588, 4420, 570, 291, 1190, 1818, 356, 293, 485, 51014], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 365, "seek": 123614, "start": 1249.14, "end": 1250.14, "text": " Yeah.", "tokens": [51014, 865, 13, 51064], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 366, "seek": 123614, "start": 1251.14, "end": 1253.14, "text": " What kind of size socks do you have?", "tokens": [51114, 708, 733, 295, 2744, 17564, 360, 291, 362, 30, 51214], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 367, "seek": 123614, "start": 1253.14, "end": 1254.14, "text": " Large.", "tokens": [51214, 33092, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 368, "seek": 123614, "start": 1254.14, "end": 1255.14, "text": " Sorry?", "tokens": [51264, 4919, 30, 51314], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 369, "seek": 123614, "start": 1255.14, "end": 1256.14, "text": " Large.", "tokens": [51314, 33092, 13, 51364], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 370, "seek": 123614, "start": 1256.14, "end": 1257.14, "text": " Large.", "tokens": [51364, 33092, 13, 51414], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 371, "seek": 123614, "start": 1257.14, "end": 1259.14, "text": " It thinks too far, just come get them later.", "tokens": [51414, 467, 7309, 886, 1400, 11, 445, 808, 483, 552, 1780, 13, 51514], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 372, "seek": 123614, "start": 1259.14, "end": 1260.14, "text": " I will put them aside for you.", "tokens": [51514, 286, 486, 829, 552, 7359, 337, 291, 13, 51564], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 373, "seek": 123614, "start": 1260.14, "end": 1261.14, "text": " What's your size?", "tokens": [51564, 708, 311, 428, 2744, 30, 51614], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 374, "seek": 123614, "start": 1261.14, "end": 1262.14, "text": " Small.", "tokens": [51614, 15287, 13, 51664], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 375, "seek": 123614, "start": 1262.14, "end": 1263.14, "text": " Small.", "tokens": [51664, 15287, 13, 51714], "temperature": 0.0, "avg_logprob": -0.23263854667788647, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.15168780088424683}, {"id": 376, "seek": 126614, "start": 1266.14, "end": 1267.14, "text": " Ah, damn it.", "tokens": [50364, 2438, 11, 8151, 309, 13, 50414], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 377, "seek": 126614, "start": 1267.14, "end": 1269.14, "text": " I'm not good at throwing.", "tokens": [50414, 286, 478, 406, 665, 412, 10238, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 378, "seek": 126614, "start": 1269.14, "end": 1274.14, "text": " But yeah, so the mutation score that you compute, if you choose to run other mutants,", "tokens": [50514, 583, 1338, 11, 370, 264, 27960, 6175, 300, 291, 14722, 11, 498, 291, 2826, 281, 1190, 661, 5839, 1719, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 379, "seek": 126614, "start": 1274.14, "end": 1276.14, "text": " the mutation score might not be comparable.", "tokens": [50764, 264, 27960, 6175, 1062, 406, 312, 25323, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 380, "seek": 126614, "start": 1276.14, "end": 1278.14, "text": " So you really need to take care of that.", "tokens": [50864, 407, 291, 534, 643, 281, 747, 1127, 295, 300, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 381, "seek": 126614, "start": 1278.14, "end": 1281.14, "text": " And the tool that my colleague actually created,", "tokens": [50964, 400, 264, 2290, 300, 452, 13532, 767, 2942, 11, 51114], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 382, "seek": 126614, "start": 1281.14, "end": 1286.14, "text": " analyzes a code base so that you can do this actually for a specific project.", "tokens": [51114, 6459, 12214, 257, 3089, 3096, 370, 300, 291, 393, 360, 341, 767, 337, 257, 2685, 1716, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 383, "seek": 126614, "start": 1286.14, "end": 1292.14, "text": " It analyzes a code base and it analyzes the test and it's trying to find a nice balance", "tokens": [51364, 467, 6459, 12214, 257, 3089, 3096, 293, 309, 6459, 12214, 264, 1500, 293, 309, 311, 1382, 281, 915, 257, 1481, 4772, 51664], "temperature": 0.0, "avg_logprob": -0.14842715056046196, "compression_ratio": 1.781512605042017, "no_speech_prob": 0.027409585192799568}, {"id": 384, "seek": 129214, "start": 1292.14, "end": 1297.14, "text": " between accuracy and the number of test executions that you need to do.", "tokens": [50364, 1296, 14170, 293, 264, 1230, 295, 1500, 4454, 3666, 300, 291, 643, 281, 360, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 385, "seek": 129214, "start": 1297.14, "end": 1301.14, "text": " So it tries to see if there are some mutants that we can exclude", "tokens": [50614, 407, 309, 9898, 281, 536, 498, 456, 366, 512, 5839, 1719, 300, 321, 393, 33536, 50814], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 386, "seek": 129214, "start": 1301.14, "end": 1303.14, "text": " that will gain a lot of performance.", "tokens": [50814, 300, 486, 6052, 257, 688, 295, 3389, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 387, "seek": 129214, "start": 1303.14, "end": 1306.14, "text": " So it speeds it up massively, but doesn't reduce a lot in accuracy.", "tokens": [50914, 407, 309, 16411, 309, 493, 29379, 11, 457, 1177, 380, 5407, 257, 688, 294, 14170, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 388, "seek": 129214, "start": 1306.14, "end": 1308.14, "text": " So that's really nice.", "tokens": [51064, 407, 300, 311, 534, 1481, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 389, "seek": 129214, "start": 1309.14, "end": 1313.14, "text": " And you can actually find his thesis online.", "tokens": [51214, 400, 291, 393, 767, 915, 702, 22288, 2950, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 390, "seek": 129214, "start": 1313.14, "end": 1319.14, "text": " So if you go to the FOSDAM page for this talk, you can have a link there as well.", "tokens": [51414, 407, 498, 291, 352, 281, 264, 479, 4367, 35, 2865, 3028, 337, 341, 751, 11, 291, 393, 362, 257, 2113, 456, 382, 731, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10658882736066065, "compression_ratio": 1.6359832635983265, "no_speech_prob": 0.04141642153263092}, {"id": 391, "seek": 131914, "start": 1319.14, "end": 1323.14, "text": " And I'm very hard to press actually, so there is not even documentation for that", "tokens": [50364, 400, 286, 478, 588, 1152, 281, 1886, 767, 11, 370, 456, 307, 406, 754, 14333, 337, 300, 50564], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 392, "seek": 131914, "start": 1323.14, "end": 1325.14, "text": " and it's not even merged.", "tokens": [50564, 293, 309, 311, 406, 754, 36427, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 393, "seek": 131914, "start": 1325.14, "end": 1328.14, "text": " It's project Xavier and that is actually implementing that idea", "tokens": [50664, 467, 311, 1716, 44653, 293, 300, 307, 767, 18114, 300, 1558, 50814], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 394, "seek": 131914, "start": 1328.14, "end": 1333.14, "text": " because it was very theoretical, actually implementing that idea in Striker for JavaScript.", "tokens": [50814, 570, 309, 390, 588, 20864, 11, 767, 18114, 300, 1558, 294, 20390, 5767, 337, 15778, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 395, "seek": 131914, "start": 1333.14, "end": 1337.14, "text": " So if you're really interested in how that all works and what decisions they made,", "tokens": [51064, 407, 498, 291, 434, 534, 3102, 294, 577, 300, 439, 1985, 293, 437, 5327, 436, 1027, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 396, "seek": 131914, "start": 1337.14, "end": 1339.14, "text": " I honestly don't know yet myself.", "tokens": [51264, 286, 6095, 500, 380, 458, 1939, 2059, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 397, "seek": 131914, "start": 1339.14, "end": 1341.14, "text": " Go look at the request.", "tokens": [51364, 1037, 574, 412, 264, 5308, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 398, "seek": 131914, "start": 1342.14, "end": 1344.14, "text": " And it's also a very cool example.", "tokens": [51514, 400, 309, 311, 611, 257, 588, 1627, 1365, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1683692049097132, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.008752652443945408}, {"id": 399, "seek": 134914, "start": 1349.14, "end": 1352.14, "text": " Mike is dead. Oh, it's back again.", "tokens": [50364, 6602, 307, 3116, 13, 876, 11, 309, 311, 646, 797, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 400, "seek": 134914, "start": 1352.14, "end": 1357.14, "text": " We're a project group from a university, in this case the University of Twente,", "tokens": [50514, 492, 434, 257, 1716, 1594, 490, 257, 5454, 11, 294, 341, 1389, 264, 3535, 295, 2574, 1576, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 401, "seek": 134914, "start": 1357.14, "end": 1362.14, "text": " contributed to Striker in that way and they actually built this.", "tokens": [50764, 18434, 281, 20390, 5767, 294, 300, 636, 293, 436, 767, 3094, 341, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 402, "seek": 134914, "start": 1365.14, "end": 1368.14, "text": " Yeah, documentation as I said, still to follow.", "tokens": [51164, 865, 11, 14333, 382, 286, 848, 11, 920, 281, 1524, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 403, "seek": 134914, "start": 1369.14, "end": 1373.14, "text": " And this is also a very new thing that also a student is currently working on", "tokens": [51364, 400, 341, 307, 611, 257, 588, 777, 551, 300, 611, 257, 3107, 307, 4362, 1364, 322, 51564], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 404, "seek": 134914, "start": 1373.14, "end": 1378.14, "text": " is to do more analysis on static analysis on the code", "tokens": [51564, 307, 281, 360, 544, 5215, 322, 13437, 5215, 322, 264, 3089, 51814], "temperature": 0.0, "avg_logprob": -0.1806560069956678, "compression_ratio": 1.5341880341880343, "no_speech_prob": 0.010093392804265022}, {"id": 405, "seek": 137814, "start": 1378.14, "end": 1384.14, "text": " to figure out if we can run in one run of test cases, if we can analyze multiple mutants.", "tokens": [50364, 281, 2573, 484, 498, 321, 393, 1190, 294, 472, 1190, 295, 1500, 3331, 11, 498, 321, 393, 12477, 3866, 5839, 1719, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 406, "seek": 137814, "start": 1384.14, "end": 1390.14, "text": " But in order to do that, we actually need to make sure that these mutants do not influence each other.", "tokens": [50664, 583, 294, 1668, 281, 360, 300, 11, 321, 767, 643, 281, 652, 988, 300, 613, 5839, 1719, 360, 406, 6503, 1184, 661, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 407, "seek": 137814, "start": 1390.14, "end": 1394.14, "text": " So this only works if you know for sure that they don't cancel these order out", "tokens": [50964, 407, 341, 787, 1985, 498, 291, 458, 337, 988, 300, 436, 500, 380, 10373, 613, 1668, 484, 51164], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 408, "seek": 137814, "start": 1394.14, "end": 1399.14, "text": " or if you can still, given that the test fields can say with confidence which mutant it was.", "tokens": [51164, 420, 498, 291, 393, 920, 11, 2212, 300, 264, 1500, 7909, 393, 584, 365, 6687, 597, 47198, 309, 390, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 409, "seek": 137814, "start": 1399.14, "end": 1402.14, "text": " So this is really, really complicated.", "tokens": [51414, 407, 341, 307, 534, 11, 534, 6179, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 410, "seek": 137814, "start": 1402.14, "end": 1407.14, "text": " Again, I'm not entirely sure on this progress yet, but question.", "tokens": [51564, 3764, 11, 286, 478, 406, 7696, 988, 322, 341, 4205, 1939, 11, 457, 1168, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1060574014308089, "compression_ratio": 1.752808988764045, "no_speech_prob": 0.014005303382873535}, {"id": 411, "seek": 140814, "start": 1408.14, "end": 1414.14, "text": " So this is sort of static data for more complicated.", "tokens": [50364, 407, 341, 307, 1333, 295, 13437, 1412, 337, 544, 6179, 13, 50664], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 412, "seek": 140814, "start": 1415.14, "end": 1419.14, "text": " Yeah, so the question is whether modularizing your application would help.", "tokens": [50714, 865, 11, 370, 264, 1168, 307, 1968, 31111, 3319, 428, 3861, 576, 854, 13, 50914], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 413, "seek": 140814, "start": 1419.14, "end": 1427.14, "text": " And it would help because if your modules are smaller, then the test runs are also smaller.", "tokens": [50914, 400, 309, 576, 854, 570, 498, 428, 16679, 366, 4356, 11, 550, 264, 1500, 6676, 366, 611, 4356, 13, 51314], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 414, "seek": 140814, "start": 1427.14, "end": 1429.14, "text": " They would take less time.", "tokens": [51314, 814, 576, 747, 1570, 565, 13, 51414], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 415, "seek": 140814, "start": 1429.14, "end": 1434.14, "text": " But it only works if a normal boot rest for you, normal change that you want to do,", "tokens": [51414, 583, 309, 787, 1985, 498, 257, 2710, 11450, 1472, 337, 291, 11, 2710, 1319, 300, 291, 528, 281, 360, 11, 51664], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 416, "seek": 140814, "start": 1434.14, "end": 1436.14, "text": " if that's only contained to one module or two modules.", "tokens": [51664, 498, 300, 311, 787, 16212, 281, 472, 10088, 420, 732, 16679, 13, 51764], "temperature": 0.0, "avg_logprob": -0.32602034012476605, "compression_ratio": 1.673913043478261, "no_speech_prob": 0.005248632747679949}, {"id": 417, "seek": 143614, "start": 1436.14, "end": 1440.14, "text": " But if you split your code up instead of changing all modules, then it doesn't help.", "tokens": [50364, 583, 498, 291, 7472, 428, 3089, 493, 2602, 295, 4473, 439, 16679, 11, 550, 309, 1177, 380, 854, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 418, "seek": 143614, "start": 1440.14, "end": 1441.14, "text": " So it might help.", "tokens": [50564, 407, 309, 1062, 854, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 419, "seek": 143614, "start": 1441.14, "end": 1445.14, "text": " But that's also with, like, in general, I want to make my CI pipeline quicker,", "tokens": [50614, 583, 300, 311, 611, 365, 11, 411, 11, 294, 2674, 11, 286, 528, 281, 652, 452, 37777, 15517, 16255, 11, 50814], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 420, "seek": 143614, "start": 1445.14, "end": 1449.14, "text": " just make more repos or build less modules.", "tokens": [50814, 445, 652, 544, 1085, 329, 420, 1322, 1570, 16679, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 421, "seek": 143614, "start": 1449.14, "end": 1451.14, "text": " So yeah, that would definitely work.", "tokens": [51014, 407, 1338, 11, 300, 576, 2138, 589, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 422, "seek": 143614, "start": 1451.14, "end": 1454.14, "text": " Come grab a pair of socks later.", "tokens": [51114, 2492, 4444, 257, 6119, 295, 17564, 1780, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 423, "seek": 143614, "start": 1457.14, "end": 1461.14, "text": " And now it really is time to also start testing your tests.", "tokens": [51414, 400, 586, 309, 534, 307, 565, 281, 611, 722, 4997, 428, 6921, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11620953107121015, "compression_ratio": 1.5301724137931034, "no_speech_prob": 0.004141616635024548}, {"id": 424, "seek": 146114, "start": 1461.14, "end": 1468.14, "text": " So if you're not using mutation testing in your products already, it's really good now.", "tokens": [50364, 407, 498, 291, 434, 406, 1228, 27960, 4997, 294, 428, 3383, 1217, 11, 309, 311, 534, 665, 586, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 425, "seek": 146114, "start": 1468.14, "end": 1470.14, "text": " We can actually use it.", "tokens": [50714, 492, 393, 767, 764, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 426, "seek": 146114, "start": 1470.14, "end": 1473.14, "text": " There's been a lot of progress in 45 years.", "tokens": [50814, 821, 311, 668, 257, 688, 295, 4205, 294, 6905, 924, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 427, "seek": 146114, "start": 1473.14, "end": 1475.14, "text": " We have better hardware.", "tokens": [50964, 492, 362, 1101, 8837, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 428, "seek": 146114, "start": 1475.14, "end": 1476.14, "text": " We have process improvements.", "tokens": [51064, 492, 362, 1399, 13797, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 429, "seek": 146114, "start": 1476.14, "end": 1483.14, "text": " And actually, there's a lot of research going on still to make it actually faster every time.", "tokens": [51114, 400, 767, 11, 456, 311, 257, 688, 295, 2132, 516, 322, 920, 281, 652, 309, 767, 4663, 633, 565, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 430, "seek": 146114, "start": 1483.14, "end": 1485.14, "text": " We also have production ready tooling.", "tokens": [51464, 492, 611, 362, 4265, 1919, 46593, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 431, "seek": 146114, "start": 1485.14, "end": 1487.14, "text": " There are many great libraries out there.", "tokens": [51564, 821, 366, 867, 869, 15148, 484, 456, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 432, "seek": 146114, "start": 1487.14, "end": 1489.14, "text": " Some of them are more mature than others.", "tokens": [51664, 2188, 295, 552, 366, 544, 14442, 813, 2357, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07179858901283957, "compression_ratio": 1.721774193548387, "no_speech_prob": 0.006098154932260513}, {"id": 433, "seek": 148914, "start": 1489.14, "end": 1491.14, "text": " Some of them are faster than others.", "tokens": [50364, 2188, 295, 552, 366, 4663, 813, 2357, 13, 50464], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 434, "seek": 148914, "start": 1491.14, "end": 1497.14, "text": " Not everybody integrates the same process improvements, for example.", "tokens": [50464, 1726, 2201, 3572, 1024, 264, 912, 1399, 13797, 11, 337, 1365, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 435, "seek": 148914, "start": 1497.14, "end": 1501.14, "text": " But in general, for most popular programming languages, there is a tool available", "tokens": [50764, 583, 294, 2674, 11, 337, 881, 3743, 9410, 8650, 11, 456, 307, 257, 2290, 2435, 50964], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 436, "seek": 148914, "start": 1501.14, "end": 1504.14, "text": " and you can run it in your pipeline.", "tokens": [50964, 293, 291, 393, 1190, 309, 294, 428, 15517, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 437, "seek": 148914, "start": 1504.14, "end": 1508.14, "text": " And most of these tools just integrate with the build tool that you expect.", "tokens": [51114, 400, 881, 295, 613, 3873, 445, 13365, 365, 264, 1322, 2290, 300, 291, 2066, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 438, "seek": 148914, "start": 1508.14, "end": 1511.14, "text": " They use information that the test runner already gives you.", "tokens": [51314, 814, 764, 1589, 300, 264, 1500, 24376, 1217, 2709, 291, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 439, "seek": 148914, "start": 1511.14, "end": 1513.14, "text": " So that's great.", "tokens": [51464, 407, 300, 311, 869, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 440, "seek": 148914, "start": 1513.14, "end": 1517.14, "text": " Here's an overview of some suggestions.", "tokens": [51564, 1692, 311, 364, 12492, 295, 512, 13396, 13, 51764], "temperature": 0.0, "avg_logprob": -0.07120915214614112, "compression_ratio": 1.6015325670498084, "no_speech_prob": 0.003528697183355689}, {"id": 441, "seek": 151714, "start": 1517.14, "end": 1521.14, "text": " But if you just Google your favorite programming languages plus mutation testing,", "tokens": [50364, 583, 498, 291, 445, 3329, 428, 2954, 9410, 8650, 1804, 27960, 4997, 11, 50564], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 442, "seek": 151714, "start": 1521.14, "end": 1524.14, "text": " I'm sure you'll probably the first result will be the right one.", "tokens": [50564, 286, 478, 988, 291, 603, 1391, 264, 700, 1874, 486, 312, 264, 558, 472, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 443, "seek": 151714, "start": 1524.14, "end": 1527.14, "text": " So in summary, when we're talking about mutation testing,", "tokens": [50714, 407, 294, 12691, 11, 562, 321, 434, 1417, 466, 27960, 4997, 11, 50864], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 444, "seek": 151714, "start": 1527.14, "end": 1530.14, "text": " we're really talking about testing your tests,", "tokens": [50864, 321, 434, 534, 1417, 466, 4997, 428, 6921, 11, 51014], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 445, "seek": 151714, "start": 1530.14, "end": 1534.14, "text": " making sure that your tests actually expect what you do.", "tokens": [51014, 1455, 988, 300, 428, 6921, 767, 2066, 437, 291, 360, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 446, "seek": 151714, "start": 1534.14, "end": 1537.14, "text": " And something, if there's anything,", "tokens": [51214, 400, 746, 11, 498, 456, 311, 1340, 11, 51364], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 447, "seek": 151714, "start": 1537.14, "end": 1539.14, "text": " only one thing that you take away from this talk,", "tokens": [51364, 787, 472, 551, 300, 291, 747, 1314, 490, 341, 751, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 448, "seek": 151714, "start": 1539.14, "end": 1541.14, "text": " don't rely on code coverage, please,", "tokens": [51464, 500, 380, 10687, 322, 3089, 9645, 11, 1767, 11, 51564], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 449, "seek": 151714, "start": 1541.14, "end": 1544.14, "text": " because it doesn't say anything.", "tokens": [51564, 570, 309, 1177, 380, 584, 1340, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10724145487735146, "compression_ratio": 1.7575757575757576, "no_speech_prob": 0.010263926349580288}, {"id": 450, "seek": 154714, "start": 1547.14, "end": 1550.14, "text": " And a lot of research has been gone into performance improvements.", "tokens": [50364, 400, 257, 688, 295, 2132, 575, 668, 2780, 666, 3389, 13797, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 451, "seek": 154714, "start": 1550.14, "end": 1553.14, "text": " There's lots of research still being done.", "tokens": [50514, 821, 311, 3195, 295, 2132, 920, 885, 1096, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 452, "seek": 154714, "start": 1553.14, "end": 1557.14, "text": " There's still always students coming to us interested in contributing", "tokens": [50664, 821, 311, 920, 1009, 1731, 1348, 281, 505, 3102, 294, 19270, 50864], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 453, "seek": 154714, "start": 1557.14, "end": 1561.14, "text": " to an open source project with research.", "tokens": [50864, 281, 364, 1269, 4009, 1716, 365, 2132, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 454, "seek": 154714, "start": 1561.14, "end": 1564.14, "text": " So there's plenty of open research questions.", "tokens": [51064, 407, 456, 311, 7140, 295, 1269, 2132, 1651, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 455, "seek": 154714, "start": 1564.14, "end": 1566.14, "text": " And it's also applicable now.", "tokens": [51214, 400, 309, 311, 611, 21142, 586, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 456, "seek": 154714, "start": 1566.14, "end": 1569.14, "text": " So if you're maintaining an open source project,", "tokens": [51314, 407, 498, 291, 434, 14916, 364, 1269, 4009, 1716, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 457, "seek": 154714, "start": 1569.14, "end": 1571.14, "text": " at least consider mutation testing,", "tokens": [51464, 412, 1935, 1949, 27960, 4997, 11, 51564], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 458, "seek": 154714, "start": 1571.14, "end": 1574.14, "text": " because especially in open source, where there's many contributors,", "tokens": [51564, 570, 2318, 294, 1269, 4009, 11, 689, 456, 311, 867, 45627, 11, 51714], "temperature": 0.0, "avg_logprob": -0.10048747062683105, "compression_ratio": 1.7817460317460319, "no_speech_prob": 0.005485980771481991}, {"id": 459, "seek": 157414, "start": 1574.14, "end": 1578.14, "text": " there's a really good metric on to get an idea about the quality of the tests", "tokens": [50364, 456, 311, 257, 534, 665, 20678, 322, 281, 483, 364, 1558, 466, 264, 3125, 295, 264, 6921, 50564], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 460, "seek": 157414, "start": 1578.14, "end": 1581.14, "text": " that somebody wrote for our poll request.", "tokens": [50564, 300, 2618, 4114, 337, 527, 6418, 5308, 13, 50714], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 461, "seek": 157414, "start": 1581.14, "end": 1585.14, "text": " If you want to know more of the code implementation details,", "tokens": [50714, 759, 291, 528, 281, 458, 544, 295, 264, 3089, 11420, 4365, 11, 50914], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 462, "seek": 157414, "start": 1585.14, "end": 1588.14, "text": " as I said, my colleague gave a talk yesterday in the JavaScript Dev Room,", "tokens": [50914, 382, 286, 848, 11, 452, 13532, 2729, 257, 751, 5186, 294, 264, 15778, 9096, 19190, 11, 51064], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 463, "seek": 157414, "start": 1588.14, "end": 1593.14, "text": " it's probably online at some point, so you can go check that out.", "tokens": [51064, 309, 311, 1391, 2950, 412, 512, 935, 11, 370, 291, 393, 352, 1520, 300, 484, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 464, "seek": 157414, "start": 1593.14, "end": 1595.14, "text": " And that was my talk, so thank you for listening.", "tokens": [51314, 400, 300, 390, 452, 751, 11, 370, 1309, 291, 337, 4764, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15170629400956004, "compression_ratio": 1.522633744855967, "no_speech_prob": 0.012676755897700787}, {"id": 465, "seek": 159514, "start": 1595.14, "end": 1598.14, "text": " APPLAUSE", "tokens": [50364, 35298, 50514], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 466, "seek": 159514, "start": 1602.14, "end": 1605.14, "text": " Exactly 25 minutes as well, so that went great.", "tokens": [50714, 7587, 3552, 2077, 382, 731, 11, 370, 300, 1437, 869, 13, 50864], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 467, "seek": 159514, "start": 1605.14, "end": 1607.14, "text": " Any questions? Yes?", "tokens": [50864, 2639, 1651, 30, 1079, 30, 50964], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 468, "seek": 159514, "start": 1607.14, "end": 1611.14, "text": " I could determine which expressions do mutate.", "tokens": [50964, 286, 727, 6997, 597, 15277, 360, 5839, 473, 13, 51164], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 469, "seek": 159514, "start": 1611.14, "end": 1612.14, "text": " Sorry?", "tokens": [51164, 4919, 30, 51214], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 470, "seek": 159514, "start": 1612.14, "end": 1615.14, "text": " I can determine which expressions do mutate.", "tokens": [51214, 286, 393, 6997, 597, 15277, 360, 5839, 473, 13, 51364], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 471, "seek": 159514, "start": 1615.14, "end": 1618.14, "text": " OK, the question is how do we determine which expressions do mutate?", "tokens": [51364, 2264, 11, 264, 1168, 307, 577, 360, 321, 6997, 597, 15277, 360, 5839, 473, 30, 51514], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 472, "seek": 159514, "start": 1618.14, "end": 1620.14, "text": " Basically, there's a lookup.", "tokens": [51514, 8537, 11, 456, 311, 257, 574, 1010, 13, 51614], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 473, "seek": 159514, "start": 1620.14, "end": 1622.14, "text": " So it does abstract syntax free analysis,", "tokens": [51614, 407, 309, 775, 12649, 28431, 1737, 5215, 11, 51714], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 474, "seek": 159514, "start": 1622.14, "end": 1624.14, "text": " and it just checks a certain node,", "tokens": [51714, 293, 309, 445, 13834, 257, 1629, 9984, 11, 51814], "temperature": 0.0, "avg_logprob": -0.23077281640500438, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.06657792627811432}, {"id": 475, "seek": 162414, "start": 1624.14, "end": 1628.14, "text": " and there's a lookup table to say, OK, if we have this kind of operation,", "tokens": [50364, 293, 456, 311, 257, 574, 1010, 3199, 281, 584, 11, 2264, 11, 498, 321, 362, 341, 733, 295, 6916, 11, 50564], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 476, "seek": 162414, "start": 1628.14, "end": 1630.14, "text": " these are the options that we can...", "tokens": [50564, 613, 366, 264, 3956, 300, 321, 393, 485, 50664], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 477, "seek": 162414, "start": 1630.14, "end": 1632.14, "text": " These are the mutations that we do.", "tokens": [50664, 1981, 366, 264, 29243, 300, 321, 360, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 478, "seek": 162414, "start": 1632.14, "end": 1634.14, "text": " So there's basically a big mapping file with all the options,", "tokens": [50764, 407, 456, 311, 1936, 257, 955, 18350, 3991, 365, 439, 264, 3956, 11, 50864], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 479, "seek": 162414, "start": 1634.14, "end": 1638.14, "text": " and that is probably not complete for every standard library out there,", "tokens": [50864, 293, 300, 307, 1391, 406, 3566, 337, 633, 3832, 6405, 484, 456, 11, 51064], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 480, "seek": 162414, "start": 1638.14, "end": 1641.14, "text": " but for a lot of the logic, comparisons and stuff like that,", "tokens": [51064, 457, 337, 257, 688, 295, 264, 9952, 11, 33157, 293, 1507, 411, 300, 11, 51214], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 481, "seek": 162414, "start": 1641.14, "end": 1643.14, "text": " you can do it pretty complete.", "tokens": [51214, 291, 393, 360, 309, 1238, 3566, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 482, "seek": 162414, "start": 1643.14, "end": 1645.14, "text": " Yes?", "tokens": [51314, 1079, 30, 51414], "temperature": 0.0, "avg_logprob": -0.13756881975660137, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.016228487715125084}, {"id": 483, "seek": 165414, "start": 1655.14, "end": 1658.14, "text": " I couldn't hear the last part. Can you repeat that, please?", "tokens": [50414, 286, 2809, 380, 1568, 264, 1036, 644, 13, 1664, 291, 7149, 300, 11, 1767, 30, 50564], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 484, "seek": 165414, "start": 1658.14, "end": 1660.14, "text": " What is the way to find the way to test your...", "tokens": [50564, 708, 307, 264, 636, 281, 915, 264, 636, 281, 1500, 428, 485, 50664], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 485, "seek": 165414, "start": 1660.14, "end": 1664.14, "text": " OK, so the question is what is the baseline", "tokens": [50664, 2264, 11, 370, 264, 1168, 307, 437, 307, 264, 20518, 50864], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 486, "seek": 165414, "start": 1664.14, "end": 1666.14, "text": " when you start with mutation testing?", "tokens": [50864, 562, 291, 722, 365, 27960, 4997, 30, 50964], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 487, "seek": 165414, "start": 1666.14, "end": 1668.14, "text": " Right, so if you have a new code base,", "tokens": [50964, 1779, 11, 370, 498, 291, 362, 257, 777, 3089, 3096, 11, 51064], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 488, "seek": 165414, "start": 1668.14, "end": 1671.14, "text": " if you have green fields and you implement mutation testing from the start,", "tokens": [51064, 498, 291, 362, 3092, 7909, 293, 291, 4445, 27960, 4997, 490, 264, 722, 11, 51214], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 489, "seek": 165414, "start": 1671.14, "end": 1675.14, "text": " it's actually relatively easy to get high 90% mutation score.", "tokens": [51214, 309, 311, 767, 7226, 1858, 281, 483, 1090, 4289, 4, 27960, 6175, 13, 51414], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 490, "seek": 165414, "start": 1675.14, "end": 1678.14, "text": " When you have an assisting project, it's usually very hard.", "tokens": [51414, 1133, 291, 362, 364, 40368, 1716, 11, 309, 311, 2673, 588, 1152, 13, 51564], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 491, "seek": 165414, "start": 1678.14, "end": 1682.14, "text": " So actually Striker for JavaScript has a mutation score of around 80%,", "tokens": [51564, 407, 767, 20390, 5767, 337, 15778, 575, 257, 27960, 6175, 295, 926, 4688, 8923, 51764], "temperature": 0.0, "avg_logprob": -0.23038524065830912, "compression_ratio": 1.756183745583039, "no_speech_prob": 0.03890416771173477}, {"id": 492, "seek": 168214, "start": 1682.14, "end": 1684.14, "text": " which is actually pretty good.", "tokens": [50364, 597, 307, 767, 1238, 665, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 493, "seek": 168214, "start": 1684.14, "end": 1686.14, "text": " It's really hard to get very high scores.", "tokens": [50464, 467, 311, 534, 1152, 281, 483, 588, 1090, 13444, 13, 50564], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 494, "seek": 168214, "start": 1686.14, "end": 1688.14, "text": " So it's not very... Not like covered.", "tokens": [50564, 407, 309, 311, 406, 588, 485, 1726, 411, 5343, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 495, "seek": 168214, "start": 1688.14, "end": 1692.14, "text": " If you're anywhere close to 80%, you're actually doing pretty well, I think.", "tokens": [50664, 759, 291, 434, 4992, 1998, 281, 4688, 8923, 291, 434, 767, 884, 1238, 731, 11, 286, 519, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 496, "seek": 168214, "start": 1693.14, "end": 1695.14, "text": " Yes?", "tokens": [50914, 1079, 30, 51014], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 497, "seek": 168214, "start": 1699.14, "end": 1701.14, "text": " Yeah?", "tokens": [51214, 865, 30, 51314], "temperature": 0.0, "avg_logprob": -0.16582515591480693, "compression_ratio": 1.356164383561644, "no_speech_prob": 0.01595396362245083}, {"id": 498, "seek": 171214, "start": 1713.14, "end": 1717.14, "text": " Yeah, so the question is when the purpose of mutation testing", "tokens": [50414, 865, 11, 370, 264, 1168, 307, 562, 264, 4334, 295, 27960, 4997, 50614], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 499, "seek": 171214, "start": 1717.14, "end": 1720.14, "text": " is to make sure your test are good, if you're doing selective mutation,", "tokens": [50614, 307, 281, 652, 988, 428, 1500, 366, 665, 11, 498, 291, 434, 884, 33930, 27960, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 500, "seek": 171214, "start": 1720.14, "end": 1722.14, "text": " how do you know you're not missing something?", "tokens": [50764, 577, 360, 291, 458, 291, 434, 406, 5361, 746, 30, 50864], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 501, "seek": 171214, "start": 1722.14, "end": 1724.14, "text": " Actually, you don't. You might miss stuff.", "tokens": [50864, 5135, 11, 291, 500, 380, 13, 509, 1062, 1713, 1507, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 502, "seek": 171214, "start": 1724.14, "end": 1729.14, "text": " That's the point is because it can take a really long time", "tokens": [50964, 663, 311, 264, 935, 307, 570, 309, 393, 747, 257, 534, 938, 565, 51214], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 503, "seek": 171214, "start": 1729.14, "end": 1731.14, "text": " that you have at least the option like,", "tokens": [51214, 300, 291, 362, 412, 1935, 264, 3614, 411, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 504, "seek": 171214, "start": 1731.14, "end": 1735.14, "text": " OK, I'm OK with 80% accuracy if it's half the time,", "tokens": [51314, 2264, 11, 286, 478, 2264, 365, 4688, 4, 14170, 498, 309, 311, 1922, 264, 565, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 505, "seek": 171214, "start": 1735.14, "end": 1738.14, "text": " because that's for me a good balance for some use cases.", "tokens": [51514, 570, 300, 311, 337, 385, 257, 665, 4772, 337, 512, 764, 3331, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 506, "seek": 171214, "start": 1738.14, "end": 1740.14, "text": " But yeah, you have to accept that you're missing stuff", "tokens": [51664, 583, 1338, 11, 291, 362, 281, 3241, 300, 291, 434, 5361, 1507, 51764], "temperature": 0.0, "avg_logprob": -0.1565729199033795, "compression_ratio": 1.7017543859649122, "no_speech_prob": 0.04150266572833061}, {"id": 507, "seek": 174014, "start": 1740.14, "end": 1742.14, "text": " because you're just not running all the mutants.", "tokens": [50364, 570, 291, 434, 445, 406, 2614, 439, 264, 5839, 1719, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16791662851969402, "compression_ratio": 1.6216216216216217, "no_speech_prob": 0.004775837995111942}, {"id": 508, "seek": 174014, "start": 1755.14, "end": 1759.14, "text": " So the combination of mutation testing and test-driven developments.", "tokens": [51114, 407, 264, 6562, 295, 27960, 4997, 293, 1500, 12, 25456, 20862, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16791662851969402, "compression_ratio": 1.6216216216216217, "no_speech_prob": 0.004775837995111942}, {"id": 509, "seek": 174014, "start": 1759.14, "end": 1761.14, "text": " Well, you have to write your test first then,", "tokens": [51314, 1042, 11, 291, 362, 281, 2464, 428, 1500, 700, 550, 11, 51414], "temperature": 0.0, "avg_logprob": -0.16791662851969402, "compression_ratio": 1.6216216216216217, "no_speech_prob": 0.004775837995111942}, {"id": 510, "seek": 174014, "start": 1761.14, "end": 1763.14, "text": " but you can only mutate once the implementation is there.", "tokens": [51414, 457, 291, 393, 787, 5839, 473, 1564, 264, 11420, 307, 456, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16791662851969402, "compression_ratio": 1.6216216216216217, "no_speech_prob": 0.004775837995111942}, {"id": 511, "seek": 174014, "start": 1763.14, "end": 1767.14, "text": " So once you test that green, you can check whether you actually did a good job", "tokens": [51514, 407, 1564, 291, 1500, 300, 3092, 11, 291, 393, 1520, 1968, 291, 767, 630, 257, 665, 1691, 51714], "temperature": 0.0, "avg_logprob": -0.16791662851969402, "compression_ratio": 1.6216216216216217, "no_speech_prob": 0.004775837995111942}, {"id": 512, "seek": 176714, "start": 1767.14, "end": 1770.14, "text": " before writing your implementation, which is kind of strange, actually.", "tokens": [50364, 949, 3579, 428, 11420, 11, 597, 307, 733, 295, 5861, 11, 767, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 513, "seek": 176714, "start": 1784.14, "end": 1786.14, "text": " Yeah, but that's very nice, actually.", "tokens": [51214, 865, 11, 457, 300, 311, 588, 1481, 11, 767, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 514, "seek": 176714, "start": 1786.14, "end": 1788.14, "text": " If you have to change your testing of changing requirements", "tokens": [51314, 759, 291, 362, 281, 1319, 428, 4997, 295, 4473, 7728, 51414], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 515, "seek": 176714, "start": 1788.14, "end": 1790.14, "text": " and you re-implement part of your code,", "tokens": [51414, 293, 291, 319, 12, 332, 43704, 644, 295, 428, 3089, 11, 51514], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 516, "seek": 176714, "start": 1790.14, "end": 1793.14, "text": " then mutation testing will check whether your test are still complete.", "tokens": [51514, 550, 27960, 4997, 486, 1520, 1968, 428, 1500, 366, 920, 3566, 13, 51664], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 517, "seek": 176714, "start": 1793.14, "end": 1795.14, "text": " So that's actually very good, very nice.", "tokens": [51664, 407, 300, 311, 767, 588, 665, 11, 588, 1481, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14757955074310303, "compression_ratio": 1.671875, "no_speech_prob": 0.015119622461497784}, {"id": 518, "seek": 179514, "start": 1795.14, "end": 1798.14, "text": " Yeah, actually, if you really want to go into that,", "tokens": [50364, 865, 11, 767, 11, 498, 291, 534, 528, 281, 352, 666, 300, 11, 50514], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 519, "seek": 179514, "start": 1798.14, "end": 1801.14, "text": " property-based testing, you're only going to test all possible inputs,", "tokens": [50514, 4707, 12, 6032, 4997, 11, 291, 434, 787, 516, 281, 1500, 439, 1944, 15743, 11, 50664], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 520, "seek": 179514, "start": 1801.14, "end": 1805.14, "text": " even though for sure that is correct, but that's not feasible yet.", "tokens": [50664, 754, 1673, 337, 988, 300, 307, 3006, 11, 457, 300, 311, 406, 26648, 1939, 13, 50864], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 521, "seek": 179514, "start": 1805.14, "end": 1807.14, "text": " Property-based testing is really hard, too.", "tokens": [50864, 48966, 12, 6032, 4997, 307, 534, 1152, 11, 886, 13, 50964], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 522, "seek": 179514, "start": 1808.14, "end": 1810.14, "text": " Do you have time for more questions?", "tokens": [51014, 1144, 291, 362, 565, 337, 544, 1651, 30, 51114], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 523, "seek": 179514, "start": 1812.14, "end": 1813.14, "text": " Four minutes.", "tokens": [51214, 7451, 2077, 13, 51264], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 524, "seek": 179514, "start": 1813.14, "end": 1815.14, "text": " All the time in the world, up front.", "tokens": [51264, 1057, 264, 565, 294, 264, 1002, 11, 493, 1868, 13, 51364], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 525, "seek": 179514, "start": 1815.14, "end": 1818.14, "text": " The question is, from your experience currently,", "tokens": [51364, 440, 1168, 307, 11, 490, 428, 1752, 4362, 11, 51514], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 526, "seek": 179514, "start": 1818.14, "end": 1821.14, "text": " if, for example, you have normal unit tests", "tokens": [51514, 498, 11, 337, 1365, 11, 291, 362, 2710, 4985, 6921, 51664], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 527, "seek": 179514, "start": 1821.14, "end": 1824.14, "text": " and they run, let's say, it's called one minute,", "tokens": [51664, 293, 436, 1190, 11, 718, 311, 584, 11, 309, 311, 1219, 472, 3456, 11, 51814], "temperature": 0.0, "avg_logprob": -0.22505661129027374, "compression_ratio": 1.695970695970696, "no_speech_prob": 0.006852098740637302}, {"id": 528, "seek": 182414, "start": 1824.14, "end": 1828.14, "text": " how many minutes will they be around using the framework?", "tokens": [50364, 577, 867, 2077, 486, 436, 312, 926, 1228, 264, 8388, 30, 50564], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 529, "seek": 182414, "start": 1829.14, "end": 1834.14, "text": " So the question is, if I know how long my unit tests run for,", "tokens": [50614, 407, 264, 1168, 307, 11, 498, 286, 458, 577, 938, 452, 4985, 6921, 1190, 337, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 530, "seek": 182414, "start": 1834.14, "end": 1837.14, "text": " how do I know how long mutation testing will take?", "tokens": [50864, 577, 360, 286, 458, 577, 938, 27960, 4997, 486, 747, 30, 51014], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 531, "seek": 182414, "start": 1837.14, "end": 1839.14, "text": " And there's only one answer.", "tokens": [51014, 400, 456, 311, 787, 472, 1867, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 532, "seek": 182414, "start": 1839.14, "end": 1843.14, "text": " It really depends, because it really depends why your tests take a minute,", "tokens": [51114, 467, 534, 5946, 11, 570, 309, 534, 5946, 983, 428, 6921, 747, 257, 3456, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 533, "seek": 182414, "start": 1843.14, "end": 1846.14, "text": " but it's going to be a lot longer.", "tokens": [51314, 457, 309, 311, 516, 281, 312, 257, 688, 2854, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 534, "seek": 182414, "start": 1846.14, "end": 1850.14, "text": " It's like, it's not going to be four minutes or five minutes.", "tokens": [51464, 467, 311, 411, 11, 309, 311, 406, 516, 281, 312, 1451, 2077, 420, 1732, 2077, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 535, "seek": 182414, "start": 1850.14, "end": 1852.14, "text": " It's way more than that.", "tokens": [51664, 467, 311, 636, 544, 813, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1343976184054538, "compression_ratio": 1.76, "no_speech_prob": 0.00469919154420495}, {"id": 536, "seek": 185214, "start": 1852.14, "end": 1855.14, "text": " The only way to find it out is to just actually run it,", "tokens": [50364, 440, 787, 636, 281, 915, 309, 484, 307, 281, 445, 767, 1190, 309, 11, 50514], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 537, "seek": 185214, "start": 1855.14, "end": 1858.14, "text": " because the problem is it really depends on how many mutations", "tokens": [50514, 570, 264, 1154, 307, 309, 534, 5946, 322, 577, 867, 29243, 50664], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 538, "seek": 185214, "start": 1858.14, "end": 1860.14, "text": " can be generated for your specific code,", "tokens": [50664, 393, 312, 10833, 337, 428, 2685, 3089, 11, 50764], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 539, "seek": 185214, "start": 1860.14, "end": 1862.14, "text": " because that is what makes it slow.", "tokens": [50764, 570, 300, 307, 437, 1669, 309, 2964, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 540, "seek": 185214, "start": 1862.14, "end": 1865.14, "text": " And because of all these optimizations,", "tokens": [50864, 400, 570, 295, 439, 613, 5028, 14455, 11, 51014], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 541, "seek": 185214, "start": 1865.14, "end": 1868.14, "text": " you cannot really predict how long it will take.", "tokens": [51014, 291, 2644, 534, 6069, 577, 938, 309, 486, 747, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 542, "seek": 185214, "start": 1871.14, "end": 1873.14, "text": " I didn't hear that one.", "tokens": [51314, 286, 994, 380, 1568, 300, 472, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07076996710242295, "compression_ratio": 1.5794871794871794, "no_speech_prob": 0.008660366758704185}, {"id": 543, "seek": 187314, "start": 1873.14, "end": 1877.14, "text": " So the question is, how do we report it?", "tokens": [50364, 407, 264, 1168, 307, 11, 577, 360, 321, 2275, 309, 30, 50564], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 544, "seek": 187314, "start": 1877.14, "end": 1880.14, "text": " And for Striker, and you can go to the talk with my colleague,", "tokens": [50564, 400, 337, 20390, 5767, 11, 293, 291, 393, 352, 281, 264, 751, 365, 452, 13532, 11, 50714], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 545, "seek": 187314, "start": 1880.14, "end": 1883.14, "text": " he went into that in a bit more detail.", "tokens": [50714, 415, 1437, 666, 300, 294, 257, 857, 544, 2607, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 546, "seek": 187314, "start": 1883.14, "end": 1886.14, "text": " We have a standardized adjustment for that.", "tokens": [50864, 492, 362, 257, 31677, 17132, 337, 300, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 547, "seek": 187314, "start": 1897.14, "end": 1899.14, "text": " That's good. Oh, it's a bit.", "tokens": [51564, 663, 311, 665, 13, 876, 11, 309, 311, 257, 857, 13, 51664], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 548, "seek": 187314, "start": 1899.14, "end": 1901.14, "text": " So there's a nice dashboard, but go watch this talk", "tokens": [51664, 407, 456, 311, 257, 1481, 18342, 11, 457, 352, 1159, 341, 751, 51764], "temperature": 0.0, "avg_logprob": -0.3071894761992664, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.08481509983539581}, {"id": 549, "seek": 190114, "start": 1901.14, "end": 1903.14, "text": " and you will know more.", "tokens": [50364, 293, 291, 486, 458, 544, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 550, "seek": 190114, "start": 1905.14, "end": 1907.14, "text": " Up front, yes.", "tokens": [50564, 5858, 1868, 11, 2086, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 551, "seek": 190114, "start": 1907.14, "end": 1909.14, "text": " So you already run one mutation at a time?", "tokens": [50664, 407, 291, 1217, 1190, 472, 27960, 412, 257, 565, 30, 50764], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 552, "seek": 190114, "start": 1909.14, "end": 1911.14, "text": " Yeah, you have to.", "tokens": [50764, 865, 11, 291, 362, 281, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 553, "seek": 190114, "start": 1911.14, "end": 1915.14, "text": " If you want to do more, you have to prove first", "tokens": [50864, 759, 291, 528, 281, 360, 544, 11, 291, 362, 281, 7081, 700, 51064], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 554, "seek": 190114, "start": 1915.14, "end": 1917.14, "text": " that these will not influence each other,", "tokens": [51064, 300, 613, 486, 406, 6503, 1184, 661, 11, 51164], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 555, "seek": 190114, "start": 1917.14, "end": 1919.14, "text": " so that you need to know that if one test fails,", "tokens": [51164, 370, 300, 291, 643, 281, 458, 300, 498, 472, 1500, 18199, 11, 51264], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 556, "seek": 190114, "start": 1919.14, "end": 1921.14, "text": " because of which mutant it is.", "tokens": [51264, 570, 295, 597, 47198, 309, 307, 13, 51364], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 557, "seek": 190114, "start": 1921.14, "end": 1924.14, "text": " With coverage, you can have reached that?", "tokens": [51364, 2022, 9645, 11, 291, 393, 362, 6488, 300, 30, 51514], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 558, "seek": 190114, "start": 1924.14, "end": 1928.14, "text": " No, you really have to do data flow, control flow analysis,", "tokens": [51514, 883, 11, 291, 534, 362, 281, 360, 1412, 3095, 11, 1969, 3095, 5215, 11, 51714], "temperature": 0.0, "avg_logprob": -0.16600992013742258, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.017377668991684914}, {"id": 559, "seek": 192814, "start": 1928.14, "end": 1930.14, "text": " and stuff like that.", "tokens": [50364, 293, 1507, 411, 300, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 560, "seek": 192814, "start": 1930.14, "end": 1932.14, "text": " So that's very, very difficult.", "tokens": [50464, 407, 300, 311, 588, 11, 588, 2252, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 561, "seek": 192814, "start": 1932.14, "end": 1934.14, "text": " But yeah, there's somebody working on it right now.", "tokens": [50564, 583, 1338, 11, 456, 311, 2618, 1364, 322, 309, 558, 586, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 562, "seek": 192814, "start": 1934.14, "end": 1936.14, "text": " So maybe in half a year's time,", "tokens": [50664, 407, 1310, 294, 1922, 257, 1064, 311, 565, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 563, "seek": 192814, "start": 1936.14, "end": 1938.14, "text": " we'll have some more to talk about.", "tokens": [50764, 321, 603, 362, 512, 544, 281, 751, 466, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 564, "seek": 192814, "start": 1938.14, "end": 1941.14, "text": " Yeah, Sci-GridNet already has an implementation for it,", "tokens": [50864, 865, 11, 16942, 12, 38, 8558, 31890, 1217, 575, 364, 11420, 337, 309, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 565, "seek": 192814, "start": 1941.14, "end": 1943.14, "text": " but it's not scientifically proven,", "tokens": [51014, 457, 309, 311, 406, 39719, 12785, 11, 51114], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 566, "seek": 192814, "start": 1943.14, "end": 1945.14, "text": " so we do not know 100% where that's correct,", "tokens": [51114, 370, 321, 360, 406, 458, 2319, 4, 689, 300, 311, 3006, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 567, "seek": 192814, "start": 1945.14, "end": 1947.14, "text": " but at least 95% there.", "tokens": [51214, 457, 412, 1935, 13420, 4, 456, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 568, "seek": 192814, "start": 1947.14, "end": 1952.14, "text": " So if that was the last question,", "tokens": [51314, 407, 498, 300, 390, 264, 1036, 1168, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 569, "seek": 192814, "start": 1952.14, "end": 1954.14, "text": " if there's any more question if you want to talk some stuff,", "tokens": [51564, 498, 456, 311, 604, 544, 1168, 498, 291, 528, 281, 751, 512, 1507, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 570, "seek": 192814, "start": 1954.14, "end": 1956.14, "text": " I'll be outside in the hall.", "tokens": [51664, 286, 603, 312, 2380, 294, 264, 6500, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1852049656051526, "compression_ratio": 1.6035087719298247, "no_speech_prob": 0.018305255100131035}, {"id": 571, "seek": 195614, "start": 1956.14, "end": 1958.14, "text": " And if you ask a question, feel free to come", "tokens": [50364, 400, 498, 291, 1029, 257, 1168, 11, 841, 1737, 281, 808, 50464], "temperature": 0.0, "avg_logprob": -0.15729853766305105, "compression_ratio": 1.099009900990099, "no_speech_prob": 0.012209495529532433}, {"id": 572, "seek": 195614, "start": 1958.14, "end": 1960.14, "text": " grab your socks here up front.", "tokens": [50464, 4444, 428, 17564, 510, 493, 1868, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15729853766305105, "compression_ratio": 1.099009900990099, "no_speech_prob": 0.012209495529532433}, {"id": 573, "seek": 195614, "start": 1960.14, "end": 1962.14, "text": " There's plenty. Thank you.", "tokens": [50564, 821, 311, 7140, 13, 1044, 291, 13, 50664], "temperature": 0.0, "avg_logprob": -0.15729853766305105, "compression_ratio": 1.099009900990099, "no_speech_prob": 0.012209495529532433}, {"id": 574, "seek": 195614, "start": 1962.14, "end": 1964.14, "text": " APPLAUSE", "tokens": [50664, 35298, 50764], "temperature": 0.0, "avg_logprob": -0.15729853766305105, "compression_ratio": 1.099009900990099, "no_speech_prob": 0.012209495529532433}], "language": "en"}