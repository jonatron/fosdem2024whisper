{"text": " Okay. So we welcome Antoine Delpache, if I'm correct. And yeah, Florey Searst. Thank you. So I'm Antoine Delpache. I'm a developer on the Open Refine project. And I'm very happy to be back in this bedroom to tell you, give you a few news about Open Refine. And in particular, I'm going to be focusing on what I'm working on right now, together with Zoe Cooper, who's a designer on the project, to make Open Refine more reproducible. So I will first explain to you what Open Refine is, because I'm not assuming everyone was here four years ago. And if you were, don't worry, there are some differences that you might be able to spot. I'm very keen to know if those differences look good to you. And also, what do I mean with reproducible in this context? So what is Open Refine? It's a data cleaning tool. So you can import tabular data, mostly, in it. And then it lets you do all sorts of cleaning operations on it. Guess what? So let me give you an example. So this is a database of filming locations in Paris. So every time you film something in Paris, you need to register it with the city, and then they make this data set. And one thing I can do here is to say, let's match all of those films with an external database. And we call that reconciliation. So in this example, I'm going to reconcile it with WIC data that we've already heard about earlier today. And because reconciliation is a bit of a tricky process, we have various options to let you configure how we're going to match your data to WIC data so that we just don't only rely on the names, but also on other attributes that we have in this data set. And we then have various tools to help you make that a little bit efficient and let you review the results of the reconciliation manually. So for instance, here I can hover this and get a link to the WIC data item that it could link to. So that's a sample of one type of operation that people do a lot with OpenRefine. You can then manually match things if you want to go through the entire data set yourself. Let me show you something else. Well, first, once you've done this reconciliation, you can pull some data from the target database. In this example, I could, for instance, do something quite simple. Sorry. Let's just add a new column with the URLs of those entities in the database. So that's something that I can do quite quickly. And you get your new column. You could also pull more information from WIC data, identifiers in other databases, things like that. Let me show you another sort of operation you can do in OpenRefine. This is the column with the directors of those films. And I can try to cluster them. So what does it mean? Well, we are going to basically look through all sorts of values in this data set and try to detect whether they might refer to the same entity. And when that's the case, then you often want to normalize those to one consistent spelling. That's very useful, typically, as a first step for reconciliation. So those are samples of the canonical values you could use. So let's say I want to use all of those suggestions and accept them as valid clusters. OK. So those are the sorts of things you can do in OpenRefine. Now, what do I mean by making this tool more reproducible? So imagine you're a researcher working on some data that you've collected. You're cleaning it with OpenRefine as part of your research process. And at the end, you want to publish a paper about what you did and you want to make your research process transparent. So you want your fellow researchers to be able to inspect what you've done in OpenRefine and ideally even reproduce it on a similar version of the data set. So what can we do for now? The best thing we have for this so far is our undo-redu tab. And as you can imagine, it's primarily designed for undoing things that you've done, but it also happens to list all of the operations you've done so far with OpenRefine. So you could try and copy and paste this in your research article as a way of saying, this is what I did. Now, this is not exactly ideal. So we are working on improving basically this part of the tool. And before we get into reproducibility per se, there's already a lot of usability issues with this interface. And that's where it's been very interesting to work with a designer on this project who was also not familiar with the tool before she came on board. And so she was really able to come with a fresh eye and identify things that I really couldn't see anymore because I've been looking at this for so many years already. So for instance, here, it might not be clear to everyone that you can actually click on those previous steps to go back to them. We don't have any undo button in OpenRefine. We only have this weird undo, redo tab where you can't really click on the undo or the redo, like things like this. And so it's been really eye-opening. What else can you not do? Well, say I realized that this match here was wrong and I want to undo just this operation, but I want to keep all of the following ones. There's no good workflow to do that, but it's very often requested. So let me now show you what we can do with those extract and apply buttons here. So I'm going to roll back here. And if I click extract, I get this interface where I can select some operations I'm interested in and then I get some code for them. And this big blob of JSON is something I can copy and share as the representation of those operations. And I can also reapply them later on on this project or another one. Now, the problem with this is that it's very hard to work with this representation. It's very unreadable. And it's also very brittle. So for instance, if the column names of your new data set do not exactly match the column in the original data set, you will have horrible errors and it will be very hard to do anything with those operations. So that's the core of what we're trying to solve, providing a better representation for those operations so that you can understand what they are and also reapply them reliably. So as a summary of the main goals of this project, make the basic undo-redu functionality just more usable. Then make this reproducibility also easier and effective because we want those representations of operations to be reliably applicable. And also adding this advanced undo functionality of undoing not just the latest operation, or maybe just modifying the parameters of an earlier operation. So that's the main goals. And what do we have so far? Well, you might have already noticed some differences in this prototype, but let me show you another one. So far I've been working on making open-refined operations aware of which parts of the data set they modify. Because the problem is, if you want to let people undo a deep operation, then you need to be able to detect which following ones can be kept or not, or if they need to be recomputed because the data they were working on has been touched. So now that we have this capability of scoping operations a little bit better, you can, for instance, run reconciliation on multiple columns and that will run concurrently, which is something that wasn't possible before. So you see the reconciliation I started earlier, it's only 7% complete. It's a very slow operation because which data reconciliation is particularly slow. And now I can already start reconcealing the other column. And if you see, we already get some results, although the first one hasn't completed yet. So that's already won win. It's not directly about reproducibility, but I hope this will be work on by users because it should save people a lot of time. And on top of that, we've done some research about how other tools represent pipelines or their undo-redu functionality. So this is a screenshot from Talent, another data cleaning tool that we've been looking at. And in those sorts of data cleaning tools, you design your pipeline explicitly on a canvas. So it's a very different sort of user experience. But we've also been looking at Excel, how they let you track changes, or basic undo-redu functionality in Google Sheets, things like that. So that's been also very interesting in trying to get some sort of user experience that our users are already familiar with. So as you can see, this is all work in progress. This is what I have just here, a prototype. We don't have full answers to all of those questions yet. But we're working on this, and we are very keen to hear from you. So if you're interested in those topics and would be happy to test out some ideas with us, we're running some user testing sessions. So you're very welcome to sign up for those. And that's basically the state of the project. And I also have some open refined stickers if you happen to organize some training events in various places. So do also get back to me if you want some. Thank you. Thank you. We can maybe take one question. Thank you for the presentation. So it's an interesting piece of software. But what exactly is the target audience? Because I mean at some point, if you have the data rendering script, it makes the job. I mean, to not get me wrong, it's interesting. But just to know who exactly you are targeting. So the question is, what is the target audience of open refined? So it's a broad range of communities. I would say it's generally suited for tasks where you can't really just write a script upfront, which will do your keening. And it's not really about whether you like programming or not. It's just some tasks where you need to be looking at the data while you're doing the cleaning. As you saw reconciliation, it's a messy thing. You can't really just come up with the parameters and make the matching. You need to be looking at the data. Same for clustering. So it's a mixture of interactive data cleaning and a little bit more automation that you would have in Excel. So basically here the point is the point is the point click aspect for the operations. So the real point is the point click aspect for the user. Let's thank Antonina again.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.6, "text": " Okay. So we welcome Antoine Delpache, if I'm correct.", "tokens": [50364, 1033, 13, 407, 321, 2928, 5130, 44454, 5831, 79, 6000, 11, 498, 286, 478, 3006, 13, 51044], "temperature": 0.0, "avg_logprob": -0.5167630848131681, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.134858176112175}, {"id": 1, "seek": 0, "start": 13.6, "end": 16.6, "text": " And yeah, Florey Searst.", "tokens": [51044, 400, 1338, 11, 3235, 418, 88, 1100, 289, 372, 13, 51194], "temperature": 0.0, "avg_logprob": -0.5167630848131681, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.134858176112175}, {"id": 2, "seek": 0, "start": 16.6, "end": 20.72, "text": " Thank you. So I'm Antoine Delpache.", "tokens": [51194, 1044, 291, 13, 407, 286, 478, 5130, 44454, 5831, 79, 6000, 13, 51400], "temperature": 0.0, "avg_logprob": -0.5167630848131681, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.134858176112175}, {"id": 3, "seek": 0, "start": 20.72, "end": 23.96, "text": " I'm a developer on the Open Refine project.", "tokens": [51400, 286, 478, 257, 10754, 322, 264, 7238, 16957, 533, 1716, 13, 51562], "temperature": 0.0, "avg_logprob": -0.5167630848131681, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.134858176112175}, {"id": 4, "seek": 0, "start": 23.96, "end": 28.0, "text": " And I'm very happy to be back in this bedroom to tell you,", "tokens": [51562, 400, 286, 478, 588, 2055, 281, 312, 646, 294, 341, 11211, 281, 980, 291, 11, 51764], "temperature": 0.0, "avg_logprob": -0.5167630848131681, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.134858176112175}, {"id": 5, "seek": 2800, "start": 28.0, "end": 30.32, "text": " give you a few news about Open Refine.", "tokens": [50364, 976, 291, 257, 1326, 2583, 466, 7238, 16957, 533, 13, 50480], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 6, "seek": 2800, "start": 30.32, "end": 34.96, "text": " And in particular, I'm going to be focusing on what I'm working on right now,", "tokens": [50480, 400, 294, 1729, 11, 286, 478, 516, 281, 312, 8416, 322, 437, 286, 478, 1364, 322, 558, 586, 11, 50712], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 7, "seek": 2800, "start": 34.96, "end": 38.44, "text": " together with Zoe Cooper, who's a designer on the project,", "tokens": [50712, 1214, 365, 38234, 20355, 11, 567, 311, 257, 11795, 322, 264, 1716, 11, 50886], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 8, "seek": 2800, "start": 38.44, "end": 41.8, "text": " to make Open Refine more reproducible.", "tokens": [50886, 281, 652, 7238, 16957, 533, 544, 11408, 32128, 13, 51054], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 9, "seek": 2800, "start": 41.8, "end": 45.04, "text": " So I will first explain to you what Open Refine is,", "tokens": [51054, 407, 286, 486, 700, 2903, 281, 291, 437, 7238, 16957, 533, 307, 11, 51216], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 10, "seek": 2800, "start": 45.04, "end": 49.120000000000005, "text": " because I'm not assuming everyone was here four years ago.", "tokens": [51216, 570, 286, 478, 406, 11926, 1518, 390, 510, 1451, 924, 2057, 13, 51420], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 11, "seek": 2800, "start": 49.120000000000005, "end": 52.36, "text": " And if you were, don't worry, there are some differences", "tokens": [51420, 400, 498, 291, 645, 11, 500, 380, 3292, 11, 456, 366, 512, 7300, 51582], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 12, "seek": 2800, "start": 52.36, "end": 53.64, "text": " that you might be able to spot.", "tokens": [51582, 300, 291, 1062, 312, 1075, 281, 4008, 13, 51646], "temperature": 0.0, "avg_logprob": -0.16237423108971638, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.3863869309425354}, {"id": 13, "seek": 5364, "start": 53.64, "end": 58.0, "text": " I'm very keen to know if those differences look good to you.", "tokens": [50364, 286, 478, 588, 20297, 281, 458, 498, 729, 7300, 574, 665, 281, 291, 13, 50582], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 14, "seek": 5364, "start": 58.0, "end": 64.12, "text": " And also, what do I mean with reproducible in this context?", "tokens": [50582, 400, 611, 11, 437, 360, 286, 914, 365, 11408, 32128, 294, 341, 4319, 30, 50888], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 15, "seek": 5364, "start": 64.12, "end": 66.56, "text": " So what is Open Refine?", "tokens": [50888, 407, 437, 307, 7238, 16957, 533, 30, 51010], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 16, "seek": 5364, "start": 66.56, "end": 68.92, "text": " It's a data cleaning tool.", "tokens": [51010, 467, 311, 257, 1412, 8924, 2290, 13, 51128], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 17, "seek": 5364, "start": 68.92, "end": 73.16, "text": " So you can import tabular data, mostly, in it.", "tokens": [51128, 407, 291, 393, 974, 4421, 1040, 1412, 11, 5240, 11, 294, 309, 13, 51340], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 18, "seek": 5364, "start": 73.16, "end": 77.08, "text": " And then it lets you do all sorts of cleaning operations on it.", "tokens": [51340, 400, 550, 309, 6653, 291, 360, 439, 7527, 295, 8924, 7705, 322, 309, 13, 51536], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 19, "seek": 5364, "start": 77.08, "end": 78.04, "text": " Guess what?", "tokens": [51536, 17795, 437, 30, 51584], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 20, "seek": 5364, "start": 78.04, "end": 80.32, "text": " So let me give you an example.", "tokens": [51584, 407, 718, 385, 976, 291, 364, 1365, 13, 51698], "temperature": 0.0, "avg_logprob": -0.14244464952118543, "compression_ratio": 1.5046296296296295, "no_speech_prob": 0.0047882976941764355}, {"id": 21, "seek": 8032, "start": 80.36, "end": 83.75999999999999, "text": " So this is a database of filming locations in Paris.", "tokens": [50366, 407, 341, 307, 257, 8149, 295, 8869, 9253, 294, 8380, 13, 50536], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 22, "seek": 8032, "start": 83.75999999999999, "end": 85.91999999999999, "text": " So every time you film something in Paris,", "tokens": [50536, 407, 633, 565, 291, 2007, 746, 294, 8380, 11, 50644], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 23, "seek": 8032, "start": 85.91999999999999, "end": 90.96, "text": " you need to register it with the city, and then they make this data set.", "tokens": [50644, 291, 643, 281, 7280, 309, 365, 264, 2307, 11, 293, 550, 436, 652, 341, 1412, 992, 13, 50896], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 24, "seek": 8032, "start": 90.96, "end": 96.28, "text": " And one thing I can do here is to say, let's match all of those films", "tokens": [50896, 400, 472, 551, 286, 393, 360, 510, 307, 281, 584, 11, 718, 311, 2995, 439, 295, 729, 7796, 51162], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 25, "seek": 8032, "start": 96.28, "end": 98.08, "text": " with an external database.", "tokens": [51162, 365, 364, 8320, 8149, 13, 51252], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 26, "seek": 8032, "start": 98.08, "end": 100.11999999999999, "text": " And we call that reconciliation.", "tokens": [51252, 400, 321, 818, 300, 31281, 13, 51354], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 27, "seek": 8032, "start": 100.11999999999999, "end": 104.67999999999999, "text": " So in this example, I'm going to reconcile it with WIC data", "tokens": [51354, 407, 294, 341, 1365, 11, 286, 478, 516, 281, 41059, 309, 365, 343, 2532, 1412, 51582], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 28, "seek": 8032, "start": 104.67999999999999, "end": 108.24, "text": " that we've already heard about earlier today.", "tokens": [51582, 300, 321, 600, 1217, 2198, 466, 3071, 965, 13, 51760], "temperature": 0.0, "avg_logprob": -0.13510214840924298, "compression_ratio": 1.6356275303643724, "no_speech_prob": 0.008940198458731174}, {"id": 29, "seek": 10824, "start": 108.24, "end": 114.0, "text": " And because reconciliation is a bit of a tricky process,", "tokens": [50364, 400, 570, 31281, 307, 257, 857, 295, 257, 12414, 1399, 11, 50652], "temperature": 0.0, "avg_logprob": -0.13948797892375164, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.00035064597614109516}, {"id": 30, "seek": 10824, "start": 114.0, "end": 118.36, "text": " we have various options to let you configure how we're going", "tokens": [50652, 321, 362, 3683, 3956, 281, 718, 291, 22162, 577, 321, 434, 516, 50870], "temperature": 0.0, "avg_logprob": -0.13948797892375164, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.00035064597614109516}, {"id": 31, "seek": 10824, "start": 118.36, "end": 123.91999999999999, "text": " to match your data to WIC data so that we just don't only rely on the names,", "tokens": [50870, 281, 2995, 428, 1412, 281, 343, 2532, 1412, 370, 300, 321, 445, 500, 380, 787, 10687, 322, 264, 5288, 11, 51148], "temperature": 0.0, "avg_logprob": -0.13948797892375164, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.00035064597614109516}, {"id": 32, "seek": 10824, "start": 123.91999999999999, "end": 129.28, "text": " but also on other attributes that we have in this data set.", "tokens": [51148, 457, 611, 322, 661, 17212, 300, 321, 362, 294, 341, 1412, 992, 13, 51416], "temperature": 0.0, "avg_logprob": -0.13948797892375164, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.00035064597614109516}, {"id": 33, "seek": 10824, "start": 129.28, "end": 135.48, "text": " And we then have various tools to help you make that a little bit efficient", "tokens": [51416, 400, 321, 550, 362, 3683, 3873, 281, 854, 291, 652, 300, 257, 707, 857, 7148, 51726], "temperature": 0.0, "avg_logprob": -0.13948797892375164, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.00035064597614109516}, {"id": 34, "seek": 13548, "start": 135.48, "end": 141.04, "text": " and let you review the results of the reconciliation manually.", "tokens": [50364, 293, 718, 291, 3131, 264, 3542, 295, 264, 31281, 16945, 13, 50642], "temperature": 0.0, "avg_logprob": -0.17444631327753482, "compression_ratio": 1.4578313253012047, "no_speech_prob": 0.002211889950558543}, {"id": 35, "seek": 13548, "start": 141.04, "end": 150.83999999999997, "text": " So for instance, here I can hover this and get a link to the WIC data item", "tokens": [50642, 407, 337, 5197, 11, 510, 286, 393, 20076, 341, 293, 483, 257, 2113, 281, 264, 343, 2532, 1412, 3174, 51132], "temperature": 0.0, "avg_logprob": -0.17444631327753482, "compression_ratio": 1.4578313253012047, "no_speech_prob": 0.002211889950558543}, {"id": 36, "seek": 13548, "start": 150.83999999999997, "end": 155.28, "text": " that it could link to.", "tokens": [51132, 300, 309, 727, 2113, 281, 13, 51354], "temperature": 0.0, "avg_logprob": -0.17444631327753482, "compression_ratio": 1.4578313253012047, "no_speech_prob": 0.002211889950558543}, {"id": 37, "seek": 13548, "start": 155.28, "end": 160.2, "text": " So that's a sample of one type of operation that people do a lot with", "tokens": [51354, 407, 300, 311, 257, 6889, 295, 472, 2010, 295, 6916, 300, 561, 360, 257, 688, 365, 51600], "temperature": 0.0, "avg_logprob": -0.17444631327753482, "compression_ratio": 1.4578313253012047, "no_speech_prob": 0.002211889950558543}, {"id": 38, "seek": 13548, "start": 160.2, "end": 162.2, "text": " OpenRefine.", "tokens": [51600, 7238, 49, 5666, 533, 13, 51700], "temperature": 0.0, "avg_logprob": -0.17444631327753482, "compression_ratio": 1.4578313253012047, "no_speech_prob": 0.002211889950558543}, {"id": 39, "seek": 16220, "start": 162.2, "end": 166.2, "text": " You can then manually match things if you want to go through the entire", "tokens": [50364, 509, 393, 550, 16945, 2995, 721, 498, 291, 528, 281, 352, 807, 264, 2302, 50564], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 40, "seek": 16220, "start": 166.2, "end": 169.23999999999998, "text": " data set yourself.", "tokens": [50564, 1412, 992, 1803, 13, 50716], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 41, "seek": 16220, "start": 169.23999999999998, "end": 171.67999999999998, "text": " Let me show you something else.", "tokens": [50716, 961, 385, 855, 291, 746, 1646, 13, 50838], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 42, "seek": 16220, "start": 171.67999999999998, "end": 174.23999999999998, "text": " Well, first, once you've done this reconciliation,", "tokens": [50838, 1042, 11, 700, 11, 1564, 291, 600, 1096, 341, 31281, 11, 50966], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 43, "seek": 16220, "start": 174.23999999999998, "end": 178.28, "text": " you can pull some data from the target database.", "tokens": [50966, 291, 393, 2235, 512, 1412, 490, 264, 3779, 8149, 13, 51168], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 44, "seek": 16220, "start": 178.28, "end": 183.88, "text": " In this example, I could, for instance, do something quite simple.", "tokens": [51168, 682, 341, 1365, 11, 286, 727, 11, 337, 5197, 11, 360, 746, 1596, 2199, 13, 51448], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 45, "seek": 16220, "start": 183.88, "end": 185.28, "text": " Sorry.", "tokens": [51448, 4919, 13, 51518], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 46, "seek": 16220, "start": 185.28, "end": 191.23999999999998, "text": " Let's just add a new column with the URLs of those entities", "tokens": [51518, 961, 311, 445, 909, 257, 777, 7738, 365, 264, 43267, 295, 729, 16667, 51816], "temperature": 0.0, "avg_logprob": -0.15739094957392266, "compression_ratio": 1.5614035087719298, "no_speech_prob": 0.0009685537661425769}, {"id": 47, "seek": 19124, "start": 191.28, "end": 192.68, "text": " in the database.", "tokens": [50366, 294, 264, 8149, 13, 50436], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 48, "seek": 19124, "start": 192.68, "end": 198.48000000000002, "text": " So that's something that I can do quite quickly.", "tokens": [50436, 407, 300, 311, 746, 300, 286, 393, 360, 1596, 2661, 13, 50726], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 49, "seek": 19124, "start": 198.48000000000002, "end": 201.12, "text": " And you get your new column.", "tokens": [50726, 400, 291, 483, 428, 777, 7738, 13, 50858], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 50, "seek": 19124, "start": 201.12, "end": 206.0, "text": " You could also pull more information from WIC data, identifiers in other", "tokens": [50858, 509, 727, 611, 2235, 544, 1589, 490, 343, 2532, 1412, 11, 2473, 23463, 294, 661, 51102], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 51, "seek": 19124, "start": 206.0, "end": 210.60000000000002, "text": " databases, things like that.", "tokens": [51102, 22380, 11, 721, 411, 300, 13, 51332], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 52, "seek": 19124, "start": 210.60000000000002, "end": 214.64000000000001, "text": " Let me show you another sort of operation you can do in OpenRefine.", "tokens": [51332, 961, 385, 855, 291, 1071, 1333, 295, 6916, 291, 393, 360, 294, 7238, 49, 5666, 533, 13, 51534], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 53, "seek": 19124, "start": 214.64000000000001, "end": 218.52, "text": " This is the column with the directors of those films.", "tokens": [51534, 639, 307, 264, 7738, 365, 264, 17307, 295, 729, 7796, 13, 51728], "temperature": 0.0, "avg_logprob": -0.17679645275247508, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.0013036372838541865}, {"id": 54, "seek": 21852, "start": 218.52, "end": 221.52, "text": " And I can try to cluster them.", "tokens": [50364, 400, 286, 393, 853, 281, 13630, 552, 13, 50514], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 55, "seek": 21852, "start": 221.52, "end": 224.04000000000002, "text": " So what does it mean?", "tokens": [50514, 407, 437, 775, 309, 914, 30, 50640], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 56, "seek": 21852, "start": 224.04000000000002, "end": 227.76000000000002, "text": " Well, we are going to basically look through all sorts of values in this", "tokens": [50640, 1042, 11, 321, 366, 516, 281, 1936, 574, 807, 439, 7527, 295, 4190, 294, 341, 50826], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 57, "seek": 21852, "start": 227.76000000000002, "end": 231.88, "text": " data set and try to detect whether they might refer to the same entity.", "tokens": [50826, 1412, 992, 293, 853, 281, 5531, 1968, 436, 1062, 2864, 281, 264, 912, 13977, 13, 51032], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 58, "seek": 21852, "start": 231.88, "end": 236.0, "text": " And when that's the case, then you often want to normalize those to one", "tokens": [51032, 400, 562, 300, 311, 264, 1389, 11, 550, 291, 2049, 528, 281, 2710, 1125, 729, 281, 472, 51238], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 59, "seek": 21852, "start": 236.0, "end": 238.12, "text": " consistent spelling.", "tokens": [51238, 8398, 22254, 13, 51344], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 60, "seek": 21852, "start": 238.12, "end": 243.32000000000002, "text": " That's very useful, typically, as a first step for reconciliation.", "tokens": [51344, 663, 311, 588, 4420, 11, 5850, 11, 382, 257, 700, 1823, 337, 31281, 13, 51604], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 61, "seek": 21852, "start": 243.32000000000002, "end": 248.48000000000002, "text": " So those are samples of the canonical values you could use.", "tokens": [51604, 407, 729, 366, 10938, 295, 264, 46491, 4190, 291, 727, 764, 13, 51862], "temperature": 0.0, "avg_logprob": -0.20804885581687646, "compression_ratio": 1.6162790697674418, "no_speech_prob": 0.0017793140141293406}, {"id": 62, "seek": 24848, "start": 249.44, "end": 254.51999999999998, "text": " So let's say I want to use all of those suggestions and accept them as", "tokens": [50412, 407, 718, 311, 584, 286, 528, 281, 764, 439, 295, 729, 13396, 293, 3241, 552, 382, 50666], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 63, "seek": 24848, "start": 254.51999999999998, "end": 258.03999999999996, "text": " valid clusters.", "tokens": [50666, 7363, 23313, 13, 50842], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 64, "seek": 24848, "start": 258.03999999999996, "end": 258.59999999999997, "text": " OK.", "tokens": [50842, 2264, 13, 50870], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 65, "seek": 24848, "start": 258.59999999999997, "end": 261.44, "text": " So those are the sorts of things you can do in OpenRefine.", "tokens": [50870, 407, 729, 366, 264, 7527, 295, 721, 291, 393, 360, 294, 7238, 49, 5666, 533, 13, 51012], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 66, "seek": 24848, "start": 261.44, "end": 265.44, "text": " Now, what do I mean by making this tool more reproducible?", "tokens": [51012, 823, 11, 437, 360, 286, 914, 538, 1455, 341, 2290, 544, 11408, 32128, 30, 51212], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 67, "seek": 24848, "start": 265.44, "end": 270.48, "text": " So imagine you're a researcher working on some data that you've collected.", "tokens": [51212, 407, 3811, 291, 434, 257, 21751, 1364, 322, 512, 1412, 300, 291, 600, 11087, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 68, "seek": 24848, "start": 270.48, "end": 274.08, "text": " You're cleaning it with OpenRefine as part of your research process.", "tokens": [51464, 509, 434, 8924, 309, 365, 7238, 49, 5666, 533, 382, 644, 295, 428, 2132, 1399, 13, 51644], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 69, "seek": 24848, "start": 274.08, "end": 277.96, "text": " And at the end, you want to publish a paper about what you did and you want", "tokens": [51644, 400, 412, 264, 917, 11, 291, 528, 281, 11374, 257, 3035, 466, 437, 291, 630, 293, 291, 528, 51838], "temperature": 0.0, "avg_logprob": -0.16731760057352357, "compression_ratio": 1.633587786259542, "no_speech_prob": 6.70399094815366e-05}, {"id": 70, "seek": 27796, "start": 277.96, "end": 280.23999999999995, "text": " to make your research process transparent.", "tokens": [50364, 281, 652, 428, 2132, 1399, 12737, 13, 50478], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 71, "seek": 27796, "start": 280.23999999999995, "end": 284.08, "text": " So you want your fellow researchers to be able to inspect what you've done", "tokens": [50478, 407, 291, 528, 428, 7177, 10309, 281, 312, 1075, 281, 15018, 437, 291, 600, 1096, 50670], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 72, "seek": 27796, "start": 284.08, "end": 290.24, "text": " in OpenRefine and ideally even reproduce it on a similar version of the data set.", "tokens": [50670, 294, 7238, 49, 5666, 533, 293, 22915, 754, 29501, 309, 322, 257, 2531, 3037, 295, 264, 1412, 992, 13, 50978], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 73, "seek": 27796, "start": 290.24, "end": 293.76, "text": " So what can we do for now?", "tokens": [50978, 407, 437, 393, 321, 360, 337, 586, 30, 51154], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 74, "seek": 27796, "start": 293.76, "end": 299.67999999999995, "text": " The best thing we have for this so far is our undo-redu tab.", "tokens": [51154, 440, 1151, 551, 321, 362, 337, 341, 370, 1400, 307, 527, 23779, 12, 265, 769, 4421, 13, 51450], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 75, "seek": 27796, "start": 299.67999999999995, "end": 304.56, "text": " And as you can imagine, it's primarily designed for undoing things that you've", "tokens": [51450, 400, 382, 291, 393, 3811, 11, 309, 311, 10029, 4761, 337, 23779, 278, 721, 300, 291, 600, 51694], "temperature": 0.0, "avg_logprob": -0.15432187699780023, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.0011683403281494975}, {"id": 76, "seek": 30456, "start": 304.6, "end": 309.04, "text": " done, but it also happens to list all of the operations you've done so far with", "tokens": [50366, 1096, 11, 457, 309, 611, 2314, 281, 1329, 439, 295, 264, 7705, 291, 600, 1096, 370, 1400, 365, 50588], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 77, "seek": 30456, "start": 309.04, "end": 309.76, "text": " OpenRefine.", "tokens": [50588, 7238, 49, 5666, 533, 13, 50624], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 78, "seek": 30456, "start": 309.76, "end": 314.76, "text": " So you could try and copy and paste this in your research article as a way of", "tokens": [50624, 407, 291, 727, 853, 293, 5055, 293, 9163, 341, 294, 428, 2132, 7222, 382, 257, 636, 295, 50874], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 79, "seek": 30456, "start": 314.76, "end": 317.52, "text": " saying, this is what I did.", "tokens": [50874, 1566, 11, 341, 307, 437, 286, 630, 13, 51012], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 80, "seek": 30456, "start": 317.52, "end": 320.92, "text": " Now, this is not exactly ideal.", "tokens": [51012, 823, 11, 341, 307, 406, 2293, 7157, 13, 51182], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 81, "seek": 30456, "start": 320.92, "end": 328.0, "text": " So we are working on improving basically this part of the tool.", "tokens": [51182, 407, 321, 366, 1364, 322, 11470, 1936, 341, 644, 295, 264, 2290, 13, 51536], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 82, "seek": 30456, "start": 328.0, "end": 333.84000000000003, "text": " And before we get into reproducibility per se,", "tokens": [51536, 400, 949, 321, 483, 666, 11408, 537, 39802, 680, 369, 11, 51828], "temperature": 0.0, "avg_logprob": -0.16733715931574503, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.0068891774863004684}, {"id": 83, "seek": 33384, "start": 333.91999999999996, "end": 337.32, "text": " there's already a lot of usability issues with this interface.", "tokens": [50368, 456, 311, 1217, 257, 688, 295, 46878, 2663, 365, 341, 9226, 13, 50538], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 84, "seek": 33384, "start": 337.32, "end": 342.44, "text": " And that's where it's been very interesting to work with a designer on this", "tokens": [50538, 400, 300, 311, 689, 309, 311, 668, 588, 1880, 281, 589, 365, 257, 11795, 322, 341, 50794], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 85, "seek": 33384, "start": 342.44, "end": 346.84, "text": " project who was also not familiar with the tool before she came on board.", "tokens": [50794, 1716, 567, 390, 611, 406, 4963, 365, 264, 2290, 949, 750, 1361, 322, 3150, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 86, "seek": 33384, "start": 346.84, "end": 352.0, "text": " And so she was really able to come with a fresh eye and identify things that I", "tokens": [51014, 400, 370, 750, 390, 534, 1075, 281, 808, 365, 257, 4451, 3313, 293, 5876, 721, 300, 286, 51272], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 87, "seek": 33384, "start": 352.0, "end": 355.64, "text": " really couldn't see anymore because I've been looking at this for so many years", "tokens": [51272, 534, 2809, 380, 536, 3602, 570, 286, 600, 668, 1237, 412, 341, 337, 370, 867, 924, 51454], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 88, "seek": 33384, "start": 355.64, "end": 356.28, "text": " already.", "tokens": [51454, 1217, 13, 51486], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 89, "seek": 33384, "start": 356.28, "end": 362.03999999999996, "text": " So for instance, here, it might not be clear to everyone that you can actually", "tokens": [51486, 407, 337, 5197, 11, 510, 11, 309, 1062, 406, 312, 1850, 281, 1518, 300, 291, 393, 767, 51774], "temperature": 0.0, "avg_logprob": -0.12951978906854852, "compression_ratio": 1.7, "no_speech_prob": 0.018713684752583504}, {"id": 90, "seek": 36204, "start": 362.04, "end": 365.36, "text": " click on those previous steps to go back to them.", "tokens": [50364, 2052, 322, 729, 3894, 4439, 281, 352, 646, 281, 552, 13, 50530], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 91, "seek": 36204, "start": 365.36, "end": 368.72, "text": " We don't have any undo button in OpenRefine.", "tokens": [50530, 492, 500, 380, 362, 604, 23779, 2960, 294, 7238, 49, 5666, 533, 13, 50698], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 92, "seek": 36204, "start": 368.72, "end": 375.0, "text": " We only have this weird undo, redo tab where you can't really click on the undo", "tokens": [50698, 492, 787, 362, 341, 3657, 23779, 11, 29956, 4421, 689, 291, 393, 380, 534, 2052, 322, 264, 23779, 51012], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 93, "seek": 36204, "start": 375.0, "end": 377.28000000000003, "text": " or the redo, like things like this.", "tokens": [51012, 420, 264, 29956, 11, 411, 721, 411, 341, 13, 51126], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 94, "seek": 36204, "start": 377.28000000000003, "end": 381.32000000000005, "text": " And so it's been really eye-opening.", "tokens": [51126, 400, 370, 309, 311, 668, 534, 3313, 12, 404, 4559, 13, 51328], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 95, "seek": 36204, "start": 381.32000000000005, "end": 383.12, "text": " What else can you not do?", "tokens": [51328, 708, 1646, 393, 291, 406, 360, 30, 51418], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 96, "seek": 36204, "start": 383.12, "end": 389.52000000000004, "text": " Well, say I realized that this match here was wrong and I want to undo just this", "tokens": [51418, 1042, 11, 584, 286, 5334, 300, 341, 2995, 510, 390, 2085, 293, 286, 528, 281, 23779, 445, 341, 51738], "temperature": 0.0, "avg_logprob": -0.1613642683306944, "compression_ratio": 1.6018099547511313, "no_speech_prob": 0.010290084406733513}, {"id": 97, "seek": 38952, "start": 389.52, "end": 393.84, "text": " operation, but I want to keep all of the following ones.", "tokens": [50364, 6916, 11, 457, 286, 528, 281, 1066, 439, 295, 264, 3480, 2306, 13, 50580], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 98, "seek": 38952, "start": 393.84, "end": 399.2, "text": " There's no good workflow to do that, but it's very often requested.", "tokens": [50580, 821, 311, 572, 665, 20993, 281, 360, 300, 11, 457, 309, 311, 588, 2049, 16436, 13, 50848], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 99, "seek": 38952, "start": 399.2, "end": 404.47999999999996, "text": " So let me now show you what we can do with those extract and apply buttons here.", "tokens": [50848, 407, 718, 385, 586, 855, 291, 437, 321, 393, 360, 365, 729, 8947, 293, 3079, 9905, 510, 13, 51112], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 100, "seek": 38952, "start": 404.47999999999996, "end": 407.44, "text": " So I'm going to roll back here.", "tokens": [51112, 407, 286, 478, 516, 281, 3373, 646, 510, 13, 51260], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 101, "seek": 38952, "start": 407.44, "end": 413.71999999999997, "text": " And if I click extract, I get this interface where I can select some operations", "tokens": [51260, 400, 498, 286, 2052, 8947, 11, 286, 483, 341, 9226, 689, 286, 393, 3048, 512, 7705, 51574], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 102, "seek": 38952, "start": 413.71999999999997, "end": 418.32, "text": " I'm interested in and then I get some code for them.", "tokens": [51574, 286, 478, 3102, 294, 293, 550, 286, 483, 512, 3089, 337, 552, 13, 51804], "temperature": 0.0, "avg_logprob": -0.11711953866361367, "compression_ratio": 1.6017316017316017, "no_speech_prob": 0.0019530950812622905}, {"id": 103, "seek": 41832, "start": 418.32, "end": 424.88, "text": " And this big blob of JSON is something I can copy and share as the representation", "tokens": [50364, 400, 341, 955, 46115, 295, 31828, 307, 746, 286, 393, 5055, 293, 2073, 382, 264, 10290, 50692], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 104, "seek": 41832, "start": 424.88, "end": 426.56, "text": " of those operations.", "tokens": [50692, 295, 729, 7705, 13, 50776], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 105, "seek": 41832, "start": 426.56, "end": 435.08, "text": " And I can also reapply them later on on this project or another one.", "tokens": [50776, 400, 286, 393, 611, 35638, 356, 552, 1780, 322, 322, 341, 1716, 420, 1071, 472, 13, 51202], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 106, "seek": 41832, "start": 435.08, "end": 439.52, "text": " Now, the problem with this is that it's very hard to work with this representation.", "tokens": [51202, 823, 11, 264, 1154, 365, 341, 307, 300, 309, 311, 588, 1152, 281, 589, 365, 341, 10290, 13, 51424], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 107, "seek": 41832, "start": 439.52, "end": 441.52, "text": " It's very unreadable.", "tokens": [51424, 467, 311, 588, 517, 2538, 712, 13, 51524], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 108, "seek": 41832, "start": 441.52, "end": 443.44, "text": " And it's also very brittle.", "tokens": [51524, 400, 309, 311, 611, 588, 49325, 13, 51620], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 109, "seek": 41832, "start": 443.44, "end": 448.03999999999996, "text": " So for instance, if the column names of your new data set do not exactly match", "tokens": [51620, 407, 337, 5197, 11, 498, 264, 7738, 5288, 295, 428, 777, 1412, 992, 360, 406, 2293, 2995, 51850], "temperature": 0.0, "avg_logprob": -0.12262149848560296, "compression_ratio": 1.648068669527897, "no_speech_prob": 0.0014771500136703253}, {"id": 110, "seek": 44804, "start": 448.04, "end": 454.24, "text": " the column in the original data set, you will have horrible errors and it will be very", "tokens": [50364, 264, 7738, 294, 264, 3380, 1412, 992, 11, 291, 486, 362, 9263, 13603, 293, 309, 486, 312, 588, 50674], "temperature": 0.0, "avg_logprob": -0.1514977602891519, "compression_ratio": 1.6243386243386244, "no_speech_prob": 0.00321585382334888}, {"id": 111, "seek": 44804, "start": 454.24, "end": 458.12, "text": " hard to do anything with those operations.", "tokens": [50674, 1152, 281, 360, 1340, 365, 729, 7705, 13, 50868], "temperature": 0.0, "avg_logprob": -0.1514977602891519, "compression_ratio": 1.6243386243386244, "no_speech_prob": 0.00321585382334888}, {"id": 112, "seek": 44804, "start": 458.12, "end": 463.56, "text": " So that's the core of what we're trying to solve, providing a better representation", "tokens": [50868, 407, 300, 311, 264, 4965, 295, 437, 321, 434, 1382, 281, 5039, 11, 6530, 257, 1101, 10290, 51140], "temperature": 0.0, "avg_logprob": -0.1514977602891519, "compression_ratio": 1.6243386243386244, "no_speech_prob": 0.00321585382334888}, {"id": 113, "seek": 44804, "start": 463.56, "end": 472.0, "text": " for those operations so that you can understand what they are and also reapply them reliably.", "tokens": [51140, 337, 729, 7705, 370, 300, 291, 393, 1223, 437, 436, 366, 293, 611, 35638, 356, 552, 49927, 13, 51562], "temperature": 0.0, "avg_logprob": -0.1514977602891519, "compression_ratio": 1.6243386243386244, "no_speech_prob": 0.00321585382334888}, {"id": 114, "seek": 47200, "start": 472.0, "end": 480.88, "text": " So as a summary of the main goals of this project, make the basic undo-redu functionality", "tokens": [50364, 407, 382, 257, 12691, 295, 264, 2135, 5493, 295, 341, 1716, 11, 652, 264, 3875, 23779, 12, 265, 769, 14980, 50808], "temperature": 0.0, "avg_logprob": -0.14313958372388566, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.0019195876084268093}, {"id": 115, "seek": 47200, "start": 480.88, "end": 485.0, "text": " just more usable.", "tokens": [50808, 445, 544, 29975, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14313958372388566, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.0019195876084268093}, {"id": 116, "seek": 47200, "start": 485.0, "end": 493.6, "text": " Then make this reproducibility also easier and effective because we want those representations", "tokens": [51014, 1396, 652, 341, 11408, 537, 39802, 611, 3571, 293, 4942, 570, 321, 528, 729, 33358, 51444], "temperature": 0.0, "avg_logprob": -0.14313958372388566, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.0019195876084268093}, {"id": 117, "seek": 47200, "start": 493.6, "end": 497.72, "text": " of operations to be reliably applicable.", "tokens": [51444, 295, 7705, 281, 312, 49927, 21142, 13, 51650], "temperature": 0.0, "avg_logprob": -0.14313958372388566, "compression_ratio": 1.5093167701863355, "no_speech_prob": 0.0019195876084268093}, {"id": 118, "seek": 49772, "start": 497.72, "end": 503.92, "text": " And also adding this advanced undo functionality of undoing not just the latest operation,", "tokens": [50364, 400, 611, 5127, 341, 7339, 23779, 14980, 295, 23779, 278, 406, 445, 264, 6792, 6916, 11, 50674], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 119, "seek": 49772, "start": 503.92, "end": 509.08000000000004, "text": " or maybe just modifying the parameters of an earlier operation.", "tokens": [50674, 420, 1310, 445, 42626, 264, 9834, 295, 364, 3071, 6916, 13, 50932], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 120, "seek": 49772, "start": 509.08000000000004, "end": 511.52000000000004, "text": " So that's the main goals.", "tokens": [50932, 407, 300, 311, 264, 2135, 5493, 13, 51054], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 121, "seek": 49772, "start": 511.52000000000004, "end": 513.64, "text": " And what do we have so far?", "tokens": [51054, 400, 437, 360, 321, 362, 370, 1400, 30, 51160], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 122, "seek": 49772, "start": 513.64, "end": 520.36, "text": " Well, you might have already noticed some differences in this prototype, but let me show you another", "tokens": [51160, 1042, 11, 291, 1062, 362, 1217, 5694, 512, 7300, 294, 341, 19475, 11, 457, 718, 385, 855, 291, 1071, 51496], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 123, "seek": 49772, "start": 520.36, "end": 521.36, "text": " one.", "tokens": [51496, 472, 13, 51546], "temperature": 0.0, "avg_logprob": -0.2025975190199815, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.014916706830263138}, {"id": 124, "seek": 52136, "start": 521.36, "end": 527.92, "text": " So far I've been working on making open-refined operations aware of which parts of the data", "tokens": [50364, 407, 1400, 286, 600, 668, 1364, 322, 1455, 1269, 12, 33115, 2001, 7705, 3650, 295, 597, 3166, 295, 264, 1412, 50692], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 125, "seek": 52136, "start": 527.92, "end": 529.4, "text": " set they modify.", "tokens": [50692, 992, 436, 16927, 13, 50766], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 126, "seek": 52136, "start": 529.4, "end": 534.2, "text": " Because the problem is, if you want to let people undo a deep operation, then you need", "tokens": [50766, 1436, 264, 1154, 307, 11, 498, 291, 528, 281, 718, 561, 23779, 257, 2452, 6916, 11, 550, 291, 643, 51006], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 127, "seek": 52136, "start": 534.2, "end": 538.52, "text": " to be able to detect which following ones can be kept or not, or if they need to be", "tokens": [51006, 281, 312, 1075, 281, 5531, 597, 3480, 2306, 393, 312, 4305, 420, 406, 11, 420, 498, 436, 643, 281, 312, 51222], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 128, "seek": 52136, "start": 538.52, "end": 542.28, "text": " recomputed because the data they were working on has been touched.", "tokens": [51222, 23334, 2582, 292, 570, 264, 1412, 436, 645, 1364, 322, 575, 668, 9828, 13, 51410], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 129, "seek": 52136, "start": 542.28, "end": 550.64, "text": " So now that we have this capability of scoping operations a little bit better, you can, for", "tokens": [51410, 407, 586, 300, 321, 362, 341, 13759, 295, 795, 26125, 7705, 257, 707, 857, 1101, 11, 291, 393, 11, 337, 51828], "temperature": 0.0, "avg_logprob": -0.15828734045630102, "compression_ratio": 1.7380952380952381, "no_speech_prob": 0.05984139069914818}, {"id": 130, "seek": 55064, "start": 550.64, "end": 561.68, "text": " instance, run reconciliation on multiple columns and that will run concurrently, which is something", "tokens": [50364, 5197, 11, 1190, 31281, 322, 3866, 13766, 293, 300, 486, 1190, 37702, 356, 11, 597, 307, 746, 50916], "temperature": 0.0, "avg_logprob": -0.20989660116342398, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.1876874715089798}, {"id": 131, "seek": 55064, "start": 561.68, "end": 563.24, "text": " that wasn't possible before.", "tokens": [50916, 300, 2067, 380, 1944, 949, 13, 50994], "temperature": 0.0, "avg_logprob": -0.20989660116342398, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.1876874715089798}, {"id": 132, "seek": 55064, "start": 563.24, "end": 567.24, "text": " So you see the reconciliation I started earlier, it's only 7% complete.", "tokens": [50994, 407, 291, 536, 264, 31281, 286, 1409, 3071, 11, 309, 311, 787, 1614, 4, 3566, 13, 51194], "temperature": 0.0, "avg_logprob": -0.20989660116342398, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.1876874715089798}, {"id": 133, "seek": 55064, "start": 567.24, "end": 572.4399999999999, "text": " It's a very slow operation because which data reconciliation is particularly slow.", "tokens": [51194, 467, 311, 257, 588, 2964, 6916, 570, 597, 1412, 31281, 307, 4098, 2964, 13, 51454], "temperature": 0.0, "avg_logprob": -0.20989660116342398, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.1876874715089798}, {"id": 134, "seek": 55064, "start": 572.4399999999999, "end": 575.68, "text": " And now I can already start reconcealing the other column.", "tokens": [51454, 400, 586, 286, 393, 1217, 722, 9993, 384, 4270, 264, 661, 7738, 13, 51616], "temperature": 0.0, "avg_logprob": -0.20989660116342398, "compression_ratio": 1.6442307692307692, "no_speech_prob": 0.1876874715089798}, {"id": 135, "seek": 57568, "start": 575.68, "end": 581.9599999999999, "text": " And if you see, we already get some results, although the first one hasn't completed yet.", "tokens": [50364, 400, 498, 291, 536, 11, 321, 1217, 483, 512, 3542, 11, 4878, 264, 700, 472, 6132, 380, 7365, 1939, 13, 50678], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 136, "seek": 57568, "start": 581.9599999999999, "end": 583.68, "text": " So that's already won win.", "tokens": [50678, 407, 300, 311, 1217, 1582, 1942, 13, 50764], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 137, "seek": 57568, "start": 583.68, "end": 589.5999999999999, "text": " It's not directly about reproducibility, but I hope this will be work on by users because", "tokens": [50764, 467, 311, 406, 3838, 466, 11408, 537, 39802, 11, 457, 286, 1454, 341, 486, 312, 589, 322, 538, 5022, 570, 51060], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 138, "seek": 57568, "start": 589.5999999999999, "end": 593.3599999999999, "text": " it should save people a lot of time.", "tokens": [51060, 309, 820, 3155, 561, 257, 688, 295, 565, 13, 51248], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 139, "seek": 57568, "start": 593.3599999999999, "end": 602.5999999999999, "text": " And on top of that, we've done some research about how other tools represent pipelines or", "tokens": [51248, 400, 322, 1192, 295, 300, 11, 321, 600, 1096, 512, 2132, 466, 577, 661, 3873, 2906, 40168, 420, 51710], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 140, "seek": 57568, "start": 602.5999999999999, "end": 605.3199999999999, "text": " their undo-redu functionality.", "tokens": [51710, 641, 23779, 12, 265, 769, 14980, 13, 51846], "temperature": 0.0, "avg_logprob": -0.18470314427425988, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.05080057308077812}, {"id": 141, "seek": 60532, "start": 605.32, "end": 608.72, "text": " So this is a screenshot from Talent, another data cleaning tool that we've been looking", "tokens": [50364, 407, 341, 307, 257, 27712, 490, 44081, 11, 1071, 1412, 8924, 2290, 300, 321, 600, 668, 1237, 50534], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 142, "seek": 60532, "start": 608.72, "end": 609.72, "text": " at.", "tokens": [50534, 412, 13, 50584], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 143, "seek": 60532, "start": 609.72, "end": 615.88, "text": " And in those sorts of data cleaning tools, you design your pipeline explicitly on a canvas.", "tokens": [50584, 400, 294, 729, 7527, 295, 1412, 8924, 3873, 11, 291, 1715, 428, 15517, 20803, 322, 257, 16267, 13, 50892], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 144, "seek": 60532, "start": 615.88, "end": 619.2800000000001, "text": " So it's a very different sort of user experience.", "tokens": [50892, 407, 309, 311, 257, 588, 819, 1333, 295, 4195, 1752, 13, 51062], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 145, "seek": 60532, "start": 619.2800000000001, "end": 624.9200000000001, "text": " But we've also been looking at Excel, how they let you track changes, or basic undo-redu", "tokens": [51062, 583, 321, 600, 611, 668, 1237, 412, 19060, 11, 577, 436, 718, 291, 2837, 2962, 11, 420, 3875, 23779, 12, 265, 769, 51344], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 146, "seek": 60532, "start": 624.9200000000001, "end": 629.2, "text": " functionality in Google Sheets, things like that.", "tokens": [51344, 14980, 294, 3329, 1240, 1385, 11, 721, 411, 300, 13, 51558], "temperature": 0.0, "avg_logprob": -0.16258040894853307, "compression_ratio": 1.5696202531645569, "no_speech_prob": 0.00765159772709012}, {"id": 147, "seek": 62920, "start": 629.2, "end": 636.6400000000001, "text": " So that's been also very interesting in trying to get some sort of user experience that our", "tokens": [50364, 407, 300, 311, 668, 611, 588, 1880, 294, 1382, 281, 483, 512, 1333, 295, 4195, 1752, 300, 527, 50736], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 148, "seek": 62920, "start": 636.6400000000001, "end": 640.1600000000001, "text": " users are already familiar with.", "tokens": [50736, 5022, 366, 1217, 4963, 365, 13, 50912], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 149, "seek": 62920, "start": 640.1600000000001, "end": 643.5200000000001, "text": " So as you can see, this is all work in progress.", "tokens": [50912, 407, 382, 291, 393, 536, 11, 341, 307, 439, 589, 294, 4205, 13, 51080], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 150, "seek": 62920, "start": 643.5200000000001, "end": 645.96, "text": " This is what I have just here, a prototype.", "tokens": [51080, 639, 307, 437, 286, 362, 445, 510, 11, 257, 19475, 13, 51202], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 151, "seek": 62920, "start": 645.96, "end": 650.48, "text": " We don't have full answers to all of those questions yet.", "tokens": [51202, 492, 500, 380, 362, 1577, 6338, 281, 439, 295, 729, 1651, 1939, 13, 51428], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 152, "seek": 62920, "start": 650.48, "end": 653.76, "text": " But we're working on this, and we are very keen to hear from you.", "tokens": [51428, 583, 321, 434, 1364, 322, 341, 11, 293, 321, 366, 588, 20297, 281, 1568, 490, 291, 13, 51592], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 153, "seek": 62920, "start": 653.76, "end": 659.0400000000001, "text": " So if you're interested in those topics and would be happy to test out some ideas with", "tokens": [51592, 407, 498, 291, 434, 3102, 294, 729, 8378, 293, 576, 312, 2055, 281, 1500, 484, 512, 3487, 365, 51856], "temperature": 0.0, "avg_logprob": -0.10367197649819511, "compression_ratio": 1.6273764258555132, "no_speech_prob": 0.08699674904346466}, {"id": 154, "seek": 65904, "start": 659.04, "end": 662.76, "text": " us, we're running some user testing sessions.", "tokens": [50364, 505, 11, 321, 434, 2614, 512, 4195, 4997, 11081, 13, 50550], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 155, "seek": 65904, "start": 662.76, "end": 666.64, "text": " So you're very welcome to sign up for those.", "tokens": [50550, 407, 291, 434, 588, 2928, 281, 1465, 493, 337, 729, 13, 50744], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 156, "seek": 65904, "start": 666.64, "end": 672.0, "text": " And that's basically the state of the project.", "tokens": [50744, 400, 300, 311, 1936, 264, 1785, 295, 264, 1716, 13, 51012], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 157, "seek": 65904, "start": 672.0, "end": 677.0, "text": " And I also have some open refined stickers if you happen to organize some training events", "tokens": [51012, 400, 286, 611, 362, 512, 1269, 26201, 21019, 498, 291, 1051, 281, 13859, 512, 3097, 3931, 51262], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 158, "seek": 65904, "start": 677.0, "end": 678.4, "text": " in various places.", "tokens": [51262, 294, 3683, 3190, 13, 51332], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 159, "seek": 65904, "start": 678.4, "end": 681.0799999999999, "text": " So do also get back to me if you want some.", "tokens": [51332, 407, 360, 611, 483, 646, 281, 385, 498, 291, 528, 512, 13, 51466], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 160, "seek": 65904, "start": 681.0799999999999, "end": 682.0799999999999, "text": " Thank you.", "tokens": [51466, 1044, 291, 13, 51516], "temperature": 0.0, "avg_logprob": -0.19942223153463223, "compression_ratio": 1.5435897435897437, "no_speech_prob": 0.016365274786949158}, {"id": 161, "seek": 68208, "start": 682.08, "end": 683.08, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50414], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 162, "seek": 68208, "start": 683.08, "end": 689.08, "text": " We can maybe take one question.", "tokens": [50414, 492, 393, 1310, 747, 472, 1168, 13, 50714], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 163, "seek": 68208, "start": 689.08, "end": 692.08, "text": " Thank you for the presentation.", "tokens": [50714, 1044, 291, 337, 264, 5860, 13, 50864], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 164, "seek": 68208, "start": 692.08, "end": 695.08, "text": " So it's an interesting piece of software.", "tokens": [50864, 407, 309, 311, 364, 1880, 2522, 295, 4722, 13, 51014], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 165, "seek": 68208, "start": 695.08, "end": 698.08, "text": " But what exactly is the target audience?", "tokens": [51014, 583, 437, 2293, 307, 264, 3779, 4034, 30, 51164], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 166, "seek": 68208, "start": 698.08, "end": 711.9200000000001, "text": " Because I mean at some point, if you have the data rendering script, it makes the", "tokens": [51164, 1436, 286, 914, 412, 512, 935, 11, 498, 291, 362, 264, 1412, 22407, 5755, 11, 309, 1669, 264, 51856], "temperature": 0.0, "avg_logprob": -0.5115170405461238, "compression_ratio": 1.4311377245508983, "no_speech_prob": 0.3990125358104706}, {"id": 167, "seek": 71192, "start": 712.76, "end": 713.76, "text": " job.", "tokens": [50406, 1691, 13, 50456], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 168, "seek": 71192, "start": 713.76, "end": 715.76, "text": " I mean, to not get me wrong, it's interesting.", "tokens": [50456, 286, 914, 11, 281, 406, 483, 385, 2085, 11, 309, 311, 1880, 13, 50556], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 169, "seek": 71192, "start": 715.76, "end": 720.16, "text": " But just to know who exactly you are targeting.", "tokens": [50556, 583, 445, 281, 458, 567, 2293, 291, 366, 17918, 13, 50776], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 170, "seek": 71192, "start": 720.16, "end": 723.68, "text": " So the question is, what is the target audience of open refined?", "tokens": [50776, 407, 264, 1168, 307, 11, 437, 307, 264, 3779, 4034, 295, 1269, 26201, 30, 50952], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 171, "seek": 71192, "start": 723.68, "end": 727.8399999999999, "text": " So it's a broad range of communities.", "tokens": [50952, 407, 309, 311, 257, 4152, 3613, 295, 4456, 13, 51160], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 172, "seek": 71192, "start": 727.8399999999999, "end": 733.4, "text": " I would say it's generally suited for tasks where you can't really just write a script", "tokens": [51160, 286, 576, 584, 309, 311, 5101, 24736, 337, 9608, 689, 291, 393, 380, 534, 445, 2464, 257, 5755, 51438], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 173, "seek": 71192, "start": 733.4, "end": 738.1999999999999, "text": " upfront, which will do your keening.", "tokens": [51438, 30264, 11, 597, 486, 360, 428, 803, 4559, 13, 51678], "temperature": 0.0, "avg_logprob": -0.2819629920707954, "compression_ratio": 1.5233644859813085, "no_speech_prob": 0.02115187980234623}, {"id": 174, "seek": 73820, "start": 738.2, "end": 740.44, "text": " And it's not really about whether you like programming or not.", "tokens": [50364, 400, 309, 311, 406, 534, 466, 1968, 291, 411, 9410, 420, 406, 13, 50476], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 175, "seek": 73820, "start": 740.44, "end": 744.96, "text": " It's just some tasks where you need to be looking at the data while you're doing the", "tokens": [50476, 467, 311, 445, 512, 9608, 689, 291, 643, 281, 312, 1237, 412, 264, 1412, 1339, 291, 434, 884, 264, 50702], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 176, "seek": 73820, "start": 744.96, "end": 745.96, "text": " cleaning.", "tokens": [50702, 8924, 13, 50752], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 177, "seek": 73820, "start": 745.96, "end": 748.08, "text": " As you saw reconciliation, it's a messy thing.", "tokens": [50752, 1018, 291, 1866, 31281, 11, 309, 311, 257, 16191, 551, 13, 50858], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 178, "seek": 73820, "start": 748.08, "end": 752.12, "text": " You can't really just come up with the parameters and make the matching.", "tokens": [50858, 509, 393, 380, 534, 445, 808, 493, 365, 264, 9834, 293, 652, 264, 14324, 13, 51060], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 179, "seek": 73820, "start": 752.12, "end": 753.44, "text": " You need to be looking at the data.", "tokens": [51060, 509, 643, 281, 312, 1237, 412, 264, 1412, 13, 51126], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 180, "seek": 73820, "start": 753.44, "end": 755.6, "text": " Same for clustering.", "tokens": [51126, 10635, 337, 596, 48673, 13, 51234], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 181, "seek": 73820, "start": 755.6, "end": 763.2, "text": " So it's a mixture of interactive data cleaning and a little bit more automation that you", "tokens": [51234, 407, 309, 311, 257, 9925, 295, 15141, 1412, 8924, 293, 257, 707, 857, 544, 17769, 300, 291, 51614], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 182, "seek": 73820, "start": 763.2, "end": 764.2, "text": " would have in Excel.", "tokens": [51614, 576, 362, 294, 19060, 13, 51664], "temperature": 0.0, "avg_logprob": -0.25919093756840145, "compression_ratio": 1.7689243027888446, "no_speech_prob": 0.07737996429204941}, {"id": 183, "seek": 76420, "start": 764.2, "end": 771.2, "text": " So basically here the point is the point is the point click aspect for the operations.", "tokens": [50364, 407, 1936, 510, 264, 935, 307, 264, 935, 307, 264, 935, 2052, 4171, 337, 264, 7705, 13, 50714], "temperature": 0.0, "avg_logprob": -0.5806558348915793, "compression_ratio": 1.72, "no_speech_prob": 0.1048421561717987}, {"id": 184, "seek": 76420, "start": 771.2, "end": 774.2, "text": " So the real point is the point click aspect for the user.", "tokens": [50714, 407, 264, 957, 935, 307, 264, 935, 2052, 4171, 337, 264, 4195, 13, 50864], "temperature": 0.0, "avg_logprob": -0.5806558348915793, "compression_ratio": 1.72, "no_speech_prob": 0.1048421561717987}, {"id": 185, "seek": 76420, "start": 774.2, "end": 777.2, "text": " Let's thank Antonina again.", "tokens": [50864, 961, 311, 1309, 15291, 1426, 797, 13, 51014], "temperature": 0.0, "avg_logprob": -0.5806558348915793, "compression_ratio": 1.72, "no_speech_prob": 0.1048421561717987}], "language": "en"}