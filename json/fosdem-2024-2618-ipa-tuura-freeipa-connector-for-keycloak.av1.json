{"text": " Hi guys. So now we have Francisco Tivino who will speak about the Ipatura project, which is a FIJK connector for people. That is awesome. Yes, thank you Ikea. Thank you. Thank you very much. Yes, my name is Francisco Tivino. I'm a principal software engineer at Red Hat, specializing in identity management systems. And I'm part of the Free API team. And I'm very excited to introduce you to Ipatura, a collaboration between Free API team and SSSD teams. And basically what you are allowed to see is a redesign of the system integration between identity management between key clock and Free API. And then the Alexander talk, the one before this one, it was perfect because he was explaining all the concepts, all the, he was giving a very good overview of key clock, what are all the features that are supported and specifically how to integrate key clock with other identity management systems through the user federation and identity federation and all the brokering and stuff like that. And he was missing one integration, actually. That's nice because he didn't spoil my presentation. He was missing the integration with Free API, all right, through the user federation. So, yeah, this is all about, yeah, well, this is very basic stuff that I would like to scope well the project, right? I just want to spend a few minutes talking about some of the background and some of the key aspects of this project that we have been keeping in mind as we have been undergoing this work. So as far as the background, IAM is an umbrella term. It defines processes to assess the right assets at the right time for the right reasons, right? Well, keeping an author right access and the control. So some of the common products are Microsoft Active Directory. This is for environments where Windows is dominating. So we have also identity management, which is Free API. So if you are familiar with it, it could be, yes, you can understand Free API like the open source version of Active Directory, but for post-example environment. This is Linux, right? And, yeah, because basically it relies on the same building blocks like Microsoft Active Directory, like LDAP, Kerberos, PKI, CA, DNS, right? And, yeah, another one is Key Clock, okay? It doesn't need an introduction. It's a more scope for modern applications and services to the users in general, right? And there are more of the solutions such as Octa and TrID where they are more oriented to cloud-based environments, right? So when comparing these solutions, we soon discovered that one of the main differences is like number of assumptions regarding how users and groups are controlled, okay? So, for instance, Free API is tied to user and groups like this. They are necessary for the applications running in a post-example environment, right? On the other hand, Key Clock offers authentication services to modern applications where these applications are deployed usually in the cloud environment and the identities, they completely differ from the system level ones. Meanwhile, AD, for instance, Active Directory relies on other identifiers like security identifiers or organizational units. I'm not going to talk about post-example environments because the very last talk of today is all about that. So I recommend you to watch that one. And, yeah, the key point is that sometimes you are happy with a standalone solution with all your conflicts in place, or that is not a useful case. I mean, many times you will need to integrate multiple identity management solutions so that the same user can access different operating systems as well as different cloud applications with the same set of credentials, right? So, luckily, IIM, this umbrella term I was talking about in the first slide, defines some processes like single sign-on and also identity and user federation where a user basically will be authenticated directly once, okay? And then the fact of authentication is consumed by other services for a certain amount of time, regardless how and where the application are operating, right? So that's basically it. And then when talking about this, this one, and this one, federation that Alessandro was talking about that, Yaki Clock is very well known for providing these functionalities, okay? So, yeah, the way it works is like when a user logs in, Key Clock will look into its own internal database, right? And if the user is not there, it will fetch or iterate over every user storage provider that is connected until it finds a match, okay? This is basically how it works, right? And guess what? Key Clock already supports the integration with API, yeah? As a backend to look up for authenticated identities and so on, right? This is already supported. You can do that. So, yeah, by default, well, I'm not going to spend a lot of time here because this was explained by Alessandro. So the one on the left, the one on the left, it was the one from the previous presentation. Yeah, includes LDAP and AD provider so you can federate with multiple LDAP servers in one Key Clock. And, yeah, at the same time, and the one on the right is the one that I'm going to focus on, is that Key Clock also includes SSSD plugin, right? And it provides access to multiple identities and authentication providers from free API, right? And also very nice features like failover and offline support as well. So then what is the problem then? If we support everything and we can integrate with anything? All right, let's have a look. So what are the problems that we are trying to solve? So one of the main issues is, and the most important is that we are missing feature parity between those integrations. I mean, they are really different ones. I mean, you can integrate from a Key Clock to the user federation with LDAP, with Rehabilitation Server with AD in a different manner because we support a lot of features there. And at the same time, you can integrate with ADM with free API, but there is a huge limitation there. It's that it's only a read-only interface. So Key Clock, yes, can fetch information from SSSD, that's all. It can write there. So that means that if you do changes in your user database in Key Clock, you will need to drop by the free API and do the changes as well. So this is kind of a very limiting factor, right? So yeah, another one is that if you want to integrate with SSSD, you need to deploy SSSD in the same host or container where you are running Key Clock. This is also a limiting factor, especially when talking about cloud environments and open sieve, where you usually deploy the bots in different hosts and different machines, right? So that's another limiting factor. So then, yeah, we are thinking about already designed then. We need already designed to already design this, okay? And then in this slide I have, yeah, well, this is where the IPaTura service comes into play, okay? And then these are kind of a list of requirements when redesigning something, yeah. We are thinking about to support all these things at the same time. So we need a common API for managing identities. So the requirements are to be able to read and write. This is the most important one also to authenticate users from any integration domain. At the same time, now that we are redesigning everything, we are going to try to simplify the integration. And one idea is to replace all the existing plugins by just one plugin for all of them. So you can easily configure and then you can connect with anything. Another one is the cloud-friendly, maintainable solution. Yeah, we need to get rid of this limitation about deployment. We need to get a key clock and this is in the same container. This is kind of difficult without performance impact. That's always there. And ideally we shouldn't reinvent the wheel. So we need to ideally rely on existing open source projects, okay? So then, now this is a question for you. How many of you know about the scheme? You can raise your hand. That's that kind of the whole part of the room. That's nice. So it stands for system for cross-domain identity management. Okay, this is a protocol. This protocol finds or helps with this chain of user identity data between different identity management systems. It simplifies the provisioning, the updating of attributes, also the provisioning of users, of accounts, and it helps with interoperability. Okay, so it sounds like this is what we need, right? Yeah, so the idea there is to implement a scheme server for free PA as a backend to process all the requests coming from key clock, right? So, yeah, the idea is to don't start something from scratch. So based on this protocol, I think there are kind of 10 or 10 to 15 projects already implementing this protocol. And we were paying attention to one in particular, which is Django scheme 2. And this is why it's written in Python. And the reason is because free PA is also using Python, especially the API. So it's very similar. I mean, the interconnection between this, the scheme server and free PA will be some sort of straightforward. So, okay, let's start building it. Let's start building a new service. Okay, we mentioned that it must be a cloud-finally solution. So we are targeting a container. This is a container. Okay, on the left we have key clock. On the right we have free PA. So the first thing to do to add into the container is the Django framework because there is where we have the implementation of the scheme based on an open source project. Okay, this project in the container is already exposing some sort of endpoints. Okay. What is the next requirement? It must be secure enough, you know, the Django framework implements an HTTP server, but this server is kind of for developers. It's not, I mean, it's not protected at all. So, okay, so we can include Apache. It's a well-known server. And we can enable HTTPS for production-driving environments. So, all right, we add Apache. We connect Apache through the WBSGI connector to Python, and this is from Django. Okay, now we have a secure API. Okay, what is the next thing? Yeah, it must provide a generic API. So, let's rely, yeah, the breach can, at the same time, I mean, the idea is to, this is a breach, right? And then we have connected to Key Clock already, so through the user federation storage and other identity providers, brokers, we can connect to the container. This scheme protocol will help us to translate, and so we can make another call to free API through the API. And this is how, basically, how we connect everything. And it's generic because it's based on the scheme. All right. And then, yeah, we need, I was mentioning that, we need to read and write. Okay, so we implement two interfaces to connect to free API. And then, about the performance, well, deploying a container with a start service, talking to free API, making API calls is kind of expensive. Okay, but no problem because we can rely on SSSD because SSSD is implementing a catch. Okay. And then, okay, let's include SSSD in the container, right? Let's connect through the Django, through the divorce info pipe. And this is how we can access to the user materials, identity materials, right? All right. So, looks like we are almost done, but we mentioned that it must be generic enough. So, these interfaces, the right and the right one, we can easily configure them to talk, not only to free API, but also to any Active Directory, and through LDAP and also any RojHDS Directory server, right? Okay, so this is basically the idea to unify. Okay. And what about key clock? Yes, that is support the scheme calls because, well, we have implemented a scheme server. It's pushing a generic API, but key clock, well, doesn't support the scheme calls as a client, right? So, okay, as Alessandro mentioned, there is another, well, I mentioned that there are two ways to integrate user federation with an identity management system. Elavanidian, the other one is SSD, but there is a third one. The third one is that you can implement your own user data connector key clock. So, then this is what we did, basically. We implemented, and this is another project you have in GitHub, and it's basically a custom user federation that is capable of acting as a scheme client, all right? And this is what we need in key clock to connect with the server. All right, and this is how it looks like. You go to key clock, and then you will see all these options. You will see parameters for connecting to the bridge. It's basically the server URL and the username and password, but, well, we have other authentication mechanisms, probably, but this is basically, you specify the details about the integration domain. You can choose between the type IPA, is free IPA, you can choose AD, but also a lab. So, this is just for summing up, and then if we combine both projects, then we have it. And let's say that this one, which is the server running in a container, is basically supposing a lot of endpoints. For instance, there is one, which is called domains, is kind of an administrative endpoint. It's basically when key clock tries to enroll with a scheme, is sending some details, and then a scheme is implemented on the automation to make an enrollment with any other identity mind-saving system, right? And then once this is done, key clock plug-in can simply make user calls to the user federation storage to fetch for users or write and read whatever. So, yeah, it's important to note that key clock plug-in now, it doesn't communicate directly with the databases or with the other identity management, it's kind of only talking to the scheme, which is a container. So, let's go for a quick demo. Yeah, this is, in the demo, this is what is going to happen. Okay, basically, you will see key clock, you will see free APA, and a container running in another host, and we will make an HTTP post-request to the domain's application in the bridge, and the bridge will be capable of doing all this automation, because those are steps that they were done by the administrator in the past. I mean, if an administrator today wants to enroll user federation to free APA, it's going to do a lot of automation, a lot of steps there, like file a service, the proper role with the proper privileges, and generate key tabs, and blah, blah, blah, right? So, this is fully automated now. And once the other process is done, now key clock every time is looking for a user or something, it will make a generic call to a scheme server. So, what this whole looks like is a post to the scheme server, which is in JSON format through the recipe, and this service will translate that into an APA API call, and it will make it to the domain. Okay, so, yeah, I love the live demos, but I have to admit that today a little bit cold, I have a recording, and yes, I think I want to do the real demo because I have all the infrastructure deployed in Red Hat, and then this is everything recorded, and I don't want to expose DNS names or internal IP addresses, so I have a video anyway. And so, yeah, if this works... So, no. Okay, let me see what is going on here. So, very quickly, I have a quick one, so how many minutes do we have? Okay, then I have a three-minute video. So, yeah, there we go. So, yeah, the three consoles you see on the bottom, the one on the left is key clock, the one on the middle is the bridge, and this one is free API. So, this screen is key clock, we are authenticating there, and the same in free API, all right? Then we go to the user federation so that now we see it was quick, that was super quick. It's quicker than the speed of the light. So, yeah, I wanted to show you that there is a new user federation storage there. Yeah, you see? Wait. Let's see if I can... Yeah. So, these are the ones that Alexander was talking about in the previous presentation, and this is the new one, okay? So, you will see that. All right, let's continue. So, yeah, key clock, free API. So, these are the services, because you know that the machine will configure things here automatically, okay? So, now I'm going to show you where the container is running. This is a different host, by the way. It's not tight to key clock anymore. So, that's the... If you do podman.ps, this is the container, right? For the demo. It does the proper lead network mapping. You see, it's not running HTTP. Apache is not running the host, so if you log into a container, Apache is running inside the container. There we go. Yes, I'm piping the error log just to see that there is movement here, but I'm not cutting the content, because otherwise we will see a lot of IP addresses and internal stuff. So, I'm too lazy. I don't want to go to the key clock and type all the parameters, so that I do a cool call, okay? Or, well, this is with the KAdmin. You can see all the parameters that we are configuring for integrating with free API. And once we execute that command, the container is capable, you see the activity. And now we have the user federation enrolled, okay? And you will see a new service here, which is this one, the bridge, okay? It was done automatically, so you don't need to worry about that anymore. So, now everything is set up, everything is configured, so now you can manipulate users. When we create one user, for instance, I'm trying to file a user in key clock, so right away after we click on create, the user is added to the key clock database, but it's making a call to the scheme service, and the scheme service is redirecting the user to, directing the user in the IP as well. So, it appears here, okay? Yeah, that's the user, and yeah, you know, we can do all the administrative stuff, like changing for instance the email, everything is fully replicated to the free API and the Dimachment system, based on all these cool calls that are happening to the bridge, so the user is there, you can see it from the click command as well. Yeah, the modification was currently provided. So, I guess I'm trying to delete the user now, and yeah, basically, it does a group of operations, I mean create, modify, list, and delete, yeah, the user is not there anymore, and also when you delete the scheme federation, it is unenrolling, okay? So, it goes to free API and then remove the service because it's no longer needed, okay? So, this is also fully automated. Okay, so, what you just saw here in this video, is the user provisioning, okay? We are not done yet. Let me see, because I have a bonus. If I can close the video now. So, the bonus is... Oh, now it's working. Now it's working, okay, when I don't need it. Okay, now, okay, this is a bonus. This is a working progress, all right? This is the other piece, the identity federation. You just saw in the video, the user federation, but this is the identity federation, and it is all about to expose another endpoint in the bridge, so that key clock can also make calls to the bridge, but now, not for user provisioning, or modifications, it's for authenticating, and this one is for Kerberos, okay? So, this is kind of controlling Kerberos, and then the scheme, I mean the bridge, Ipantura, is capable of translating that into an operation that we've modelled, yes, this API, using a proper kit up, and then free API will answer with the session cookie, or it will fetch from the SSD, or well, from the cache, and then it will respond back the session cookie, so that the cloud application that is running here, trying to log in into key clock, is actually authenticating in IPA, nothing key clock, okay? So, yes, and then, yeah, this final slide is about potential usage, so this can be used for synchronization of identities across different providers, as you can see. Also, we can use it to migrate all the users, because the beauty of the scheme is that you can do mapping of the attributes, so you can translate anything you have in any cloud application into something that is more powerful, like free API, and then with UIDs and UIDs that are generated automatically, I mean, it's amazing, and the good point as well about potential usage is that key clock, if we merge this in key clock, there will be a user federation that will be capable of connecting to any scheme server, it doesn't need to be this one. So now key clock can talk to a scheme as a client, right? And this service, as a scheme server that we implemented in IPA as a container, can be also used to connect with other clients, it doesn't need to be necessarily key clock, we can connect to Azure or Azure AD or any other, for instance, I don't know, anyone that is supporting the protocol. So, yeah. So, yeah, that was it. I think we have time for questions, right? More or less? One, two minutes? Okay. Yes, please. You spoke about intervention with AD, I want some idea of the client side, you would have windbind, would you be able to replace SSD with windbind and still use this solution? So the question is if we can replace windbind... Yeah, from SSD with this solution with... So, not yet, the answer is not yet, but yeah, I think we can look into it and potentially, potentially, yeah, it could be done. If we decide to prioritize that use case over the others, why not? Yeah, but not yet. What's the not yet part of it? Say again, please. Will it happen? Will it happen? Will it happen? That's a good question because we haven't done any release. This is an upstream project. We have two upstream projects. So, yeah, our intention is to make this to happen. This will help simplify a lot the key clock user integration with identity management systems and also it's very convenient now to get a deployment independent from the host so that you can get a container, this is kind of on the towards the cloud, cloud-based applications. So, yeah. So, about our plans, our plan, I mean, the key clock plugin is more or less completed. Now we are thinking about sending to key clock so that it will be emerging upstream first and then it will appear scheme client there. And the service, as soon as we finalize the Kerberos authentication redirection, then I guess we will be in good shape to make a first release in upstream, okay, and later on, if once we prioritize a lot of aspects, then, yeah, potentially yes, it will replace or, especially will replace the SSD connector we have in key clock, that for sure, okay. Okay. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.0, "text": " Hi guys.", "tokens": [50364, 2421, 1074, 13, 50614], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 1, "seek": 0, "start": 5.0, "end": 15.0, "text": " So now we have Francisco Tivino who will speak about the Ipatura project, which is a FIJK", "tokens": [50614, 407, 586, 321, 362, 12279, 314, 592, 2982, 567, 486, 1710, 466, 264, 286, 79, 19660, 1716, 11, 597, 307, 257, 479, 40, 41, 42, 51114], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 2, "seek": 0, "start": 15.0, "end": 17.0, "text": " connector for people.", "tokens": [51114, 19127, 337, 561, 13, 51214], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 3, "seek": 0, "start": 17.0, "end": 22.0, "text": " That is awesome.", "tokens": [51214, 663, 307, 3476, 13, 51464], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 4, "seek": 0, "start": 22.0, "end": 23.0, "text": " Yes, thank you Ikea.", "tokens": [51464, 1079, 11, 1309, 291, 286, 39153, 13, 51514], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 5, "seek": 0, "start": 23.0, "end": 24.0, "text": " Thank you.", "tokens": [51514, 1044, 291, 13, 51564], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 6, "seek": 0, "start": 24.0, "end": 25.0, "text": " Thank you very much.", "tokens": [51564, 1044, 291, 588, 709, 13, 51614], "temperature": 0.0, "avg_logprob": -0.5843664140843633, "compression_ratio": 1.3380281690140845, "no_speech_prob": 0.33114051818847656}, {"id": 7, "seek": 2500, "start": 25.0, "end": 28.0, "text": " Yes, my name is Francisco Tivino.", "tokens": [50364, 1079, 11, 452, 1315, 307, 12279, 314, 592, 2982, 13, 50514], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 8, "seek": 2500, "start": 28.0, "end": 32.0, "text": " I'm a principal software engineer at Red Hat, specializing in identity management systems.", "tokens": [50514, 286, 478, 257, 9716, 4722, 11403, 412, 4477, 15867, 11, 2121, 3319, 294, 6575, 4592, 3652, 13, 50714], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 9, "seek": 2500, "start": 32.0, "end": 35.0, "text": " And I'm part of the Free API team.", "tokens": [50714, 400, 286, 478, 644, 295, 264, 11551, 9362, 1469, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 10, "seek": 2500, "start": 35.0, "end": 43.0, "text": " And I'm very excited to introduce you to Ipatura, a collaboration between Free API team and SSSD teams.", "tokens": [50864, 400, 286, 478, 588, 2919, 281, 5366, 291, 281, 286, 79, 19660, 11, 257, 9363, 1296, 11551, 9362, 1469, 293, 12238, 23969, 5491, 13, 51264], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 11, "seek": 2500, "start": 43.0, "end": 50.0, "text": " And basically what you are allowed to see is a redesign of the system integration between identity", "tokens": [51264, 400, 1936, 437, 291, 366, 4350, 281, 536, 307, 257, 39853, 295, 264, 1185, 10980, 1296, 6575, 51614], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 12, "seek": 2500, "start": 50.0, "end": 53.0, "text": " management between key clock and Free API.", "tokens": [51614, 4592, 1296, 2141, 7830, 293, 11551, 9362, 13, 51764], "temperature": 0.0, "avg_logprob": -0.18384845733642577, "compression_ratio": 1.6804979253112033, "no_speech_prob": 0.08690927177667618}, {"id": 13, "seek": 5300, "start": 53.0, "end": 59.0, "text": " And then the Alexander talk, the one before this one, it was perfect because he was explaining", "tokens": [50364, 400, 550, 264, 14845, 751, 11, 264, 472, 949, 341, 472, 11, 309, 390, 2176, 570, 415, 390, 13468, 50664], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 14, "seek": 5300, "start": 59.0, "end": 65.0, "text": " all the concepts, all the, he was giving a very good overview of key clock, what are all the", "tokens": [50664, 439, 264, 10392, 11, 439, 264, 11, 415, 390, 2902, 257, 588, 665, 12492, 295, 2141, 7830, 11, 437, 366, 439, 264, 50964], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 15, "seek": 5300, "start": 65.0, "end": 70.0, "text": " features that are supported and specifically how to integrate key clock with other identity", "tokens": [50964, 4122, 300, 366, 8104, 293, 4682, 577, 281, 13365, 2141, 7830, 365, 661, 6575, 51214], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 16, "seek": 5300, "start": 70.0, "end": 74.0, "text": " management systems through the user federation and identity federation and all the brokering", "tokens": [51214, 4592, 3652, 807, 264, 4195, 4636, 5053, 293, 6575, 4636, 5053, 293, 439, 264, 2006, 74, 1794, 51414], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 17, "seek": 5300, "start": 74.0, "end": 76.0, "text": " and stuff like that.", "tokens": [51414, 293, 1507, 411, 300, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 18, "seek": 5300, "start": 76.0, "end": 79.0, "text": " And he was missing one integration, actually.", "tokens": [51514, 400, 415, 390, 5361, 472, 10980, 11, 767, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1382591152191162, "compression_ratio": 1.777327935222672, "no_speech_prob": 0.15320833027362823}, {"id": 19, "seek": 7900, "start": 79.0, "end": 84.0, "text": " That's nice because he didn't spoil my presentation.", "tokens": [50364, 663, 311, 1481, 570, 415, 994, 380, 18630, 452, 5860, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11847933663262261, "compression_ratio": 1.5605381165919283, "no_speech_prob": 0.011670651845633984}, {"id": 20, "seek": 7900, "start": 84.0, "end": 92.0, "text": " He was missing the integration with Free API, all right, through the user federation.", "tokens": [50614, 634, 390, 5361, 264, 10980, 365, 11551, 9362, 11, 439, 558, 11, 807, 264, 4195, 4636, 5053, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11847933663262261, "compression_ratio": 1.5605381165919283, "no_speech_prob": 0.011670651845633984}, {"id": 21, "seek": 7900, "start": 92.0, "end": 98.0, "text": " So, yeah, this is all about, yeah, well, this is very basic stuff that I would like to scope", "tokens": [51014, 407, 11, 1338, 11, 341, 307, 439, 466, 11, 1338, 11, 731, 11, 341, 307, 588, 3875, 1507, 300, 286, 576, 411, 281, 11923, 51314], "temperature": 0.0, "avg_logprob": -0.11847933663262261, "compression_ratio": 1.5605381165919283, "no_speech_prob": 0.011670651845633984}, {"id": 22, "seek": 7900, "start": 98.0, "end": 100.0, "text": " well the project, right?", "tokens": [51314, 731, 264, 1716, 11, 558, 30, 51414], "temperature": 0.0, "avg_logprob": -0.11847933663262261, "compression_ratio": 1.5605381165919283, "no_speech_prob": 0.011670651845633984}, {"id": 23, "seek": 7900, "start": 100.0, "end": 105.0, "text": " I just want to spend a few minutes talking about some of the background and some of the key", "tokens": [51414, 286, 445, 528, 281, 3496, 257, 1326, 2077, 1417, 466, 512, 295, 264, 3678, 293, 512, 295, 264, 2141, 51664], "temperature": 0.0, "avg_logprob": -0.11847933663262261, "compression_ratio": 1.5605381165919283, "no_speech_prob": 0.011670651845633984}, {"id": 24, "seek": 10500, "start": 105.0, "end": 110.0, "text": " aspects of this project that we have been keeping in mind as we have been undergoing this work.", "tokens": [50364, 7270, 295, 341, 1716, 300, 321, 362, 668, 5145, 294, 1575, 382, 321, 362, 668, 40033, 341, 589, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 25, "seek": 10500, "start": 110.0, "end": 114.0, "text": " So as far as the background, IAM is an umbrella term.", "tokens": [50614, 407, 382, 1400, 382, 264, 3678, 11, 286, 2865, 307, 364, 21925, 1433, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 26, "seek": 10500, "start": 114.0, "end": 121.0, "text": " It defines processes to assess the right assets at the right time for the right reasons, right?", "tokens": [50814, 467, 23122, 7555, 281, 5877, 264, 558, 9769, 412, 264, 558, 565, 337, 264, 558, 4112, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 27, "seek": 10500, "start": 121.0, "end": 125.0, "text": " Well, keeping an author right access and the control.", "tokens": [51164, 1042, 11, 5145, 364, 3793, 558, 2105, 293, 264, 1969, 13, 51364], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 28, "seek": 10500, "start": 125.0, "end": 130.0, "text": " So some of the common products are Microsoft Active Directory.", "tokens": [51364, 407, 512, 295, 264, 2689, 3383, 366, 8116, 26635, 49598, 13, 51614], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 29, "seek": 10500, "start": 130.0, "end": 134.0, "text": " This is for environments where Windows is dominating.", "tokens": [51614, 639, 307, 337, 12388, 689, 8591, 307, 43306, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19026984381921513, "compression_ratio": 1.657370517928287, "no_speech_prob": 0.05999387428164482}, {"id": 30, "seek": 13400, "start": 134.0, "end": 139.0, "text": " So we have also identity management, which is Free API.", "tokens": [50364, 407, 321, 362, 611, 6575, 4592, 11, 597, 307, 11551, 9362, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15526340709013098, "compression_ratio": 1.480349344978166, "no_speech_prob": 0.013382026925683022}, {"id": 31, "seek": 13400, "start": 139.0, "end": 148.0, "text": " So if you are familiar with it, it could be, yes, you can understand Free API like the open source version", "tokens": [50614, 407, 498, 291, 366, 4963, 365, 309, 11, 309, 727, 312, 11, 2086, 11, 291, 393, 1223, 11551, 9362, 411, 264, 1269, 4009, 3037, 51064], "temperature": 0.0, "avg_logprob": -0.15526340709013098, "compression_ratio": 1.480349344978166, "no_speech_prob": 0.013382026925683022}, {"id": 32, "seek": 13400, "start": 148.0, "end": 151.0, "text": " of Active Directory, but for post-example environment.", "tokens": [51064, 295, 26635, 49598, 11, 457, 337, 2183, 12, 3121, 335, 781, 2823, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15526340709013098, "compression_ratio": 1.480349344978166, "no_speech_prob": 0.013382026925683022}, {"id": 33, "seek": 13400, "start": 151.0, "end": 153.0, "text": " This is Linux, right?", "tokens": [51214, 639, 307, 18734, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.15526340709013098, "compression_ratio": 1.480349344978166, "no_speech_prob": 0.013382026925683022}, {"id": 34, "seek": 13400, "start": 153.0, "end": 160.0, "text": " And, yeah, because basically it relies on the same building blocks like Microsoft Active Directory,", "tokens": [51314, 400, 11, 1338, 11, 570, 1936, 309, 30910, 322, 264, 912, 2390, 8474, 411, 8116, 26635, 49598, 11, 51664], "temperature": 0.0, "avg_logprob": -0.15526340709013098, "compression_ratio": 1.480349344978166, "no_speech_prob": 0.013382026925683022}, {"id": 35, "seek": 16000, "start": 160.0, "end": 167.0, "text": " like LDAP, Kerberos, PKI, CA, DNS, right?", "tokens": [50364, 411, 33936, 4715, 11, 20706, 607, 329, 11, 430, 27731, 11, 22852, 11, 35153, 11, 558, 30, 50714], "temperature": 0.0, "avg_logprob": -0.18685724401986728, "compression_ratio": 1.4863636363636363, "no_speech_prob": 0.024971645325422287}, {"id": 36, "seek": 16000, "start": 167.0, "end": 170.0, "text": " And, yeah, another one is Key Clock, okay?", "tokens": [50714, 400, 11, 1338, 11, 1071, 472, 307, 12759, 46986, 11, 1392, 30, 50864], "temperature": 0.0, "avg_logprob": -0.18685724401986728, "compression_ratio": 1.4863636363636363, "no_speech_prob": 0.024971645325422287}, {"id": 37, "seek": 16000, "start": 170.0, "end": 172.0, "text": " It doesn't need an introduction.", "tokens": [50864, 467, 1177, 380, 643, 364, 9339, 13, 50964], "temperature": 0.0, "avg_logprob": -0.18685724401986728, "compression_ratio": 1.4863636363636363, "no_speech_prob": 0.024971645325422287}, {"id": 38, "seek": 16000, "start": 172.0, "end": 179.0, "text": " It's a more scope for modern applications and services to the users in general, right?", "tokens": [50964, 467, 311, 257, 544, 11923, 337, 4363, 5821, 293, 3328, 281, 264, 5022, 294, 2674, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.18685724401986728, "compression_ratio": 1.4863636363636363, "no_speech_prob": 0.024971645325422287}, {"id": 39, "seek": 16000, "start": 179.0, "end": 188.0, "text": " And there are more of the solutions such as Octa and TrID where they are more oriented to cloud-based environments, right?", "tokens": [51314, 400, 456, 366, 544, 295, 264, 6547, 1270, 382, 6788, 64, 293, 1765, 2777, 689, 436, 366, 544, 21841, 281, 4588, 12, 6032, 12388, 11, 558, 30, 51764], "temperature": 0.0, "avg_logprob": -0.18685724401986728, "compression_ratio": 1.4863636363636363, "no_speech_prob": 0.024971645325422287}, {"id": 40, "seek": 18800, "start": 188.0, "end": 197.0, "text": " So when comparing these solutions, we soon discovered that one of the main differences is like number of assumptions", "tokens": [50364, 407, 562, 15763, 613, 6547, 11, 321, 2321, 6941, 300, 472, 295, 264, 2135, 7300, 307, 411, 1230, 295, 17695, 50814], "temperature": 0.0, "avg_logprob": -0.1095128327273251, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.012682365253567696}, {"id": 41, "seek": 18800, "start": 197.0, "end": 201.0, "text": " regarding how users and groups are controlled, okay?", "tokens": [50814, 8595, 577, 5022, 293, 3935, 366, 10164, 11, 1392, 30, 51014], "temperature": 0.0, "avg_logprob": -0.1095128327273251, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.012682365253567696}, {"id": 42, "seek": 18800, "start": 201.0, "end": 205.0, "text": " So, for instance, Free API is tied to user and groups like this.", "tokens": [51014, 407, 11, 337, 5197, 11, 11551, 9362, 307, 9601, 281, 4195, 293, 3935, 411, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1095128327273251, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.012682365253567696}, {"id": 43, "seek": 18800, "start": 205.0, "end": 210.0, "text": " They are necessary for the applications running in a post-example environment, right?", "tokens": [51214, 814, 366, 4818, 337, 264, 5821, 2614, 294, 257, 2183, 12, 3121, 335, 781, 2823, 11, 558, 30, 51464], "temperature": 0.0, "avg_logprob": -0.1095128327273251, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.012682365253567696}, {"id": 44, "seek": 18800, "start": 210.0, "end": 215.0, "text": " On the other hand, Key Clock offers authentication services to modern applications", "tokens": [51464, 1282, 264, 661, 1011, 11, 12759, 46986, 7736, 26643, 3328, 281, 4363, 5821, 51714], "temperature": 0.0, "avg_logprob": -0.1095128327273251, "compression_ratio": 1.5866141732283465, "no_speech_prob": 0.012682365253567696}, {"id": 45, "seek": 21500, "start": 215.0, "end": 220.0, "text": " where these applications are deployed usually in the cloud environment and the identities,", "tokens": [50364, 689, 613, 5821, 366, 17826, 2673, 294, 264, 4588, 2823, 293, 264, 24239, 11, 50614], "temperature": 0.0, "avg_logprob": -0.14602528810501098, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.03438984230160713}, {"id": 46, "seek": 21500, "start": 220.0, "end": 224.0, "text": " they completely differ from the system level ones.", "tokens": [50614, 436, 2584, 743, 490, 264, 1185, 1496, 2306, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14602528810501098, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.03438984230160713}, {"id": 47, "seek": 21500, "start": 224.0, "end": 233.0, "text": " Meanwhile, AD, for instance, Active Directory relies on other identifiers like security identifiers or organizational units.", "tokens": [50814, 13879, 11, 9135, 11, 337, 5197, 11, 26635, 49598, 30910, 322, 661, 2473, 23463, 411, 3825, 2473, 23463, 420, 24730, 6815, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14602528810501098, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.03438984230160713}, {"id": 48, "seek": 21500, "start": 233.0, "end": 241.0, "text": " I'm not going to talk about post-example environments because the very last talk of today is all about that.", "tokens": [51264, 286, 478, 406, 516, 281, 751, 466, 2183, 12, 3121, 335, 781, 12388, 570, 264, 588, 1036, 751, 295, 965, 307, 439, 466, 300, 13, 51664], "temperature": 0.0, "avg_logprob": -0.14602528810501098, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.03438984230160713}, {"id": 49, "seek": 24100, "start": 242.0, "end": 245.0, "text": " So I recommend you to watch that one.", "tokens": [50414, 407, 286, 2748, 291, 281, 1159, 300, 472, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1760588866013747, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.0404193140566349}, {"id": 50, "seek": 24100, "start": 245.0, "end": 253.0, "text": " And, yeah, the key point is that sometimes you are happy with a standalone solution with all your conflicts in place,", "tokens": [50564, 400, 11, 1338, 11, 264, 2141, 935, 307, 300, 2171, 291, 366, 2055, 365, 257, 37454, 3827, 365, 439, 428, 19807, 294, 1081, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1760588866013747, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.0404193140566349}, {"id": 51, "seek": 24100, "start": 253.0, "end": 255.0, "text": " or that is not a useful case.", "tokens": [50964, 420, 300, 307, 406, 257, 4420, 1389, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1760588866013747, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.0404193140566349}, {"id": 52, "seek": 24100, "start": 255.0, "end": 261.0, "text": " I mean, many times you will need to integrate multiple identity management solutions", "tokens": [51064, 286, 914, 11, 867, 1413, 291, 486, 643, 281, 13365, 3866, 6575, 4592, 6547, 51364], "temperature": 0.0, "avg_logprob": -0.1760588866013747, "compression_ratio": 1.5168539325842696, "no_speech_prob": 0.0404193140566349}, {"id": 53, "seek": 26100, "start": 261.0, "end": 271.0, "text": " so that the same user can access different operating systems as well as different cloud applications with the same set of credentials, right?", "tokens": [50364, 370, 300, 264, 912, 4195, 393, 2105, 819, 7447, 3652, 382, 731, 382, 819, 4588, 5821, 365, 264, 912, 992, 295, 27404, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.11019234657287598, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.0339384488761425}, {"id": 54, "seek": 26100, "start": 271.0, "end": 281.0, "text": " So, luckily, IIM, this umbrella term I was talking about in the first slide, defines some processes like single sign-on", "tokens": [50864, 407, 11, 22880, 11, 286, 6324, 11, 341, 21925, 1433, 286, 390, 1417, 466, 294, 264, 700, 4137, 11, 23122, 512, 7555, 411, 2167, 1465, 12, 266, 51364], "temperature": 0.0, "avg_logprob": -0.11019234657287598, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.0339384488761425}, {"id": 55, "seek": 26100, "start": 281.0, "end": 288.0, "text": " and also identity and user federation where a user basically will be authenticated directly once, okay?", "tokens": [51364, 293, 611, 6575, 293, 4195, 4636, 5053, 689, 257, 4195, 1936, 486, 312, 9214, 3587, 3838, 1564, 11, 1392, 30, 51714], "temperature": 0.0, "avg_logprob": -0.11019234657287598, "compression_ratio": 1.5732758620689655, "no_speech_prob": 0.0339384488761425}, {"id": 56, "seek": 28800, "start": 288.0, "end": 296.0, "text": " And then the fact of authentication is consumed by other services for a certain amount of time,", "tokens": [50364, 400, 550, 264, 1186, 295, 26643, 307, 21226, 538, 661, 3328, 337, 257, 1629, 2372, 295, 565, 11, 50764], "temperature": 0.0, "avg_logprob": -0.23867260724648662, "compression_ratio": 1.625, "no_speech_prob": 0.010237723588943481}, {"id": 57, "seek": 28800, "start": 296.0, "end": 300.0, "text": " regardless how and where the application are operating, right?", "tokens": [50764, 10060, 577, 293, 689, 264, 3861, 366, 7447, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.23867260724648662, "compression_ratio": 1.625, "no_speech_prob": 0.010237723588943481}, {"id": 58, "seek": 28800, "start": 300.0, "end": 302.0, "text": " So that's basically it.", "tokens": [50964, 407, 300, 311, 1936, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.23867260724648662, "compression_ratio": 1.625, "no_speech_prob": 0.010237723588943481}, {"id": 59, "seek": 28800, "start": 302.0, "end": 310.0, "text": " And then when talking about this, this one, and this one, federation that Alessandro was talking about that,", "tokens": [51064, 400, 550, 562, 1417, 466, 341, 11, 341, 472, 11, 293, 341, 472, 11, 4636, 5053, 300, 967, 442, 29173, 390, 1417, 466, 300, 11, 51464], "temperature": 0.0, "avg_logprob": -0.23867260724648662, "compression_ratio": 1.625, "no_speech_prob": 0.010237723588943481}, {"id": 60, "seek": 28800, "start": 310.0, "end": 314.0, "text": " Yaki Clock is very well known for providing these functionalities, okay?", "tokens": [51464, 398, 7421, 46986, 307, 588, 731, 2570, 337, 6530, 613, 11745, 1088, 11, 1392, 30, 51664], "temperature": 0.0, "avg_logprob": -0.23867260724648662, "compression_ratio": 1.625, "no_speech_prob": 0.010237723588943481}, {"id": 61, "seek": 31400, "start": 314.0, "end": 320.0, "text": " So, yeah, the way it works is like when a user logs in,", "tokens": [50364, 407, 11, 1338, 11, 264, 636, 309, 1985, 307, 411, 562, 257, 4195, 20820, 294, 11, 50664], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 62, "seek": 31400, "start": 320.0, "end": 324.0, "text": " Key Clock will look into its own internal database, right?", "tokens": [50664, 12759, 46986, 486, 574, 666, 1080, 1065, 6920, 8149, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 63, "seek": 31400, "start": 324.0, "end": 334.0, "text": " And if the user is not there, it will fetch or iterate over every user storage provider that is connected until it finds a match, okay?", "tokens": [50864, 400, 498, 264, 4195, 307, 406, 456, 11, 309, 486, 23673, 420, 44497, 670, 633, 4195, 6725, 12398, 300, 307, 4582, 1826, 309, 10704, 257, 2995, 11, 1392, 30, 51364], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 64, "seek": 31400, "start": 334.0, "end": 337.0, "text": " This is basically how it works, right?", "tokens": [51364, 639, 307, 1936, 577, 309, 1985, 11, 558, 30, 51514], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 65, "seek": 31400, "start": 337.0, "end": 338.0, "text": " And guess what?", "tokens": [51514, 400, 2041, 437, 30, 51564], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 66, "seek": 31400, "start": 338.0, "end": 343.0, "text": " Key Clock already supports the integration with API, yeah?", "tokens": [51564, 12759, 46986, 1217, 9346, 264, 10980, 365, 9362, 11, 1338, 30, 51814], "temperature": 0.0, "avg_logprob": -0.09287150533575761, "compression_ratio": 1.5757575757575757, "no_speech_prob": 0.018226221203804016}, {"id": 67, "seek": 34300, "start": 343.0, "end": 349.0, "text": " As a backend to look up for authenticated identities and so on, right?", "tokens": [50364, 1018, 257, 38087, 281, 574, 493, 337, 9214, 3587, 24239, 293, 370, 322, 11, 558, 30, 50664], "temperature": 0.0, "avg_logprob": -0.17258432933262416, "compression_ratio": 1.5576208178438662, "no_speech_prob": 0.0077591463923454285}, {"id": 68, "seek": 34300, "start": 349.0, "end": 352.0, "text": " This is already supported. You can do that.", "tokens": [50664, 639, 307, 1217, 8104, 13, 509, 393, 360, 300, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17258432933262416, "compression_ratio": 1.5576208178438662, "no_speech_prob": 0.0077591463923454285}, {"id": 69, "seek": 34300, "start": 352.0, "end": 359.0, "text": " So, yeah, by default, well, I'm not going to spend a lot of time here because this was explained by Alessandro.", "tokens": [50814, 407, 11, 1338, 11, 538, 7576, 11, 731, 11, 286, 478, 406, 516, 281, 3496, 257, 688, 295, 565, 510, 570, 341, 390, 8825, 538, 967, 442, 29173, 13, 51164], "temperature": 0.0, "avg_logprob": -0.17258432933262416, "compression_ratio": 1.5576208178438662, "no_speech_prob": 0.0077591463923454285}, {"id": 70, "seek": 34300, "start": 359.0, "end": 365.0, "text": " So the one on the left, the one on the left, it was the one from the previous presentation.", "tokens": [51164, 407, 264, 472, 322, 264, 1411, 11, 264, 472, 322, 264, 1411, 11, 309, 390, 264, 472, 490, 264, 3894, 5860, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17258432933262416, "compression_ratio": 1.5576208178438662, "no_speech_prob": 0.0077591463923454285}, {"id": 71, "seek": 34300, "start": 365.0, "end": 372.0, "text": " Yeah, includes LDAP and AD provider so you can federate with multiple LDAP servers in one Key Clock.", "tokens": [51464, 865, 11, 5974, 33936, 4715, 293, 9135, 12398, 370, 291, 393, 38024, 473, 365, 3866, 33936, 4715, 15909, 294, 472, 12759, 46986, 13, 51814], "temperature": 0.0, "avg_logprob": -0.17258432933262416, "compression_ratio": 1.5576208178438662, "no_speech_prob": 0.0077591463923454285}, {"id": 72, "seek": 37200, "start": 372.0, "end": 378.0, "text": " And, yeah, at the same time, and the one on the right is the one that I'm going to focus on,", "tokens": [50364, 400, 11, 1338, 11, 412, 264, 912, 565, 11, 293, 264, 472, 322, 264, 558, 307, 264, 472, 300, 286, 478, 516, 281, 1879, 322, 11, 50664], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 73, "seek": 37200, "start": 378.0, "end": 383.0, "text": " is that Key Clock also includes SSSD plugin, right?", "tokens": [50664, 307, 300, 12759, 46986, 611, 5974, 12238, 23969, 23407, 11, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 74, "seek": 37200, "start": 383.0, "end": 389.0, "text": " And it provides access to multiple identities and authentication providers from free API, right?", "tokens": [50914, 400, 309, 6417, 2105, 281, 3866, 24239, 293, 26643, 11330, 490, 1737, 9362, 11, 558, 30, 51214], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 75, "seek": 37200, "start": 389.0, "end": 394.0, "text": " And also very nice features like failover and offline support as well.", "tokens": [51214, 400, 611, 588, 1481, 4122, 411, 3061, 3570, 293, 21857, 1406, 382, 731, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 76, "seek": 37200, "start": 394.0, "end": 396.0, "text": " So then what is the problem then?", "tokens": [51464, 407, 550, 437, 307, 264, 1154, 550, 30, 51564], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 77, "seek": 37200, "start": 396.0, "end": 400.0, "text": " If we support everything and we can integrate with anything?", "tokens": [51564, 759, 321, 1406, 1203, 293, 321, 393, 13365, 365, 1340, 30, 51764], "temperature": 0.0, "avg_logprob": -0.10444258699322691, "compression_ratio": 1.6215139442231075, "no_speech_prob": 0.009371254593133926}, {"id": 78, "seek": 40000, "start": 400.0, "end": 403.0, "text": " All right, let's have a look.", "tokens": [50364, 1057, 558, 11, 718, 311, 362, 257, 574, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10310543284696691, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.014490185305476189}, {"id": 79, "seek": 40000, "start": 403.0, "end": 408.0, "text": " So what are the problems that we are trying to solve?", "tokens": [50514, 407, 437, 366, 264, 2740, 300, 321, 366, 1382, 281, 5039, 30, 50764], "temperature": 0.0, "avg_logprob": -0.10310543284696691, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.014490185305476189}, {"id": 80, "seek": 40000, "start": 408.0, "end": 416.0, "text": " So one of the main issues is, and the most important is that we are missing feature parity between those integrations.", "tokens": [50764, 407, 472, 295, 264, 2135, 2663, 307, 11, 293, 264, 881, 1021, 307, 300, 321, 366, 5361, 4111, 44747, 1296, 729, 3572, 763, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10310543284696691, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.014490185305476189}, {"id": 81, "seek": 40000, "start": 416.0, "end": 418.0, "text": " I mean, they are really different ones.", "tokens": [51164, 286, 914, 11, 436, 366, 534, 819, 2306, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10310543284696691, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.014490185305476189}, {"id": 82, "seek": 40000, "start": 418.0, "end": 424.0, "text": " I mean, you can integrate from a Key Clock to the user federation with LDAP,", "tokens": [51264, 286, 914, 11, 291, 393, 13365, 490, 257, 12759, 46986, 281, 264, 4195, 4636, 5053, 365, 33936, 4715, 11, 51564], "temperature": 0.0, "avg_logprob": -0.10310543284696691, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.014490185305476189}, {"id": 83, "seek": 42400, "start": 424.0, "end": 431.0, "text": " with Rehabilitation Server with AD in a different manner because we support a lot of features there.", "tokens": [50364, 365, 1300, 71, 5177, 4614, 25684, 365, 9135, 294, 257, 819, 9060, 570, 321, 1406, 257, 688, 295, 4122, 456, 13, 50714], "temperature": 0.0, "avg_logprob": -0.2497810321849781, "compression_ratio": 1.5373831775700935, "no_speech_prob": 0.3052314519882202}, {"id": 84, "seek": 42400, "start": 431.0, "end": 439.0, "text": " And at the same time, you can integrate with ADM with free API, but there is a huge limitation there.", "tokens": [50714, 400, 412, 264, 912, 565, 11, 291, 393, 13365, 365, 9135, 44, 365, 1737, 9362, 11, 457, 456, 307, 257, 2603, 27432, 456, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2497810321849781, "compression_ratio": 1.5373831775700935, "no_speech_prob": 0.3052314519882202}, {"id": 85, "seek": 42400, "start": 439.0, "end": 442.0, "text": " It's that it's only a read-only interface.", "tokens": [51114, 467, 311, 300, 309, 311, 787, 257, 1401, 12, 25202, 9226, 13, 51264], "temperature": 0.0, "avg_logprob": -0.2497810321849781, "compression_ratio": 1.5373831775700935, "no_speech_prob": 0.3052314519882202}, {"id": 86, "seek": 42400, "start": 442.0, "end": 446.0, "text": " So Key Clock, yes, can fetch information from SSSD, that's all.", "tokens": [51264, 407, 12759, 46986, 11, 2086, 11, 393, 23673, 1589, 490, 12238, 23969, 11, 300, 311, 439, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2497810321849781, "compression_ratio": 1.5373831775700935, "no_speech_prob": 0.3052314519882202}, {"id": 87, "seek": 42400, "start": 446.0, "end": 448.0, "text": " It can write there.", "tokens": [51464, 467, 393, 2464, 456, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2497810321849781, "compression_ratio": 1.5373831775700935, "no_speech_prob": 0.3052314519882202}, {"id": 88, "seek": 44800, "start": 448.0, "end": 453.0, "text": " So that means that if you do changes in your user database in Key Clock,", "tokens": [50364, 407, 300, 1355, 300, 498, 291, 360, 2962, 294, 428, 4195, 8149, 294, 12759, 46986, 11, 50614], "temperature": 0.0, "avg_logprob": -0.10565926688058036, "compression_ratio": 1.4375, "no_speech_prob": 0.02334086410701275}, {"id": 89, "seek": 44800, "start": 453.0, "end": 458.0, "text": " you will need to drop by the free API and do the changes as well.", "tokens": [50614, 291, 486, 643, 281, 3270, 538, 264, 1737, 9362, 293, 360, 264, 2962, 382, 731, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10565926688058036, "compression_ratio": 1.4375, "no_speech_prob": 0.02334086410701275}, {"id": 90, "seek": 44800, "start": 458.0, "end": 465.0, "text": " So this is kind of a very limiting factor, right?", "tokens": [50864, 407, 341, 307, 733, 295, 257, 588, 22083, 5952, 11, 558, 30, 51214], "temperature": 0.0, "avg_logprob": -0.10565926688058036, "compression_ratio": 1.4375, "no_speech_prob": 0.02334086410701275}, {"id": 91, "seek": 44800, "start": 465.0, "end": 471.0, "text": " So yeah, another one is that if you want to integrate with SSSD,", "tokens": [51214, 407, 1338, 11, 1071, 472, 307, 300, 498, 291, 528, 281, 13365, 365, 12238, 23969, 11, 51514], "temperature": 0.0, "avg_logprob": -0.10565926688058036, "compression_ratio": 1.4375, "no_speech_prob": 0.02334086410701275}, {"id": 92, "seek": 47100, "start": 471.0, "end": 478.0, "text": " you need to deploy SSSD in the same host or container where you are running Key Clock.", "tokens": [50364, 291, 643, 281, 7274, 12238, 23969, 294, 264, 912, 3975, 420, 10129, 689, 291, 366, 2614, 12759, 46986, 13, 50714], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 93, "seek": 47100, "start": 478.0, "end": 483.0, "text": " This is also a limiting factor, especially when talking about cloud environments and open sieve,", "tokens": [50714, 639, 307, 611, 257, 22083, 5952, 11, 2318, 562, 1417, 466, 4588, 12388, 293, 1269, 2804, 303, 11, 50964], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 94, "seek": 47100, "start": 483.0, "end": 490.0, "text": " where you usually deploy the bots in different hosts and different machines, right?", "tokens": [50964, 689, 291, 2673, 7274, 264, 35410, 294, 819, 21573, 293, 819, 8379, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 95, "seek": 47100, "start": 490.0, "end": 492.0, "text": " So that's another limiting factor.", "tokens": [51314, 407, 300, 311, 1071, 22083, 5952, 13, 51414], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 96, "seek": 47100, "start": 492.0, "end": 497.0, "text": " So then, yeah, we are thinking about already designed then.", "tokens": [51414, 407, 550, 11, 1338, 11, 321, 366, 1953, 466, 1217, 4761, 550, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 97, "seek": 47100, "start": 497.0, "end": 500.0, "text": " We need already designed to already design this, okay?", "tokens": [51664, 492, 643, 1217, 4761, 281, 1217, 1715, 341, 11, 1392, 30, 51814], "temperature": 0.0, "avg_logprob": -0.18637053499516754, "compression_ratio": 1.7302904564315353, "no_speech_prob": 0.05577635020017624}, {"id": 98, "seek": 50000, "start": 500.0, "end": 507.0, "text": " And then in this slide I have, yeah, well, this is where the IPaTura service comes into play, okay?", "tokens": [50364, 400, 550, 294, 341, 4137, 286, 362, 11, 1338, 11, 731, 11, 341, 307, 689, 264, 8671, 64, 51, 2991, 2643, 1487, 666, 862, 11, 1392, 30, 50714], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 99, "seek": 50000, "start": 507.0, "end": 512.0, "text": " And then these are kind of a list of requirements when redesigning something, yeah.", "tokens": [50714, 400, 550, 613, 366, 733, 295, 257, 1329, 295, 7728, 562, 16762, 9676, 746, 11, 1338, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 100, "seek": 50000, "start": 512.0, "end": 516.0, "text": " We are thinking about to support all these things at the same time.", "tokens": [50964, 492, 366, 1953, 466, 281, 1406, 439, 613, 721, 412, 264, 912, 565, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 101, "seek": 50000, "start": 516.0, "end": 520.0, "text": " So we need a common API for managing identities.", "tokens": [51164, 407, 321, 643, 257, 2689, 9362, 337, 11642, 24239, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 102, "seek": 50000, "start": 520.0, "end": 523.0, "text": " So the requirements are to be able to read and write.", "tokens": [51364, 407, 264, 7728, 366, 281, 312, 1075, 281, 1401, 293, 2464, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 103, "seek": 50000, "start": 523.0, "end": 528.0, "text": " This is the most important one also to authenticate users from any integration domain.", "tokens": [51514, 639, 307, 264, 881, 1021, 472, 611, 281, 9214, 8700, 5022, 490, 604, 10980, 9274, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12977474386041815, "compression_ratio": 1.6333333333333333, "no_speech_prob": 0.003693095874041319}, {"id": 104, "seek": 52800, "start": 528.0, "end": 535.0, "text": " At the same time, now that we are redesigning everything, we are going to try to simplify the integration.", "tokens": [50364, 1711, 264, 912, 565, 11, 586, 300, 321, 366, 16762, 9676, 1203, 11, 321, 366, 516, 281, 853, 281, 20460, 264, 10980, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12380864309227985, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.014703821390867233}, {"id": 105, "seek": 52800, "start": 535.0, "end": 541.0, "text": " And one idea is to replace all the existing plugins by just one plugin for all of them.", "tokens": [50714, 400, 472, 1558, 307, 281, 7406, 439, 264, 6741, 33759, 538, 445, 472, 23407, 337, 439, 295, 552, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12380864309227985, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.014703821390867233}, {"id": 106, "seek": 52800, "start": 541.0, "end": 545.0, "text": " So you can easily configure and then you can connect with anything.", "tokens": [51014, 407, 291, 393, 3612, 22162, 293, 550, 291, 393, 1745, 365, 1340, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12380864309227985, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.014703821390867233}, {"id": 107, "seek": 52800, "start": 545.0, "end": 549.0, "text": " Another one is the cloud-friendly, maintainable solution.", "tokens": [51214, 3996, 472, 307, 264, 4588, 12, 22864, 11, 6909, 712, 3827, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12380864309227985, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.014703821390867233}, {"id": 108, "seek": 52800, "start": 549.0, "end": 553.0, "text": " Yeah, we need to get rid of this limitation about deployment.", "tokens": [51414, 865, 11, 321, 643, 281, 483, 3973, 295, 341, 27432, 466, 19317, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12380864309227985, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.014703821390867233}, {"id": 109, "seek": 55300, "start": 553.0, "end": 557.0, "text": " We need to get a key clock and this is in the same container.", "tokens": [50364, 492, 643, 281, 483, 257, 2141, 7830, 293, 341, 307, 294, 264, 912, 10129, 13, 50564], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 110, "seek": 55300, "start": 557.0, "end": 561.0, "text": " This is kind of difficult without performance impact.", "tokens": [50564, 639, 307, 733, 295, 2252, 1553, 3389, 2712, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 111, "seek": 55300, "start": 561.0, "end": 564.0, "text": " That's always there.", "tokens": [50764, 663, 311, 1009, 456, 13, 50914], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 112, "seek": 55300, "start": 564.0, "end": 567.0, "text": " And ideally we shouldn't reinvent the wheel.", "tokens": [50914, 400, 22915, 321, 4659, 380, 33477, 264, 5589, 13, 51064], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 113, "seek": 55300, "start": 567.0, "end": 572.0, "text": " So we need to ideally rely on existing open source projects, okay?", "tokens": [51064, 407, 321, 643, 281, 22915, 10687, 322, 6741, 1269, 4009, 4455, 11, 1392, 30, 51314], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 114, "seek": 55300, "start": 572.0, "end": 576.0, "text": " So then, now this is a question for you.", "tokens": [51314, 407, 550, 11, 586, 341, 307, 257, 1168, 337, 291, 13, 51514], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 115, "seek": 55300, "start": 576.0, "end": 579.0, "text": " How many of you know about the scheme?", "tokens": [51514, 1012, 867, 295, 291, 458, 466, 264, 12232, 30, 51664], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 116, "seek": 55300, "start": 579.0, "end": 581.0, "text": " You can raise your hand.", "tokens": [51664, 509, 393, 5300, 428, 1011, 13, 51764], "temperature": 0.0, "avg_logprob": -0.24049504597981772, "compression_ratio": 1.5347826086956522, "no_speech_prob": 0.04229912534356117}, {"id": 117, "seek": 58100, "start": 581.0, "end": 584.0, "text": " That's that kind of the whole part of the room.", "tokens": [50364, 663, 311, 300, 733, 295, 264, 1379, 644, 295, 264, 1808, 13, 50514], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 118, "seek": 58100, "start": 584.0, "end": 585.0, "text": " That's nice.", "tokens": [50514, 663, 311, 1481, 13, 50564], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 119, "seek": 58100, "start": 585.0, "end": 590.0, "text": " So it stands for system for cross-domain identity management.", "tokens": [50564, 407, 309, 7382, 337, 1185, 337, 3278, 12, 4121, 491, 6575, 4592, 13, 50814], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 120, "seek": 58100, "start": 590.0, "end": 592.0, "text": " Okay, this is a protocol.", "tokens": [50814, 1033, 11, 341, 307, 257, 10336, 13, 50914], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 121, "seek": 58100, "start": 592.0, "end": 600.0, "text": " This protocol finds or helps with this chain of user identity data between different identity management systems.", "tokens": [50914, 639, 10336, 10704, 420, 3665, 365, 341, 5021, 295, 4195, 6575, 1412, 1296, 819, 6575, 4592, 3652, 13, 51314], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 122, "seek": 58100, "start": 600.0, "end": 606.0, "text": " It simplifies the provisioning, the updating of attributes,", "tokens": [51314, 467, 6883, 11221, 264, 17225, 278, 11, 264, 25113, 295, 17212, 11, 51614], "temperature": 0.0, "avg_logprob": -0.18588975667953492, "compression_ratio": 1.61, "no_speech_prob": 0.018234318122267723}, {"id": 123, "seek": 60600, "start": 606.0, "end": 613.0, "text": " also the provisioning of users, of accounts, and it helps with interoperability.", "tokens": [50364, 611, 264, 17225, 278, 295, 5022, 11, 295, 9402, 11, 293, 309, 3665, 365, 728, 7192, 2310, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1416481998231676, "compression_ratio": 1.446808510638298, "no_speech_prob": 0.005404992029070854}, {"id": 124, "seek": 60600, "start": 613.0, "end": 619.0, "text": " Okay, so it sounds like this is what we need, right?", "tokens": [50714, 1033, 11, 370, 309, 3263, 411, 341, 307, 437, 321, 643, 11, 558, 30, 51014], "temperature": 0.0, "avg_logprob": -0.1416481998231676, "compression_ratio": 1.446808510638298, "no_speech_prob": 0.005404992029070854}, {"id": 125, "seek": 60600, "start": 619.0, "end": 627.0, "text": " Yeah, so the idea there is to implement a scheme server for free PA as a backend", "tokens": [51014, 865, 11, 370, 264, 1558, 456, 307, 281, 4445, 257, 12232, 7154, 337, 1737, 17718, 382, 257, 38087, 51414], "temperature": 0.0, "avg_logprob": -0.1416481998231676, "compression_ratio": 1.446808510638298, "no_speech_prob": 0.005404992029070854}, {"id": 126, "seek": 60600, "start": 627.0, "end": 631.0, "text": " to process all the requests coming from key clock, right?", "tokens": [51414, 281, 1399, 439, 264, 12475, 1348, 490, 2141, 7830, 11, 558, 30, 51614], "temperature": 0.0, "avg_logprob": -0.1416481998231676, "compression_ratio": 1.446808510638298, "no_speech_prob": 0.005404992029070854}, {"id": 127, "seek": 63100, "start": 631.0, "end": 637.0, "text": " So, yeah, the idea is to don't start something from scratch.", "tokens": [50364, 407, 11, 1338, 11, 264, 1558, 307, 281, 500, 380, 722, 746, 490, 8459, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11532320658365885, "compression_ratio": 1.4572864321608041, "no_speech_prob": 0.016389723867177963}, {"id": 128, "seek": 63100, "start": 637.0, "end": 647.0, "text": " So based on this protocol, I think there are kind of 10 or 10 to 15 projects already implementing this protocol.", "tokens": [50664, 407, 2361, 322, 341, 10336, 11, 286, 519, 456, 366, 733, 295, 1266, 420, 1266, 281, 2119, 4455, 1217, 18114, 341, 10336, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11532320658365885, "compression_ratio": 1.4572864321608041, "no_speech_prob": 0.016389723867177963}, {"id": 129, "seek": 63100, "start": 647.0, "end": 653.0, "text": " And we were paying attention to one in particular, which is Django scheme 2.", "tokens": [51164, 400, 321, 645, 6229, 3202, 281, 472, 294, 1729, 11, 597, 307, 33464, 17150, 12232, 568, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11532320658365885, "compression_ratio": 1.4572864321608041, "no_speech_prob": 0.016389723867177963}, {"id": 130, "seek": 63100, "start": 653.0, "end": 655.0, "text": " And this is why it's written in Python.", "tokens": [51464, 400, 341, 307, 983, 309, 311, 3720, 294, 15329, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11532320658365885, "compression_ratio": 1.4572864321608041, "no_speech_prob": 0.016389723867177963}, {"id": 131, "seek": 65500, "start": 656.0, "end": 662.0, "text": " And the reason is because free PA is also using Python, especially the API.", "tokens": [50414, 400, 264, 1778, 307, 570, 1737, 17718, 307, 611, 1228, 15329, 11, 2318, 264, 9362, 13, 50714], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 132, "seek": 65500, "start": 662.0, "end": 664.0, "text": " So it's very similar.", "tokens": [50714, 407, 309, 311, 588, 2531, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 133, "seek": 65500, "start": 664.0, "end": 671.0, "text": " I mean, the interconnection between this, the scheme server and free PA will be some sort of straightforward.", "tokens": [50814, 286, 914, 11, 264, 26253, 313, 1296, 341, 11, 264, 12232, 7154, 293, 1737, 17718, 486, 312, 512, 1333, 295, 15325, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 134, "seek": 65500, "start": 671.0, "end": 675.0, "text": " So, okay, let's start building it.", "tokens": [51164, 407, 11, 1392, 11, 718, 311, 722, 2390, 309, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 135, "seek": 65500, "start": 675.0, "end": 677.0, "text": " Let's start building a new service.", "tokens": [51364, 961, 311, 722, 2390, 257, 777, 2643, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 136, "seek": 65500, "start": 677.0, "end": 681.0, "text": " Okay, we mentioned that it must be a cloud-finally solution.", "tokens": [51464, 1033, 11, 321, 2835, 300, 309, 1633, 312, 257, 4588, 12, 5194, 379, 3827, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 137, "seek": 65500, "start": 681.0, "end": 682.0, "text": " So we are targeting a container.", "tokens": [51664, 407, 321, 366, 17918, 257, 10129, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 138, "seek": 65500, "start": 682.0, "end": 684.0, "text": " This is a container.", "tokens": [51714, 639, 307, 257, 10129, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13267821017826828, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.03129361569881439}, {"id": 139, "seek": 68400, "start": 684.0, "end": 686.0, "text": " Okay, on the left we have key clock.", "tokens": [50364, 1033, 11, 322, 264, 1411, 321, 362, 2141, 7830, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1647481918334961, "compression_ratio": 1.62, "no_speech_prob": 0.008540955372154713}, {"id": 140, "seek": 68400, "start": 686.0, "end": 687.0, "text": " On the right we have free PA.", "tokens": [50464, 1282, 264, 558, 321, 362, 1737, 17718, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1647481918334961, "compression_ratio": 1.62, "no_speech_prob": 0.008540955372154713}, {"id": 141, "seek": 68400, "start": 687.0, "end": 697.0, "text": " So the first thing to do to add into the container is the Django framework because there is where we have the implementation of the scheme based on an open source project.", "tokens": [50514, 407, 264, 700, 551, 281, 360, 281, 909, 666, 264, 10129, 307, 264, 33464, 17150, 8388, 570, 456, 307, 689, 321, 362, 264, 11420, 295, 264, 12232, 2361, 322, 364, 1269, 4009, 1716, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1647481918334961, "compression_ratio": 1.62, "no_speech_prob": 0.008540955372154713}, {"id": 142, "seek": 68400, "start": 697.0, "end": 708.0, "text": " Okay, this project in the container is already exposing some sort of endpoints.", "tokens": [51014, 1033, 11, 341, 1716, 294, 264, 10129, 307, 1217, 33178, 512, 1333, 295, 917, 20552, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1647481918334961, "compression_ratio": 1.62, "no_speech_prob": 0.008540955372154713}, {"id": 143, "seek": 68400, "start": 708.0, "end": 710.0, "text": " Okay.", "tokens": [51564, 1033, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1647481918334961, "compression_ratio": 1.62, "no_speech_prob": 0.008540955372154713}, {"id": 144, "seek": 71000, "start": 710.0, "end": 712.0, "text": " What is the next requirement?", "tokens": [50364, 708, 307, 264, 958, 11695, 30, 50464], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 145, "seek": 71000, "start": 712.0, "end": 722.0, "text": " It must be secure enough, you know, the Django framework implements an HTTP server, but this server is kind of for developers.", "tokens": [50464, 467, 1633, 312, 7144, 1547, 11, 291, 458, 11, 264, 33464, 17150, 8388, 704, 17988, 364, 33283, 7154, 11, 457, 341, 7154, 307, 733, 295, 337, 8849, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 146, "seek": 71000, "start": 722.0, "end": 724.0, "text": " It's not, I mean, it's not protected at all.", "tokens": [50964, 467, 311, 406, 11, 286, 914, 11, 309, 311, 406, 10594, 412, 439, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 147, "seek": 71000, "start": 724.0, "end": 727.0, "text": " So, okay, so we can include Apache.", "tokens": [51064, 407, 11, 1392, 11, 370, 321, 393, 4090, 46597, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 148, "seek": 71000, "start": 727.0, "end": 729.0, "text": " It's a well-known server.", "tokens": [51214, 467, 311, 257, 731, 12, 6861, 7154, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 149, "seek": 71000, "start": 729.0, "end": 735.0, "text": " And we can enable HTTPS for production-driving environments.", "tokens": [51314, 400, 321, 393, 9528, 11751, 51, 6273, 337, 4265, 12, 47094, 12388, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 150, "seek": 71000, "start": 735.0, "end": 737.0, "text": " So, all right, we add Apache.", "tokens": [51614, 407, 11, 439, 558, 11, 321, 909, 46597, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15975882456852838, "compression_ratio": 1.51931330472103, "no_speech_prob": 0.01477639377117157}, {"id": 151, "seek": 73700, "start": 737.0, "end": 743.0, "text": " We connect Apache through the WBSGI connector to Python, and this is from Django.", "tokens": [50364, 492, 1745, 46597, 807, 264, 343, 8176, 26252, 19127, 281, 15329, 11, 293, 341, 307, 490, 33464, 17150, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1548517205741968, "compression_ratio": 1.4540816326530612, "no_speech_prob": 0.022745056077837944}, {"id": 152, "seek": 73700, "start": 743.0, "end": 748.0, "text": " Okay, now we have a secure API.", "tokens": [50664, 1033, 11, 586, 321, 362, 257, 7144, 9362, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1548517205741968, "compression_ratio": 1.4540816326530612, "no_speech_prob": 0.022745056077837944}, {"id": 153, "seek": 73700, "start": 748.0, "end": 751.0, "text": " Okay, what is the next thing?", "tokens": [50914, 1033, 11, 437, 307, 264, 958, 551, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1548517205741968, "compression_ratio": 1.4540816326530612, "no_speech_prob": 0.022745056077837944}, {"id": 154, "seek": 73700, "start": 751.0, "end": 753.0, "text": " Yeah, it must provide a generic API.", "tokens": [51064, 865, 11, 309, 1633, 2893, 257, 19577, 9362, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1548517205741968, "compression_ratio": 1.4540816326530612, "no_speech_prob": 0.022745056077837944}, {"id": 155, "seek": 73700, "start": 753.0, "end": 766.0, "text": " So, let's rely, yeah, the breach can, at the same time, I mean, the idea is to, this is a breach, right?", "tokens": [51164, 407, 11, 718, 311, 10687, 11, 1338, 11, 264, 31086, 393, 11, 412, 264, 912, 565, 11, 286, 914, 11, 264, 1558, 307, 281, 11, 341, 307, 257, 31086, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.1548517205741968, "compression_ratio": 1.4540816326530612, "no_speech_prob": 0.022745056077837944}, {"id": 156, "seek": 76600, "start": 766.0, "end": 774.0, "text": " And then we have connected to Key Clock already, so through the user federation storage and other identity providers, brokers,", "tokens": [50364, 400, 550, 321, 362, 4582, 281, 12759, 46986, 1217, 11, 370, 807, 264, 4195, 4636, 5053, 6725, 293, 661, 6575, 11330, 11, 47549, 11, 50764], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 157, "seek": 76600, "start": 774.0, "end": 777.0, "text": " we can connect to the container.", "tokens": [50764, 321, 393, 1745, 281, 264, 10129, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 158, "seek": 76600, "start": 777.0, "end": 786.0, "text": " This scheme protocol will help us to translate, and so we can make another call to free API through the API.", "tokens": [50914, 639, 12232, 10336, 486, 854, 505, 281, 13799, 11, 293, 370, 321, 393, 652, 1071, 818, 281, 1737, 9362, 807, 264, 9362, 13, 51364], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 159, "seek": 76600, "start": 786.0, "end": 789.0, "text": " And this is how, basically, how we connect everything.", "tokens": [51364, 400, 341, 307, 577, 11, 1936, 11, 577, 321, 1745, 1203, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 160, "seek": 76600, "start": 789.0, "end": 792.0, "text": " And it's generic because it's based on the scheme.", "tokens": [51514, 400, 309, 311, 19577, 570, 309, 311, 2361, 322, 264, 12232, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 161, "seek": 76600, "start": 792.0, "end": 793.0, "text": " All right.", "tokens": [51664, 1057, 558, 13, 51714], "temperature": 0.0, "avg_logprob": -0.16866499248303865, "compression_ratio": 1.63135593220339, "no_speech_prob": 0.03151245415210724}, {"id": 162, "seek": 79300, "start": 793.0, "end": 798.0, "text": " And then, yeah, we need, I was mentioning that, we need to read and write.", "tokens": [50364, 400, 550, 11, 1338, 11, 321, 643, 11, 286, 390, 18315, 300, 11, 321, 643, 281, 1401, 293, 2464, 13, 50614], "temperature": 0.0, "avg_logprob": -0.159098313984118, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.005761409178376198}, {"id": 163, "seek": 79300, "start": 798.0, "end": 803.0, "text": " Okay, so we implement two interfaces to connect to free API.", "tokens": [50614, 1033, 11, 370, 321, 4445, 732, 28416, 281, 1745, 281, 1737, 9362, 13, 50864], "temperature": 0.0, "avg_logprob": -0.159098313984118, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.005761409178376198}, {"id": 164, "seek": 79300, "start": 803.0, "end": 811.0, "text": " And then, about the performance, well, deploying a container with a start service,", "tokens": [50864, 400, 550, 11, 466, 264, 3389, 11, 731, 11, 34198, 257, 10129, 365, 257, 722, 2643, 11, 51264], "temperature": 0.0, "avg_logprob": -0.159098313984118, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.005761409178376198}, {"id": 165, "seek": 79300, "start": 811.0, "end": 815.0, "text": " talking to free API, making API calls is kind of expensive.", "tokens": [51264, 1417, 281, 1737, 9362, 11, 1455, 9362, 5498, 307, 733, 295, 5124, 13, 51464], "temperature": 0.0, "avg_logprob": -0.159098313984118, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.005761409178376198}, {"id": 166, "seek": 79300, "start": 815.0, "end": 821.0, "text": " Okay, but no problem because we can rely on SSSD because SSSD is implementing a catch.", "tokens": [51464, 1033, 11, 457, 572, 1154, 570, 321, 393, 10687, 322, 12238, 23969, 570, 12238, 23969, 307, 18114, 257, 3745, 13, 51764], "temperature": 0.0, "avg_logprob": -0.159098313984118, "compression_ratio": 1.6515837104072397, "no_speech_prob": 0.005761409178376198}, {"id": 167, "seek": 82100, "start": 821.0, "end": 822.0, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 168, "seek": 82100, "start": 822.0, "end": 825.0, "text": " And then, okay, let's include SSSD in the container, right?", "tokens": [50414, 400, 550, 11, 1392, 11, 718, 311, 4090, 12238, 23969, 294, 264, 10129, 11, 558, 30, 50564], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 169, "seek": 82100, "start": 825.0, "end": 829.0, "text": " Let's connect through the Django, through the divorce info pipe.", "tokens": [50564, 961, 311, 1745, 807, 264, 33464, 17150, 11, 807, 264, 16052, 13614, 11240, 13, 50764], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 170, "seek": 82100, "start": 829.0, "end": 835.0, "text": " And this is how we can access to the user materials, identity materials, right?", "tokens": [50764, 400, 341, 307, 577, 321, 393, 2105, 281, 264, 4195, 5319, 11, 6575, 5319, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 171, "seek": 82100, "start": 835.0, "end": 837.0, "text": " All right.", "tokens": [51064, 1057, 558, 13, 51164], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 172, "seek": 82100, "start": 837.0, "end": 843.0, "text": " So, looks like we are almost done, but we mentioned that it must be generic enough.", "tokens": [51164, 407, 11, 1542, 411, 321, 366, 1920, 1096, 11, 457, 321, 2835, 300, 309, 1633, 312, 19577, 1547, 13, 51464], "temperature": 0.0, "avg_logprob": -0.140989247490378, "compression_ratio": 1.525, "no_speech_prob": 0.009369599632918835}, {"id": 173, "seek": 84300, "start": 844.0, "end": 851.0, "text": " So, these interfaces, the right and the right one, we can easily configure them to talk,", "tokens": [50414, 407, 11, 613, 28416, 11, 264, 558, 293, 264, 558, 472, 11, 321, 393, 3612, 22162, 552, 281, 751, 11, 50764], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 174, "seek": 84300, "start": 851.0, "end": 859.0, "text": " not only to free API, but also to any Active Directory, and through LDAP and also any", "tokens": [50764, 406, 787, 281, 1737, 9362, 11, 457, 611, 281, 604, 26635, 49598, 11, 293, 807, 33936, 4715, 293, 611, 604, 51164], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 175, "seek": 84300, "start": 859.0, "end": 863.0, "text": " RojHDS Directory server, right?", "tokens": [51164, 3101, 73, 39, 11844, 49598, 7154, 11, 558, 30, 51364], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 176, "seek": 84300, "start": 863.0, "end": 867.0, "text": " Okay, so this is basically the idea to unify.", "tokens": [51364, 1033, 11, 370, 341, 307, 1936, 264, 1558, 281, 517, 2505, 13, 51564], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 177, "seek": 84300, "start": 867.0, "end": 868.0, "text": " Okay.", "tokens": [51564, 1033, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 178, "seek": 84300, "start": 868.0, "end": 871.0, "text": " And what about key clock?", "tokens": [51614, 400, 437, 466, 2141, 7830, 30, 51764], "temperature": 0.0, "avg_logprob": -0.3226521273693406, "compression_ratio": 1.4639175257731958, "no_speech_prob": 0.09188558161258698}, {"id": 179, "seek": 87100, "start": 871.0, "end": 877.0, "text": " Yes, that is support the scheme calls because, well, we have implemented a scheme server.", "tokens": [50364, 1079, 11, 300, 307, 1406, 264, 12232, 5498, 570, 11, 731, 11, 321, 362, 12270, 257, 12232, 7154, 13, 50664], "temperature": 0.0, "avg_logprob": -0.18116531372070313, "compression_ratio": 1.580110497237569, "no_speech_prob": 0.01966780424118042}, {"id": 180, "seek": 87100, "start": 877.0, "end": 887.0, "text": " It's pushing a generic API, but key clock, well, doesn't support the scheme calls as a client, right?", "tokens": [50664, 467, 311, 7380, 257, 19577, 9362, 11, 457, 2141, 7830, 11, 731, 11, 1177, 380, 1406, 264, 12232, 5498, 382, 257, 6423, 11, 558, 30, 51164], "temperature": 0.0, "avg_logprob": -0.18116531372070313, "compression_ratio": 1.580110497237569, "no_speech_prob": 0.01966780424118042}, {"id": 181, "seek": 87100, "start": 887.0, "end": 895.0, "text": " So, okay, as Alessandro mentioned, there is another, well, I mentioned that there are two ways", "tokens": [51164, 407, 11, 1392, 11, 382, 967, 442, 29173, 2835, 11, 456, 307, 1071, 11, 731, 11, 286, 2835, 300, 456, 366, 732, 2098, 51564], "temperature": 0.0, "avg_logprob": -0.18116531372070313, "compression_ratio": 1.580110497237569, "no_speech_prob": 0.01966780424118042}, {"id": 182, "seek": 89500, "start": 895.0, "end": 900.0, "text": " to integrate user federation with an identity management system.", "tokens": [50364, 281, 13365, 4195, 4636, 5053, 365, 364, 6575, 4592, 1185, 13, 50614], "temperature": 0.0, "avg_logprob": -0.18261343638102215, "compression_ratio": 1.6542056074766356, "no_speech_prob": 0.06027818098664284}, {"id": 183, "seek": 89500, "start": 900.0, "end": 903.0, "text": " Elavanidian, the other one is SSD, but there is a third one.", "tokens": [50614, 2699, 21071, 327, 952, 11, 264, 661, 472, 307, 30262, 11, 457, 456, 307, 257, 2636, 472, 13, 50764], "temperature": 0.0, "avg_logprob": -0.18261343638102215, "compression_ratio": 1.6542056074766356, "no_speech_prob": 0.06027818098664284}, {"id": 184, "seek": 89500, "start": 903.0, "end": 911.0, "text": " The third one is that you can implement your own user data connector key clock.", "tokens": [50764, 440, 2636, 472, 307, 300, 291, 393, 4445, 428, 1065, 4195, 1412, 19127, 2141, 7830, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18261343638102215, "compression_ratio": 1.6542056074766356, "no_speech_prob": 0.06027818098664284}, {"id": 185, "seek": 89500, "start": 911.0, "end": 913.0, "text": " So, then this is what we did, basically.", "tokens": [51164, 407, 11, 550, 341, 307, 437, 321, 630, 11, 1936, 13, 51264], "temperature": 0.0, "avg_logprob": -0.18261343638102215, "compression_ratio": 1.6542056074766356, "no_speech_prob": 0.06027818098664284}, {"id": 186, "seek": 89500, "start": 913.0, "end": 922.0, "text": " We implemented, and this is another project you have in GitHub, and it's basically a custom user federation", "tokens": [51264, 492, 12270, 11, 293, 341, 307, 1071, 1716, 291, 362, 294, 23331, 11, 293, 309, 311, 1936, 257, 2375, 4195, 4636, 5053, 51714], "temperature": 0.0, "avg_logprob": -0.18261343638102215, "compression_ratio": 1.6542056074766356, "no_speech_prob": 0.06027818098664284}, {"id": 187, "seek": 92200, "start": 922.0, "end": 927.0, "text": " that is capable of acting as a scheme client, all right?", "tokens": [50364, 300, 307, 8189, 295, 6577, 382, 257, 12232, 6423, 11, 439, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 188, "seek": 92200, "start": 927.0, "end": 930.0, "text": " And this is what we need in key clock to connect with the server.", "tokens": [50614, 400, 341, 307, 437, 321, 643, 294, 2141, 7830, 281, 1745, 365, 264, 7154, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 189, "seek": 92200, "start": 930.0, "end": 932.0, "text": " All right, and this is how it looks like.", "tokens": [50764, 1057, 558, 11, 293, 341, 307, 577, 309, 1542, 411, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 190, "seek": 92200, "start": 932.0, "end": 935.0, "text": " You go to key clock, and then you will see all these options.", "tokens": [50864, 509, 352, 281, 2141, 7830, 11, 293, 550, 291, 486, 536, 439, 613, 3956, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 191, "seek": 92200, "start": 935.0, "end": 938.0, "text": " You will see parameters for connecting to the bridge.", "tokens": [51014, 509, 486, 536, 9834, 337, 11015, 281, 264, 7283, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 192, "seek": 92200, "start": 938.0, "end": 942.0, "text": " It's basically the server URL and the username and password,", "tokens": [51164, 467, 311, 1936, 264, 7154, 12905, 293, 264, 30351, 293, 11524, 11, 51364], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 193, "seek": 92200, "start": 942.0, "end": 946.0, "text": " but, well, we have other authentication mechanisms, probably, but this is basically,", "tokens": [51364, 457, 11, 731, 11, 321, 362, 661, 26643, 15902, 11, 1391, 11, 457, 341, 307, 1936, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 194, "seek": 92200, "start": 946.0, "end": 950.0, "text": " you specify the details about the integration domain.", "tokens": [51564, 291, 16500, 264, 4365, 466, 264, 10980, 9274, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1270830233891805, "compression_ratio": 1.7266187050359711, "no_speech_prob": 0.03131024166941643}, {"id": 195, "seek": 95000, "start": 950.0, "end": 960.0, "text": " You can choose between the type IPA, is free IPA, you can choose AD, but also a lab.", "tokens": [50364, 509, 393, 2826, 1296, 264, 2010, 8671, 32, 11, 307, 1737, 8671, 32, 11, 291, 393, 2826, 9135, 11, 457, 611, 257, 2715, 13, 50864], "temperature": 0.0, "avg_logprob": -0.19858818962460473, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.007367127109318972}, {"id": 196, "seek": 95000, "start": 960.0, "end": 967.0, "text": " So, this is just for summing up, and then if we combine both projects, then we have it.", "tokens": [50864, 407, 11, 341, 307, 445, 337, 2408, 2810, 493, 11, 293, 550, 498, 321, 10432, 1293, 4455, 11, 550, 321, 362, 309, 13, 51214], "temperature": 0.0, "avg_logprob": -0.19858818962460473, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.007367127109318972}, {"id": 197, "seek": 95000, "start": 967.0, "end": 974.0, "text": " And let's say that this one, which is the server running in a container,", "tokens": [51214, 400, 718, 311, 584, 300, 341, 472, 11, 597, 307, 264, 7154, 2614, 294, 257, 10129, 11, 51564], "temperature": 0.0, "avg_logprob": -0.19858818962460473, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.007367127109318972}, {"id": 198, "seek": 95000, "start": 974.0, "end": 977.0, "text": " is basically supposing a lot of endpoints.", "tokens": [51564, 307, 1936, 1003, 6110, 257, 688, 295, 917, 20552, 13, 51714], "temperature": 0.0, "avg_logprob": -0.19858818962460473, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.007367127109318972}, {"id": 199, "seek": 97700, "start": 977.0, "end": 983.0, "text": " For instance, there is one, which is called domains, is kind of an administrative endpoint.", "tokens": [50364, 1171, 5197, 11, 456, 307, 472, 11, 597, 307, 1219, 25514, 11, 307, 733, 295, 364, 17900, 35795, 13, 50664], "temperature": 0.0, "avg_logprob": -0.22153225573864613, "compression_ratio": 1.626086956521739, "no_speech_prob": 0.002417181618511677}, {"id": 200, "seek": 97700, "start": 983.0, "end": 989.0, "text": " It's basically when key clock tries to enroll with a scheme, is sending some details,", "tokens": [50664, 467, 311, 1936, 562, 2141, 7830, 9898, 281, 12266, 365, 257, 12232, 11, 307, 7750, 512, 4365, 11, 50964], "temperature": 0.0, "avg_logprob": -0.22153225573864613, "compression_ratio": 1.626086956521739, "no_speech_prob": 0.002417181618511677}, {"id": 201, "seek": 97700, "start": 989.0, "end": 993.0, "text": " and then a scheme is implemented on the automation to make an enrollment", "tokens": [50964, 293, 550, 257, 12232, 307, 12270, 322, 264, 17769, 281, 652, 364, 22420, 51164], "temperature": 0.0, "avg_logprob": -0.22153225573864613, "compression_ratio": 1.626086956521739, "no_speech_prob": 0.002417181618511677}, {"id": 202, "seek": 97700, "start": 993.0, "end": 996.0, "text": " with any other identity mind-saving system, right?", "tokens": [51164, 365, 604, 661, 6575, 1575, 12, 82, 6152, 1185, 11, 558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.22153225573864613, "compression_ratio": 1.626086956521739, "no_speech_prob": 0.002417181618511677}, {"id": 203, "seek": 97700, "start": 996.0, "end": 1003.0, "text": " And then once this is done, key clock plug-in can simply make user calls", "tokens": [51314, 400, 550, 1564, 341, 307, 1096, 11, 2141, 7830, 5452, 12, 259, 393, 2935, 652, 4195, 5498, 51664], "temperature": 0.0, "avg_logprob": -0.22153225573864613, "compression_ratio": 1.626086956521739, "no_speech_prob": 0.002417181618511677}, {"id": 204, "seek": 100300, "start": 1003.0, "end": 1009.0, "text": " to the user federation storage to fetch for users or write and read whatever.", "tokens": [50364, 281, 264, 4195, 4636, 5053, 6725, 281, 23673, 337, 5022, 420, 2464, 293, 1401, 2035, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 205, "seek": 100300, "start": 1009.0, "end": 1013.0, "text": " So, yeah, it's important to note that key clock plug-in now,", "tokens": [50664, 407, 11, 1338, 11, 309, 311, 1021, 281, 3637, 300, 2141, 7830, 5452, 12, 259, 586, 11, 50864], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 206, "seek": 100300, "start": 1013.0, "end": 1019.0, "text": " it doesn't communicate directly with the databases or with the other identity management,", "tokens": [50864, 309, 1177, 380, 7890, 3838, 365, 264, 22380, 420, 365, 264, 661, 6575, 4592, 11, 51164], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 207, "seek": 100300, "start": 1019.0, "end": 1025.0, "text": " it's kind of only talking to the scheme, which is a container.", "tokens": [51164, 309, 311, 733, 295, 787, 1417, 281, 264, 12232, 11, 597, 307, 257, 10129, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 208, "seek": 100300, "start": 1025.0, "end": 1028.0, "text": " So, let's go for a quick demo.", "tokens": [51464, 407, 11, 718, 311, 352, 337, 257, 1702, 10723, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 209, "seek": 100300, "start": 1028.0, "end": 1032.0, "text": " Yeah, this is, in the demo, this is what is going to happen.", "tokens": [51614, 865, 11, 341, 307, 11, 294, 264, 10723, 11, 341, 307, 437, 307, 516, 281, 1051, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13510075899270865, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.011599363759160042}, {"id": 210, "seek": 103200, "start": 1032.0, "end": 1036.0, "text": " Okay, basically, you will see key clock, you will see free APA,", "tokens": [50364, 1033, 11, 1936, 11, 291, 486, 536, 2141, 7830, 11, 291, 486, 536, 1737, 5372, 32, 11, 50564], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 211, "seek": 103200, "start": 1036.0, "end": 1039.0, "text": " and a container running in another host,", "tokens": [50564, 293, 257, 10129, 2614, 294, 1071, 3975, 11, 50714], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 212, "seek": 103200, "start": 1039.0, "end": 1044.0, "text": " and we will make an HTTP post-request to the domain's application in the bridge,", "tokens": [50714, 293, 321, 486, 652, 364, 33283, 2183, 12, 265, 20343, 281, 264, 9274, 311, 3861, 294, 264, 7283, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 213, "seek": 103200, "start": 1044.0, "end": 1048.0, "text": " and the bridge will be capable of doing all this automation,", "tokens": [50964, 293, 264, 7283, 486, 312, 8189, 295, 884, 439, 341, 17769, 11, 51164], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 214, "seek": 103200, "start": 1048.0, "end": 1052.0, "text": " because those are steps that they were done by the administrator in the past.", "tokens": [51164, 570, 729, 366, 4439, 300, 436, 645, 1096, 538, 264, 25529, 294, 264, 1791, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 215, "seek": 103200, "start": 1052.0, "end": 1058.0, "text": " I mean, if an administrator today wants to enroll user federation to free APA,", "tokens": [51364, 286, 914, 11, 498, 364, 25529, 965, 2738, 281, 12266, 4195, 4636, 5053, 281, 1737, 5372, 32, 11, 51664], "temperature": 0.0, "avg_logprob": -0.11917195736783222, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.03420773521065712}, {"id": 216, "seek": 105800, "start": 1058.0, "end": 1062.0, "text": " it's going to do a lot of automation, a lot of steps there,", "tokens": [50364, 309, 311, 516, 281, 360, 257, 688, 295, 17769, 11, 257, 688, 295, 4439, 456, 11, 50564], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 217, "seek": 105800, "start": 1062.0, "end": 1067.0, "text": " like file a service, the proper role with the proper privileges,", "tokens": [50564, 411, 3991, 257, 2643, 11, 264, 2296, 3090, 365, 264, 2296, 32588, 11, 50814], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 218, "seek": 105800, "start": 1067.0, "end": 1070.0, "text": " and generate key tabs, and blah, blah, blah, right?", "tokens": [50814, 293, 8460, 2141, 20743, 11, 293, 12288, 11, 12288, 11, 12288, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 219, "seek": 105800, "start": 1070.0, "end": 1072.0, "text": " So, this is fully automated now.", "tokens": [50964, 407, 11, 341, 307, 4498, 18473, 586, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 220, "seek": 105800, "start": 1072.0, "end": 1078.0, "text": " And once the other process is done, now key clock every time is looking for a user or something,", "tokens": [51064, 400, 1564, 264, 661, 1399, 307, 1096, 11, 586, 2141, 7830, 633, 565, 307, 1237, 337, 257, 4195, 420, 746, 11, 51364], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 221, "seek": 105800, "start": 1078.0, "end": 1082.0, "text": " it will make a generic call to a scheme server.", "tokens": [51364, 309, 486, 652, 257, 19577, 818, 281, 257, 12232, 7154, 13, 51564], "temperature": 0.0, "avg_logprob": -0.19574116185768364, "compression_ratio": 1.631336405529954, "no_speech_prob": 0.03657384589314461}, {"id": 222, "seek": 108200, "start": 1082.0, "end": 1088.0, "text": " So, what this whole looks like is a post to the scheme server,", "tokens": [50364, 407, 11, 437, 341, 1379, 1542, 411, 307, 257, 2183, 281, 264, 12232, 7154, 11, 50664], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 223, "seek": 108200, "start": 1088.0, "end": 1091.0, "text": " which is in JSON format through the recipe,", "tokens": [50664, 597, 307, 294, 31828, 7877, 807, 264, 6782, 11, 50814], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 224, "seek": 108200, "start": 1091.0, "end": 1096.0, "text": " and this service will translate that into an APA API call,", "tokens": [50814, 293, 341, 2643, 486, 13799, 300, 666, 364, 5372, 32, 9362, 818, 11, 51064], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 225, "seek": 108200, "start": 1096.0, "end": 1099.0, "text": " and it will make it to the domain.", "tokens": [51064, 293, 309, 486, 652, 309, 281, 264, 9274, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 226, "seek": 108200, "start": 1099.0, "end": 1104.0, "text": " Okay, so, yeah, I love the live demos,", "tokens": [51214, 1033, 11, 370, 11, 1338, 11, 286, 959, 264, 1621, 33788, 11, 51464], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 227, "seek": 108200, "start": 1104.0, "end": 1108.0, "text": " but I have to admit that today a little bit cold,", "tokens": [51464, 457, 286, 362, 281, 9796, 300, 965, 257, 707, 857, 3554, 11, 51664], "temperature": 0.0, "avg_logprob": -0.24652383441016787, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.03256641700863838}, {"id": 228, "seek": 110800, "start": 1108.0, "end": 1113.0, "text": " I have a recording, and yes, I think I want to do the real demo", "tokens": [50364, 286, 362, 257, 6613, 11, 293, 2086, 11, 286, 519, 286, 528, 281, 360, 264, 957, 10723, 50614], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 229, "seek": 110800, "start": 1113.0, "end": 1116.0, "text": " because I have all the infrastructure deployed in Red Hat,", "tokens": [50614, 570, 286, 362, 439, 264, 6896, 17826, 294, 4477, 15867, 11, 50764], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 230, "seek": 110800, "start": 1116.0, "end": 1118.0, "text": " and then this is everything recorded,", "tokens": [50764, 293, 550, 341, 307, 1203, 8287, 11, 50864], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 231, "seek": 110800, "start": 1118.0, "end": 1121.0, "text": " and I don't want to expose DNS names or internal IP addresses,", "tokens": [50864, 293, 286, 500, 380, 528, 281, 19219, 35153, 5288, 420, 6920, 8671, 16862, 11, 51014], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 232, "seek": 110800, "start": 1121.0, "end": 1123.0, "text": " so I have a video anyway.", "tokens": [51014, 370, 286, 362, 257, 960, 4033, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 233, "seek": 110800, "start": 1123.0, "end": 1127.0, "text": " And so, yeah, if this works...", "tokens": [51114, 400, 370, 11, 1338, 11, 498, 341, 1985, 485, 51314], "temperature": 0.0, "avg_logprob": -0.15572999398919601, "compression_ratio": 1.4814814814814814, "no_speech_prob": 0.011914410628378391}, {"id": 234, "seek": 112700, "start": 1127.0, "end": 1136.0, "text": " So, no.", "tokens": [50364, 407, 11, 572, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15946023506030702, "compression_ratio": 1.3305084745762712, "no_speech_prob": 0.12449784576892853}, {"id": 235, "seek": 112700, "start": 1136.0, "end": 1139.0, "text": " Okay, let me see what is going on here.", "tokens": [50814, 1033, 11, 718, 385, 536, 437, 307, 516, 322, 510, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15946023506030702, "compression_ratio": 1.3305084745762712, "no_speech_prob": 0.12449784576892853}, {"id": 236, "seek": 112700, "start": 1148.0, "end": 1151.0, "text": " So, very quickly, I have a quick one,", "tokens": [51414, 407, 11, 588, 2661, 11, 286, 362, 257, 1702, 472, 11, 51564], "temperature": 0.0, "avg_logprob": -0.15946023506030702, "compression_ratio": 1.3305084745762712, "no_speech_prob": 0.12449784576892853}, {"id": 237, "seek": 112700, "start": 1151.0, "end": 1153.0, "text": " so how many minutes do we have?", "tokens": [51564, 370, 577, 867, 2077, 360, 321, 362, 30, 51664], "temperature": 0.0, "avg_logprob": -0.15946023506030702, "compression_ratio": 1.3305084745762712, "no_speech_prob": 0.12449784576892853}, {"id": 238, "seek": 112700, "start": 1153.0, "end": 1156.0, "text": " Okay, then I have a three-minute video.", "tokens": [51664, 1033, 11, 550, 286, 362, 257, 1045, 12, 18256, 960, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15946023506030702, "compression_ratio": 1.3305084745762712, "no_speech_prob": 0.12449784576892853}, {"id": 239, "seek": 115600, "start": 1156.0, "end": 1171.0, "text": " So, yeah, there we go.", "tokens": [50364, 407, 11, 1338, 11, 456, 321, 352, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 240, "seek": 115600, "start": 1171.0, "end": 1174.0, "text": " So, yeah, the three consoles you see on the bottom,", "tokens": [51114, 407, 11, 1338, 11, 264, 1045, 28948, 291, 536, 322, 264, 2767, 11, 51264], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 241, "seek": 115600, "start": 1174.0, "end": 1176.0, "text": " the one on the left is key clock,", "tokens": [51264, 264, 472, 322, 264, 1411, 307, 2141, 7830, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 242, "seek": 115600, "start": 1176.0, "end": 1177.0, "text": " the one on the middle is the bridge,", "tokens": [51364, 264, 472, 322, 264, 2808, 307, 264, 7283, 11, 51414], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 243, "seek": 115600, "start": 1177.0, "end": 1179.0, "text": " and this one is free API.", "tokens": [51414, 293, 341, 472, 307, 1737, 9362, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 244, "seek": 115600, "start": 1179.0, "end": 1183.0, "text": " So, this screen is key clock, we are authenticating there,", "tokens": [51514, 407, 11, 341, 2568, 307, 2141, 7830, 11, 321, 366, 12466, 990, 456, 11, 51714], "temperature": 0.0, "avg_logprob": -0.14174969131882126, "compression_ratio": 1.6312056737588652, "no_speech_prob": 0.02397395484149456}, {"id": 245, "seek": 118300, "start": 1184.0, "end": 1188.0, "text": " and the same in free API, all right?", "tokens": [50414, 293, 264, 912, 294, 1737, 9362, 11, 439, 558, 30, 50614], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 246, "seek": 118300, "start": 1188.0, "end": 1190.0, "text": " Then we go to the user federation", "tokens": [50614, 1396, 321, 352, 281, 264, 4195, 4636, 5053, 50714], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 247, "seek": 118300, "start": 1190.0, "end": 1195.0, "text": " so that now we see it was quick, that was super quick.", "tokens": [50714, 370, 300, 586, 321, 536, 309, 390, 1702, 11, 300, 390, 1687, 1702, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 248, "seek": 118300, "start": 1195.0, "end": 1198.0, "text": " It's quicker than the speed of the light.", "tokens": [50964, 467, 311, 16255, 813, 264, 3073, 295, 264, 1442, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 249, "seek": 118300, "start": 1198.0, "end": 1200.0, "text": " So, yeah, I wanted to show you", "tokens": [51114, 407, 11, 1338, 11, 286, 1415, 281, 855, 291, 51214], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 250, "seek": 118300, "start": 1200.0, "end": 1203.0, "text": " that there is a new user federation storage there.", "tokens": [51214, 300, 456, 307, 257, 777, 4195, 4636, 5053, 6725, 456, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 251, "seek": 118300, "start": 1203.0, "end": 1204.0, "text": " Yeah, you see?", "tokens": [51364, 865, 11, 291, 536, 30, 51414], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 252, "seek": 118300, "start": 1204.0, "end": 1206.0, "text": " Wait.", "tokens": [51414, 3802, 13, 51514], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 253, "seek": 118300, "start": 1206.0, "end": 1209.0, "text": " Let's see if I can...", "tokens": [51514, 961, 311, 536, 498, 286, 393, 485, 51664], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 254, "seek": 118300, "start": 1209.0, "end": 1211.0, "text": " Yeah.", "tokens": [51664, 865, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15131909370422364, "compression_ratio": 1.5935828877005347, "no_speech_prob": 0.021129967644810677}, {"id": 255, "seek": 121100, "start": 1212.0, "end": 1214.0, "text": " So, these are the ones that Alexander was talking about", "tokens": [50414, 407, 11, 613, 366, 264, 2306, 300, 14845, 390, 1417, 466, 50514], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 256, "seek": 121100, "start": 1214.0, "end": 1217.0, "text": " in the previous presentation, and this is the new one, okay?", "tokens": [50514, 294, 264, 3894, 5860, 11, 293, 341, 307, 264, 777, 472, 11, 1392, 30, 50664], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 257, "seek": 121100, "start": 1217.0, "end": 1220.0, "text": " So, you will see that.", "tokens": [50664, 407, 11, 291, 486, 536, 300, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 258, "seek": 121100, "start": 1220.0, "end": 1223.0, "text": " All right, let's continue.", "tokens": [50814, 1057, 558, 11, 718, 311, 2354, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 259, "seek": 121100, "start": 1223.0, "end": 1227.0, "text": " So, yeah, key clock, free API.", "tokens": [50964, 407, 11, 1338, 11, 2141, 7830, 11, 1737, 9362, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 260, "seek": 121100, "start": 1227.0, "end": 1229.0, "text": " So, these are the services,", "tokens": [51164, 407, 11, 613, 366, 264, 3328, 11, 51264], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 261, "seek": 121100, "start": 1229.0, "end": 1233.0, "text": " because you know that the machine will configure things here automatically, okay?", "tokens": [51264, 570, 291, 458, 300, 264, 3479, 486, 22162, 721, 510, 6772, 11, 1392, 30, 51464], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 262, "seek": 121100, "start": 1236.0, "end": 1239.0, "text": " So, now I'm going to show you where the container is running.", "tokens": [51614, 407, 11, 586, 286, 478, 516, 281, 855, 291, 689, 264, 10129, 307, 2614, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14200111500267842, "compression_ratio": 1.6255506607929515, "no_speech_prob": 0.007327903527766466}, {"id": 263, "seek": 123900, "start": 1239.0, "end": 1241.0, "text": " This is a different host, by the way.", "tokens": [50364, 639, 307, 257, 819, 3975, 11, 538, 264, 636, 13, 50464], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 264, "seek": 123900, "start": 1241.0, "end": 1243.0, "text": " It's not tight to key clock anymore.", "tokens": [50464, 467, 311, 406, 4524, 281, 2141, 7830, 3602, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 265, "seek": 123900, "start": 1246.0, "end": 1247.0, "text": " So, that's the...", "tokens": [50714, 407, 11, 300, 311, 264, 485, 50764], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 266, "seek": 123900, "start": 1247.0, "end": 1249.0, "text": " If you do podman.ps, this is the container, right?", "tokens": [50764, 759, 291, 360, 2497, 1601, 13, 1878, 11, 341, 307, 264, 10129, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 267, "seek": 123900, "start": 1249.0, "end": 1250.0, "text": " For the demo.", "tokens": [50864, 1171, 264, 10723, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 268, "seek": 123900, "start": 1250.0, "end": 1255.0, "text": " It does the proper lead network mapping.", "tokens": [50914, 467, 775, 264, 2296, 1477, 3209, 18350, 13, 51164], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 269, "seek": 123900, "start": 1255.0, "end": 1257.0, "text": " You see, it's not running HTTP.", "tokens": [51164, 509, 536, 11, 309, 311, 406, 2614, 33283, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 270, "seek": 123900, "start": 1257.0, "end": 1259.0, "text": " Apache is not running the host,", "tokens": [51264, 46597, 307, 406, 2614, 264, 3975, 11, 51364], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 271, "seek": 123900, "start": 1259.0, "end": 1260.0, "text": " so if you log into a container,", "tokens": [51364, 370, 498, 291, 3565, 666, 257, 10129, 11, 51414], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 272, "seek": 123900, "start": 1260.0, "end": 1263.0, "text": " Apache is running inside the container.", "tokens": [51414, 46597, 307, 2614, 1854, 264, 10129, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 273, "seek": 123900, "start": 1263.0, "end": 1265.0, "text": " There we go.", "tokens": [51564, 821, 321, 352, 13, 51664], "temperature": 0.0, "avg_logprob": -0.15546815889375704, "compression_ratio": 1.6602870813397128, "no_speech_prob": 0.0177648663520813}, {"id": 274, "seek": 126500, "start": 1266.0, "end": 1270.0, "text": " Yes, I'm piping the error log just to see that there is movement here,", "tokens": [50414, 1079, 11, 286, 478, 35204, 264, 6713, 3565, 445, 281, 536, 300, 456, 307, 3963, 510, 11, 50614], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 275, "seek": 126500, "start": 1270.0, "end": 1271.0, "text": " but I'm not cutting the content,", "tokens": [50614, 457, 286, 478, 406, 6492, 264, 2701, 11, 50664], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 276, "seek": 126500, "start": 1271.0, "end": 1275.0, "text": " because otherwise we will see a lot of IP addresses and internal stuff.", "tokens": [50664, 570, 5911, 321, 486, 536, 257, 688, 295, 8671, 16862, 293, 6920, 1507, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 277, "seek": 126500, "start": 1275.0, "end": 1276.0, "text": " So, I'm too lazy.", "tokens": [50864, 407, 11, 286, 478, 886, 14847, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 278, "seek": 126500, "start": 1276.0, "end": 1280.0, "text": " I don't want to go to the key clock and type all the parameters,", "tokens": [50914, 286, 500, 380, 528, 281, 352, 281, 264, 2141, 7830, 293, 2010, 439, 264, 9834, 11, 51114], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 279, "seek": 126500, "start": 1280.0, "end": 1282.0, "text": " so that I do a cool call, okay?", "tokens": [51114, 370, 300, 286, 360, 257, 1627, 818, 11, 1392, 30, 51214], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 280, "seek": 126500, "start": 1282.0, "end": 1285.0, "text": " Or, well, this is with the KAdmin.", "tokens": [51214, 1610, 11, 731, 11, 341, 307, 365, 264, 591, 15830, 2367, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 281, "seek": 126500, "start": 1285.0, "end": 1288.0, "text": " You can see all the parameters that we are configuring", "tokens": [51364, 509, 393, 536, 439, 264, 9834, 300, 321, 366, 6662, 1345, 51514], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 282, "seek": 126500, "start": 1288.0, "end": 1290.0, "text": " for integrating with free API.", "tokens": [51514, 337, 26889, 365, 1737, 9362, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 283, "seek": 126500, "start": 1290.0, "end": 1293.0, "text": " And once we execute that command,", "tokens": [51614, 400, 1564, 321, 14483, 300, 5622, 11, 51764], "temperature": 0.0, "avg_logprob": -0.15261359581580528, "compression_ratio": 1.6181818181818182, "no_speech_prob": 0.002801181748509407}, {"id": 284, "seek": 129300, "start": 1293.0, "end": 1297.0, "text": " the container is capable, you see the activity.", "tokens": [50364, 264, 10129, 307, 8189, 11, 291, 536, 264, 5191, 13, 50564], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 285, "seek": 129300, "start": 1297.0, "end": 1301.0, "text": " And now we have the user federation enrolled, okay?", "tokens": [50564, 400, 586, 321, 362, 264, 4195, 4636, 5053, 25896, 11, 1392, 30, 50764], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 286, "seek": 129300, "start": 1304.0, "end": 1306.0, "text": " And you will see a new service here,", "tokens": [50914, 400, 291, 486, 536, 257, 777, 2643, 510, 11, 51014], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 287, "seek": 129300, "start": 1306.0, "end": 1308.0, "text": " which is this one, the bridge, okay?", "tokens": [51014, 597, 307, 341, 472, 11, 264, 7283, 11, 1392, 30, 51114], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 288, "seek": 129300, "start": 1308.0, "end": 1309.0, "text": " It was done automatically,", "tokens": [51114, 467, 390, 1096, 6772, 11, 51164], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 289, "seek": 129300, "start": 1309.0, "end": 1312.0, "text": " so you don't need to worry about that anymore.", "tokens": [51164, 370, 291, 500, 380, 643, 281, 3292, 466, 300, 3602, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 290, "seek": 129300, "start": 1312.0, "end": 1315.0, "text": " So, now everything is set up,", "tokens": [51314, 407, 11, 586, 1203, 307, 992, 493, 11, 51464], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 291, "seek": 129300, "start": 1315.0, "end": 1316.0, "text": " everything is configured,", "tokens": [51464, 1203, 307, 30538, 11, 51514], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 292, "seek": 129300, "start": 1316.0, "end": 1318.0, "text": " so now you can manipulate users.", "tokens": [51514, 370, 586, 291, 393, 20459, 5022, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 293, "seek": 129300, "start": 1318.0, "end": 1320.0, "text": " When we create one user, for instance,", "tokens": [51614, 1133, 321, 1884, 472, 4195, 11, 337, 5197, 11, 51714], "temperature": 0.0, "avg_logprob": -0.16615234802816517, "compression_ratio": 1.5822784810126582, "no_speech_prob": 0.005545319523662329}, {"id": 294, "seek": 132000, "start": 1321.0, "end": 1325.0, "text": " I'm trying to file a user in key clock,", "tokens": [50414, 286, 478, 1382, 281, 3991, 257, 4195, 294, 2141, 7830, 11, 50614], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 295, "seek": 132000, "start": 1325.0, "end": 1329.0, "text": " so right away after we click on create,", "tokens": [50614, 370, 558, 1314, 934, 321, 2052, 322, 1884, 11, 50814], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 296, "seek": 132000, "start": 1329.0, "end": 1333.0, "text": " the user is added to the key clock database,", "tokens": [50814, 264, 4195, 307, 3869, 281, 264, 2141, 7830, 8149, 11, 51014], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 297, "seek": 132000, "start": 1333.0, "end": 1335.0, "text": " but it's making a call to the scheme service,", "tokens": [51014, 457, 309, 311, 1455, 257, 818, 281, 264, 12232, 2643, 11, 51114], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 298, "seek": 132000, "start": 1335.0, "end": 1338.0, "text": " and the scheme service is redirecting the user to,", "tokens": [51114, 293, 264, 12232, 2643, 307, 29066, 278, 264, 4195, 281, 11, 51264], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 299, "seek": 132000, "start": 1338.0, "end": 1340.0, "text": " directing the user in the IP as well.", "tokens": [51264, 26979, 264, 4195, 294, 264, 8671, 382, 731, 13, 51364], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 300, "seek": 132000, "start": 1340.0, "end": 1343.0, "text": " So, it appears here, okay?", "tokens": [51364, 407, 11, 309, 7038, 510, 11, 1392, 30, 51514], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 301, "seek": 132000, "start": 1343.0, "end": 1344.0, "text": " Yeah, that's the user,", "tokens": [51514, 865, 11, 300, 311, 264, 4195, 11, 51564], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 302, "seek": 132000, "start": 1344.0, "end": 1348.0, "text": " and yeah, you know, we can do all the administrative stuff,", "tokens": [51564, 293, 1338, 11, 291, 458, 11, 321, 393, 360, 439, 264, 17900, 1507, 11, 51764], "temperature": 0.0, "avg_logprob": -0.19363108548251065, "compression_ratio": 1.7004608294930876, "no_speech_prob": 0.008556745946407318}, {"id": 303, "seek": 134800, "start": 1349.0, "end": 1351.0, "text": " like changing for instance the email,", "tokens": [50414, 411, 4473, 337, 5197, 264, 3796, 11, 50514], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 304, "seek": 134800, "start": 1351.0, "end": 1353.0, "text": " everything is fully replicated to the free API", "tokens": [50514, 1203, 307, 4498, 46365, 281, 264, 1737, 9362, 50614], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 305, "seek": 134800, "start": 1357.0, "end": 1358.0, "text": " and the Dimachment system,", "tokens": [50814, 293, 264, 20975, 23908, 1185, 11, 50864], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 306, "seek": 134800, "start": 1359.0, "end": 1362.0, "text": " based on all these cool calls that are happening to the bridge,", "tokens": [50914, 2361, 322, 439, 613, 1627, 5498, 300, 366, 2737, 281, 264, 7283, 11, 51064], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 307, "seek": 134800, "start": 1362.0, "end": 1364.0, "text": " so the user is there,", "tokens": [51064, 370, 264, 4195, 307, 456, 11, 51164], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 308, "seek": 134800, "start": 1364.0, "end": 1366.0, "text": " you can see it from the click command as well.", "tokens": [51164, 291, 393, 536, 309, 490, 264, 2052, 5622, 382, 731, 13, 51264], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 309, "seek": 134800, "start": 1371.0, "end": 1375.0, "text": " Yeah, the modification was currently provided.", "tokens": [51514, 865, 11, 264, 26747, 390, 4362, 5649, 13, 51714], "temperature": 0.0, "avg_logprob": -0.25663670857747395, "compression_ratio": 1.4771573604060915, "no_speech_prob": 0.010648706927895546}, {"id": 310, "seek": 137500, "start": 1376.0, "end": 1379.0, "text": " So, I guess I'm trying to delete the user now,", "tokens": [50414, 407, 11, 286, 2041, 286, 478, 1382, 281, 12097, 264, 4195, 586, 11, 50564], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 311, "seek": 137500, "start": 1379.0, "end": 1383.0, "text": " and yeah, basically, it does a group of operations,", "tokens": [50564, 293, 1338, 11, 1936, 11, 309, 775, 257, 1594, 295, 7705, 11, 50764], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 312, "seek": 137500, "start": 1383.0, "end": 1387.0, "text": " I mean create, modify, list, and delete,", "tokens": [50764, 286, 914, 1884, 11, 16927, 11, 1329, 11, 293, 12097, 11, 50964], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 313, "seek": 137500, "start": 1387.0, "end": 1390.0, "text": " yeah, the user is not there anymore,", "tokens": [50964, 1338, 11, 264, 4195, 307, 406, 456, 3602, 11, 51114], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 314, "seek": 137500, "start": 1390.0, "end": 1394.0, "text": " and also when you delete the scheme federation,", "tokens": [51114, 293, 611, 562, 291, 12097, 264, 12232, 4636, 5053, 11, 51314], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 315, "seek": 137500, "start": 1394.0, "end": 1397.0, "text": " it is unenrolling, okay?", "tokens": [51314, 309, 307, 517, 268, 18688, 11, 1392, 30, 51464], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 316, "seek": 137500, "start": 1397.0, "end": 1400.0, "text": " So, it goes to free API and then remove the service", "tokens": [51464, 407, 11, 309, 1709, 281, 1737, 9362, 293, 550, 4159, 264, 2643, 51614], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 317, "seek": 137500, "start": 1400.0, "end": 1402.0, "text": " because it's no longer needed, okay?", "tokens": [51614, 570, 309, 311, 572, 2854, 2978, 11, 1392, 30, 51714], "temperature": 0.0, "avg_logprob": -0.16237171023499733, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.008847079239785671}, {"id": 318, "seek": 140200, "start": 1402.0, "end": 1405.0, "text": " So, this is also fully automated.", "tokens": [50364, 407, 11, 341, 307, 611, 4498, 18473, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 319, "seek": 140200, "start": 1407.0, "end": 1412.0, "text": " Okay, so, what you just saw here in this video,", "tokens": [50614, 1033, 11, 370, 11, 437, 291, 445, 1866, 510, 294, 341, 960, 11, 50864], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 320, "seek": 140200, "start": 1412.0, "end": 1415.0, "text": " is the user provisioning, okay?", "tokens": [50864, 307, 264, 4195, 17225, 278, 11, 1392, 30, 51014], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 321, "seek": 140200, "start": 1415.0, "end": 1417.0, "text": " We are not done yet.", "tokens": [51014, 492, 366, 406, 1096, 1939, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 322, "seek": 140200, "start": 1418.0, "end": 1421.0, "text": " Let me see, because I have a bonus.", "tokens": [51164, 961, 385, 536, 11, 570, 286, 362, 257, 10882, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 323, "seek": 140200, "start": 1423.0, "end": 1425.0, "text": " If I can close the video now.", "tokens": [51414, 759, 286, 393, 1998, 264, 960, 586, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 324, "seek": 140200, "start": 1426.0, "end": 1428.0, "text": " So, the bonus is...", "tokens": [51564, 407, 11, 264, 10882, 307, 485, 51664], "temperature": 0.0, "avg_logprob": -0.13122760927354968, "compression_ratio": 1.3664596273291925, "no_speech_prob": 0.006696260068565607}, {"id": 325, "seek": 143200, "start": 1432.0, "end": 1434.0, "text": " Oh, now it's working.", "tokens": [50364, 876, 11, 586, 309, 311, 1364, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 326, "seek": 143200, "start": 1435.0, "end": 1438.0, "text": " Now it's working, okay, when I don't need it.", "tokens": [50514, 823, 309, 311, 1364, 11, 1392, 11, 562, 286, 500, 380, 643, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 327, "seek": 143200, "start": 1439.0, "end": 1441.0, "text": " Okay, now, okay, this is a bonus.", "tokens": [50714, 1033, 11, 586, 11, 1392, 11, 341, 307, 257, 10882, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 328, "seek": 143200, "start": 1441.0, "end": 1443.0, "text": " This is a working progress, all right?", "tokens": [50814, 639, 307, 257, 1364, 4205, 11, 439, 558, 30, 50914], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 329, "seek": 143200, "start": 1443.0, "end": 1446.0, "text": " This is the other piece, the identity federation.", "tokens": [50914, 639, 307, 264, 661, 2522, 11, 264, 6575, 4636, 5053, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 330, "seek": 143200, "start": 1446.0, "end": 1448.0, "text": " You just saw in the video, the user federation,", "tokens": [51064, 509, 445, 1866, 294, 264, 960, 11, 264, 4195, 4636, 5053, 11, 51164], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 331, "seek": 143200, "start": 1448.0, "end": 1450.0, "text": " but this is the identity federation,", "tokens": [51164, 457, 341, 307, 264, 6575, 4636, 5053, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 332, "seek": 143200, "start": 1450.0, "end": 1454.0, "text": " and it is all about to expose another endpoint in the bridge,", "tokens": [51264, 293, 309, 307, 439, 466, 281, 19219, 1071, 35795, 294, 264, 7283, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 333, "seek": 143200, "start": 1454.0, "end": 1459.0, "text": " so that key clock can also make calls to the bridge,", "tokens": [51464, 370, 300, 2141, 7830, 393, 611, 652, 5498, 281, 264, 7283, 11, 51714], "temperature": 0.0, "avg_logprob": -0.1466418698302701, "compression_ratio": 1.7727272727272727, "no_speech_prob": 0.009912479668855667}, {"id": 334, "seek": 145900, "start": 1459.0, "end": 1462.0, "text": " but now, not for user provisioning,", "tokens": [50364, 457, 586, 11, 406, 337, 4195, 17225, 278, 11, 50514], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 335, "seek": 145900, "start": 1462.0, "end": 1465.0, "text": " or modifications, it's for authenticating,", "tokens": [50514, 420, 26881, 11, 309, 311, 337, 12466, 990, 11, 50664], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 336, "seek": 145900, "start": 1465.0, "end": 1467.0, "text": " and this one is for Kerberos, okay?", "tokens": [50664, 293, 341, 472, 307, 337, 20706, 607, 329, 11, 1392, 30, 50764], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 337, "seek": 145900, "start": 1467.0, "end": 1470.0, "text": " So, this is kind of controlling Kerberos,", "tokens": [50764, 407, 11, 341, 307, 733, 295, 14905, 20706, 607, 329, 11, 50914], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 338, "seek": 145900, "start": 1470.0, "end": 1474.0, "text": " and then the scheme, I mean the bridge, Ipantura,", "tokens": [50914, 293, 550, 264, 12232, 11, 286, 914, 264, 7283, 11, 286, 79, 394, 2991, 11, 51114], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 339, "seek": 145900, "start": 1474.0, "end": 1478.0, "text": " is capable of translating that into an operation", "tokens": [51114, 307, 8189, 295, 35030, 300, 666, 364, 6916, 51314], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 340, "seek": 145900, "start": 1478.0, "end": 1482.0, "text": " that we've modelled, yes, this API, using a proper kit up,", "tokens": [51314, 300, 321, 600, 1072, 41307, 11, 2086, 11, 341, 9362, 11, 1228, 257, 2296, 8260, 493, 11, 51514], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 341, "seek": 145900, "start": 1482.0, "end": 1485.0, "text": " and then free API will answer with the session cookie,", "tokens": [51514, 293, 550, 1737, 9362, 486, 1867, 365, 264, 5481, 14417, 11, 51664], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 342, "seek": 145900, "start": 1485.0, "end": 1487.0, "text": " or it will fetch from the SSD,", "tokens": [51664, 420, 309, 486, 23673, 490, 264, 30262, 11, 51764], "temperature": 0.0, "avg_logprob": -0.2633569060253496, "compression_ratio": 1.6528925619834711, "no_speech_prob": 0.004981119651347399}, {"id": 343, "seek": 148700, "start": 1487.0, "end": 1489.0, "text": " or well, from the cache, and then it will respond back", "tokens": [50364, 420, 731, 11, 490, 264, 19459, 11, 293, 550, 309, 486, 4196, 646, 50464], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 344, "seek": 148700, "start": 1489.0, "end": 1492.0, "text": " the session cookie, so that the cloud application", "tokens": [50464, 264, 5481, 14417, 11, 370, 300, 264, 4588, 3861, 50614], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 345, "seek": 148700, "start": 1492.0, "end": 1496.0, "text": " that is running here, trying to log in into key clock,", "tokens": [50614, 300, 307, 2614, 510, 11, 1382, 281, 3565, 294, 666, 2141, 7830, 11, 50814], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 346, "seek": 148700, "start": 1496.0, "end": 1501.0, "text": " is actually authenticating in IPA, nothing key clock, okay?", "tokens": [50814, 307, 767, 12466, 990, 294, 8671, 32, 11, 1825, 2141, 7830, 11, 1392, 30, 51064], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 347, "seek": 148700, "start": 1501.0, "end": 1507.0, "text": " So, yes, and then, yeah, this final slide is about", "tokens": [51064, 407, 11, 2086, 11, 293, 550, 11, 1338, 11, 341, 2572, 4137, 307, 466, 51364], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 348, "seek": 148700, "start": 1507.0, "end": 1511.0, "text": " potential usage, so this can be used for synchronization", "tokens": [51364, 3995, 14924, 11, 370, 341, 393, 312, 1143, 337, 19331, 2144, 51564], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 349, "seek": 148700, "start": 1511.0, "end": 1515.0, "text": " of identities across different providers, as you can see.", "tokens": [51564, 295, 24239, 2108, 819, 11330, 11, 382, 291, 393, 536, 13, 51764], "temperature": 0.0, "avg_logprob": -0.18460317177347618, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.0026601904537528753}, {"id": 350, "seek": 151500, "start": 1515.0, "end": 1519.0, "text": " Also, we can use it to migrate all the users,", "tokens": [50364, 2743, 11, 321, 393, 764, 309, 281, 31821, 439, 264, 5022, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 351, "seek": 151500, "start": 1519.0, "end": 1522.0, "text": " because the beauty of the scheme is that you can do", "tokens": [50564, 570, 264, 6643, 295, 264, 12232, 307, 300, 291, 393, 360, 50714], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 352, "seek": 151500, "start": 1522.0, "end": 1525.0, "text": " mapping of the attributes, so you can translate anything", "tokens": [50714, 18350, 295, 264, 17212, 11, 370, 291, 393, 13799, 1340, 50864], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 353, "seek": 151500, "start": 1525.0, "end": 1527.0, "text": " you have in any cloud application into something", "tokens": [50864, 291, 362, 294, 604, 4588, 3861, 666, 746, 50964], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 354, "seek": 151500, "start": 1527.0, "end": 1530.0, "text": " that is more powerful, like free API,", "tokens": [50964, 300, 307, 544, 4005, 11, 411, 1737, 9362, 11, 51114], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 355, "seek": 151500, "start": 1530.0, "end": 1533.0, "text": " and then with UIDs and UIDs that are generated automatically,", "tokens": [51114, 293, 550, 365, 624, 2777, 82, 293, 624, 2777, 82, 300, 366, 10833, 6772, 11, 51264], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 356, "seek": 151500, "start": 1533.0, "end": 1537.0, "text": " I mean, it's amazing, and the good point as well", "tokens": [51264, 286, 914, 11, 309, 311, 2243, 11, 293, 264, 665, 935, 382, 731, 51464], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 357, "seek": 151500, "start": 1537.0, "end": 1542.0, "text": " about potential usage is that key clock,", "tokens": [51464, 466, 3995, 14924, 307, 300, 2141, 7830, 11, 51714], "temperature": 0.0, "avg_logprob": -0.09367034068474403, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.004275151528418064}, {"id": 358, "seek": 154200, "start": 1542.0, "end": 1547.0, "text": " if we merge this in key clock, there will be a user federation", "tokens": [50364, 498, 321, 22183, 341, 294, 2141, 7830, 11, 456, 486, 312, 257, 4195, 4636, 5053, 50614], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 359, "seek": 154200, "start": 1547.0, "end": 1550.0, "text": " that will be capable of connecting to any scheme server,", "tokens": [50614, 300, 486, 312, 8189, 295, 11015, 281, 604, 12232, 7154, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 360, "seek": 154200, "start": 1550.0, "end": 1552.0, "text": " it doesn't need to be this one.", "tokens": [50764, 309, 1177, 380, 643, 281, 312, 341, 472, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 361, "seek": 154200, "start": 1552.0, "end": 1556.0, "text": " So now key clock can talk to a scheme as a client, right?", "tokens": [50864, 407, 586, 2141, 7830, 393, 751, 281, 257, 12232, 382, 257, 6423, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 362, "seek": 154200, "start": 1556.0, "end": 1561.0, "text": " And this service, as a scheme server that we implemented", "tokens": [51064, 400, 341, 2643, 11, 382, 257, 12232, 7154, 300, 321, 12270, 51314], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 363, "seek": 154200, "start": 1561.0, "end": 1565.0, "text": " in IPA as a container, can be also used to connect", "tokens": [51314, 294, 8671, 32, 382, 257, 10129, 11, 393, 312, 611, 1143, 281, 1745, 51514], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 364, "seek": 154200, "start": 1565.0, "end": 1569.0, "text": " with other clients, it doesn't need to be necessarily key clock,", "tokens": [51514, 365, 661, 6982, 11, 309, 1177, 380, 643, 281, 312, 4725, 2141, 7830, 11, 51714], "temperature": 0.0, "avg_logprob": -0.11679873099693885, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.009273173287510872}, {"id": 365, "seek": 156900, "start": 1569.0, "end": 1574.0, "text": " we can connect to Azure or Azure AD or any other,", "tokens": [50364, 321, 393, 1745, 281, 11969, 420, 11969, 9135, 420, 604, 661, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 366, "seek": 156900, "start": 1574.0, "end": 1579.0, "text": " for instance, I don't know, anyone that is supporting the protocol.", "tokens": [50614, 337, 5197, 11, 286, 500, 380, 458, 11, 2878, 300, 307, 7231, 264, 10336, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 367, "seek": 156900, "start": 1579.0, "end": 1582.0, "text": " So, yeah.", "tokens": [50864, 407, 11, 1338, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 368, "seek": 156900, "start": 1582.0, "end": 1584.0, "text": " So, yeah, that was it.", "tokens": [51014, 407, 11, 1338, 11, 300, 390, 309, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 369, "seek": 156900, "start": 1584.0, "end": 1586.0, "text": " I think we have time for questions, right?", "tokens": [51114, 286, 519, 321, 362, 565, 337, 1651, 11, 558, 30, 51214], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 370, "seek": 156900, "start": 1586.0, "end": 1587.0, "text": " More or less?", "tokens": [51214, 5048, 420, 1570, 30, 51264], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 371, "seek": 156900, "start": 1587.0, "end": 1588.0, "text": " One, two minutes?", "tokens": [51264, 1485, 11, 732, 2077, 30, 51314], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 372, "seek": 156900, "start": 1588.0, "end": 1589.0, "text": " Okay.", "tokens": [51314, 1033, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 373, "seek": 156900, "start": 1589.0, "end": 1591.0, "text": " Yes, please.", "tokens": [51364, 1079, 11, 1767, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1884919802347819, "compression_ratio": 1.3863636363636365, "no_speech_prob": 0.04886045679450035}, {"id": 374, "seek": 159100, "start": 1591.0, "end": 1595.0, "text": " You spoke about intervention with AD,", "tokens": [50364, 509, 7179, 466, 13176, 365, 9135, 11, 50564], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 375, "seek": 159100, "start": 1595.0, "end": 1600.0, "text": " I want some idea of the client side, you would have windbind,", "tokens": [50564, 286, 528, 512, 1558, 295, 264, 6423, 1252, 11, 291, 576, 362, 2468, 65, 471, 11, 50814], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 376, "seek": 159100, "start": 1600.0, "end": 1604.0, "text": " would you be able to replace SSD with windbind", "tokens": [50814, 576, 291, 312, 1075, 281, 7406, 30262, 365, 2468, 65, 471, 51014], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 377, "seek": 159100, "start": 1604.0, "end": 1606.0, "text": " and still use this solution?", "tokens": [51014, 293, 920, 764, 341, 3827, 30, 51114], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 378, "seek": 159100, "start": 1606.0, "end": 1610.0, "text": " So the question is if we can replace windbind...", "tokens": [51114, 407, 264, 1168, 307, 498, 321, 393, 7406, 2468, 65, 471, 485, 51314], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 379, "seek": 159100, "start": 1610.0, "end": 1617.0, "text": " Yeah, from SSD with this solution with...", "tokens": [51314, 865, 11, 490, 30262, 365, 341, 3827, 365, 485, 51664], "temperature": 0.0, "avg_logprob": -0.27286303202311196, "compression_ratio": 1.5739644970414202, "no_speech_prob": 0.10464248806238174}, {"id": 380, "seek": 161700, "start": 1617.0, "end": 1624.0, "text": " So, not yet, the answer is not yet,", "tokens": [50364, 407, 11, 406, 1939, 11, 264, 1867, 307, 406, 1939, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 381, "seek": 161700, "start": 1624.0, "end": 1628.0, "text": " but yeah, I think we can look into it and potentially,", "tokens": [50714, 457, 1338, 11, 286, 519, 321, 393, 574, 666, 309, 293, 7263, 11, 50914], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 382, "seek": 161700, "start": 1628.0, "end": 1630.0, "text": " potentially, yeah, it could be done.", "tokens": [50914, 7263, 11, 1338, 11, 309, 727, 312, 1096, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 383, "seek": 161700, "start": 1630.0, "end": 1634.0, "text": " If we decide to prioritize that use case over the others,", "tokens": [51014, 759, 321, 4536, 281, 25164, 300, 764, 1389, 670, 264, 2357, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 384, "seek": 161700, "start": 1634.0, "end": 1636.0, "text": " why not?", "tokens": [51214, 983, 406, 30, 51314], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 385, "seek": 161700, "start": 1636.0, "end": 1639.0, "text": " Yeah, but not yet.", "tokens": [51314, 865, 11, 457, 406, 1939, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 386, "seek": 161700, "start": 1639.0, "end": 1641.0, "text": " What's the not yet part of it?", "tokens": [51464, 708, 311, 264, 406, 1939, 644, 295, 309, 30, 51564], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 387, "seek": 161700, "start": 1641.0, "end": 1642.0, "text": " Say again, please.", "tokens": [51564, 6463, 797, 11, 1767, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 388, "seek": 161700, "start": 1642.0, "end": 1643.0, "text": " Will it happen?", "tokens": [51614, 3099, 309, 1051, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 389, "seek": 161700, "start": 1643.0, "end": 1644.0, "text": " Will it happen?", "tokens": [51664, 3099, 309, 1051, 30, 51714], "temperature": 0.0, "avg_logprob": -0.1870981333207111, "compression_ratio": 1.6032608695652173, "no_speech_prob": 0.022499337792396545}, {"id": 390, "seek": 164400, "start": 1644.0, "end": 1645.0, "text": " Will it happen?", "tokens": [50364, 3099, 309, 1051, 30, 50414], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 391, "seek": 164400, "start": 1645.0, "end": 1648.0, "text": " That's a good question because we haven't done any release.", "tokens": [50414, 663, 311, 257, 665, 1168, 570, 321, 2378, 380, 1096, 604, 4374, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 392, "seek": 164400, "start": 1648.0, "end": 1650.0, "text": " This is an upstream project.", "tokens": [50564, 639, 307, 364, 33915, 1716, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 393, "seek": 164400, "start": 1650.0, "end": 1652.0, "text": " We have two upstream projects.", "tokens": [50664, 492, 362, 732, 33915, 4455, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 394, "seek": 164400, "start": 1652.0, "end": 1657.0, "text": " So, yeah, our intention is to make this to happen.", "tokens": [50764, 407, 11, 1338, 11, 527, 7789, 307, 281, 652, 341, 281, 1051, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 395, "seek": 164400, "start": 1657.0, "end": 1663.0, "text": " This will help simplify a lot the key clock user", "tokens": [51014, 639, 486, 854, 20460, 257, 688, 264, 2141, 7830, 4195, 51314], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 396, "seek": 164400, "start": 1663.0, "end": 1666.0, "text": " integration with identity management systems", "tokens": [51314, 10980, 365, 6575, 4592, 3652, 51464], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 397, "seek": 164400, "start": 1666.0, "end": 1671.0, "text": " and also it's very convenient now to get a deployment", "tokens": [51464, 293, 611, 309, 311, 588, 10851, 586, 281, 483, 257, 19317, 51714], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 398, "seek": 164400, "start": 1671.0, "end": 1673.0, "text": " independent from the host so that you can get", "tokens": [51714, 6695, 490, 264, 3975, 370, 300, 291, 393, 483, 51814], "temperature": 0.0, "avg_logprob": -0.1858427696621295, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.014071635901927948}, {"id": 399, "seek": 167300, "start": 1673.0, "end": 1678.0, "text": " a container, this is kind of on the towards the cloud,", "tokens": [50364, 257, 10129, 11, 341, 307, 733, 295, 322, 264, 3030, 264, 4588, 11, 50614], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 400, "seek": 167300, "start": 1678.0, "end": 1680.0, "text": " cloud-based applications.", "tokens": [50614, 4588, 12, 6032, 5821, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 401, "seek": 167300, "start": 1680.0, "end": 1682.0, "text": " So, yeah.", "tokens": [50714, 407, 11, 1338, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 402, "seek": 167300, "start": 1682.0, "end": 1685.0, "text": " So, about our plans, our plan, I mean,", "tokens": [50814, 407, 11, 466, 527, 5482, 11, 527, 1393, 11, 286, 914, 11, 50964], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 403, "seek": 167300, "start": 1685.0, "end": 1688.0, "text": " the key clock plugin is more or less completed.", "tokens": [50964, 264, 2141, 7830, 23407, 307, 544, 420, 1570, 7365, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 404, "seek": 167300, "start": 1688.0, "end": 1690.0, "text": " Now we are thinking about sending to key clock", "tokens": [51114, 823, 321, 366, 1953, 466, 7750, 281, 2141, 7830, 51214], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 405, "seek": 167300, "start": 1690.0, "end": 1692.0, "text": " so that it will be emerging upstream first", "tokens": [51214, 370, 300, 309, 486, 312, 14989, 33915, 700, 51314], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 406, "seek": 167300, "start": 1692.0, "end": 1695.0, "text": " and then it will appear scheme client there.", "tokens": [51314, 293, 550, 309, 486, 4204, 12232, 6423, 456, 13, 51464], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 407, "seek": 167300, "start": 1695.0, "end": 1699.0, "text": " And the service, as soon as we finalize the", "tokens": [51464, 400, 264, 2643, 11, 382, 2321, 382, 321, 2572, 1125, 264, 51664], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 408, "seek": 167300, "start": 1699.0, "end": 1702.0, "text": " Kerberos authentication redirection,", "tokens": [51664, 20706, 607, 329, 26643, 2182, 621, 882, 11, 51814], "temperature": 0.0, "avg_logprob": -0.21976764782055005, "compression_ratio": 1.6307053941908713, "no_speech_prob": 0.0019957362674176693}, {"id": 409, "seek": 170200, "start": 1702.0, "end": 1706.0, "text": " then I guess we will be in good shape to make a first release", "tokens": [50364, 550, 286, 2041, 321, 486, 312, 294, 665, 3909, 281, 652, 257, 700, 4374, 50564], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 410, "seek": 170200, "start": 1706.0, "end": 1710.0, "text": " in upstream, okay, and later on,", "tokens": [50564, 294, 33915, 11, 1392, 11, 293, 1780, 322, 11, 50764], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 411, "seek": 170200, "start": 1710.0, "end": 1714.0, "text": " if once we prioritize a lot of aspects,", "tokens": [50764, 498, 1564, 321, 25164, 257, 688, 295, 7270, 11, 50964], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 412, "seek": 170200, "start": 1714.0, "end": 1718.0, "text": " then, yeah, potentially yes, it will replace or,", "tokens": [50964, 550, 11, 1338, 11, 7263, 2086, 11, 309, 486, 7406, 420, 11, 51164], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 413, "seek": 170200, "start": 1718.0, "end": 1720.0, "text": " especially will replace the SSD connector", "tokens": [51164, 2318, 486, 7406, 264, 30262, 19127, 51264], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 414, "seek": 170200, "start": 1720.0, "end": 1724.0, "text": " we have in key clock, that for sure, okay.", "tokens": [51264, 321, 362, 294, 2141, 7830, 11, 300, 337, 988, 11, 1392, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 415, "seek": 170200, "start": 1724.0, "end": 1725.0, "text": " Okay.", "tokens": [51464, 1033, 13, 51514], "temperature": 0.0, "avg_logprob": -0.20406746864318848, "compression_ratio": 1.5054945054945055, "no_speech_prob": 0.010647382587194443}, {"id": 416, "seek": 172500, "start": 1725.0, "end": 1727.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.42583457628885907, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.6992506384849548}], "language": "en"}