{"text": " Okay. Okay. So, yeah, then we'll continue basically right where Hansjord left off. I'm Volker from KDE and I'll talk about how we do the semantic extraction in K-mail and specifically focusing on the travel use case. Many of you probably traveled here, so you might see why this could be useful. So, if you book your flight or your train or your hotel, you get the confirmation as an HTML monstrosity full of advertisements and fine print and somewhere in between is the information that you actually care about. So, you need to find that and transfer it into like your calendar or your travel app and that if you do it manually, right, there's tedious and error prone. So, why can't we have that automatically? And that's basically the point that got me into that topic. I was on the way home from a conference needed to find my departure gate and I was written in like light gray on white in that style. So, I did what you would do in that case like you read the email source code because that's easier to read and I stumbled about a nice compact summary of the trip and that was the schema.org Jason that Hansjord mentioned. So, just showing that in our email client right that should be easy. Six and a half years later, I'm not standing here and still talking about that subject, so as things usually go. So, Hansjord showed us already, right, it's the schema.org Jason that is something that I think Google proposed 10 or 15 years ago for websites and for HTML email. Meanwhile, managed by the W3C, so it's a proper open standard. As an ontology that tries to model the complexities of the real world, right, it has all the fun involved with that. But generally that is sane and something we can work with. Then, however, we got in touch with the harsh realities out there because there's not just that nice Jason format, there is also commonly used a micro data representation that basically embeds that tree of information in the HTML structure of the HTML email. Technically, that's possible and still well defined, but it then basically puts HTML parsing into your problem space with all the fun that that entails. Well, okay, so we implemented that as well. Then we discovered a third variant of encoding that information, basically syntactically invalid Jason. Comalist Jason is particularly popular, so we ended up adding workarounds for the Jason parser to deal with all of that. Then we found the actually much bigger problem and that is semantically incorrect data. I think the most extreme case was Air Berlin. They had the arrival and departure times for flights in the local time zone of the airports, as you would usually do it. But then they added the UTC offset of what is presumably their server location. So if you travel to the US, eight hour difference, you probably noticed that something is wrong. If you travel from here to Finland, a subtle one hour difference, super dangerous, you're under risk of missing your flight. Another common problem, there's an address and there's a geo-coordinate. They mismatch and not just by a few meters. We have to deal with that as well. Then of course the other big problem, this is by far not as widely used as we would wish. You find it with some airlines, some of the hotel and event booking platforms have it. It's super rare for trains. I think in Europe it's only a train line. In general, on a scale from Silicon Valley startup to 100 plus year old European national railway, it's clearly biased towards the former. It seems to be even less common in Asia than in Europe. That isn't really satisfying, but at that point we were hooked and we really wanted those features. We started to look where else we could get them from. There's actually a lot of stuff that we can extract data from in such emails. One particularly useful thing are flight and train ticket barcodes, which then moves PDF parsing and image processing in our problem space. It gets worse. That thing is an entire world on its own. I spoke a bit about that last year in the railways and open transport deff room. I tried to skip that here. Another thing commonly found on booking emails is Apple wallet parsers that zip files containing JSON. Parts of it is machine readable. Parts of it is visual representation, but at least for location and time in the barcode. That's a good starting point. Then of course there is the whole unstructured human readable part. For some of that we were able to build generic extractors. Something like an airline boarding pass. They might look very different from a visual and layout point of view, but they can all be very reliably identified using the barcode. The barcode only contains very basic information, like the day of travel, not the year or the time, and only the airport codes, but not the gate, and so on. All of that information that is really relevant for you is in that human readable text somewhere. It's possible to identify that and match it. For everything else we have provider specific extractor script. That's usually a few lines of JavaScript with regular expressions or X pass queries on the HTML. Not pretty, but it gets the job done. With all of those ways of getting data out, we still have the problem that the data quality isn't really on a level that we can work with. In particular we care about the very exact time, including the time zone. By time zone I really mean IA and A time zone ID, not UTC offset, because if you have a delay over a day-life saving time change, and yes that does happen, then you really need the exact time zone to know when your new departure time is. And the other aspect that is really important is the precise location. So as a geocoordinate, that in turn also helps with determining the time zone, but we want to have features like routing to your departure location or your hotel. And in order to improve on the input data, we use some external data sources like OpenStreetMap or VickyData to resolve airport or train station identifiers and get to the exact location. And we have a few things that apply domain knowledge. For example, if you email, we first to a flight from Brussels to Stuttgart, and mentions a flight time of about an hour. There's two airports with Brussels in the name. They are both close to, or at least both of them are in Belgium, so we know the country and time zone. There's also two airports with the name Stuttgart. One is in southern Germany, the other one is somewhere in the US. But based on the flight time, we know exactly which one of that is possible, right? And I may have uniquely identified the other airport and so on and so on. And then in the end, we have some validation and plausibility checks because they're still either incomplete or nonsense coming through, right? So if you would require time travel to make that trip, then it's likely wrong somehow. And that's then how it looks like in the integration. So we run the current email through the extractor. If it finds something, it shows a summary of that and offers you to add that to your calendar or to your travel app on the phone. This is in KML. Originally, the extractor started as a library for KML, but it's also available as a standalone command line tool by now. That's how we did the integration in NextCloud. Same thing, right? We showed a summary of what we found and you can add that to your calendar. There used to be a Thunderbird plugin, but Thunderbird changed the integration API and since then that stalled a bit. There's a lot of demand for that, so it would be nice to redirect that at some point. And then there's of course the dedicated travel app, it's a memory that we built out of all of this that Hans-J\u00f6rg had already mentioned, where you get a timeline of your trip and it then fills the gaps with local public transport and looks for the weather forecast and reminds you to bring a power plug converter if you're traveling to a country where you need that. And I mean, that is exactly the kind of high-level semantic features and workflows that we can build if we actually understand what you're dealing with in your emails or in your documents. So if you produce any kind of transactional email, you most likely have a machine-needable representation of what this is about, so please add that also to the email in some form, ideally in the format Hans-J\u00f6rg is working on, but as you have seen, we are not particularly picky in extracting, right? So anything that isn't regular expressions on human readable text would be a big help already. And then finally, I haven't mentioned that yet, all of that of course runs on your device, right? Unlike Google, Apple or TripIt, we don't read your email for this. That on the other hand means we have not as many training samples as they have, so we entirely rely on people donating us travel-related emails in some form, so that is one way to help. Yeah, and that's it. Thank you. Thank you. All right, again, we have our number one question to ask today. Do you have any statistics on signal to noise ratio? Essentially, how many times is the information wrong? Do you kind of any reviews or testing in terms of like, you say that incorrect information is better than no information, but does it ever get confusing to a user, for example? I mean, we try very, very hard to detect stuff that is not plausible or to fit out anything that we at least can detect. How much gets through that is not detectable and then confusing. I don't actually know because the samples we have work or are filtered out, but at least we don't get a lot of bug reports with I missed my flight because it showed something wrong, and usually it is individual providers and they are consistently wrong, so we can add workarounds for that to filter them out and not show anything for them, for example. But there is the risk for providers that we don't know. If they send out something that we can't detect, we might show you a wrong departure time, right? And that is a problem. But you could, I know you could not log, instead of not showing the possibly wrong information, you could not log it somewhere and then to make those statistics. I mean, log in the way that we get the information. Yeah, because it's not a website. That would go against the whole privacy idea that we are very... But if, I don't know, if user agree to send those kind of... We don't have like a data donation feature built into the app right now. That might be an interesting option. But some people send this to us then manually, basically. Yeah. I might, before I give some mic to Arndt, I might just comment on that because we talked already also at Mark to people and there is a lot of the email senders, right? So, and in general, there is some interest by them to support this in a way. So, I have a strong assumption, like, if there is such faulty data, there might be ways to incentivize at least the big senders, the big brands to do it right. So, I'm not so concerned about that. Yeah. Asking people to send bug reports is okay, but if you ever get a mail client to send something to you, to log it, you're going to get information about people's sex life. No matter what you try to get, you're going to get that. It just happens, trust me. And then you have GDPR problems because, well, you thought it was the name of an airline, but it actually was the name of a person. Yeah, I mean, that is, I mean, that's one of the motivation why we are so focused on doing this locally and with keeping control over this. Because, I mean, your personal travel is already quite sensitive. But if you combine that with everybody else, the amount of patterns you see, right, I mean, all of us travel to Brussels in the first weekend in February. If that happens once, right, that could be by chance. But if it happens in the next year as well, and after two or three times, that is not random, right? Then there is some relation between the people involved. And that allows you to do some scary network analysis. If you're looking for the structured data that's already there, it's the open travel alliance. First it was in XML horror. Now it's in JSON. So maybe that will be, can be implemented in the final structure. Open travel alliance. Yeah, I don't know that one yet. No, it's international. Everything is in there, the planes, the trains, boats. Okay. Yeah, we, from the scheme of the world stuff, we support flights, trains, buses, events, restaurant reservations, and ferries and boats. Yeah. But there's certainly more that can be done. One quick final question. I wanted to remark that the anonymization of data fields is possible without being able to trace it back to an individual human being. Because airlines are innumerable. So you can get to the proverbial shouts, whereas user names or people's names are not. And so you could hash everything into the WAHOOZA and still recognize whether or not you should have recognized the field differently than what you've actually rendered in a client in this case. Right. Yeah, but anonymization has turned out to be rather tricky on input data like PDFs, where we also rely on the proper structure. So as soon as you start to modify this, it's not sure that the extractor still detects it in the same way. And we often don't know what kind of sensitive information is even in there or what the fields in the back would mean when we start with a new format. Right. So it's very hard to predict what we need to strike out. Sure, yes. But I thought we were talking about the JSON. Once we have the JSON, sure. But the JSON alone is not really enough to fix the extractor. We need the source document in its original form without modification to see where it goes wrong in the extraction. So if there is proper JSON in the source, then yes, then the JSON is enough. But if our source is a PDF document attached to the email and the barcode in there, then I need the full thing to debug why we failed the extractor. I'm interested, but we'll take this offline, I suppose. Yeah. Yeah. Right. A short technical question is Bogo in the room. Ah, right. There he is. Great. All right. So thank you very much for that lively discussion. Thank you, Falka, for the presentation. Once applause again.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.68, "text": " Okay. Okay. So, yeah, then we'll continue basically right where Hansjord left off.", "tokens": [50364, 1033, 13, 1033, 13, 407, 11, 1338, 11, 550, 321, 603, 2354, 1936, 558, 689, 17926, 73, 765, 1411, 766, 13, 51048], "temperature": 0.0, "avg_logprob": -0.33484813690185544, "compression_ratio": 1.2056737588652482, "no_speech_prob": 0.16200384497642517}, {"id": 1, "seek": 0, "start": 13.68, "end": 22.2, "text": " I'm Volker from KDE and I'll talk about how we do the semantic extraction in K-mail and", "tokens": [51048, 286, 478, 8911, 5767, 490, 591, 22296, 293, 286, 603, 751, 466, 577, 321, 360, 264, 47982, 30197, 294, 591, 12, 11799, 293, 51474], "temperature": 0.0, "avg_logprob": -0.33484813690185544, "compression_ratio": 1.2056737588652482, "no_speech_prob": 0.16200384497642517}, {"id": 2, "seek": 2220, "start": 23.0, "end": 34.16, "text": " specifically focusing on the travel use case. Many of you probably traveled here, so you might see", "tokens": [50404, 4682, 8416, 322, 264, 3147, 764, 1389, 13, 5126, 295, 291, 1391, 16147, 510, 11, 370, 291, 1062, 536, 50962], "temperature": 0.0, "avg_logprob": -0.20317347665851035, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.23224200308322906}, {"id": 3, "seek": 2220, "start": 34.16, "end": 40.2, "text": " why this could be useful. So, if you book your flight or your train or your hotel, you get the", "tokens": [50962, 983, 341, 727, 312, 4420, 13, 407, 11, 498, 291, 1446, 428, 7018, 420, 428, 3847, 420, 428, 7622, 11, 291, 483, 264, 51264], "temperature": 0.0, "avg_logprob": -0.20317347665851035, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.23224200308322906}, {"id": 4, "seek": 2220, "start": 40.2, "end": 46.44, "text": " confirmation as an HTML monstrosity full of advertisements and fine print and somewhere in", "tokens": [51264, 21871, 382, 364, 17995, 1108, 372, 2635, 507, 1577, 295, 42897, 293, 2489, 4482, 293, 4079, 294, 51576], "temperature": 0.0, "avg_logprob": -0.20317347665851035, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.23224200308322906}, {"id": 5, "seek": 2220, "start": 46.44, "end": 51.8, "text": " between is the information that you actually care about. So, you need to find that and transfer it", "tokens": [51576, 1296, 307, 264, 1589, 300, 291, 767, 1127, 466, 13, 407, 11, 291, 643, 281, 915, 300, 293, 5003, 309, 51844], "temperature": 0.0, "avg_logprob": -0.20317347665851035, "compression_ratio": 1.6437768240343347, "no_speech_prob": 0.23224200308322906}, {"id": 6, "seek": 5180, "start": 51.8, "end": 57.32, "text": " into like your calendar or your travel app and that if you do it manually, right, there's tedious", "tokens": [50364, 666, 411, 428, 12183, 420, 428, 3147, 724, 293, 300, 498, 291, 360, 309, 16945, 11, 558, 11, 456, 311, 38284, 50640], "temperature": 0.0, "avg_logprob": -0.22407994667689005, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.007796561811119318}, {"id": 7, "seek": 5180, "start": 57.32, "end": 64.72, "text": " and error prone. So, why can't we have that automatically? And that's basically the point", "tokens": [50640, 293, 6713, 25806, 13, 407, 11, 983, 393, 380, 321, 362, 300, 6772, 30, 400, 300, 311, 1936, 264, 935, 51010], "temperature": 0.0, "avg_logprob": -0.22407994667689005, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.007796561811119318}, {"id": 8, "seek": 5180, "start": 64.72, "end": 70.96, "text": " that got me into that topic. I was on the way home from a conference needed to find my departure", "tokens": [51010, 300, 658, 385, 666, 300, 4829, 13, 286, 390, 322, 264, 636, 1280, 490, 257, 7586, 2978, 281, 915, 452, 25866, 51322], "temperature": 0.0, "avg_logprob": -0.22407994667689005, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.007796561811119318}, {"id": 9, "seek": 5180, "start": 70.96, "end": 77.8, "text": " gate and I was written in like light gray on white in that style. So, I did what you would do in", "tokens": [51322, 8539, 293, 286, 390, 3720, 294, 411, 1442, 10855, 322, 2418, 294, 300, 3758, 13, 407, 11, 286, 630, 437, 291, 576, 360, 294, 51664], "temperature": 0.0, "avg_logprob": -0.22407994667689005, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.007796561811119318}, {"id": 10, "seek": 7780, "start": 77.8, "end": 83.28, "text": " that case like you read the email source code because that's easier to read and I stumbled", "tokens": [50364, 300, 1389, 411, 291, 1401, 264, 3796, 4009, 3089, 570, 300, 311, 3571, 281, 1401, 293, 286, 36668, 50638], "temperature": 0.0, "avg_logprob": -0.22665005144865616, "compression_ratio": 1.6419213973799127, "no_speech_prob": 0.00817501824349165}, {"id": 11, "seek": 7780, "start": 83.28, "end": 89.39999999999999, "text": " about a nice compact summary of the trip and that was the schema.org Jason that Hansjord", "tokens": [50638, 466, 257, 1481, 14679, 12691, 295, 264, 4931, 293, 300, 390, 264, 34078, 13, 4646, 11181, 300, 17926, 73, 765, 50944], "temperature": 0.0, "avg_logprob": -0.22665005144865616, "compression_ratio": 1.6419213973799127, "no_speech_prob": 0.00817501824349165}, {"id": 12, "seek": 7780, "start": 89.39999999999999, "end": 98.0, "text": " mentioned. So, just showing that in our email client right that should be easy. Six and a half years", "tokens": [50944, 2835, 13, 407, 11, 445, 4099, 300, 294, 527, 3796, 6423, 558, 300, 820, 312, 1858, 13, 11678, 293, 257, 1922, 924, 51374], "temperature": 0.0, "avg_logprob": -0.22665005144865616, "compression_ratio": 1.6419213973799127, "no_speech_prob": 0.00817501824349165}, {"id": 13, "seek": 7780, "start": 98.0, "end": 106.4, "text": " later, I'm not standing here and still talking about that subject, so as things usually go. So,", "tokens": [51374, 1780, 11, 286, 478, 406, 4877, 510, 293, 920, 1417, 466, 300, 3983, 11, 370, 382, 721, 2673, 352, 13, 407, 11, 51794], "temperature": 0.0, "avg_logprob": -0.22665005144865616, "compression_ratio": 1.6419213973799127, "no_speech_prob": 0.00817501824349165}, {"id": 14, "seek": 10640, "start": 107.0, "end": 115.32000000000001, "text": " Hansjord showed us already, right, it's the schema.org Jason that is something that I think", "tokens": [50394, 17926, 73, 765, 4712, 505, 1217, 11, 558, 11, 309, 311, 264, 34078, 13, 4646, 11181, 300, 307, 746, 300, 286, 519, 50810], "temperature": 0.0, "avg_logprob": -0.25216580420425255, "compression_ratio": 1.5443548387096775, "no_speech_prob": 0.005375067703425884}, {"id": 15, "seek": 10640, "start": 115.32000000000001, "end": 122.16000000000001, "text": " Google proposed 10 or 15 years ago for websites and for HTML email. Meanwhile, managed by the W3C,", "tokens": [50810, 3329, 10348, 1266, 420, 2119, 924, 2057, 337, 12891, 293, 337, 17995, 3796, 13, 13879, 11, 6453, 538, 264, 343, 18, 34, 11, 51152], "temperature": 0.0, "avg_logprob": -0.25216580420425255, "compression_ratio": 1.5443548387096775, "no_speech_prob": 0.005375067703425884}, {"id": 16, "seek": 10640, "start": 122.16000000000001, "end": 128.72, "text": " so it's a proper open standard. As an ontology that tries to model the complexities of the real", "tokens": [51152, 370, 309, 311, 257, 2296, 1269, 3832, 13, 1018, 364, 6592, 1793, 300, 9898, 281, 2316, 264, 48705, 295, 264, 957, 51480], "temperature": 0.0, "avg_logprob": -0.25216580420425255, "compression_ratio": 1.5443548387096775, "no_speech_prob": 0.005375067703425884}, {"id": 17, "seek": 10640, "start": 128.72, "end": 135.32, "text": " world, right, it has all the fun involved with that. But generally that is sane and something we", "tokens": [51480, 1002, 11, 558, 11, 309, 575, 439, 264, 1019, 3288, 365, 300, 13, 583, 5101, 300, 307, 45610, 293, 746, 321, 51810], "temperature": 0.0, "avg_logprob": -0.25216580420425255, "compression_ratio": 1.5443548387096775, "no_speech_prob": 0.005375067703425884}, {"id": 18, "seek": 13532, "start": 135.35999999999999, "end": 148.48, "text": " can work with. Then, however, we got in touch with the harsh realities out there because there's not", "tokens": [50366, 393, 589, 365, 13, 1396, 11, 4461, 11, 321, 658, 294, 2557, 365, 264, 14897, 27785, 484, 456, 570, 456, 311, 406, 51022], "temperature": 0.0, "avg_logprob": -0.2357959747314453, "compression_ratio": 1.408450704225352, "no_speech_prob": 0.006183371413499117}, {"id": 19, "seek": 13532, "start": 148.48, "end": 155.0, "text": " just that nice Jason format, there is also commonly used a micro data representation that basically", "tokens": [51022, 445, 300, 1481, 11181, 7877, 11, 456, 307, 611, 12719, 1143, 257, 4532, 1412, 10290, 300, 1936, 51348], "temperature": 0.0, "avg_logprob": -0.2357959747314453, "compression_ratio": 1.408450704225352, "no_speech_prob": 0.006183371413499117}, {"id": 20, "seek": 15500, "start": 155.04, "end": 165.28, "text": " embeds that tree of information in the HTML structure of the HTML email. Technically,", "tokens": [50366, 12240, 82, 300, 4230, 295, 1589, 294, 264, 17995, 3877, 295, 264, 17995, 3796, 13, 42494, 11, 50878], "temperature": 0.0, "avg_logprob": -0.1749998139746395, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.0076905591413378716}, {"id": 21, "seek": 15500, "start": 165.28, "end": 171.52, "text": " that's possible and still well defined, but it then basically puts HTML parsing into your", "tokens": [50878, 300, 311, 1944, 293, 920, 731, 7642, 11, 457, 309, 550, 1936, 8137, 17995, 21156, 278, 666, 428, 51190], "temperature": 0.0, "avg_logprob": -0.1749998139746395, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.0076905591413378716}, {"id": 22, "seek": 15500, "start": 171.52, "end": 176.4, "text": " problem space with all the fun that that entails. Well, okay, so we implemented that as well.", "tokens": [51190, 1154, 1901, 365, 439, 264, 1019, 300, 300, 50133, 13, 1042, 11, 1392, 11, 370, 321, 12270, 300, 382, 731, 13, 51434], "temperature": 0.0, "avg_logprob": -0.1749998139746395, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.0076905591413378716}, {"id": 23, "seek": 15500, "start": 176.4, "end": 183.76, "text": " Then we discovered a third variant of encoding that information, basically syntactically", "tokens": [51434, 1396, 321, 6941, 257, 2636, 17501, 295, 43430, 300, 1589, 11, 1936, 23980, 578, 984, 51802], "temperature": 0.0, "avg_logprob": -0.1749998139746395, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.0076905591413378716}, {"id": 24, "seek": 18376, "start": 183.79999999999998, "end": 190.0, "text": " invalid Jason. Comalist Jason is particularly popular, so we ended up adding workarounds for", "tokens": [50366, 34702, 11181, 13, 2432, 304, 468, 11181, 307, 4098, 3743, 11, 370, 321, 4590, 493, 5127, 589, 289, 4432, 337, 50676], "temperature": 0.0, "avg_logprob": -0.17713644287802957, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.0013454315485432744}, {"id": 25, "seek": 18376, "start": 190.0, "end": 196.56, "text": " the Jason parser to deal with all of that. Then we found the actually much bigger problem and", "tokens": [50676, 264, 11181, 21156, 260, 281, 2028, 365, 439, 295, 300, 13, 1396, 321, 1352, 264, 767, 709, 3801, 1154, 293, 51004], "temperature": 0.0, "avg_logprob": -0.17713644287802957, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.0013454315485432744}, {"id": 26, "seek": 18376, "start": 196.56, "end": 203.68, "text": " that is semantically incorrect data. I think the most extreme case was Air Berlin. They had the", "tokens": [51004, 300, 307, 4361, 49505, 18424, 1412, 13, 286, 519, 264, 881, 8084, 1389, 390, 5774, 13848, 13, 814, 632, 264, 51360], "temperature": 0.0, "avg_logprob": -0.17713644287802957, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.0013454315485432744}, {"id": 27, "seek": 18376, "start": 203.68, "end": 209.39999999999998, "text": " arrival and departure times for flights in the local time zone of the airports, as you would", "tokens": [51360, 18365, 293, 25866, 1413, 337, 21089, 294, 264, 2654, 565, 6668, 295, 264, 36561, 11, 382, 291, 576, 51646], "temperature": 0.0, "avg_logprob": -0.17713644287802957, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.0013454315485432744}, {"id": 28, "seek": 20940, "start": 209.44, "end": 215.08, "text": " usually do it. But then they added the UTC offset of what is presumably their server location.", "tokens": [50366, 2673, 360, 309, 13, 583, 550, 436, 3869, 264, 624, 18238, 18687, 295, 437, 307, 26742, 641, 7154, 4914, 13, 50648], "temperature": 0.0, "avg_logprob": -0.2072168547531654, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.010478527285158634}, {"id": 29, "seek": 20940, "start": 215.08, "end": 221.0, "text": " So if you travel to the US, eight hour difference, you probably noticed that something is wrong.", "tokens": [50648, 407, 498, 291, 3147, 281, 264, 2546, 11, 3180, 1773, 2649, 11, 291, 1391, 5694, 300, 746, 307, 2085, 13, 50944], "temperature": 0.0, "avg_logprob": -0.2072168547531654, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.010478527285158634}, {"id": 30, "seek": 20940, "start": 221.0, "end": 226.12, "text": " If you travel from here to Finland, a subtle one hour difference, super dangerous,", "tokens": [50944, 759, 291, 3147, 490, 510, 281, 24869, 11, 257, 13743, 472, 1773, 2649, 11, 1687, 5795, 11, 51200], "temperature": 0.0, "avg_logprob": -0.2072168547531654, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.010478527285158634}, {"id": 31, "seek": 20940, "start": 226.12, "end": 232.08, "text": " you're under risk of missing your flight. Another common problem, there's an address and there's", "tokens": [51200, 291, 434, 833, 3148, 295, 5361, 428, 7018, 13, 3996, 2689, 1154, 11, 456, 311, 364, 2985, 293, 456, 311, 51498], "temperature": 0.0, "avg_logprob": -0.2072168547531654, "compression_ratio": 1.5854700854700854, "no_speech_prob": 0.010478527285158634}, {"id": 32, "seek": 23208, "start": 232.12, "end": 239.64000000000001, "text": " a geo-coordinate. They mismatch and not just by a few meters. We have to deal with that as well.", "tokens": [50366, 257, 43198, 12, 1291, 37326, 13, 814, 23220, 852, 293, 406, 445, 538, 257, 1326, 8146, 13, 492, 362, 281, 2028, 365, 300, 382, 731, 13, 50742], "temperature": 0.0, "avg_logprob": -0.22166061401367188, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.020935405045747757}, {"id": 33, "seek": 23208, "start": 239.64000000000001, "end": 246.76000000000002, "text": " Then of course the other big problem, this is by far not as widely used as we would wish.", "tokens": [50742, 1396, 295, 1164, 264, 661, 955, 1154, 11, 341, 307, 538, 1400, 406, 382, 13371, 1143, 382, 321, 576, 3172, 13, 51098], "temperature": 0.0, "avg_logprob": -0.22166061401367188, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.020935405045747757}, {"id": 34, "seek": 23208, "start": 246.76000000000002, "end": 253.48000000000002, "text": " You find it with some airlines, some of the hotel and event booking platforms have it.", "tokens": [51098, 509, 915, 309, 365, 512, 37147, 11, 512, 295, 264, 7622, 293, 2280, 34424, 9473, 362, 309, 13, 51434], "temperature": 0.0, "avg_logprob": -0.22166061401367188, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.020935405045747757}, {"id": 35, "seek": 23208, "start": 253.48000000000002, "end": 259.8, "text": " It's super rare for trains. I think in Europe it's only a train line. In general, on a scale from", "tokens": [51434, 467, 311, 1687, 5892, 337, 16329, 13, 286, 519, 294, 3315, 309, 311, 787, 257, 3847, 1622, 13, 682, 2674, 11, 322, 257, 4373, 490, 51750], "temperature": 0.0, "avg_logprob": -0.22166061401367188, "compression_ratio": 1.5458333333333334, "no_speech_prob": 0.020935405045747757}, {"id": 36, "seek": 25980, "start": 260.04, "end": 266.32, "text": " Silicon Valley startup to 100 plus year old European national railway, it's clearly biased", "tokens": [50376, 25351, 10666, 18578, 281, 2319, 1804, 1064, 1331, 6473, 4048, 25812, 11, 309, 311, 4448, 28035, 50690], "temperature": 0.0, "avg_logprob": -0.22710618518647693, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.003695971565321088}, {"id": 37, "seek": 25980, "start": 266.32, "end": 271.32, "text": " towards the former. It seems to be even less common in Asia than in Europe.", "tokens": [50690, 3030, 264, 5819, 13, 467, 2544, 281, 312, 754, 1570, 2689, 294, 10038, 813, 294, 3315, 13, 50940], "temperature": 0.0, "avg_logprob": -0.22710618518647693, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.003695971565321088}, {"id": 38, "seek": 25980, "start": 271.32, "end": 280.52, "text": " That isn't really satisfying, but at that point we were hooked and we really wanted those features.", "tokens": [50940, 663, 1943, 380, 534, 18348, 11, 457, 412, 300, 935, 321, 645, 20410, 293, 321, 534, 1415, 729, 4122, 13, 51400], "temperature": 0.0, "avg_logprob": -0.22710618518647693, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.003695971565321088}, {"id": 39, "seek": 25980, "start": 280.52, "end": 288.92, "text": " We started to look where else we could get them from. There's actually a lot of stuff that we", "tokens": [51400, 492, 1409, 281, 574, 689, 1646, 321, 727, 483, 552, 490, 13, 821, 311, 767, 257, 688, 295, 1507, 300, 321, 51820], "temperature": 0.0, "avg_logprob": -0.22710618518647693, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.003695971565321088}, {"id": 40, "seek": 28892, "start": 288.96000000000004, "end": 296.68, "text": " can extract data from in such emails. One particularly useful thing are flight and train ticket barcodes,", "tokens": [50366, 393, 8947, 1412, 490, 294, 1270, 12524, 13, 1485, 4098, 4420, 551, 366, 7018, 293, 3847, 10550, 2159, 66, 4789, 11, 50752], "temperature": 0.0, "avg_logprob": -0.2090311800495962, "compression_ratio": 1.5330578512396693, "no_speech_prob": 0.0012232291046530008}, {"id": 41, "seek": 28892, "start": 296.68, "end": 302.52000000000004, "text": " which then moves PDF parsing and image processing in our problem space. It gets worse.", "tokens": [50752, 597, 550, 6067, 17752, 21156, 278, 293, 3256, 9007, 294, 527, 1154, 1901, 13, 467, 2170, 5324, 13, 51044], "temperature": 0.0, "avg_logprob": -0.2090311800495962, "compression_ratio": 1.5330578512396693, "no_speech_prob": 0.0012232291046530008}, {"id": 42, "seek": 28892, "start": 302.52000000000004, "end": 310.04, "text": " That thing is an entire world on its own. I spoke a bit about that last year in the", "tokens": [51044, 663, 551, 307, 364, 2302, 1002, 322, 1080, 1065, 13, 286, 7179, 257, 857, 466, 300, 1036, 1064, 294, 264, 51420], "temperature": 0.0, "avg_logprob": -0.2090311800495962, "compression_ratio": 1.5330578512396693, "no_speech_prob": 0.0012232291046530008}, {"id": 43, "seek": 28892, "start": 310.04, "end": 318.40000000000003, "text": " railways and open transport deff room. I tried to skip that here. Another thing commonly found", "tokens": [51420, 8765, 942, 293, 1269, 5495, 368, 602, 1808, 13, 286, 3031, 281, 10023, 300, 510, 13, 3996, 551, 12719, 1352, 51838], "temperature": 0.0, "avg_logprob": -0.2090311800495962, "compression_ratio": 1.5330578512396693, "no_speech_prob": 0.0012232291046530008}, {"id": 44, "seek": 31840, "start": 318.56, "end": 325.44, "text": " on booking emails is Apple wallet parsers that zip files containing JSON. Parts of it is machine", "tokens": [50372, 322, 34424, 12524, 307, 6373, 16599, 21156, 433, 300, 20730, 7098, 19273, 31828, 13, 4100, 82, 295, 309, 307, 3479, 50716], "temperature": 0.0, "avg_logprob": -0.21824751959906685, "compression_ratio": 1.579591836734694, "no_speech_prob": 0.0029776704031974077}, {"id": 45, "seek": 31840, "start": 325.44, "end": 331.35999999999996, "text": " readable. Parts of it is visual representation, but at least for location and time in the barcode.", "tokens": [50716, 49857, 13, 4100, 82, 295, 309, 307, 5056, 10290, 11, 457, 412, 1935, 337, 4914, 293, 565, 294, 264, 2159, 22332, 13, 51012], "temperature": 0.0, "avg_logprob": -0.21824751959906685, "compression_ratio": 1.579591836734694, "no_speech_prob": 0.0029776704031974077}, {"id": 46, "seek": 31840, "start": 331.35999999999996, "end": 336.88, "text": " That's a good starting point. Then of course there is the whole unstructured human readable part.", "tokens": [51012, 663, 311, 257, 665, 2891, 935, 13, 1396, 295, 1164, 456, 307, 264, 1379, 18799, 46847, 1952, 49857, 644, 13, 51288], "temperature": 0.0, "avg_logprob": -0.21824751959906685, "compression_ratio": 1.579591836734694, "no_speech_prob": 0.0029776704031974077}, {"id": 47, "seek": 31840, "start": 336.88, "end": 346.03999999999996, "text": " For some of that we were able to build generic extractors. Something like an airline boarding", "tokens": [51288, 1171, 512, 295, 300, 321, 645, 1075, 281, 1322, 19577, 8947, 830, 13, 6595, 411, 364, 29528, 30528, 51746], "temperature": 0.0, "avg_logprob": -0.21824751959906685, "compression_ratio": 1.579591836734694, "no_speech_prob": 0.0029776704031974077}, {"id": 48, "seek": 34604, "start": 346.04, "end": 351.96000000000004, "text": " pass. They might look very different from a visual and layout point of view, but they can all be", "tokens": [50364, 1320, 13, 814, 1062, 574, 588, 819, 490, 257, 5056, 293, 13333, 935, 295, 1910, 11, 457, 436, 393, 439, 312, 50660], "temperature": 0.0, "avg_logprob": -0.14650803026945694, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.01819845288991928}, {"id": 49, "seek": 34604, "start": 351.96000000000004, "end": 359.08000000000004, "text": " very reliably identified using the barcode. The barcode only contains very basic information,", "tokens": [50660, 588, 49927, 9234, 1228, 264, 2159, 22332, 13, 440, 2159, 22332, 787, 8306, 588, 3875, 1589, 11, 51016], "temperature": 0.0, "avg_logprob": -0.14650803026945694, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.01819845288991928}, {"id": 50, "seek": 34604, "start": 359.08000000000004, "end": 364.12, "text": " like the day of travel, not the year or the time, and only the airport codes, but not the gate,", "tokens": [51016, 411, 264, 786, 295, 3147, 11, 406, 264, 1064, 420, 264, 565, 11, 293, 787, 264, 10155, 14211, 11, 457, 406, 264, 8539, 11, 51268], "temperature": 0.0, "avg_logprob": -0.14650803026945694, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.01819845288991928}, {"id": 51, "seek": 34604, "start": 364.12, "end": 370.28000000000003, "text": " and so on. All of that information that is really relevant for you is in that human readable text", "tokens": [51268, 293, 370, 322, 13, 1057, 295, 300, 1589, 300, 307, 534, 7340, 337, 291, 307, 294, 300, 1952, 49857, 2487, 51576], "temperature": 0.0, "avg_logprob": -0.14650803026945694, "compression_ratio": 1.7066666666666668, "no_speech_prob": 0.01819845288991928}, {"id": 52, "seek": 37028, "start": 370.28, "end": 378.52, "text": " somewhere. It's possible to identify that and match it. For everything else we have", "tokens": [50364, 4079, 13, 467, 311, 1944, 281, 5876, 300, 293, 2995, 309, 13, 1171, 1203, 1646, 321, 362, 50776], "temperature": 0.0, "avg_logprob": -0.24721010107743113, "compression_ratio": 1.3555555555555556, "no_speech_prob": 0.004390435758978128}, {"id": 53, "seek": 37028, "start": 380.35999999999996, "end": 383.64, "text": " provider specific extractor script. That's usually a few lines of", "tokens": [50868, 12398, 2685, 8947, 284, 5755, 13, 663, 311, 2673, 257, 1326, 3876, 295, 51032], "temperature": 0.0, "avg_logprob": -0.24721010107743113, "compression_ratio": 1.3555555555555556, "no_speech_prob": 0.004390435758978128}, {"id": 54, "seek": 37028, "start": 384.67999999999995, "end": 392.28, "text": " JavaScript with regular expressions or X pass queries on the HTML. Not pretty, but it gets the", "tokens": [51084, 15778, 365, 3890, 15277, 420, 1783, 1320, 24109, 322, 264, 17995, 13, 1726, 1238, 11, 457, 309, 2170, 264, 51464], "temperature": 0.0, "avg_logprob": -0.24721010107743113, "compression_ratio": 1.3555555555555556, "no_speech_prob": 0.004390435758978128}, {"id": 55, "seek": 39228, "start": 392.28, "end": 401.47999999999996, "text": " job done. With all of those ways of getting data out, we still have the problem that the data", "tokens": [50364, 1691, 1096, 13, 2022, 439, 295, 729, 2098, 295, 1242, 1412, 484, 11, 321, 920, 362, 264, 1154, 300, 264, 1412, 50824], "temperature": 0.0, "avg_logprob": -0.1538696790996351, "compression_ratio": 1.5078534031413613, "no_speech_prob": 0.004980477970093489}, {"id": 56, "seek": 39228, "start": 401.47999999999996, "end": 409.4, "text": " quality isn't really on a level that we can work with. In particular we care about the very", "tokens": [50824, 3125, 1943, 380, 534, 322, 257, 1496, 300, 321, 393, 589, 365, 13, 682, 1729, 321, 1127, 466, 264, 588, 51220], "temperature": 0.0, "avg_logprob": -0.1538696790996351, "compression_ratio": 1.5078534031413613, "no_speech_prob": 0.004980477970093489}, {"id": 57, "seek": 39228, "start": 409.4, "end": 416.59999999999997, "text": " exact time, including the time zone. By time zone I really mean IA and A time zone ID, not UTC offset,", "tokens": [51220, 1900, 565, 11, 3009, 264, 565, 6668, 13, 3146, 565, 6668, 286, 534, 914, 286, 32, 293, 316, 565, 6668, 7348, 11, 406, 624, 18238, 18687, 11, 51580], "temperature": 0.0, "avg_logprob": -0.1538696790996351, "compression_ratio": 1.5078534031413613, "no_speech_prob": 0.004980477970093489}, {"id": 58, "seek": 41660, "start": 417.24, "end": 421.56, "text": " because if you have a delay over a day-life saving time change, and yes that does happen,", "tokens": [50396, 570, 498, 291, 362, 257, 8577, 670, 257, 786, 12, 9073, 6816, 565, 1319, 11, 293, 2086, 300, 775, 1051, 11, 50612], "temperature": 0.0, "avg_logprob": -0.18978220917457758, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.0038811182603240013}, {"id": 59, "seek": 41660, "start": 422.20000000000005, "end": 426.36, "text": " then you really need the exact time zone to know when your new departure time is.", "tokens": [50644, 550, 291, 534, 643, 264, 1900, 565, 6668, 281, 458, 562, 428, 777, 25866, 565, 307, 13, 50852], "temperature": 0.0, "avg_logprob": -0.18978220917457758, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.0038811182603240013}, {"id": 60, "seek": 41660, "start": 427.64000000000004, "end": 433.08000000000004, "text": " And the other aspect that is really important is the precise location. So as a geocoordinate,", "tokens": [50916, 400, 264, 661, 4171, 300, 307, 534, 1021, 307, 264, 13600, 4914, 13, 407, 382, 257, 1519, 11198, 37326, 11, 51188], "temperature": 0.0, "avg_logprob": -0.18978220917457758, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.0038811182603240013}, {"id": 61, "seek": 41660, "start": 433.8, "end": 438.12, "text": " that in turn also helps with determining the time zone, but we want to have features like", "tokens": [51224, 300, 294, 1261, 611, 3665, 365, 23751, 264, 565, 6668, 11, 457, 321, 528, 281, 362, 4122, 411, 51440], "temperature": 0.0, "avg_logprob": -0.18978220917457758, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.0038811182603240013}, {"id": 62, "seek": 43812, "start": 438.12, "end": 446.52, "text": " routing to your departure location or your hotel. And in order to improve on the input data,", "tokens": [50364, 32722, 281, 428, 25866, 4914, 420, 428, 7622, 13, 400, 294, 1668, 281, 3470, 322, 264, 4846, 1412, 11, 50784], "temperature": 0.0, "avg_logprob": -0.14507556969011334, "compression_ratio": 1.5, "no_speech_prob": 0.006685173138976097}, {"id": 63, "seek": 43812, "start": 447.8, "end": 453.96, "text": " we use some external data sources like OpenStreetMap or VickyData to resolve airport or train", "tokens": [50848, 321, 764, 512, 8320, 1412, 7139, 411, 7238, 50, 3599, 302, 44, 569, 420, 691, 20539, 35, 3274, 281, 14151, 10155, 420, 3847, 51156], "temperature": 0.0, "avg_logprob": -0.14507556969011334, "compression_ratio": 1.5, "no_speech_prob": 0.006685173138976097}, {"id": 64, "seek": 43812, "start": 453.96, "end": 462.52, "text": " station identifiers and get to the exact location. And we have a few things that apply domain knowledge.", "tokens": [51156, 5214, 2473, 23463, 293, 483, 281, 264, 1900, 4914, 13, 400, 321, 362, 257, 1326, 721, 300, 3079, 9274, 3601, 13, 51584], "temperature": 0.0, "avg_logprob": -0.14507556969011334, "compression_ratio": 1.5, "no_speech_prob": 0.006685173138976097}, {"id": 65, "seek": 46252, "start": 462.59999999999997, "end": 467.0, "text": " For example, if you email, we first to a flight from Brussels to Stuttgart,", "tokens": [50368, 1171, 1365, 11, 498, 291, 3796, 11, 321, 700, 281, 257, 7018, 490, 38717, 281, 745, 13478, 49330, 11, 50588], "temperature": 0.0, "avg_logprob": -0.20136927743243355, "compression_ratio": 1.765625, "no_speech_prob": 0.013832449913024902}, {"id": 66, "seek": 46252, "start": 467.0, "end": 472.35999999999996, "text": " and mentions a flight time of about an hour. There's two airports with Brussels in the name.", "tokens": [50588, 293, 23844, 257, 7018, 565, 295, 466, 364, 1773, 13, 821, 311, 732, 36561, 365, 38717, 294, 264, 1315, 13, 50856], "temperature": 0.0, "avg_logprob": -0.20136927743243355, "compression_ratio": 1.765625, "no_speech_prob": 0.013832449913024902}, {"id": 67, "seek": 46252, "start": 473.0, "end": 477.71999999999997, "text": " They are both close to, or at least both of them are in Belgium, so we know the country", "tokens": [50888, 814, 366, 1293, 1998, 281, 11, 420, 412, 1935, 1293, 295, 552, 366, 294, 28094, 11, 370, 321, 458, 264, 1941, 51124], "temperature": 0.0, "avg_logprob": -0.20136927743243355, "compression_ratio": 1.765625, "no_speech_prob": 0.013832449913024902}, {"id": 68, "seek": 46252, "start": 477.71999999999997, "end": 483.08, "text": " and time zone. There's also two airports with the name Stuttgart. One is in southern Germany,", "tokens": [51124, 293, 565, 6668, 13, 821, 311, 611, 732, 36561, 365, 264, 1315, 745, 13478, 49330, 13, 1485, 307, 294, 13456, 7244, 11, 51392], "temperature": 0.0, "avg_logprob": -0.20136927743243355, "compression_ratio": 1.765625, "no_speech_prob": 0.013832449913024902}, {"id": 69, "seek": 46252, "start": 483.08, "end": 488.91999999999996, "text": " the other one is somewhere in the US. But based on the flight time, we know exactly which one of that", "tokens": [51392, 264, 661, 472, 307, 4079, 294, 264, 2546, 13, 583, 2361, 322, 264, 7018, 565, 11, 321, 458, 2293, 597, 472, 295, 300, 51684], "temperature": 0.0, "avg_logprob": -0.20136927743243355, "compression_ratio": 1.765625, "no_speech_prob": 0.013832449913024902}, {"id": 70, "seek": 48892, "start": 488.92, "end": 494.12, "text": " is possible, right? And I may have uniquely identified the other airport and so on and so on.", "tokens": [50364, 307, 1944, 11, 558, 30, 400, 286, 815, 362, 31474, 9234, 264, 661, 10155, 293, 370, 322, 293, 370, 322, 13, 50624], "temperature": 0.0, "avg_logprob": -0.1563434600830078, "compression_ratio": 1.6223175965665235, "no_speech_prob": 0.0032670593354851007}, {"id": 71, "seek": 48892, "start": 495.56, "end": 500.2, "text": " And then in the end, we have some validation and plausibility checks because they're still", "tokens": [50696, 400, 550, 294, 264, 917, 11, 321, 362, 512, 24071, 293, 34946, 2841, 13834, 570, 436, 434, 920, 50928], "temperature": 0.0, "avg_logprob": -0.1563434600830078, "compression_ratio": 1.6223175965665235, "no_speech_prob": 0.0032670593354851007}, {"id": 72, "seek": 48892, "start": 500.2, "end": 506.6, "text": " either incomplete or nonsense coming through, right? So if you would require time travel to", "tokens": [50928, 2139, 31709, 420, 14925, 1348, 807, 11, 558, 30, 407, 498, 291, 576, 3651, 565, 3147, 281, 51248], "temperature": 0.0, "avg_logprob": -0.1563434600830078, "compression_ratio": 1.6223175965665235, "no_speech_prob": 0.0032670593354851007}, {"id": 73, "seek": 48892, "start": 506.6, "end": 515.4, "text": " make that trip, then it's likely wrong somehow. And that's then how it looks like in the integration.", "tokens": [51248, 652, 300, 4931, 11, 550, 309, 311, 3700, 2085, 6063, 13, 400, 300, 311, 550, 577, 309, 1542, 411, 294, 264, 10980, 13, 51688], "temperature": 0.0, "avg_logprob": -0.1563434600830078, "compression_ratio": 1.6223175965665235, "no_speech_prob": 0.0032670593354851007}, {"id": 74, "seek": 51540, "start": 515.4, "end": 523.72, "text": " So we run the current email through the extractor. If it finds something, it shows a summary of that", "tokens": [50364, 407, 321, 1190, 264, 2190, 3796, 807, 264, 8947, 284, 13, 759, 309, 10704, 746, 11, 309, 3110, 257, 12691, 295, 300, 50780], "temperature": 0.0, "avg_logprob": -0.11989619255065918, "compression_ratio": 1.552, "no_speech_prob": 0.0009835989912971854}, {"id": 75, "seek": 51540, "start": 523.72, "end": 529.8, "text": " and offers you to add that to your calendar or to your travel app on the phone. This is in KML.", "tokens": [50780, 293, 7736, 291, 281, 909, 300, 281, 428, 12183, 420, 281, 428, 3147, 724, 322, 264, 2593, 13, 639, 307, 294, 591, 12683, 13, 51084], "temperature": 0.0, "avg_logprob": -0.11989619255065918, "compression_ratio": 1.552, "no_speech_prob": 0.0009835989912971854}, {"id": 76, "seek": 51540, "start": 530.4399999999999, "end": 536.36, "text": " Originally, the extractor started as a library for KML, but it's also available as a standalone", "tokens": [51116, 28696, 11, 264, 8947, 284, 1409, 382, 257, 6405, 337, 591, 12683, 11, 457, 309, 311, 611, 2435, 382, 257, 37454, 51412], "temperature": 0.0, "avg_logprob": -0.11989619255065918, "compression_ratio": 1.552, "no_speech_prob": 0.0009835989912971854}, {"id": 77, "seek": 51540, "start": 536.36, "end": 541.64, "text": " command line tool by now. That's how we did the integration in NextCloud. Same thing, right? We", "tokens": [51412, 5622, 1622, 2290, 538, 586, 13, 663, 311, 577, 321, 630, 264, 10980, 294, 3087, 32787, 13, 10635, 551, 11, 558, 30, 492, 51676], "temperature": 0.0, "avg_logprob": -0.11989619255065918, "compression_ratio": 1.552, "no_speech_prob": 0.0009835989912971854}, {"id": 78, "seek": 54164, "start": 541.64, "end": 547.48, "text": " showed a summary of what we found and you can add that to your calendar. There used to be a", "tokens": [50364, 4712, 257, 12691, 295, 437, 321, 1352, 293, 291, 393, 909, 300, 281, 428, 12183, 13, 821, 1143, 281, 312, 257, 50656], "temperature": 0.0, "avg_logprob": -0.18224753363657806, "compression_ratio": 1.6431095406360423, "no_speech_prob": 0.0021808170713484287}, {"id": 79, "seek": 54164, "start": 547.48, "end": 552.76, "text": " Thunderbird plugin, but Thunderbird changed the integration API and since then that stalled a", "tokens": [50656, 21023, 18080, 23407, 11, 457, 21023, 18080, 3105, 264, 10980, 9362, 293, 1670, 550, 300, 342, 8907, 257, 50920], "temperature": 0.0, "avg_logprob": -0.18224753363657806, "compression_ratio": 1.6431095406360423, "no_speech_prob": 0.0021808170713484287}, {"id": 80, "seek": 54164, "start": 552.76, "end": 557.48, "text": " bit. There's a lot of demand for that, so it would be nice to redirect that at some point.", "tokens": [50920, 857, 13, 821, 311, 257, 688, 295, 4733, 337, 300, 11, 370, 309, 576, 312, 1481, 281, 29066, 300, 412, 512, 935, 13, 51156], "temperature": 0.0, "avg_logprob": -0.18224753363657806, "compression_ratio": 1.6431095406360423, "no_speech_prob": 0.0021808170713484287}, {"id": 81, "seek": 54164, "start": 558.84, "end": 563.4, "text": " And then there's of course the dedicated travel app, it's a memory that we built out of all of this", "tokens": [51224, 400, 550, 456, 311, 295, 1164, 264, 8374, 3147, 724, 11, 309, 311, 257, 4675, 300, 321, 3094, 484, 295, 439, 295, 341, 51452], "temperature": 0.0, "avg_logprob": -0.18224753363657806, "compression_ratio": 1.6431095406360423, "no_speech_prob": 0.0021808170713484287}, {"id": 82, "seek": 54164, "start": 564.1999999999999, "end": 568.92, "text": " that Hans-J\u00f6rg had already mentioned, where you get a timeline of your trip and it then", "tokens": [51492, 300, 17926, 12, 41, 2311, 70, 632, 1217, 2835, 11, 689, 291, 483, 257, 12933, 295, 428, 4931, 293, 309, 550, 51728], "temperature": 0.0, "avg_logprob": -0.18224753363657806, "compression_ratio": 1.6431095406360423, "no_speech_prob": 0.0021808170713484287}, {"id": 83, "seek": 56892, "start": 568.92, "end": 573.24, "text": " fills the gaps with local public transport and looks for the weather forecast and reminds you", "tokens": [50364, 22498, 264, 15031, 365, 2654, 1908, 5495, 293, 1542, 337, 264, 5503, 14330, 293, 12025, 291, 50580], "temperature": 0.0, "avg_logprob": -0.1088670185634068, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.002665038453415036}, {"id": 84, "seek": 56892, "start": 573.24, "end": 577.0, "text": " to bring a power plug converter if you're traveling to a country where you need that.", "tokens": [50580, 281, 1565, 257, 1347, 5452, 33905, 498, 291, 434, 9712, 281, 257, 1941, 689, 291, 643, 300, 13, 50768], "temperature": 0.0, "avg_logprob": -0.1088670185634068, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.002665038453415036}, {"id": 85, "seek": 56892, "start": 578.4399999999999, "end": 584.76, "text": " And I mean, that is exactly the kind of high-level semantic features and workflows that we can", "tokens": [50840, 400, 286, 914, 11, 300, 307, 2293, 264, 733, 295, 1090, 12, 12418, 47982, 4122, 293, 43461, 300, 321, 393, 51156], "temperature": 0.0, "avg_logprob": -0.1088670185634068, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.002665038453415036}, {"id": 86, "seek": 56892, "start": 584.76, "end": 590.04, "text": " build if we actually understand what you're dealing with in your emails or in your documents.", "tokens": [51156, 1322, 498, 321, 767, 1223, 437, 291, 434, 6260, 365, 294, 428, 12524, 420, 294, 428, 8512, 13, 51420], "temperature": 0.0, "avg_logprob": -0.1088670185634068, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.002665038453415036}, {"id": 87, "seek": 56892, "start": 591.4799999999999, "end": 597.0799999999999, "text": " So if you produce any kind of transactional email, you most likely have a machine-needable", "tokens": [51492, 407, 498, 291, 5258, 604, 733, 295, 46688, 1966, 3796, 11, 291, 881, 3700, 362, 257, 3479, 12, 716, 292, 712, 51772], "temperature": 0.0, "avg_logprob": -0.1088670185634068, "compression_ratio": 1.6630434782608696, "no_speech_prob": 0.002665038453415036}, {"id": 88, "seek": 59708, "start": 597.1600000000001, "end": 603.8000000000001, "text": " representation of what this is about, so please add that also to the email in some form, ideally in", "tokens": [50368, 10290, 295, 437, 341, 307, 466, 11, 370, 1767, 909, 300, 611, 281, 264, 3796, 294, 512, 1254, 11, 22915, 294, 50700], "temperature": 0.0, "avg_logprob": -0.12098516443724273, "compression_ratio": 1.5261044176706828, "no_speech_prob": 0.004254539031535387}, {"id": 89, "seek": 59708, "start": 604.36, "end": 609.8000000000001, "text": " the format Hans-J\u00f6rg is working on, but as you have seen, we are not particularly picky in", "tokens": [50728, 264, 7877, 17926, 12, 41, 2311, 70, 307, 1364, 322, 11, 457, 382, 291, 362, 1612, 11, 321, 366, 406, 4098, 41099, 294, 51000], "temperature": 0.0, "avg_logprob": -0.12098516443724273, "compression_ratio": 1.5261044176706828, "no_speech_prob": 0.004254539031535387}, {"id": 90, "seek": 59708, "start": 611.24, "end": 617.0, "text": " extracting, right? So anything that isn't regular expressions on human readable text would be", "tokens": [51072, 49844, 11, 558, 30, 407, 1340, 300, 1943, 380, 3890, 15277, 322, 1952, 49857, 2487, 576, 312, 51360], "temperature": 0.0, "avg_logprob": -0.12098516443724273, "compression_ratio": 1.5261044176706828, "no_speech_prob": 0.004254539031535387}, {"id": 91, "seek": 59708, "start": 617.64, "end": 625.08, "text": " a big help already. And then finally, I haven't mentioned that yet, all of that of course runs", "tokens": [51392, 257, 955, 854, 1217, 13, 400, 550, 2721, 11, 286, 2378, 380, 2835, 300, 1939, 11, 439, 295, 300, 295, 1164, 6676, 51764], "temperature": 0.0, "avg_logprob": -0.12098516443724273, "compression_ratio": 1.5261044176706828, "no_speech_prob": 0.004254539031535387}, {"id": 92, "seek": 62508, "start": 625.08, "end": 630.44, "text": " on your device, right? Unlike Google, Apple or TripIt, we don't read your email for this.", "tokens": [50364, 322, 428, 4302, 11, 558, 30, 17657, 3329, 11, 6373, 420, 33141, 3522, 11, 321, 500, 380, 1401, 428, 3796, 337, 341, 13, 50632], "temperature": 0.0, "avg_logprob": -0.13216568174816312, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.006365906912833452}, {"id": 93, "seek": 62508, "start": 632.44, "end": 637.24, "text": " That on the other hand means we have not as many training samples as they have,", "tokens": [50732, 663, 322, 264, 661, 1011, 1355, 321, 362, 406, 382, 867, 3097, 10938, 382, 436, 362, 11, 50972], "temperature": 0.0, "avg_logprob": -0.13216568174816312, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.006365906912833452}, {"id": 94, "seek": 62508, "start": 637.88, "end": 645.0, "text": " so we entirely rely on people donating us travel-related emails in some form, so", "tokens": [51004, 370, 321, 7696, 10687, 322, 561, 36686, 505, 3147, 12, 12004, 12524, 294, 512, 1254, 11, 370, 51360], "temperature": 0.0, "avg_logprob": -0.13216568174816312, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.006365906912833452}, {"id": 95, "seek": 62508, "start": 646.2800000000001, "end": 650.6, "text": " that is one way to help. Yeah, and that's it. Thank you.", "tokens": [51424, 300, 307, 472, 636, 281, 854, 13, 865, 11, 293, 300, 311, 309, 13, 1044, 291, 13, 51640], "temperature": 0.0, "avg_logprob": -0.13216568174816312, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.006365906912833452}, {"id": 96, "seek": 65060, "start": 651.5600000000001, "end": 655.5600000000001, "text": " Thank you.", "tokens": [50412, 1044, 291, 13, 50612], "temperature": 0.0, "avg_logprob": -0.25808623529249625, "compression_ratio": 1.4191616766467066, "no_speech_prob": 0.022254692390561104}, {"id": 97, "seek": 65060, "start": 657.8000000000001, "end": 661.48, "text": " All right, again, we have our number one question to ask today.", "tokens": [50724, 1057, 558, 11, 797, 11, 321, 362, 527, 1230, 472, 1168, 281, 1029, 965, 13, 50908], "temperature": 0.0, "avg_logprob": -0.25808623529249625, "compression_ratio": 1.4191616766467066, "no_speech_prob": 0.022254692390561104}, {"id": 98, "seek": 65060, "start": 665.16, "end": 669.0, "text": " Do you have any statistics on signal to noise ratio? Essentially,", "tokens": [51092, 1144, 291, 362, 604, 12523, 322, 6358, 281, 5658, 8509, 30, 23596, 11, 51284], "temperature": 0.0, "avg_logprob": -0.25808623529249625, "compression_ratio": 1.4191616766467066, "no_speech_prob": 0.022254692390561104}, {"id": 99, "seek": 65060, "start": 670.6, "end": 677.88, "text": " how many times is the information wrong? Do you kind of any reviews or testing in terms of like,", "tokens": [51364, 577, 867, 1413, 307, 264, 1589, 2085, 30, 1144, 291, 733, 295, 604, 10229, 420, 4997, 294, 2115, 295, 411, 11, 51728], "temperature": 0.0, "avg_logprob": -0.25808623529249625, "compression_ratio": 1.4191616766467066, "no_speech_prob": 0.022254692390561104}, {"id": 100, "seek": 67788, "start": 678.6, "end": 682.92, "text": " you say that incorrect information is better than no information, but does it ever get", "tokens": [50400, 291, 584, 300, 18424, 1589, 307, 1101, 813, 572, 1589, 11, 457, 775, 309, 1562, 483, 50616], "temperature": 0.0, "avg_logprob": -0.15362559727260044, "compression_ratio": 1.6022099447513811, "no_speech_prob": 0.0021468421909958124}, {"id": 101, "seek": 67788, "start": 682.92, "end": 691.32, "text": " confusing to a user, for example? I mean, we try very, very hard to detect stuff that is not plausible", "tokens": [50616, 13181, 281, 257, 4195, 11, 337, 1365, 30, 286, 914, 11, 321, 853, 588, 11, 588, 1152, 281, 5531, 1507, 300, 307, 406, 39925, 51036], "temperature": 0.0, "avg_logprob": -0.15362559727260044, "compression_ratio": 1.6022099447513811, "no_speech_prob": 0.0021468421909958124}, {"id": 102, "seek": 67788, "start": 691.32, "end": 701.88, "text": " or to fit out anything that we at least can detect. How much gets through that is not detectable and", "tokens": [51036, 420, 281, 3318, 484, 1340, 300, 321, 412, 1935, 393, 5531, 13, 1012, 709, 2170, 807, 300, 307, 406, 5531, 712, 293, 51564], "temperature": 0.0, "avg_logprob": -0.15362559727260044, "compression_ratio": 1.6022099447513811, "no_speech_prob": 0.0021468421909958124}, {"id": 103, "seek": 70188, "start": 701.88, "end": 711.32, "text": " then confusing. I don't actually know because the samples we have work or are filtered out,", "tokens": [50364, 550, 13181, 13, 286, 500, 380, 767, 458, 570, 264, 10938, 321, 362, 589, 420, 366, 37111, 484, 11, 50836], "temperature": 0.0, "avg_logprob": -0.18578063117133248, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.004197238013148308}, {"id": 104, "seek": 70188, "start": 712.6, "end": 718.28, "text": " but at least we don't get a lot of bug reports with I missed my flight because it showed something", "tokens": [50900, 457, 412, 1935, 321, 500, 380, 483, 257, 688, 295, 7426, 7122, 365, 286, 6721, 452, 7018, 570, 309, 4712, 746, 51184], "temperature": 0.0, "avg_logprob": -0.18578063117133248, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.004197238013148308}, {"id": 105, "seek": 70188, "start": 718.28, "end": 725.16, "text": " wrong, and usually it is individual providers and they are consistently wrong, so we can add", "tokens": [51184, 2085, 11, 293, 2673, 309, 307, 2609, 11330, 293, 436, 366, 14961, 2085, 11, 370, 321, 393, 909, 51528], "temperature": 0.0, "avg_logprob": -0.18578063117133248, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.004197238013148308}, {"id": 106, "seek": 70188, "start": 725.16, "end": 731.16, "text": " workarounds for that to filter them out and not show anything for them, for example. But there is", "tokens": [51528, 589, 289, 4432, 337, 300, 281, 6608, 552, 484, 293, 406, 855, 1340, 337, 552, 11, 337, 1365, 13, 583, 456, 307, 51828], "temperature": 0.0, "avg_logprob": -0.18578063117133248, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.004197238013148308}, {"id": 107, "seek": 73116, "start": 731.24, "end": 735.9599999999999, "text": " the risk for providers that we don't know. If they send out something that we can't detect,", "tokens": [50368, 264, 3148, 337, 11330, 300, 321, 500, 380, 458, 13, 759, 436, 2845, 484, 746, 300, 321, 393, 380, 5531, 11, 50604], "temperature": 0.0, "avg_logprob": -0.17087859818429657, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.002877892227843404}, {"id": 108, "seek": 73116, "start": 737.0799999999999, "end": 741.0799999999999, "text": " we might show you a wrong departure time, right? And that is a problem.", "tokens": [50660, 321, 1062, 855, 291, 257, 2085, 25866, 565, 11, 558, 30, 400, 300, 307, 257, 1154, 13, 50860], "temperature": 0.0, "avg_logprob": -0.17087859818429657, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.002877892227843404}, {"id": 109, "seek": 73116, "start": 750.04, "end": 757.0, "text": " But you could, I know you could not log, instead of not showing the possibly wrong information,", "tokens": [51308, 583, 291, 727, 11, 286, 458, 291, 727, 406, 3565, 11, 2602, 295, 406, 4099, 264, 6264, 2085, 1589, 11, 51656], "temperature": 0.0, "avg_logprob": -0.17087859818429657, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.002877892227843404}, {"id": 110, "seek": 75700, "start": 757.08, "end": 761.56, "text": " you could not log it somewhere and then to make those statistics.", "tokens": [50368, 291, 727, 406, 3565, 309, 4079, 293, 550, 281, 652, 729, 12523, 13, 50592], "temperature": 0.0, "avg_logprob": -0.28372026949512713, "compression_ratio": 1.59915611814346, "no_speech_prob": 0.009635420516133308}, {"id": 111, "seek": 75700, "start": 763.32, "end": 767.32, "text": " I mean, log in the way that we get the information. Yeah, because it's not a website.", "tokens": [50680, 286, 914, 11, 3565, 294, 264, 636, 300, 321, 483, 264, 1589, 13, 865, 11, 570, 309, 311, 406, 257, 3144, 13, 50880], "temperature": 0.0, "avg_logprob": -0.28372026949512713, "compression_ratio": 1.59915611814346, "no_speech_prob": 0.009635420516133308}, {"id": 112, "seek": 75700, "start": 767.88, "end": 770.92, "text": " That would go against the whole privacy idea that we are very...", "tokens": [50908, 663, 576, 352, 1970, 264, 1379, 11427, 1558, 300, 321, 366, 588, 485, 51060], "temperature": 0.0, "avg_logprob": -0.28372026949512713, "compression_ratio": 1.59915611814346, "no_speech_prob": 0.009635420516133308}, {"id": 113, "seek": 75700, "start": 770.92, "end": 774.76, "text": " But if, I don't know, if user agree to send those kind of...", "tokens": [51060, 583, 498, 11, 286, 500, 380, 458, 11, 498, 4195, 3986, 281, 2845, 729, 733, 295, 485, 51252], "temperature": 0.0, "avg_logprob": -0.28372026949512713, "compression_ratio": 1.59915611814346, "no_speech_prob": 0.009635420516133308}, {"id": 114, "seek": 75700, "start": 775.72, "end": 783.0, "text": " We don't have like a data donation feature built into the app right now. That might be an interesting", "tokens": [51300, 492, 500, 380, 362, 411, 257, 1412, 19724, 4111, 3094, 666, 264, 724, 558, 586, 13, 663, 1062, 312, 364, 1880, 51664], "temperature": 0.0, "avg_logprob": -0.28372026949512713, "compression_ratio": 1.59915611814346, "no_speech_prob": 0.009635420516133308}, {"id": 115, "seek": 78300, "start": 783.0, "end": 789.16, "text": " option. But some people send this to us then manually, basically. Yeah.", "tokens": [50364, 3614, 13, 583, 512, 561, 2845, 341, 281, 505, 550, 16945, 11, 1936, 13, 865, 13, 50672], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 116, "seek": 78300, "start": 789.16, "end": 793.48, "text": " I might, before I give some mic to Arndt, I might just comment on that because we talked already", "tokens": [50672, 286, 1062, 11, 949, 286, 976, 512, 3123, 281, 1587, 273, 83, 11, 286, 1062, 445, 2871, 322, 300, 570, 321, 2825, 1217, 50888], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 117, "seek": 78300, "start": 793.48, "end": 797.64, "text": " also at Mark to people and there is a lot of the email senders, right? So, and in general,", "tokens": [50888, 611, 412, 3934, 281, 561, 293, 456, 307, 257, 688, 295, 264, 3796, 2845, 433, 11, 558, 30, 407, 11, 293, 294, 2674, 11, 51096], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 118, "seek": 78300, "start": 797.64, "end": 802.28, "text": " there is some interest by them to support this in a way. So, I have a strong assumption, like,", "tokens": [51096, 456, 307, 512, 1179, 538, 552, 281, 1406, 341, 294, 257, 636, 13, 407, 11, 286, 362, 257, 2068, 15302, 11, 411, 11, 51328], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 119, "seek": 78300, "start": 802.28, "end": 806.6, "text": " if there is such faulty data, there might be ways to incentivize at least the big senders,", "tokens": [51328, 498, 456, 307, 1270, 2050, 5773, 1412, 11, 456, 1062, 312, 2098, 281, 35328, 1125, 412, 1935, 264, 955, 2845, 433, 11, 51544], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 120, "seek": 78300, "start": 806.6, "end": 810.36, "text": " the big brands to do it right. So, I'm not so concerned about that.", "tokens": [51544, 264, 955, 11324, 281, 360, 309, 558, 13, 407, 11, 286, 478, 406, 370, 5922, 466, 300, 13, 51732], "temperature": 0.0, "avg_logprob": -0.171236559641447, "compression_ratio": 1.721476510067114, "no_speech_prob": 0.01506288256496191}, {"id": 121, "seek": 81300, "start": 813.0, "end": 815.48, "text": " Yeah.", "tokens": [50364, 865, 13, 50488], "temperature": 0.0, "avg_logprob": -0.14794062144720732, "compression_ratio": 1.5328947368421053, "no_speech_prob": 0.01674174703657627}, {"id": 122, "seek": 81300, "start": 819.08, "end": 826.28, "text": " Asking people to send bug reports is okay, but if you ever get a mail client to send something", "tokens": [50668, 1018, 5092, 561, 281, 2845, 7426, 7122, 307, 1392, 11, 457, 498, 291, 1562, 483, 257, 10071, 6423, 281, 2845, 746, 51028], "temperature": 0.0, "avg_logprob": -0.14794062144720732, "compression_ratio": 1.5328947368421053, "no_speech_prob": 0.01674174703657627}, {"id": 123, "seek": 81300, "start": 827.32, "end": 832.92, "text": " to you, to log it, you're going to get information about people's sex life.", "tokens": [51080, 281, 291, 11, 281, 3565, 309, 11, 291, 434, 516, 281, 483, 1589, 466, 561, 311, 3260, 993, 13, 51360], "temperature": 0.0, "avg_logprob": -0.14794062144720732, "compression_ratio": 1.5328947368421053, "no_speech_prob": 0.01674174703657627}, {"id": 124, "seek": 81300, "start": 832.92, "end": 835.32, "text": " No matter what you try to get, you're going to get that.", "tokens": [51360, 883, 1871, 437, 291, 853, 281, 483, 11, 291, 434, 516, 281, 483, 300, 13, 51480], "temperature": 0.0, "avg_logprob": -0.14794062144720732, "compression_ratio": 1.5328947368421053, "no_speech_prob": 0.01674174703657627}, {"id": 125, "seek": 83532, "start": 835.4000000000001, "end": 844.6, "text": " It just happens, trust me. And then you have GDPR problems because, well, you thought it was", "tokens": [50368, 467, 445, 2314, 11, 3361, 385, 13, 400, 550, 291, 362, 19599, 49, 2740, 570, 11, 731, 11, 291, 1194, 309, 390, 50828], "temperature": 0.0, "avg_logprob": -0.2011744722406915, "compression_ratio": 1.5964912280701755, "no_speech_prob": 0.05110718309879303}, {"id": 126, "seek": 83532, "start": 844.6, "end": 849.6400000000001, "text": " the name of an airline, but it actually was the name of a person. Yeah, I mean, that is,", "tokens": [50828, 264, 1315, 295, 364, 29528, 11, 457, 309, 767, 390, 264, 1315, 295, 257, 954, 13, 865, 11, 286, 914, 11, 300, 307, 11, 51080], "temperature": 0.0, "avg_logprob": -0.2011744722406915, "compression_ratio": 1.5964912280701755, "no_speech_prob": 0.05110718309879303}, {"id": 127, "seek": 83532, "start": 850.6, "end": 855.24, "text": " I mean, that's one of the motivation why we are so focused on doing this locally and", "tokens": [51128, 286, 914, 11, 300, 311, 472, 295, 264, 12335, 983, 321, 366, 370, 5178, 322, 884, 341, 16143, 293, 51360], "temperature": 0.0, "avg_logprob": -0.2011744722406915, "compression_ratio": 1.5964912280701755, "no_speech_prob": 0.05110718309879303}, {"id": 128, "seek": 83532, "start": 855.24, "end": 861.1600000000001, "text": " with keeping control over this. Because, I mean, your personal travel is already quite sensitive.", "tokens": [51360, 365, 5145, 1969, 670, 341, 13, 1436, 11, 286, 914, 11, 428, 2973, 3147, 307, 1217, 1596, 9477, 13, 51656], "temperature": 0.0, "avg_logprob": -0.2011744722406915, "compression_ratio": 1.5964912280701755, "no_speech_prob": 0.05110718309879303}, {"id": 129, "seek": 86116, "start": 861.24, "end": 864.92, "text": " But if you combine that with everybody else, the amount of patterns you see,", "tokens": [50368, 583, 498, 291, 10432, 300, 365, 2201, 1646, 11, 264, 2372, 295, 8294, 291, 536, 11, 50552], "temperature": 0.0, "avg_logprob": -0.12870339246896598, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.003761329222470522}, {"id": 130, "seek": 86116, "start": 865.64, "end": 871.8, "text": " right, I mean, all of us travel to Brussels in the first weekend in February. If that happens once,", "tokens": [50588, 558, 11, 286, 914, 11, 439, 295, 505, 3147, 281, 38717, 294, 264, 700, 6711, 294, 8711, 13, 759, 300, 2314, 1564, 11, 50896], "temperature": 0.0, "avg_logprob": -0.12870339246896598, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.003761329222470522}, {"id": 131, "seek": 86116, "start": 871.8, "end": 877.88, "text": " right, that could be by chance. But if it happens in the next year as well, and after two or three", "tokens": [50896, 558, 11, 300, 727, 312, 538, 2931, 13, 583, 498, 309, 2314, 294, 264, 958, 1064, 382, 731, 11, 293, 934, 732, 420, 1045, 51200], "temperature": 0.0, "avg_logprob": -0.12870339246896598, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.003761329222470522}, {"id": 132, "seek": 86116, "start": 877.88, "end": 882.68, "text": " times, that is not random, right? Then there is some relation between the people involved.", "tokens": [51200, 1413, 11, 300, 307, 406, 4974, 11, 558, 30, 1396, 456, 307, 512, 9721, 1296, 264, 561, 3288, 13, 51440], "temperature": 0.0, "avg_logprob": -0.12870339246896598, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.003761329222470522}, {"id": 133, "seek": 86116, "start": 882.68, "end": 887.56, "text": " And that allows you to do some scary network analysis.", "tokens": [51440, 400, 300, 4045, 291, 281, 360, 512, 6958, 3209, 5215, 13, 51684], "temperature": 0.0, "avg_logprob": -0.12870339246896598, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.003761329222470522}, {"id": 134, "seek": 89116, "start": 891.4, "end": 896.6, "text": " If you're looking for the structured data that's already there, it's the open travel alliance.", "tokens": [50376, 759, 291, 434, 1237, 337, 264, 18519, 1412, 300, 311, 1217, 456, 11, 309, 311, 264, 1269, 3147, 20995, 13, 50636], "temperature": 0.0, "avg_logprob": -0.1585867508597996, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.13320088386535645}, {"id": 135, "seek": 89116, "start": 897.88, "end": 905.0, "text": " First it was in XML horror. Now it's in JSON. So maybe that will be, can be implemented in the", "tokens": [50700, 2386, 309, 390, 294, 43484, 11501, 13, 823, 309, 311, 294, 31828, 13, 407, 1310, 300, 486, 312, 11, 393, 312, 12270, 294, 264, 51056], "temperature": 0.0, "avg_logprob": -0.1585867508597996, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.13320088386535645}, {"id": 136, "seek": 89116, "start": 906.1999999999999, "end": 912.36, "text": " final structure. Open travel alliance. Yeah, I don't know that one yet. No, it's international.", "tokens": [51116, 2572, 3877, 13, 7238, 3147, 20995, 13, 865, 11, 286, 500, 380, 458, 300, 472, 1939, 13, 883, 11, 309, 311, 5058, 13, 51424], "temperature": 0.0, "avg_logprob": -0.1585867508597996, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.13320088386535645}, {"id": 137, "seek": 89116, "start": 912.36, "end": 916.04, "text": " Everything is in there, the planes, the trains, boats. Okay.", "tokens": [51424, 5471, 307, 294, 456, 11, 264, 14952, 11, 264, 16329, 11, 17772, 13, 1033, 13, 51608], "temperature": 0.0, "avg_logprob": -0.1585867508597996, "compression_ratio": 1.5585585585585586, "no_speech_prob": 0.13320088386535645}, {"id": 138, "seek": 91604, "start": 916.1999999999999, "end": 924.8399999999999, "text": " Yeah, we, from the scheme of the world stuff, we support flights, trains, buses,", "tokens": [50372, 865, 11, 321, 11, 490, 264, 12232, 295, 264, 1002, 1507, 11, 321, 1406, 21089, 11, 16329, 11, 20519, 11, 50804], "temperature": 0.0, "avg_logprob": -0.240563778650193, "compression_ratio": 1.5330396475770924, "no_speech_prob": 0.010864601470530033}, {"id": 139, "seek": 91604, "start": 926.52, "end": 933.64, "text": " events, restaurant reservations, and ferries and boats. Yeah. But there's certainly more that", "tokens": [50888, 3931, 11, 6383, 40222, 11, 293, 7202, 2244, 293, 17772, 13, 865, 13, 583, 456, 311, 3297, 544, 300, 51244], "temperature": 0.0, "avg_logprob": -0.240563778650193, "compression_ratio": 1.5330396475770924, "no_speech_prob": 0.010864601470530033}, {"id": 140, "seek": 91604, "start": 933.64, "end": 940.76, "text": " can be done. One quick final question. I wanted to remark that the anonymization of data fields", "tokens": [51244, 393, 312, 1096, 13, 1485, 1702, 2572, 1168, 13, 286, 1415, 281, 7942, 300, 264, 37293, 2144, 295, 1412, 7909, 51600], "temperature": 0.0, "avg_logprob": -0.240563778650193, "compression_ratio": 1.5330396475770924, "no_speech_prob": 0.010864601470530033}, {"id": 141, "seek": 91604, "start": 940.76, "end": 944.92, "text": " is possible without being able to trace it back to an individual human being.", "tokens": [51600, 307, 1944, 1553, 885, 1075, 281, 13508, 309, 646, 281, 364, 2609, 1952, 885, 13, 51808], "temperature": 0.0, "avg_logprob": -0.240563778650193, "compression_ratio": 1.5330396475770924, "no_speech_prob": 0.010864601470530033}, {"id": 142, "seek": 94492, "start": 945.4799999999999, "end": 951.8, "text": " Because airlines are innumerable. So you can get to the proverbial shouts, whereas user names or", "tokens": [50392, 1436, 37147, 366, 7714, 15583, 712, 13, 407, 291, 393, 483, 281, 264, 49923, 831, 402, 7711, 11, 9735, 4195, 5288, 420, 50708], "temperature": 0.0, "avg_logprob": -0.19790404493158514, "compression_ratio": 1.5291666666666666, "no_speech_prob": 0.008686977438628674}, {"id": 143, "seek": 94492, "start": 951.8, "end": 957.3199999999999, "text": " people's names are not. And so you could hash everything into the WAHOOZA and still recognize", "tokens": [50708, 561, 311, 5288, 366, 406, 13, 400, 370, 291, 727, 22019, 1203, 666, 264, 343, 10566, 3783, 39431, 293, 920, 5521, 50984], "temperature": 0.0, "avg_logprob": -0.19790404493158514, "compression_ratio": 1.5291666666666666, "no_speech_prob": 0.008686977438628674}, {"id": 144, "seek": 94492, "start": 957.3199999999999, "end": 961.24, "text": " whether or not you should have recognized the field differently than what you've actually", "tokens": [50984, 1968, 420, 406, 291, 820, 362, 9823, 264, 2519, 7614, 813, 437, 291, 600, 767, 51180], "temperature": 0.0, "avg_logprob": -0.19790404493158514, "compression_ratio": 1.5291666666666666, "no_speech_prob": 0.008686977438628674}, {"id": 145, "seek": 94492, "start": 961.24, "end": 967.16, "text": " rendered in a client in this case. Right. Yeah, but anonymization has turned out to be", "tokens": [51180, 28748, 294, 257, 6423, 294, 341, 1389, 13, 1779, 13, 865, 11, 457, 37293, 2144, 575, 3574, 484, 281, 312, 51476], "temperature": 0.0, "avg_logprob": -0.19790404493158514, "compression_ratio": 1.5291666666666666, "no_speech_prob": 0.008686977438628674}, {"id": 146, "seek": 96716, "start": 967.24, "end": 976.1999999999999, "text": " rather tricky on input data like PDFs, where we also rely on the proper structure. So as soon", "tokens": [50368, 2831, 12414, 322, 4846, 1412, 411, 17752, 82, 11, 689, 321, 611, 10687, 322, 264, 2296, 3877, 13, 407, 382, 2321, 50816], "temperature": 0.0, "avg_logprob": -0.09192045939337347, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.010485433042049408}, {"id": 147, "seek": 96716, "start": 976.1999999999999, "end": 983.4, "text": " as you start to modify this, it's not sure that the extractor still detects it in the same way.", "tokens": [50816, 382, 291, 722, 281, 16927, 341, 11, 309, 311, 406, 988, 300, 264, 8947, 284, 920, 5531, 82, 309, 294, 264, 912, 636, 13, 51176], "temperature": 0.0, "avg_logprob": -0.09192045939337347, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.010485433042049408}, {"id": 148, "seek": 96716, "start": 983.4, "end": 990.36, "text": " And we often don't know what kind of sensitive information is even in there or what the fields", "tokens": [51176, 400, 321, 2049, 500, 380, 458, 437, 733, 295, 9477, 1589, 307, 754, 294, 456, 420, 437, 264, 7909, 51524], "temperature": 0.0, "avg_logprob": -0.09192045939337347, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.010485433042049408}, {"id": 149, "seek": 96716, "start": 990.36, "end": 995.56, "text": " in the back would mean when we start with a new format. Right. So it's very hard to predict what", "tokens": [51524, 294, 264, 646, 576, 914, 562, 321, 722, 365, 257, 777, 7877, 13, 1779, 13, 407, 309, 311, 588, 1152, 281, 6069, 437, 51784], "temperature": 0.0, "avg_logprob": -0.09192045939337347, "compression_ratio": 1.5809128630705394, "no_speech_prob": 0.010485433042049408}, {"id": 150, "seek": 99556, "start": 995.56, "end": 1001.56, "text": " we need to strike out. Sure, yes. But I thought we were talking about the JSON.", "tokens": [50364, 321, 643, 281, 9302, 484, 13, 4894, 11, 2086, 13, 583, 286, 1194, 321, 645, 1417, 466, 264, 31828, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12706757628399393, "compression_ratio": 1.65, "no_speech_prob": 0.0030253282748162746}, {"id": 151, "seek": 99556, "start": 1002.5999999999999, "end": 1009.3199999999999, "text": " Once we have the JSON, sure. But the JSON alone is not really enough to fix the extractor. We", "tokens": [50716, 3443, 321, 362, 264, 31828, 11, 988, 13, 583, 264, 31828, 3312, 307, 406, 534, 1547, 281, 3191, 264, 8947, 284, 13, 492, 51052], "temperature": 0.0, "avg_logprob": -0.12706757628399393, "compression_ratio": 1.65, "no_speech_prob": 0.0030253282748162746}, {"id": 152, "seek": 99556, "start": 1009.3199999999999, "end": 1017.16, "text": " need the source document in its original form without modification to see where it goes wrong", "tokens": [51052, 643, 264, 4009, 4166, 294, 1080, 3380, 1254, 1553, 26747, 281, 536, 689, 309, 1709, 2085, 51444], "temperature": 0.0, "avg_logprob": -0.12706757628399393, "compression_ratio": 1.65, "no_speech_prob": 0.0030253282748162746}, {"id": 153, "seek": 99556, "start": 1017.16, "end": 1023.16, "text": " in the extraction. So if there is proper JSON in the source, then yes, then the JSON is enough.", "tokens": [51444, 294, 264, 30197, 13, 407, 498, 456, 307, 2296, 31828, 294, 264, 4009, 11, 550, 2086, 11, 550, 264, 31828, 307, 1547, 13, 51744], "temperature": 0.0, "avg_logprob": -0.12706757628399393, "compression_ratio": 1.65, "no_speech_prob": 0.0030253282748162746}, {"id": 154, "seek": 102316, "start": 1023.16, "end": 1028.44, "text": " But if our source is a PDF document attached to the email and the barcode in there, then", "tokens": [50364, 583, 498, 527, 4009, 307, 257, 17752, 4166, 8570, 281, 264, 3796, 293, 264, 2159, 22332, 294, 456, 11, 550, 50628], "temperature": 0.0, "avg_logprob": -0.23056352018105863, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.001533825066871941}, {"id": 155, "seek": 102316, "start": 1029.32, "end": 1034.2, "text": " I need the full thing to debug why we failed the extractor. I'm interested, but we'll take this", "tokens": [50672, 286, 643, 264, 1577, 551, 281, 24083, 983, 321, 7612, 264, 8947, 284, 13, 286, 478, 3102, 11, 457, 321, 603, 747, 341, 50916], "temperature": 0.0, "avg_logprob": -0.23056352018105863, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.001533825066871941}, {"id": 156, "seek": 102316, "start": 1034.2, "end": 1040.6, "text": " offline, I suppose. Yeah. Yeah. Right. A short technical question is Bogo in the room. Ah,", "tokens": [50916, 21857, 11, 286, 7297, 13, 865, 13, 865, 13, 1779, 13, 316, 2099, 6191, 1168, 307, 24339, 78, 294, 264, 1808, 13, 2438, 11, 51236], "temperature": 0.0, "avg_logprob": -0.23056352018105863, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.001533825066871941}, {"id": 157, "seek": 102316, "start": 1040.6, "end": 1045.96, "text": " right. There he is. Great. All right. So thank you very much for that lively discussion. Thank", "tokens": [51236, 558, 13, 821, 415, 307, 13, 3769, 13, 1057, 558, 13, 407, 1309, 291, 588, 709, 337, 300, 30866, 5017, 13, 1044, 51504], "temperature": 0.0, "avg_logprob": -0.23056352018105863, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.001533825066871941}, {"id": 158, "seek": 104596, "start": 1045.96, "end": 1054.04, "text": " you, Falka, for the presentation. Once applause again.", "tokens": [50368, 291, 11, 479, 667, 64, 11, 337, 264, 5860, 13, 3443, 9969, 797, 13, 50768], "temperature": 0.0, "avg_logprob": -0.4335763875175925, "compression_ratio": 0.9, "no_speech_prob": 0.049859631806612015}], "language": "en"}