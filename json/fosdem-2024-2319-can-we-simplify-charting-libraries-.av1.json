{"text": " Alexander has been a React developer since 2018 and he likes creating UI that is nice. And he's going to talk about how we can simplify charting libraries. So big round of applause for Alexander. Okay, so thank you very much everyone for joining. To give you a bit of context about what we will talk today, I'm currently working at the MUI, which if you don't know is providing a user interface component. You might know us because of this library. And a very kind of a tradition each year you ask a user what can we do for you, what can we improve. And the community is quite creative, which led to other libraries, for example, a base, which is a headless library. But they are very creative. For example, Toolpad is a no-code application we are trying to build. And then there is the team I'm working in, which is MUIX. And we create the most complex components, for example, a data grid, a date-time picker, which are a bit more complex than a button and select. And a year ago, we decided to start the chart sephor. And this talk is about how we proceed, what we found, explored, and our current conclusion. So from the question we asked to user, what they wanted is a nice documentation. That's the main stuff they complain about a chart library. And having a developer experience that match what we do usually, for example, for the data grid. So we'll see together if this is possible. Okay, so I started with just thinking, having a dream, what would be the perfect user developer experience I would want. So for me, the best one is you have a wrapper. You provide him information about what he needs to know, what is my size. And each time you want to add an element, just add a React element in it. It seems pretty basic. It should be okay. Up to the time you add more data. When you add more data, it overflows and it totally makes sense just because the x-axis will need to communicate with the plotting to say, hey, stop after 10. But if you put larger data, you have another overflow issue. And just because your line plot needs to communicate with a y-axis. So I started my journey with a dream and I ended up with an issue because components need to communicate in all of our direction. And that is just one example, but it's the main issue of charts. Data management is a pain. There is a second one, which is customization. Here you can see for a button, we kind of all agree about what it can be. You can customize a bit the color, does a background have a color or not. The most complex stuff you can do is adding icons. Most of the time it's at the beginning or at the end. But for charts, you have much more elements. And the creativity of designer and mathematician is endless about how you can add annotation to it. So we need much more flexibility. And currently, all our developer experience strategies does not allow to do that. So we have two main issues. It's time to have a look in the past. This library exists since more than 10 years, so they have a lot of experience to share with us. And it's a pleasure to work in open source, so that you can have a look at why they made a decision and how the code is working. So let's start with rich arts. As you can see, it's a composition. We'll just say at the beginning that composition is a pain. So how did they solve this data management issue? Basically, you have a wrapper, so the line chart. And he says he looks at his children. So children is just an array of components. And he says, OK, which one is an axis? And I will extract all the data from its props to know from which point to which one I can display stuff. Does the same with all the elements that are plotting data. So here, line, mark, areas, and stuff like that. And then you do a kind of an aggregation to render the components with the correct properties. The file that makes that is 1000 lines. It's very hard to read. I assume it might be hard to maintain too. And when you want to add your custom components, you don't really know where the information comes from, because there is this black magic aggregation that will provide you some data. And to the bug, it's a bit of a mess. But it allows a lot of flexibility. On the other side, you have a much simpler approach. It's a single component. So for example, you want to line, you do responsive line. And you provide data. You can configure all the axes look like and configure the tooltip, et cetera. Each element has its props and a lot of options. So as I said, it's very straightforward. So one chart is equal to one data. So that will change according to your user, plus a set of options. But you get two main issues. For example, mixing charts does not really make sense, because you have two single components. You cannot overlap them in an easy way. And you cannot modify the features, because it's a single component. You have a finite set of options. And the option is not available. You can go inside the source code to update it. For example, supporting different axes for the left and the right. So having multiple axes for line charts is not supported. And except modifying the source code, you cannot do that in Nivo. So very nice if you want a simple chart. But if you, once you go into a wall, there is no option. So for the charts, it's a pure Ligava script. So as you can see, you select an HTML element, for example, main, and you run the code. Of course, all the complexity is hidden here. And to give you a bit of flavor, they kind of fixed the issue we've seen just before. The series can be multiple types. So you can mix a line chart, a bar chart. You can even put a pie chart in the middle of a line chart. It does not make sense. But for the software, it's okay. And it's an old software, so there is a lot of options. So you can do most of the customization you want. Due to time, I will just skip this. So basically, this is all the pipeline for rendering a chart. And the main issue I see with each chart is this one. The only stuff you have access is still the option object. So basically, you can provide the data. You can customize the option. But as soon as you want to render a custom element, you know if you've tried to render SVG just using strings, it does not make a lot of sense, or you need to have the components. So, now, save time. Nice. Just to resume, so we have these two solutions, basically, single components or composition. And as we've seen, data sharing with composition is a nightmare. And you can work around, but you get into the black magic stuff. And for the developer experience, it's not good. And for adding elements, you need composition, because as soon as you get to view these options, you don't know how to insert something, for example, in a Nivo as an array that allows you to reorder the grid, the axis, the plotting. But you know that when you reach the state, when you need to pass an array to order your elements, you will be quickly limited. So, it's time to go to the proposal. So, basically, we started with a single component. So, it looks a bit like a Nivo. You want a line chart. You say line chart, and you provide data and options. But behind the hood, it's composition. So, you have a like for a rich art. You have a wrapper and all the rendering components. If you look closely, you might see that the way props are passed are not exactly the same as for rich arts, and there is a reason. Basically, all the data that need to be shared and aggregated, so the axis, the series, and so on, are passed to the container. The reason is basically that we want to do this aggregation stuff in a need and way to say, okay, you're using our components, trust us about all the axis and the series need to interact. You don't need to take care about that stuff. We'll do it for you. And then it's passed to providers, so a series provider. But take care about knowing what is a bar, a bar series, what is a line series, what is a pie series. Same for the axis and interaction provider. For example, we'll say to you, the series with this idea is currently highlighted by the most. So, displaying accordingly. So now we can create the rendering part. So, for example, the bar plot, we'll call the series provider and say, okay, give me the data about the series. If there is none in Render.0, if there is some, he asks to the axis provider, okay, I have this bar with a value of 24. Can you say me which have a coordinate I should associate to this value? So, he renders the rectangle, and he will communicate with the interaction provider to know if the bar needs to be fade out, highlighted, or just in a normal state. With the same logic, you can create whatever you want. So, other kind of series, other kind of components. So, for example, we created the axis, legend to tip the basics one. For the little story, the reference line has been created by a user, just using the provider because it was a bar so. And of course, you can create your own ones, and that's the main success of this approach. So, as a conclusion, a single component. For us, it was a need because most of the time, for example, you just want to put a sparkline. You want to put a bar chart in your application very quickly. So, you say bar charts. You get few options, but just what you need to get the correct bar chart, and you don't have to care about all this internal stuff, about all components communicate together. But as soon as you want to do something very custom, and the charts are part of the earth of your business model, you want it to be as the designer implemented it, or display very specific stuff. So, you need composition. The main failure of this experiment was the configuration feeling. I wanted absolutely to avoid this aspect of, I give you a bunch of options, deal with it. It's not possible because there is so much interaction between the axis and the series, but you cannot split them into the options where they are needed. For example, axis in axis and series in the series. You need to get them all together to do the computation. You get this feeling, but okay. And the success is to empower developers to create their own subcomponents. And that is something I've never seen before, except if you go very low level on how to make charts. And to give you a flavor about how easy it is. Okay. So, this is a line chart. And there is a custom component in the middle, this horizontal line, that shows you for your most position what is the value on the left and on the right. So, this component is not very useful, but it demonstrates interaction and axis management. And so, to create it, you need two stuff. First, the bounding box in red, the most position. That's easy stuff. And then you want what we call a scale. If you use D3, it's the same object that allows you to convert the value to a coordinate. And what will interest us is the coordinate to the value. So, let's start coding it. I promise it will be very quick. Use drawing area is calling the provider that retains. Where do you plot the data? So, you get just the bounding box. And you use Y scale, provided the idea of your scale. And it returns you the D3 scale. Very easy. And that's all. That's all you need. After, it's boring stuff. You save a state. And you do your use effect to almost move stuff like that. If you store null, just because you are outside of the SVG of the drawing area, so you're under nothing. Otherwise, you're under a path. So, quickly. You go from the left at the most position. So, single point. And you draw a line of the wave. So, that's come from the drawing area. And then you just have to use the axis scale invert to get the value from the coordinate. You display it. And that's all. So, you've created a component that is completely custom. And that interacts with your chart. And you can reuse it into any other kind of charts you build with us. Thank you very much for your attention. Thank you. Most of the time, people don't know, but there is an option on to force them to send a feedback about talks. If you have some, please don't hesitate. Otherwise, there are my contacts for later. Are there any questions? We have a few minutes for some questions. Yes. You mean rendering a custom? Can we use a render props to render custom sub-elements? But the issue is, for example, with SVG, you end up with the order of your components, impact which one is overflowing which one. And so the question is, where do you render this element? So, for example, this line, you can imagine that you put it on top of a line chart and below the mark plot of the line chart. And so you need to get access to the GSX level. How do you go from simple mode to complex? You can go from one component and if you need more advanced stuff, you can compose. There is a single component for all the basic charts, so line, bar, pie, and the scatter. And if you want, for example, to compose a bar chart with a line chart, you need to recreate it. So we provide all the basic stuff. So basically, if you open in GitHub, the line chart.tsx, you will see a chart container, different plotting, the access, and basically that's also you get five or between five and 10 components to create your own one. How do you use the rest of MI as financing? It's kind of standalone. We reuse the theme mostly to be linked with, for example, the tooltip so that it gets the same color as the background of your application. But otherwise, it's SVG, so there is not that much in common. There is no button, for example. There is no select. We don't really need those user interfaces. It's more of a theming and the way components are styled, for example. You set that it follows the same developer experience or you can override the styling. How do we create a reaction between what you have in the data pool? How is the performance? Have you checked how it behaves? Because how we have to prevent this is with reaction between real reaction and real data and real data. Have you seen how this affects whether we have a lot of points? No, we did not try mostly because we are currently using SVG. And so we know that there is at least a wall that is waiting for us at a certain level just the time to render the SVG. So we did not care that much. It's part of the next year roadmap. Thank you all for close for ads on.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 19.080000000000002, "text": " Alexander has been a React developer since 2018 and he likes creating UI that is nice.", "tokens": [50364, 14845, 575, 668, 257, 30644, 10754, 1670, 6096, 293, 415, 5902, 4084, 15682, 300, 307, 1481, 13, 51318], "temperature": 0.0, "avg_logprob": -0.30515510157534953, "compression_ratio": 1.2301587301587302, "no_speech_prob": 0.27870050072669983}, {"id": 1, "seek": 0, "start": 19.080000000000002, "end": 23.28, "text": " And he's going to talk about how we can simplify charting libraries.", "tokens": [51318, 400, 415, 311, 516, 281, 751, 466, 577, 321, 393, 20460, 6927, 278, 15148, 13, 51528], "temperature": 0.0, "avg_logprob": -0.30515510157534953, "compression_ratio": 1.2301587301587302, "no_speech_prob": 0.27870050072669983}, {"id": 2, "seek": 2328, "start": 23.28, "end": 25.28, "text": " So big round of applause for Alexander.", "tokens": [50364, 407, 955, 3098, 295, 9969, 337, 14845, 13, 50464], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 3, "seek": 2328, "start": 30.28, "end": 34.28, "text": " Okay, so thank you very much everyone for joining.", "tokens": [50714, 1033, 11, 370, 1309, 291, 588, 709, 1518, 337, 5549, 13, 50914], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 4, "seek": 2328, "start": 34.28, "end": 39.28, "text": " To give you a bit of context about what we will talk today, I'm currently working at the MUI,", "tokens": [50914, 1407, 976, 291, 257, 857, 295, 4319, 466, 437, 321, 486, 751, 965, 11, 286, 478, 4362, 1364, 412, 264, 17935, 40, 11, 51164], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 5, "seek": 2328, "start": 39.28, "end": 43.28, "text": " which if you don't know is providing a user interface component.", "tokens": [51164, 597, 498, 291, 500, 380, 458, 307, 6530, 257, 4195, 9226, 6542, 13, 51364], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 6, "seek": 2328, "start": 43.28, "end": 46.28, "text": " You might know us because of this library.", "tokens": [51364, 509, 1062, 458, 505, 570, 295, 341, 6405, 13, 51514], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 7, "seek": 2328, "start": 46.28, "end": 52.28, "text": " And a very kind of a tradition each year you ask a user what can we do for you, what can we improve.", "tokens": [51514, 400, 257, 588, 733, 295, 257, 6994, 1184, 1064, 291, 1029, 257, 4195, 437, 393, 321, 360, 337, 291, 11, 437, 393, 321, 3470, 13, 51814], "temperature": 0.0, "avg_logprob": -0.26015450190571904, "compression_ratio": 1.5783132530120483, "no_speech_prob": 0.053432051092386246}, {"id": 8, "seek": 5228, "start": 53.28, "end": 61.28, "text": " And the community is quite creative, which led to other libraries, for example, a base, which is a headless library.", "tokens": [50414, 400, 264, 1768, 307, 1596, 5880, 11, 597, 4684, 281, 661, 15148, 11, 337, 1365, 11, 257, 3096, 11, 597, 307, 257, 1378, 1832, 6405, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21153892517089845, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.01279980968683958}, {"id": 9, "seek": 5228, "start": 61.28, "end": 63.28, "text": " But they are very creative.", "tokens": [50814, 583, 436, 366, 588, 5880, 13, 50914], "temperature": 0.0, "avg_logprob": -0.21153892517089845, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.01279980968683958}, {"id": 10, "seek": 5228, "start": 63.28, "end": 67.28, "text": " For example, Toolpad is a no-code application we are trying to build.", "tokens": [50914, 1171, 1365, 11, 15934, 13647, 307, 257, 572, 12, 22332, 3861, 321, 366, 1382, 281, 1322, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21153892517089845, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.01279980968683958}, {"id": 11, "seek": 5228, "start": 67.28, "end": 72.28, "text": " And then there is the team I'm working in, which is MUIX.", "tokens": [51114, 400, 550, 456, 307, 264, 1469, 286, 478, 1364, 294, 11, 597, 307, 17935, 40, 55, 13, 51364], "temperature": 0.0, "avg_logprob": -0.21153892517089845, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.01279980968683958}, {"id": 12, "seek": 5228, "start": 72.28, "end": 80.28, "text": " And we create the most complex components, for example, a data grid, a date-time picker,", "tokens": [51364, 400, 321, 1884, 264, 881, 3997, 6677, 11, 337, 1365, 11, 257, 1412, 10748, 11, 257, 4002, 12, 3766, 1888, 260, 11, 51764], "temperature": 0.0, "avg_logprob": -0.21153892517089845, "compression_ratio": 1.6409090909090909, "no_speech_prob": 0.01279980968683958}, {"id": 13, "seek": 8028, "start": 80.28, "end": 83.28, "text": " which are a bit more complex than a button and select.", "tokens": [50364, 597, 366, 257, 857, 544, 3997, 813, 257, 2960, 293, 3048, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 14, "seek": 8028, "start": 83.28, "end": 86.28, "text": " And a year ago, we decided to start the chart sephor.", "tokens": [50514, 400, 257, 1064, 2057, 11, 321, 3047, 281, 722, 264, 6927, 369, 950, 284, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 15, "seek": 8028, "start": 86.28, "end": 94.28, "text": " And this talk is about how we proceed, what we found, explored, and our current conclusion.", "tokens": [50664, 400, 341, 751, 307, 466, 577, 321, 8991, 11, 437, 321, 1352, 11, 24016, 11, 293, 527, 2190, 10063, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 16, "seek": 8028, "start": 94.28, "end": 100.28, "text": " So from the question we asked to user, what they wanted is a nice documentation.", "tokens": [51064, 407, 490, 264, 1168, 321, 2351, 281, 4195, 11, 437, 436, 1415, 307, 257, 1481, 14333, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 17, "seek": 8028, "start": 100.28, "end": 104.28, "text": " That's the main stuff they complain about a chart library.", "tokens": [51364, 663, 311, 264, 2135, 1507, 436, 11024, 466, 257, 6927, 6405, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 18, "seek": 8028, "start": 104.28, "end": 108.28, "text": " And having a developer experience that match what we do usually, for example, for the data grid.", "tokens": [51564, 400, 1419, 257, 10754, 1752, 300, 2995, 437, 321, 360, 2673, 11, 337, 1365, 11, 337, 264, 1412, 10748, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13411462090232157, "compression_ratio": 1.66793893129771, "no_speech_prob": 0.008106288500130177}, {"id": 19, "seek": 10828, "start": 108.28, "end": 111.28, "text": " So we'll see together if this is possible.", "tokens": [50364, 407, 321, 603, 536, 1214, 498, 341, 307, 1944, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 20, "seek": 10828, "start": 111.28, "end": 120.28, "text": " Okay, so I started with just thinking, having a dream, what would be the perfect user developer experience I would want.", "tokens": [50514, 1033, 11, 370, 286, 1409, 365, 445, 1953, 11, 1419, 257, 3055, 11, 437, 576, 312, 264, 2176, 4195, 10754, 1752, 286, 576, 528, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 21, "seek": 10828, "start": 120.28, "end": 123.28, "text": " So for me, the best one is you have a wrapper.", "tokens": [50964, 407, 337, 385, 11, 264, 1151, 472, 307, 291, 362, 257, 46906, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 22, "seek": 10828, "start": 123.28, "end": 128.28, "text": " You provide him information about what he needs to know, what is my size.", "tokens": [51114, 509, 2893, 796, 1589, 466, 437, 415, 2203, 281, 458, 11, 437, 307, 452, 2744, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 23, "seek": 10828, "start": 128.28, "end": 133.28, "text": " And each time you want to add an element, just add a React element in it.", "tokens": [51364, 400, 1184, 565, 291, 528, 281, 909, 364, 4478, 11, 445, 909, 257, 30644, 4478, 294, 309, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 24, "seek": 10828, "start": 133.28, "end": 135.28, "text": " It seems pretty basic.", "tokens": [51614, 467, 2544, 1238, 3875, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 25, "seek": 10828, "start": 135.28, "end": 136.28, "text": " It should be okay.", "tokens": [51714, 467, 820, 312, 1392, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1282953421274821, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.006792411208152771}, {"id": 26, "seek": 13628, "start": 136.28, "end": 139.28, "text": " Up to the time you add more data.", "tokens": [50364, 5858, 281, 264, 565, 291, 909, 544, 1412, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12804716179169803, "compression_ratio": 1.6546391752577319, "no_speech_prob": 0.00511384941637516}, {"id": 27, "seek": 13628, "start": 139.28, "end": 149.28, "text": " When you add more data, it overflows and it totally makes sense just because the x-axis will need to communicate with the plotting to say, hey, stop after 10.", "tokens": [50514, 1133, 291, 909, 544, 1412, 11, 309, 670, 33229, 293, 309, 3879, 1669, 2020, 445, 570, 264, 2031, 12, 24633, 486, 643, 281, 7890, 365, 264, 41178, 281, 584, 11, 4177, 11, 1590, 934, 1266, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12804716179169803, "compression_ratio": 1.6546391752577319, "no_speech_prob": 0.00511384941637516}, {"id": 28, "seek": 13628, "start": 149.28, "end": 154.28, "text": " But if you put larger data, you have another overflow issue.", "tokens": [51014, 583, 498, 291, 829, 4833, 1412, 11, 291, 362, 1071, 37772, 2734, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12804716179169803, "compression_ratio": 1.6546391752577319, "no_speech_prob": 0.00511384941637516}, {"id": 29, "seek": 13628, "start": 154.28, "end": 158.28, "text": " And just because your line plot needs to communicate with a y-axis.", "tokens": [51264, 400, 445, 570, 428, 1622, 7542, 2203, 281, 7890, 365, 257, 288, 12, 24633, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12804716179169803, "compression_ratio": 1.6546391752577319, "no_speech_prob": 0.00511384941637516}, {"id": 30, "seek": 15828, "start": 158.28, "end": 167.28, "text": " So I started my journey with a dream and I ended up with an issue because components need to communicate in all of our direction.", "tokens": [50364, 407, 286, 1409, 452, 4671, 365, 257, 3055, 293, 286, 4590, 493, 365, 364, 2734, 570, 6677, 643, 281, 7890, 294, 439, 295, 527, 3513, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 31, "seek": 15828, "start": 167.28, "end": 171.28, "text": " And that is just one example, but it's the main issue of charts.", "tokens": [50814, 400, 300, 307, 445, 472, 1365, 11, 457, 309, 311, 264, 2135, 2734, 295, 17767, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 32, "seek": 15828, "start": 171.28, "end": 173.28, "text": " Data management is a pain.", "tokens": [51014, 11888, 4592, 307, 257, 1822, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 33, "seek": 15828, "start": 173.28, "end": 176.28, "text": " There is a second one, which is customization.", "tokens": [51114, 821, 307, 257, 1150, 472, 11, 597, 307, 39387, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 34, "seek": 15828, "start": 176.28, "end": 180.28, "text": " Here you can see for a button, we kind of all agree about what it can be.", "tokens": [51264, 1692, 291, 393, 536, 337, 257, 2960, 11, 321, 733, 295, 439, 3986, 466, 437, 309, 393, 312, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 35, "seek": 15828, "start": 180.28, "end": 185.28, "text": " You can customize a bit the color, does a background have a color or not.", "tokens": [51464, 509, 393, 19734, 257, 857, 264, 2017, 11, 775, 257, 3678, 362, 257, 2017, 420, 406, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11545954810248481, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.07558374851942062}, {"id": 36, "seek": 18528, "start": 185.28, "end": 188.28, "text": " The most complex stuff you can do is adding icons.", "tokens": [50364, 440, 881, 3997, 1507, 291, 393, 360, 307, 5127, 23308, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 37, "seek": 18528, "start": 188.28, "end": 192.28, "text": " Most of the time it's at the beginning or at the end.", "tokens": [50514, 4534, 295, 264, 565, 309, 311, 412, 264, 2863, 420, 412, 264, 917, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 38, "seek": 18528, "start": 192.28, "end": 195.28, "text": " But for charts, you have much more elements.", "tokens": [50714, 583, 337, 17767, 11, 291, 362, 709, 544, 4959, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 39, "seek": 18528, "start": 195.28, "end": 202.28, "text": " And the creativity of designer and mathematician is endless about how you can add annotation to it.", "tokens": [50864, 400, 264, 12915, 295, 11795, 293, 48281, 307, 16144, 466, 577, 291, 393, 909, 48654, 281, 309, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 40, "seek": 18528, "start": 202.28, "end": 205.28, "text": " So we need much more flexibility.", "tokens": [51214, 407, 321, 643, 709, 544, 12635, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 41, "seek": 18528, "start": 205.28, "end": 213.28, "text": " And currently, all our developer experience strategies does not allow to do that.", "tokens": [51364, 400, 4362, 11, 439, 527, 10754, 1752, 9029, 775, 406, 2089, 281, 360, 300, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11467658267931992, "compression_ratio": 1.58008658008658, "no_speech_prob": 0.01622937247157097}, {"id": 42, "seek": 21328, "start": 213.28, "end": 215.28, "text": " So we have two main issues.", "tokens": [50364, 407, 321, 362, 732, 2135, 2663, 13, 50464], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 43, "seek": 21328, "start": 215.28, "end": 217.28, "text": " It's time to have a look in the past.", "tokens": [50464, 467, 311, 565, 281, 362, 257, 574, 294, 264, 1791, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 44, "seek": 21328, "start": 217.28, "end": 221.28, "text": " This library exists since more than 10 years, so they have a lot of experience to share with us.", "tokens": [50564, 639, 6405, 8198, 1670, 544, 813, 1266, 924, 11, 370, 436, 362, 257, 688, 295, 1752, 281, 2073, 365, 505, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 45, "seek": 21328, "start": 221.28, "end": 228.28, "text": " And it's a pleasure to work in open source, so that you can have a look at why they made a decision and how the code is working.", "tokens": [50764, 400, 309, 311, 257, 6834, 281, 589, 294, 1269, 4009, 11, 370, 300, 291, 393, 362, 257, 574, 412, 983, 436, 1027, 257, 3537, 293, 577, 264, 3089, 307, 1364, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 46, "seek": 21328, "start": 228.28, "end": 230.28, "text": " So let's start with rich arts.", "tokens": [51114, 407, 718, 311, 722, 365, 4593, 8609, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 47, "seek": 21328, "start": 230.28, "end": 232.28, "text": " As you can see, it's a composition.", "tokens": [51214, 1018, 291, 393, 536, 11, 309, 311, 257, 12686, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 48, "seek": 21328, "start": 232.28, "end": 235.28, "text": " We'll just say at the beginning that composition is a pain.", "tokens": [51314, 492, 603, 445, 584, 412, 264, 2863, 300, 12686, 307, 257, 1822, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 49, "seek": 21328, "start": 235.28, "end": 238.28, "text": " So how did they solve this data management issue?", "tokens": [51464, 407, 577, 630, 436, 5039, 341, 1412, 4592, 2734, 30, 51614], "temperature": 0.0, "avg_logprob": -0.12782326040341874, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.009090364910662174}, {"id": 50, "seek": 23828, "start": 239.28, "end": 243.28, "text": " Basically, you have a wrapper, so the line chart.", "tokens": [50414, 8537, 11, 291, 362, 257, 46906, 11, 370, 264, 1622, 6927, 13, 50614], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 51, "seek": 23828, "start": 243.28, "end": 245.28, "text": " And he says he looks at his children.", "tokens": [50614, 400, 415, 1619, 415, 1542, 412, 702, 2227, 13, 50714], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 52, "seek": 23828, "start": 245.28, "end": 247.28, "text": " So children is just an array of components.", "tokens": [50714, 407, 2227, 307, 445, 364, 10225, 295, 6677, 13, 50814], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 53, "seek": 23828, "start": 247.28, "end": 250.28, "text": " And he says, OK, which one is an axis?", "tokens": [50814, 400, 415, 1619, 11, 2264, 11, 597, 472, 307, 364, 10298, 30, 50964], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 54, "seek": 23828, "start": 250.28, "end": 257.28, "text": " And I will extract all the data from its props to know from which point to which one I can display stuff.", "tokens": [50964, 400, 286, 486, 8947, 439, 264, 1412, 490, 1080, 26173, 281, 458, 490, 597, 935, 281, 597, 472, 286, 393, 4674, 1507, 13, 51314], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 55, "seek": 23828, "start": 257.28, "end": 260.28, "text": " Does the same with all the elements that are plotting data.", "tokens": [51314, 4402, 264, 912, 365, 439, 264, 4959, 300, 366, 41178, 1412, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 56, "seek": 23828, "start": 260.28, "end": 263.28, "text": " So here, line, mark, areas, and stuff like that.", "tokens": [51464, 407, 510, 11, 1622, 11, 1491, 11, 3179, 11, 293, 1507, 411, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.20313368111013252, "compression_ratio": 1.6244725738396624, "no_speech_prob": 0.026775997132062912}, {"id": 57, "seek": 26328, "start": 263.28, "end": 271.28, "text": " And then you do a kind of an aggregation to render the components with the correct properties.", "tokens": [50364, 400, 550, 291, 360, 257, 733, 295, 364, 16743, 399, 281, 15529, 264, 6677, 365, 264, 3006, 7221, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 58, "seek": 26328, "start": 271.28, "end": 275.28, "text": " The file that makes that is 1000 lines.", "tokens": [50764, 440, 3991, 300, 1669, 300, 307, 9714, 3876, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 59, "seek": 26328, "start": 275.28, "end": 277.28, "text": " It's very hard to read.", "tokens": [50964, 467, 311, 588, 1152, 281, 1401, 13, 51064], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 60, "seek": 26328, "start": 277.28, "end": 280.28, "text": " I assume it might be hard to maintain too.", "tokens": [51064, 286, 6552, 309, 1062, 312, 1152, 281, 6909, 886, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 61, "seek": 26328, "start": 280.28, "end": 287.28, "text": " And when you want to add your custom components, you don't really know where the information comes from,", "tokens": [51214, 400, 562, 291, 528, 281, 909, 428, 2375, 6677, 11, 291, 500, 380, 534, 458, 689, 264, 1589, 1487, 490, 11, 51564], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 62, "seek": 26328, "start": 287.28, "end": 291.28, "text": " because there is this black magic aggregation that will provide you some data.", "tokens": [51564, 570, 456, 307, 341, 2211, 5585, 16743, 399, 300, 486, 2893, 291, 512, 1412, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12612037658691405, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.006074779666960239}, {"id": 63, "seek": 29128, "start": 291.28, "end": 294.28, "text": " And to the bug, it's a bit of a mess.", "tokens": [50364, 400, 281, 264, 7426, 11, 309, 311, 257, 857, 295, 257, 2082, 13, 50514], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 64, "seek": 29128, "start": 294.28, "end": 297.28, "text": " But it allows a lot of flexibility.", "tokens": [50514, 583, 309, 4045, 257, 688, 295, 12635, 13, 50664], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 65, "seek": 29128, "start": 297.28, "end": 301.28, "text": " On the other side, you have a much simpler approach.", "tokens": [50664, 1282, 264, 661, 1252, 11, 291, 362, 257, 709, 18587, 3109, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 66, "seek": 29128, "start": 301.28, "end": 303.28, "text": " It's a single component.", "tokens": [50864, 467, 311, 257, 2167, 6542, 13, 50964], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 67, "seek": 29128, "start": 303.28, "end": 305.28, "text": " So for example, you want to line, you do responsive line.", "tokens": [50964, 407, 337, 1365, 11, 291, 528, 281, 1622, 11, 291, 360, 21826, 1622, 13, 51064], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 68, "seek": 29128, "start": 305.28, "end": 307.28, "text": " And you provide data.", "tokens": [51064, 400, 291, 2893, 1412, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 69, "seek": 29128, "start": 307.28, "end": 311.28, "text": " You can configure all the axes look like and configure the tooltip, et cetera.", "tokens": [51164, 509, 393, 22162, 439, 264, 35387, 574, 411, 293, 22162, 264, 2290, 83, 647, 11, 1030, 11458, 13, 51364], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 70, "seek": 29128, "start": 311.28, "end": 316.28, "text": " Each element has its props and a lot of options.", "tokens": [51364, 6947, 4478, 575, 1080, 26173, 293, 257, 688, 295, 3956, 13, 51614], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 71, "seek": 29128, "start": 316.28, "end": 320.28, "text": " So as I said, it's very straightforward.", "tokens": [51614, 407, 382, 286, 848, 11, 309, 311, 588, 15325, 13, 51814], "temperature": 0.0, "avg_logprob": -0.18338315914838743, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.007116422522813082}, {"id": 72, "seek": 32028, "start": 320.28, "end": 323.28, "text": " So one chart is equal to one data.", "tokens": [50364, 407, 472, 6927, 307, 2681, 281, 472, 1412, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 73, "seek": 32028, "start": 323.28, "end": 327.28, "text": " So that will change according to your user, plus a set of options.", "tokens": [50514, 407, 300, 486, 1319, 4650, 281, 428, 4195, 11, 1804, 257, 992, 295, 3956, 13, 50714], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 74, "seek": 32028, "start": 327.28, "end": 330.28, "text": " But you get two main issues.", "tokens": [50714, 583, 291, 483, 732, 2135, 2663, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 75, "seek": 32028, "start": 330.28, "end": 335.28, "text": " For example, mixing charts does not really make sense, because you have two single components.", "tokens": [50864, 1171, 1365, 11, 11983, 17767, 775, 406, 534, 652, 2020, 11, 570, 291, 362, 732, 2167, 6677, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 76, "seek": 32028, "start": 335.28, "end": 339.28, "text": " You cannot overlap them in an easy way.", "tokens": [51114, 509, 2644, 19959, 552, 294, 364, 1858, 636, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 77, "seek": 32028, "start": 339.28, "end": 343.28, "text": " And you cannot modify the features, because it's a single component.", "tokens": [51314, 400, 291, 2644, 16927, 264, 4122, 11, 570, 309, 311, 257, 2167, 6542, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 78, "seek": 32028, "start": 343.28, "end": 345.28, "text": " You have a finite set of options.", "tokens": [51514, 509, 362, 257, 19362, 992, 295, 3956, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 79, "seek": 32028, "start": 345.28, "end": 347.28, "text": " And the option is not available.", "tokens": [51614, 400, 264, 3614, 307, 406, 2435, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13961926414853051, "compression_ratio": 1.6778242677824269, "no_speech_prob": 0.04192475602030754}, {"id": 80, "seek": 34728, "start": 347.28, "end": 351.28, "text": " You can go inside the source code to update it.", "tokens": [50364, 509, 393, 352, 1854, 264, 4009, 3089, 281, 5623, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 81, "seek": 34728, "start": 351.28, "end": 356.28, "text": " For example, supporting different axes for the left and the right.", "tokens": [50564, 1171, 1365, 11, 7231, 819, 35387, 337, 264, 1411, 293, 264, 558, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 82, "seek": 34728, "start": 356.28, "end": 359.28, "text": " So having multiple axes for line charts is not supported.", "tokens": [50814, 407, 1419, 3866, 35387, 337, 1622, 17767, 307, 406, 8104, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 83, "seek": 34728, "start": 359.28, "end": 364.28, "text": " And except modifying the source code, you cannot do that in Nivo.", "tokens": [50964, 400, 3993, 42626, 264, 4009, 3089, 11, 291, 2644, 360, 300, 294, 426, 6340, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 84, "seek": 34728, "start": 364.28, "end": 367.28, "text": " So very nice if you want a simple chart.", "tokens": [51214, 407, 588, 1481, 498, 291, 528, 257, 2199, 6927, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 85, "seek": 34728, "start": 367.28, "end": 376.28, "text": " But if you, once you go into a wall, there is no option.", "tokens": [51364, 583, 498, 291, 11, 1564, 291, 352, 666, 257, 2929, 11, 456, 307, 572, 3614, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1752243783738878, "compression_ratio": 1.6470588235294117, "no_speech_prob": 0.01587865874171257}, {"id": 86, "seek": 37628, "start": 376.28, "end": 379.28, "text": " So for the charts, it's a pure Ligava script.", "tokens": [50364, 407, 337, 264, 17767, 11, 309, 311, 257, 6075, 441, 328, 4061, 5755, 13, 50514], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 87, "seek": 37628, "start": 379.28, "end": 384.28, "text": " So as you can see, you select an HTML element, for example, main, and you run the code.", "tokens": [50514, 407, 382, 291, 393, 536, 11, 291, 3048, 364, 17995, 4478, 11, 337, 1365, 11, 2135, 11, 293, 291, 1190, 264, 3089, 13, 50764], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 88, "seek": 37628, "start": 384.28, "end": 387.28, "text": " Of course, all the complexity is hidden here.", "tokens": [50764, 2720, 1164, 11, 439, 264, 14024, 307, 7633, 510, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 89, "seek": 37628, "start": 387.28, "end": 393.28, "text": " And to give you a bit of flavor, they kind of fixed the issue we've seen just before.", "tokens": [50914, 400, 281, 976, 291, 257, 857, 295, 6813, 11, 436, 733, 295, 6806, 264, 2734, 321, 600, 1612, 445, 949, 13, 51214], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 90, "seek": 37628, "start": 393.28, "end": 395.28, "text": " The series can be multiple types.", "tokens": [51214, 440, 2638, 393, 312, 3866, 3467, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 91, "seek": 37628, "start": 395.28, "end": 398.28, "text": " So you can mix a line chart, a bar chart.", "tokens": [51314, 407, 291, 393, 2890, 257, 1622, 6927, 11, 257, 2159, 6927, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 92, "seek": 37628, "start": 398.28, "end": 401.28, "text": " You can even put a pie chart in the middle of a line chart.", "tokens": [51464, 509, 393, 754, 829, 257, 1730, 6927, 294, 264, 2808, 295, 257, 1622, 6927, 13, 51614], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 93, "seek": 37628, "start": 401.28, "end": 402.28, "text": " It does not make sense.", "tokens": [51614, 467, 775, 406, 652, 2020, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 94, "seek": 37628, "start": 402.28, "end": 405.28, "text": " But for the software, it's okay.", "tokens": [51664, 583, 337, 264, 4722, 11, 309, 311, 1392, 13, 51814], "temperature": 0.0, "avg_logprob": -0.17120017448480981, "compression_ratio": 1.6474820143884892, "no_speech_prob": 0.034971933811903}, {"id": 95, "seek": 40528, "start": 405.28, "end": 409.28, "text": " And it's an old software, so there is a lot of options.", "tokens": [50364, 400, 309, 311, 364, 1331, 4722, 11, 370, 456, 307, 257, 688, 295, 3956, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 96, "seek": 40528, "start": 409.28, "end": 413.28, "text": " So you can do most of the customization you want.", "tokens": [50564, 407, 291, 393, 360, 881, 295, 264, 39387, 291, 528, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 97, "seek": 40528, "start": 413.28, "end": 416.28, "text": " Due to time, I will just skip this.", "tokens": [50764, 18980, 281, 565, 11, 286, 486, 445, 10023, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 98, "seek": 40528, "start": 416.28, "end": 421.28, "text": " So basically, this is all the pipeline for rendering a chart.", "tokens": [50914, 407, 1936, 11, 341, 307, 439, 264, 15517, 337, 22407, 257, 6927, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 99, "seek": 40528, "start": 421.28, "end": 425.28, "text": " And the main issue I see with each chart is this one.", "tokens": [51164, 400, 264, 2135, 2734, 286, 536, 365, 1184, 6927, 307, 341, 472, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 100, "seek": 40528, "start": 425.28, "end": 428.28, "text": " The only stuff you have access is still the option object.", "tokens": [51364, 440, 787, 1507, 291, 362, 2105, 307, 920, 264, 3614, 2657, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 101, "seek": 40528, "start": 428.28, "end": 430.28, "text": " So basically, you can provide the data.", "tokens": [51514, 407, 1936, 11, 291, 393, 2893, 264, 1412, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 102, "seek": 40528, "start": 430.28, "end": 431.28, "text": " You can customize the option.", "tokens": [51614, 509, 393, 19734, 264, 3614, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 103, "seek": 40528, "start": 431.28, "end": 434.28, "text": " But as soon as you want to render a custom element,", "tokens": [51664, 583, 382, 2321, 382, 291, 528, 281, 15529, 257, 2375, 4478, 11, 51814], "temperature": 0.0, "avg_logprob": -0.09617223818440082, "compression_ratio": 1.7312252964426877, "no_speech_prob": 0.005091610364615917}, {"id": 104, "seek": 43428, "start": 434.28, "end": 439.28, "text": " you know if you've tried to render SVG just using strings,", "tokens": [50364, 291, 458, 498, 291, 600, 3031, 281, 15529, 31910, 38, 445, 1228, 13985, 11, 50614], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 105, "seek": 43428, "start": 439.28, "end": 445.28, "text": " it does not make a lot of sense, or you need to have the components.", "tokens": [50614, 309, 775, 406, 652, 257, 688, 295, 2020, 11, 420, 291, 643, 281, 362, 264, 6677, 13, 50914], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 106, "seek": 43428, "start": 445.28, "end": 448.28, "text": " So, now, save time. Nice.", "tokens": [50914, 407, 11, 586, 11, 3155, 565, 13, 5490, 13, 51064], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 107, "seek": 43428, "start": 448.28, "end": 451.28, "text": " Just to resume, so we have these two solutions, basically,", "tokens": [51064, 1449, 281, 15358, 11, 370, 321, 362, 613, 732, 6547, 11, 1936, 11, 51214], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 108, "seek": 43428, "start": 451.28, "end": 453.28, "text": " single components or composition.", "tokens": [51214, 2167, 6677, 420, 12686, 13, 51314], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 109, "seek": 43428, "start": 453.28, "end": 458.28, "text": " And as we've seen, data sharing with composition is a nightmare.", "tokens": [51314, 400, 382, 321, 600, 1612, 11, 1412, 5414, 365, 12686, 307, 257, 18724, 13, 51564], "temperature": 0.0, "avg_logprob": -0.24670476691667423, "compression_ratio": 1.5472636815920398, "no_speech_prob": 0.004547955002635717}, {"id": 110, "seek": 45828, "start": 458.28, "end": 464.28, "text": " And you can work around, but you get into the black magic stuff.", "tokens": [50364, 400, 291, 393, 589, 926, 11, 457, 291, 483, 666, 264, 2211, 5585, 1507, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 111, "seek": 45828, "start": 464.28, "end": 467.28, "text": " And for the developer experience, it's not good.", "tokens": [50664, 400, 337, 264, 10754, 1752, 11, 309, 311, 406, 665, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 112, "seek": 45828, "start": 467.28, "end": 470.28, "text": " And for adding elements, you need composition,", "tokens": [50814, 400, 337, 5127, 4959, 11, 291, 643, 12686, 11, 50964], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 113, "seek": 45828, "start": 470.28, "end": 474.28, "text": " because as soon as you get to view these options,", "tokens": [50964, 570, 382, 2321, 382, 291, 483, 281, 1910, 613, 3956, 11, 51164], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 114, "seek": 45828, "start": 474.28, "end": 479.28, "text": " you don't know how to insert something, for example, in a Nivo as an array", "tokens": [51164, 291, 500, 380, 458, 577, 281, 8969, 746, 11, 337, 1365, 11, 294, 257, 426, 6340, 382, 364, 10225, 51414], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 115, "seek": 45828, "start": 479.28, "end": 483.28, "text": " that allows you to reorder the grid, the axis, the plotting.", "tokens": [51414, 300, 4045, 291, 281, 319, 4687, 264, 10748, 11, 264, 10298, 11, 264, 41178, 13, 51614], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 116, "seek": 45828, "start": 483.28, "end": 485.28, "text": " But you know that when you reach the state,", "tokens": [51614, 583, 291, 458, 300, 562, 291, 2524, 264, 1785, 11, 51714], "temperature": 0.0, "avg_logprob": -0.19543404849070423, "compression_ratio": 1.625, "no_speech_prob": 0.010962690226733685}, {"id": 117, "seek": 48528, "start": 485.28, "end": 488.28, "text": " when you need to pass an array to order your elements,", "tokens": [50364, 562, 291, 643, 281, 1320, 364, 10225, 281, 1668, 428, 4959, 11, 50514], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 118, "seek": 48528, "start": 488.28, "end": 491.28, "text": " you will be quickly limited.", "tokens": [50514, 291, 486, 312, 2661, 5567, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 119, "seek": 48528, "start": 491.28, "end": 495.28, "text": " So, it's time to go to the proposal.", "tokens": [50664, 407, 11, 309, 311, 565, 281, 352, 281, 264, 11494, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 120, "seek": 48528, "start": 495.28, "end": 498.28, "text": " So, basically, we started with a single component.", "tokens": [50864, 407, 11, 1936, 11, 321, 1409, 365, 257, 2167, 6542, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 121, "seek": 48528, "start": 498.28, "end": 501.28, "text": " So, it looks a bit like a Nivo.", "tokens": [51014, 407, 11, 309, 1542, 257, 857, 411, 257, 426, 6340, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 122, "seek": 48528, "start": 501.28, "end": 502.28, "text": " You want a line chart.", "tokens": [51164, 509, 528, 257, 1622, 6927, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 123, "seek": 48528, "start": 502.28, "end": 506.28, "text": " You say line chart, and you provide data and options.", "tokens": [51214, 509, 584, 1622, 6927, 11, 293, 291, 2893, 1412, 293, 3956, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 124, "seek": 48528, "start": 506.28, "end": 509.28, "text": " But behind the hood, it's composition.", "tokens": [51414, 583, 2261, 264, 13376, 11, 309, 311, 12686, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 125, "seek": 48528, "start": 509.28, "end": 511.28, "text": " So, you have a like for a rich art.", "tokens": [51564, 407, 11, 291, 362, 257, 411, 337, 257, 4593, 1523, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13482692263541965, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.0012546974467113614}, {"id": 126, "seek": 51128, "start": 511.28, "end": 515.28, "text": " You have a wrapper and all the rendering components.", "tokens": [50364, 509, 362, 257, 46906, 293, 439, 264, 22407, 6677, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 127, "seek": 51128, "start": 515.28, "end": 519.28, "text": " If you look closely, you might see that the way props are passed", "tokens": [50564, 759, 291, 574, 8185, 11, 291, 1062, 536, 300, 264, 636, 26173, 366, 4678, 50764], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 128, "seek": 51128, "start": 519.28, "end": 523.28, "text": " are not exactly the same as for rich arts, and there is a reason.", "tokens": [50764, 366, 406, 2293, 264, 912, 382, 337, 4593, 8609, 11, 293, 456, 307, 257, 1778, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 129, "seek": 51128, "start": 523.28, "end": 528.28, "text": " Basically, all the data that need to be shared and aggregated,", "tokens": [50964, 8537, 11, 439, 264, 1412, 300, 643, 281, 312, 5507, 293, 16743, 770, 11, 51214], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 130, "seek": 51128, "start": 528.28, "end": 533.28, "text": " so the axis, the series, and so on, are passed to the container.", "tokens": [51214, 370, 264, 10298, 11, 264, 2638, 11, 293, 370, 322, 11, 366, 4678, 281, 264, 10129, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 131, "seek": 51128, "start": 533.28, "end": 537.28, "text": " The reason is basically that we want to do this aggregation stuff", "tokens": [51464, 440, 1778, 307, 1936, 300, 321, 528, 281, 360, 341, 16743, 399, 1507, 51664], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 132, "seek": 51128, "start": 537.28, "end": 540.28, "text": " in a need and way to say, okay, you're using our components,", "tokens": [51664, 294, 257, 643, 293, 636, 281, 584, 11, 1392, 11, 291, 434, 1228, 527, 6677, 11, 51814], "temperature": 0.0, "avg_logprob": -0.12018886105767612, "compression_ratio": 1.7244094488188977, "no_speech_prob": 0.005046934355050325}, {"id": 133, "seek": 54028, "start": 540.28, "end": 544.28, "text": " trust us about all the axis and the series need to interact.", "tokens": [50364, 3361, 505, 466, 439, 264, 10298, 293, 264, 2638, 643, 281, 4648, 13, 50564], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 134, "seek": 54028, "start": 544.28, "end": 546.28, "text": " You don't need to take care about that stuff.", "tokens": [50564, 509, 500, 380, 643, 281, 747, 1127, 466, 300, 1507, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 135, "seek": 54028, "start": 546.28, "end": 548.28, "text": " We'll do it for you.", "tokens": [50664, 492, 603, 360, 309, 337, 291, 13, 50764], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 136, "seek": 54028, "start": 548.28, "end": 552.28, "text": " And then it's passed to providers, so a series provider.", "tokens": [50764, 400, 550, 309, 311, 4678, 281, 11330, 11, 370, 257, 2638, 12398, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 137, "seek": 54028, "start": 552.28, "end": 556.28, "text": " But take care about knowing what is a bar, a bar series,", "tokens": [50964, 583, 747, 1127, 466, 5276, 437, 307, 257, 2159, 11, 257, 2159, 2638, 11, 51164], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 138, "seek": 54028, "start": 556.28, "end": 558.28, "text": " what is a line series, what is a pie series.", "tokens": [51164, 437, 307, 257, 1622, 2638, 11, 437, 307, 257, 1730, 2638, 13, 51264], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 139, "seek": 54028, "start": 558.28, "end": 561.28, "text": " Same for the axis and interaction provider.", "tokens": [51264, 10635, 337, 264, 10298, 293, 9285, 12398, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 140, "seek": 54028, "start": 561.28, "end": 564.28, "text": " For example, we'll say to you, the series with this idea", "tokens": [51414, 1171, 1365, 11, 321, 603, 584, 281, 291, 11, 264, 2638, 365, 341, 1558, 51564], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 141, "seek": 54028, "start": 564.28, "end": 566.28, "text": " is currently highlighted by the most.", "tokens": [51564, 307, 4362, 17173, 538, 264, 881, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 142, "seek": 54028, "start": 566.28, "end": 568.28, "text": " So, displaying accordingly.", "tokens": [51664, 407, 11, 36834, 19717, 13, 51764], "temperature": 0.0, "avg_logprob": -0.17519172789558532, "compression_ratio": 1.834008097165992, "no_speech_prob": 0.0031042492482811213}, {"id": 143, "seek": 56828, "start": 569.28, "end": 571.28, "text": " So now we can create the rendering part.", "tokens": [50414, 407, 586, 321, 393, 1884, 264, 22407, 644, 13, 50514], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 144, "seek": 56828, "start": 571.28, "end": 574.28, "text": " So, for example, the bar plot, we'll call the series provider", "tokens": [50514, 407, 11, 337, 1365, 11, 264, 2159, 7542, 11, 321, 603, 818, 264, 2638, 12398, 50664], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 145, "seek": 56828, "start": 574.28, "end": 577.28, "text": " and say, okay, give me the data about the series.", "tokens": [50664, 293, 584, 11, 1392, 11, 976, 385, 264, 1412, 466, 264, 2638, 13, 50814], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 146, "seek": 56828, "start": 577.28, "end": 580.28, "text": " If there is none in Render.0, if there is some,", "tokens": [50814, 759, 456, 307, 6022, 294, 497, 3216, 13, 15, 11, 498, 456, 307, 512, 11, 50964], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 147, "seek": 56828, "start": 580.28, "end": 584.28, "text": " he asks to the axis provider, okay, I have this bar with a value of 24.", "tokens": [50964, 415, 8962, 281, 264, 10298, 12398, 11, 1392, 11, 286, 362, 341, 2159, 365, 257, 2158, 295, 4022, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 148, "seek": 56828, "start": 584.28, "end": 588.28, "text": " Can you say me which have a coordinate I should associate to this value?", "tokens": [51164, 1664, 291, 584, 385, 597, 362, 257, 15670, 286, 820, 14644, 281, 341, 2158, 30, 51364], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 149, "seek": 56828, "start": 588.28, "end": 593.28, "text": " So, he renders the rectangle, and he will communicate with the interaction provider", "tokens": [51364, 407, 11, 415, 6125, 433, 264, 21930, 11, 293, 415, 486, 7890, 365, 264, 9285, 12398, 51614], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 150, "seek": 56828, "start": 593.28, "end": 597.28, "text": " to know if the bar needs to be fade out, highlighted,", "tokens": [51614, 281, 458, 498, 264, 2159, 2203, 281, 312, 21626, 484, 11, 17173, 11, 51814], "temperature": 0.0, "avg_logprob": -0.18374768594153842, "compression_ratio": 1.7007042253521127, "no_speech_prob": 0.0021416135132312775}, {"id": 151, "seek": 59728, "start": 597.28, "end": 599.28, "text": " or just in a normal state.", "tokens": [50364, 420, 445, 294, 257, 2710, 1785, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 152, "seek": 59728, "start": 599.28, "end": 602.28, "text": " With the same logic, you can create whatever you want.", "tokens": [50464, 2022, 264, 912, 9952, 11, 291, 393, 1884, 2035, 291, 528, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 153, "seek": 59728, "start": 602.28, "end": 605.28, "text": " So, other kind of series, other kind of components.", "tokens": [50614, 407, 11, 661, 733, 295, 2638, 11, 661, 733, 295, 6677, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 154, "seek": 59728, "start": 605.28, "end": 608.28, "text": " So, for example, we created the axis, legend to tip the basics one.", "tokens": [50764, 407, 11, 337, 1365, 11, 321, 2942, 264, 10298, 11, 9451, 281, 4125, 264, 14688, 472, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 155, "seek": 59728, "start": 608.28, "end": 613.28, "text": " For the little story, the reference line has been created by a user,", "tokens": [50914, 1171, 264, 707, 1657, 11, 264, 6408, 1622, 575, 668, 2942, 538, 257, 4195, 11, 51164], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 156, "seek": 59728, "start": 613.28, "end": 616.28, "text": " just using the provider because it was a bar so.", "tokens": [51164, 445, 1228, 264, 12398, 570, 309, 390, 257, 2159, 370, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 157, "seek": 59728, "start": 616.28, "end": 618.28, "text": " And of course, you can create your own ones,", "tokens": [51314, 400, 295, 1164, 11, 291, 393, 1884, 428, 1065, 2306, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 158, "seek": 59728, "start": 618.28, "end": 622.28, "text": " and that's the main success of this approach.", "tokens": [51414, 293, 300, 311, 264, 2135, 2245, 295, 341, 3109, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 159, "seek": 59728, "start": 622.28, "end": 625.28, "text": " So, as a conclusion, a single component.", "tokens": [51614, 407, 11, 382, 257, 10063, 11, 257, 2167, 6542, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1480699005126953, "compression_ratio": 1.7279693486590038, "no_speech_prob": 0.0012948396615684032}, {"id": 160, "seek": 62528, "start": 625.28, "end": 629.28, "text": " For us, it was a need because most of the time, for example,", "tokens": [50364, 1171, 505, 11, 309, 390, 257, 643, 570, 881, 295, 264, 565, 11, 337, 1365, 11, 50564], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 161, "seek": 62528, "start": 629.28, "end": 632.28, "text": " you just want to put a sparkline.", "tokens": [50564, 291, 445, 528, 281, 829, 257, 9908, 1889, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 162, "seek": 62528, "start": 632.28, "end": 636.28, "text": " You want to put a bar chart in your application very quickly.", "tokens": [50714, 509, 528, 281, 829, 257, 2159, 6927, 294, 428, 3861, 588, 2661, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 163, "seek": 62528, "start": 636.28, "end": 638.28, "text": " So, you say bar charts.", "tokens": [50914, 407, 11, 291, 584, 2159, 17767, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 164, "seek": 62528, "start": 638.28, "end": 643.28, "text": " You get few options, but just what you need to get the correct bar chart,", "tokens": [51014, 509, 483, 1326, 3956, 11, 457, 445, 437, 291, 643, 281, 483, 264, 3006, 2159, 6927, 11, 51264], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 165, "seek": 62528, "start": 643.28, "end": 646.28, "text": " and you don't have to care about all this internal stuff,", "tokens": [51264, 293, 291, 500, 380, 362, 281, 1127, 466, 439, 341, 6920, 1507, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 166, "seek": 62528, "start": 646.28, "end": 649.28, "text": " about all components communicate together.", "tokens": [51414, 466, 439, 6677, 7890, 1214, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 167, "seek": 62528, "start": 649.28, "end": 652.28, "text": " But as soon as you want to do something very custom,", "tokens": [51564, 583, 382, 2321, 382, 291, 528, 281, 360, 746, 588, 2375, 11, 51714], "temperature": 0.0, "avg_logprob": -0.11810853459813574, "compression_ratio": 1.6929460580912863, "no_speech_prob": 0.019765149801969528}, {"id": 168, "seek": 65228, "start": 652.28, "end": 656.28, "text": " and the charts are part of the earth of your business model,", "tokens": [50364, 293, 264, 17767, 366, 644, 295, 264, 4120, 295, 428, 1606, 2316, 11, 50564], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 169, "seek": 65228, "start": 656.28, "end": 660.28, "text": " you want it to be as the designer implemented it,", "tokens": [50564, 291, 528, 309, 281, 312, 382, 264, 11795, 12270, 309, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 170, "seek": 65228, "start": 660.28, "end": 662.28, "text": " or display very specific stuff.", "tokens": [50764, 420, 4674, 588, 2685, 1507, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 171, "seek": 65228, "start": 662.28, "end": 664.28, "text": " So, you need composition.", "tokens": [50864, 407, 11, 291, 643, 12686, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 172, "seek": 65228, "start": 664.28, "end": 669.28, "text": " The main failure of this experiment was the configuration feeling.", "tokens": [50964, 440, 2135, 7763, 295, 341, 5120, 390, 264, 11694, 2633, 13, 51214], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 173, "seek": 65228, "start": 669.28, "end": 672.28, "text": " I wanted absolutely to avoid this aspect of,", "tokens": [51214, 286, 1415, 3122, 281, 5042, 341, 4171, 295, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 174, "seek": 65228, "start": 672.28, "end": 675.28, "text": " I give you a bunch of options, deal with it.", "tokens": [51364, 286, 976, 291, 257, 3840, 295, 3956, 11, 2028, 365, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 175, "seek": 65228, "start": 675.28, "end": 678.28, "text": " It's not possible because there is so much interaction", "tokens": [51514, 467, 311, 406, 1944, 570, 456, 307, 370, 709, 9285, 51664], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 176, "seek": 65228, "start": 678.28, "end": 680.28, "text": " between the axis and the series,", "tokens": [51664, 1296, 264, 10298, 293, 264, 2638, 11, 51764], "temperature": 0.0, "avg_logprob": -0.14239991505940755, "compression_ratio": 1.625984251968504, "no_speech_prob": 0.01159290038049221}, {"id": 177, "seek": 68028, "start": 680.28, "end": 685.28, "text": " but you cannot split them into the options where they are needed.", "tokens": [50364, 457, 291, 2644, 7472, 552, 666, 264, 3956, 689, 436, 366, 2978, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 178, "seek": 68028, "start": 685.28, "end": 688.28, "text": " For example, axis in axis and series in the series.", "tokens": [50614, 1171, 1365, 11, 10298, 294, 10298, 293, 2638, 294, 264, 2638, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 179, "seek": 68028, "start": 688.28, "end": 692.28, "text": " You need to get them all together to do the computation.", "tokens": [50764, 509, 643, 281, 483, 552, 439, 1214, 281, 360, 264, 24903, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 180, "seek": 68028, "start": 692.28, "end": 695.28, "text": " You get this feeling, but okay.", "tokens": [50964, 509, 483, 341, 2633, 11, 457, 1392, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 181, "seek": 68028, "start": 695.28, "end": 699.28, "text": " And the success is to empower developers to create their own subcomponents.", "tokens": [51114, 400, 264, 2245, 307, 281, 11071, 8849, 281, 1884, 641, 1065, 1422, 21541, 40496, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 182, "seek": 68028, "start": 699.28, "end": 703.28, "text": " And that is something I've never seen before,", "tokens": [51314, 400, 300, 307, 746, 286, 600, 1128, 1612, 949, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 183, "seek": 68028, "start": 703.28, "end": 707.28, "text": " except if you go very low level on how to make charts.", "tokens": [51514, 3993, 498, 291, 352, 588, 2295, 1496, 322, 577, 281, 652, 17767, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1180292572638001, "compression_ratio": 1.6367521367521367, "no_speech_prob": 0.006651373114436865}, {"id": 184, "seek": 70728, "start": 707.28, "end": 711.28, "text": " And to give you a flavor about how easy it is.", "tokens": [50364, 400, 281, 976, 291, 257, 6813, 466, 577, 1858, 309, 307, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 185, "seek": 70728, "start": 711.28, "end": 714.28, "text": " Okay.", "tokens": [50564, 1033, 13, 50714], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 186, "seek": 70728, "start": 714.28, "end": 716.28, "text": " So, this is a line chart.", "tokens": [50714, 407, 11, 341, 307, 257, 1622, 6927, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 187, "seek": 70728, "start": 716.28, "end": 720.28, "text": " And there is a custom component in the middle, this horizontal line,", "tokens": [50814, 400, 456, 307, 257, 2375, 6542, 294, 264, 2808, 11, 341, 12750, 1622, 11, 51014], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 188, "seek": 70728, "start": 720.28, "end": 724.28, "text": " that shows you for your most position what is the value on the left and on the right.", "tokens": [51014, 300, 3110, 291, 337, 428, 881, 2535, 437, 307, 264, 2158, 322, 264, 1411, 293, 322, 264, 558, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 189, "seek": 70728, "start": 724.28, "end": 726.28, "text": " So, this component is not very useful,", "tokens": [51214, 407, 11, 341, 6542, 307, 406, 588, 4420, 11, 51314], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 190, "seek": 70728, "start": 726.28, "end": 731.28, "text": " but it demonstrates interaction and axis management.", "tokens": [51314, 457, 309, 31034, 9285, 293, 10298, 4592, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 191, "seek": 70728, "start": 731.28, "end": 734.28, "text": " And so, to create it, you need two stuff.", "tokens": [51564, 400, 370, 11, 281, 1884, 309, 11, 291, 643, 732, 1507, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13971336215150124, "compression_ratio": 1.6238938053097345, "no_speech_prob": 0.0032800515182316303}, {"id": 192, "seek": 73428, "start": 734.28, "end": 738.28, "text": " First, the bounding box in red, the most position.", "tokens": [50364, 2386, 11, 264, 5472, 278, 2424, 294, 2182, 11, 264, 881, 2535, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 193, "seek": 73428, "start": 738.28, "end": 740.28, "text": " That's easy stuff.", "tokens": [50564, 663, 311, 1858, 1507, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 194, "seek": 73428, "start": 740.28, "end": 742.28, "text": " And then you want what we call a scale.", "tokens": [50664, 400, 550, 291, 528, 437, 321, 818, 257, 4373, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 195, "seek": 73428, "start": 742.28, "end": 747.28, "text": " If you use D3, it's the same object that allows you to convert the value to a coordinate.", "tokens": [50764, 759, 291, 764, 413, 18, 11, 309, 311, 264, 912, 2657, 300, 4045, 291, 281, 7620, 264, 2158, 281, 257, 15670, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 196, "seek": 73428, "start": 747.28, "end": 752.28, "text": " And what will interest us is the coordinate to the value.", "tokens": [51014, 400, 437, 486, 1179, 505, 307, 264, 15670, 281, 264, 2158, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 197, "seek": 73428, "start": 752.28, "end": 754.28, "text": " So, let's start coding it.", "tokens": [51264, 407, 11, 718, 311, 722, 17720, 309, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 198, "seek": 73428, "start": 754.28, "end": 756.28, "text": " I promise it will be very quick.", "tokens": [51364, 286, 6228, 309, 486, 312, 588, 1702, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10726508688419423, "compression_ratio": 1.553921568627451, "no_speech_prob": 0.005453998222947121}, {"id": 199, "seek": 75628, "start": 756.28, "end": 762.28, "text": " Use drawing area is calling the provider that retains.", "tokens": [50364, 8278, 6316, 1859, 307, 5141, 264, 12398, 300, 1533, 2315, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 200, "seek": 75628, "start": 762.28, "end": 764.28, "text": " Where do you plot the data?", "tokens": [50664, 2305, 360, 291, 7542, 264, 1412, 30, 50764], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 201, "seek": 75628, "start": 764.28, "end": 767.28, "text": " So, you get just the bounding box.", "tokens": [50764, 407, 11, 291, 483, 445, 264, 5472, 278, 2424, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 202, "seek": 75628, "start": 767.28, "end": 773.28, "text": " And you use Y scale, provided the idea of your scale.", "tokens": [50914, 400, 291, 764, 398, 4373, 11, 5649, 264, 1558, 295, 428, 4373, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 203, "seek": 75628, "start": 773.28, "end": 775.28, "text": " And it returns you the D3 scale.", "tokens": [51214, 400, 309, 11247, 291, 264, 413, 18, 4373, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 204, "seek": 75628, "start": 775.28, "end": 776.28, "text": " Very easy.", "tokens": [51314, 4372, 1858, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 205, "seek": 75628, "start": 776.28, "end": 777.28, "text": " And that's all.", "tokens": [51364, 400, 300, 311, 439, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 206, "seek": 75628, "start": 777.28, "end": 778.28, "text": " That's all you need.", "tokens": [51414, 663, 311, 439, 291, 643, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 207, "seek": 75628, "start": 778.28, "end": 780.28, "text": " After, it's boring stuff.", "tokens": [51464, 2381, 11, 309, 311, 9989, 1507, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 208, "seek": 75628, "start": 780.28, "end": 781.28, "text": " You save a state.", "tokens": [51564, 509, 3155, 257, 1785, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1886401079138931, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.02878039889037609}, {"id": 209, "seek": 78128, "start": 781.28, "end": 787.28, "text": " And you do your use effect to almost move stuff like that.", "tokens": [50364, 400, 291, 360, 428, 764, 1802, 281, 1920, 1286, 1507, 411, 300, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 210, "seek": 78128, "start": 787.28, "end": 792.28, "text": " If you store null, just because you are outside of the SVG of the drawing area,", "tokens": [50664, 759, 291, 3531, 18184, 11, 445, 570, 291, 366, 2380, 295, 264, 31910, 38, 295, 264, 6316, 1859, 11, 50914], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 211, "seek": 78128, "start": 792.28, "end": 794.28, "text": " so you're under nothing.", "tokens": [50914, 370, 291, 434, 833, 1825, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 212, "seek": 78128, "start": 794.28, "end": 796.28, "text": " Otherwise, you're under a path.", "tokens": [51014, 10328, 11, 291, 434, 833, 257, 3100, 13, 51114], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 213, "seek": 78128, "start": 796.28, "end": 799.28, "text": " So, quickly.", "tokens": [51114, 407, 11, 2661, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 214, "seek": 78128, "start": 799.28, "end": 802.28, "text": " You go from the left at the most position.", "tokens": [51264, 509, 352, 490, 264, 1411, 412, 264, 881, 2535, 13, 51414], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 215, "seek": 78128, "start": 802.28, "end": 804.28, "text": " So, single point.", "tokens": [51414, 407, 11, 2167, 935, 13, 51514], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 216, "seek": 78128, "start": 804.28, "end": 806.28, "text": " And you draw a line of the wave.", "tokens": [51514, 400, 291, 2642, 257, 1622, 295, 264, 5772, 13, 51614], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 217, "seek": 78128, "start": 806.28, "end": 809.28, "text": " So, that's come from the drawing area.", "tokens": [51614, 407, 11, 300, 311, 808, 490, 264, 6316, 1859, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19590220084557167, "compression_ratio": 1.6161137440758293, "no_speech_prob": 0.02512444742023945}, {"id": 218, "seek": 80928, "start": 809.28, "end": 817.28, "text": " And then you just have to use the axis scale invert to get the value from the coordinate.", "tokens": [50364, 400, 550, 291, 445, 362, 281, 764, 264, 10298, 4373, 33966, 281, 483, 264, 2158, 490, 264, 15670, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 219, "seek": 80928, "start": 817.28, "end": 818.28, "text": " You display it.", "tokens": [50764, 509, 4674, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 220, "seek": 80928, "start": 818.28, "end": 819.28, "text": " And that's all.", "tokens": [50814, 400, 300, 311, 439, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 221, "seek": 80928, "start": 819.28, "end": 823.28, "text": " So, you've created a component that is completely custom.", "tokens": [50864, 407, 11, 291, 600, 2942, 257, 6542, 300, 307, 2584, 2375, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 222, "seek": 80928, "start": 823.28, "end": 825.28, "text": " And that interacts with your chart.", "tokens": [51064, 400, 300, 43582, 365, 428, 6927, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 223, "seek": 80928, "start": 825.28, "end": 833.28, "text": " And you can reuse it into any other kind of charts you build with us.", "tokens": [51164, 400, 291, 393, 26225, 309, 666, 604, 661, 733, 295, 17767, 291, 1322, 365, 505, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 224, "seek": 80928, "start": 833.28, "end": 836.28, "text": " Thank you very much for your attention.", "tokens": [51564, 1044, 291, 588, 709, 337, 428, 3202, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09636345128903444, "compression_ratio": 1.5853658536585367, "no_speech_prob": 0.0027891467325389385}, {"id": 225, "seek": 83628, "start": 836.28, "end": 842.28, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 226, "seek": 83628, "start": 842.28, "end": 848.28, "text": " Most of the time, people don't know, but there is an option on to force them to send a feedback about talks.", "tokens": [50664, 4534, 295, 264, 565, 11, 561, 500, 380, 458, 11, 457, 456, 307, 364, 3614, 322, 281, 3464, 552, 281, 2845, 257, 5824, 466, 6686, 13, 50964], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 227, "seek": 83628, "start": 848.28, "end": 850.28, "text": " If you have some, please don't hesitate.", "tokens": [50964, 759, 291, 362, 512, 11, 1767, 500, 380, 20842, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 228, "seek": 83628, "start": 850.28, "end": 855.28, "text": " Otherwise, there are my contacts for later.", "tokens": [51064, 10328, 11, 456, 366, 452, 15836, 337, 1780, 13, 51314], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 229, "seek": 83628, "start": 855.28, "end": 856.28, "text": " Are there any questions?", "tokens": [51314, 2014, 456, 604, 1651, 30, 51364], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 230, "seek": 83628, "start": 856.28, "end": 862.28, "text": " We have a few minutes for some questions.", "tokens": [51364, 492, 362, 257, 1326, 2077, 337, 512, 1651, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19958246381659256, "compression_ratio": 1.5224719101123596, "no_speech_prob": 0.0333373099565506}, {"id": 231, "seek": 86228, "start": 862.28, "end": 871.28, "text": " Yes.", "tokens": [50364, 1079, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2450671856219952, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.029115719720721245}, {"id": 232, "seek": 86228, "start": 871.28, "end": 875.28, "text": " You mean rendering a custom?", "tokens": [50814, 509, 914, 22407, 257, 2375, 30, 51014], "temperature": 0.0, "avg_logprob": -0.2450671856219952, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.029115719720721245}, {"id": 233, "seek": 86228, "start": 875.28, "end": 880.28, "text": " Can we use a render props to render custom sub-elements?", "tokens": [51014, 1664, 321, 764, 257, 15529, 26173, 281, 15529, 2375, 1422, 12, 16884, 1117, 30, 51264], "temperature": 0.0, "avg_logprob": -0.2450671856219952, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.029115719720721245}, {"id": 234, "seek": 86228, "start": 880.28, "end": 887.28, "text": " But the issue is, for example, with SVG, you end up with the order of your components,", "tokens": [51264, 583, 264, 2734, 307, 11, 337, 1365, 11, 365, 31910, 38, 11, 291, 917, 493, 365, 264, 1668, 295, 428, 6677, 11, 51614], "temperature": 0.0, "avg_logprob": -0.2450671856219952, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.029115719720721245}, {"id": 235, "seek": 86228, "start": 887.28, "end": 890.28, "text": " impact which one is overflowing which one.", "tokens": [51614, 2712, 597, 472, 307, 670, 43955, 597, 472, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2450671856219952, "compression_ratio": 1.4285714285714286, "no_speech_prob": 0.029115719720721245}, {"id": 236, "seek": 89028, "start": 890.28, "end": 895.28, "text": " And so the question is, where do you render this element?", "tokens": [50364, 400, 370, 264, 1168, 307, 11, 689, 360, 291, 15529, 341, 4478, 30, 50614], "temperature": 0.0, "avg_logprob": -0.11772785613785929, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.02713380567729473}, {"id": 237, "seek": 89028, "start": 895.28, "end": 902.28, "text": " So, for example, this line, you can imagine that you put it on top of a line chart", "tokens": [50614, 407, 11, 337, 1365, 11, 341, 1622, 11, 291, 393, 3811, 300, 291, 829, 309, 322, 1192, 295, 257, 1622, 6927, 50964], "temperature": 0.0, "avg_logprob": -0.11772785613785929, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.02713380567729473}, {"id": 238, "seek": 89028, "start": 902.28, "end": 905.28, "text": " and below the mark plot of the line chart.", "tokens": [50964, 293, 2507, 264, 1491, 7542, 295, 264, 1622, 6927, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11772785613785929, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.02713380567729473}, {"id": 239, "seek": 89028, "start": 905.28, "end": 913.28, "text": " And so you need to get access to the GSX level.", "tokens": [51114, 400, 370, 291, 643, 281, 483, 2105, 281, 264, 32047, 55, 1496, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11772785613785929, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.02713380567729473}, {"id": 240, "seek": 91328, "start": 913.28, "end": 926.28, "text": " How do you go from simple mode to complex?", "tokens": [50364, 1012, 360, 291, 352, 490, 2199, 4391, 281, 3997, 30, 51014], "temperature": 0.0, "avg_logprob": -0.19523451246064286, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.08820252865552902}, {"id": 241, "seek": 91328, "start": 926.28, "end": 935.28, "text": " You can go from one component and if you need more advanced stuff, you can compose.", "tokens": [51014, 509, 393, 352, 490, 472, 6542, 293, 498, 291, 643, 544, 7339, 1507, 11, 291, 393, 35925, 13, 51464], "temperature": 0.0, "avg_logprob": -0.19523451246064286, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.08820252865552902}, {"id": 242, "seek": 91328, "start": 935.28, "end": 942.28, "text": " There is a single component for all the basic charts, so line, bar, pie, and the scatter.", "tokens": [51464, 821, 307, 257, 2167, 6542, 337, 439, 264, 3875, 17767, 11, 370, 1622, 11, 2159, 11, 1730, 11, 293, 264, 34951, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19523451246064286, "compression_ratio": 1.469387755102041, "no_speech_prob": 0.08820252865552902}, {"id": 243, "seek": 94228, "start": 942.28, "end": 948.28, "text": " And if you want, for example, to compose a bar chart with a line chart, you need to recreate it.", "tokens": [50364, 400, 498, 291, 528, 11, 337, 1365, 11, 281, 35925, 257, 2159, 6927, 365, 257, 1622, 6927, 11, 291, 643, 281, 25833, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17810954842516172, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.040087055414915085}, {"id": 244, "seek": 94228, "start": 948.28, "end": 951.28, "text": " So we provide all the basic stuff.", "tokens": [50664, 407, 321, 2893, 439, 264, 3875, 1507, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17810954842516172, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.040087055414915085}, {"id": 245, "seek": 94228, "start": 951.28, "end": 958.28, "text": " So basically, if you open in GitHub, the line chart.tsx, you will see a chart container,", "tokens": [50814, 407, 1936, 11, 498, 291, 1269, 294, 23331, 11, 264, 1622, 6927, 13, 1373, 87, 11, 291, 486, 536, 257, 6927, 10129, 11, 51164], "temperature": 0.0, "avg_logprob": -0.17810954842516172, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.040087055414915085}, {"id": 246, "seek": 94228, "start": 958.28, "end": 964.28, "text": " different plotting, the access, and basically that's also you get five or between five", "tokens": [51164, 819, 41178, 11, 264, 2105, 11, 293, 1936, 300, 311, 611, 291, 483, 1732, 420, 1296, 1732, 51464], "temperature": 0.0, "avg_logprob": -0.17810954842516172, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.040087055414915085}, {"id": 247, "seek": 94228, "start": 964.28, "end": 971.28, "text": " and 10 components to create your own one.", "tokens": [51464, 293, 1266, 6677, 281, 1884, 428, 1065, 472, 13, 51814], "temperature": 0.0, "avg_logprob": -0.17810954842516172, "compression_ratio": 1.6157407407407407, "no_speech_prob": 0.040087055414915085}, {"id": 248, "seek": 97128, "start": 971.28, "end": 976.28, "text": " How do you use the rest of MI as financing?", "tokens": [50364, 1012, 360, 291, 764, 264, 1472, 295, 13696, 382, 22286, 30, 50614], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 249, "seek": 97128, "start": 976.28, "end": 979.28, "text": " It's kind of standalone.", "tokens": [50614, 467, 311, 733, 295, 37454, 13, 50764], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 250, "seek": 97128, "start": 979.28, "end": 989.28, "text": " We reuse the theme mostly to be linked with, for example, the tooltip so that it gets the same color as the background", "tokens": [50764, 492, 26225, 264, 6314, 5240, 281, 312, 9408, 365, 11, 337, 1365, 11, 264, 2290, 83, 647, 370, 300, 309, 2170, 264, 912, 2017, 382, 264, 3678, 51264], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 251, "seek": 97128, "start": 989.28, "end": 991.28, "text": " of your application.", "tokens": [51264, 295, 428, 3861, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 252, "seek": 97128, "start": 991.28, "end": 995.28, "text": " But otherwise, it's SVG, so there is not that much in common.", "tokens": [51364, 583, 5911, 11, 309, 311, 31910, 38, 11, 370, 456, 307, 406, 300, 709, 294, 2689, 13, 51564], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 253, "seek": 97128, "start": 995.28, "end": 997.28, "text": " There is no button, for example.", "tokens": [51564, 821, 307, 572, 2960, 11, 337, 1365, 13, 51664], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 254, "seek": 97128, "start": 997.28, "end": 998.28, "text": " There is no select.", "tokens": [51664, 821, 307, 572, 3048, 13, 51714], "temperature": 0.0, "avg_logprob": -0.20004104046111412, "compression_ratio": 1.575609756097561, "no_speech_prob": 0.06002809852361679}, {"id": 255, "seek": 99828, "start": 999.28, "end": 1002.28, "text": " We don't really need those user interfaces.", "tokens": [50414, 492, 500, 380, 534, 643, 729, 4195, 28416, 13, 50564], "temperature": 0.0, "avg_logprob": -0.22389529733096852, "compression_ratio": 1.3767123287671232, "no_speech_prob": 0.02203102968633175}, {"id": 256, "seek": 99828, "start": 1002.28, "end": 1008.28, "text": " It's more of a theming and the way components are styled, for example.", "tokens": [50564, 467, 311, 544, 295, 257, 552, 278, 293, 264, 636, 6677, 366, 7952, 1493, 11, 337, 1365, 13, 50864], "temperature": 0.0, "avg_logprob": -0.22389529733096852, "compression_ratio": 1.3767123287671232, "no_speech_prob": 0.02203102968633175}, {"id": 257, "seek": 99828, "start": 1008.28, "end": 1015.28, "text": " You set that it follows the same developer experience or you can override the styling.", "tokens": [50864, 509, 992, 300, 309, 10002, 264, 912, 10754, 1752, 420, 291, 393, 42321, 264, 27944, 13, 51214], "temperature": 0.0, "avg_logprob": -0.22389529733096852, "compression_ratio": 1.3767123287671232, "no_speech_prob": 0.02203102968633175}, {"id": 258, "seek": 101528, "start": 1016.28, "end": 1030.28, "text": " How do we create a reaction between what you have in the data pool?", "tokens": [50414, 1012, 360, 321, 1884, 257, 5480, 1296, 437, 291, 362, 294, 264, 1412, 7005, 30, 51114], "temperature": 0.0, "avg_logprob": -0.728131780084574, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.29286107420921326}, {"id": 259, "seek": 101528, "start": 1030.28, "end": 1032.28, "text": " How is the performance?", "tokens": [51114, 1012, 307, 264, 3389, 30, 51214], "temperature": 0.0, "avg_logprob": -0.728131780084574, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.29286107420921326}, {"id": 260, "seek": 101528, "start": 1032.28, "end": 1034.28, "text": " Have you checked how it behaves?", "tokens": [51214, 3560, 291, 10033, 577, 309, 36896, 30, 51314], "temperature": 0.0, "avg_logprob": -0.728131780084574, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.29286107420921326}, {"id": 261, "seek": 101528, "start": 1034.28, "end": 1040.28, "text": " Because how we have to prevent this is with reaction between real reaction and real data", "tokens": [51314, 1436, 577, 321, 362, 281, 4871, 341, 307, 365, 5480, 1296, 957, 5480, 293, 957, 1412, 51614], "temperature": 0.0, "avg_logprob": -0.728131780084574, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.29286107420921326}, {"id": 262, "seek": 104028, "start": 1041.28, "end": 1044.28, "text": " and real data.", "tokens": [50414, 293, 957, 1412, 13, 50564], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 263, "seek": 104028, "start": 1044.28, "end": 1049.28, "text": " Have you seen how this affects whether we have a lot of points?", "tokens": [50564, 3560, 291, 1612, 577, 341, 11807, 1968, 321, 362, 257, 688, 295, 2793, 30, 50814], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 264, "seek": 104028, "start": 1049.28, "end": 1053.28, "text": " No, we did not try mostly because we are currently using SVG.", "tokens": [50814, 883, 11, 321, 630, 406, 853, 5240, 570, 321, 366, 4362, 1228, 31910, 38, 13, 51014], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 265, "seek": 104028, "start": 1053.28, "end": 1062.28, "text": " And so we know that there is at least a wall that is waiting for us at a certain level just the time to render the SVG.", "tokens": [51014, 400, 370, 321, 458, 300, 456, 307, 412, 1935, 257, 2929, 300, 307, 3806, 337, 505, 412, 257, 1629, 1496, 445, 264, 565, 281, 15529, 264, 31910, 38, 13, 51464], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 266, "seek": 104028, "start": 1062.28, "end": 1064.28, "text": " So we did not care that much.", "tokens": [51464, 407, 321, 630, 406, 1127, 300, 709, 13, 51564], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 267, "seek": 104028, "start": 1064.28, "end": 1067.28, "text": " It's part of the next year roadmap.", "tokens": [51564, 467, 311, 644, 295, 264, 958, 1064, 35738, 13, 51714], "temperature": 0.0, "avg_logprob": -0.23087694333947223, "compression_ratio": 1.5450236966824644, "no_speech_prob": 0.03256254270672798}, {"id": 268, "seek": 107028, "start": 1070.28, "end": 1074.28, "text": " Thank you all for close for ads on.", "tokens": [50414, 1044, 291, 439, 337, 1998, 337, 10342, 322, 13, 50564], "temperature": 0.0, "avg_logprob": -0.762204090754191, "compression_ratio": 0.8974358974358975, "no_speech_prob": 0.36622145771980286}], "language": "en"}