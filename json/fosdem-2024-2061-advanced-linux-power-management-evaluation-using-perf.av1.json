{"text": " So, hello. Let's start. I think 50 minutes and all, so I will hurry up here. And the previous slides and presentations, we saw the overall picture somehow, the crit thing. And the last slide, we dig into one system somehow. And in this slide, we also want to dig a little bit more in the details, how to analyze the power consumption. What we saw also in the previous presentation, there was an... Sure, sure, sorry. What we saw in the last presentation was that we saw the power consumption of one system, a little bit similar to power supply that we saw this task consumes and what's whatever. But the question what you often have is after this data, how you can optimize your load for your server, for your embedded product somehow. What are the causes why the application runs too often, the system runs too often, cannot go into deep states, peace states and such things, right? At the end, it's the hardware that consumes the power and you can save power if you put things into deep sleep states or consumes the frequency somehow. And this is really important to save energy. And what we did in the past was writing scripts to optimize your workload and get things what are the causes that an application runs too often, right? It runs often, cannot go into deep sleep states. This is important to do the power optimization. And what I provide in the next couple of slides here is an application that helps you to optimize your workload and makes this visible somehow. So what we are talking about is a perf script and extension to perf. So it's, if it is mainline, it's not yet mainline. I will send this script to Analo in the mailing list and hopefully it gets merged quickly somehow. But when it's merged then it's really usable, easy usable. It's just an up-get install and everything works out. And also for Yachter and Buildroot, it's really easy to use these things after. It's also important that it can be used in embedded systems and everywhere. How does it work? It's just a record call where you record your workload with the workload separator, like every time. And here I record for 60 for one minute, workload on all the CPUs. And then you record everything one minute fine. And then you start with the report, the power analyzer, and it's have different modes. Because I have just 10 minutes, I show one mode here, but there are different modes for different optimization, analysis, and things. So what are the modes? There are several modes that can be activated and used. And you just activate or use the mode you want to focus and dig into the details, right? This is how things work. And what's also important, every mode has different trace points in the kernel. So usually you record only the trace points you require for the particular analyzer. Because if you record everything, every trace point, you get a lot of huge data and things. So normally you limit the data. How does it work? So there's the per script. As always, you can write a recorded data, as we saw for one minute here. And it just records all the trace points that are required. But on the other hand, you can also record the data that are required for your analysis. This is documented, what the trace points are required. Then you have the data. And then you start the script, the reports, and here outputs all the analyzers for this. You start it here with a timer. So what are the timer events somehow. And then because there's a lot of data coming out of this, you usually can use this data already and see, here's something that's not working well, too much timer interaction, for example. But what is it also can do is some post-processing and to create data graphs somehow or filter things afterwards because it's a lot of data. And here, just a showcase, this is one image that's created. You see the time and you see a workload. It's a logarithmic scale here. How much time, timers are working. Timers are one course that triggers from a deep C state to an active state to a zero state somehow. Timers are not that good. Often you see, if you begin analyzing things on your desktop CZ, you see here, I think this is the kitty, my terminal I use here. It has just wake-ups all the time. Why are there wake-ups here? And then you see often some buggy applications, clip-out things. They are constantly triggering your system and this prevents to going into a deep C state. This is the causes that prevents this. So it's really important. And here you see a workload I started and you see all the timers that are correlated with starting a workload. Here you see a lot of kernel timers and then you can start optimizing things. This is just a focus for the timer events, but there are a lot of other events as well. This is other sub-sequence analyzes also just for the timer events. You see here for a tick-less system, normally if there is no load, kernel can really go in a deep sleep state. And then it shuts down the timer tick altogether. But does it really stop the timer tick? You will see it here in these images and you can analyze things and optimize things. What are the kernel timers that trigger your systems? If you look at the graphs a little bit, the resolution is not that good, but you see that there are timer ticks all the time, and the network interrupts, timers are working here and you can optimize this. If you see this and you know what's happened, what we see here in this graph is the timers that are working for each particular task. So you can optimize for your task as well. How many timers are there? I often see in the production environment that the timer has done all the time somehow and not correlated. What you can also do there are system calls for the granularity that the timer can optimize things. For example, the kernel which the introduction of the HR timers, the resolution timers, you can align timers so that timers are not really spaced there and they're exactly triggered at a particular moment in time, which is a simple system knob. You can also say, oh no, it's not so important that the timer is triggered at this time so that the kernel aligns timers at a particular time and allows a deeper sleep state again, something. This knowledge can be combined with the knowledge of this, what you see here, for example. Where are the timers? Right, CPU 0 is somehow special. There are the timers. Can you move, for example, tasks to CPU 1 so that this other CPU cores can go in a deeper sleep state, for example, right? All this is important to do an optimization there. There are some general options. Some others are not always required. This can be turned on with this particular flag. There's CPU, often you want analysis on a particular CPU so you can limit the data. And there's a file out option so if you want to do a post-processing, as we saw in the images, somehow the data is not put it on the standard out, so it's put it on the file and you can use this there. And the data is also written in a day and sanitized that you can trust through use partners here to read the CVS data. And for the post-processing, it's really easy. But there are multiple modules there provided. This is just a sneak peek on the timer module, but there are a lot of other modules as well. You can use them later on. But to the time limit, I just highlighted this timer module. But one last sneak peek here, for example, is the governor. The governor is the component within the kernel to do the processing and commanding of disease deep-stakes. This is the governor. You can select a different governor. It's normally the menu governor. There are other governors as well. And here what you see, how often is which C state is commanded here? And what is also analyzed is, was this good or not? Because the kernel doing a guess working, right? So here the things are the next time in 10 milliseconds, there's a workload because the timer will trigger. So it puts a processor in a particular C state. But was this the right decision or sleep is too narrow, too shallow? And so this is also important somehow. And here you can debug the governor. A student of mine also discovered a bug for the AMD stuff. It's for one particular C1 state. It's switched all the time to the wrong state. But I think this will be released in the next couple of weeks somehow. So it's really also important for you. If you see, does the governor does the right job here? This is visible with another analysis, but there are multiple other post processing steps. And yeah, that's all. I hope this will be integrated in the mainline next couple of weeks. But if you want, you can use this kernel tree and this particular branch to use this. It's just a perf script, really easy also to use out of the tree. And this post processing scripts cannot be shipped with the kernel. That's not how the kernel somehow works. This Python scripts and there will be always available here based on this. And at the end, good documented, hopefully somehow. So yeah, that's all questions. Yeah, perfect. Questions. I'm always getting a question. Process of coverage, just x86. What's the coverage of you got? I mean, now look, I've got an M1 Apple thing. Would I be able to run it off there if I run Linux on that hardware? Yeah, this script will work on ARM x86 for Intel and AMD. There are differences in the P state tracking because P state tracking is the introduction of Skylake and HWP with hardware tracing. So it's will be not visible, but it will be visible on ARM CPUs. For example, some as a sample work, some will not work, but it's just Linux and all the major. And some are more software, the analysts of scheduling events. Somehow it will always run, but more hardware like analysis will not work somehow. But yeah. Just a follow up for previous question. Will it work for like, Graviton, all this kind of cloud proprietary processors? Yeah. It would generally run there. If it at least Linux ARM and the processor and it will just be the same. So no difference there. Yeah. So I think it's going to be a good idea to run it on the same hardware. Yeah. And there. If it at least Linux ARM and the processor and it will just be the same. So no difference there. Another question. If not later on we can install a script at your PC and test it. Hi Aaron. That's just a follow up on the previous question. There's actually an extra library, LibOpen CSD, which gives you a whole lot of extra stuff on most ARM cores, but not necessarily apples and Amazon's ARM cores, but any that actually come from standard designs. So a Turing design here. One goal was that it runs everywhere somehow, right? It must be general. And I don't, we don't skip going into the EPPF world. So there are advantages to do things in the kernel to aggregation in the kernel. So but this has sometimes problems with on specific ARM and PSOX and embedded products. So the design was really that runs everywhere. It's easy to use and generally available somehow. Somehow EPPF working with EPPF things to in the kernel and process unwanted data there out has some advantages, right? But you need a tool train then on an embedded product. So it's not that great somehow. And this everything I told you was somehow the idea on the design somehow or extra library. Keep it a bit of minimal stuff which works everywhere somehow. If you want to do more and often you want to do more if you analyze your particular task, how is the scheduling behavior you need more and you need more custom scripting as well somehow. But this is not here. I think it's a lot of data already there. Easy available somehow. But if you want to do more, you need more scripting and things like that and libraries you want to use. Sure. It's a compromise. Maybe a question for me. Can you give us a few insights about the community? How many developers, how many people contribute? Currently I'm the main developer. But at the end it's just in the Python script so it's not really the rocket science. And there are students also working on this, help things and looking at the details. But yeah, it's not that magic somehow. It's just keeping things putting together and make them easy usable. The trace points and Steven Roslatt and all the things, the infrastructure that the kernel provides are the main drivers. That this is possible, right? So just in script. Thank you so much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.0, "text": " So, hello.", "tokens": [50364, 407, 11, 7751, 13, 50614], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 1, "seek": 0, "start": 5.0, "end": 7.0, "text": " Let's start.", "tokens": [50614, 961, 311, 722, 13, 50714], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 2, "seek": 0, "start": 7.0, "end": 13.0, "text": " I think 50 minutes and all, so I will hurry up here.", "tokens": [50714, 286, 519, 2625, 2077, 293, 439, 11, 370, 286, 486, 11025, 493, 510, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 3, "seek": 0, "start": 13.0, "end": 19.0, "text": " And the previous slides and presentations, we saw the overall picture somehow, the crit thing.", "tokens": [51014, 400, 264, 3894, 9788, 293, 18964, 11, 321, 1866, 264, 4787, 3036, 6063, 11, 264, 3113, 551, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 4, "seek": 0, "start": 19.0, "end": 23.0, "text": " And the last slide, we dig into one system somehow.", "tokens": [51314, 400, 264, 1036, 4137, 11, 321, 2528, 666, 472, 1185, 6063, 13, 51514], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 5, "seek": 0, "start": 23.0, "end": 28.0, "text": " And in this slide, we also want to dig a little bit more in the details,", "tokens": [51514, 400, 294, 341, 4137, 11, 321, 611, 528, 281, 2528, 257, 707, 857, 544, 294, 264, 4365, 11, 51764], "temperature": 0.0, "avg_logprob": -0.3169762520563035, "compression_ratio": 1.566137566137566, "no_speech_prob": 0.3910749852657318}, {"id": 6, "seek": 2800, "start": 28.0, "end": 31.0, "text": " how to analyze the power consumption.", "tokens": [50364, 577, 281, 12477, 264, 1347, 12126, 13, 50514], "temperature": 0.0, "avg_logprob": -0.19933151554416967, "compression_ratio": 1.8170731707317074, "no_speech_prob": 0.06427239626646042}, {"id": 7, "seek": 2800, "start": 31.0, "end": 36.0, "text": " What we saw also in the previous presentation, there was an...", "tokens": [50514, 708, 321, 1866, 611, 294, 264, 3894, 5860, 11, 456, 390, 364, 485, 50764], "temperature": 0.0, "avg_logprob": -0.19933151554416967, "compression_ratio": 1.8170731707317074, "no_speech_prob": 0.06427239626646042}, {"id": 8, "seek": 2800, "start": 36.0, "end": 39.0, "text": " Sure, sure, sorry.", "tokens": [50764, 4894, 11, 988, 11, 2597, 13, 50914], "temperature": 0.0, "avg_logprob": -0.19933151554416967, "compression_ratio": 1.8170731707317074, "no_speech_prob": 0.06427239626646042}, {"id": 9, "seek": 2800, "start": 39.0, "end": 45.0, "text": " What we saw in the last presentation was that we saw the power consumption of one system,", "tokens": [50914, 708, 321, 1866, 294, 264, 1036, 5860, 390, 300, 321, 1866, 264, 1347, 12126, 295, 472, 1185, 11, 51214], "temperature": 0.0, "avg_logprob": -0.19933151554416967, "compression_ratio": 1.8170731707317074, "no_speech_prob": 0.06427239626646042}, {"id": 10, "seek": 2800, "start": 45.0, "end": 54.0, "text": " a little bit similar to power supply that we saw this task consumes and what's whatever.", "tokens": [51214, 257, 707, 857, 2531, 281, 1347, 5847, 300, 321, 1866, 341, 5633, 48823, 293, 437, 311, 2035, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19933151554416967, "compression_ratio": 1.8170731707317074, "no_speech_prob": 0.06427239626646042}, {"id": 11, "seek": 5400, "start": 54.0, "end": 64.0, "text": " But the question what you often have is after this data, how you can optimize your load for your server,", "tokens": [50364, 583, 264, 1168, 437, 291, 2049, 362, 307, 934, 341, 1412, 11, 577, 291, 393, 19719, 428, 3677, 337, 428, 7154, 11, 50864], "temperature": 0.0, "avg_logprob": -0.21391632245934528, "compression_ratio": 1.5944444444444446, "no_speech_prob": 0.041690051555633545}, {"id": 12, "seek": 5400, "start": 64.0, "end": 66.0, "text": " for your embedded product somehow.", "tokens": [50864, 337, 428, 16741, 1674, 6063, 13, 50964], "temperature": 0.0, "avg_logprob": -0.21391632245934528, "compression_ratio": 1.5944444444444446, "no_speech_prob": 0.041690051555633545}, {"id": 13, "seek": 5400, "start": 66.0, "end": 73.0, "text": " What are the causes why the application runs too often, the system runs too often,", "tokens": [50964, 708, 366, 264, 7700, 983, 264, 3861, 6676, 886, 2049, 11, 264, 1185, 6676, 886, 2049, 11, 51314], "temperature": 0.0, "avg_logprob": -0.21391632245934528, "compression_ratio": 1.5944444444444446, "no_speech_prob": 0.041690051555633545}, {"id": 14, "seek": 5400, "start": 73.0, "end": 79.0, "text": " cannot go into deep states, peace states and such things, right?", "tokens": [51314, 2644, 352, 666, 2452, 4368, 11, 4336, 4368, 293, 1270, 721, 11, 558, 30, 51614], "temperature": 0.0, "avg_logprob": -0.21391632245934528, "compression_ratio": 1.5944444444444446, "no_speech_prob": 0.041690051555633545}, {"id": 15, "seek": 7900, "start": 79.0, "end": 88.0, "text": " At the end, it's the hardware that consumes the power and you can save power if you put things into deep sleep states", "tokens": [50364, 1711, 264, 917, 11, 309, 311, 264, 8837, 300, 48823, 264, 1347, 293, 291, 393, 3155, 1347, 498, 291, 829, 721, 666, 2452, 2817, 4368, 50814], "temperature": 0.0, "avg_logprob": -0.13827871694797422, "compression_ratio": 1.661904761904762, "no_speech_prob": 0.1254654973745346}, {"id": 16, "seek": 7900, "start": 88.0, "end": 91.0, "text": " or consumes the frequency somehow.", "tokens": [50814, 420, 48823, 264, 7893, 6063, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13827871694797422, "compression_ratio": 1.661904761904762, "no_speech_prob": 0.1254654973745346}, {"id": 17, "seek": 7900, "start": 91.0, "end": 95.0, "text": " And this is really important to save energy.", "tokens": [50964, 400, 341, 307, 534, 1021, 281, 3155, 2281, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13827871694797422, "compression_ratio": 1.661904761904762, "no_speech_prob": 0.1254654973745346}, {"id": 18, "seek": 7900, "start": 95.0, "end": 102.0, "text": " And what we did in the past was writing scripts to optimize your workload", "tokens": [51164, 400, 437, 321, 630, 294, 264, 1791, 390, 3579, 23294, 281, 19719, 428, 20139, 51514], "temperature": 0.0, "avg_logprob": -0.13827871694797422, "compression_ratio": 1.661904761904762, "no_speech_prob": 0.1254654973745346}, {"id": 19, "seek": 7900, "start": 102.0, "end": 107.0, "text": " and get things what are the causes that an application runs too often, right?", "tokens": [51514, 293, 483, 721, 437, 366, 264, 7700, 300, 364, 3861, 6676, 886, 2049, 11, 558, 30, 51764], "temperature": 0.0, "avg_logprob": -0.13827871694797422, "compression_ratio": 1.661904761904762, "no_speech_prob": 0.1254654973745346}, {"id": 20, "seek": 10700, "start": 107.0, "end": 109.0, "text": " It runs often, cannot go into deep sleep states.", "tokens": [50364, 467, 6676, 2049, 11, 2644, 352, 666, 2452, 2817, 4368, 13, 50464], "temperature": 0.0, "avg_logprob": -0.12917566299438477, "compression_ratio": 1.545, "no_speech_prob": 0.0116017647087574}, {"id": 21, "seek": 10700, "start": 109.0, "end": 112.0, "text": " This is important to do the power optimization.", "tokens": [50464, 639, 307, 1021, 281, 360, 264, 1347, 19618, 13, 50614], "temperature": 0.0, "avg_logprob": -0.12917566299438477, "compression_ratio": 1.545, "no_speech_prob": 0.0116017647087574}, {"id": 22, "seek": 10700, "start": 112.0, "end": 120.0, "text": " And what I provide in the next couple of slides here is an application that helps you to optimize your workload", "tokens": [50614, 400, 437, 286, 2893, 294, 264, 958, 1916, 295, 9788, 510, 307, 364, 3861, 300, 3665, 291, 281, 19719, 428, 20139, 51014], "temperature": 0.0, "avg_logprob": -0.12917566299438477, "compression_ratio": 1.545, "no_speech_prob": 0.0116017647087574}, {"id": 23, "seek": 10700, "start": 120.0, "end": 125.0, "text": " and makes this visible somehow.", "tokens": [51014, 293, 1669, 341, 8974, 6063, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12917566299438477, "compression_ratio": 1.545, "no_speech_prob": 0.0116017647087574}, {"id": 24, "seek": 10700, "start": 125.0, "end": 130.0, "text": " So what we are talking about is a perf script and extension to perf.", "tokens": [51264, 407, 437, 321, 366, 1417, 466, 307, 257, 13826, 5755, 293, 10320, 281, 13826, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12917566299438477, "compression_ratio": 1.545, "no_speech_prob": 0.0116017647087574}, {"id": 25, "seek": 13000, "start": 130.0, "end": 134.0, "text": " So it's, if it is mainline, it's not yet mainline.", "tokens": [50364, 407, 309, 311, 11, 498, 309, 307, 2135, 1889, 11, 309, 311, 406, 1939, 2135, 1889, 13, 50564], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 26, "seek": 13000, "start": 134.0, "end": 141.0, "text": " I will send this script to Analo in the mailing list and hopefully it gets merged quickly somehow.", "tokens": [50564, 286, 486, 2845, 341, 5755, 281, 1107, 10334, 294, 264, 41612, 1329, 293, 4696, 309, 2170, 36427, 2661, 6063, 13, 50914], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 27, "seek": 13000, "start": 141.0, "end": 145.0, "text": " But when it's merged then it's really usable, easy usable.", "tokens": [50914, 583, 562, 309, 311, 36427, 550, 309, 311, 534, 29975, 11, 1858, 29975, 13, 51114], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 28, "seek": 13000, "start": 145.0, "end": 149.0, "text": " It's just an up-get install and everything works out.", "tokens": [51114, 467, 311, 445, 364, 493, 12, 847, 3625, 293, 1203, 1985, 484, 13, 51314], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 29, "seek": 13000, "start": 149.0, "end": 152.0, "text": " And also for Yachter and Buildroot, it's really easy to use these things after.", "tokens": [51314, 400, 611, 337, 398, 3589, 260, 293, 11875, 44147, 11, 309, 311, 534, 1858, 281, 764, 613, 721, 934, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 30, "seek": 13000, "start": 152.0, "end": 157.0, "text": " It's also important that it can be used in embedded systems and everywhere.", "tokens": [51464, 467, 311, 611, 1021, 300, 309, 393, 312, 1143, 294, 16741, 3652, 293, 5315, 13, 51714], "temperature": 0.0, "avg_logprob": -0.20405526287787784, "compression_ratio": 1.672, "no_speech_prob": 0.17872996628284454}, {"id": 31, "seek": 15700, "start": 157.0, "end": 159.0, "text": " How does it work?", "tokens": [50364, 1012, 775, 309, 589, 30, 50464], "temperature": 0.0, "avg_logprob": -0.18287301063537598, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.05263041704893112}, {"id": 32, "seek": 15700, "start": 159.0, "end": 167.0, "text": " It's just a record call where you record your workload with the workload separator, like every time.", "tokens": [50464, 467, 311, 445, 257, 2136, 818, 689, 291, 2136, 428, 20139, 365, 264, 20139, 3128, 1639, 11, 411, 633, 565, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18287301063537598, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.05263041704893112}, {"id": 33, "seek": 15700, "start": 167.0, "end": 173.0, "text": " And here I record for 60 for one minute, workload on all the CPUs.", "tokens": [50864, 400, 510, 286, 2136, 337, 4060, 337, 472, 3456, 11, 20139, 322, 439, 264, 13199, 82, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18287301063537598, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.05263041704893112}, {"id": 34, "seek": 15700, "start": 173.0, "end": 176.0, "text": " And then you record everything one minute fine.", "tokens": [51164, 400, 550, 291, 2136, 1203, 472, 3456, 2489, 13, 51314], "temperature": 0.0, "avg_logprob": -0.18287301063537598, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.05263041704893112}, {"id": 35, "seek": 15700, "start": 176.0, "end": 182.0, "text": " And then you start with the report, the power analyzer, and it's have different modes.", "tokens": [51314, 400, 550, 291, 722, 365, 264, 2275, 11, 264, 1347, 6459, 4527, 11, 293, 309, 311, 362, 819, 14068, 13, 51614], "temperature": 0.0, "avg_logprob": -0.18287301063537598, "compression_ratio": 1.6494845360824741, "no_speech_prob": 0.05263041704893112}, {"id": 36, "seek": 18200, "start": 182.0, "end": 187.0, "text": " Because I have just 10 minutes, I show one mode here,", "tokens": [50364, 1436, 286, 362, 445, 1266, 2077, 11, 286, 855, 472, 4391, 510, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 37, "seek": 18200, "start": 187.0, "end": 192.0, "text": " but there are different modes for different optimization, analysis, and things.", "tokens": [50614, 457, 456, 366, 819, 14068, 337, 819, 19618, 11, 5215, 11, 293, 721, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 38, "seek": 18200, "start": 192.0, "end": 194.0, "text": " So what are the modes?", "tokens": [50864, 407, 437, 366, 264, 14068, 30, 50964], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 39, "seek": 18200, "start": 194.0, "end": 198.0, "text": " There are several modes that can be activated and used.", "tokens": [50964, 821, 366, 2940, 14068, 300, 393, 312, 18157, 293, 1143, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 40, "seek": 18200, "start": 198.0, "end": 204.0, "text": " And you just activate or use the mode you want to focus and dig into the details, right?", "tokens": [51164, 400, 291, 445, 13615, 420, 764, 264, 4391, 291, 528, 281, 1879, 293, 2528, 666, 264, 4365, 11, 558, 30, 51464], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 41, "seek": 18200, "start": 204.0, "end": 206.0, "text": " This is how things work.", "tokens": [51464, 639, 307, 577, 721, 589, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1270023981730143, "compression_ratio": 1.5902439024390245, "no_speech_prob": 0.02981995791196823}, {"id": 42, "seek": 20600, "start": 206.0, "end": 212.0, "text": " And what's also important, every mode has different trace points in the kernel.", "tokens": [50364, 400, 437, 311, 611, 1021, 11, 633, 4391, 575, 819, 13508, 2793, 294, 264, 28256, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 43, "seek": 20600, "start": 212.0, "end": 219.0, "text": " So usually you record only the trace points you require for the particular analyzer.", "tokens": [50664, 407, 2673, 291, 2136, 787, 264, 13508, 2793, 291, 3651, 337, 264, 1729, 6459, 4527, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 44, "seek": 20600, "start": 219.0, "end": 226.0, "text": " Because if you record everything, every trace point, you get a lot of huge data and things.", "tokens": [51014, 1436, 498, 291, 2136, 1203, 11, 633, 13508, 935, 11, 291, 483, 257, 688, 295, 2603, 1412, 293, 721, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 45, "seek": 20600, "start": 226.0, "end": 229.0, "text": " So normally you limit the data.", "tokens": [51364, 407, 5646, 291, 4948, 264, 1412, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 46, "seek": 20600, "start": 229.0, "end": 231.0, "text": " How does it work?", "tokens": [51514, 1012, 775, 309, 589, 30, 51614], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 47, "seek": 20600, "start": 231.0, "end": 233.0, "text": " So there's the per script.", "tokens": [51614, 407, 456, 311, 264, 680, 5755, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1744415844188017, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.008232492953538895}, {"id": 48, "seek": 23300, "start": 233.0, "end": 239.0, "text": " As always, you can write a recorded data, as we saw for one minute here.", "tokens": [50364, 1018, 1009, 11, 291, 393, 2464, 257, 8287, 1412, 11, 382, 321, 1866, 337, 472, 3456, 510, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 49, "seek": 23300, "start": 239.0, "end": 243.0, "text": " And it just records all the trace points that are required.", "tokens": [50664, 400, 309, 445, 7724, 439, 264, 13508, 2793, 300, 366, 4739, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 50, "seek": 23300, "start": 243.0, "end": 249.0, "text": " But on the other hand, you can also record the data that are required for your analysis.", "tokens": [50864, 583, 322, 264, 661, 1011, 11, 291, 393, 611, 2136, 264, 1412, 300, 366, 4739, 337, 428, 5215, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 51, "seek": 23300, "start": 249.0, "end": 252.0, "text": " This is documented, what the trace points are required.", "tokens": [51164, 639, 307, 23007, 11, 437, 264, 13508, 2793, 366, 4739, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 52, "seek": 23300, "start": 252.0, "end": 254.0, "text": " Then you have the data.", "tokens": [51314, 1396, 291, 362, 264, 1412, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 53, "seek": 23300, "start": 254.0, "end": 260.0, "text": " And then you start the script, the reports, and here outputs all the analyzers for this.", "tokens": [51414, 400, 550, 291, 722, 264, 5755, 11, 264, 7122, 11, 293, 510, 23930, 439, 264, 6459, 41698, 337, 341, 13, 51714], "temperature": 0.0, "avg_logprob": -0.14657532691955566, "compression_ratio": 1.8396226415094339, "no_speech_prob": 0.005269480403512716}, {"id": 54, "seek": 26000, "start": 260.0, "end": 262.0, "text": " You start it here with a timer.", "tokens": [50364, 509, 722, 309, 510, 365, 257, 19247, 13, 50464], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 55, "seek": 26000, "start": 262.0, "end": 264.0, "text": " So what are the timer events somehow.", "tokens": [50464, 407, 437, 366, 264, 19247, 3931, 6063, 13, 50564], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 56, "seek": 26000, "start": 264.0, "end": 269.0, "text": " And then because there's a lot of data coming out of this, you usually can use this data already", "tokens": [50564, 400, 550, 570, 456, 311, 257, 688, 295, 1412, 1348, 484, 295, 341, 11, 291, 2673, 393, 764, 341, 1412, 1217, 50814], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 57, "seek": 26000, "start": 269.0, "end": 275.0, "text": " and see, here's something that's not working well, too much timer interaction, for example.", "tokens": [50814, 293, 536, 11, 510, 311, 746, 300, 311, 406, 1364, 731, 11, 886, 709, 19247, 9285, 11, 337, 1365, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 58, "seek": 26000, "start": 275.0, "end": 284.0, "text": " But what is it also can do is some post-processing and to create data graphs somehow or filter things afterwards", "tokens": [51114, 583, 437, 307, 309, 611, 393, 360, 307, 512, 2183, 12, 41075, 278, 293, 281, 1884, 1412, 24877, 6063, 420, 6608, 721, 10543, 51564], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 59, "seek": 26000, "start": 284.0, "end": 287.0, "text": " because it's a lot of data.", "tokens": [51564, 570, 309, 311, 257, 688, 295, 1412, 13, 51714], "temperature": 0.0, "avg_logprob": -0.21090524336870978, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.006630983203649521}, {"id": 60, "seek": 28700, "start": 287.0, "end": 293.0, "text": " And here, just a showcase, this is one image that's created.", "tokens": [50364, 400, 510, 11, 445, 257, 20388, 11, 341, 307, 472, 3256, 300, 311, 2942, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 61, "seek": 28700, "start": 293.0, "end": 296.0, "text": " You see the time and you see a workload.", "tokens": [50664, 509, 536, 264, 565, 293, 291, 536, 257, 20139, 13, 50814], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 62, "seek": 28700, "start": 296.0, "end": 298.0, "text": " It's a logarithmic scale here.", "tokens": [50814, 467, 311, 257, 41473, 355, 13195, 4373, 510, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 63, "seek": 28700, "start": 298.0, "end": 300.0, "text": " How much time, timers are working.", "tokens": [50914, 1012, 709, 565, 11, 524, 433, 366, 1364, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 64, "seek": 28700, "start": 300.0, "end": 309.0, "text": " Timers are one course that triggers from a deep C state to an active state to a zero state somehow.", "tokens": [51014, 7172, 433, 366, 472, 1164, 300, 22827, 490, 257, 2452, 383, 1785, 281, 364, 4967, 1785, 281, 257, 4018, 1785, 6063, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 65, "seek": 28700, "start": 309.0, "end": 311.0, "text": " Timers are not that good.", "tokens": [51464, 7172, 433, 366, 406, 300, 665, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 66, "seek": 28700, "start": 311.0, "end": 316.0, "text": " Often you see, if you begin analyzing things on your desktop CZ, you see here,", "tokens": [51564, 20043, 291, 536, 11, 498, 291, 1841, 23663, 721, 322, 428, 14502, 383, 57, 11, 291, 536, 510, 11, 51814], "temperature": 0.0, "avg_logprob": -0.16584784962306512, "compression_ratio": 1.6387665198237886, "no_speech_prob": 0.00483210664242506}, {"id": 67, "seek": 31600, "start": 316.0, "end": 319.0, "text": " I think this is the kitty, my terminal I use here.", "tokens": [50364, 286, 519, 341, 307, 264, 33026, 11, 452, 14709, 286, 764, 510, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 68, "seek": 31600, "start": 319.0, "end": 322.0, "text": " It has just wake-ups all the time.", "tokens": [50514, 467, 575, 445, 6634, 12, 7528, 439, 264, 565, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 69, "seek": 31600, "start": 322.0, "end": 324.0, "text": " Why are there wake-ups here?", "tokens": [50664, 1545, 366, 456, 6634, 12, 7528, 510, 30, 50764], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 70, "seek": 31600, "start": 324.0, "end": 328.0, "text": " And then you see often some buggy applications, clip-out things.", "tokens": [50764, 400, 550, 291, 536, 2049, 512, 7426, 1480, 5821, 11, 7353, 12, 346, 721, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 71, "seek": 31600, "start": 328.0, "end": 334.0, "text": " They are constantly triggering your system and this prevents to going into a deep C state.", "tokens": [50964, 814, 366, 6460, 40406, 428, 1185, 293, 341, 22367, 281, 516, 666, 257, 2452, 383, 1785, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 72, "seek": 31600, "start": 334.0, "end": 337.0, "text": " This is the causes that prevents this.", "tokens": [51264, 639, 307, 264, 7700, 300, 22367, 341, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 73, "seek": 31600, "start": 337.0, "end": 339.0, "text": " So it's really important.", "tokens": [51414, 407, 309, 311, 534, 1021, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 74, "seek": 31600, "start": 339.0, "end": 345.0, "text": " And here you see a workload I started and you see all the timers that are correlated with starting a workload.", "tokens": [51514, 400, 510, 291, 536, 257, 20139, 286, 1409, 293, 291, 536, 439, 264, 524, 433, 300, 366, 38574, 365, 2891, 257, 20139, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1872830471750033, "compression_ratio": 1.7286821705426356, "no_speech_prob": 0.01214592158794403}, {"id": 75, "seek": 34500, "start": 345.0, "end": 350.0, "text": " Here you see a lot of kernel timers and then you can start optimizing things.", "tokens": [50364, 1692, 291, 536, 257, 688, 295, 28256, 524, 433, 293, 550, 291, 393, 722, 40425, 721, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1818851347892515, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.012197611853480339}, {"id": 76, "seek": 34500, "start": 350.0, "end": 355.0, "text": " This is just a focus for the timer events, but there are a lot of other events as well.", "tokens": [50614, 639, 307, 445, 257, 1879, 337, 264, 19247, 3931, 11, 457, 456, 366, 257, 688, 295, 661, 3931, 382, 731, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1818851347892515, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.012197611853480339}, {"id": 77, "seek": 34500, "start": 355.0, "end": 361.0, "text": " This is other sub-sequence analyzes also just for the timer events.", "tokens": [50864, 639, 307, 661, 1422, 12, 11834, 655, 6459, 12214, 611, 445, 337, 264, 19247, 3931, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1818851347892515, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.012197611853480339}, {"id": 78, "seek": 34500, "start": 361.0, "end": 367.0, "text": " You see here for a tick-less system, normally if there is no load,", "tokens": [51164, 509, 536, 510, 337, 257, 5204, 12, 1832, 1185, 11, 5646, 498, 456, 307, 572, 3677, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1818851347892515, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.012197611853480339}, {"id": 79, "seek": 34500, "start": 367.0, "end": 373.0, "text": " kernel can really go in a deep sleep state.", "tokens": [51464, 28256, 393, 534, 352, 294, 257, 2452, 2817, 1785, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1818851347892515, "compression_ratio": 1.702970297029703, "no_speech_prob": 0.012197611853480339}, {"id": 80, "seek": 37300, "start": 373.0, "end": 377.0, "text": " And then it shuts down the timer tick altogether.", "tokens": [50364, 400, 550, 309, 48590, 760, 264, 19247, 5204, 19051, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 81, "seek": 37300, "start": 377.0, "end": 380.0, "text": " But does it really stop the timer tick?", "tokens": [50564, 583, 775, 309, 534, 1590, 264, 19247, 5204, 30, 50714], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 82, "seek": 37300, "start": 380.0, "end": 385.0, "text": " You will see it here in these images and you can analyze things and optimize things.", "tokens": [50714, 509, 486, 536, 309, 510, 294, 613, 5267, 293, 291, 393, 12477, 721, 293, 19719, 721, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 83, "seek": 37300, "start": 385.0, "end": 388.0, "text": " What are the kernel timers that trigger your systems?", "tokens": [50964, 708, 366, 264, 28256, 524, 433, 300, 7875, 428, 3652, 30, 51114], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 84, "seek": 37300, "start": 388.0, "end": 393.0, "text": " If you look at the graphs a little bit, the resolution is not that good,", "tokens": [51114, 759, 291, 574, 412, 264, 24877, 257, 707, 857, 11, 264, 8669, 307, 406, 300, 665, 11, 51364], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 85, "seek": 37300, "start": 393.0, "end": 397.0, "text": " but you see that there are timer ticks all the time,", "tokens": [51364, 457, 291, 536, 300, 456, 366, 19247, 42475, 439, 264, 565, 11, 51564], "temperature": 0.0, "avg_logprob": -0.15337160958184137, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.0016592417377978563}, {"id": 86, "seek": 39700, "start": 397.0, "end": 402.0, "text": " and the network interrupts, timers are working here and you can optimize this.", "tokens": [50364, 293, 264, 3209, 12729, 82, 11, 524, 433, 366, 1364, 510, 293, 291, 393, 19719, 341, 13, 50614], "temperature": 0.0, "avg_logprob": -0.20143604278564453, "compression_ratio": 1.768181818181818, "no_speech_prob": 0.04890481010079384}, {"id": 87, "seek": 39700, "start": 402.0, "end": 410.0, "text": " If you see this and you know what's happened, what we see here in this graph is the timers that are working for each particular task.", "tokens": [50614, 759, 291, 536, 341, 293, 291, 458, 437, 311, 2011, 11, 437, 321, 536, 510, 294, 341, 4295, 307, 264, 524, 433, 300, 366, 1364, 337, 1184, 1729, 5633, 13, 51014], "temperature": 0.0, "avg_logprob": -0.20143604278564453, "compression_ratio": 1.768181818181818, "no_speech_prob": 0.04890481010079384}, {"id": 88, "seek": 39700, "start": 410.0, "end": 412.0, "text": " So you can optimize for your task as well.", "tokens": [51014, 407, 291, 393, 19719, 337, 428, 5633, 382, 731, 13, 51114], "temperature": 0.0, "avg_logprob": -0.20143604278564453, "compression_ratio": 1.768181818181818, "no_speech_prob": 0.04890481010079384}, {"id": 89, "seek": 39700, "start": 412.0, "end": 414.0, "text": " How many timers are there?", "tokens": [51114, 1012, 867, 524, 433, 366, 456, 30, 51214], "temperature": 0.0, "avg_logprob": -0.20143604278564453, "compression_ratio": 1.768181818181818, "no_speech_prob": 0.04890481010079384}, {"id": 90, "seek": 39700, "start": 414.0, "end": 421.0, "text": " I often see in the production environment that the timer has done all the time somehow and not correlated.", "tokens": [51214, 286, 2049, 536, 294, 264, 4265, 2823, 300, 264, 19247, 575, 1096, 439, 264, 565, 6063, 293, 406, 38574, 13, 51564], "temperature": 0.0, "avg_logprob": -0.20143604278564453, "compression_ratio": 1.768181818181818, "no_speech_prob": 0.04890481010079384}, {"id": 91, "seek": 42100, "start": 421.0, "end": 427.0, "text": " What you can also do there are system calls for the granularity that the timer can optimize things.", "tokens": [50364, 708, 291, 393, 611, 360, 456, 366, 1185, 5498, 337, 264, 39962, 507, 300, 264, 19247, 393, 19719, 721, 13, 50664], "temperature": 0.0, "avg_logprob": -0.15587457929338727, "compression_ratio": 1.815126050420168, "no_speech_prob": 0.04398340731859207}, {"id": 92, "seek": 42100, "start": 427.0, "end": 433.0, "text": " For example, the kernel which the introduction of the HR timers, the resolution timers, you can align timers", "tokens": [50664, 1171, 1365, 11, 264, 28256, 597, 264, 9339, 295, 264, 19460, 524, 433, 11, 264, 8669, 524, 433, 11, 291, 393, 7975, 524, 433, 50964], "temperature": 0.0, "avg_logprob": -0.15587457929338727, "compression_ratio": 1.815126050420168, "no_speech_prob": 0.04398340731859207}, {"id": 93, "seek": 42100, "start": 433.0, "end": 439.0, "text": " so that timers are not really spaced there and they're exactly triggered at a particular moment in time,", "tokens": [50964, 370, 300, 524, 433, 366, 406, 534, 43766, 456, 293, 436, 434, 2293, 21710, 412, 257, 1729, 1623, 294, 565, 11, 51264], "temperature": 0.0, "avg_logprob": -0.15587457929338727, "compression_ratio": 1.815126050420168, "no_speech_prob": 0.04398340731859207}, {"id": 94, "seek": 42100, "start": 439.0, "end": 442.0, "text": " which is a simple system knob.", "tokens": [51264, 597, 307, 257, 2199, 1185, 26759, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15587457929338727, "compression_ratio": 1.815126050420168, "no_speech_prob": 0.04398340731859207}, {"id": 95, "seek": 42100, "start": 442.0, "end": 446.0, "text": " You can also say, oh no, it's not so important that the timer is triggered at this time", "tokens": [51414, 509, 393, 611, 584, 11, 1954, 572, 11, 309, 311, 406, 370, 1021, 300, 264, 19247, 307, 21710, 412, 341, 565, 51614], "temperature": 0.0, "avg_logprob": -0.15587457929338727, "compression_ratio": 1.815126050420168, "no_speech_prob": 0.04398340731859207}, {"id": 96, "seek": 44600, "start": 446.0, "end": 454.0, "text": " so that the kernel aligns timers at a particular time and allows a deeper sleep state again, something.", "tokens": [50364, 370, 300, 264, 28256, 7975, 82, 524, 433, 412, 257, 1729, 565, 293, 4045, 257, 7731, 2817, 1785, 797, 11, 746, 13, 50764], "temperature": 0.0, "avg_logprob": -0.20320239132397797, "compression_ratio": 1.489010989010989, "no_speech_prob": 0.05953355133533478}, {"id": 97, "seek": 44600, "start": 454.0, "end": 461.0, "text": " This knowledge can be combined with the knowledge of this, what you see here, for example.", "tokens": [50764, 639, 3601, 393, 312, 9354, 365, 264, 3601, 295, 341, 11, 437, 291, 536, 510, 11, 337, 1365, 13, 51114], "temperature": 0.0, "avg_logprob": -0.20320239132397797, "compression_ratio": 1.489010989010989, "no_speech_prob": 0.05953355133533478}, {"id": 98, "seek": 44600, "start": 461.0, "end": 463.0, "text": " Where are the timers?", "tokens": [51114, 2305, 366, 264, 524, 433, 30, 51214], "temperature": 0.0, "avg_logprob": -0.20320239132397797, "compression_ratio": 1.489010989010989, "no_speech_prob": 0.05953355133533478}, {"id": 99, "seek": 44600, "start": 463.0, "end": 466.0, "text": " Right, CPU 0 is somehow special.", "tokens": [51214, 1779, 11, 13199, 1958, 307, 6063, 2121, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20320239132397797, "compression_ratio": 1.489010989010989, "no_speech_prob": 0.05953355133533478}, {"id": 100, "seek": 44600, "start": 466.0, "end": 467.0, "text": " There are the timers.", "tokens": [51364, 821, 366, 264, 524, 433, 13, 51414], "temperature": 0.0, "avg_logprob": -0.20320239132397797, "compression_ratio": 1.489010989010989, "no_speech_prob": 0.05953355133533478}, {"id": 101, "seek": 46700, "start": 467.0, "end": 477.0, "text": " Can you move, for example, tasks to CPU 1 so that this other CPU cores can go in a deeper sleep state, for example, right?", "tokens": [50364, 1664, 291, 1286, 11, 337, 1365, 11, 9608, 281, 13199, 502, 370, 300, 341, 661, 13199, 24826, 393, 352, 294, 257, 7731, 2817, 1785, 11, 337, 1365, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.14747811635335287, "compression_ratio": 1.5235602094240839, "no_speech_prob": 0.033263515681028366}, {"id": 102, "seek": 46700, "start": 477.0, "end": 482.0, "text": " All this is important to do an optimization there.", "tokens": [50864, 1057, 341, 307, 1021, 281, 360, 364, 19618, 456, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14747811635335287, "compression_ratio": 1.5235602094240839, "no_speech_prob": 0.033263515681028366}, {"id": 103, "seek": 46700, "start": 482.0, "end": 484.0, "text": " There are some general options.", "tokens": [51114, 821, 366, 512, 2674, 3956, 13, 51214], "temperature": 0.0, "avg_logprob": -0.14747811635335287, "compression_ratio": 1.5235602094240839, "no_speech_prob": 0.033263515681028366}, {"id": 104, "seek": 46700, "start": 484.0, "end": 487.0, "text": " Some others are not always required.", "tokens": [51214, 2188, 2357, 366, 406, 1009, 4739, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14747811635335287, "compression_ratio": 1.5235602094240839, "no_speech_prob": 0.033263515681028366}, {"id": 105, "seek": 46700, "start": 487.0, "end": 490.0, "text": " This can be turned on with this particular flag.", "tokens": [51364, 639, 393, 312, 3574, 322, 365, 341, 1729, 7166, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14747811635335287, "compression_ratio": 1.5235602094240839, "no_speech_prob": 0.033263515681028366}, {"id": 106, "seek": 49000, "start": 490.0, "end": 496.0, "text": " There's CPU, often you want analysis on a particular CPU so you can limit the data.", "tokens": [50364, 821, 311, 13199, 11, 2049, 291, 528, 5215, 322, 257, 1729, 13199, 370, 291, 393, 4948, 264, 1412, 13, 50664], "temperature": 0.0, "avg_logprob": -0.23444677930359448, "compression_ratio": 1.7641921397379912, "no_speech_prob": 0.07864269614219666}, {"id": 107, "seek": 49000, "start": 496.0, "end": 505.0, "text": " And there's a file out option so if you want to do a post-processing, as we saw in the images, somehow the data is not put it on the standard out,", "tokens": [50664, 400, 456, 311, 257, 3991, 484, 3614, 370, 498, 291, 528, 281, 360, 257, 2183, 12, 41075, 278, 11, 382, 321, 1866, 294, 264, 5267, 11, 6063, 264, 1412, 307, 406, 829, 309, 322, 264, 3832, 484, 11, 51114], "temperature": 0.0, "avg_logprob": -0.23444677930359448, "compression_ratio": 1.7641921397379912, "no_speech_prob": 0.07864269614219666}, {"id": 108, "seek": 49000, "start": 505.0, "end": 508.0, "text": " so it's put it on the file and you can use this there.", "tokens": [51114, 370, 309, 311, 829, 309, 322, 264, 3991, 293, 291, 393, 764, 341, 456, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23444677930359448, "compression_ratio": 1.7641921397379912, "no_speech_prob": 0.07864269614219666}, {"id": 109, "seek": 49000, "start": 508.0, "end": 517.0, "text": " And the data is also written in a day and sanitized that you can trust through use partners here to read the CVS data.", "tokens": [51264, 400, 264, 1412, 307, 611, 3720, 294, 257, 786, 293, 24533, 1602, 300, 291, 393, 3361, 807, 764, 4462, 510, 281, 1401, 264, 22995, 50, 1412, 13, 51714], "temperature": 0.0, "avg_logprob": -0.23444677930359448, "compression_ratio": 1.7641921397379912, "no_speech_prob": 0.07864269614219666}, {"id": 110, "seek": 51700, "start": 518.0, "end": 521.0, "text": " And for the post-processing, it's really easy.", "tokens": [50414, 400, 337, 264, 2183, 12, 41075, 278, 11, 309, 311, 534, 1858, 13, 50564], "temperature": 0.0, "avg_logprob": -0.16073108673095704, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.007388260681182146}, {"id": 111, "seek": 51700, "start": 521.0, "end": 525.0, "text": " But there are multiple modules there provided.", "tokens": [50564, 583, 456, 366, 3866, 16679, 456, 5649, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16073108673095704, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.007388260681182146}, {"id": 112, "seek": 51700, "start": 525.0, "end": 531.0, "text": " This is just a sneak peek on the timer module, but there are a lot of other modules as well.", "tokens": [50764, 639, 307, 445, 257, 13164, 19604, 322, 264, 19247, 10088, 11, 457, 456, 366, 257, 688, 295, 661, 16679, 382, 731, 13, 51064], "temperature": 0.0, "avg_logprob": -0.16073108673095704, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.007388260681182146}, {"id": 113, "seek": 51700, "start": 531.0, "end": 534.0, "text": " You can use them later on.", "tokens": [51064, 509, 393, 764, 552, 1780, 322, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16073108673095704, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.007388260681182146}, {"id": 114, "seek": 51700, "start": 534.0, "end": 540.0, "text": " But to the time limit, I just highlighted this timer module.", "tokens": [51214, 583, 281, 264, 565, 4948, 11, 286, 445, 17173, 341, 19247, 10088, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16073108673095704, "compression_ratio": 1.611764705882353, "no_speech_prob": 0.007388260681182146}, {"id": 115, "seek": 54000, "start": 540.0, "end": 546.0, "text": " But one last sneak peek here, for example, is the governor.", "tokens": [50364, 583, 472, 1036, 13164, 19604, 510, 11, 337, 1365, 11, 307, 264, 12965, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 116, "seek": 54000, "start": 546.0, "end": 556.0, "text": " The governor is the component within the kernel to do the processing and commanding of disease deep-stakes.", "tokens": [50664, 440, 12965, 307, 264, 6542, 1951, 264, 28256, 281, 360, 264, 9007, 293, 5622, 278, 295, 4752, 2452, 12, 372, 3419, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 117, "seek": 54000, "start": 556.0, "end": 558.0, "text": " This is the governor.", "tokens": [51164, 639, 307, 264, 12965, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 118, "seek": 54000, "start": 558.0, "end": 560.0, "text": " You can select a different governor.", "tokens": [51264, 509, 393, 3048, 257, 819, 12965, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 119, "seek": 54000, "start": 560.0, "end": 562.0, "text": " It's normally the menu governor.", "tokens": [51364, 467, 311, 5646, 264, 6510, 12965, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 120, "seek": 54000, "start": 562.0, "end": 564.0, "text": " There are other governors as well.", "tokens": [51464, 821, 366, 661, 36571, 382, 731, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1594210423921284, "compression_ratio": 1.6610169491525424, "no_speech_prob": 0.007974602282047272}, {"id": 121, "seek": 56400, "start": 564.0, "end": 571.0, "text": " And here what you see, how often is which C state is commanded here?", "tokens": [50364, 400, 510, 437, 291, 536, 11, 577, 2049, 307, 597, 383, 1785, 307, 34359, 510, 30, 50714], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 122, "seek": 56400, "start": 571.0, "end": 574.0, "text": " And what is also analyzed is, was this good or not?", "tokens": [50714, 400, 437, 307, 611, 28181, 307, 11, 390, 341, 665, 420, 406, 30, 50864], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 123, "seek": 56400, "start": 574.0, "end": 578.0, "text": " Because the kernel doing a guess working, right?", "tokens": [50864, 1436, 264, 28256, 884, 257, 2041, 1364, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 124, "seek": 56400, "start": 578.0, "end": 584.0, "text": " So here the things are the next time in 10 milliseconds, there's a workload because the timer will trigger.", "tokens": [51064, 407, 510, 264, 721, 366, 264, 958, 565, 294, 1266, 34184, 11, 456, 311, 257, 20139, 570, 264, 19247, 486, 7875, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 125, "seek": 56400, "start": 584.0, "end": 589.0, "text": " So it puts a processor in a particular C state.", "tokens": [51364, 407, 309, 8137, 257, 15321, 294, 257, 1729, 383, 1785, 13, 51614], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 126, "seek": 56400, "start": 589.0, "end": 593.0, "text": " But was this the right decision or sleep is too narrow, too shallow?", "tokens": [51614, 583, 390, 341, 264, 558, 3537, 420, 2817, 307, 886, 9432, 11, 886, 20488, 30, 51814], "temperature": 0.0, "avg_logprob": -0.2507888114098275, "compression_ratio": 1.6147540983606556, "no_speech_prob": 0.04940613731741905}, {"id": 127, "seek": 59300, "start": 593.0, "end": 595.0, "text": " And so this is also important somehow.", "tokens": [50364, 400, 370, 341, 307, 611, 1021, 6063, 13, 50464], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 128, "seek": 59300, "start": 595.0, "end": 599.0, "text": " And here you can debug the governor.", "tokens": [50464, 400, 510, 291, 393, 24083, 264, 12965, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 129, "seek": 59300, "start": 599.0, "end": 603.0, "text": " A student of mine also discovered a bug for the AMD stuff.", "tokens": [50664, 316, 3107, 295, 3892, 611, 6941, 257, 7426, 337, 264, 34808, 1507, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 130, "seek": 59300, "start": 603.0, "end": 606.0, "text": " It's for one particular C1 state.", "tokens": [50864, 467, 311, 337, 472, 1729, 383, 16, 1785, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 131, "seek": 59300, "start": 606.0, "end": 610.0, "text": " It's switched all the time to the wrong state.", "tokens": [51014, 467, 311, 16858, 439, 264, 565, 281, 264, 2085, 1785, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 132, "seek": 59300, "start": 610.0, "end": 615.0, "text": " But I think this will be released in the next couple of weeks somehow.", "tokens": [51214, 583, 286, 519, 341, 486, 312, 4736, 294, 264, 958, 1916, 295, 3259, 6063, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 133, "seek": 59300, "start": 615.0, "end": 617.0, "text": " So it's really also important for you.", "tokens": [51464, 407, 309, 311, 534, 611, 1021, 337, 291, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 134, "seek": 59300, "start": 617.0, "end": 622.0, "text": " If you see, does the governor does the right job here?", "tokens": [51564, 759, 291, 536, 11, 775, 264, 12965, 775, 264, 558, 1691, 510, 30, 51814], "temperature": 0.0, "avg_logprob": -0.12145396379324105, "compression_ratio": 1.6379310344827587, "no_speech_prob": 0.02054051123559475}, {"id": 135, "seek": 62200, "start": 622.0, "end": 629.0, "text": " This is visible with another analysis, but there are multiple other post processing steps.", "tokens": [50364, 639, 307, 8974, 365, 1071, 5215, 11, 457, 456, 366, 3866, 661, 2183, 9007, 4439, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12690320125845975, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.02324099838733673}, {"id": 136, "seek": 62200, "start": 629.0, "end": 632.0, "text": " And yeah, that's all.", "tokens": [50714, 400, 1338, 11, 300, 311, 439, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12690320125845975, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.02324099838733673}, {"id": 137, "seek": 62200, "start": 632.0, "end": 638.0, "text": " I hope this will be integrated in the mainline next couple of weeks.", "tokens": [50864, 286, 1454, 341, 486, 312, 10919, 294, 264, 2135, 1889, 958, 1916, 295, 3259, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12690320125845975, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.02324099838733673}, {"id": 138, "seek": 62200, "start": 638.0, "end": 645.0, "text": " But if you want, you can use this kernel tree and this particular branch to use this.", "tokens": [51164, 583, 498, 291, 528, 11, 291, 393, 764, 341, 28256, 4230, 293, 341, 1729, 9819, 281, 764, 341, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12690320125845975, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.02324099838733673}, {"id": 139, "seek": 62200, "start": 645.0, "end": 649.0, "text": " It's just a perf script, really easy also to use out of the tree.", "tokens": [51514, 467, 311, 445, 257, 13826, 5755, 11, 534, 1858, 611, 281, 764, 484, 295, 264, 4230, 13, 51714], "temperature": 0.0, "avg_logprob": -0.12690320125845975, "compression_ratio": 1.5345622119815667, "no_speech_prob": 0.02324099838733673}, {"id": 140, "seek": 64900, "start": 649.0, "end": 653.0, "text": " And this post processing scripts cannot be shipped with the kernel.", "tokens": [50364, 400, 341, 2183, 9007, 23294, 2644, 312, 25312, 365, 264, 28256, 13, 50564], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 141, "seek": 64900, "start": 653.0, "end": 655.0, "text": " That's not how the kernel somehow works.", "tokens": [50564, 663, 311, 406, 577, 264, 28256, 6063, 1985, 13, 50664], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 142, "seek": 64900, "start": 655.0, "end": 660.0, "text": " This Python scripts and there will be always available here based on this.", "tokens": [50664, 639, 15329, 23294, 293, 456, 486, 312, 1009, 2435, 510, 2361, 322, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 143, "seek": 64900, "start": 660.0, "end": 663.0, "text": " And at the end, good documented, hopefully somehow.", "tokens": [50914, 400, 412, 264, 917, 11, 665, 23007, 11, 4696, 6063, 13, 51064], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 144, "seek": 64900, "start": 663.0, "end": 667.0, "text": " So yeah, that's all questions.", "tokens": [51064, 407, 1338, 11, 300, 311, 439, 1651, 13, 51264], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 145, "seek": 64900, "start": 667.0, "end": 668.0, "text": " Yeah, perfect.", "tokens": [51264, 865, 11, 2176, 13, 51314], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 146, "seek": 64900, "start": 668.0, "end": 674.0, "text": " Questions.", "tokens": [51314, 27738, 13, 51614], "temperature": 0.0, "avg_logprob": -0.22911006525943153, "compression_ratio": 1.5368421052631578, "no_speech_prob": 0.014954746700823307}, {"id": 147, "seek": 67400, "start": 674.0, "end": 681.0, "text": " I'm always getting a question.", "tokens": [50364, 286, 478, 1009, 1242, 257, 1168, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 148, "seek": 67400, "start": 681.0, "end": 684.0, "text": " Process of coverage, just x86.", "tokens": [50714, 31093, 295, 9645, 11, 445, 2031, 22193, 13, 50864], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 149, "seek": 67400, "start": 684.0, "end": 686.0, "text": " What's the coverage of you got?", "tokens": [50864, 708, 311, 264, 9645, 295, 291, 658, 30, 50964], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 150, "seek": 67400, "start": 686.0, "end": 689.0, "text": " I mean, now look, I've got an M1 Apple thing.", "tokens": [50964, 286, 914, 11, 586, 574, 11, 286, 600, 658, 364, 376, 16, 6373, 551, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 151, "seek": 67400, "start": 689.0, "end": 693.0, "text": " Would I be able to run it off there if I run Linux on that hardware?", "tokens": [51114, 6068, 286, 312, 1075, 281, 1190, 309, 766, 456, 498, 286, 1190, 18734, 322, 300, 8837, 30, 51314], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 152, "seek": 67400, "start": 693.0, "end": 700.0, "text": " Yeah, this script will work on ARM x86 for Intel and AMD.", "tokens": [51314, 865, 11, 341, 5755, 486, 589, 322, 45209, 2031, 22193, 337, 19762, 293, 34808, 13, 51664], "temperature": 0.0, "avg_logprob": -0.21502808162144252, "compression_ratio": 1.3434343434343434, "no_speech_prob": 0.014449226669967175}, {"id": 153, "seek": 70000, "start": 700.0, "end": 708.0, "text": " There are differences in the P state tracking because P state tracking is the introduction of Skylake and HWP with hardware tracing.", "tokens": [50364, 821, 366, 7300, 294, 264, 430, 1785, 11603, 570, 430, 1785, 11603, 307, 264, 9339, 295, 9879, 75, 619, 293, 389, 54, 47, 365, 8837, 25262, 13, 50764], "temperature": 0.0, "avg_logprob": -0.31475348000998027, "compression_ratio": 1.5707964601769913, "no_speech_prob": 0.04854416474699974}, {"id": 154, "seek": 70000, "start": 708.0, "end": 712.0, "text": " So it's will be not visible, but it will be visible on ARM CPUs.", "tokens": [50764, 407, 309, 311, 486, 312, 406, 8974, 11, 457, 309, 486, 312, 8974, 322, 45209, 13199, 82, 13, 50964], "temperature": 0.0, "avg_logprob": -0.31475348000998027, "compression_ratio": 1.5707964601769913, "no_speech_prob": 0.04854416474699974}, {"id": 155, "seek": 70000, "start": 712.0, "end": 719.0, "text": " For example, some as a sample work, some will not work, but it's just Linux and all the major.", "tokens": [50964, 1171, 1365, 11, 512, 382, 257, 6889, 589, 11, 512, 486, 406, 589, 11, 457, 309, 311, 445, 18734, 293, 439, 264, 2563, 13, 51314], "temperature": 0.0, "avg_logprob": -0.31475348000998027, "compression_ratio": 1.5707964601769913, "no_speech_prob": 0.04854416474699974}, {"id": 156, "seek": 70000, "start": 719.0, "end": 724.0, "text": " And some are more software, the analysts of scheduling events.", "tokens": [51314, 400, 512, 366, 544, 4722, 11, 264, 31388, 295, 29055, 3931, 13, 51564], "temperature": 0.0, "avg_logprob": -0.31475348000998027, "compression_ratio": 1.5707964601769913, "no_speech_prob": 0.04854416474699974}, {"id": 157, "seek": 72400, "start": 724.0, "end": 729.0, "text": " Somehow it will always run, but more hardware like analysis will not work somehow.", "tokens": [50364, 28357, 309, 486, 1009, 1190, 11, 457, 544, 8837, 411, 5215, 486, 406, 589, 6063, 13, 50614], "temperature": 0.0, "avg_logprob": -0.4039900504936606, "compression_ratio": 1.371069182389937, "no_speech_prob": 0.039106421172618866}, {"id": 158, "seek": 72400, "start": 729.0, "end": 732.0, "text": " But yeah.", "tokens": [50614, 583, 1338, 13, 50764], "temperature": 0.0, "avg_logprob": -0.4039900504936606, "compression_ratio": 1.371069182389937, "no_speech_prob": 0.039106421172618866}, {"id": 159, "seek": 72400, "start": 732.0, "end": 734.0, "text": " Just a follow up for previous question.", "tokens": [50764, 1449, 257, 1524, 493, 337, 3894, 1168, 13, 50864], "temperature": 0.0, "avg_logprob": -0.4039900504936606, "compression_ratio": 1.371069182389937, "no_speech_prob": 0.039106421172618866}, {"id": 160, "seek": 72400, "start": 734.0, "end": 740.0, "text": " Will it work for like, Graviton, all this kind of cloud proprietary processors?", "tokens": [50864, 3099, 309, 589, 337, 411, 11, 8985, 10398, 266, 11, 439, 341, 733, 295, 4588, 38992, 27751, 30, 51164], "temperature": 0.0, "avg_logprob": -0.4039900504936606, "compression_ratio": 1.371069182389937, "no_speech_prob": 0.039106421172618866}, {"id": 161, "seek": 72400, "start": 740.0, "end": 741.0, "text": " Yeah.", "tokens": [51164, 865, 13, 51214], "temperature": 0.0, "avg_logprob": -0.4039900504936606, "compression_ratio": 1.371069182389937, "no_speech_prob": 0.039106421172618866}, {"id": 162, "seek": 74100, "start": 741.0, "end": 744.0, "text": " It would generally run there.", "tokens": [50364, 467, 576, 5101, 1190, 456, 13, 50514], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 163, "seek": 74100, "start": 744.0, "end": 749.0, "text": " If it at least Linux ARM and the processor and it will just be the same.", "tokens": [50514, 759, 309, 412, 1935, 18734, 45209, 293, 264, 15321, 293, 309, 486, 445, 312, 264, 912, 13, 50764], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 164, "seek": 74100, "start": 749.0, "end": 751.0, "text": " So no difference there.", "tokens": [50764, 407, 572, 2649, 456, 13, 50864], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 165, "seek": 74100, "start": 751.0, "end": 753.0, "text": " Yeah.", "tokens": [50864, 865, 13, 50964], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 166, "seek": 74100, "start": 753.0, "end": 759.0, "text": " So I think it's going to be a good idea to run it on the same hardware.", "tokens": [50964, 407, 286, 519, 309, 311, 516, 281, 312, 257, 665, 1558, 281, 1190, 309, 322, 264, 912, 8837, 13, 51264], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 167, "seek": 74100, "start": 759.0, "end": 760.0, "text": " Yeah.", "tokens": [51264, 865, 13, 51314], "temperature": 0.0, "avg_logprob": -0.7482494060809796, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015974832698702812}, {"id": 168, "seek": 76000, "start": 760.0, "end": 761.0, "text": " And there.", "tokens": [50364, 400, 456, 13, 50414], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 169, "seek": 76000, "start": 761.0, "end": 766.0, "text": " If it at least Linux ARM and the processor and it will just be the same.", "tokens": [50414, 759, 309, 412, 1935, 18734, 45209, 293, 264, 15321, 293, 309, 486, 445, 312, 264, 912, 13, 50664], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 170, "seek": 76000, "start": 766.0, "end": 771.0, "text": " So no difference there.", "tokens": [50664, 407, 572, 2649, 456, 13, 50914], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 171, "seek": 76000, "start": 771.0, "end": 773.0, "text": " Another question.", "tokens": [50914, 3996, 1168, 13, 51014], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 172, "seek": 76000, "start": 773.0, "end": 780.0, "text": " If not later on we can install a script at your PC and test it.", "tokens": [51014, 759, 406, 1780, 322, 321, 393, 3625, 257, 5755, 412, 428, 6465, 293, 1500, 309, 13, 51364], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 173, "seek": 76000, "start": 780.0, "end": 784.0, "text": " Hi Aaron.", "tokens": [51364, 2421, 14018, 13, 51564], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 174, "seek": 76000, "start": 784.0, "end": 786.0, "text": " That's just a follow up on the previous question.", "tokens": [51564, 663, 311, 445, 257, 1524, 493, 322, 264, 3894, 1168, 13, 51664], "temperature": 0.0, "avg_logprob": -0.22211760443610115, "compression_ratio": 1.4910179640718564, "no_speech_prob": 0.03129413723945618}, {"id": 175, "seek": 78600, "start": 786.0, "end": 791.0, "text": " There's actually an extra library, LibOpen CSD, which gives you a whole lot of extra stuff on most ARM cores,", "tokens": [50364, 821, 311, 767, 364, 2857, 6405, 11, 15834, 45569, 9460, 35, 11, 597, 2709, 291, 257, 1379, 688, 295, 2857, 1507, 322, 881, 45209, 24826, 11, 50614], "temperature": 0.0, "avg_logprob": -0.23243532180786133, "compression_ratio": 1.4597156398104265, "no_speech_prob": 0.04262486472725868}, {"id": 176, "seek": 78600, "start": 791.0, "end": 801.0, "text": " but not necessarily apples and Amazon's ARM cores, but any that actually come from standard designs.", "tokens": [50614, 457, 406, 4725, 16814, 293, 6795, 311, 45209, 24826, 11, 457, 604, 300, 767, 808, 490, 3832, 11347, 13, 51114], "temperature": 0.0, "avg_logprob": -0.23243532180786133, "compression_ratio": 1.4597156398104265, "no_speech_prob": 0.04262486472725868}, {"id": 177, "seek": 78600, "start": 801.0, "end": 804.0, "text": " So a Turing design here.", "tokens": [51114, 407, 257, 314, 1345, 1715, 510, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23243532180786133, "compression_ratio": 1.4597156398104265, "no_speech_prob": 0.04262486472725868}, {"id": 178, "seek": 78600, "start": 804.0, "end": 807.0, "text": " One goal was that it runs everywhere somehow, right?", "tokens": [51264, 1485, 3387, 390, 300, 309, 6676, 5315, 6063, 11, 558, 30, 51414], "temperature": 0.0, "avg_logprob": -0.23243532180786133, "compression_ratio": 1.4597156398104265, "no_speech_prob": 0.04262486472725868}, {"id": 179, "seek": 78600, "start": 807.0, "end": 809.0, "text": " It must be general.", "tokens": [51414, 467, 1633, 312, 2674, 13, 51514], "temperature": 0.0, "avg_logprob": -0.23243532180786133, "compression_ratio": 1.4597156398104265, "no_speech_prob": 0.04262486472725868}, {"id": 180, "seek": 80900, "start": 809.0, "end": 815.0, "text": " And I don't, we don't skip going into the EPPF world.", "tokens": [50364, 400, 286, 500, 380, 11, 321, 500, 380, 10023, 516, 666, 264, 462, 17755, 37, 1002, 13, 50664], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 181, "seek": 80900, "start": 815.0, "end": 819.0, "text": " So there are advantages to do things in the kernel to aggregation in the kernel.", "tokens": [50664, 407, 456, 366, 14906, 281, 360, 721, 294, 264, 28256, 281, 16743, 399, 294, 264, 28256, 13, 50864], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 182, "seek": 80900, "start": 819.0, "end": 825.0, "text": " So but this has sometimes problems with on specific ARM and PSOX and embedded products.", "tokens": [50864, 407, 457, 341, 575, 2171, 2740, 365, 322, 2685, 45209, 293, 8168, 46, 55, 293, 16741, 3383, 13, 51164], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 183, "seek": 80900, "start": 825.0, "end": 828.0, "text": " So the design was really that runs everywhere.", "tokens": [51164, 407, 264, 1715, 390, 534, 300, 6676, 5315, 13, 51314], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 184, "seek": 80900, "start": 828.0, "end": 831.0, "text": " It's easy to use and generally available somehow.", "tokens": [51314, 467, 311, 1858, 281, 764, 293, 5101, 2435, 6063, 13, 51464], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 185, "seek": 80900, "start": 831.0, "end": 838.0, "text": " Somehow EPPF working with EPPF things to in the kernel and process unwanted data there out has some advantages, right?", "tokens": [51464, 28357, 462, 17755, 37, 1364, 365, 462, 17755, 37, 721, 281, 294, 264, 28256, 293, 1399, 33745, 1412, 456, 484, 575, 512, 14906, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.22036433864284205, "compression_ratio": 1.691119691119691, "no_speech_prob": 0.14566875994205475}, {"id": 186, "seek": 83800, "start": 838.0, "end": 841.0, "text": " But you need a tool train then on an embedded product.", "tokens": [50364, 583, 291, 643, 257, 2290, 3847, 550, 322, 364, 16741, 1674, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 187, "seek": 83800, "start": 841.0, "end": 844.0, "text": " So it's not that great somehow.", "tokens": [50514, 407, 309, 311, 406, 300, 869, 6063, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 188, "seek": 83800, "start": 844.0, "end": 851.0, "text": " And this everything I told you was somehow the idea on the design somehow or extra library.", "tokens": [50664, 400, 341, 1203, 286, 1907, 291, 390, 6063, 264, 1558, 322, 264, 1715, 6063, 420, 2857, 6405, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 189, "seek": 83800, "start": 851.0, "end": 855.0, "text": " Keep it a bit of minimal stuff which works everywhere somehow.", "tokens": [51014, 5527, 309, 257, 857, 295, 13206, 1507, 597, 1985, 5315, 6063, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 190, "seek": 83800, "start": 855.0, "end": 860.0, "text": " If you want to do more and often you want to do more if you analyze your particular task,", "tokens": [51214, 759, 291, 528, 281, 360, 544, 293, 2049, 291, 528, 281, 360, 544, 498, 291, 12477, 428, 1729, 5633, 11, 51464], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 191, "seek": 83800, "start": 860.0, "end": 865.0, "text": " how is the scheduling behavior you need more and you need more custom scripting as well somehow.", "tokens": [51464, 577, 307, 264, 29055, 5223, 291, 643, 544, 293, 291, 643, 544, 2375, 5755, 278, 382, 731, 6063, 13, 51714], "temperature": 0.0, "avg_logprob": -0.16187988207178208, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.010474336333572865}, {"id": 192, "seek": 86500, "start": 865.0, "end": 868.0, "text": " But this is not here. I think it's a lot of data already there.", "tokens": [50364, 583, 341, 307, 406, 510, 13, 286, 519, 309, 311, 257, 688, 295, 1412, 1217, 456, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 193, "seek": 86500, "start": 868.0, "end": 870.0, "text": " Easy available somehow.", "tokens": [50514, 16002, 2435, 6063, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 194, "seek": 86500, "start": 870.0, "end": 876.0, "text": " But if you want to do more, you need more scripting and things like that and libraries you want to use.", "tokens": [50614, 583, 498, 291, 528, 281, 360, 544, 11, 291, 643, 544, 5755, 278, 293, 721, 411, 300, 293, 15148, 291, 528, 281, 764, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 195, "seek": 86500, "start": 876.0, "end": 878.0, "text": " Sure. It's a compromise.", "tokens": [50914, 4894, 13, 467, 311, 257, 18577, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 196, "seek": 86500, "start": 881.0, "end": 883.0, "text": " Maybe a question for me.", "tokens": [51164, 2704, 257, 1168, 337, 385, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 197, "seek": 86500, "start": 883.0, "end": 888.0, "text": " Can you give us a few insights about the community?", "tokens": [51264, 1664, 291, 976, 505, 257, 1326, 14310, 466, 264, 1768, 30, 51514], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 198, "seek": 86500, "start": 888.0, "end": 893.0, "text": " How many developers, how many people contribute?", "tokens": [51514, 1012, 867, 8849, 11, 577, 867, 561, 10586, 30, 51764], "temperature": 0.0, "avg_logprob": -0.13524517099908057, "compression_ratio": 1.52, "no_speech_prob": 0.007117109373211861}, {"id": 199, "seek": 89300, "start": 894.0, "end": 897.0, "text": " Currently I'm the main developer.", "tokens": [50414, 19964, 286, 478, 264, 2135, 10754, 13, 50564], "temperature": 0.0, "avg_logprob": -0.19893479649024673, "compression_ratio": 1.555, "no_speech_prob": 0.0037794779054820538}, {"id": 200, "seek": 89300, "start": 901.0, "end": 906.0, "text": " But at the end it's just in the Python script so it's not really the rocket science.", "tokens": [50764, 583, 412, 264, 917, 309, 311, 445, 294, 264, 15329, 5755, 370, 309, 311, 406, 534, 264, 13012, 3497, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19893479649024673, "compression_ratio": 1.555, "no_speech_prob": 0.0037794779054820538}, {"id": 201, "seek": 89300, "start": 906.0, "end": 911.0, "text": " And there are students also working on this, help things and looking at the details.", "tokens": [51014, 400, 456, 366, 1731, 611, 1364, 322, 341, 11, 854, 721, 293, 1237, 412, 264, 4365, 13, 51264], "temperature": 0.0, "avg_logprob": -0.19893479649024673, "compression_ratio": 1.555, "no_speech_prob": 0.0037794779054820538}, {"id": 202, "seek": 89300, "start": 911.0, "end": 914.0, "text": " But yeah, it's not that magic somehow.", "tokens": [51264, 583, 1338, 11, 309, 311, 406, 300, 5585, 6063, 13, 51414], "temperature": 0.0, "avg_logprob": -0.19893479649024673, "compression_ratio": 1.555, "no_speech_prob": 0.0037794779054820538}, {"id": 203, "seek": 89300, "start": 914.0, "end": 919.0, "text": " It's just keeping things putting together and make them easy usable.", "tokens": [51414, 467, 311, 445, 5145, 721, 3372, 1214, 293, 652, 552, 1858, 29975, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19893479649024673, "compression_ratio": 1.555, "no_speech_prob": 0.0037794779054820538}, {"id": 204, "seek": 91900, "start": 920.0, "end": 929.0, "text": " The trace points and Steven Roslatt and all the things, the infrastructure that the kernel provides are the main drivers.", "tokens": [50414, 440, 13508, 2793, 293, 12754, 11144, 75, 1591, 293, 439, 264, 721, 11, 264, 6896, 300, 264, 28256, 6417, 366, 264, 2135, 11590, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3631443023681641, "compression_ratio": 1.3897058823529411, "no_speech_prob": 0.010331088677048683}, {"id": 205, "seek": 91900, "start": 929.0, "end": 931.0, "text": " That this is possible, right?", "tokens": [50864, 663, 341, 307, 1944, 11, 558, 30, 50964], "temperature": 0.0, "avg_logprob": -0.3631443023681641, "compression_ratio": 1.3897058823529411, "no_speech_prob": 0.010331088677048683}, {"id": 206, "seek": 91900, "start": 931.0, "end": 933.0, "text": " So just in script.", "tokens": [50964, 407, 445, 294, 5755, 13, 51064], "temperature": 0.0, "avg_logprob": -0.3631443023681641, "compression_ratio": 1.3897058823529411, "no_speech_prob": 0.010331088677048683}, {"id": 207, "seek": 91900, "start": 936.0, "end": 938.0, "text": " Thank you so much.", "tokens": [51214, 1044, 291, 370, 709, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3631443023681641, "compression_ratio": 1.3897058823529411, "no_speech_prob": 0.010331088677048683}], "language": "en"}