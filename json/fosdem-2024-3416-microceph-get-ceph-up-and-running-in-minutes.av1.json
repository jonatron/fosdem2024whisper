{"text": " Hello, welcome. My name is Peter Sabini from Canonical. I'm a software engineer there. I work on various CEP stuff and I'm very excited to present Microsoft with the tagline Get CEP up and running in minutes, unlike my slideshow. So problem statement. Microsoft packages CEP. This is a big complex system with distributed configuration, distributed components, complex bootstrapping, procedure and complex operations. It also has non-trivial hardware requirements. It's not just like you can download a package, install it on my notebook and be ready to go. It also has impact uptake and adoption among users. So if you're, for example, a famous physics research organization with thousands of nodes in your storage cluster, you probably have trained staff on hand 24-7. So you're good, you don't need Microsoft. If not, if you don't have a team of trained experts on hand, maybe Microsoft is something for you. So what is Microsoft? Microsoft is a single package staff cluster. Everything is in one file. We're designed it to be a simple setup so you can get a running staff cluster for command lines. And it runs on your notebook. You just need one node with obviously one hard disk. So simple possible staff cluster you can do is install Microsoft, putstrap the cluster, add some simulated OSDs, disk drives. So this is loop files in this case. No extra block devices required. And then wait a few minutes and your staff cluster should be ready to go. How did you do this? Microsoft is a snap package, as you might have guessed. Snap packages have the benefit that you're completely isolated from the host system. All the user land is in separate namespace. You just need a kernel, network devices, block devices, hardware, etc. to get up and running. This gives you a good isolation from the host system and gives a consistent environment across different operating systems. Some other goodies, it's isolation from the host system also means its access is isolated. The snap package just cannot do anything it wants on the host system, which is good for safety, security and robustness reasons. And you have standardized risk levels. So if you want to install release candidates, etc., there's a standardized way to do this. A little bit of overview of the Microsoft architecture. You have a service management demon that manages the standard CEP components and has a distributed database, a DITS proposal for storing configuration and no topology. Also included in the snap package is a CLI that talks to the service management demon via an API. All this is just a standard Ubuntu devian packages, no special binaries here involved. I mentioned the service API, so everything in Microsoft happens via this service API. Things you can do with the API, like listing block devices, adding or removing nodes, adding and removing disks. Everything works via the API and the included CLI is just another client for this API. So this is obviously great for integrating it in other systems. Some more internals. Microsoft is built on the micro cluster library, which provides this distributed configuration database, which is using RAVT for consensus. It also provides cluster membership and API framework. I already talked a little bit about scaling down, so single node systems work. One important component here is that we automatically manage the crush rules from CEP. So this means that as you start up with a single node, you get a failure domain of OSD, so in effect your single node clusters work out of the box, but if you add more nodes, your resiliency and your failure domain gets scaled up automatically. It's also possible to provide custom crush rules. This is important, for instance, if you go for larger failure domains, for instance, if you have a failure domain of rooms or racks, you can implement this. Microsoft itself doesn't know about your rooms or racks, but it won't step on your toes if you provide a custom crush rule set. Microsoft is famously scalable to thousands of nodes. Microsoft's scalability upwards is primarily bound by the RAVT algorithm used in the VQLite database. For performance, I would like to note that we're not sitting in the data path anywhere for CEP operations. You get the standard CEP performance behavior, also with Microsoft. Some integrations. Microsoft is the back storage back end for a number of projects in Canonical, for instance Sunbeam, MicroCades, MicroCloud and LXT. There's also, if you're running Juju models, there's a charm available currently in beta to integrate Microsoft into your Juju Clouds. Last but not least, there's a nice little GitHub action that we provide to integrate Microsoft into your GitHub CI workflow. So if you need, for instance, a S3 endpoint for your testing pipeline, this is an action that would help you with that. Okay, on for demos. I prerecorded these demos for time reasons and also because I'm very bad at talking and typing at the same time. So let's see how this goes. So this is the single node setup we talked about before. I'm going to install the single node. Microsoft Cluster gives it some simulated disks and enable a Rata's gateway, which would give you an S3 endpoint. Yeah, installation. We have the standard stable risk level here set. So this is what you get by default. You see my capital DSL connection here. Yeah, so we bootstrap the cluster. This is done pretty quickly. We can see now that we have a few services running already, but no disks. Then we add some simulated disks. These are just loop files. This is useful for lab environment or for testing. Don't use it for production. For production, you would use separate block devices, obviously. But if you want to get going on your laptop, that's the way to do it. We enable Rata's gateway. You can see it is active here now. We create a Rata's gateway user. This is just a standard safe way to do it. It's a little ugly command line here. And yeah, and we're done. We can use our favorite S3 client to access our new Rata's gateway endpoint. So just to prove that it works, we are creating a bucket here and put some image up in this bucket. Yeah, so that's for this demo. So this is the simplest possible case. Let's do something a little bit more complicated. Say we have got a few extra nodes now. We want to in an expander cluster and provide it with real block devices. This is the way we will do it. I'm now using the candidate risk level because I want to use some features from Microsoft that didn't make it to the stable risk level yet. So to cluster Microsoft, you need to get the token from the bootstrap node. So the first node that we provided, like this. Name the node you want to add and get the token for it and provide that token to the node that you want to add here. So, and yeah, small typo. These have happened as well. And yeah, and now all our nodes are clustered. Let's check Microsoft status. We can see all our new services here, but all the new nodes don't have any disks yet. So let's add some disks. So what I'm going to do here is add a user feature that comes from the release candidate that is automatically pro for empty block devices. So anything that's not mounted is clean. We take as a block device here with this switch. Let the thing settle a little. You can see there's lots of virtual disks from Kime. And we have a lot of disks in our cluster. So the safe cluster is still setting a little bit, but we suddenly have a lot more space available. So one thing we can do is provide a second radius gateway endpoint. Now we can see that the data we put in before is still here. So that's reassuring. And what we'll try to do now is we put in another OSD on the first node, but this time we want to make it encrypted. So full disk encryption is something we provide here. It relies on the dmcrypt kernel module. Not all kernels have that, so that's a little bit of a gotcha. You need to make sure it does. And also, this goes by so fast, also this is something that the snap is not allowed by default to do. You need to connect the dmcrypt module explicitly to make this happen. But once you do, it will give you an encrypted OSD device. That's the one up there now. Just to prove that this is a dmcrypt device, there's a setup here. Well, we all have the loop file for OSDs from the first node that we originally installed. Let's remove that. We have plenty of block devices now, so that our cluster has real disks. So as a last step for our production cluster, something that snaps to by default is auto refresh. This is something you don't typically want for your self cluster. You want to control updates for your self cluster. And that is a step you do, is hold all the snaps and prevent auto refresh so that you can refresh or update your software to your own leisure. So, yeah, so that's what's for the demos. Short outlook, what comes next. We want to make the clustering experience a little smoother still. No passing around of tokens. So one thing we could do with this or we planned to do is on the local network use MDNS to determine new nodes. Another thing that we want to do in the near future is provide built-in HAA and load balancing for other gateway endpoints and also RBD mirroring support. So that was it for the demos and for the... Thank you. Any questions? I don't know if we have time for questions. One question maybe. Otherwise, I'll be outside. Just talk to me and I'll be happy to answer your questions. Oh, sorry. Here you go. What architecture do you support with CPL architecture? Can you repeat the question please? What CPL architecture do you support? So snaps are pretty flexible. We develop on AMD64, but ARM is tested. I don't know if the top of my heart had... But ARM, AMD64, power, PT and risk, I believe...", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 5.0, "text": " Hello, welcome.", "tokens": [50364, 2425, 11, 2928, 13, 50614], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 1, "seek": 0, "start": 5.0, "end": 9.0, "text": " My name is Peter Sabini from Canonical.", "tokens": [50614, 1222, 1315, 307, 6508, 13915, 3812, 490, 27666, 804, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 2, "seek": 0, "start": 9.0, "end": 11.0, "text": " I'm a software engineer there.", "tokens": [50814, 286, 478, 257, 4722, 11403, 456, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 3, "seek": 0, "start": 11.0, "end": 17.0, "text": " I work on various CEP stuff and I'm very excited to present Microsoft with the tagline", "tokens": [50914, 286, 589, 322, 3683, 383, 8929, 1507, 293, 286, 478, 588, 2919, 281, 1974, 8116, 365, 264, 6162, 1889, 51214], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 4, "seek": 0, "start": 17.0, "end": 23.0, "text": " Get CEP up and running in minutes, unlike my slideshow.", "tokens": [51214, 3240, 383, 8929, 493, 293, 2614, 294, 2077, 11, 8343, 452, 9788, 4286, 13, 51514], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 5, "seek": 0, "start": 23.0, "end": 25.0, "text": " So problem statement.", "tokens": [51514, 407, 1154, 5629, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 6, "seek": 0, "start": 25.0, "end": 27.0, "text": " Microsoft packages CEP.", "tokens": [51614, 8116, 17401, 383, 8929, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3191429814205894, "compression_ratio": 1.4248704663212435, "no_speech_prob": 0.16733308136463165}, {"id": 7, "seek": 2700, "start": 27.0, "end": 34.0, "text": " This is a big complex system with distributed configuration, distributed components,", "tokens": [50364, 639, 307, 257, 955, 3997, 1185, 365, 12631, 11694, 11, 12631, 6677, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1327914180177631, "compression_ratio": 1.5026737967914439, "no_speech_prob": 0.04413038492202759}, {"id": 8, "seek": 2700, "start": 34.0, "end": 40.0, "text": " complex bootstrapping, procedure and complex operations.", "tokens": [50714, 3997, 11450, 19639, 3759, 11, 10747, 293, 3997, 7705, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1327914180177631, "compression_ratio": 1.5026737967914439, "no_speech_prob": 0.04413038492202759}, {"id": 9, "seek": 2700, "start": 40.0, "end": 43.0, "text": " It also has non-trivial hardware requirements.", "tokens": [51014, 467, 611, 575, 2107, 12, 83, 470, 22640, 8837, 7728, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1327914180177631, "compression_ratio": 1.5026737967914439, "no_speech_prob": 0.04413038492202759}, {"id": 10, "seek": 2700, "start": 43.0, "end": 49.0, "text": " It's not just like you can download a package, install it on my notebook and be ready to go.", "tokens": [51164, 467, 311, 406, 445, 411, 291, 393, 5484, 257, 7372, 11, 3625, 309, 322, 452, 21060, 293, 312, 1919, 281, 352, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1327914180177631, "compression_ratio": 1.5026737967914439, "no_speech_prob": 0.04413038492202759}, {"id": 11, "seek": 4900, "start": 49.0, "end": 57.0, "text": " It also has impact uptake and adoption among users.", "tokens": [50364, 467, 611, 575, 2712, 493, 27612, 293, 19215, 3654, 5022, 13, 50764], "temperature": 0.0, "avg_logprob": -0.22303516681377705, "compression_ratio": 1.3879781420765027, "no_speech_prob": 0.46906355023384094}, {"id": 12, "seek": 4900, "start": 57.0, "end": 66.0, "text": " So if you're, for example, a famous physics research organization with thousands of nodes in your storage cluster,", "tokens": [50764, 407, 498, 291, 434, 11, 337, 1365, 11, 257, 4618, 10649, 2132, 4475, 365, 5383, 295, 13891, 294, 428, 6725, 13630, 11, 51214], "temperature": 0.0, "avg_logprob": -0.22303516681377705, "compression_ratio": 1.3879781420765027, "no_speech_prob": 0.46906355023384094}, {"id": 13, "seek": 4900, "start": 66.0, "end": 70.0, "text": " you probably have trained staff on hand 24-7.", "tokens": [51214, 291, 1391, 362, 8895, 3525, 322, 1011, 4022, 12, 22, 13, 51414], "temperature": 0.0, "avg_logprob": -0.22303516681377705, "compression_ratio": 1.3879781420765027, "no_speech_prob": 0.46906355023384094}, {"id": 14, "seek": 4900, "start": 70.0, "end": 73.0, "text": " So you're good, you don't need Microsoft.", "tokens": [51414, 407, 291, 434, 665, 11, 291, 500, 380, 643, 8116, 13, 51564], "temperature": 0.0, "avg_logprob": -0.22303516681377705, "compression_ratio": 1.3879781420765027, "no_speech_prob": 0.46906355023384094}, {"id": 15, "seek": 7300, "start": 73.0, "end": 82.0, "text": " If not, if you don't have a team of trained experts on hand, maybe Microsoft is something for you.", "tokens": [50364, 759, 406, 11, 498, 291, 500, 380, 362, 257, 1469, 295, 8895, 8572, 322, 1011, 11, 1310, 8116, 307, 746, 337, 291, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13233170827229818, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.003264202270656824}, {"id": 16, "seek": 7300, "start": 82.0, "end": 83.0, "text": " So what is Microsoft?", "tokens": [50814, 407, 437, 307, 8116, 30, 50864], "temperature": 0.0, "avg_logprob": -0.13233170827229818, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.003264202270656824}, {"id": 17, "seek": 7300, "start": 83.0, "end": 85.0, "text": " Microsoft is a single package staff cluster.", "tokens": [50864, 8116, 307, 257, 2167, 7372, 3525, 13630, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13233170827229818, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.003264202270656824}, {"id": 18, "seek": 7300, "start": 85.0, "end": 89.0, "text": " Everything is in one file.", "tokens": [50964, 5471, 307, 294, 472, 3991, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13233170827229818, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.003264202270656824}, {"id": 19, "seek": 7300, "start": 89.0, "end": 98.0, "text": " We're designed it to be a simple setup so you can get a running staff cluster for command lines.", "tokens": [51164, 492, 434, 4761, 309, 281, 312, 257, 2199, 8657, 370, 291, 393, 483, 257, 2614, 3525, 13630, 337, 5622, 3876, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13233170827229818, "compression_ratio": 1.529100529100529, "no_speech_prob": 0.003264202270656824}, {"id": 20, "seek": 9800, "start": 98.0, "end": 100.0, "text": " And it runs on your notebook.", "tokens": [50364, 400, 309, 6676, 322, 428, 21060, 13, 50464], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 21, "seek": 9800, "start": 100.0, "end": 105.0, "text": " You just need one node with obviously one hard disk.", "tokens": [50464, 509, 445, 643, 472, 9984, 365, 2745, 472, 1152, 12355, 13, 50714], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 22, "seek": 9800, "start": 105.0, "end": 110.0, "text": " So simple possible staff cluster you can do is install Microsoft,", "tokens": [50714, 407, 2199, 1944, 3525, 13630, 291, 393, 360, 307, 3625, 8116, 11, 50964], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 23, "seek": 9800, "start": 110.0, "end": 116.0, "text": " putstrap the cluster, add some simulated OSDs, disk drives.", "tokens": [50964, 829, 372, 4007, 264, 13630, 11, 909, 512, 41713, 12731, 35, 82, 11, 12355, 11754, 13, 51264], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 24, "seek": 9800, "start": 116.0, "end": 119.0, "text": " So this is loop files in this case.", "tokens": [51264, 407, 341, 307, 6367, 7098, 294, 341, 1389, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 25, "seek": 9800, "start": 119.0, "end": 121.0, "text": " No extra block devices required.", "tokens": [51414, 883, 2857, 3461, 5759, 4739, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17265721638997397, "compression_ratio": 1.4427083333333333, "no_speech_prob": 0.027915915474295616}, {"id": 26, "seek": 12100, "start": 121.0, "end": 128.0, "text": " And then wait a few minutes and your staff cluster should be ready to go.", "tokens": [50364, 400, 550, 1699, 257, 1326, 2077, 293, 428, 3525, 13630, 820, 312, 1919, 281, 352, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10010699151267469, "compression_ratio": 1.5, "no_speech_prob": 0.041985176503658295}, {"id": 27, "seek": 12100, "start": 128.0, "end": 129.0, "text": " How did you do this?", "tokens": [50714, 1012, 630, 291, 360, 341, 30, 50764], "temperature": 0.0, "avg_logprob": -0.10010699151267469, "compression_ratio": 1.5, "no_speech_prob": 0.041985176503658295}, {"id": 28, "seek": 12100, "start": 129.0, "end": 132.0, "text": " Microsoft is a snap package, as you might have guessed.", "tokens": [50764, 8116, 307, 257, 13650, 7372, 11, 382, 291, 1062, 362, 21852, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10010699151267469, "compression_ratio": 1.5, "no_speech_prob": 0.041985176503658295}, {"id": 29, "seek": 12100, "start": 132.0, "end": 138.0, "text": " Snap packages have the benefit that you're completely isolated from the host system.", "tokens": [50914, 18254, 17401, 362, 264, 5121, 300, 291, 434, 2584, 14621, 490, 264, 3975, 1185, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10010699151267469, "compression_ratio": 1.5, "no_speech_prob": 0.041985176503658295}, {"id": 30, "seek": 12100, "start": 138.0, "end": 143.0, "text": " All the user land is in separate namespace.", "tokens": [51214, 1057, 264, 4195, 2117, 307, 294, 4994, 5288, 17940, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10010699151267469, "compression_ratio": 1.5, "no_speech_prob": 0.041985176503658295}, {"id": 31, "seek": 14300, "start": 144.0, "end": 152.0, "text": " You just need a kernel, network devices, block devices, hardware, etc. to get up and running.", "tokens": [50414, 509, 445, 643, 257, 28256, 11, 3209, 5759, 11, 3461, 5759, 11, 8837, 11, 5183, 13, 281, 483, 493, 293, 2614, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11567916589624741, "compression_ratio": 1.6559139784946237, "no_speech_prob": 0.023264020681381226}, {"id": 32, "seek": 14300, "start": 152.0, "end": 160.0, "text": " This gives you a good isolation from the host system and gives a consistent environment across different operating systems.", "tokens": [50814, 639, 2709, 291, 257, 665, 16001, 490, 264, 3975, 1185, 293, 2709, 257, 8398, 2823, 2108, 819, 7447, 3652, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11567916589624741, "compression_ratio": 1.6559139784946237, "no_speech_prob": 0.023264020681381226}, {"id": 33, "seek": 14300, "start": 160.0, "end": 168.0, "text": " Some other goodies, it's isolation from the host system also means its access is isolated.", "tokens": [51214, 2188, 661, 44072, 11, 309, 311, 16001, 490, 264, 3975, 1185, 611, 1355, 1080, 2105, 307, 14621, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11567916589624741, "compression_ratio": 1.6559139784946237, "no_speech_prob": 0.023264020681381226}, {"id": 34, "seek": 16800, "start": 168.0, "end": 173.0, "text": " The snap package just cannot do anything it wants on the host system,", "tokens": [50364, 440, 13650, 7372, 445, 2644, 360, 1340, 309, 2738, 322, 264, 3975, 1185, 11, 50614], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 35, "seek": 16800, "start": 173.0, "end": 176.0, "text": " which is good for safety, security and robustness reasons.", "tokens": [50614, 597, 307, 665, 337, 4514, 11, 3825, 293, 13956, 1287, 4112, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 36, "seek": 16800, "start": 176.0, "end": 179.0, "text": " And you have standardized risk levels.", "tokens": [50764, 400, 291, 362, 31677, 3148, 4358, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 37, "seek": 16800, "start": 179.0, "end": 186.0, "text": " So if you want to install release candidates, etc., there's a standardized way to do this.", "tokens": [50914, 407, 498, 291, 528, 281, 3625, 4374, 11255, 11, 5183, 7933, 456, 311, 257, 31677, 636, 281, 360, 341, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 38, "seek": 16800, "start": 186.0, "end": 190.0, "text": " A little bit of overview of the Microsoft architecture.", "tokens": [51264, 316, 707, 857, 295, 12492, 295, 264, 8116, 9482, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 39, "seek": 16800, "start": 190.0, "end": 195.0, "text": " You have a service management demon that manages the standard CEP components", "tokens": [51464, 509, 362, 257, 2643, 4592, 14283, 300, 22489, 264, 3832, 383, 8929, 6677, 51714], "temperature": 0.0, "avg_logprob": -0.14940745035807293, "compression_ratio": 1.564, "no_speech_prob": 0.006285024341195822}, {"id": 40, "seek": 19500, "start": 195.0, "end": 203.0, "text": " and has a distributed database, a DITS proposal for storing configuration and no topology.", "tokens": [50364, 293, 575, 257, 12631, 8149, 11, 257, 413, 3927, 50, 11494, 337, 26085, 11694, 293, 572, 1192, 1793, 13, 50764], "temperature": 0.0, "avg_logprob": -0.26024789952520117, "compression_ratio": 1.403061224489796, "no_speech_prob": 0.005452293436974287}, {"id": 41, "seek": 19500, "start": 203.0, "end": 211.0, "text": " Also included in the snap package is a CLI that talks to the service management demon via an API.", "tokens": [50764, 2743, 5556, 294, 264, 13650, 7372, 307, 257, 12855, 40, 300, 6686, 281, 264, 2643, 4592, 14283, 5766, 364, 9362, 13, 51164], "temperature": 0.0, "avg_logprob": -0.26024789952520117, "compression_ratio": 1.403061224489796, "no_speech_prob": 0.005452293436974287}, {"id": 42, "seek": 19500, "start": 211.0, "end": 220.0, "text": " All this is just a standard Ubuntu devian packages, no special binaries here involved.", "tokens": [51164, 1057, 341, 307, 445, 257, 3832, 30230, 45605, 1905, 952, 17401, 11, 572, 2121, 5171, 4889, 510, 3288, 13, 51614], "temperature": 0.0, "avg_logprob": -0.26024789952520117, "compression_ratio": 1.403061224489796, "no_speech_prob": 0.005452293436974287}, {"id": 43, "seek": 22000, "start": 221.0, "end": 228.0, "text": " I mentioned the service API, so everything in Microsoft happens via this service API.", "tokens": [50414, 286, 2835, 264, 2643, 9362, 11, 370, 1203, 294, 8116, 2314, 5766, 341, 2643, 9362, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10480972483188292, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.0033215137664228678}, {"id": 44, "seek": 22000, "start": 228.0, "end": 237.0, "text": " Things you can do with the API, like listing block devices, adding or removing nodes, adding and removing disks.", "tokens": [50764, 9514, 291, 393, 360, 365, 264, 9362, 11, 411, 22161, 3461, 5759, 11, 5127, 420, 12720, 13891, 11, 5127, 293, 12720, 41617, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10480972483188292, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.0033215137664228678}, {"id": 45, "seek": 22000, "start": 237.0, "end": 244.0, "text": " Everything works via the API and the included CLI is just another client for this API.", "tokens": [51214, 5471, 1985, 5766, 264, 9362, 293, 264, 5556, 12855, 40, 307, 445, 1071, 6423, 337, 341, 9362, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10480972483188292, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.0033215137664228678}, {"id": 46, "seek": 22000, "start": 244.0, "end": 249.0, "text": " So this is obviously great for integrating it in other systems.", "tokens": [51564, 407, 341, 307, 2745, 869, 337, 26889, 309, 294, 661, 3652, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10480972483188292, "compression_ratio": 1.6308411214953271, "no_speech_prob": 0.0033215137664228678}, {"id": 47, "seek": 24900, "start": 249.0, "end": 254.0, "text": " Some more internals. Microsoft is built on the micro cluster library,", "tokens": [50364, 2188, 544, 2154, 1124, 13, 8116, 307, 3094, 322, 264, 4532, 13630, 6405, 11, 50614], "temperature": 0.0, "avg_logprob": -0.14301370474008412, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.0019819047302007675}, {"id": 48, "seek": 24900, "start": 254.0, "end": 263.0, "text": " which provides this distributed configuration database, which is using RAVT for consensus.", "tokens": [50614, 597, 6417, 341, 12631, 11694, 8149, 11, 597, 307, 1228, 14626, 53, 51, 337, 19115, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14301370474008412, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.0019819047302007675}, {"id": 49, "seek": 24900, "start": 263.0, "end": 268.0, "text": " It also provides cluster membership and API framework.", "tokens": [51064, 467, 611, 6417, 13630, 16560, 293, 9362, 8388, 13, 51314], "temperature": 0.0, "avg_logprob": -0.14301370474008412, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.0019819047302007675}, {"id": 50, "seek": 24900, "start": 270.0, "end": 275.0, "text": " I already talked a little bit about scaling down, so single node systems work.", "tokens": [51414, 286, 1217, 2825, 257, 707, 857, 466, 21589, 760, 11, 370, 2167, 9984, 3652, 589, 13, 51664], "temperature": 0.0, "avg_logprob": -0.14301370474008412, "compression_ratio": 1.4848484848484849, "no_speech_prob": 0.0019819047302007675}, {"id": 51, "seek": 27500, "start": 275.0, "end": 282.0, "text": " One important component here is that we automatically manage the crush rules from CEP.", "tokens": [50364, 1485, 1021, 6542, 510, 307, 300, 321, 6772, 3067, 264, 10321, 4474, 490, 383, 8929, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11355333690401874, "compression_ratio": 1.6225490196078431, "no_speech_prob": 0.01380667369812727}, {"id": 52, "seek": 27500, "start": 282.0, "end": 290.0, "text": " So this means that as you start up with a single node, you get a failure domain of OSD,", "tokens": [50714, 407, 341, 1355, 300, 382, 291, 722, 493, 365, 257, 2167, 9984, 11, 291, 483, 257, 7763, 9274, 295, 12731, 35, 11, 51114], "temperature": 0.0, "avg_logprob": -0.11355333690401874, "compression_ratio": 1.6225490196078431, "no_speech_prob": 0.01380667369812727}, {"id": 53, "seek": 27500, "start": 290.0, "end": 295.0, "text": " so in effect your single node clusters work out of the box,", "tokens": [51114, 370, 294, 1802, 428, 2167, 9984, 23313, 589, 484, 295, 264, 2424, 11, 51364], "temperature": 0.0, "avg_logprob": -0.11355333690401874, "compression_ratio": 1.6225490196078431, "no_speech_prob": 0.01380667369812727}, {"id": 54, "seek": 27500, "start": 295.0, "end": 302.0, "text": " but if you add more nodes, your resiliency and your failure domain gets scaled up automatically.", "tokens": [51364, 457, 498, 291, 909, 544, 13891, 11, 428, 48712, 293, 428, 7763, 9274, 2170, 36039, 493, 6772, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11355333690401874, "compression_ratio": 1.6225490196078431, "no_speech_prob": 0.01380667369812727}, {"id": 55, "seek": 30200, "start": 303.0, "end": 308.0, "text": " It's also possible to provide custom crush rules.", "tokens": [50414, 467, 311, 611, 1944, 281, 2893, 2375, 10321, 4474, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07582933562142509, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.0021461164578795433}, {"id": 56, "seek": 30200, "start": 308.0, "end": 312.0, "text": " This is important, for instance, if you go for larger failure domains,", "tokens": [50664, 639, 307, 1021, 11, 337, 5197, 11, 498, 291, 352, 337, 4833, 7763, 25514, 11, 50864], "temperature": 0.0, "avg_logprob": -0.07582933562142509, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.0021461164578795433}, {"id": 57, "seek": 30200, "start": 312.0, "end": 317.0, "text": " for instance, if you have a failure domain of rooms or racks, you can implement this.", "tokens": [50864, 337, 5197, 11, 498, 291, 362, 257, 7763, 9274, 295, 9396, 420, 47063, 11, 291, 393, 4445, 341, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07582933562142509, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.0021461164578795433}, {"id": 58, "seek": 30200, "start": 317.0, "end": 321.0, "text": " Microsoft itself doesn't know about your rooms or racks,", "tokens": [51114, 8116, 2564, 1177, 380, 458, 466, 428, 9396, 420, 47063, 11, 51314], "temperature": 0.0, "avg_logprob": -0.07582933562142509, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.0021461164578795433}, {"id": 59, "seek": 30200, "start": 321.0, "end": 326.0, "text": " but it won't step on your toes if you provide a custom crush rule set.", "tokens": [51314, 457, 309, 1582, 380, 1823, 322, 428, 14681, 498, 291, 2893, 257, 2375, 10321, 4978, 992, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07582933562142509, "compression_ratio": 1.7671957671957672, "no_speech_prob": 0.0021461164578795433}, {"id": 60, "seek": 32600, "start": 327.0, "end": 333.0, "text": " Microsoft is famously scalable to thousands of nodes.", "tokens": [50414, 8116, 307, 34360, 38481, 281, 5383, 295, 13891, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1748030526297433, "compression_ratio": 1.493212669683258, "no_speech_prob": 0.0011144867166876793}, {"id": 61, "seek": 32600, "start": 333.0, "end": 339.0, "text": " Microsoft's scalability upwards is primarily bound by the RAVT algorithm used in the VQLite database.", "tokens": [50714, 8116, 311, 15664, 2310, 22167, 307, 10029, 5472, 538, 264, 14626, 53, 51, 9284, 1143, 294, 264, 691, 48, 43, 642, 8149, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1748030526297433, "compression_ratio": 1.493212669683258, "no_speech_prob": 0.0011144867166876793}, {"id": 62, "seek": 32600, "start": 339.0, "end": 349.0, "text": " For performance, I would like to note that we're not sitting in the data path anywhere for CEP operations.", "tokens": [51014, 1171, 3389, 11, 286, 576, 411, 281, 3637, 300, 321, 434, 406, 3798, 294, 264, 1412, 3100, 4992, 337, 383, 8929, 7705, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1748030526297433, "compression_ratio": 1.493212669683258, "no_speech_prob": 0.0011144867166876793}, {"id": 63, "seek": 32600, "start": 349.0, "end": 354.0, "text": " You get the standard CEP performance behavior, also with Microsoft.", "tokens": [51514, 509, 483, 264, 3832, 383, 8929, 3389, 5223, 11, 611, 365, 8116, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1748030526297433, "compression_ratio": 1.493212669683258, "no_speech_prob": 0.0011144867166876793}, {"id": 64, "seek": 35600, "start": 357.0, "end": 364.0, "text": " Some integrations. Microsoft is the back storage back end for a number of projects in Canonical,", "tokens": [50414, 2188, 3572, 763, 13, 8116, 307, 264, 646, 6725, 646, 917, 337, 257, 1230, 295, 4455, 294, 27666, 804, 11, 50764], "temperature": 0.0, "avg_logprob": -0.243305808619449, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.0018945588963106275}, {"id": 65, "seek": 35600, "start": 364.0, "end": 368.0, "text": " for instance Sunbeam, MicroCades, MicroCloud and LXT.", "tokens": [50764, 337, 5197, 6163, 650, 335, 11, 25642, 34, 2977, 11, 25642, 32787, 293, 441, 20542, 13, 50964], "temperature": 0.0, "avg_logprob": -0.243305808619449, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.0018945588963106275}, {"id": 66, "seek": 35600, "start": 368.0, "end": 377.0, "text": " There's also, if you're running Juju models, there's a charm available currently in beta to integrate Microsoft into your Juju Clouds.", "tokens": [50964, 821, 311, 611, 11, 498, 291, 434, 2614, 508, 4579, 84, 5245, 11, 456, 311, 257, 18904, 2435, 4362, 294, 9861, 281, 13365, 8116, 666, 428, 508, 4579, 84, 8061, 82, 13, 51414], "temperature": 0.0, "avg_logprob": -0.243305808619449, "compression_ratio": 1.507936507936508, "no_speech_prob": 0.0018945588963106275}, {"id": 67, "seek": 37700, "start": 377.0, "end": 387.0, "text": " Last but not least, there's a nice little GitHub action that we provide to integrate Microsoft into your GitHub CI workflow.", "tokens": [50364, 5264, 457, 406, 1935, 11, 456, 311, 257, 1481, 707, 23331, 3069, 300, 321, 2893, 281, 13365, 8116, 666, 428, 23331, 37777, 20993, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15211233948216293, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.0355534665286541}, {"id": 68, "seek": 37700, "start": 387.0, "end": 395.0, "text": " So if you need, for instance, a S3 endpoint for your testing pipeline, this is an action that would help you with that.", "tokens": [50864, 407, 498, 291, 643, 11, 337, 5197, 11, 257, 318, 18, 35795, 337, 428, 4997, 15517, 11, 341, 307, 364, 3069, 300, 576, 854, 291, 365, 300, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15211233948216293, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.0355534665286541}, {"id": 69, "seek": 37700, "start": 396.0, "end": 399.0, "text": " Okay, on for demos.", "tokens": [51314, 1033, 11, 322, 337, 33788, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15211233948216293, "compression_ratio": 1.4505494505494505, "no_speech_prob": 0.0355534665286541}, {"id": 70, "seek": 39900, "start": 400.0, "end": 408.0, "text": " I prerecorded these demos for time reasons and also because I'm very bad at talking and typing at the same time.", "tokens": [50414, 286, 38333, 66, 765, 292, 613, 33788, 337, 565, 4112, 293, 611, 570, 286, 478, 588, 1578, 412, 1417, 293, 18444, 412, 264, 912, 565, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2031794628465032, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.008566625416278839}, {"id": 71, "seek": 39900, "start": 410.0, "end": 412.0, "text": " So let's see how this goes.", "tokens": [50914, 407, 718, 311, 536, 577, 341, 1709, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2031794628465032, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.008566625416278839}, {"id": 72, "seek": 39900, "start": 416.0, "end": 419.0, "text": " So this is the single node setup we talked about before.", "tokens": [51214, 407, 341, 307, 264, 2167, 9984, 8657, 321, 2825, 466, 949, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2031794628465032, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.008566625416278839}, {"id": 73, "seek": 39900, "start": 419.0, "end": 421.0, "text": " I'm going to install the single node.", "tokens": [51364, 286, 478, 516, 281, 3625, 264, 2167, 9984, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2031794628465032, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.008566625416278839}, {"id": 74, "seek": 39900, "start": 421.0, "end": 427.0, "text": " Microsoft Cluster gives it some simulated disks and enable a Rata's gateway,", "tokens": [51464, 8116, 2033, 8393, 2709, 309, 512, 41713, 41617, 293, 9528, 257, 497, 3274, 311, 28532, 11, 51764], "temperature": 0.0, "avg_logprob": -0.2031794628465032, "compression_ratio": 1.5522388059701493, "no_speech_prob": 0.008566625416278839}, {"id": 75, "seek": 42700, "start": 427.0, "end": 429.0, "text": " which would give you an S3 endpoint.", "tokens": [50364, 597, 576, 976, 291, 364, 318, 18, 35795, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 76, "seek": 42700, "start": 431.0, "end": 433.0, "text": " Yeah, installation.", "tokens": [50564, 865, 11, 13260, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 77, "seek": 42700, "start": 433.0, "end": 436.0, "text": " We have the standard stable risk level here set.", "tokens": [50664, 492, 362, 264, 3832, 8351, 3148, 1496, 510, 992, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 78, "seek": 42700, "start": 437.0, "end": 440.0, "text": " So this is what you get by default.", "tokens": [50864, 407, 341, 307, 437, 291, 483, 538, 7576, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 79, "seek": 42700, "start": 441.0, "end": 444.0, "text": " You see my capital DSL connection here.", "tokens": [51064, 509, 536, 452, 4238, 15816, 43, 4984, 510, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 80, "seek": 42700, "start": 445.0, "end": 448.0, "text": " Yeah, so we bootstrap the cluster.", "tokens": [51264, 865, 11, 370, 321, 11450, 372, 4007, 264, 13630, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 81, "seek": 42700, "start": 451.0, "end": 453.0, "text": " This is done pretty quickly.", "tokens": [51564, 639, 307, 1096, 1238, 2661, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1293879469780073, "compression_ratio": 1.3920454545454546, "no_speech_prob": 0.0021809262689203024}, {"id": 82, "seek": 45300, "start": 454.0, "end": 458.0, "text": " We can see now that we have a few services running already, but no disks.", "tokens": [50414, 492, 393, 536, 586, 300, 321, 362, 257, 1326, 3328, 2614, 1217, 11, 457, 572, 41617, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 83, "seek": 45300, "start": 459.0, "end": 461.0, "text": " Then we add some simulated disks.", "tokens": [50664, 1396, 321, 909, 512, 41713, 41617, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 84, "seek": 45300, "start": 461.0, "end": 462.0, "text": " These are just loop files.", "tokens": [50764, 1981, 366, 445, 6367, 7098, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 85, "seek": 45300, "start": 462.0, "end": 465.0, "text": " This is useful for lab environment or for testing.", "tokens": [50814, 639, 307, 4420, 337, 2715, 2823, 420, 337, 4997, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 86, "seek": 45300, "start": 465.0, "end": 467.0, "text": " Don't use it for production.", "tokens": [50964, 1468, 380, 764, 309, 337, 4265, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 87, "seek": 45300, "start": 467.0, "end": 470.0, "text": " For production, you would use separate block devices, obviously.", "tokens": [51064, 1171, 4265, 11, 291, 576, 764, 4994, 3461, 5759, 11, 2745, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 88, "seek": 45300, "start": 470.0, "end": 474.0, "text": " But if you want to get going on your laptop, that's the way to do it.", "tokens": [51214, 583, 498, 291, 528, 281, 483, 516, 322, 428, 10732, 11, 300, 311, 264, 636, 281, 360, 309, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 89, "seek": 45300, "start": 475.0, "end": 477.0, "text": " We enable Rata's gateway.", "tokens": [51464, 492, 9528, 497, 3274, 311, 28532, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 90, "seek": 45300, "start": 477.0, "end": 480.0, "text": " You can see it is active here now.", "tokens": [51564, 509, 393, 536, 309, 307, 4967, 510, 586, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08978027209900973, "compression_ratio": 1.5891472868217054, "no_speech_prob": 0.002469809725880623}, {"id": 91, "seek": 48000, "start": 481.0, "end": 483.0, "text": " We create a Rata's gateway user.", "tokens": [50414, 492, 1884, 257, 497, 3274, 311, 28532, 4195, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 92, "seek": 48000, "start": 483.0, "end": 485.0, "text": " This is just a standard safe way to do it.", "tokens": [50514, 639, 307, 445, 257, 3832, 3273, 636, 281, 360, 309, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 93, "seek": 48000, "start": 485.0, "end": 488.0, "text": " It's a little ugly command line here.", "tokens": [50614, 467, 311, 257, 707, 12246, 5622, 1622, 510, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 94, "seek": 48000, "start": 488.0, "end": 490.0, "text": " And yeah, and we're done.", "tokens": [50764, 400, 1338, 11, 293, 321, 434, 1096, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 95, "seek": 48000, "start": 490.0, "end": 495.0, "text": " We can use our favorite S3 client to access our new Rata's gateway endpoint.", "tokens": [50864, 492, 393, 764, 527, 2954, 318, 18, 6423, 281, 2105, 527, 777, 497, 3274, 311, 28532, 35795, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 96, "seek": 48000, "start": 496.0, "end": 500.0, "text": " So just to prove that it works, we are creating a bucket here", "tokens": [51164, 407, 445, 281, 7081, 300, 309, 1985, 11, 321, 366, 4084, 257, 13058, 510, 51364], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 97, "seek": 48000, "start": 503.0, "end": 507.0, "text": " and put some image up in this bucket.", "tokens": [51514, 293, 829, 512, 3256, 493, 294, 341, 13058, 13, 51714], "temperature": 0.0, "avg_logprob": -0.14614594367242628, "compression_ratio": 1.5047619047619047, "no_speech_prob": 0.001862688222900033}, {"id": 98, "seek": 51000, "start": 511.0, "end": 515.0, "text": " Yeah, so that's for this demo.", "tokens": [50414, 865, 11, 370, 300, 311, 337, 341, 10723, 13, 50614], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 99, "seek": 51000, "start": 515.0, "end": 518.0, "text": " So this is the simplest possible case.", "tokens": [50614, 407, 341, 307, 264, 22811, 1944, 1389, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 100, "seek": 51000, "start": 525.0, "end": 528.0, "text": " Let's do something a little bit more complicated.", "tokens": [51114, 961, 311, 360, 746, 257, 707, 857, 544, 6179, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 101, "seek": 51000, "start": 528.0, "end": 531.0, "text": " Say we have got a few extra nodes now.", "tokens": [51264, 6463, 321, 362, 658, 257, 1326, 2857, 13891, 586, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 102, "seek": 51000, "start": 531.0, "end": 535.0, "text": " We want to in an expander cluster and provide it with real block devices.", "tokens": [51414, 492, 528, 281, 294, 364, 1278, 4483, 13630, 293, 2893, 309, 365, 957, 3461, 5759, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 103, "seek": 51000, "start": 535.0, "end": 537.0, "text": " This is the way we will do it.", "tokens": [51614, 639, 307, 264, 636, 321, 486, 360, 309, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09314459876010292, "compression_ratio": 1.461111111111111, "no_speech_prob": 0.0014487949665635824}, {"id": 104, "seek": 53700, "start": 537.0, "end": 542.0, "text": " I'm now using the candidate risk level because I want to use some features from Microsoft", "tokens": [50364, 286, 478, 586, 1228, 264, 11532, 3148, 1496, 570, 286, 528, 281, 764, 512, 4122, 490, 8116, 50614], "temperature": 0.0, "avg_logprob": -0.13059980323515744, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.0025064172223210335}, {"id": 105, "seek": 53700, "start": 542.0, "end": 548.0, "text": " that didn't make it to the stable risk level yet.", "tokens": [50614, 300, 994, 380, 652, 309, 281, 264, 8351, 3148, 1496, 1939, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13059980323515744, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.0025064172223210335}, {"id": 106, "seek": 53700, "start": 549.0, "end": 555.0, "text": " So to cluster Microsoft, you need to get the token from the bootstrap node.", "tokens": [50964, 407, 281, 13630, 8116, 11, 291, 643, 281, 483, 264, 14862, 490, 264, 11450, 372, 4007, 9984, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13059980323515744, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.0025064172223210335}, {"id": 107, "seek": 53700, "start": 555.0, "end": 559.0, "text": " So the first node that we provided, like this.", "tokens": [51264, 407, 264, 700, 9984, 300, 321, 5649, 11, 411, 341, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13059980323515744, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.0025064172223210335}, {"id": 108, "seek": 53700, "start": 559.0, "end": 563.0, "text": " Name the node you want to add and get the token for it", "tokens": [51464, 13866, 264, 9984, 291, 528, 281, 909, 293, 483, 264, 14862, 337, 309, 51664], "temperature": 0.0, "avg_logprob": -0.13059980323515744, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.0025064172223210335}, {"id": 109, "seek": 56300, "start": 563.0, "end": 570.0, "text": " and provide that token to the node that you want to add here.", "tokens": [50364, 293, 2893, 300, 14862, 281, 264, 9984, 300, 291, 528, 281, 909, 510, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 110, "seek": 56300, "start": 570.0, "end": 574.0, "text": " So, and yeah, small typo.", "tokens": [50714, 407, 11, 293, 1338, 11, 1359, 2125, 78, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 111, "seek": 56300, "start": 574.0, "end": 576.0, "text": " These have happened as well.", "tokens": [50914, 1981, 362, 2011, 382, 731, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 112, "seek": 56300, "start": 576.0, "end": 580.0, "text": " And yeah, and now all our nodes are clustered.", "tokens": [51014, 400, 1338, 11, 293, 586, 439, 527, 13891, 366, 596, 38624, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 113, "seek": 56300, "start": 580.0, "end": 583.0, "text": " Let's check Microsoft status.", "tokens": [51214, 961, 311, 1520, 8116, 6558, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 114, "seek": 56300, "start": 583.0, "end": 589.0, "text": " We can see all our new services here, but all the new nodes don't have any disks yet.", "tokens": [51364, 492, 393, 536, 439, 527, 777, 3328, 510, 11, 457, 439, 264, 777, 13891, 500, 380, 362, 604, 41617, 1939, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 115, "seek": 56300, "start": 589.0, "end": 591.0, "text": " So let's add some disks.", "tokens": [51664, 407, 718, 311, 909, 512, 41617, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1398810292338277, "compression_ratio": 1.5751295336787565, "no_speech_prob": 0.0025053643621504307}, {"id": 116, "seek": 59100, "start": 591.0, "end": 596.0, "text": " So what I'm going to do here is add a user feature that comes from the release candidate", "tokens": [50364, 407, 437, 286, 478, 516, 281, 360, 510, 307, 909, 257, 4195, 4111, 300, 1487, 490, 264, 4374, 11532, 50614], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 117, "seek": 59100, "start": 596.0, "end": 600.0, "text": " that is automatically pro for empty block devices.", "tokens": [50614, 300, 307, 6772, 447, 337, 6707, 3461, 5759, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 118, "seek": 59100, "start": 600.0, "end": 604.0, "text": " So anything that's not mounted is clean.", "tokens": [50814, 407, 1340, 300, 311, 406, 19138, 307, 2541, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 119, "seek": 59100, "start": 604.0, "end": 609.0, "text": " We take as a block device here with this switch.", "tokens": [51014, 492, 747, 382, 257, 3461, 4302, 510, 365, 341, 3679, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 120, "seek": 59100, "start": 609.0, "end": 612.0, "text": " Let the thing settle a little.", "tokens": [51264, 961, 264, 551, 11852, 257, 707, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 121, "seek": 59100, "start": 612.0, "end": 616.0, "text": " You can see there's lots of virtual disks from Kime.", "tokens": [51414, 509, 393, 536, 456, 311, 3195, 295, 6374, 41617, 490, 591, 1312, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15298408415259385, "compression_ratio": 1.5572139303482586, "no_speech_prob": 0.01092213299125433}, {"id": 122, "seek": 61600, "start": 616.0, "end": 620.0, "text": " And we have a lot of disks in our cluster.", "tokens": [50364, 400, 321, 362, 257, 688, 295, 41617, 294, 527, 13630, 13, 50564], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 123, "seek": 61600, "start": 620.0, "end": 625.0, "text": " So the safe cluster is still setting a little bit,", "tokens": [50564, 407, 264, 3273, 13630, 307, 920, 3287, 257, 707, 857, 11, 50814], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 124, "seek": 61600, "start": 625.0, "end": 629.0, "text": " but we suddenly have a lot more space available.", "tokens": [50814, 457, 321, 5800, 362, 257, 688, 544, 1901, 2435, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 125, "seek": 61600, "start": 629.0, "end": 634.0, "text": " So one thing we can do is provide a second radius gateway endpoint.", "tokens": [51014, 407, 472, 551, 321, 393, 360, 307, 2893, 257, 1150, 15845, 28532, 35795, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 126, "seek": 61600, "start": 634.0, "end": 638.0, "text": " Now we can see that the data we put in before is still here.", "tokens": [51264, 823, 321, 393, 536, 300, 264, 1412, 321, 829, 294, 949, 307, 920, 510, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 127, "seek": 61600, "start": 638.0, "end": 640.0, "text": " So that's reassuring.", "tokens": [51464, 407, 300, 311, 19486, 1345, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14240992510760273, "compression_ratio": 1.5668449197860963, "no_speech_prob": 0.0020087703596800566}, {"id": 128, "seek": 64000, "start": 641.0, "end": 653.0, "text": " And what we'll try to do now is we put in another OSD on the first node,", "tokens": [50414, 400, 437, 321, 603, 853, 281, 360, 586, 307, 321, 829, 294, 1071, 12731, 35, 322, 264, 700, 9984, 11, 51014], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 129, "seek": 64000, "start": 653.0, "end": 655.0, "text": " but this time we want to make it encrypted.", "tokens": [51014, 457, 341, 565, 321, 528, 281, 652, 309, 36663, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 130, "seek": 64000, "start": 655.0, "end": 658.0, "text": " So full disk encryption is something we provide here.", "tokens": [51114, 407, 1577, 12355, 29575, 307, 746, 321, 2893, 510, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 131, "seek": 64000, "start": 658.0, "end": 661.0, "text": " It relies on the dmcrypt kernel module.", "tokens": [51264, 467, 30910, 322, 264, 274, 76, 46555, 662, 28256, 10088, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 132, "seek": 64000, "start": 661.0, "end": 664.0, "text": " Not all kernels have that, so that's a little bit of a gotcha.", "tokens": [51414, 1726, 439, 23434, 1625, 362, 300, 11, 370, 300, 311, 257, 707, 857, 295, 257, 658, 4413, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 133, "seek": 64000, "start": 664.0, "end": 667.0, "text": " You need to make sure it does.", "tokens": [51564, 509, 643, 281, 652, 988, 309, 775, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08993709480369484, "compression_ratio": 1.5124378109452736, "no_speech_prob": 0.010276530869305134}, {"id": 134, "seek": 66700, "start": 667.0, "end": 673.0, "text": " And also, this goes by so fast,", "tokens": [50364, 400, 611, 11, 341, 1709, 538, 370, 2370, 11, 50664], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 135, "seek": 66700, "start": 673.0, "end": 677.0, "text": " also this is something that the snap is not allowed by default to do.", "tokens": [50664, 611, 341, 307, 746, 300, 264, 13650, 307, 406, 4350, 538, 7576, 281, 360, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 136, "seek": 66700, "start": 677.0, "end": 683.0, "text": " You need to connect the dmcrypt module explicitly to make this happen.", "tokens": [50864, 509, 643, 281, 1745, 264, 274, 76, 46555, 662, 10088, 20803, 281, 652, 341, 1051, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 137, "seek": 66700, "start": 683.0, "end": 690.0, "text": " But once you do, it will give you an encrypted OSD device.", "tokens": [51164, 583, 1564, 291, 360, 11, 309, 486, 976, 291, 364, 36663, 12731, 35, 4302, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 138, "seek": 66700, "start": 690.0, "end": 692.0, "text": " That's the one up there now.", "tokens": [51514, 663, 311, 264, 472, 493, 456, 586, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 139, "seek": 66700, "start": 692.0, "end": 695.0, "text": " Just to prove that this is a dmcrypt device,", "tokens": [51614, 1449, 281, 7081, 300, 341, 307, 257, 274, 76, 46555, 662, 4302, 11, 51764], "temperature": 0.0, "avg_logprob": -0.08907507790459526, "compression_ratio": 1.525, "no_speech_prob": 0.0037234784103929996}, {"id": 140, "seek": 69500, "start": 695.0, "end": 699.0, "text": " there's a setup here.", "tokens": [50364, 456, 311, 257, 8657, 510, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 141, "seek": 69500, "start": 699.0, "end": 706.0, "text": " Well, we all have the loop file for OSDs from the first node that we originally installed.", "tokens": [50564, 1042, 11, 321, 439, 362, 264, 6367, 3991, 337, 12731, 35, 82, 490, 264, 700, 9984, 300, 321, 7993, 8899, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 142, "seek": 69500, "start": 706.0, "end": 707.0, "text": " Let's remove that.", "tokens": [50914, 961, 311, 4159, 300, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 143, "seek": 69500, "start": 707.0, "end": 716.0, "text": " We have plenty of block devices now, so that our cluster has real disks.", "tokens": [50964, 492, 362, 7140, 295, 3461, 5759, 586, 11, 370, 300, 527, 13630, 575, 957, 41617, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 144, "seek": 69500, "start": 716.0, "end": 720.0, "text": " So as a last step for our production cluster,", "tokens": [51414, 407, 382, 257, 1036, 1823, 337, 527, 4265, 13630, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 145, "seek": 69500, "start": 720.0, "end": 724.0, "text": " something that snaps to by default is auto refresh.", "tokens": [51614, 746, 300, 19206, 281, 538, 7576, 307, 8399, 15134, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1263903757420982, "compression_ratio": 1.51, "no_speech_prob": 0.0030086881015449762}, {"id": 146, "seek": 72400, "start": 724.0, "end": 727.0, "text": " This is something you don't typically want for your self cluster.", "tokens": [50364, 639, 307, 746, 291, 500, 380, 5850, 528, 337, 428, 2698, 13630, 13, 50514], "temperature": 0.0, "avg_logprob": -0.14289593998389907, "compression_ratio": 1.644808743169399, "no_speech_prob": 0.005325677338987589}, {"id": 147, "seek": 72400, "start": 727.0, "end": 731.0, "text": " You want to control updates for your self cluster.", "tokens": [50514, 509, 528, 281, 1969, 9205, 337, 428, 2698, 13630, 13, 50714], "temperature": 0.0, "avg_logprob": -0.14289593998389907, "compression_ratio": 1.644808743169399, "no_speech_prob": 0.005325677338987589}, {"id": 148, "seek": 72400, "start": 731.0, "end": 738.0, "text": " And that is a step you do, is hold all the snaps and prevent auto refresh", "tokens": [50714, 400, 300, 307, 257, 1823, 291, 360, 11, 307, 1797, 439, 264, 19206, 293, 4871, 8399, 15134, 51064], "temperature": 0.0, "avg_logprob": -0.14289593998389907, "compression_ratio": 1.644808743169399, "no_speech_prob": 0.005325677338987589}, {"id": 149, "seek": 72400, "start": 738.0, "end": 746.0, "text": " so that you can refresh or update your software to your own leisure.", "tokens": [51064, 370, 300, 291, 393, 15134, 420, 5623, 428, 4722, 281, 428, 1065, 31339, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14289593998389907, "compression_ratio": 1.644808743169399, "no_speech_prob": 0.005325677338987589}, {"id": 150, "seek": 72400, "start": 746.0, "end": 753.0, "text": " So, yeah, so that's what's for the demos.", "tokens": [51464, 407, 11, 1338, 11, 370, 300, 311, 437, 311, 337, 264, 33788, 13, 51814], "temperature": 0.0, "avg_logprob": -0.14289593998389907, "compression_ratio": 1.644808743169399, "no_speech_prob": 0.005325677338987589}, {"id": 151, "seek": 75300, "start": 753.0, "end": 756.0, "text": " Short outlook, what comes next.", "tokens": [50364, 16881, 26650, 11, 437, 1487, 958, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 152, "seek": 75300, "start": 756.0, "end": 761.0, "text": " We want to make the clustering experience a little smoother still.", "tokens": [50514, 492, 528, 281, 652, 264, 596, 48673, 1752, 257, 707, 28640, 920, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 153, "seek": 75300, "start": 761.0, "end": 762.0, "text": " No passing around of tokens.", "tokens": [50764, 883, 8437, 926, 295, 22667, 13, 50814], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 154, "seek": 75300, "start": 762.0, "end": 768.0, "text": " So one thing we could do with this or we planned to do is on the local network", "tokens": [50814, 407, 472, 551, 321, 727, 360, 365, 341, 420, 321, 8589, 281, 360, 307, 322, 264, 2654, 3209, 51114], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 155, "seek": 75300, "start": 768.0, "end": 771.0, "text": " use MDNS to determine new nodes.", "tokens": [51114, 764, 22521, 42003, 281, 6997, 777, 13891, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 156, "seek": 75300, "start": 771.0, "end": 775.0, "text": " Another thing that we want to do in the near future is provide built-in", "tokens": [51264, 3996, 551, 300, 321, 528, 281, 360, 294, 264, 2651, 2027, 307, 2893, 3094, 12, 259, 51464], "temperature": 0.0, "avg_logprob": -0.16922808856498905, "compression_ratio": 1.5245098039215685, "no_speech_prob": 0.008812657557427883}, {"id": 157, "seek": 77500, "start": 775.0, "end": 785.0, "text": " HAA and load balancing for other gateway endpoints and also RBD mirroring support.", "tokens": [50364, 389, 5265, 293, 3677, 22495, 337, 661, 28532, 917, 20552, 293, 611, 40302, 35, 8013, 278, 1406, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 158, "seek": 77500, "start": 785.0, "end": 791.0, "text": " So that was it for the demos and for the...", "tokens": [50864, 407, 300, 390, 309, 337, 264, 33788, 293, 337, 264, 485, 51164], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 159, "seek": 77500, "start": 791.0, "end": 795.0, "text": " Thank you.", "tokens": [51164, 1044, 291, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 160, "seek": 77500, "start": 795.0, "end": 796.0, "text": " Any questions?", "tokens": [51364, 2639, 1651, 30, 51414], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 161, "seek": 77500, "start": 796.0, "end": 798.0, "text": " I don't know if we have time for questions.", "tokens": [51414, 286, 500, 380, 458, 498, 321, 362, 565, 337, 1651, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 162, "seek": 77500, "start": 798.0, "end": 802.0, "text": " One question maybe.", "tokens": [51514, 1485, 1168, 1310, 13, 51714], "temperature": 0.0, "avg_logprob": -0.2398509681224823, "compression_ratio": 1.411764705882353, "no_speech_prob": 0.015863725915551186}, {"id": 163, "seek": 80200, "start": 802.0, "end": 804.0, "text": " Otherwise, I'll be outside.", "tokens": [50364, 10328, 11, 286, 603, 312, 2380, 13, 50464], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 164, "seek": 80200, "start": 804.0, "end": 808.0, "text": " Just talk to me and I'll be happy to answer your questions.", "tokens": [50464, 1449, 751, 281, 385, 293, 286, 603, 312, 2055, 281, 1867, 428, 1651, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 165, "seek": 80200, "start": 808.0, "end": 810.0, "text": " Oh, sorry.", "tokens": [50664, 876, 11, 2597, 13, 50764], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 166, "seek": 80200, "start": 810.0, "end": 811.0, "text": " Here you go.", "tokens": [50764, 1692, 291, 352, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 167, "seek": 80200, "start": 811.0, "end": 815.0, "text": " What architecture do you support with CPL architecture?", "tokens": [50814, 708, 9482, 360, 291, 1406, 365, 383, 21593, 9482, 30, 51014], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 168, "seek": 80200, "start": 815.0, "end": 817.0, "text": " Can you repeat the question please?", "tokens": [51014, 1664, 291, 7149, 264, 1168, 1767, 30, 51114], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 169, "seek": 80200, "start": 817.0, "end": 820.0, "text": " What CPL architecture do you support?", "tokens": [51114, 708, 383, 21593, 9482, 360, 291, 1406, 30, 51264], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 170, "seek": 80200, "start": 820.0, "end": 823.0, "text": " So snaps are pretty flexible.", "tokens": [51264, 407, 19206, 366, 1238, 11358, 13, 51414], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 171, "seek": 80200, "start": 823.0, "end": 828.0, "text": " We develop on AMD64, but ARM is tested.", "tokens": [51414, 492, 1499, 322, 34808, 19395, 11, 457, 45209, 307, 8246, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19166938027182778, "compression_ratio": 1.5320197044334976, "no_speech_prob": 0.018327981233596802}, {"id": 172, "seek": 82800, "start": 828.0, "end": 831.0, "text": " I don't know if the top of my heart had...", "tokens": [50364, 286, 500, 380, 458, 498, 264, 1192, 295, 452, 1917, 632, 485, 50514], "temperature": 0.0, "avg_logprob": -0.2521764039993286, "compression_ratio": 0.9578947368421052, "no_speech_prob": 0.33830633759498596}, {"id": 173, "seek": 82800, "start": 831.0, "end": 838.0, "text": " But ARM, AMD64, power, PT and risk, I believe...", "tokens": [50514, 583, 45209, 11, 34808, 19395, 11, 1347, 11, 35460, 293, 3148, 11, 286, 1697, 485, 50864], "temperature": 0.0, "avg_logprob": -0.2521764039993286, "compression_ratio": 0.9578947368421052, "no_speech_prob": 0.33830633759498596}], "language": "en"}