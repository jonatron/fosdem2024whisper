{"text": " So hello everyone, I know this is the end of the day, the end of the first day, so thank you for being so many to attend the talk. I won't be too much into kernel details in that talk, that should be relatively easy to follow. Yes, I'm sure this is a kernel dev room, this is not about Go, so don't be worried about the logo. I also do apologize if some of you attended Jeff's presentation from yesterday, so the same topic, the presentation from today will be pretty similar. But still, so what is Peru? This is, so the name comes from packet where are you, and this is an EBPF-based tool to debug packets going through the Linux networking stack. So we see why we wanted to work on that tool in the first place, how Peru works, and what are some of the features, and how can we actually use it in real life to debug real problems. So the problem is that nowadays we have a lot of things to debug regarding to networking stuff in general, so when you use containers with namespaces, Kubernetes, all these kind of things, you typically have packets arriving on the interface, and then being forwarded to a pod through a pair of these interfaces, and there's that big thing in the middle, that's a penguin, that also stands for the Linux networking stack, and from the point of view of someone trying to understand what's happening, it often looks like a black box that's difficult to analyze and to understand fully. So how do we get some visibility into that? We've got a number of things happening in the Linux networking stack, a few things, that gives an idea. It's very tricky to get to the right place, so where is my packet? So that's the problem we have. So usually when something goes wrong, we use TCP-DOM. Right, TCP-DOM is good. TCP-DOM is a great tool that's very useful. TCP-DOM works well here and there, and sometimes the stuff happens here, and that's great. Sometimes though, it happens in the penguin, and sometimes in the pod as well. So what do I do with it? Can TCP-DOM help in that case? Not really, not so much. There are some other tools to debug things. There is printk, well, comes with a number of drawbacks too. I need to recompile my kernel. It's quite slow to process, to adjust every time. I need to add new printk's. I may possibly have to add a lot of printk's if I have no idea where my packet's going. If I do things wrong, my kernel will panic, that's not great. And how do I filter on specific packets? It's difficult to do. It's far from ideal. We've got some other traces too. Perf is, for example, a good tool to trace kernel functions that's something else, and I can just look into that function and look what's happening in there. But for networking, really, it's hard to do this filtering on the packets that I really want to follow. It's also hard to extract the network-related information out of other things that Perf returns. And in the first place, how do I know what function I'm interested in? Where is the stuff happening? Where is my packet drop? Where is my packet masqueraded? Where the interesting events are occurring. So what if we could have something that gets a bit of all the functions in the kernel that will be processing my packets? And what if I could get callbacks and run programs when these functions are called? And if I could also filter these callbacks to make sure that I only process the packets that I'm interested in. So that's where we introduce Peru, which is based on the BPF. So I assume most people in the room have some familiarity with BPF. So I won't go too much into the details. Just as a few reminders, that's this execution environment inside of the kernel where you can inject programs from user space. They're going through the verification to make sure that everything is safe and won't crash your kernel. You go for the JIT compiler to turn these programs into native instructions and get some good performance too. And then you run your programs on some hooks where you attach your program in the first place with a diagram that looks something like this. So we have a program here that we will hook to a probe on IP local deliver, which is a function that takes SKB as an argument. So that's a socket buffer that represents the packet in the networking stack. And we scan the LVM, or with GCC nowadays, but most of them we scan. We turn that into an L file that contains the BPF program as bytecode. And then we use a loading program that can be in code, that can be in C, that can be in Rust, whatever, to extract the bytecode from that L file and inject it into the kernel through the BPF system code. Once in the kernel we get the BPF, the VFI are in to make sure that the program is safe. We compile the kernel. We don't have to, but most of them we want something fast. So we compile the kernel. We compile the kernel, right? We compile the program into native instructions. And when my packet is coming in, and IP local deliver is called, then it triggers the execution of the program. And I can communicate with my agent in user space through the use of eBPF maps to store data. So, for example, to store metadata about my packet and retrieve them in user space to know what's happening. That's great, but how do we keep track of all those packet processing functions? So I have IP local deliver, I have a lot of other functions that are doing packet processing too. That's where we leverage BPF, which is BPF type format, which is a metadata format with different information. So a bit like dwarf, but producing objects that are much smaller than dwarf and that target BPF specifically for a number of use cases. So we can have BPF information for one BPF program in one object file. We can also have it for the Linux image itself, which is... So this BPF object is usually exposed in the C-SFS file system. It looks a bit like this. We have a very simple program, sorry, a very simple function. It's going to get marked that takes socket buffers and argument. I turn this, I extract the BPF information from that object file that I compile into a BPF program. And this is the BPF information on the right side. So it works like this. It says, I've got a struct SKBuff with the different offsets of the different attributes. I also defined another type, which is a pointer to that type ID too, which is my struct. I also defined the prototype of a function that takes the SKB, so the pointer to the SKB as an argument. And I gave it a name, which is SKBGetMap. And because I have the BPF information about the kernel image, and because this BPF describes all the functions in the kernel, I can process that in user space to extract a list of all the functions that take an SKB as an argument. And that gives me the list of the packet processing functions in the kernel. So now I have a list of all the functions that I want to hook to. So that answers to the three criteria we had. How to get all the functions, where we can with BPF, how to get callbacks, we can with EBPF and K-Probes in the kernel, and how to filter packets. This way using EBPF, and that's it was a packet filtering mechanism in the first place, that's relatively easy to implement. So how does it look like in practice? So I've got two terminals. It's not live demo, sorry. I use a rule, an IP table rule to drop packets, TCP packets, 1111, which is cloudflare DNS for example. And I call Peru, so here I have Peru destination host 1111 and TCP and destination port 80. And after I call Peru, it tells me that it loads all the, it loads my program and attaches all the K-Probes that I'm interested in. So that's 1500 probes in that case. And then in the first terminal, I type a curl 1111. What happens below is that I get a list of all the functions that process my packets. So I see a list on the right, IP local arts, IP local arts, NF hook slow, and so on and so forth. Sorry. Eventually I get K-free SKB mem, which is the function that is called once my SKB is free because it's been dropped by the IP tables rules. The IP tables rules I can also see through the code to NF hook slow. So that gives me information about what's happening in terms of function. It gives me information about the process that's been creating this packet in the first place because on the, on the column in the middle, you can see that it's a curl process. I get also information about the SKB, which is not useful by itself. This is the address of the SKB, but it allows me to be sure that this is one SKB that's being processed in the list. If I have several packets in this output, they will have different addresses. It allows me to filter by SKB when I post process this information. And once I exit from my Peru session, then it detaches all the processes we're loading. Okay. So what fancy features do we have beyond the basic usage? We have quite a number of options for Peru. So this is Peru dash dash help. I won't go through all of them, but through a number of interesting ones. So before we go into the options, you might have noticed that the way I told you to focus on the packet with the 1111 destination was just the same syntax as for TCP. And we do have a support for pickup filters in Peru. And the way this works is, so if I don't pass any filter, things are pretty much straightforward. I'm using my BPF program, uh, compared from Peru loaded, uh, into the kernel. Now if I do have a filter, I turn this into some CBPF bytecode using the leap pickup. CBPF is not exactly the same thing as a BPF. So I cannot use it just like this. So Peru uses another tool underneath, which is CBPFC. Hang on. And it turns, uh, this CBPF bytecode into a BPF bytecode. And then we get this CBPF bytecode and we inject it into the regular program. Okay. We've got everything in place. We load it into the kernel and that's it. That should be, it's easier after that. Okay. Okay. Some other features, uh, we can trace the kernel itself. We can, uh, we can trace kernel modules as well. We've got a few options to trace either a specific kernel module or all modules. Uh, so if you process packets with functional, take SKBs in your module, you can also, uh, follow what's happening in them. We've got a choice of backends for, uh, for Peru. So there are two currently, which is the regular K probes and the multi K probes. So what do the multi K probes do? They allow you to, uh, well, you don't really realize it when using Peru, but they allow Peru to load a bunch of K probes, uh, all at the same time. So instead of loading your probes one after the other, you create an array of probes and you pass this array with the size of the array to the BPF system code and then everything goes nearly at once. So it's faster. How much faster exactly? So if I could Peru on my laptop with, uh, the backend K probes, a legacy one, which is, uh, available, which has been available for a long time, the new one is for five dot 18, uh, plus only. So I get, um, a few seconds to attach other probes. That's seven seconds here, but it takes one minute, 37, uh, seconds to, uh, to attach, to detach other probes. That's not great. Now if I do multi K probes, uh, that's nearly instantaneous for attaching everything. Like there's, there's no difference on that test and once again for the touching everything. So that's quite faster. That's a good improvement. Um, here are a few other interesting functions. Um, they're all in the same box. They are not exactly related to each other. Uh, so we can filter also by a namespace for Peru, like looking for packets in one given namespace and not the others. That's totally possible. That's, I think that's relatively easy to do from the BPF perspective because I believe the, the namespace is directly available from the SKB itself. Uh, we can filter, uh, TC programs themselves, which are not regular canal functions, uh, just like, uh, the one we have in the networking stack. Uh, but because your TC programs can affect the packet processing, that's also interesting to, to follow what's happening on them. And, uh, the way it works is by using some specific BPF, uh, programs, looking on what is what we call the EF and three FX it mechanisms to plug directly onto, uh, those, uh, TC programs. So we're looking at BPF programs with other BPF programs. Yes, it works. Uh, we can also track SKBs that change. So when does it change? So for example, if I, uh, clone my SKB or copy my SKB, so the way we do that is, uh, when the option is enabled, we, uh, hook onto SKB clone, SKB copy at the end of the functions actually. And we, uh, we say, okay, this packet was interesting when I entered the function. And when I exit the function, I mark it as a packet of interest in a BPF map. So in addition to filtering the, uh, the packets that I usually want that I provided the, uh, fitter in the first place for, I also check for each, uh, for each packet if it's present in the map of the packets that I want to additionally follow. So that helps me, uh, following packets that may have changed. We've got some interesting options for, um, changing the display or adding more information on display. So I can add, uh, meter data on the socket buffers. I can add, uh, the full SKB. I can add the call stack. Here's an example. I can add the, uh, the, the, the four to pull for the packets. So in this example, we have, uh, two functions that, uh, process my packets here. And, uh, below each function that is displayed, we have the full, uh, call stack for the functions. So that's quite helpful to understand exactly what's happening in the kernel and how it goes, uh, in terms of processing. So to real life examples that we've had, uh, when working on Cydium trying to debug things on Cydium, which is a, a CNI for communities with, uh, a number of things related to networking and sometimes, uh, complex cases. The first one is, uh, MTU configuration, uh, error, uh, which we had to debug at some point. Uh, so we have a, sorry, we have a very simple setup with the packets arriving on the interface and the MTU on the, uh, on the node interface, not the same as the one on the VETH interface. And, uh, it was, uh, relatively easy to find out in the, uh, the output from Peru that the MTU, uh, is not the same, uh, that, well, is lower than the length of the packets. So the only thing I had to do to get this is to, uh, to, um, add the output to the information to get the, uh, the information about the, the packet that comes in. Another slightly more complex example is, um, so I had, that was in kind, so I had Docker network in the middle. I had, uh, this configuration with a pod trying to curl to the outside and, uh, hitting an IP table rule, uh, leading to masquerading the packets. So my packet gets masquerading with the address of the node interface. That goes to the internet. Okay. That worked fine. So in the second scenario, we checked that the packets were also, uh, currently masqueraded or not masqueraded when going to the node. And we have a second rule, actually, that was not displayed on the first, uh, case, which should, um, prevent packets going to the other node to, uh, from being masquerading. And so the packet should go straight to the other interface, should not change, uh, its IP address, but the packet never arrived. So what happens? So if you write the title, maybe you have an idea already. Uh, we thought that the packet was not being masqueraded as we expected. We thought that, uh, the IP tables rules were not being applied and we could have maybe found the issue, uh, differently, but, uh, Peru helped us to quickly confirm in that case of the masquerading is indeed, uh, occurring. So that's what you can observe on that, um, sample, uh, output. We can see that we're hitting NF hook slow and we can also observe for the same SKB that the, uh, the IP address, uh, is changing. So this is the same SKB. I just trimmed the, uh, the addresses of the SKB cause it was taking too much space, but, um, they're the same. So once we had this information, once we knew that the, uh, the IP tables rules was, uh, not sure taking place that we hit the, the net filter hook, we went back to the rules. So we were supposed to exclude the traffic, the closer nodes for masquerading. Turns out that the IP sets containing the entries, uh, indicating which nodes be, uh, excluded from masquerading were missing the entry of the node on the left on the first diagram. So that get me busy for, for, for some time a few weeks ago, but, uh, we did it. So Peru in brief, it's an BBF base tool to debug what's happening inside of the Linux networking stack. Hooks on kernel functions using, uh, processing SKBs. It's very good to pick up things where it's been a post shot in a way. Uh, you've got more visibility on what's happening directly in the stack and not just at the interfaces. We can use pick up, pick up filter, uh, style syntax to, to filter packets that we want. So we don't get everything. We just focus on the flows that we're interested in. We can try STC programs, can and models functions, uh, modified SKBs. Uh, so that's quite, quite flexible. Uh, we can, um, a number of information, a number of information, including packet level metadata, uh, the call stack, um, and it's proven very useful to solve a number of complex networking issues, uh, that we've encountered so far. So quick note on some other tools that are not exactly the same, uh, but that also uses this principle of, uh, creating a lot of probes to hook into the kernel and look at what's happening. There is sweet snoop, which is, um, really convenient to debug what's happening in the kernel when doing kernel development because it focuses on the written values of the function you're trying to, to, to observe or also the written values of most function in the kernel. If you're trying to just detect what functions are returning errors. IPF-Dress2 is very similar to, uh, to Peru. Uh, there are some features that, uh, are different between the two, but otherwise they are doing the same focusing and tracking the packets. TetraKone is a security events detection, uh, sorry, is a tool focusing on security events detection and, um, it uses, it also supports these, uh, multi-K probes, multi-U probes mechanisms. Uh, it uses EBPF to detect malicious activity on the system and to block it, uh, for, for, for security purpose. So this is the end of the presentation. I'd like to thank Adity and Matt Ness, who did a great presentation a few years ago, uh, at KubeCon on the topic, and, uh, I reused some of the materials, so, uh, I'm very thankful to them. Thank you to the Peru contributors. Thank you to everyone. Of course, thanks for the team, the talk. I hope you enjoyed it. If you have questions and if we have time, uh, I would really, I hope just to be open to questions. Thank you for the talk. Does it work well with, uh, GCO, GRO, like the segmentation of laws when the packets are merged and dissected? Uh, GCO, GRO should see the, should get the SKB as an argument, so they would appear on the list of functions that you, uh, that you get from the output. So yeah. Can you, uh, just print, uh, the SKBs or also trace, inspect those in, inside? Like, for example, I've seen this particular, uh, value inside the SKB, the changes and causes some kind of bug. Can, can I trace it? So you can, you can get the SKB, you can dump the full SKB. I don't think we have a filtering mechanism to, uh, do some additional processing in Peru on the SKB to only raise when you have that value. What you could do is, uh, filter new packet flow, dump the full SKB, and then probably post process to extract the ones that have this, uh, erroneous values, I suppose. But you, you can get the, the full content of the SKB. So from that, maybe that would help. So thank you for the presentation. Um, do you have a, an idea of the performance of your tool? And are you satisfied of that performance? And do you see some opportunities to make it even more efficient to be able to use it in production? No, I don't know. So one clarification is that, uh, it's not my, I've not contributed to it. Well, I picked two typos. Um, so I've not run any benchmarks myself. I know there is some impact due to the use of K-probes because you're loading so many K-probes at the same time. So it does have some impact on performance on the system. Um, I don't think we've tried to use it in environments where, uh, performance was a hard constraint for us so far. Uh, how could we improve that? Um, I'm not really sure. We haven't really given much thought into it at this point. Well, there's obviously the, the issue of loading and detaching the programs that is greatly improved in the multi-K-probes interface, but that's something different at the runtime. Uh, exactly. Yeah. Um, thank you for the talk in the first place. Um, and my question is which behavior can I expect with packet rewrites or encapsulation, uh, network address translation and so on, is the packet evaluated in every probe or can I, can I trace the packet even before the rewrite rule? So for example, I filter to the revitn IP address or I filter to the address before, uh, we explain encapsulation or whatever, or IPsec processing and so on. Um, so the way I see it, if you use the option to track the SKG, the SKG, the SKG, the SKG is, even if the, the metadata changes, you should be able to trace them, uh, uh, even after. So maybe if you set a given destination IP, you wouldn't be able to trace the packet before it gets that IP because that would be like guessing what will happen. But after it changes, yes, if you have, um, you know, tracking of the packets and that you, that Peru, I did it to the map for you, then you would keep following that SKB after that. Yes. Does it also track the revitn packet so I, um, trace the original IP if it gets encapsulated other destination IP? If you, so does it track, even if it gets encapsulated and if the IP changes, well yes, because it's the same SKB, right? So if you're, if you're basing, basing your, your, your tracking on the SKB address, then yes, it doesn't matter if you change the IP. Okay. Thank you. Okay. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.52, "text": " So hello everyone, I know this is the end of the day, the end of the first day, so thank", "tokens": [50364, 407, 7751, 1518, 11, 286, 458, 341, 307, 264, 917, 295, 264, 786, 11, 264, 917, 295, 264, 700, 786, 11, 370, 1309, 50840], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 1, "seek": 0, "start": 9.52, "end": 13.44, "text": " you for being so many to attend the talk.", "tokens": [50840, 291, 337, 885, 370, 867, 281, 6888, 264, 751, 13, 51036], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 2, "seek": 0, "start": 13.44, "end": 18.88, "text": " I won't be too much into kernel details in that talk, that should be relatively easy", "tokens": [51036, 286, 1582, 380, 312, 886, 709, 666, 28256, 4365, 294, 300, 751, 11, 300, 820, 312, 7226, 1858, 51308], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 3, "seek": 0, "start": 18.88, "end": 19.88, "text": " to follow.", "tokens": [51308, 281, 1524, 13, 51358], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 4, "seek": 0, "start": 19.88, "end": 25.400000000000002, "text": " Yes, I'm sure this is a kernel dev room, this is not about Go, so don't be worried about", "tokens": [51358, 1079, 11, 286, 478, 988, 341, 307, 257, 28256, 1905, 1808, 11, 341, 307, 406, 466, 1037, 11, 370, 500, 380, 312, 5804, 466, 51634], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 5, "seek": 0, "start": 25.400000000000002, "end": 27.88, "text": " the logo.", "tokens": [51634, 264, 9699, 13, 51758], "temperature": 0.0, "avg_logprob": -0.2612632751464844, "compression_ratio": 1.6581632653061225, "no_speech_prob": 0.27830785512924194}, {"id": 6, "seek": 2788, "start": 27.88, "end": 32.56, "text": " I also do apologize if some of you attended Jeff's presentation from yesterday, so the", "tokens": [50364, 286, 611, 360, 12328, 498, 512, 295, 291, 15990, 7506, 311, 5860, 490, 5186, 11, 370, 264, 50598], "temperature": 0.0, "avg_logprob": -0.28714582396716604, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.008183484897017479}, {"id": 7, "seek": 2788, "start": 32.56, "end": 36.12, "text": " same topic, the presentation from today will be pretty similar.", "tokens": [50598, 912, 4829, 11, 264, 5860, 490, 965, 486, 312, 1238, 2531, 13, 50776], "temperature": 0.0, "avg_logprob": -0.28714582396716604, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.008183484897017479}, {"id": 8, "seek": 2788, "start": 36.12, "end": 39.76, "text": " But still, so what is Peru?", "tokens": [50776, 583, 920, 11, 370, 437, 307, 31571, 30, 50958], "temperature": 0.0, "avg_logprob": -0.28714582396716604, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.008183484897017479}, {"id": 9, "seek": 2788, "start": 39.76, "end": 45.36, "text": " This is, so the name comes from packet where are you, and this is an EBPF-based tool to", "tokens": [50958, 639, 307, 11, 370, 264, 1315, 1487, 490, 20300, 689, 366, 291, 11, 293, 341, 307, 364, 50148, 47, 37, 12, 6032, 2290, 281, 51238], "temperature": 0.0, "avg_logprob": -0.28714582396716604, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.008183484897017479}, {"id": 10, "seek": 2788, "start": 45.36, "end": 51.239999999999995, "text": " debug packets going through the Linux networking stack.", "tokens": [51238, 24083, 30364, 516, 807, 264, 18734, 17985, 8630, 13, 51532], "temperature": 0.0, "avg_logprob": -0.28714582396716604, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.008183484897017479}, {"id": 11, "seek": 5124, "start": 51.24, "end": 58.92, "text": " So we see why we wanted to work on that tool in the first place, how Peru works, and what", "tokens": [50364, 407, 321, 536, 983, 321, 1415, 281, 589, 322, 300, 2290, 294, 264, 700, 1081, 11, 577, 31571, 1985, 11, 293, 437, 50748], "temperature": 0.0, "avg_logprob": -0.14845874872100487, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.007571849972009659}, {"id": 12, "seek": 5124, "start": 58.92, "end": 66.92, "text": " are some of the features, and how can we actually use it in real life to debug real problems.", "tokens": [50748, 366, 512, 295, 264, 4122, 11, 293, 577, 393, 321, 767, 764, 309, 294, 957, 993, 281, 24083, 957, 2740, 13, 51148], "temperature": 0.0, "avg_logprob": -0.14845874872100487, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.007571849972009659}, {"id": 13, "seek": 5124, "start": 66.92, "end": 72.24000000000001, "text": " So the problem is that nowadays we have a lot of things to debug regarding to networking", "tokens": [51148, 407, 264, 1154, 307, 300, 13434, 321, 362, 257, 688, 295, 721, 281, 24083, 8595, 281, 17985, 51414], "temperature": 0.0, "avg_logprob": -0.14845874872100487, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.007571849972009659}, {"id": 14, "seek": 5124, "start": 72.24000000000001, "end": 77.32000000000001, "text": " stuff in general, so when you use containers with namespaces, Kubernetes, all these kind", "tokens": [51414, 1507, 294, 2674, 11, 370, 562, 291, 764, 17089, 365, 5288, 79, 2116, 11, 23145, 11, 439, 613, 733, 51668], "temperature": 0.0, "avg_logprob": -0.14845874872100487, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.007571849972009659}, {"id": 15, "seek": 7732, "start": 77.32, "end": 82.96, "text": " of things, you typically have packets arriving on the interface, and then being forwarded", "tokens": [50364, 295, 721, 11, 291, 5850, 362, 30364, 22436, 322, 264, 9226, 11, 293, 550, 885, 2128, 292, 50646], "temperature": 0.0, "avg_logprob": -0.17670936584472657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 0.04540441557765007}, {"id": 16, "seek": 7732, "start": 82.96, "end": 90.36, "text": " to a pod through a pair of these interfaces, and there's that big thing in the middle,", "tokens": [50646, 281, 257, 2497, 807, 257, 6119, 295, 613, 28416, 11, 293, 456, 311, 300, 955, 551, 294, 264, 2808, 11, 51016], "temperature": 0.0, "avg_logprob": -0.17670936584472657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 0.04540441557765007}, {"id": 17, "seek": 7732, "start": 90.36, "end": 97.28, "text": " that's a penguin, that also stands for the Linux networking stack, and from the point", "tokens": [51016, 300, 311, 257, 45752, 11, 300, 611, 7382, 337, 264, 18734, 17985, 8630, 11, 293, 490, 264, 935, 51362], "temperature": 0.0, "avg_logprob": -0.17670936584472657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 0.04540441557765007}, {"id": 18, "seek": 7732, "start": 97.28, "end": 100.67999999999999, "text": " of view of someone trying to understand what's happening, it often looks like a black box", "tokens": [51362, 295, 1910, 295, 1580, 1382, 281, 1223, 437, 311, 2737, 11, 309, 2049, 1542, 411, 257, 2211, 2424, 51532], "temperature": 0.0, "avg_logprob": -0.17670936584472657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 0.04540441557765007}, {"id": 19, "seek": 7732, "start": 100.67999999999999, "end": 104.96, "text": " that's difficult to analyze and to understand fully.", "tokens": [51532, 300, 311, 2252, 281, 12477, 293, 281, 1223, 4498, 13, 51746], "temperature": 0.0, "avg_logprob": -0.17670936584472657, "compression_ratio": 1.7161016949152543, "no_speech_prob": 0.04540441557765007}, {"id": 20, "seek": 10496, "start": 104.96, "end": 109.91999999999999, "text": " So how do we get some visibility into that?", "tokens": [50364, 407, 577, 360, 321, 483, 512, 19883, 666, 300, 30, 50612], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 21, "seek": 10496, "start": 109.91999999999999, "end": 115.36, "text": " We've got a number of things happening in the Linux networking stack, a few things,", "tokens": [50612, 492, 600, 658, 257, 1230, 295, 721, 2737, 294, 264, 18734, 17985, 8630, 11, 257, 1326, 721, 11, 50884], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 22, "seek": 10496, "start": 115.36, "end": 116.36, "text": " that gives an idea.", "tokens": [50884, 300, 2709, 364, 1558, 13, 50934], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 23, "seek": 10496, "start": 116.36, "end": 123.32, "text": " It's very tricky to get to the right place, so where is my packet?", "tokens": [50934, 467, 311, 588, 12414, 281, 483, 281, 264, 558, 1081, 11, 370, 689, 307, 452, 20300, 30, 51282], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 24, "seek": 10496, "start": 123.32, "end": 125.8, "text": " So that's the problem we have.", "tokens": [51282, 407, 300, 311, 264, 1154, 321, 362, 13, 51406], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 25, "seek": 10496, "start": 125.8, "end": 129.6, "text": " So usually when something goes wrong, we use TCP-DOM.", "tokens": [51406, 407, 2673, 562, 746, 1709, 2085, 11, 321, 764, 48965, 12, 35, 5251, 13, 51596], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 26, "seek": 10496, "start": 129.6, "end": 131.4, "text": " Right, TCP-DOM is good.", "tokens": [51596, 1779, 11, 48965, 12, 35, 5251, 307, 665, 13, 51686], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 27, "seek": 10496, "start": 131.4, "end": 133.92, "text": " TCP-DOM is a great tool that's very useful.", "tokens": [51686, 48965, 12, 35, 5251, 307, 257, 869, 2290, 300, 311, 588, 4420, 13, 51812], "temperature": 0.0, "avg_logprob": -0.2913773400442941, "compression_ratio": 1.5355648535564854, "no_speech_prob": 0.016553688794374466}, {"id": 28, "seek": 13392, "start": 134.28, "end": 142.88, "text": " TCP-DOM works well here and there, and sometimes the stuff happens here, and that's great.", "tokens": [50382, 48965, 12, 35, 5251, 1985, 731, 510, 293, 456, 11, 293, 2171, 264, 1507, 2314, 510, 11, 293, 300, 311, 869, 13, 50812], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 29, "seek": 13392, "start": 142.88, "end": 149.48, "text": " Sometimes though, it happens in the penguin, and sometimes in the pod as well.", "tokens": [50812, 4803, 1673, 11, 309, 2314, 294, 264, 45752, 11, 293, 2171, 294, 264, 2497, 382, 731, 13, 51142], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 30, "seek": 13392, "start": 149.48, "end": 151.32, "text": " So what do I do with it?", "tokens": [51142, 407, 437, 360, 286, 360, 365, 309, 30, 51234], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 31, "seek": 13392, "start": 151.32, "end": 153.23999999999998, "text": " Can TCP-DOM help in that case?", "tokens": [51234, 1664, 48965, 12, 35, 5251, 854, 294, 300, 1389, 30, 51330], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 32, "seek": 13392, "start": 153.23999999999998, "end": 156.88, "text": " Not really, not so much.", "tokens": [51330, 1726, 534, 11, 406, 370, 709, 13, 51512], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 33, "seek": 13392, "start": 156.88, "end": 159.39999999999998, "text": " There are some other tools to debug things.", "tokens": [51512, 821, 366, 512, 661, 3873, 281, 24083, 721, 13, 51638], "temperature": 0.0, "avg_logprob": -0.23098882039388022, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.022030696272850037}, {"id": 34, "seek": 15940, "start": 159.4, "end": 164.0, "text": " There is printk, well, comes with a number of drawbacks too.", "tokens": [50364, 821, 307, 4482, 74, 11, 731, 11, 1487, 365, 257, 1230, 295, 2642, 17758, 886, 13, 50594], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 35, "seek": 15940, "start": 164.0, "end": 165.76000000000002, "text": " I need to recompile my kernel.", "tokens": [50594, 286, 643, 281, 48000, 794, 452, 28256, 13, 50682], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 36, "seek": 15940, "start": 165.76000000000002, "end": 168.92000000000002, "text": " It's quite slow to process, to adjust every time.", "tokens": [50682, 467, 311, 1596, 2964, 281, 1399, 11, 281, 4369, 633, 565, 13, 50840], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 37, "seek": 15940, "start": 168.92000000000002, "end": 172.04000000000002, "text": " I need to add new printk's.", "tokens": [50840, 286, 643, 281, 909, 777, 4482, 74, 311, 13, 50996], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 38, "seek": 15940, "start": 172.04000000000002, "end": 178.52, "text": " I may possibly have to add a lot of printk's if I have no idea where my packet's going.", "tokens": [50996, 286, 815, 6264, 362, 281, 909, 257, 688, 295, 4482, 74, 311, 498, 286, 362, 572, 1558, 689, 452, 20300, 311, 516, 13, 51320], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 39, "seek": 15940, "start": 178.52, "end": 182.92000000000002, "text": " If I do things wrong, my kernel will panic, that's not great.", "tokens": [51320, 759, 286, 360, 721, 2085, 11, 452, 28256, 486, 14783, 11, 300, 311, 406, 869, 13, 51540], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 40, "seek": 15940, "start": 182.92000000000002, "end": 185.56, "text": " And how do I filter on specific packets?", "tokens": [51540, 400, 577, 360, 286, 6608, 322, 2685, 30364, 30, 51672], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 41, "seek": 15940, "start": 185.56, "end": 186.68, "text": " It's difficult to do.", "tokens": [51672, 467, 311, 2252, 281, 360, 13, 51728], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 42, "seek": 15940, "start": 186.68, "end": 189.08, "text": " It's far from ideal.", "tokens": [51728, 467, 311, 1400, 490, 7157, 13, 51848], "temperature": 0.0, "avg_logprob": -0.19544596862792968, "compression_ratio": 1.625, "no_speech_prob": 0.00974438525736332}, {"id": 43, "seek": 18908, "start": 189.08, "end": 190.4, "text": " We've got some other traces too.", "tokens": [50364, 492, 600, 658, 512, 661, 26076, 886, 13, 50430], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 44, "seek": 18908, "start": 190.4, "end": 196.12, "text": " Perf is, for example, a good tool to trace kernel functions that's something else, and", "tokens": [50430, 3026, 69, 307, 11, 337, 1365, 11, 257, 665, 2290, 281, 13508, 28256, 6828, 300, 311, 746, 1646, 11, 293, 50716], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 45, "seek": 18908, "start": 196.12, "end": 201.20000000000002, "text": " I can just look into that function and look what's happening in there.", "tokens": [50716, 286, 393, 445, 574, 666, 300, 2445, 293, 574, 437, 311, 2737, 294, 456, 13, 50970], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 46, "seek": 18908, "start": 201.20000000000002, "end": 206.92000000000002, "text": " But for networking, really, it's hard to do this filtering on the packets that I really", "tokens": [50970, 583, 337, 17985, 11, 534, 11, 309, 311, 1152, 281, 360, 341, 30822, 322, 264, 30364, 300, 286, 534, 51256], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 47, "seek": 18908, "start": 206.92000000000002, "end": 208.36, "text": " want to follow.", "tokens": [51256, 528, 281, 1524, 13, 51328], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 48, "seek": 18908, "start": 208.36, "end": 216.48000000000002, "text": " It's also hard to extract the network-related information out of other things that Perf returns.", "tokens": [51328, 467, 311, 611, 1152, 281, 8947, 264, 3209, 12, 12004, 1589, 484, 295, 661, 721, 300, 3026, 69, 11247, 13, 51734], "temperature": 0.0, "avg_logprob": -0.17723617553710938, "compression_ratio": 1.7149122807017543, "no_speech_prob": 0.000861680950038135}, {"id": 49, "seek": 21648, "start": 216.48, "end": 219.2, "text": " And in the first place, how do I know what function I'm interested in?", "tokens": [50364, 400, 294, 264, 700, 1081, 11, 577, 360, 286, 458, 437, 2445, 286, 478, 3102, 294, 30, 50500], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 50, "seek": 21648, "start": 219.2, "end": 221.11999999999998, "text": " Where is the stuff happening?", "tokens": [50500, 2305, 307, 264, 1507, 2737, 30, 50596], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 51, "seek": 21648, "start": 221.11999999999998, "end": 222.23999999999998, "text": " Where is my packet drop?", "tokens": [50596, 2305, 307, 452, 20300, 3270, 30, 50652], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 52, "seek": 21648, "start": 222.23999999999998, "end": 226.32, "text": " Where is my packet masqueraded?", "tokens": [50652, 2305, 307, 452, 20300, 2300, 8035, 12777, 30, 50856], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 53, "seek": 21648, "start": 226.32, "end": 230.35999999999999, "text": " Where the interesting events are occurring.", "tokens": [50856, 2305, 264, 1880, 3931, 366, 18386, 13, 51058], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 54, "seek": 21648, "start": 230.35999999999999, "end": 238.16, "text": " So what if we could have something that gets a bit of all the functions in the kernel that", "tokens": [51058, 407, 437, 498, 321, 727, 362, 746, 300, 2170, 257, 857, 295, 439, 264, 6828, 294, 264, 28256, 300, 51448], "temperature": 0.0, "avg_logprob": -0.25612506618747466, "compression_ratio": 1.6312849162011174, "no_speech_prob": 0.009797092527151108}, {"id": 55, "seek": 23816, "start": 238.16, "end": 240.48, "text": " will be processing my packets?", "tokens": [50364, 486, 312, 9007, 452, 30364, 30, 50480], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 56, "seek": 23816, "start": 240.48, "end": 250.48, "text": " And what if I could get callbacks and run programs when these functions are called?", "tokens": [50480, 400, 437, 498, 286, 727, 483, 818, 17758, 293, 1190, 4268, 562, 613, 6828, 366, 1219, 30, 50980], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 57, "seek": 23816, "start": 250.48, "end": 255.16, "text": " And if I could also filter these callbacks to make sure that I only process the packets", "tokens": [50980, 400, 498, 286, 727, 611, 6608, 613, 818, 17758, 281, 652, 988, 300, 286, 787, 1399, 264, 30364, 51214], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 58, "seek": 23816, "start": 255.16, "end": 257.76, "text": " that I'm interested in.", "tokens": [51214, 300, 286, 478, 3102, 294, 13, 51344], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 59, "seek": 23816, "start": 257.76, "end": 263.24, "text": " So that's where we introduce Peru, which is based on the BPF.", "tokens": [51344, 407, 300, 311, 689, 321, 5366, 3026, 84, 11, 597, 307, 2361, 322, 264, 40533, 37, 13, 51618], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 60, "seek": 23816, "start": 263.24, "end": 267.76, "text": " So I assume most people in the room have some familiarity with BPF.", "tokens": [51618, 407, 286, 6552, 881, 561, 294, 264, 1808, 362, 512, 49828, 365, 40533, 37, 13, 51844], "temperature": 0.0, "avg_logprob": -0.22888446110551075, "compression_ratio": 1.6255707762557077, "no_speech_prob": 0.2189248502254486}, {"id": 61, "seek": 26776, "start": 267.76, "end": 270.4, "text": " So I won't go too much into the details.", "tokens": [50364, 407, 286, 1582, 380, 352, 886, 709, 666, 264, 4365, 13, 50496], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 62, "seek": 26776, "start": 270.4, "end": 277.48, "text": " Just as a few reminders, that's this execution environment inside of the kernel where you", "tokens": [50496, 1449, 382, 257, 1326, 43458, 11, 300, 311, 341, 15058, 2823, 1854, 295, 264, 28256, 689, 291, 50850], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 63, "seek": 26776, "start": 277.48, "end": 281.08, "text": " can inject programs from user space.", "tokens": [50850, 393, 10711, 4268, 490, 4195, 1901, 13, 51030], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 64, "seek": 26776, "start": 281.08, "end": 286.2, "text": " They're going through the verification to make sure that everything is safe and won't", "tokens": [51030, 814, 434, 516, 807, 264, 30206, 281, 652, 988, 300, 1203, 307, 3273, 293, 1582, 380, 51286], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 65, "seek": 26776, "start": 286.2, "end": 287.84, "text": " crash your kernel.", "tokens": [51286, 8252, 428, 28256, 13, 51368], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 66, "seek": 26776, "start": 287.84, "end": 294.36, "text": " You go for the JIT compiler to turn these programs into native instructions and get", "tokens": [51368, 509, 352, 337, 264, 508, 3927, 31958, 281, 1261, 613, 4268, 666, 8470, 9415, 293, 483, 51694], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 67, "seek": 26776, "start": 294.36, "end": 296.08, "text": " some good performance too.", "tokens": [51694, 512, 665, 3389, 886, 13, 51780], "temperature": 0.0, "avg_logprob": -0.23888867834339972, "compression_ratio": 1.569672131147541, "no_speech_prob": 0.0235908180475235}, {"id": 68, "seek": 29608, "start": 296.08, "end": 302.52, "text": " And then you run your programs on some hooks where you attach your program in the first", "tokens": [50364, 400, 550, 291, 1190, 428, 4268, 322, 512, 26485, 689, 291, 5085, 428, 1461, 294, 264, 700, 50686], "temperature": 0.0, "avg_logprob": -0.2032296998160226, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.0028061543125659227}, {"id": 69, "seek": 29608, "start": 302.52, "end": 306.08, "text": " place with a diagram that looks something like this.", "tokens": [50686, 1081, 365, 257, 10686, 300, 1542, 746, 411, 341, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2032296998160226, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.0028061543125659227}, {"id": 70, "seek": 29608, "start": 306.08, "end": 313.59999999999997, "text": " So we have a program here that we will hook to a probe on IP local deliver, which is a", "tokens": [50864, 407, 321, 362, 257, 1461, 510, 300, 321, 486, 6328, 281, 257, 22715, 322, 8671, 2654, 4239, 11, 597, 307, 257, 51240], "temperature": 0.0, "avg_logprob": -0.2032296998160226, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.0028061543125659227}, {"id": 71, "seek": 29608, "start": 313.59999999999997, "end": 318.84, "text": " function that takes SKB as an argument.", "tokens": [51240, 2445, 300, 2516, 21483, 33, 382, 364, 6770, 13, 51502], "temperature": 0.0, "avg_logprob": -0.2032296998160226, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.0028061543125659227}, {"id": 72, "seek": 29608, "start": 318.84, "end": 323.56, "text": " So that's a socket buffer that represents the packet in the networking stack.", "tokens": [51502, 407, 300, 311, 257, 19741, 21762, 300, 8855, 264, 20300, 294, 264, 17985, 8630, 13, 51738], "temperature": 0.0, "avg_logprob": -0.2032296998160226, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.0028061543125659227}, {"id": 73, "seek": 32356, "start": 323.56, "end": 329.12, "text": " And we scan the LVM, or with GCC nowadays, but most of them we scan.", "tokens": [50364, 400, 321, 11049, 264, 441, 53, 44, 11, 420, 365, 460, 11717, 13434, 11, 457, 881, 295, 552, 321, 11049, 13, 50642], "temperature": 0.0, "avg_logprob": -0.23304212936247237, "compression_ratio": 1.673170731707317, "no_speech_prob": 0.016063297167420387}, {"id": 74, "seek": 32356, "start": 329.12, "end": 334.84, "text": " We turn that into an L file that contains the BPF program as bytecode.", "tokens": [50642, 492, 1261, 300, 666, 364, 441, 3991, 300, 8306, 264, 40533, 37, 1461, 382, 40846, 22332, 13, 50928], "temperature": 0.0, "avg_logprob": -0.23304212936247237, "compression_ratio": 1.673170731707317, "no_speech_prob": 0.016063297167420387}, {"id": 75, "seek": 32356, "start": 334.84, "end": 339.68, "text": " And then we use a loading program that can be in code, that can be in C, that can be", "tokens": [50928, 400, 550, 321, 764, 257, 15114, 1461, 300, 393, 312, 294, 3089, 11, 300, 393, 312, 294, 383, 11, 300, 393, 312, 51170], "temperature": 0.0, "avg_logprob": -0.23304212936247237, "compression_ratio": 1.673170731707317, "no_speech_prob": 0.016063297167420387}, {"id": 76, "seek": 32356, "start": 339.68, "end": 347.4, "text": " in Rust, whatever, to extract the bytecode from that L file and inject it into the kernel", "tokens": [51170, 294, 34952, 11, 2035, 11, 281, 8947, 264, 40846, 22332, 490, 300, 441, 3991, 293, 10711, 309, 666, 264, 28256, 51556], "temperature": 0.0, "avg_logprob": -0.23304212936247237, "compression_ratio": 1.673170731707317, "no_speech_prob": 0.016063297167420387}, {"id": 77, "seek": 32356, "start": 347.4, "end": 349.6, "text": " through the BPF system code.", "tokens": [51556, 807, 264, 40533, 37, 1185, 3089, 13, 51666], "temperature": 0.0, "avg_logprob": -0.23304212936247237, "compression_ratio": 1.673170731707317, "no_speech_prob": 0.016063297167420387}, {"id": 78, "seek": 34960, "start": 349.6, "end": 355.28000000000003, "text": " Once in the kernel we get the BPF, the VFI are in to make sure that the program is safe.", "tokens": [50364, 3443, 294, 264, 28256, 321, 483, 264, 40533, 37, 11, 264, 691, 37, 40, 366, 294, 281, 652, 988, 300, 264, 1461, 307, 3273, 13, 50648], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 79, "seek": 34960, "start": 355.28000000000003, "end": 357.04, "text": " We compile the kernel.", "tokens": [50648, 492, 31413, 264, 28256, 13, 50736], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 80, "seek": 34960, "start": 357.04, "end": 359.36, "text": " We don't have to, but most of them we want something fast.", "tokens": [50736, 492, 500, 380, 362, 281, 11, 457, 881, 295, 552, 321, 528, 746, 2370, 13, 50852], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 81, "seek": 34960, "start": 359.36, "end": 361.8, "text": " So we compile the kernel.", "tokens": [50852, 407, 321, 31413, 264, 28256, 13, 50974], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 82, "seek": 34960, "start": 361.8, "end": 362.88, "text": " We compile the kernel, right?", "tokens": [50974, 492, 31413, 264, 28256, 11, 558, 30, 51028], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 83, "seek": 34960, "start": 362.88, "end": 366.48, "text": " We compile the program into native instructions.", "tokens": [51028, 492, 31413, 264, 1461, 666, 8470, 9415, 13, 51208], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 84, "seek": 34960, "start": 366.48, "end": 374.28000000000003, "text": " And when my packet is coming in, and IP local deliver is called, then it triggers the execution", "tokens": [51208, 400, 562, 452, 20300, 307, 1348, 294, 11, 293, 8671, 2654, 4239, 307, 1219, 11, 550, 309, 22827, 264, 15058, 51598], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 85, "seek": 34960, "start": 374.28000000000003, "end": 376.44, "text": " of the program.", "tokens": [51598, 295, 264, 1461, 13, 51706], "temperature": 0.0, "avg_logprob": -0.3356401302196361, "compression_ratio": 1.7276785714285714, "no_speech_prob": 0.010914147831499577}, {"id": 86, "seek": 37644, "start": 376.44, "end": 381.28, "text": " And I can communicate with my agent in user space through the use of eBPF maps to store", "tokens": [50364, 400, 286, 393, 7890, 365, 452, 9461, 294, 4195, 1901, 807, 264, 764, 295, 308, 33, 47, 37, 11317, 281, 3531, 50606], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 87, "seek": 37644, "start": 381.28, "end": 382.28, "text": " data.", "tokens": [50606, 1412, 13, 50656], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 88, "seek": 37644, "start": 382.28, "end": 387.96, "text": " So, for example, to store metadata about my packet and retrieve them in user space to", "tokens": [50656, 407, 11, 337, 1365, 11, 281, 3531, 26603, 466, 452, 20300, 293, 30254, 552, 294, 4195, 1901, 281, 50940], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 89, "seek": 37644, "start": 387.96, "end": 390.64, "text": " know what's happening.", "tokens": [50940, 458, 437, 311, 2737, 13, 51074], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 90, "seek": 37644, "start": 390.64, "end": 395.04, "text": " That's great, but how do we keep track of all those packet processing functions?", "tokens": [51074, 663, 311, 869, 11, 457, 577, 360, 321, 1066, 2837, 295, 439, 729, 20300, 9007, 6828, 30, 51294], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 91, "seek": 37644, "start": 395.04, "end": 400.15999999999997, "text": " So I have IP local deliver, I have a lot of other functions that are doing packet processing", "tokens": [51294, 407, 286, 362, 8671, 2654, 4239, 11, 286, 362, 257, 688, 295, 661, 6828, 300, 366, 884, 20300, 9007, 51550], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 92, "seek": 37644, "start": 400.15999999999997, "end": 401.15999999999997, "text": " too.", "tokens": [51550, 886, 13, 51600], "temperature": 0.0, "avg_logprob": -0.19821346282958985, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.00046424235915765166}, {"id": 93, "seek": 40116, "start": 401.16, "end": 407.76000000000005, "text": " That's where we leverage BPF, which is BPF type format, which is a metadata format with", "tokens": [50364, 663, 311, 689, 321, 13982, 40533, 37, 11, 597, 307, 40533, 37, 2010, 7877, 11, 597, 307, 257, 26603, 7877, 365, 50694], "temperature": 0.0, "avg_logprob": -0.22633547841766735, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.004760578740388155}, {"id": 94, "seek": 40116, "start": 407.76000000000005, "end": 408.76000000000005, "text": " different information.", "tokens": [50694, 819, 1589, 13, 50744], "temperature": 0.0, "avg_logprob": -0.22633547841766735, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.004760578740388155}, {"id": 95, "seek": 40116, "start": 408.76000000000005, "end": 415.64000000000004, "text": " So a bit like dwarf, but producing objects that are much smaller than dwarf and that target", "tokens": [50744, 407, 257, 857, 411, 35527, 11, 457, 10501, 6565, 300, 366, 709, 4356, 813, 35527, 293, 300, 3779, 51088], "temperature": 0.0, "avg_logprob": -0.22633547841766735, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.004760578740388155}, {"id": 96, "seek": 40116, "start": 415.64000000000004, "end": 421.16, "text": " BPF specifically for a number of use cases.", "tokens": [51088, 40533, 37, 4682, 337, 257, 1230, 295, 764, 3331, 13, 51364], "temperature": 0.0, "avg_logprob": -0.22633547841766735, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.004760578740388155}, {"id": 97, "seek": 40116, "start": 421.16, "end": 426.16, "text": " So we can have BPF information for one BPF program in one object file.", "tokens": [51364, 407, 321, 393, 362, 40533, 37, 1589, 337, 472, 40533, 37, 1461, 294, 472, 2657, 3991, 13, 51614], "temperature": 0.0, "avg_logprob": -0.22633547841766735, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.004760578740388155}, {"id": 98, "seek": 42616, "start": 426.16, "end": 430.76000000000005, "text": " We can also have it for the Linux image itself, which is...", "tokens": [50364, 492, 393, 611, 362, 309, 337, 264, 18734, 3256, 2564, 11, 597, 307, 485, 50594], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 99, "seek": 42616, "start": 430.76000000000005, "end": 436.16, "text": " So this BPF object is usually exposed in the C-SFS file system.", "tokens": [50594, 407, 341, 40533, 37, 2657, 307, 2673, 9495, 294, 264, 383, 12, 50, 29318, 3991, 1185, 13, 50864], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 100, "seek": 42616, "start": 436.16, "end": 438.16, "text": " It looks a bit like this.", "tokens": [50864, 467, 1542, 257, 857, 411, 341, 13, 50964], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 101, "seek": 42616, "start": 438.16, "end": 443.36, "text": " We have a very simple program, sorry, a very simple function.", "tokens": [50964, 492, 362, 257, 588, 2199, 1461, 11, 2597, 11, 257, 588, 2199, 2445, 13, 51224], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 102, "seek": 42616, "start": 443.36, "end": 448.40000000000003, "text": " It's going to get marked that takes socket buffers and argument.", "tokens": [51224, 467, 311, 516, 281, 483, 12658, 300, 2516, 19741, 9204, 433, 293, 6770, 13, 51476], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 103, "seek": 42616, "start": 448.40000000000003, "end": 454.04, "text": " I turn this, I extract the BPF information from that object file that I compile into a", "tokens": [51476, 286, 1261, 341, 11, 286, 8947, 264, 40533, 37, 1589, 490, 300, 2657, 3991, 300, 286, 31413, 666, 257, 51758], "temperature": 0.0, "avg_logprob": -0.36471384221857245, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.04108084365725517}, {"id": 104, "seek": 45404, "start": 454.04, "end": 455.04, "text": " BPF program.", "tokens": [50364, 40533, 37, 1461, 13, 50414], "temperature": 0.0, "avg_logprob": -0.22799117941605418, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.01535581611096859}, {"id": 105, "seek": 45404, "start": 455.04, "end": 460.44, "text": " And this is the BPF information on the right side.", "tokens": [50414, 400, 341, 307, 264, 40533, 37, 1589, 322, 264, 558, 1252, 13, 50684], "temperature": 0.0, "avg_logprob": -0.22799117941605418, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.01535581611096859}, {"id": 106, "seek": 45404, "start": 460.44, "end": 462.24, "text": " So it works like this.", "tokens": [50684, 407, 309, 1985, 411, 341, 13, 50774], "temperature": 0.0, "avg_logprob": -0.22799117941605418, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.01535581611096859}, {"id": 107, "seek": 45404, "start": 462.24, "end": 468.28000000000003, "text": " It says, I've got a struct SKBuff with the different offsets of the different attributes.", "tokens": [50774, 467, 1619, 11, 286, 600, 658, 257, 6594, 21483, 33, 1245, 365, 264, 819, 39457, 1385, 295, 264, 819, 17212, 13, 51076], "temperature": 0.0, "avg_logprob": -0.22799117941605418, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.01535581611096859}, {"id": 108, "seek": 45404, "start": 468.28000000000003, "end": 475.36, "text": " I also defined another type, which is a pointer to that type ID too, which is my struct.", "tokens": [51076, 286, 611, 7642, 1071, 2010, 11, 597, 307, 257, 23918, 281, 300, 2010, 7348, 886, 11, 597, 307, 452, 6594, 13, 51430], "temperature": 0.0, "avg_logprob": -0.22799117941605418, "compression_ratio": 1.4804469273743017, "no_speech_prob": 0.01535581611096859}, {"id": 109, "seek": 47536, "start": 475.36, "end": 484.8, "text": " I also defined the prototype of a function that takes the SKB, so the pointer to the", "tokens": [50364, 286, 611, 7642, 264, 19475, 295, 257, 2445, 300, 2516, 264, 21483, 33, 11, 370, 264, 23918, 281, 264, 50836], "temperature": 0.0, "avg_logprob": -0.169137818472726, "compression_ratio": 1.5837320574162679, "no_speech_prob": 0.009516694582998753}, {"id": 110, "seek": 47536, "start": 484.8, "end": 486.88, "text": " SKB as an argument.", "tokens": [50836, 21483, 33, 382, 364, 6770, 13, 50940], "temperature": 0.0, "avg_logprob": -0.169137818472726, "compression_ratio": 1.5837320574162679, "no_speech_prob": 0.009516694582998753}, {"id": 111, "seek": 47536, "start": 486.88, "end": 491.48, "text": " And I gave it a name, which is SKBGetMap.", "tokens": [50940, 400, 286, 2729, 309, 257, 1315, 11, 597, 307, 21483, 33, 18133, 44, 569, 13, 51170], "temperature": 0.0, "avg_logprob": -0.169137818472726, "compression_ratio": 1.5837320574162679, "no_speech_prob": 0.009516694582998753}, {"id": 112, "seek": 47536, "start": 491.48, "end": 497.72, "text": " And because I have the BPF information about the kernel image, and because this BPF describes", "tokens": [51170, 400, 570, 286, 362, 264, 40533, 37, 1589, 466, 264, 28256, 3256, 11, 293, 570, 341, 40533, 37, 15626, 51482], "temperature": 0.0, "avg_logprob": -0.169137818472726, "compression_ratio": 1.5837320574162679, "no_speech_prob": 0.009516694582998753}, {"id": 113, "seek": 47536, "start": 497.72, "end": 504.28000000000003, "text": " all the functions in the kernel, I can process that in user space to extract a list of all", "tokens": [51482, 439, 264, 6828, 294, 264, 28256, 11, 286, 393, 1399, 300, 294, 4195, 1901, 281, 8947, 257, 1329, 295, 439, 51810], "temperature": 0.0, "avg_logprob": -0.169137818472726, "compression_ratio": 1.5837320574162679, "no_speech_prob": 0.009516694582998753}, {"id": 114, "seek": 50428, "start": 504.28, "end": 508.15999999999997, "text": " the functions that take an SKB as an argument.", "tokens": [50364, 264, 6828, 300, 747, 364, 21483, 33, 382, 364, 6770, 13, 50558], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 115, "seek": 50428, "start": 508.15999999999997, "end": 512.0, "text": " And that gives me the list of the packet processing functions in the kernel.", "tokens": [50558, 400, 300, 2709, 385, 264, 1329, 295, 264, 20300, 9007, 6828, 294, 264, 28256, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 116, "seek": 50428, "start": 512.0, "end": 517.04, "text": " So now I have a list of all the functions that I want to hook to.", "tokens": [50750, 407, 586, 286, 362, 257, 1329, 295, 439, 264, 6828, 300, 286, 528, 281, 6328, 281, 13, 51002], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 117, "seek": 50428, "start": 517.04, "end": 520.24, "text": " So that answers to the three criteria we had.", "tokens": [51002, 407, 300, 6338, 281, 264, 1045, 11101, 321, 632, 13, 51162], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 118, "seek": 50428, "start": 520.24, "end": 525.48, "text": " How to get all the functions, where we can with BPF, how to get callbacks, we can with", "tokens": [51162, 1012, 281, 483, 439, 264, 6828, 11, 689, 321, 393, 365, 40533, 37, 11, 577, 281, 483, 818, 17758, 11, 321, 393, 365, 51424], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 119, "seek": 50428, "start": 525.48, "end": 530.3199999999999, "text": " EBPF and K-Probes in the kernel, and how to filter packets.", "tokens": [51424, 50148, 47, 37, 293, 591, 12, 12681, 6446, 294, 264, 28256, 11, 293, 577, 281, 6608, 30364, 13, 51666], "temperature": 0.0, "avg_logprob": -0.2058086395263672, "compression_ratio": 1.7685185185185186, "no_speech_prob": 0.008184966631233692}, {"id": 120, "seek": 53032, "start": 530.32, "end": 535.9200000000001, "text": " This way using EBPF, and that's it was a packet filtering mechanism in the first place, that's", "tokens": [50364, 639, 636, 1228, 50148, 47, 37, 11, 293, 300, 311, 309, 390, 257, 20300, 30822, 7513, 294, 264, 700, 1081, 11, 300, 311, 50644], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 121, "seek": 53032, "start": 535.9200000000001, "end": 539.1600000000001, "text": " relatively easy to implement.", "tokens": [50644, 7226, 1858, 281, 4445, 13, 50806], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 122, "seek": 53032, "start": 539.1600000000001, "end": 540.7600000000001, "text": " So how does it look like in practice?", "tokens": [50806, 407, 577, 775, 309, 574, 411, 294, 3124, 30, 50886], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 123, "seek": 53032, "start": 540.7600000000001, "end": 543.8000000000001, "text": " So I've got two terminals.", "tokens": [50886, 407, 286, 600, 658, 732, 38579, 13, 51038], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 124, "seek": 53032, "start": 543.8000000000001, "end": 546.84, "text": " It's not live demo, sorry.", "tokens": [51038, 467, 311, 406, 1621, 10723, 11, 2597, 13, 51190], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 125, "seek": 53032, "start": 546.84, "end": 555.6800000000001, "text": " I use a rule, an IP table rule to drop packets, TCP packets, 1111, which is cloudflare DNS", "tokens": [51190, 286, 764, 257, 4978, 11, 364, 8671, 3199, 4978, 281, 3270, 30364, 11, 48965, 30364, 11, 2975, 5348, 11, 597, 307, 4588, 3423, 543, 35153, 51632], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 126, "seek": 53032, "start": 555.6800000000001, "end": 557.2800000000001, "text": " for example.", "tokens": [51632, 337, 1365, 13, 51712], "temperature": 0.0, "avg_logprob": -0.332167128721873, "compression_ratio": 1.4414414414414414, "no_speech_prob": 0.010322337970137596}, {"id": 127, "seek": 55728, "start": 557.28, "end": 566.68, "text": " And I call Peru, so here I have Peru destination host 1111 and TCP and destination port 80.", "tokens": [50364, 400, 286, 818, 31571, 11, 370, 510, 286, 362, 31571, 12236, 3975, 2975, 5348, 293, 48965, 293, 12236, 2436, 4688, 13, 50834], "temperature": 0.0, "avg_logprob": -0.20693177117241754, "compression_ratio": 1.5707070707070707, "no_speech_prob": 0.003298318712040782}, {"id": 128, "seek": 55728, "start": 566.68, "end": 573.8399999999999, "text": " And after I call Peru, it tells me that it loads all the, it loads my program and attaches", "tokens": [50834, 400, 934, 286, 818, 31571, 11, 309, 5112, 385, 300, 309, 12668, 439, 264, 11, 309, 12668, 452, 1461, 293, 49404, 51192], "temperature": 0.0, "avg_logprob": -0.20693177117241754, "compression_ratio": 1.5707070707070707, "no_speech_prob": 0.003298318712040782}, {"id": 129, "seek": 55728, "start": 573.8399999999999, "end": 575.92, "text": " all the K-Probes that I'm interested in.", "tokens": [51192, 439, 264, 591, 12, 12681, 6446, 300, 286, 478, 3102, 294, 13, 51296], "temperature": 0.0, "avg_logprob": -0.20693177117241754, "compression_ratio": 1.5707070707070707, "no_speech_prob": 0.003298318712040782}, {"id": 130, "seek": 55728, "start": 575.92, "end": 581.4, "text": " So that's 1500 probes in that case.", "tokens": [51296, 407, 300, 311, 22671, 1239, 279, 294, 300, 1389, 13, 51570], "temperature": 0.0, "avg_logprob": -0.20693177117241754, "compression_ratio": 1.5707070707070707, "no_speech_prob": 0.003298318712040782}, {"id": 131, "seek": 55728, "start": 581.4, "end": 584.4399999999999, "text": " And then in the first terminal, I type a curl 1111.", "tokens": [51570, 400, 550, 294, 264, 700, 14709, 11, 286, 2010, 257, 22591, 2975, 5348, 13, 51722], "temperature": 0.0, "avg_logprob": -0.20693177117241754, "compression_ratio": 1.5707070707070707, "no_speech_prob": 0.003298318712040782}, {"id": 132, "seek": 58444, "start": 584.44, "end": 589.7600000000001, "text": " What happens below is that I get a list of all the functions that process my packets.", "tokens": [50364, 708, 2314, 2507, 307, 300, 286, 483, 257, 1329, 295, 439, 264, 6828, 300, 1399, 452, 30364, 13, 50630], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 133, "seek": 58444, "start": 589.7600000000001, "end": 595.96, "text": " So I see a list on the right, IP local arts, IP local arts, NF hook slow, and so on and", "tokens": [50630, 407, 286, 536, 257, 1329, 322, 264, 558, 11, 8671, 2654, 8609, 11, 8671, 2654, 8609, 11, 13576, 6328, 2964, 11, 293, 370, 322, 293, 50940], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 134, "seek": 58444, "start": 595.96, "end": 596.96, "text": " so forth.", "tokens": [50940, 370, 5220, 13, 50990], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 135, "seek": 58444, "start": 596.96, "end": 597.96, "text": " Sorry.", "tokens": [50990, 4919, 13, 51040], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 136, "seek": 58444, "start": 597.96, "end": 604.5600000000001, "text": " Eventually I get K-free SKB mem, which is the function that is called once my SKB is", "tokens": [51040, 17586, 286, 483, 591, 12, 10792, 21483, 33, 1334, 11, 597, 307, 264, 2445, 300, 307, 1219, 1564, 452, 21483, 33, 307, 51370], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 137, "seek": 58444, "start": 604.5600000000001, "end": 608.4000000000001, "text": " free because it's been dropped by the IP tables rules.", "tokens": [51370, 1737, 570, 309, 311, 668, 8119, 538, 264, 8671, 8020, 4474, 13, 51562], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 138, "seek": 58444, "start": 608.4000000000001, "end": 613.1600000000001, "text": " The IP tables rules I can also see through the code to NF hook slow.", "tokens": [51562, 440, 8671, 8020, 4474, 286, 393, 611, 536, 807, 264, 3089, 281, 13576, 6328, 2964, 13, 51800], "temperature": 0.0, "avg_logprob": -0.2317996108741091, "compression_ratio": 1.6835443037974684, "no_speech_prob": 0.009321342222392559}, {"id": 139, "seek": 61316, "start": 613.24, "end": 617.68, "text": " So that gives me information about what's happening in terms of function.", "tokens": [50368, 407, 300, 2709, 385, 1589, 466, 437, 311, 2737, 294, 2115, 295, 2445, 13, 50590], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 140, "seek": 61316, "start": 617.68, "end": 622.9599999999999, "text": " It gives me information about the process that's been creating this packet in the first", "tokens": [50590, 467, 2709, 385, 1589, 466, 264, 1399, 300, 311, 668, 4084, 341, 20300, 294, 264, 700, 50854], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 141, "seek": 61316, "start": 622.9599999999999, "end": 628.68, "text": " place because on the, on the column in the middle, you can see that it's a curl process.", "tokens": [50854, 1081, 570, 322, 264, 11, 322, 264, 7738, 294, 264, 2808, 11, 291, 393, 536, 300, 309, 311, 257, 22591, 1399, 13, 51140], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 142, "seek": 61316, "start": 628.68, "end": 633.28, "text": " I get also information about the SKB, which is not useful by itself.", "tokens": [51140, 286, 483, 611, 1589, 466, 264, 21483, 33, 11, 597, 307, 406, 4420, 538, 2564, 13, 51370], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 143, "seek": 61316, "start": 633.28, "end": 638.6, "text": " This is the address of the SKB, but it allows me to be sure that this is one SKB that's", "tokens": [51370, 639, 307, 264, 2985, 295, 264, 21483, 33, 11, 457, 309, 4045, 385, 281, 312, 988, 300, 341, 307, 472, 21483, 33, 300, 311, 51636], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 144, "seek": 61316, "start": 638.6, "end": 639.6, "text": " being processed in the list.", "tokens": [51636, 885, 18846, 294, 264, 1329, 13, 51686], "temperature": 0.0, "avg_logprob": -0.1973872525351388, "compression_ratio": 1.839662447257384, "no_speech_prob": 0.006969220470637083}, {"id": 145, "seek": 63960, "start": 639.6, "end": 643.88, "text": " If I have several packets in this output, they will have different addresses.", "tokens": [50364, 759, 286, 362, 2940, 30364, 294, 341, 5598, 11, 436, 486, 362, 819, 16862, 13, 50578], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 146, "seek": 63960, "start": 643.88, "end": 649.8000000000001, "text": " It allows me to filter by SKB when I post process this information.", "tokens": [50578, 467, 4045, 385, 281, 6608, 538, 21483, 33, 562, 286, 2183, 1399, 341, 1589, 13, 50874], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 147, "seek": 63960, "start": 649.8000000000001, "end": 658.0, "text": " And once I exit from my Peru session, then it detaches all the processes we're loading.", "tokens": [50874, 400, 1564, 286, 11043, 490, 452, 31571, 5481, 11, 550, 309, 1141, 13272, 439, 264, 7555, 321, 434, 15114, 13, 51284], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 148, "seek": 63960, "start": 658.0, "end": 659.6, "text": " Okay.", "tokens": [51284, 1033, 13, 51364], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 149, "seek": 63960, "start": 659.6, "end": 663.6800000000001, "text": " So what fancy features do we have beyond the basic usage?", "tokens": [51364, 407, 437, 10247, 4122, 360, 321, 362, 4399, 264, 3875, 14924, 30, 51568], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 150, "seek": 63960, "start": 663.6800000000001, "end": 666.4, "text": " We have quite a number of options for Peru.", "tokens": [51568, 492, 362, 1596, 257, 1230, 295, 3956, 337, 31571, 13, 51704], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 151, "seek": 63960, "start": 666.4, "end": 668.8000000000001, "text": " So this is Peru dash dash help.", "tokens": [51704, 407, 341, 307, 31571, 8240, 8240, 854, 13, 51824], "temperature": 0.0, "avg_logprob": -0.27472690660126353, "compression_ratio": 1.5349794238683128, "no_speech_prob": 0.0018571304390206933}, {"id": 152, "seek": 66880, "start": 668.8, "end": 672.12, "text": " I won't go through all of them, but through a number of interesting ones.", "tokens": [50364, 286, 1582, 380, 352, 807, 439, 295, 552, 11, 457, 807, 257, 1230, 295, 1880, 2306, 13, 50530], "temperature": 0.0, "avg_logprob": -0.13052905082702637, "compression_ratio": 1.570281124497992, "no_speech_prob": 0.0018310083542019129}, {"id": 153, "seek": 66880, "start": 672.12, "end": 677.8, "text": " So before we go into the options, you might have noticed that the way I told you to focus", "tokens": [50530, 407, 949, 321, 352, 666, 264, 3956, 11, 291, 1062, 362, 5694, 300, 264, 636, 286, 1907, 291, 281, 1879, 50814], "temperature": 0.0, "avg_logprob": -0.13052905082702637, "compression_ratio": 1.570281124497992, "no_speech_prob": 0.0018310083542019129}, {"id": 154, "seek": 66880, "start": 677.8, "end": 685.64, "text": " on the packet with the 1111 destination was just the same syntax as for TCP.", "tokens": [50814, 322, 264, 20300, 365, 264, 2975, 5348, 12236, 390, 445, 264, 912, 28431, 382, 337, 48965, 13, 51206], "temperature": 0.0, "avg_logprob": -0.13052905082702637, "compression_ratio": 1.570281124497992, "no_speech_prob": 0.0018310083542019129}, {"id": 155, "seek": 66880, "start": 685.64, "end": 691.7199999999999, "text": " And we do have a support for pickup filters in Peru.", "tokens": [51206, 400, 321, 360, 362, 257, 1406, 337, 25328, 15995, 294, 31571, 13, 51510], "temperature": 0.0, "avg_logprob": -0.13052905082702637, "compression_ratio": 1.570281124497992, "no_speech_prob": 0.0018310083542019129}, {"id": 156, "seek": 66880, "start": 691.7199999999999, "end": 698.16, "text": " And the way this works is, so if I don't pass any filter, things are pretty much straightforward.", "tokens": [51510, 400, 264, 636, 341, 1985, 307, 11, 370, 498, 286, 500, 380, 1320, 604, 6608, 11, 721, 366, 1238, 709, 15325, 13, 51832], "temperature": 0.0, "avg_logprob": -0.13052905082702637, "compression_ratio": 1.570281124497992, "no_speech_prob": 0.0018310083542019129}, {"id": 157, "seek": 69816, "start": 698.16, "end": 704.36, "text": " I'm using my BPF program, uh, compared from Peru loaded, uh, into the kernel.", "tokens": [50364, 286, 478, 1228, 452, 40533, 37, 1461, 11, 2232, 11, 5347, 490, 31571, 13210, 11, 2232, 11, 666, 264, 28256, 13, 50674], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 158, "seek": 69816, "start": 704.36, "end": 712.4, "text": " Now if I do have a filter, I turn this into some CBPF bytecode using the leap pickup.", "tokens": [50674, 823, 498, 286, 360, 362, 257, 6608, 11, 286, 1261, 341, 666, 512, 18745, 47, 37, 40846, 22332, 1228, 264, 19438, 25328, 13, 51076], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 159, "seek": 69816, "start": 712.4, "end": 714.52, "text": " CBPF is not exactly the same thing as a BPF.", "tokens": [51076, 18745, 47, 37, 307, 406, 2293, 264, 912, 551, 382, 257, 40533, 37, 13, 51182], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 160, "seek": 69816, "start": 714.52, "end": 717.48, "text": " So I cannot use it just like this.", "tokens": [51182, 407, 286, 2644, 764, 309, 445, 411, 341, 13, 51330], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 161, "seek": 69816, "start": 717.48, "end": 724.0799999999999, "text": " So Peru uses another tool underneath, which is CBPFC.", "tokens": [51330, 407, 31571, 4960, 1071, 2290, 7223, 11, 597, 307, 18745, 47, 18671, 13, 51660], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 162, "seek": 69816, "start": 724.0799999999999, "end": 725.0799999999999, "text": " Hang on.", "tokens": [51660, 14070, 322, 13, 51710], "temperature": 0.0, "avg_logprob": -0.33223515933321923, "compression_ratio": 1.4854368932038835, "no_speech_prob": 0.030036743730306625}, {"id": 163, "seek": 72508, "start": 725.08, "end": 737.0, "text": " And it turns, uh, this CBPF bytecode into a BPF bytecode.", "tokens": [50364, 400, 309, 4523, 11, 2232, 11, 341, 18745, 47, 37, 40846, 22332, 666, 257, 40533, 37, 40846, 22332, 13, 50960], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 164, "seek": 72508, "start": 737.0, "end": 742.0, "text": " And then we get this CBPF bytecode and we inject it into the regular program.", "tokens": [50960, 400, 550, 321, 483, 341, 18745, 47, 37, 40846, 22332, 293, 321, 10711, 309, 666, 264, 3890, 1461, 13, 51210], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 165, "seek": 72508, "start": 742.0, "end": 743.0, "text": " Okay.", "tokens": [51210, 1033, 13, 51260], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 166, "seek": 72508, "start": 743.0, "end": 745.72, "text": " We've got everything in place.", "tokens": [51260, 492, 600, 658, 1203, 294, 1081, 13, 51396], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 167, "seek": 72508, "start": 745.72, "end": 748.12, "text": " We load it into the kernel and that's it.", "tokens": [51396, 492, 3677, 309, 666, 264, 28256, 293, 300, 311, 309, 13, 51516], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 168, "seek": 72508, "start": 748.12, "end": 751.9200000000001, "text": " That should be, it's easier after that.", "tokens": [51516, 663, 820, 312, 11, 309, 311, 3571, 934, 300, 13, 51706], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 169, "seek": 72508, "start": 751.9200000000001, "end": 752.9200000000001, "text": " Okay.", "tokens": [51706, 1033, 13, 51756], "temperature": 0.0, "avg_logprob": -0.2633677416069563, "compression_ratio": 1.5476190476190477, "no_speech_prob": 0.002873153192922473}, {"id": 170, "seek": 75292, "start": 753.92, "end": 754.92, "text": " Okay.", "tokens": [50414, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 171, "seek": 75292, "start": 754.92, "end": 758.5999999999999, "text": " Some other features, uh, we can trace the kernel itself.", "tokens": [50464, 2188, 661, 4122, 11, 2232, 11, 321, 393, 13508, 264, 28256, 2564, 13, 50648], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 172, "seek": 75292, "start": 758.5999999999999, "end": 762.0799999999999, "text": " We can, uh, we can trace kernel modules as well.", "tokens": [50648, 492, 393, 11, 2232, 11, 321, 393, 13508, 28256, 16679, 382, 731, 13, 50822], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 173, "seek": 75292, "start": 762.0799999999999, "end": 767.68, "text": " We've got a few options to trace either a specific kernel module or all modules.", "tokens": [50822, 492, 600, 658, 257, 1326, 3956, 281, 13508, 2139, 257, 2685, 28256, 10088, 420, 439, 16679, 13, 51102], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 174, "seek": 75292, "start": 767.68, "end": 773.36, "text": " Uh, so if you process packets with functional, take SKBs in your module, you can also, uh,", "tokens": [51102, 4019, 11, 370, 498, 291, 1399, 30364, 365, 11745, 11, 747, 21483, 33, 82, 294, 428, 10088, 11, 291, 393, 611, 11, 2232, 11, 51386], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 175, "seek": 75292, "start": 773.36, "end": 776.88, "text": " follow what's happening in them.", "tokens": [51386, 1524, 437, 311, 2737, 294, 552, 13, 51562], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 176, "seek": 75292, "start": 776.88, "end": 780.28, "text": " We've got a choice of backends for, uh, for Peru.", "tokens": [51562, 492, 600, 658, 257, 3922, 295, 646, 2581, 337, 11, 2232, 11, 337, 31571, 13, 51732], "temperature": 0.0, "avg_logprob": -0.2801607969765351, "compression_ratio": 1.7023255813953488, "no_speech_prob": 0.0007490341085940599}, {"id": 177, "seek": 78028, "start": 780.28, "end": 785.4, "text": " So there are two currently, which is the regular K probes and the multi K probes.", "tokens": [50364, 407, 456, 366, 732, 4362, 11, 597, 307, 264, 3890, 591, 1239, 279, 293, 264, 4825, 591, 1239, 279, 13, 50620], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 178, "seek": 78028, "start": 785.4, "end": 786.8399999999999, "text": " So what do the multi K probes do?", "tokens": [50620, 407, 437, 360, 264, 4825, 591, 1239, 279, 360, 30, 50692], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 179, "seek": 78028, "start": 786.8399999999999, "end": 791.76, "text": " They allow you to, uh, well, you don't really realize it when using Peru, but they allow", "tokens": [50692, 814, 2089, 291, 281, 11, 2232, 11, 731, 11, 291, 500, 380, 534, 4325, 309, 562, 1228, 31571, 11, 457, 436, 2089, 50938], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 180, "seek": 78028, "start": 791.76, "end": 796.0, "text": " Peru to load a bunch of K probes, uh, all at the same time.", "tokens": [50938, 31571, 281, 3677, 257, 3840, 295, 591, 1239, 279, 11, 2232, 11, 439, 412, 264, 912, 565, 13, 51150], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 181, "seek": 78028, "start": 796.0, "end": 801.52, "text": " So instead of loading your probes one after the other, you create an array of probes and", "tokens": [51150, 407, 2602, 295, 15114, 428, 1239, 279, 472, 934, 264, 661, 11, 291, 1884, 364, 10225, 295, 1239, 279, 293, 51426], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 182, "seek": 78028, "start": 801.52, "end": 806.8399999999999, "text": " you pass this array with the size of the array to the BPF system code and then everything", "tokens": [51426, 291, 1320, 341, 10225, 365, 264, 2744, 295, 264, 10225, 281, 264, 40533, 37, 1185, 3089, 293, 550, 1203, 51692], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 183, "seek": 78028, "start": 806.8399999999999, "end": 808.92, "text": " goes nearly at once.", "tokens": [51692, 1709, 6217, 412, 1564, 13, 51796], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 184, "seek": 78028, "start": 808.92, "end": 810.12, "text": " So it's faster.", "tokens": [51796, 407, 309, 311, 4663, 13, 51856], "temperature": 0.0, "avg_logprob": -0.13163324342156849, "compression_ratio": 1.7712177121771218, "no_speech_prob": 0.004876398015767336}, {"id": 185, "seek": 81012, "start": 810.12, "end": 812.2, "text": " How much faster exactly?", "tokens": [50364, 1012, 709, 4663, 2293, 30, 50468], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 186, "seek": 81012, "start": 812.2, "end": 817.4, "text": " So if I could Peru on my laptop with, uh, the backend K probes, a legacy one, which", "tokens": [50468, 407, 498, 286, 727, 31571, 322, 452, 10732, 365, 11, 2232, 11, 264, 38087, 591, 1239, 279, 11, 257, 11711, 472, 11, 597, 50728], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 187, "seek": 81012, "start": 817.4, "end": 823.36, "text": " is, uh, available, which has been available for a long time, the new one is for five", "tokens": [50728, 307, 11, 2232, 11, 2435, 11, 597, 575, 668, 2435, 337, 257, 938, 565, 11, 264, 777, 472, 307, 337, 1732, 51026], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 188, "seek": 81012, "start": 823.36, "end": 827.68, "text": " dot 18, uh, plus only.", "tokens": [51026, 5893, 2443, 11, 2232, 11, 1804, 787, 13, 51242], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 189, "seek": 81012, "start": 827.68, "end": 831.28, "text": " So I get, um, a few seconds to attach other probes.", "tokens": [51242, 407, 286, 483, 11, 1105, 11, 257, 1326, 3949, 281, 5085, 661, 1239, 279, 13, 51422], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 190, "seek": 81012, "start": 831.28, "end": 838.24, "text": " That's seven seconds here, but it takes one minute, 37, uh, seconds to, uh, to attach,", "tokens": [51422, 663, 311, 3407, 3949, 510, 11, 457, 309, 2516, 472, 3456, 11, 13435, 11, 2232, 11, 3949, 281, 11, 2232, 11, 281, 5085, 11, 51770], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 191, "seek": 81012, "start": 838.24, "end": 839.48, "text": " to detach other probes.", "tokens": [51770, 281, 43245, 661, 1239, 279, 13, 51832], "temperature": 0.0, "avg_logprob": -0.24927203938112422, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.0011988789774477482}, {"id": 192, "seek": 83948, "start": 839.48, "end": 841.16, "text": " That's not great.", "tokens": [50364, 663, 311, 406, 869, 13, 50448], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 193, "seek": 83948, "start": 841.16, "end": 848.08, "text": " Now if I do multi K probes, uh, that's nearly instantaneous for attaching everything.", "tokens": [50448, 823, 498, 286, 360, 4825, 591, 1239, 279, 11, 2232, 11, 300, 311, 6217, 45596, 337, 39074, 1203, 13, 50794], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 194, "seek": 83948, "start": 848.08, "end": 852.84, "text": " Like there's, there's no difference on that test and once again for the touching everything.", "tokens": [50794, 1743, 456, 311, 11, 456, 311, 572, 2649, 322, 300, 1500, 293, 1564, 797, 337, 264, 11175, 1203, 13, 51032], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 195, "seek": 83948, "start": 852.84, "end": 855.8000000000001, "text": " So that's quite faster.", "tokens": [51032, 407, 300, 311, 1596, 4663, 13, 51180], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 196, "seek": 83948, "start": 855.8000000000001, "end": 857.8000000000001, "text": " That's a good improvement.", "tokens": [51180, 663, 311, 257, 665, 10444, 13, 51280], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 197, "seek": 83948, "start": 857.8000000000001, "end": 863.76, "text": " Um, here are a few other interesting functions.", "tokens": [51280, 3301, 11, 510, 366, 257, 1326, 661, 1880, 6828, 13, 51578], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 198, "seek": 83948, "start": 863.76, "end": 866.0, "text": " Um, they're all in the same box.", "tokens": [51578, 3301, 11, 436, 434, 439, 294, 264, 912, 2424, 13, 51690], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 199, "seek": 83948, "start": 866.0, "end": 868.04, "text": " They are not exactly related to each other.", "tokens": [51690, 814, 366, 406, 2293, 4077, 281, 1184, 661, 13, 51792], "temperature": 0.0, "avg_logprob": -0.3144054786831725, "compression_ratio": 1.6244541484716157, "no_speech_prob": 0.0006426929612644017}, {"id": 200, "seek": 86804, "start": 868.04, "end": 875.64, "text": " Uh, so we can filter also by a namespace for Peru, like looking for packets in one given", "tokens": [50364, 4019, 11, 370, 321, 393, 6608, 611, 538, 257, 5288, 17940, 337, 31571, 11, 411, 1237, 337, 30364, 294, 472, 2212, 50744], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 201, "seek": 86804, "start": 875.64, "end": 877.0799999999999, "text": " namespace and not the others.", "tokens": [50744, 5288, 17940, 293, 406, 264, 2357, 13, 50816], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 202, "seek": 86804, "start": 877.0799999999999, "end": 878.0799999999999, "text": " That's totally possible.", "tokens": [50816, 663, 311, 3879, 1944, 13, 50866], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 203, "seek": 86804, "start": 878.0799999999999, "end": 883.48, "text": " That's, I think that's relatively easy to do from the BPF perspective because I believe", "tokens": [50866, 663, 311, 11, 286, 519, 300, 311, 7226, 1858, 281, 360, 490, 264, 40533, 37, 4585, 570, 286, 1697, 51136], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 204, "seek": 86804, "start": 883.48, "end": 888.4, "text": " the, the namespace is directly available from the SKB itself.", "tokens": [51136, 264, 11, 264, 5288, 17940, 307, 3838, 2435, 490, 264, 21483, 33, 2564, 13, 51382], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 205, "seek": 86804, "start": 888.4, "end": 895.92, "text": " Uh, we can filter, uh, TC programs themselves, which are not regular canal functions, uh,", "tokens": [51382, 4019, 11, 321, 393, 6608, 11, 2232, 11, 34150, 4268, 2969, 11, 597, 366, 406, 3890, 9911, 6828, 11, 2232, 11, 51758], "temperature": 0.0, "avg_logprob": -0.2729311461495881, "compression_ratio": 1.6092436974789917, "no_speech_prob": 0.004203313961625099}, {"id": 206, "seek": 89592, "start": 895.92, "end": 899.68, "text": " just like, uh, the one we have in the networking stack.", "tokens": [50364, 445, 411, 11, 2232, 11, 264, 472, 321, 362, 294, 264, 17985, 8630, 13, 50552], "temperature": 0.0, "avg_logprob": -0.2311536938536401, "compression_ratio": 1.5982905982905984, "no_speech_prob": 0.026280371472239494}, {"id": 207, "seek": 89592, "start": 899.68, "end": 903.8399999999999, "text": " Uh, but because your TC programs can affect the packet processing, that's also interesting", "tokens": [50552, 4019, 11, 457, 570, 428, 34150, 4268, 393, 3345, 264, 20300, 9007, 11, 300, 311, 611, 1880, 50760], "temperature": 0.0, "avg_logprob": -0.2311536938536401, "compression_ratio": 1.5982905982905984, "no_speech_prob": 0.026280371472239494}, {"id": 208, "seek": 89592, "start": 903.8399999999999, "end": 906.1999999999999, "text": " to, to follow what's happening on them.", "tokens": [50760, 281, 11, 281, 1524, 437, 311, 2737, 322, 552, 13, 50878], "temperature": 0.0, "avg_logprob": -0.2311536938536401, "compression_ratio": 1.5982905982905984, "no_speech_prob": 0.026280371472239494}, {"id": 209, "seek": 89592, "start": 906.1999999999999, "end": 913.24, "text": " And, uh, the way it works is by using some specific BPF, uh, programs, looking on what", "tokens": [50878, 400, 11, 2232, 11, 264, 636, 309, 1985, 307, 538, 1228, 512, 2685, 40533, 37, 11, 2232, 11, 4268, 11, 1237, 322, 437, 51230], "temperature": 0.0, "avg_logprob": -0.2311536938536401, "compression_ratio": 1.5982905982905984, "no_speech_prob": 0.026280371472239494}, {"id": 210, "seek": 89592, "start": 913.24, "end": 921.28, "text": " is what we call the EF and three FX it mechanisms to plug directly onto, uh, those, uh, TC programs.", "tokens": [51230, 307, 437, 321, 818, 264, 462, 37, 293, 1045, 37849, 309, 15902, 281, 5452, 3838, 3911, 11, 2232, 11, 729, 11, 2232, 11, 34150, 4268, 13, 51632], "temperature": 0.0, "avg_logprob": -0.2311536938536401, "compression_ratio": 1.5982905982905984, "no_speech_prob": 0.026280371472239494}, {"id": 211, "seek": 92128, "start": 921.28, "end": 925.88, "text": " So we're looking at BPF programs with other BPF programs.", "tokens": [50364, 407, 321, 434, 1237, 412, 40533, 37, 4268, 365, 661, 40533, 37, 4268, 13, 50594], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 212, "seek": 92128, "start": 925.88, "end": 927.88, "text": " Yes, it works.", "tokens": [50594, 1079, 11, 309, 1985, 13, 50694], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 213, "seek": 92128, "start": 927.88, "end": 934.16, "text": " Uh, we can also track SKBs that change.", "tokens": [50694, 4019, 11, 321, 393, 611, 2837, 21483, 33, 82, 300, 1319, 13, 51008], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 214, "seek": 92128, "start": 934.16, "end": 935.16, "text": " So when does it change?", "tokens": [51008, 407, 562, 775, 309, 1319, 30, 51058], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 215, "seek": 92128, "start": 935.16, "end": 942.16, "text": " So for example, if I, uh, clone my SKB or copy my SKB, so the way we do that is, uh,", "tokens": [51058, 407, 337, 1365, 11, 498, 286, 11, 2232, 11, 26506, 452, 21483, 33, 420, 5055, 452, 21483, 33, 11, 370, 264, 636, 321, 360, 300, 307, 11, 2232, 11, 51408], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 216, "seek": 92128, "start": 942.16, "end": 950.4, "text": " when the option is enabled, we, uh, hook onto SKB clone, SKB copy at the end of the functions", "tokens": [51408, 562, 264, 3614, 307, 15172, 11, 321, 11, 2232, 11, 6328, 3911, 21483, 33, 26506, 11, 21483, 33, 5055, 412, 264, 917, 295, 264, 6828, 51820], "temperature": 0.0, "avg_logprob": -0.1589863731747582, "compression_ratio": 1.5517241379310345, "no_speech_prob": 0.010767209343612194}, {"id": 217, "seek": 95040, "start": 950.4, "end": 951.4, "text": " actually.", "tokens": [50364, 767, 13, 50414], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 218, "seek": 95040, "start": 951.4, "end": 957.52, "text": " And we, uh, we say, okay, this packet was interesting when I entered the function.", "tokens": [50414, 400, 321, 11, 2232, 11, 321, 584, 11, 1392, 11, 341, 20300, 390, 1880, 562, 286, 9065, 264, 2445, 13, 50720], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 219, "seek": 95040, "start": 957.52, "end": 962.78, "text": " And when I exit the function, I mark it as a packet of interest in a BPF map.", "tokens": [50720, 400, 562, 286, 11043, 264, 2445, 11, 286, 1491, 309, 382, 257, 20300, 295, 1179, 294, 257, 40533, 37, 4471, 13, 50983], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 220, "seek": 95040, "start": 962.78, "end": 968.92, "text": " So in addition to filtering the, uh, the packets that I usually want that I provided the, uh,", "tokens": [50983, 407, 294, 4500, 281, 30822, 264, 11, 2232, 11, 264, 30364, 300, 286, 2673, 528, 300, 286, 5649, 264, 11, 2232, 11, 51290], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 221, "seek": 95040, "start": 968.92, "end": 976.12, "text": " fitter in the first place for, I also check for each, uh, for each packet if it's present", "tokens": [51290, 3318, 391, 294, 264, 700, 1081, 337, 11, 286, 611, 1520, 337, 1184, 11, 2232, 11, 337, 1184, 20300, 498, 309, 311, 1974, 51650], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 222, "seek": 95040, "start": 976.12, "end": 979.16, "text": " in the map of the packets that I want to additionally follow.", "tokens": [51650, 294, 264, 4471, 295, 264, 30364, 300, 286, 528, 281, 43181, 1524, 13, 51802], "temperature": 0.0, "avg_logprob": -0.16165733337402344, "compression_ratio": 1.8407079646017699, "no_speech_prob": 0.05380741506814957}, {"id": 223, "seek": 97916, "start": 979.16, "end": 984.8399999999999, "text": " So that helps me, uh, following packets that may have changed.", "tokens": [50364, 407, 300, 3665, 385, 11, 2232, 11, 3480, 30364, 300, 815, 362, 3105, 13, 50648], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 224, "seek": 97916, "start": 984.8399999999999, "end": 991.6, "text": " We've got some interesting options for, um, changing the display or adding more information", "tokens": [50648, 492, 600, 658, 512, 1880, 3956, 337, 11, 1105, 11, 4473, 264, 4674, 420, 5127, 544, 1589, 50986], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 225, "seek": 97916, "start": 991.6, "end": 992.6, "text": " on display.", "tokens": [50986, 322, 4674, 13, 51036], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 226, "seek": 97916, "start": 992.6, "end": 995.7199999999999, "text": " So I can add, uh, meter data on the socket buffers.", "tokens": [51036, 407, 286, 393, 909, 11, 2232, 11, 9255, 1412, 322, 264, 19741, 9204, 433, 13, 51192], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 227, "seek": 97916, "start": 995.7199999999999, "end": 997.68, "text": " I can add, uh, the full SKB.", "tokens": [51192, 286, 393, 909, 11, 2232, 11, 264, 1577, 21483, 33, 13, 51290], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 228, "seek": 97916, "start": 997.68, "end": 999.4399999999999, "text": " I can add the call stack.", "tokens": [51290, 286, 393, 909, 264, 818, 8630, 13, 51378], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 229, "seek": 97916, "start": 999.4399999999999, "end": 1000.6, "text": " Here's an example.", "tokens": [51378, 1692, 311, 364, 1365, 13, 51436], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 230, "seek": 97916, "start": 1000.6, "end": 1004.9599999999999, "text": " I can add the, uh, the, the, the four to pull for the packets.", "tokens": [51436, 286, 393, 909, 264, 11, 2232, 11, 264, 11, 264, 11, 264, 1451, 281, 2235, 337, 264, 30364, 13, 51654], "temperature": 0.0, "avg_logprob": -0.19463619617147182, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.002105497056618333}, {"id": 231, "seek": 100496, "start": 1004.96, "end": 1010.4000000000001, "text": " So in this example, we have, uh, two functions that, uh, process my packets here.", "tokens": [50364, 407, 294, 341, 1365, 11, 321, 362, 11, 2232, 11, 732, 6828, 300, 11, 2232, 11, 1399, 452, 30364, 510, 13, 50636], "temperature": 0.0, "avg_logprob": -0.20005140758696058, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.002009348478168249}, {"id": 232, "seek": 100496, "start": 1010.4000000000001, "end": 1016.1600000000001, "text": " And, uh, below each function that is displayed, we have the full, uh, call stack for the functions.", "tokens": [50636, 400, 11, 2232, 11, 2507, 1184, 2445, 300, 307, 16372, 11, 321, 362, 264, 1577, 11, 2232, 11, 818, 8630, 337, 264, 6828, 13, 50924], "temperature": 0.0, "avg_logprob": -0.20005140758696058, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.002009348478168249}, {"id": 233, "seek": 100496, "start": 1016.1600000000001, "end": 1020.2, "text": " So that's quite helpful to understand exactly what's happening in the kernel and how it", "tokens": [50924, 407, 300, 311, 1596, 4961, 281, 1223, 2293, 437, 311, 2737, 294, 264, 28256, 293, 577, 309, 51126], "temperature": 0.0, "avg_logprob": -0.20005140758696058, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.002009348478168249}, {"id": 234, "seek": 100496, "start": 1020.2, "end": 1023.0400000000001, "text": " goes, uh, in terms of processing.", "tokens": [51126, 1709, 11, 2232, 11, 294, 2115, 295, 9007, 13, 51268], "temperature": 0.0, "avg_logprob": -0.20005140758696058, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.002009348478168249}, {"id": 235, "seek": 100496, "start": 1023.0400000000001, "end": 1028.72, "text": " So to real life examples that we've had, uh, when working on Cydium trying to debug things", "tokens": [51268, 407, 281, 957, 993, 5110, 300, 321, 600, 632, 11, 2232, 11, 562, 1364, 322, 383, 6655, 2197, 1382, 281, 24083, 721, 51552], "temperature": 0.0, "avg_logprob": -0.20005140758696058, "compression_ratio": 1.7056277056277056, "no_speech_prob": 0.002009348478168249}, {"id": 236, "seek": 102872, "start": 1028.72, "end": 1035.1200000000001, "text": " on Cydium, which is a, a CNI for communities with, uh, a number of things related to networking", "tokens": [50364, 322, 383, 6655, 2197, 11, 597, 307, 257, 11, 257, 14589, 40, 337, 4456, 365, 11, 2232, 11, 257, 1230, 295, 721, 4077, 281, 17985, 50684], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 237, "seek": 102872, "start": 1035.1200000000001, "end": 1037.8, "text": " and sometimes, uh, complex cases.", "tokens": [50684, 293, 2171, 11, 2232, 11, 3997, 3331, 13, 50818], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 238, "seek": 102872, "start": 1037.8, "end": 1044.3600000000001, "text": " The first one is, uh, MTU configuration, uh, error, uh, which we had to debug at some", "tokens": [50818, 440, 700, 472, 307, 11, 2232, 11, 37333, 52, 11694, 11, 2232, 11, 6713, 11, 2232, 11, 597, 321, 632, 281, 24083, 412, 512, 51146], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 239, "seek": 102872, "start": 1044.3600000000001, "end": 1045.3600000000001, "text": " point.", "tokens": [51146, 935, 13, 51196], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 240, "seek": 102872, "start": 1045.3600000000001, "end": 1050.76, "text": " Uh, so we have a, sorry, we have a very simple setup with the packets arriving on the interface", "tokens": [51196, 4019, 11, 370, 321, 362, 257, 11, 2597, 11, 321, 362, 257, 588, 2199, 8657, 365, 264, 30364, 22436, 322, 264, 9226, 51466], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 241, "seek": 102872, "start": 1050.76, "end": 1057.24, "text": " and the MTU on the, uh, on the node interface, not the same as the one on the VETH interface.", "tokens": [51466, 293, 264, 37333, 52, 322, 264, 11, 2232, 11, 322, 264, 9984, 9226, 11, 406, 264, 912, 382, 264, 472, 322, 264, 691, 36, 9620, 9226, 13, 51790], "temperature": 0.0, "avg_logprob": -0.19049117604240043, "compression_ratio": 1.6954732510288066, "no_speech_prob": 0.027005484327673912}, {"id": 242, "seek": 105724, "start": 1057.24, "end": 1063.48, "text": " And, uh, it was, uh, relatively easy to find out in the, uh, the output from Peru that", "tokens": [50364, 400, 11, 2232, 11, 309, 390, 11, 2232, 11, 7226, 1858, 281, 915, 484, 294, 264, 11, 2232, 11, 264, 5598, 490, 31571, 300, 50676], "temperature": 0.0, "avg_logprob": -0.20648139657326114, "compression_ratio": 1.7736842105263158, "no_speech_prob": 0.028464362025260925}, {"id": 243, "seek": 105724, "start": 1063.48, "end": 1072.0, "text": " the MTU, uh, is not the same, uh, that, well, is lower than the length of the packets.", "tokens": [50676, 264, 37333, 52, 11, 2232, 11, 307, 406, 264, 912, 11, 2232, 11, 300, 11, 731, 11, 307, 3126, 813, 264, 4641, 295, 264, 30364, 13, 51102], "temperature": 0.0, "avg_logprob": -0.20648139657326114, "compression_ratio": 1.7736842105263158, "no_speech_prob": 0.028464362025260925}, {"id": 244, "seek": 105724, "start": 1072.0, "end": 1077.16, "text": " So the only thing I had to do to get this is to, uh, to, um, add the output to the information", "tokens": [51102, 407, 264, 787, 551, 286, 632, 281, 360, 281, 483, 341, 307, 281, 11, 2232, 11, 281, 11, 1105, 11, 909, 264, 5598, 281, 264, 1589, 51360], "temperature": 0.0, "avg_logprob": -0.20648139657326114, "compression_ratio": 1.7736842105263158, "no_speech_prob": 0.028464362025260925}, {"id": 245, "seek": 105724, "start": 1077.16, "end": 1084.64, "text": " to get the, uh, the information about the, the packet that comes in.", "tokens": [51360, 281, 483, 264, 11, 2232, 11, 264, 1589, 466, 264, 11, 264, 20300, 300, 1487, 294, 13, 51734], "temperature": 0.0, "avg_logprob": -0.20648139657326114, "compression_ratio": 1.7736842105263158, "no_speech_prob": 0.028464362025260925}, {"id": 246, "seek": 108464, "start": 1084.64, "end": 1090.4, "text": " Another slightly more complex example is, um, so I had, that was in kind, so I had Docker", "tokens": [50364, 3996, 4748, 544, 3997, 1365, 307, 11, 1105, 11, 370, 286, 632, 11, 300, 390, 294, 733, 11, 370, 286, 632, 33772, 50652], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 247, "seek": 108464, "start": 1090.4, "end": 1091.72, "text": " network in the middle.", "tokens": [50652, 3209, 294, 264, 2808, 13, 50718], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 248, "seek": 108464, "start": 1091.72, "end": 1099.64, "text": " I had, uh, this configuration with a pod trying to curl to the outside and, uh, hitting an", "tokens": [50718, 286, 632, 11, 2232, 11, 341, 11694, 365, 257, 2497, 1382, 281, 1262, 75, 281, 264, 2380, 293, 11, 2232, 11, 8850, 364, 51114], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 249, "seek": 108464, "start": 1099.64, "end": 1104.88, "text": " IP table rule, uh, leading to masquerading the packets.", "tokens": [51114, 8671, 3199, 4978, 11, 2232, 11, 5775, 281, 2300, 8035, 8166, 264, 30364, 13, 51376], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 250, "seek": 108464, "start": 1104.88, "end": 1109.0400000000002, "text": " So my packet gets masquerading with the address of the node interface.", "tokens": [51376, 407, 452, 20300, 2170, 2300, 8035, 8166, 365, 264, 2985, 295, 264, 9984, 9226, 13, 51584], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 251, "seek": 108464, "start": 1109.0400000000002, "end": 1110.3600000000001, "text": " That goes to the internet.", "tokens": [51584, 663, 1709, 281, 264, 4705, 13, 51650], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 252, "seek": 108464, "start": 1110.3600000000001, "end": 1111.3600000000001, "text": " Okay.", "tokens": [51650, 1033, 13, 51700], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 253, "seek": 108464, "start": 1111.3600000000001, "end": 1112.3600000000001, "text": " That worked fine.", "tokens": [51700, 663, 2732, 2489, 13, 51750], "temperature": 0.0, "avg_logprob": -0.24157366621384926, "compression_ratio": 1.6565217391304348, "no_speech_prob": 0.17225515842437744}, {"id": 254, "seek": 111236, "start": 1112.36, "end": 1116.76, "text": " So in the second scenario, we checked that the packets were also, uh, currently masqueraded", "tokens": [50364, 407, 294, 264, 1150, 9005, 11, 321, 10033, 300, 264, 30364, 645, 611, 11, 2232, 11, 4362, 2300, 8035, 12777, 50584], "temperature": 0.0, "avg_logprob": -0.21239458719889323, "compression_ratio": 1.8211009174311927, "no_speech_prob": 0.006230244878679514}, {"id": 255, "seek": 111236, "start": 1116.76, "end": 1119.9199999999998, "text": " or not masqueraded when going to the node.", "tokens": [50584, 420, 406, 2300, 8035, 12777, 562, 516, 281, 264, 9984, 13, 50742], "temperature": 0.0, "avg_logprob": -0.21239458719889323, "compression_ratio": 1.8211009174311927, "no_speech_prob": 0.006230244878679514}, {"id": 256, "seek": 111236, "start": 1119.9199999999998, "end": 1125.32, "text": " And we have a second rule, actually, that was not displayed on the first, uh, case, which", "tokens": [50742, 400, 321, 362, 257, 1150, 4978, 11, 767, 11, 300, 390, 406, 16372, 322, 264, 700, 11, 2232, 11, 1389, 11, 597, 51012], "temperature": 0.0, "avg_logprob": -0.21239458719889323, "compression_ratio": 1.8211009174311927, "no_speech_prob": 0.006230244878679514}, {"id": 257, "seek": 111236, "start": 1125.32, "end": 1134.32, "text": " should, um, prevent packets going to the other node to, uh, from being masquerading.", "tokens": [51012, 820, 11, 1105, 11, 4871, 30364, 516, 281, 264, 661, 9984, 281, 11, 2232, 11, 490, 885, 2300, 8035, 8166, 13, 51462], "temperature": 0.0, "avg_logprob": -0.21239458719889323, "compression_ratio": 1.8211009174311927, "no_speech_prob": 0.006230244878679514}, {"id": 258, "seek": 111236, "start": 1134.32, "end": 1138.9599999999998, "text": " And so the packet should go straight to the other interface, should not change, uh, its", "tokens": [51462, 400, 370, 264, 20300, 820, 352, 2997, 281, 264, 661, 9226, 11, 820, 406, 1319, 11, 2232, 11, 1080, 51694], "temperature": 0.0, "avg_logprob": -0.21239458719889323, "compression_ratio": 1.8211009174311927, "no_speech_prob": 0.006230244878679514}, {"id": 259, "seek": 113896, "start": 1138.96, "end": 1143.96, "text": " IP address, but the packet never arrived.", "tokens": [50364, 8671, 2985, 11, 457, 264, 20300, 1128, 6678, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 260, "seek": 113896, "start": 1143.96, "end": 1144.96, "text": " So what happens?", "tokens": [50614, 407, 437, 2314, 30, 50664], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 261, "seek": 113896, "start": 1144.96, "end": 1147.32, "text": " So if you write the title, maybe you have an idea already.", "tokens": [50664, 407, 498, 291, 2464, 264, 4876, 11, 1310, 291, 362, 364, 1558, 1217, 13, 50782], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 262, "seek": 113896, "start": 1147.32, "end": 1153.8400000000001, "text": " Uh, we thought that the packet was not being masqueraded as we expected.", "tokens": [50782, 4019, 11, 321, 1194, 300, 264, 20300, 390, 406, 885, 2300, 8035, 12777, 382, 321, 5176, 13, 51108], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 263, "seek": 113896, "start": 1153.8400000000001, "end": 1160.04, "text": " We thought that, uh, the IP tables rules were not being applied and we could have maybe", "tokens": [51108, 492, 1194, 300, 11, 2232, 11, 264, 8671, 8020, 4474, 645, 406, 885, 6456, 293, 321, 727, 362, 1310, 51418], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 264, "seek": 113896, "start": 1160.04, "end": 1165.0, "text": " found the issue, uh, differently, but, uh, Peru helped us to quickly confirm in that", "tokens": [51418, 1352, 264, 2734, 11, 2232, 11, 7614, 11, 457, 11, 2232, 11, 31571, 4254, 505, 281, 2661, 9064, 294, 300, 51666], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 265, "seek": 113896, "start": 1165.0, "end": 1168.8400000000001, "text": " case of the masquerading is indeed, uh, occurring.", "tokens": [51666, 1389, 295, 264, 2300, 8035, 8166, 307, 6451, 11, 2232, 11, 18386, 13, 51858], "temperature": 0.0, "avg_logprob": -0.1592636959893363, "compression_ratio": 1.6693548387096775, "no_speech_prob": 0.008277672342956066}, {"id": 266, "seek": 116884, "start": 1168.84, "end": 1173.76, "text": " So that's what you can observe on that, um, sample, uh, output.", "tokens": [50364, 407, 300, 311, 437, 291, 393, 11441, 322, 300, 11, 1105, 11, 6889, 11, 2232, 11, 5598, 13, 50610], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 267, "seek": 116884, "start": 1173.76, "end": 1178.84, "text": " We can see that we're hitting NF hook slow and we can also observe for the same SKB", "tokens": [50610, 492, 393, 536, 300, 321, 434, 8850, 13576, 6328, 2964, 293, 321, 393, 611, 11441, 337, 264, 912, 21483, 33, 50864], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 268, "seek": 116884, "start": 1178.84, "end": 1182.1999999999998, "text": " that the, uh, the IP address, uh, is changing.", "tokens": [50864, 300, 264, 11, 2232, 11, 264, 8671, 2985, 11, 2232, 11, 307, 4473, 13, 51032], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 269, "seek": 116884, "start": 1182.1999999999998, "end": 1183.56, "text": " So this is the same SKB.", "tokens": [51032, 407, 341, 307, 264, 912, 21483, 33, 13, 51100], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 270, "seek": 116884, "start": 1183.56, "end": 1187.9199999999998, "text": " I just trimmed the, uh, the addresses of the SKB cause it was taking too much space, but,", "tokens": [51100, 286, 445, 44563, 264, 11, 2232, 11, 264, 16862, 295, 264, 21483, 33, 3082, 309, 390, 1940, 886, 709, 1901, 11, 457, 11, 51318], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 271, "seek": 116884, "start": 1187.9199999999998, "end": 1189.6799999999998, "text": " um, they're the same.", "tokens": [51318, 1105, 11, 436, 434, 264, 912, 13, 51406], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 272, "seek": 116884, "start": 1189.6799999999998, "end": 1196.9599999999998, "text": " So once we had this information, once we knew that the, uh, the IP tables rules was, uh,", "tokens": [51406, 407, 1564, 321, 632, 341, 1589, 11, 1564, 321, 2586, 300, 264, 11, 2232, 11, 264, 8671, 8020, 4474, 390, 11, 2232, 11, 51770], "temperature": 0.0, "avg_logprob": -0.21010357464930807, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.016328442841768265}, {"id": 273, "seek": 119696, "start": 1196.96, "end": 1202.52, "text": " not sure taking place that we hit the, the net filter hook, we went back to the rules.", "tokens": [50364, 406, 988, 1940, 1081, 300, 321, 2045, 264, 11, 264, 2533, 6608, 6328, 11, 321, 1437, 646, 281, 264, 4474, 13, 50642], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 274, "seek": 119696, "start": 1202.52, "end": 1208.2, "text": " So we were supposed to exclude the traffic, the closer nodes for masquerading.", "tokens": [50642, 407, 321, 645, 3442, 281, 33536, 264, 6419, 11, 264, 4966, 13891, 337, 2300, 8035, 8166, 13, 50926], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 275, "seek": 119696, "start": 1208.2, "end": 1215.68, "text": " Turns out that the IP sets containing the entries, uh, indicating which nodes be, uh,", "tokens": [50926, 29524, 484, 300, 264, 8671, 6352, 19273, 264, 23041, 11, 2232, 11, 25604, 597, 13891, 312, 11, 2232, 11, 51300], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 276, "seek": 119696, "start": 1215.68, "end": 1219.52, "text": " excluded from masquerading were missing the entry of the node on the left on the first", "tokens": [51300, 29486, 490, 2300, 8035, 8166, 645, 5361, 264, 8729, 295, 264, 9984, 322, 264, 1411, 322, 264, 700, 51492], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 277, "seek": 119696, "start": 1219.52, "end": 1220.92, "text": " diagram.", "tokens": [51492, 10686, 13, 51562], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 278, "seek": 119696, "start": 1220.92, "end": 1226.48, "text": " So that get me busy for, for, for some time a few weeks ago, but, uh, we did it.", "tokens": [51562, 407, 300, 483, 385, 5856, 337, 11, 337, 11, 337, 512, 565, 257, 1326, 3259, 2057, 11, 457, 11, 2232, 11, 321, 630, 309, 13, 51840], "temperature": 0.0, "avg_logprob": -0.2678994474739864, "compression_ratio": 1.7327935222672064, "no_speech_prob": 0.012105169706046581}, {"id": 279, "seek": 122648, "start": 1226.48, "end": 1231.96, "text": " So Peru in brief, it's an BBF base tool to debug what's happening inside of the Linux", "tokens": [50364, 407, 31571, 294, 5353, 11, 309, 311, 364, 19168, 37, 3096, 2290, 281, 24083, 437, 311, 2737, 1854, 295, 264, 18734, 50638], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 280, "seek": 122648, "start": 1231.96, "end": 1234.04, "text": " networking stack.", "tokens": [50638, 17985, 8630, 13, 50742], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 281, "seek": 122648, "start": 1234.04, "end": 1239.16, "text": " Hooks on kernel functions using, uh, processing SKBs.", "tokens": [50742, 33132, 82, 322, 28256, 6828, 1228, 11, 2232, 11, 9007, 21483, 33, 82, 13, 50998], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 282, "seek": 122648, "start": 1239.16, "end": 1242.84, "text": " It's very good to pick up things where it's been a post shot in a way.", "tokens": [50998, 467, 311, 588, 665, 281, 1888, 493, 721, 689, 309, 311, 668, 257, 2183, 3347, 294, 257, 636, 13, 51182], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 283, "seek": 122648, "start": 1242.84, "end": 1246.8, "text": " Uh, you've got more visibility on what's happening directly in the stack and not just at the", "tokens": [51182, 4019, 11, 291, 600, 658, 544, 19883, 322, 437, 311, 2737, 3838, 294, 264, 8630, 293, 406, 445, 412, 264, 51380], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 284, "seek": 122648, "start": 1246.8, "end": 1248.32, "text": " interfaces.", "tokens": [51380, 28416, 13, 51456], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 285, "seek": 122648, "start": 1248.32, "end": 1253.64, "text": " We can use pick up, pick up filter, uh, style syntax to, to filter packets that we want.", "tokens": [51456, 492, 393, 764, 1888, 493, 11, 1888, 493, 6608, 11, 2232, 11, 3758, 28431, 281, 11, 281, 6608, 30364, 300, 321, 528, 13, 51722], "temperature": 0.0, "avg_logprob": -0.30965533498990333, "compression_ratio": 1.5629629629629629, "no_speech_prob": 0.004854005761444569}, {"id": 286, "seek": 125364, "start": 1253.64, "end": 1255.0, "text": " So we don't get everything.", "tokens": [50364, 407, 321, 500, 380, 483, 1203, 13, 50432], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 287, "seek": 125364, "start": 1255.0, "end": 1258.64, "text": " We just focus on the flows that we're interested in.", "tokens": [50432, 492, 445, 1879, 322, 264, 12867, 300, 321, 434, 3102, 294, 13, 50614], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 288, "seek": 125364, "start": 1258.64, "end": 1263.0400000000002, "text": " We can try STC programs, can and models functions, uh, modified SKBs.", "tokens": [50614, 492, 393, 853, 4904, 34, 4268, 11, 393, 293, 5245, 6828, 11, 2232, 11, 15873, 21483, 33, 82, 13, 50834], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 289, "seek": 125364, "start": 1263.0400000000002, "end": 1266.3200000000002, "text": " Uh, so that's quite, quite flexible.", "tokens": [50834, 4019, 11, 370, 300, 311, 1596, 11, 1596, 11358, 13, 50998], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 290, "seek": 125364, "start": 1266.3200000000002, "end": 1270.6000000000001, "text": " Uh, we can, um, a number of information, a number of information, including packet level", "tokens": [50998, 4019, 11, 321, 393, 11, 1105, 11, 257, 1230, 295, 1589, 11, 257, 1230, 295, 1589, 11, 3009, 20300, 1496, 51212], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 291, "seek": 125364, "start": 1270.6000000000001, "end": 1277.88, "text": " metadata, uh, the call stack, um, and it's proven very useful to solve a number of complex", "tokens": [51212, 26603, 11, 2232, 11, 264, 818, 8630, 11, 1105, 11, 293, 309, 311, 12785, 588, 4420, 281, 5039, 257, 1230, 295, 3997, 51576], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 292, "seek": 125364, "start": 1277.88, "end": 1282.3600000000001, "text": " networking issues, uh, that we've encountered so far.", "tokens": [51576, 17985, 2663, 11, 2232, 11, 300, 321, 600, 20381, 370, 1400, 13, 51800], "temperature": 0.0, "avg_logprob": -0.2976751165874934, "compression_ratio": 1.6640316205533596, "no_speech_prob": 0.007287966553121805}, {"id": 293, "seek": 128236, "start": 1282.36, "end": 1288.36, "text": " So quick note on some other tools that are not exactly the same, uh, but that also uses", "tokens": [50364, 407, 1702, 3637, 322, 512, 661, 3873, 300, 366, 406, 2293, 264, 912, 11, 2232, 11, 457, 300, 611, 4960, 50664], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 294, "seek": 128236, "start": 1288.36, "end": 1293.08, "text": " this principle of, uh, creating a lot of probes to hook into the kernel and look at what's", "tokens": [50664, 341, 8665, 295, 11, 2232, 11, 4084, 257, 688, 295, 1239, 279, 281, 6328, 666, 264, 28256, 293, 574, 412, 437, 311, 50900], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 295, "seek": 128236, "start": 1293.08, "end": 1294.08, "text": " happening.", "tokens": [50900, 2737, 13, 50950], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 296, "seek": 128236, "start": 1294.08, "end": 1299.0, "text": " There is sweet snoop, which is, um, really convenient to debug what's happening in the", "tokens": [50950, 821, 307, 3844, 43287, 404, 11, 597, 307, 11, 1105, 11, 534, 10851, 281, 24083, 437, 311, 2737, 294, 264, 51196], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 297, "seek": 128236, "start": 1299.0, "end": 1303.8799999999999, "text": " kernel when doing kernel development because it focuses on the written values of the function", "tokens": [51196, 28256, 562, 884, 28256, 3250, 570, 309, 16109, 322, 264, 3720, 4190, 295, 264, 2445, 51440], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 298, "seek": 128236, "start": 1303.8799999999999, "end": 1309.84, "text": " you're trying to, to, to observe or also the written values of most function in the kernel.", "tokens": [51440, 291, 434, 1382, 281, 11, 281, 11, 281, 11441, 420, 611, 264, 3720, 4190, 295, 881, 2445, 294, 264, 28256, 13, 51738], "temperature": 0.0, "avg_logprob": -0.18885005147833572, "compression_ratio": 1.811764705882353, "no_speech_prob": 0.0035002827644348145}, {"id": 299, "seek": 130984, "start": 1309.84, "end": 1313.4399999999998, "text": " If you're trying to just detect what functions are returning errors.", "tokens": [50364, 759, 291, 434, 1382, 281, 445, 5531, 437, 6828, 366, 12678, 13603, 13, 50544], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 300, "seek": 130984, "start": 1313.4399999999998, "end": 1317.8, "text": " IPF-Dress2 is very similar to, uh, to Peru.", "tokens": [50544, 8671, 37, 12, 35, 735, 17, 307, 588, 2531, 281, 11, 2232, 11, 281, 31571, 13, 50762], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 301, "seek": 130984, "start": 1317.8, "end": 1322.1599999999999, "text": " Uh, there are some features that, uh, are different between the two, but otherwise they", "tokens": [50762, 4019, 11, 456, 366, 512, 4122, 300, 11, 2232, 11, 366, 819, 1296, 264, 732, 11, 457, 5911, 436, 50980], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 302, "seek": 130984, "start": 1322.1599999999999, "end": 1325.24, "text": " are doing the same focusing and tracking the packets.", "tokens": [50980, 366, 884, 264, 912, 8416, 293, 11603, 264, 30364, 13, 51134], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 303, "seek": 130984, "start": 1325.24, "end": 1331.1599999999999, "text": " TetraKone is a security events detection, uh, sorry, is a tool focusing on security", "tokens": [51134, 31580, 424, 42, 546, 307, 257, 3825, 3931, 17784, 11, 2232, 11, 2597, 11, 307, 257, 2290, 8416, 322, 3825, 51430], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 304, "seek": 130984, "start": 1331.1599999999999, "end": 1337.72, "text": " events detection and, um, it uses, it also supports these, uh, multi-K probes, multi-U", "tokens": [51430, 3931, 17784, 293, 11, 1105, 11, 309, 4960, 11, 309, 611, 9346, 613, 11, 2232, 11, 4825, 12, 42, 1239, 279, 11, 4825, 12, 52, 51758], "temperature": 0.0, "avg_logprob": -0.3388592320629674, "compression_ratio": 1.7068273092369477, "no_speech_prob": 0.007187528070062399}, {"id": 305, "seek": 133772, "start": 1337.72, "end": 1338.72, "text": " probes mechanisms.", "tokens": [50364, 1239, 279, 15902, 13, 50414], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 306, "seek": 133772, "start": 1338.72, "end": 1348.4, "text": " Uh, it uses EBPF to detect malicious activity on the system and to block it, uh, for, for,", "tokens": [50414, 4019, 11, 309, 4960, 50148, 47, 37, 281, 5531, 33496, 5191, 322, 264, 1185, 293, 281, 3461, 309, 11, 2232, 11, 337, 11, 337, 11, 50898], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 307, "seek": 133772, "start": 1348.4, "end": 1349.4, "text": " for security purpose.", "tokens": [50898, 337, 3825, 4334, 13, 50948], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 308, "seek": 133772, "start": 1349.4, "end": 1352.64, "text": " So this is the end of the presentation.", "tokens": [50948, 407, 341, 307, 264, 917, 295, 264, 5860, 13, 51110], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 309, "seek": 133772, "start": 1352.64, "end": 1357.0, "text": " I'd like to thank Adity and Matt Ness, who did a great presentation a few years ago, uh,", "tokens": [51110, 286, 1116, 411, 281, 1309, 1999, 507, 293, 7397, 426, 442, 11, 567, 630, 257, 869, 5860, 257, 1326, 924, 2057, 11, 2232, 11, 51328], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 310, "seek": 133772, "start": 1357.0, "end": 1362.64, "text": " at KubeCon on the topic, and, uh, I reused some of the materials, so, uh, I'm very thankful", "tokens": [51328, 412, 591, 1977, 9838, 322, 264, 4829, 11, 293, 11, 2232, 11, 286, 319, 4717, 512, 295, 264, 5319, 11, 370, 11, 2232, 11, 286, 478, 588, 13611, 51610], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 311, "seek": 133772, "start": 1362.64, "end": 1363.64, "text": " to them.", "tokens": [51610, 281, 552, 13, 51660], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 312, "seek": 133772, "start": 1363.64, "end": 1365.76, "text": " Thank you to the Peru contributors.", "tokens": [51660, 1044, 291, 281, 264, 31571, 45627, 13, 51766], "temperature": 0.0, "avg_logprob": -0.29547760134837664, "compression_ratio": 1.5753968253968254, "no_speech_prob": 0.015149003826081753}, {"id": 313, "seek": 136576, "start": 1365.76, "end": 1367.32, "text": " Thank you to everyone.", "tokens": [50364, 1044, 291, 281, 1518, 13, 50442], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 314, "seek": 136576, "start": 1367.32, "end": 1368.76, "text": " Of course, thanks for the team, the talk.", "tokens": [50442, 2720, 1164, 11, 3231, 337, 264, 1469, 11, 264, 751, 13, 50514], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 315, "seek": 136576, "start": 1368.76, "end": 1369.76, "text": " I hope you enjoyed it.", "tokens": [50514, 286, 1454, 291, 4626, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 316, "seek": 136576, "start": 1369.76, "end": 1374.12, "text": " If you have questions and if we have time, uh, I would really, I hope just to be open", "tokens": [50564, 759, 291, 362, 1651, 293, 498, 321, 362, 565, 11, 2232, 11, 286, 576, 534, 11, 286, 1454, 445, 281, 312, 1269, 50782], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 317, "seek": 136576, "start": 1374.12, "end": 1377.12, "text": " to questions.", "tokens": [50782, 281, 1651, 13, 50932], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 318, "seek": 136576, "start": 1377.12, "end": 1385.6, "text": " Thank you for the talk.", "tokens": [50932, 1044, 291, 337, 264, 751, 13, 51356], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 319, "seek": 136576, "start": 1385.6, "end": 1391.56, "text": " Does it work well with, uh, GCO, GRO, like the segmentation of laws when the packets", "tokens": [51356, 4402, 309, 589, 731, 365, 11, 2232, 11, 460, 12322, 11, 460, 7142, 11, 411, 264, 9469, 399, 295, 6064, 562, 264, 30364, 51654], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 320, "seek": 136576, "start": 1391.56, "end": 1392.96, "text": " are merged and dissected?", "tokens": [51654, 366, 36427, 293, 48332, 292, 30, 51724], "temperature": 0.0, "avg_logprob": -0.38952850341796874, "compression_ratio": 1.5480769230769231, "no_speech_prob": 0.054660290479660034}, {"id": 321, "seek": 139296, "start": 1392.96, "end": 1398.48, "text": " Uh, GCO, GRO should see the, should get the SKB as an argument, so they would appear on", "tokens": [50364, 4019, 11, 460, 12322, 11, 460, 7142, 820, 536, 264, 11, 820, 483, 264, 21483, 33, 382, 364, 6770, 11, 370, 436, 576, 4204, 322, 50640], "temperature": 0.0, "avg_logprob": -0.30959703983404696, "compression_ratio": 1.4876543209876543, "no_speech_prob": 0.06727134436368942}, {"id": 322, "seek": 139296, "start": 1398.48, "end": 1402.1200000000001, "text": " the list of functions that you, uh, that you get from the output.", "tokens": [50640, 264, 1329, 295, 6828, 300, 291, 11, 2232, 11, 300, 291, 483, 490, 264, 5598, 13, 50822], "temperature": 0.0, "avg_logprob": -0.30959703983404696, "compression_ratio": 1.4876543209876543, "no_speech_prob": 0.06727134436368942}, {"id": 323, "seek": 139296, "start": 1402.1200000000001, "end": 1413.1200000000001, "text": " So yeah.", "tokens": [50822, 407, 1338, 13, 51372], "temperature": 0.0, "avg_logprob": -0.30959703983404696, "compression_ratio": 1.4876543209876543, "no_speech_prob": 0.06727134436368942}, {"id": 324, "seek": 139296, "start": 1413.1200000000001, "end": 1421.1200000000001, "text": " Can you, uh, just print, uh, the SKBs or also trace, inspect those in, inside?", "tokens": [51372, 1664, 291, 11, 2232, 11, 445, 4482, 11, 2232, 11, 264, 21483, 33, 82, 420, 611, 13508, 11, 15018, 729, 294, 11, 1854, 30, 51772], "temperature": 0.0, "avg_logprob": -0.30959703983404696, "compression_ratio": 1.4876543209876543, "no_speech_prob": 0.06727134436368942}, {"id": 325, "seek": 142112, "start": 1421.12, "end": 1427.4399999999998, "text": " Like, for example, I've seen this particular, uh, value inside the SKB, the changes and", "tokens": [50364, 1743, 11, 337, 1365, 11, 286, 600, 1612, 341, 1729, 11, 2232, 11, 2158, 1854, 264, 21483, 33, 11, 264, 2962, 293, 50680], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 326, "seek": 142112, "start": 1427.4399999999998, "end": 1429.04, "text": " causes some kind of bug.", "tokens": [50680, 7700, 512, 733, 295, 7426, 13, 50760], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 327, "seek": 142112, "start": 1429.04, "end": 1431.6, "text": " Can, can I trace it?", "tokens": [50760, 1664, 11, 393, 286, 13508, 309, 30, 50888], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 328, "seek": 142112, "start": 1431.6, "end": 1436.12, "text": " So you can, you can get the SKB, you can dump the full SKB.", "tokens": [50888, 407, 291, 393, 11, 291, 393, 483, 264, 21483, 33, 11, 291, 393, 11430, 264, 1577, 21483, 33, 13, 51114], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 329, "seek": 142112, "start": 1436.12, "end": 1441.6, "text": " I don't think we have a filtering mechanism to, uh, do some additional processing in Peru", "tokens": [51114, 286, 500, 380, 519, 321, 362, 257, 30822, 7513, 281, 11, 2232, 11, 360, 512, 4497, 9007, 294, 31571, 51388], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 330, "seek": 142112, "start": 1441.6, "end": 1445.84, "text": " on the SKB to only raise when you have that value.", "tokens": [51388, 322, 264, 21483, 33, 281, 787, 5300, 562, 291, 362, 300, 2158, 13, 51600], "temperature": 0.0, "avg_logprob": -0.23223493576049806, "compression_ratio": 1.5391705069124424, "no_speech_prob": 0.4946470856666565}, {"id": 331, "seek": 144584, "start": 1445.84, "end": 1452.84, "text": " What you could do is, uh, filter new packet flow, dump the full SKB, and then probably", "tokens": [50364, 708, 291, 727, 360, 307, 11, 2232, 11, 6608, 777, 20300, 3095, 11, 11430, 264, 1577, 21483, 33, 11, 293, 550, 1391, 50714], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 332, "seek": 144584, "start": 1452.84, "end": 1459.36, "text": " post process to extract the ones that have this, uh, erroneous values, I suppose.", "tokens": [50714, 2183, 1399, 281, 8947, 264, 2306, 300, 362, 341, 11, 2232, 11, 1189, 26446, 563, 4190, 11, 286, 7297, 13, 51040], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 333, "seek": 144584, "start": 1459.36, "end": 1461.9199999999998, "text": " But you, you can get the, the full content of the SKB.", "tokens": [51040, 583, 291, 11, 291, 393, 483, 264, 11, 264, 1577, 2701, 295, 264, 21483, 33, 13, 51168], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 334, "seek": 144584, "start": 1461.9199999999998, "end": 1466.36, "text": " So from that, maybe that would help.", "tokens": [51168, 407, 490, 300, 11, 1310, 300, 576, 854, 13, 51390], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 335, "seek": 144584, "start": 1466.36, "end": 1467.8799999999999, "text": " So thank you for the presentation.", "tokens": [51390, 407, 1309, 291, 337, 264, 5860, 13, 51466], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 336, "seek": 144584, "start": 1467.8799999999999, "end": 1473.1599999999999, "text": " Um, do you have a, an idea of the performance of your tool?", "tokens": [51466, 3301, 11, 360, 291, 362, 257, 11, 364, 1558, 295, 264, 3389, 295, 428, 2290, 30, 51730], "temperature": 0.0, "avg_logprob": -0.24180216055649978, "compression_ratio": 1.5990990990990992, "no_speech_prob": 0.032649312168359756}, {"id": 337, "seek": 147316, "start": 1473.16, "end": 1475.0, "text": " And are you satisfied of that performance?", "tokens": [50364, 400, 366, 291, 11239, 295, 300, 3389, 30, 50456], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 338, "seek": 147316, "start": 1475.0, "end": 1479.3600000000001, "text": " And do you see some opportunities to make it even more efficient to be able to use it", "tokens": [50456, 400, 360, 291, 536, 512, 4786, 281, 652, 309, 754, 544, 7148, 281, 312, 1075, 281, 764, 309, 50674], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 339, "seek": 147316, "start": 1479.3600000000001, "end": 1480.3600000000001, "text": " in production?", "tokens": [50674, 294, 4265, 30, 50724], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 340, "seek": 147316, "start": 1480.3600000000001, "end": 1483.28, "text": " No, I don't know.", "tokens": [50724, 883, 11, 286, 500, 380, 458, 13, 50870], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 341, "seek": 147316, "start": 1483.28, "end": 1489.0800000000002, "text": " So one clarification is that, uh, it's not my, I've not contributed to it.", "tokens": [50870, 407, 472, 34449, 307, 300, 11, 2232, 11, 309, 311, 406, 452, 11, 286, 600, 406, 18434, 281, 309, 13, 51160], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 342, "seek": 147316, "start": 1489.0800000000002, "end": 1490.64, "text": " Well, I picked two typos.", "tokens": [51160, 1042, 11, 286, 6183, 732, 2125, 329, 13, 51238], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 343, "seek": 147316, "start": 1490.64, "end": 1494.48, "text": " Um, so I've not run any benchmarks myself.", "tokens": [51238, 3301, 11, 370, 286, 600, 406, 1190, 604, 43751, 2059, 13, 51430], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 344, "seek": 147316, "start": 1494.48, "end": 1498.44, "text": " I know there is some impact due to the use of K-probes because you're loading so many", "tokens": [51430, 286, 458, 456, 307, 512, 2712, 3462, 281, 264, 764, 295, 591, 12, 4318, 6446, 570, 291, 434, 15114, 370, 867, 51628], "temperature": 0.0, "avg_logprob": -0.25934542271128874, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.08321674168109894}, {"id": 345, "seek": 149844, "start": 1498.44, "end": 1499.92, "text": " K-probes at the same time.", "tokens": [50364, 591, 12, 4318, 6446, 412, 264, 912, 565, 13, 50438], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 346, "seek": 149844, "start": 1499.92, "end": 1503.8, "text": " So it does have some impact on performance on the system.", "tokens": [50438, 407, 309, 775, 362, 512, 2712, 322, 3389, 322, 264, 1185, 13, 50632], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 347, "seek": 149844, "start": 1503.8, "end": 1511.52, "text": " Um, I don't think we've tried to use it in environments where, uh, performance was a", "tokens": [50632, 3301, 11, 286, 500, 380, 519, 321, 600, 3031, 281, 764, 309, 294, 12388, 689, 11, 2232, 11, 3389, 390, 257, 51018], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 348, "seek": 149844, "start": 1511.52, "end": 1513.92, "text": " hard constraint for us so far.", "tokens": [51018, 1152, 25534, 337, 505, 370, 1400, 13, 51138], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 349, "seek": 149844, "start": 1513.92, "end": 1516.56, "text": " Uh, how could we improve that?", "tokens": [51138, 4019, 11, 577, 727, 321, 3470, 300, 30, 51270], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 350, "seek": 149844, "start": 1516.56, "end": 1519.88, "text": " Um, I'm not really sure.", "tokens": [51270, 3301, 11, 286, 478, 406, 534, 988, 13, 51436], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 351, "seek": 149844, "start": 1519.88, "end": 1524.68, "text": " We haven't really given much thought into it at this point.", "tokens": [51436, 492, 2378, 380, 534, 2212, 709, 1194, 666, 309, 412, 341, 935, 13, 51676], "temperature": 0.0, "avg_logprob": -0.2307227520232505, "compression_ratio": 1.5265700483091786, "no_speech_prob": 0.027441801503300667}, {"id": 352, "seek": 152468, "start": 1525.68, "end": 1530.8400000000001, "text": " Well, there's obviously the, the issue of loading and detaching the programs that is", "tokens": [50414, 1042, 11, 456, 311, 2745, 264, 11, 264, 2734, 295, 15114, 293, 1141, 2834, 264, 4268, 300, 307, 50672], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 353, "seek": 152468, "start": 1530.8400000000001, "end": 1535.52, "text": " greatly improved in the multi-K-probes interface, but that's something different at the runtime.", "tokens": [50672, 14147, 9689, 294, 264, 4825, 12, 42, 12, 4318, 6446, 9226, 11, 457, 300, 311, 746, 819, 412, 264, 34474, 13, 50906], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 354, "seek": 152468, "start": 1535.52, "end": 1538.52, "text": " Uh, exactly.", "tokens": [50906, 4019, 11, 2293, 13, 51056], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 355, "seek": 152468, "start": 1538.52, "end": 1540.52, "text": " Yeah.", "tokens": [51056, 865, 13, 51156], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 356, "seek": 152468, "start": 1540.52, "end": 1544.92, "text": " Um, thank you for the talk in the first place.", "tokens": [51156, 3301, 11, 1309, 291, 337, 264, 751, 294, 264, 700, 1081, 13, 51376], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 357, "seek": 152468, "start": 1544.92, "end": 1550.72, "text": " Um, and my question is which behavior can I expect with packet rewrites or encapsulation,", "tokens": [51376, 3301, 11, 293, 452, 1168, 307, 597, 5223, 393, 286, 2066, 365, 20300, 319, 86, 30931, 420, 38745, 2776, 11, 51666], "temperature": 0.0, "avg_logprob": -0.4098452473734761, "compression_ratio": 1.5248868778280542, "no_speech_prob": 0.00902518443763256}, {"id": 358, "seek": 155072, "start": 1550.96, "end": 1556.4, "text": " uh, network address translation and so on, is the packet evaluated in every probe or", "tokens": [50376, 2232, 11, 3209, 2985, 12853, 293, 370, 322, 11, 307, 264, 20300, 25509, 294, 633, 22715, 420, 50648], "temperature": 0.0, "avg_logprob": -0.39574947872677363, "compression_ratio": 1.7702702702702702, "no_speech_prob": 0.044488027691841125}, {"id": 359, "seek": 155072, "start": 1556.4, "end": 1560.24, "text": " can I, can I trace the packet even before the rewrite rule?", "tokens": [50648, 393, 286, 11, 393, 286, 13508, 264, 20300, 754, 949, 264, 28132, 4978, 30, 50840], "temperature": 0.0, "avg_logprob": -0.39574947872677363, "compression_ratio": 1.7702702702702702, "no_speech_prob": 0.044488027691841125}, {"id": 360, "seek": 155072, "start": 1560.24, "end": 1567.16, "text": " So for example, I filter to the revitn IP address or I filter to the address before, uh, we", "tokens": [50840, 407, 337, 1365, 11, 286, 6608, 281, 264, 3698, 270, 77, 8671, 2985, 420, 286, 6608, 281, 264, 2985, 949, 11, 2232, 11, 321, 51186], "temperature": 0.0, "avg_logprob": -0.39574947872677363, "compression_ratio": 1.7702702702702702, "no_speech_prob": 0.044488027691841125}, {"id": 361, "seek": 155072, "start": 1567.16, "end": 1572.16, "text": " explain encapsulation or whatever, or IPsec processing and so on.", "tokens": [51186, 2903, 38745, 2776, 420, 2035, 11, 420, 8671, 8159, 9007, 293, 370, 322, 13, 51436], "temperature": 0.0, "avg_logprob": -0.39574947872677363, "compression_ratio": 1.7702702702702702, "no_speech_prob": 0.044488027691841125}, {"id": 362, "seek": 155072, "start": 1572.16, "end": 1579.16, "text": " Um, so the way I see it, if you use the option to track the SKG, the SKG, the SKG, the SKG", "tokens": [51436, 3301, 11, 370, 264, 636, 286, 536, 309, 11, 498, 291, 764, 264, 3614, 281, 2837, 264, 21483, 38, 11, 264, 21483, 38, 11, 264, 21483, 38, 11, 264, 21483, 38, 51786], "temperature": 0.0, "avg_logprob": -0.39574947872677363, "compression_ratio": 1.7702702702702702, "no_speech_prob": 0.044488027691841125}, {"id": 363, "seek": 158072, "start": 1580.72, "end": 1587.72, "text": " is, even if the, the metadata changes, you should be able to trace them, uh, uh, even", "tokens": [50364, 307, 11, 754, 498, 264, 11, 264, 26603, 2962, 11, 291, 820, 312, 1075, 281, 13508, 552, 11, 2232, 11, 2232, 11, 754, 50714], "temperature": 0.0, "avg_logprob": -0.26561378150857906, "compression_ratio": 1.688118811881188, "no_speech_prob": 0.00473977904766798}, {"id": 364, "seek": 158072, "start": 1588.32, "end": 1589.32, "text": " after.", "tokens": [50744, 934, 13, 50794], "temperature": 0.0, "avg_logprob": -0.26561378150857906, "compression_ratio": 1.688118811881188, "no_speech_prob": 0.00473977904766798}, {"id": 365, "seek": 158072, "start": 1589.32, "end": 1596.32, "text": " So maybe if you set a given destination IP, you wouldn't be able to trace the packet before", "tokens": [50794, 407, 1310, 498, 291, 992, 257, 2212, 12236, 8671, 11, 291, 2759, 380, 312, 1075, 281, 13508, 264, 20300, 949, 51144], "temperature": 0.0, "avg_logprob": -0.26561378150857906, "compression_ratio": 1.688118811881188, "no_speech_prob": 0.00473977904766798}, {"id": 366, "seek": 158072, "start": 1596.4, "end": 1601.44, "text": " it gets that IP because that would be like guessing what will happen.", "tokens": [51148, 309, 2170, 300, 8671, 570, 300, 576, 312, 411, 17939, 437, 486, 1051, 13, 51400], "temperature": 0.0, "avg_logprob": -0.26561378150857906, "compression_ratio": 1.688118811881188, "no_speech_prob": 0.00473977904766798}, {"id": 367, "seek": 158072, "start": 1601.44, "end": 1607.72, "text": " But after it changes, yes, if you have, um, you know, tracking of the packets and that", "tokens": [51400, 583, 934, 309, 2962, 11, 2086, 11, 498, 291, 362, 11, 1105, 11, 291, 458, 11, 11603, 295, 264, 30364, 293, 300, 51714], "temperature": 0.0, "avg_logprob": -0.26561378150857906, "compression_ratio": 1.688118811881188, "no_speech_prob": 0.00473977904766798}, {"id": 368, "seek": 160772, "start": 1607.72, "end": 1612.76, "text": " you, that Peru, I did it to the map for you, then you would keep following that SKB after", "tokens": [50364, 291, 11, 300, 31571, 11, 286, 630, 309, 281, 264, 4471, 337, 291, 11, 550, 291, 576, 1066, 3480, 300, 21483, 33, 934, 50616], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 369, "seek": 160772, "start": 1612.76, "end": 1613.76, "text": " that.", "tokens": [50616, 300, 13, 50666], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 370, "seek": 160772, "start": 1613.76, "end": 1614.76, "text": " Yes.", "tokens": [50666, 1079, 13, 50716], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 371, "seek": 160772, "start": 1614.76, "end": 1620.76, "text": " Does it also track the revitn packet so I, um, trace the original IP if it gets encapsulated", "tokens": [50716, 4402, 309, 611, 2837, 264, 3698, 270, 77, 20300, 370, 286, 11, 1105, 11, 13508, 264, 3380, 8671, 498, 309, 2170, 38745, 6987, 51016], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 372, "seek": 160772, "start": 1620.76, "end": 1622.28, "text": " other destination IP?", "tokens": [51016, 661, 12236, 8671, 30, 51092], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 373, "seek": 160772, "start": 1622.28, "end": 1626.92, "text": " If you, so does it track, even if it gets encapsulated and if the IP changes, well yes,", "tokens": [51092, 759, 291, 11, 370, 775, 309, 2837, 11, 754, 498, 309, 2170, 38745, 6987, 293, 498, 264, 8671, 2962, 11, 731, 2086, 11, 51324], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 374, "seek": 160772, "start": 1626.92, "end": 1628.8, "text": " because it's the same SKB, right?", "tokens": [51324, 570, 309, 311, 264, 912, 21483, 33, 11, 558, 30, 51418], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 375, "seek": 160772, "start": 1628.8, "end": 1634.92, "text": " So if you're, if you're basing, basing your, your, your tracking on the SKB address, then", "tokens": [51418, 407, 498, 291, 434, 11, 498, 291, 434, 987, 278, 11, 987, 278, 428, 11, 428, 11, 428, 11603, 322, 264, 21483, 33, 2985, 11, 550, 51724], "temperature": 0.0, "avg_logprob": -0.22959800894933802, "compression_ratio": 1.714859437751004, "no_speech_prob": 0.003759558079764247}, {"id": 376, "seek": 163492, "start": 1634.92, "end": 1639.64, "text": " yes, it doesn't matter if you change the IP.", "tokens": [50364, 2086, 11, 309, 1177, 380, 1871, 498, 291, 1319, 264, 8671, 13, 50600], "temperature": 0.0, "avg_logprob": -0.4321921088478782, "compression_ratio": 1.1818181818181819, "no_speech_prob": 0.008674976415932178}, {"id": 377, "seek": 163492, "start": 1639.64, "end": 1640.64, "text": " Okay.", "tokens": [50600, 1033, 13, 50650], "temperature": 0.0, "avg_logprob": -0.4321921088478782, "compression_ratio": 1.1818181818181819, "no_speech_prob": 0.008674976415932178}, {"id": 378, "seek": 163492, "start": 1640.64, "end": 1641.64, "text": " Thank you.", "tokens": [50650, 1044, 291, 13, 50700], "temperature": 0.0, "avg_logprob": -0.4321921088478782, "compression_ratio": 1.1818181818181819, "no_speech_prob": 0.008674976415932178}, {"id": 379, "seek": 163492, "start": 1641.64, "end": 1642.64, "text": " Okay.", "tokens": [50700, 1033, 13, 50750], "temperature": 0.0, "avg_logprob": -0.4321921088478782, "compression_ratio": 1.1818181818181819, "no_speech_prob": 0.008674976415932178}, {"id": 380, "seek": 163492, "start": 1642.64, "end": 1643.14, "text": " Thank you.", "tokens": [50750, 1044, 291, 13, 50775], "temperature": 0.0, "avg_logprob": -0.4321921088478782, "compression_ratio": 1.1818181818181819, "no_speech_prob": 0.008674976415932178}], "language": "en"}