{"text": " Perfect, I guess then let's start right a bit earlier, but then leaves potentially a few times for questions. Hi, my name is Benifuri. I work at the Confidential Computing Enabling Team at Intel. My main job is to, I can try, but I notice when I said there that it's not really loud, the speaker is not loud there. Okay, speak closer to the microphone, I will try. So yes, Intel Confidential Computing Enabling, right, we work together with academics, companies, partners, whoever wants to use our technology, we help them to do that, right, that's my job. Today, I will talk about Intel TDX, and I will, it's called Deep Dive, but I will start with an overview and then go deep in a few slides, right. So overview first, I don't want to speak too much about that, right, it was just done in the talk we just had. Without confidential computing, or if you don't use any protection mechanism, everything is in what we call the trust boundary, right, everything can access your confidential data. With our first technology, Intel S-Chicks was just mentioned, right, only the application with Intel TDX, the topic of today, a virtual machine is protected, right, everything of that was just mentioned, just want to mention it again, because like we have the options, right, use whatever you want. In general, you could say Intel S-Chicks is the more secure technology, Intel TDX the more usable technology, right, but that's up for debate if you want. Yeah, today we will concentrate on Intel TDX only. Here, you see an overview, like this is what a regular system looks like, right, we have the platform with cores, caches and so on, the memory and a regular hypervisor, a virtual machine monitor here. And with normal VMs, this hypervisor starts the virtual machines, right, and it is also, this hypervisor isolates the virtual machines from each other and isolates the virtual machines from the hypervisor itself. In the main memory, everything is plain text, right, so, which means that every person and every program with the necessary privileges can access the data, right, it's plain text. This is different with Intel TDX. With Intel TDX, we introduce what we call the Intel TDX module. The hypervisor has to be adjusted as well, it's now says here it's TDX enlightened, because the hypervisor is still responsible for resource management and hypervisor now needs to, instead of starting the virtual machines itself, it has to go to the TDX module and say here, please start your TDX protected virtual machines for me. And this is what the TDX module does, right, it starts to protect the virtual machines, which we call trust domains, right. Intel TDX stands for Intel Trust Domain Extensions, Intel TDX Protected Virtual Machines, we call them trust domains. Inside those trust domains or TDs, the guest OS running there has to be enlightened as well, right, it has to be at least to have some changes, because it has to handle now accesses to private memory and shared memory, it has to handle that, it also has to handle exceptions and it has to block certain calls that were possible before. Yes, the application inside the TD do not have to be adjusted, that's the main advantage of Intel TDX or comparable technologies. The main memory belonging to the TD is encrypted with an ephemeral key that is dedicated and hardware managed, right, as you see on the slide, it says encrypted with key one and key two, because every trust domain is encrypted with a different key. Inside the CPU, the data belonging to the TD is plain text, right, that's what confidential computing does, inside the CPU, data is plain text, but the CPU takes care that only the trust domain to which the data belongs has access to the data. Combining the main memory encryption and access control, Intel TDX enforces the isolation of the different TDs by using the Intel TDX module, on top of that, attestation proves that this is the case, right, what we will talk about attestation a bit later. This slide is about the Intel TDX enabling in Linux, it contains a lot of details, I don't want to go into every detail, I only want to highlight three things. First via VM isolation requires to enable a lot of parts of the software and Intel has done that, right, we have put the work in and basically everything is open source, right, and this is the, basically everything is open source, and even the ones in gray, they are only gray because they are a reference implementation, but also open source. And most of the pieces are already upstreamed, but not everything, right, that's the current situation of Intel TDX, but this will change soon, hopefully. One last slide of the overview is the availability of Intel TDX. Intel TDX was introduced at the beginning of 2023 with the fourth generation of Intel Xeon Scalables, but back then, only at four leading cloud service providers you see on the right. Everybody else buying these CPUs did not have Intel TDX enabled. Previous at that cloud service providers started already in Q1 2023, and general ability is supposed to be soon this year. Intel TDX became generally available with the fifth generation of Xeon Scalables, which was introduced at the end of last year in December, meaning if you now go to your favorite hardware vendor, you should be able to get such CPUs or at least soon. Good. Now to selected technical details of the technology. First, the CPU state is kept confidential by managing it in CPU protected memory, and that's the responsibility of the TDX module. For example, on a TDX exit, the CPU state is saved by the TDX module in a protected memory region, and this memory region is encrypted. And all memory confidentiality and integrity that's provided by Intel TDX is provided by what we call the TME IM key engine, the total memory encryption, integrity, multi key engine. And this is used to encrypt all the main memory belonging to a TD to prevent untrusted software or from observing the TD's memory. It uses AX XTS 128 bit, and each memory as mentioned before has its own keys. The memory integrity feature detects TD private memory corruption by software and direct memory access. The TDX module is responsible for managing all the keys, but to encrypt the different keys. But the TDX module itself still does not have access to the keys. This is done by the TME IMK hardware that manages the keys, and the TDX module only references key IDs. No access at any point to the keys that are actually used for the main memory encryption, not by any piece of software. I will skip remote attestation for now, because I will explain details later. But a bit about IO compatibility. By default, no direct connection to external devices is possible, because those external devices are untrusted. SQIO can be emulated by software, but this has performance overhead. At the end of the talk, I will talk a bit more about these aspects and how the situation should be changed or migrated in the future. With Intel TDX, performance monitoring and debug facilities run inside TTD. This is a difference compared to Intel SGX, because this means you can debug your application handling sensitive data. Because even during debugging, you are protected, you are inside the trust domain. Sure, the person that does the debugging now has access, but still the infrastructure provider doesn't see it. One final aspect here, the page table management happens inside the trust domain now to address remapping attacks. This was also different with SGX. It was responsibility of the operating system, which was untrusted. A few more details about the TDX module and what we call the secure arbitration mode. The TDX module is provided by Intel and the code is open source. Since only two weeks ago or something, it's on GitHub now. The seam loader verifies the signature of the Intel TDX module when the system boots and loads it into a special memory region, which we call the seam RR. Only software in the seam RR itself are able to access other memory in the seam RR. In fact, hindering everything but the TDX module from doing anything. All other software access and DMA access to this memory is completely blocked. The confidentiality and integrity of the seam RR is again protected with AES, XTS, 128 bit. The Intel TDX module runs in what we call the secure arbitration mode or seam for short. To be more precise in the seam VMX route mode. The ISA was extended with introduction of Intel TDX. The ISA was extended by four instructions to enable the communication between the host, the hypervisor and the hardware. These four instructions are seam calls for interactions between the hypervisor and the TDX module. So, start the TD, stop the TD, things like that. Seam read to return the execution control back to the hypervisor. TD call from a call from the TD to the TDX module and seam ops for calls from the TDX module to the hardware. Certain security critical ISA instructions are denied in seam to provide the protection guarantees we want. Now to TDX remote attestation. The TDX remote attestation, you all know that, you all have heard of that in SGX or in other technologies, uses quotes. Quotes are created by hardware and the quotes are used to prove something. In this case, the TD can prove four different attributes, at least four attributes with this quote. The booted image is exactly as expected. During the loading of the image, it's measured, so it's hashed and this hash is stored in what we call the MRTD. This is part of the quote. Second, measurements created or extended during runtime. Intel TDX has what we call runtime measurement registers or RTMRs and they can be extended at runtime. It's not done automatically, it's a can. It's a subtle topic, if you're more interested in that, but that's what we have. Number three, the TD is executed on an Intel TDX enabled platform. It's obvious that that's important, so nobody should just be able to simulate that it's an Intel TDX hardware. Number four, the Intel TDX platform is fully patched. As you also know, I assume in the past, there were problems with the different technologies, loading Intel SX, but then we provide a patch and we have the ability to prove at what patch level your platform is. Then it's as it says here in the next line, whoever is dessert or a lying party can look at the quote and then decide if it trusts the TD or not. Some might decide even an older patch level is fine, some say only the newest one is fine, some say MRTDs has to be a certain aspect, RTMRs have to be or don't have to be used, all that's possible. A bit more about the process of remote attestation, which should look very, very familiar to people that have seen the SGX remote attestation. It all starts with a relying party triggering the trust domain of here, please prove to me the things I just mentioned. The TD will reach out to the TDX module and the TDX module will reach out to the hardware. The hardware will then generate what we call a TD report and this report contains the measurement I mentioned before, but it also has for example the security version number of the TDX module, the measurement of the TDX module and the measurements of the TD and all other aspects that are in the trusted computing base and it's signed by the hardware at this point. The TD report then is routed back to the TD, back to the hypervisor and then to what we call the TD quoting enclave. And as the name enclave already suggests, it's an Intel SGX enclave, right? So we use Intel SGX for remote attestation of TDX. The TD quoting enclave checks if the report was signed at the same platform and if that's the case, it will sign it with the attestation key. I will come, what this means in a second and why this matters. But then now we have a TD quote that's signed by the attestation key and this TD quote is passed back to the relying party who can do quote verification now. But the important question is what just happened, right? The TD quote was signed with an attestation key, what does it mean, why should we trust that, right? And a key piece I skipped before is that the TD quoting enclave has randomly generated the attestation key before the process even starts, right? Without Intel being involved at all, this happens on the platform. But that still doesn't help much. But what also happens on start, the so-called provisioning certification enclave that's also provided by Intel will do local attestation with the TD quoting enclave. It will see, yes, okay, we run both on the same machine. It's a TD quoting enclave that I expect. And it just provided me an attestation key. And then it will use the provisioning certification key to sign a certificate. So then we have, as is you on the right side, an attestation key certificate that's signed by the PCK key. But again, why does this matter, right? The important piece now is Intel is able to create PCK certificates that are then rooted in an Intel CA. And this ends the trust chain, right? So the attestation key generated on hardware, but it links back to an Intel CA. And during quote verification, whoever does it, wherever this is done, can reach out to what we call the provisioning certification service to get all the collateral that's needed to check this chain. That's the process of remote attestation. And as said before, Intel TDX attestation uses Intel SGX. All the sets of collateral we had before, PCK certificate, distribution, caching services, they supported Intel SGX in the Pado in the past only. Now they support both. And it also, this also means that as it's required to enable SGX on the machine when you want to use TDX. Just quickly, a few words about how you can do the verification, right? There are basically four options. You can use a service by the cloud service provider. You can use a service by the vendor of your application. You can use potentially the Intel trust authority like an independent software as a service offering by Intel to do the verification for you, to alleviate the process. Or you can build it your own with the open source Intel libraries we provide. A few pieces of differentiation between the services, if you want to have a separation of responsibility between the infrastructure provider and the verification party, then you should not use the cloud service provider, obviously. But in all the other cases, it's fine. If you want to have consistency, if you want to support SGX and TDX, then it's up to the cloud service provider and the application provider if they supported our variance, definitely supported. If you want to have consistencies across your applications, across the environment you have on-prem hybrid, whatever, then obviously cloud service providers cannot be used, the application vendor potentially, and the others will do it. From a development perspective, it's low in the first three cases and I would say medium in the last case. So quickly, very quickly, two upcoming features of Intel TDXO that we have at least a little bit time for Q&A. First TD migration. TD migration will allow to live migrate one TD from one platform to another. It uses a service TD called the migration TD to do that. All the data is obviously encrypted. Just skipping a few details now, everything is encrypted. Everything will go over step by step, a short break. One TD on the left side goes down, the one on the right side goes up, which guarantees that a TD lives only once at a time. You should not have two different TDs with the same content. And one last feature, Intel TDX Connect. I mentioned that before. So it's a bit problematic at the moment to connect trust domains with a device. It is possible, but what's needed at the moment is the trust domain, like everything in the private memory of the trust domain is encrypted. But it can't directly, so it can write to shared memory, right? That's what it can, but it can't, no. It can't directly write to device. What it only can do is put data on a shared memory and the device can take the data from a shared memory, right? What we call a bounce buffer. So this is a bit slow. Still, it can be done securely, right? If a secure session key is established between device and trust domain, the data can be encrypted, put there, read in the device, and it's encrypted. So even today, this solution is there. Like you can connect an Intel TDX trust domain to an NVIDIA GPU with their confidential computing technology, have it end to end secure. That's possible. But it's a bit slow, or it has a bit of overhead because of this bounce buffer stuff. And this will change when Intel TDX comes along. Because with Intel TDX Connect, the idea is that a trusted device is put in, let's say, the trust zone of a trust domain. They're able to write into each other's memory directly after they trust each other, which will make the whole thing more efficient and has low overhead. This is just nothing I mentioned today is any secret, right? All of that is open here on this page. We have documentations. Knock yourself out. It's like thousands of pages you can read in the PDFs to get all the details you want. If not, feel free to reach out to me at any point after this talk, at any point later. If you have interest in, for example, bare metal access to machine, I'm also your guy for whatever experiments at the University as an organization, whatever, right? Because at the Cloud Service providers, you normally don't get that, right? You get a trust domain. That's it. Might be enough in many cases, but not in all. So reach out to me and thank you for your attention. Can we repeat the questions? Yeah, so, yeah? I have to repeat the question. The question was, is it possible, or I rephrase, correct me if I'm doing a bad job there. You said, it's possible to run a legacy application in a trust domain. Yeah, that's what you said. The question is, how is the integrity of such classes being maintained considering the fact that this application is legacy doesn't? Okay, yeah. So the question was, again, in my words, how is the process then, how is this protected because the application wasn't written, right, for this environment? And the answer is, it depends, right? Meaning you have an in-memory only application, then you don't have to do anything, right? Because the main memory is encrypted and you're done. As soon as your application writes to disk, it's a different story, right? Because if you write to disk plain text data, then it's plain text and everybody will see it. One thing you can do is you can either your application encrypts data before, then it is a change to the application, right? Or another variant is you activate, for example, full disk encryption in your operating system. Then you have to manage the key, right? That's another question then, but that's what you can do. And exactly the same for network connections, right? If you, again, send plain text data out, yeah, plain text data is out. But if you use TLS, you can do it, you just put your TLS endpoint in the trust domain now and you're good. Yeah? Thank you for a very nice talk. So I had a question about the state software support. Thank you very much. So I had a question related to the sort of status on the software support on the guest side, right? So with some of these comparable technologies today, you still need kind of some components in the middle on the guest side, like basically like firmware inside the guest or like Paraviser functionality that hides some of this communication between the underlying layer. So how is it with TDX today? Can you take like a stock Linux kernel and run this? So you still need some components there which are not yet fully open source? So at the moment, as I said, briefly before not everything is upstreamed, right? So it's, I guess, like the basic enabling should be there middle of the year. So at the moment, it's not there fully. But what we have is what we call a TDX early preview. So we collaborate with three operate distribution vendors to provide specific distribution versions. And that's canonical, Red Hat and SUSE. And we have all this is online. You just go to GitHub and it's, I just did it yesterday night, right? It's really like you start up a Buntu 2310, for example, you clone their repository, click install, done. You go to the buyers and activate TDX. Then there have another script to create a guest image. I don't just take them like 15 minutes to create, but just of download and all of that stuff. You start your trust domain and you're done. So that's pretty easy already. Yeah, thank you for the talk. I have kind of an obvious question. Is there a latency cost within one trusted domain from memory access given that it's encrypted and so on? So performance you mean, right? Okay. Yes, obviously it has to be, right? Infection can't be for free. But how high the overhead is highly depends on your workload. If it's a processor only workload, it's basically free. I don't have concrete numbers, but let's say one, two percent, right? So really, really low. If it's really disk IO sensitive, it's a different question, right? Because of this balance buffer and all of that stuff. Again, don't nail me on it, but let's say like it might go to 10% or even more, right? It's really, really dependent on your workload. I guess I have to stop now, but you can just come to me later, right?", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 9.52, "text": " Perfect, I guess then let's start right a bit earlier, but then leaves potentially a", "tokens": [50364, 10246, 11, 286, 2041, 550, 718, 311, 722, 558, 257, 857, 3071, 11, 457, 550, 5510, 7263, 257, 50840], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 1, "seek": 0, "start": 9.52, "end": 10.72, "text": " few times for questions.", "tokens": [50840, 1326, 1413, 337, 1651, 13, 50900], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 2, "seek": 0, "start": 10.72, "end": 12.8, "text": " Hi, my name is Benifuri.", "tokens": [50900, 2421, 11, 452, 1315, 307, 3964, 351, 9744, 13, 51004], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 3, "seek": 0, "start": 12.8, "end": 17.76, "text": " I work at the Confidential Computing Enabling Team at Intel.", "tokens": [51004, 286, 589, 412, 264, 11701, 1078, 831, 37804, 278, 2193, 20112, 7606, 412, 19762, 13, 51252], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 4, "seek": 0, "start": 17.76, "end": 23.88, "text": " My main job is to, I can try, but I notice when I said there that it's not really loud,", "tokens": [51252, 1222, 2135, 1691, 307, 281, 11, 286, 393, 853, 11, 457, 286, 3449, 562, 286, 848, 456, 300, 309, 311, 406, 534, 6588, 11, 51558], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 5, "seek": 0, "start": 23.88, "end": 25.88, "text": " the speaker is not loud there.", "tokens": [51558, 264, 8145, 307, 406, 6588, 456, 13, 51658], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 6, "seek": 0, "start": 25.88, "end": 29.04, "text": " Okay, speak closer to the microphone, I will try.", "tokens": [51658, 1033, 11, 1710, 4966, 281, 264, 10952, 11, 286, 486, 853, 13, 51816], "temperature": 0.0, "avg_logprob": -0.324712465394218, "compression_ratio": 1.5358649789029535, "no_speech_prob": 0.21572038531303406}, {"id": 7, "seek": 2904, "start": 29.04, "end": 35.04, "text": " So yes, Intel Confidential Computing Enabling, right, we work together with academics, companies,", "tokens": [50364, 407, 2086, 11, 19762, 11701, 1078, 831, 37804, 278, 2193, 20112, 11, 558, 11, 321, 589, 1214, 365, 25695, 11, 3431, 11, 50664], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 8, "seek": 2904, "start": 35.04, "end": 39.84, "text": " partners, whoever wants to use our technology, we help them to do that, right, that's my", "tokens": [50664, 4462, 11, 11387, 2738, 281, 764, 527, 2899, 11, 321, 854, 552, 281, 360, 300, 11, 558, 11, 300, 311, 452, 50904], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 9, "seek": 2904, "start": 39.84, "end": 40.84, "text": " job.", "tokens": [50904, 1691, 13, 50954], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 10, "seek": 2904, "start": 40.84, "end": 46.239999999999995, "text": " Today, I will talk about Intel TDX, and I will, it's called Deep Dive, but I will start", "tokens": [50954, 2692, 11, 286, 486, 751, 466, 19762, 42606, 55, 11, 293, 286, 486, 11, 309, 311, 1219, 14895, 413, 488, 11, 457, 286, 486, 722, 51224], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 11, "seek": 2904, "start": 46.239999999999995, "end": 50.4, "text": " with an overview and then go deep in a few slides, right.", "tokens": [51224, 365, 364, 12492, 293, 550, 352, 2452, 294, 257, 1326, 9788, 11, 558, 13, 51432], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 12, "seek": 2904, "start": 50.4, "end": 54.0, "text": " So overview first, I don't want to speak too much about that, right, it was just done in", "tokens": [51432, 407, 12492, 700, 11, 286, 500, 380, 528, 281, 1710, 886, 709, 466, 300, 11, 558, 11, 309, 390, 445, 1096, 294, 51612], "temperature": 0.0, "avg_logprob": -0.17937760353088378, "compression_ratio": 1.6511627906976745, "no_speech_prob": 0.0012817427050322294}, {"id": 13, "seek": 5400, "start": 54.0, "end": 56.52, "text": " the talk we just had.", "tokens": [50364, 264, 751, 321, 445, 632, 13, 50490], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 14, "seek": 5400, "start": 56.52, "end": 61.32, "text": " Without confidential computing, or if you don't use any protection mechanism, everything", "tokens": [50490, 9129, 27054, 15866, 11, 420, 498, 291, 500, 380, 764, 604, 6334, 7513, 11, 1203, 50730], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 15, "seek": 5400, "start": 61.32, "end": 65.88, "text": " is in what we call the trust boundary, right, everything can access your confidential data.", "tokens": [50730, 307, 294, 437, 321, 818, 264, 3361, 12866, 11, 558, 11, 1203, 393, 2105, 428, 27054, 1412, 13, 50958], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 16, "seek": 5400, "start": 65.88, "end": 70.2, "text": " With our first technology, Intel S-Chicks was just mentioned, right, only the application", "tokens": [50958, 2022, 527, 700, 2899, 11, 19762, 318, 12, 6546, 7663, 390, 445, 2835, 11, 558, 11, 787, 264, 3861, 51174], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 17, "seek": 5400, "start": 70.2, "end": 75.56, "text": " with Intel TDX, the topic of today, a virtual machine is protected, right, everything of", "tokens": [51174, 365, 19762, 42606, 55, 11, 264, 4829, 295, 965, 11, 257, 6374, 3479, 307, 10594, 11, 558, 11, 1203, 295, 51442], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 18, "seek": 5400, "start": 75.56, "end": 81.32, "text": " that was just mentioned, just want to mention it again, because like we have the options,", "tokens": [51442, 300, 390, 445, 2835, 11, 445, 528, 281, 2152, 309, 797, 11, 570, 411, 321, 362, 264, 3956, 11, 51730], "temperature": 0.0, "avg_logprob": -0.26022003792427684, "compression_ratio": 1.7706766917293233, "no_speech_prob": 0.021926313638687134}, {"id": 19, "seek": 8132, "start": 81.32, "end": 84.55999999999999, "text": " right, use whatever you want.", "tokens": [50364, 558, 11, 764, 2035, 291, 528, 13, 50526], "temperature": 0.0, "avg_logprob": -0.1971086437782545, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.021255729719996452}, {"id": 20, "seek": 8132, "start": 84.55999999999999, "end": 89.96, "text": " In general, you could say Intel S-Chicks is the more secure technology, Intel TDX the", "tokens": [50526, 682, 2674, 11, 291, 727, 584, 19762, 318, 12, 6546, 7663, 307, 264, 544, 7144, 2899, 11, 19762, 42606, 55, 264, 50796], "temperature": 0.0, "avg_logprob": -0.1971086437782545, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.021255729719996452}, {"id": 21, "seek": 8132, "start": 89.96, "end": 95.44, "text": " more usable technology, right, but that's up for debate if you want.", "tokens": [50796, 544, 29975, 2899, 11, 558, 11, 457, 300, 311, 493, 337, 7958, 498, 291, 528, 13, 51070], "temperature": 0.0, "avg_logprob": -0.1971086437782545, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.021255729719996452}, {"id": 22, "seek": 8132, "start": 95.44, "end": 100.0, "text": " Yeah, today we will concentrate on Intel TDX only.", "tokens": [51070, 865, 11, 965, 321, 486, 18089, 322, 19762, 42606, 55, 787, 13, 51298], "temperature": 0.0, "avg_logprob": -0.1971086437782545, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.021255729719996452}, {"id": 23, "seek": 8132, "start": 100.0, "end": 107.52, "text": " Here, you see an overview, like this is what a regular system looks like, right, we have", "tokens": [51298, 1692, 11, 291, 536, 364, 12492, 11, 411, 341, 307, 437, 257, 3890, 1185, 1542, 411, 11, 558, 11, 321, 362, 51674], "temperature": 0.0, "avg_logprob": -0.1971086437782545, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.021255729719996452}, {"id": 24, "seek": 10752, "start": 107.52, "end": 112.8, "text": " the platform with cores, caches and so on, the memory and a regular hypervisor, a virtual", "tokens": [50364, 264, 3663, 365, 24826, 11, 269, 13272, 293, 370, 322, 11, 264, 4675, 293, 257, 3890, 9848, 16457, 11, 257, 6374, 50628], "temperature": 0.0, "avg_logprob": -0.18799299075279707, "compression_ratio": 1.9636363636363636, "no_speech_prob": 0.0161239355802536}, {"id": 25, "seek": 10752, "start": 112.8, "end": 115.08, "text": " machine monitor here.", "tokens": [50628, 3479, 6002, 510, 13, 50742], "temperature": 0.0, "avg_logprob": -0.18799299075279707, "compression_ratio": 1.9636363636363636, "no_speech_prob": 0.0161239355802536}, {"id": 26, "seek": 10752, "start": 115.08, "end": 123.72, "text": " And with normal VMs, this hypervisor starts the virtual machines, right, and it is also,", "tokens": [50742, 400, 365, 2710, 18038, 82, 11, 341, 9848, 16457, 3719, 264, 6374, 8379, 11, 558, 11, 293, 309, 307, 611, 11, 51174], "temperature": 0.0, "avg_logprob": -0.18799299075279707, "compression_ratio": 1.9636363636363636, "no_speech_prob": 0.0161239355802536}, {"id": 27, "seek": 10752, "start": 123.72, "end": 128.44, "text": " this hypervisor isolates the virtual machines from each other and isolates the virtual machines", "tokens": [51174, 341, 9848, 16457, 7381, 1024, 264, 6374, 8379, 490, 1184, 661, 293, 7381, 1024, 264, 6374, 8379, 51410], "temperature": 0.0, "avg_logprob": -0.18799299075279707, "compression_ratio": 1.9636363636363636, "no_speech_prob": 0.0161239355802536}, {"id": 28, "seek": 10752, "start": 128.44, "end": 130.92, "text": " from the hypervisor itself.", "tokens": [51410, 490, 264, 9848, 16457, 2564, 13, 51534], "temperature": 0.0, "avg_logprob": -0.18799299075279707, "compression_ratio": 1.9636363636363636, "no_speech_prob": 0.0161239355802536}, {"id": 29, "seek": 13092, "start": 130.92, "end": 140.32, "text": " In the main memory, everything is plain text, right, so, which means that every person and", "tokens": [50364, 682, 264, 2135, 4675, 11, 1203, 307, 11121, 2487, 11, 558, 11, 370, 11, 597, 1355, 300, 633, 954, 293, 50834], "temperature": 0.0, "avg_logprob": -0.15126368403434753, "compression_ratio": 1.654708520179372, "no_speech_prob": 0.04206163063645363}, {"id": 30, "seek": 13092, "start": 140.32, "end": 146.27999999999997, "text": " every program with the necessary privileges can access the data, right, it's plain text.", "tokens": [50834, 633, 1461, 365, 264, 4818, 32588, 393, 2105, 264, 1412, 11, 558, 11, 309, 311, 11121, 2487, 13, 51132], "temperature": 0.0, "avg_logprob": -0.15126368403434753, "compression_ratio": 1.654708520179372, "no_speech_prob": 0.04206163063645363}, {"id": 31, "seek": 13092, "start": 146.27999999999997, "end": 148.51999999999998, "text": " This is different with Intel TDX.", "tokens": [51132, 639, 307, 819, 365, 19762, 42606, 55, 13, 51244], "temperature": 0.0, "avg_logprob": -0.15126368403434753, "compression_ratio": 1.654708520179372, "no_speech_prob": 0.04206163063645363}, {"id": 32, "seek": 13092, "start": 148.51999999999998, "end": 153.88, "text": " With Intel TDX, we introduce what we call the Intel TDX module.", "tokens": [51244, 2022, 19762, 42606, 55, 11, 321, 5366, 437, 321, 818, 264, 19762, 42606, 55, 10088, 13, 51512], "temperature": 0.0, "avg_logprob": -0.15126368403434753, "compression_ratio": 1.654708520179372, "no_speech_prob": 0.04206163063645363}, {"id": 33, "seek": 13092, "start": 153.88, "end": 159.79999999999998, "text": " The hypervisor has to be adjusted as well, it's now says here it's TDX enlightened, because", "tokens": [51512, 440, 9848, 16457, 575, 281, 312, 19871, 382, 731, 11, 309, 311, 586, 1619, 510, 309, 311, 42606, 55, 36975, 11, 570, 51808], "temperature": 0.0, "avg_logprob": -0.15126368403434753, "compression_ratio": 1.654708520179372, "no_speech_prob": 0.04206163063645363}, {"id": 34, "seek": 15980, "start": 159.8, "end": 165.92000000000002, "text": " the hypervisor is still responsible for resource management and hypervisor now needs to, instead", "tokens": [50364, 264, 9848, 16457, 307, 920, 6250, 337, 7684, 4592, 293, 9848, 16457, 586, 2203, 281, 11, 2602, 50670], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 35, "seek": 15980, "start": 165.92000000000002, "end": 170.8, "text": " of starting the virtual machines itself, it has to go to the TDX module and say here,", "tokens": [50670, 295, 2891, 264, 6374, 8379, 2564, 11, 309, 575, 281, 352, 281, 264, 42606, 55, 10088, 293, 584, 510, 11, 50914], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 36, "seek": 15980, "start": 170.8, "end": 174.72, "text": " please start your TDX protected virtual machines for me.", "tokens": [50914, 1767, 722, 428, 42606, 55, 10594, 6374, 8379, 337, 385, 13, 51110], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 37, "seek": 15980, "start": 174.72, "end": 180.08, "text": " And this is what the TDX module does, right, it starts to protect the virtual machines,", "tokens": [51110, 400, 341, 307, 437, 264, 42606, 55, 10088, 775, 11, 558, 11, 309, 3719, 281, 2371, 264, 6374, 8379, 11, 51378], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 38, "seek": 15980, "start": 180.08, "end": 182.92000000000002, "text": " which we call trust domains, right.", "tokens": [51378, 597, 321, 818, 3361, 25514, 11, 558, 13, 51520], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 39, "seek": 15980, "start": 182.92000000000002, "end": 188.16000000000003, "text": " Intel TDX stands for Intel Trust Domain Extensions, Intel TDX Protected Virtual Machines, we call", "tokens": [51520, 19762, 42606, 55, 7382, 337, 19762, 11580, 16674, 491, 9881, 8302, 11, 19762, 42606, 55, 32017, 292, 23887, 12089, 1652, 11, 321, 818, 51782], "temperature": 0.0, "avg_logprob": -0.16758567675025063, "compression_ratio": 1.844, "no_speech_prob": 0.002215962391346693}, {"id": 40, "seek": 18816, "start": 188.16, "end": 190.68, "text": " them trust domains.", "tokens": [50364, 552, 3361, 25514, 13, 50490], "temperature": 0.0, "avg_logprob": -0.19668364524841309, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00555001525208354}, {"id": 41, "seek": 18816, "start": 190.68, "end": 196.84, "text": " Inside those trust domains or TDs, the guest OS running there has to be enlightened as well,", "tokens": [50490, 15123, 729, 3361, 25514, 420, 42606, 82, 11, 264, 8341, 12731, 2614, 456, 575, 281, 312, 36975, 382, 731, 11, 50798], "temperature": 0.0, "avg_logprob": -0.19668364524841309, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00555001525208354}, {"id": 42, "seek": 18816, "start": 196.84, "end": 203.0, "text": " right, it has to be at least to have some changes, because it has to handle now accesses", "tokens": [50798, 558, 11, 309, 575, 281, 312, 412, 1935, 281, 362, 512, 2962, 11, 570, 309, 575, 281, 4813, 586, 2105, 279, 51106], "temperature": 0.0, "avg_logprob": -0.19668364524841309, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00555001525208354}, {"id": 43, "seek": 18816, "start": 203.0, "end": 207.88, "text": " to private memory and shared memory, it has to handle that, it also has to handle exceptions", "tokens": [51106, 281, 4551, 4675, 293, 5507, 4675, 11, 309, 575, 281, 4813, 300, 11, 309, 611, 575, 281, 4813, 22847, 51350], "temperature": 0.0, "avg_logprob": -0.19668364524841309, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00555001525208354}, {"id": 44, "seek": 18816, "start": 207.88, "end": 212.84, "text": " and it has to block certain calls that were possible before.", "tokens": [51350, 293, 309, 575, 281, 3461, 1629, 5498, 300, 645, 1944, 949, 13, 51598], "temperature": 0.0, "avg_logprob": -0.19668364524841309, "compression_ratio": 1.7317073170731707, "no_speech_prob": 0.00555001525208354}, {"id": 45, "seek": 21284, "start": 213.84, "end": 220.8, "text": " Yes, the application inside the TD do not have to be adjusted, that's the main advantage", "tokens": [50414, 1079, 11, 264, 3861, 1854, 264, 42606, 360, 406, 362, 281, 312, 19871, 11, 300, 311, 264, 2135, 5002, 50762], "temperature": 0.0, "avg_logprob": -0.15549390394609053, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0007092990563251078}, {"id": 46, "seek": 21284, "start": 220.8, "end": 224.44, "text": " of Intel TDX or comparable technologies.", "tokens": [50762, 295, 19762, 42606, 55, 420, 25323, 7943, 13, 50944], "temperature": 0.0, "avg_logprob": -0.15549390394609053, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0007092990563251078}, {"id": 47, "seek": 21284, "start": 224.44, "end": 230.6, "text": " The main memory belonging to the TD is encrypted with an ephemeral key that is dedicated and", "tokens": [50944, 440, 2135, 4675, 22957, 281, 264, 42606, 307, 36663, 365, 364, 308, 41245, 2790, 2141, 300, 307, 8374, 293, 51252], "temperature": 0.0, "avg_logprob": -0.15549390394609053, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0007092990563251078}, {"id": 48, "seek": 21284, "start": 230.6, "end": 234.48000000000002, "text": " hardware managed, right, as you see on the slide, it says encrypted with key one and", "tokens": [51252, 8837, 6453, 11, 558, 11, 382, 291, 536, 322, 264, 4137, 11, 309, 1619, 36663, 365, 2141, 472, 293, 51446], "temperature": 0.0, "avg_logprob": -0.15549390394609053, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0007092990563251078}, {"id": 49, "seek": 21284, "start": 234.48000000000002, "end": 240.52, "text": " key two, because every trust domain is encrypted with a different key.", "tokens": [51446, 2141, 732, 11, 570, 633, 3361, 9274, 307, 36663, 365, 257, 819, 2141, 13, 51748], "temperature": 0.0, "avg_logprob": -0.15549390394609053, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0007092990563251078}, {"id": 50, "seek": 24052, "start": 240.52, "end": 245.16, "text": " Inside the CPU, the data belonging to the TD is plain text, right, that's what confidential", "tokens": [50364, 15123, 264, 13199, 11, 264, 1412, 22957, 281, 264, 42606, 307, 11121, 2487, 11, 558, 11, 300, 311, 437, 27054, 50596], "temperature": 0.0, "avg_logprob": -0.1097793854199923, "compression_ratio": 1.7721518987341771, "no_speech_prob": 0.002630489645525813}, {"id": 51, "seek": 24052, "start": 245.16, "end": 251.16000000000003, "text": " computing does, inside the CPU, data is plain text, but the CPU takes care that only the", "tokens": [50596, 15866, 775, 11, 1854, 264, 13199, 11, 1412, 307, 11121, 2487, 11, 457, 264, 13199, 2516, 1127, 300, 787, 264, 50896], "temperature": 0.0, "avg_logprob": -0.1097793854199923, "compression_ratio": 1.7721518987341771, "no_speech_prob": 0.002630489645525813}, {"id": 52, "seek": 24052, "start": 251.16000000000003, "end": 256.24, "text": " trust domain to which the data belongs has access to the data.", "tokens": [50896, 3361, 9274, 281, 597, 264, 1412, 12953, 575, 2105, 281, 264, 1412, 13, 51150], "temperature": 0.0, "avg_logprob": -0.1097793854199923, "compression_ratio": 1.7721518987341771, "no_speech_prob": 0.002630489645525813}, {"id": 53, "seek": 24052, "start": 256.24, "end": 260.24, "text": " Combining the main memory encryption and access control, Intel TDX enforces the isolation", "tokens": [51150, 25939, 1760, 264, 2135, 4675, 29575, 293, 2105, 1969, 11, 19762, 42606, 55, 25495, 887, 264, 16001, 51350], "temperature": 0.0, "avg_logprob": -0.1097793854199923, "compression_ratio": 1.7721518987341771, "no_speech_prob": 0.002630489645525813}, {"id": 54, "seek": 24052, "start": 260.24, "end": 266.72, "text": " of the different TDs by using the Intel TDX module, on top of that, attestation proves", "tokens": [51350, 295, 264, 819, 42606, 82, 538, 1228, 264, 19762, 42606, 55, 10088, 11, 322, 1192, 295, 300, 11, 951, 377, 399, 25019, 51674], "temperature": 0.0, "avg_logprob": -0.1097793854199923, "compression_ratio": 1.7721518987341771, "no_speech_prob": 0.002630489645525813}, {"id": 55, "seek": 26672, "start": 266.72, "end": 271.88000000000005, "text": " that this is the case, right, what we will talk about attestation a bit later.", "tokens": [50364, 300, 341, 307, 264, 1389, 11, 558, 11, 437, 321, 486, 751, 466, 951, 377, 399, 257, 857, 1780, 13, 50622], "temperature": 0.0, "avg_logprob": -0.16192594564185953, "compression_ratio": 1.653386454183267, "no_speech_prob": 0.030149124562740326}, {"id": 56, "seek": 26672, "start": 271.88000000000005, "end": 278.56, "text": " This slide is about the Intel TDX enabling in Linux, it contains a lot of details, I", "tokens": [50622, 639, 4137, 307, 466, 264, 19762, 42606, 55, 23148, 294, 18734, 11, 309, 8306, 257, 688, 295, 4365, 11, 286, 50956], "temperature": 0.0, "avg_logprob": -0.16192594564185953, "compression_ratio": 1.653386454183267, "no_speech_prob": 0.030149124562740326}, {"id": 57, "seek": 26672, "start": 278.56, "end": 283.84000000000003, "text": " don't want to go into every detail, I only want to highlight three things.", "tokens": [50956, 500, 380, 528, 281, 352, 666, 633, 2607, 11, 286, 787, 528, 281, 5078, 1045, 721, 13, 51220], "temperature": 0.0, "avg_logprob": -0.16192594564185953, "compression_ratio": 1.653386454183267, "no_speech_prob": 0.030149124562740326}, {"id": 58, "seek": 26672, "start": 283.84000000000003, "end": 289.88000000000005, "text": " First via VM isolation requires to enable a lot of parts of the software and Intel has", "tokens": [51220, 2386, 5766, 18038, 16001, 7029, 281, 9528, 257, 688, 295, 3166, 295, 264, 4722, 293, 19762, 575, 51522], "temperature": 0.0, "avg_logprob": -0.16192594564185953, "compression_ratio": 1.653386454183267, "no_speech_prob": 0.030149124562740326}, {"id": 59, "seek": 26672, "start": 289.88000000000005, "end": 296.64000000000004, "text": " done that, right, we have put the work in and basically everything is open source, right,", "tokens": [51522, 1096, 300, 11, 558, 11, 321, 362, 829, 264, 589, 294, 293, 1936, 1203, 307, 1269, 4009, 11, 558, 11, 51860], "temperature": 0.0, "avg_logprob": -0.16192594564185953, "compression_ratio": 1.653386454183267, "no_speech_prob": 0.030149124562740326}, {"id": 60, "seek": 29664, "start": 297.56, "end": 302.0, "text": " and this is the, basically everything is open source, and even the ones in gray, they are", "tokens": [50410, 293, 341, 307, 264, 11, 1936, 1203, 307, 1269, 4009, 11, 293, 754, 264, 2306, 294, 10855, 11, 436, 366, 50632], "temperature": 0.0, "avg_logprob": -0.2511183353180581, "compression_ratio": 1.6566523605150214, "no_speech_prob": 0.01382137555629015}, {"id": 61, "seek": 29664, "start": 302.0, "end": 307.44, "text": " only gray because they are a reference implementation, but also open source.", "tokens": [50632, 787, 10855, 570, 436, 366, 257, 6408, 11420, 11, 457, 611, 1269, 4009, 13, 50904], "temperature": 0.0, "avg_logprob": -0.2511183353180581, "compression_ratio": 1.6566523605150214, "no_speech_prob": 0.01382137555629015}, {"id": 62, "seek": 29664, "start": 307.44, "end": 313.15999999999997, "text": " And most of the pieces are already upstreamed, but not everything, right, that's the current", "tokens": [50904, 400, 881, 295, 264, 3755, 366, 1217, 33915, 292, 11, 457, 406, 1203, 11, 558, 11, 300, 311, 264, 2190, 51190], "temperature": 0.0, "avg_logprob": -0.2511183353180581, "compression_ratio": 1.6566523605150214, "no_speech_prob": 0.01382137555629015}, {"id": 63, "seek": 29664, "start": 313.15999999999997, "end": 318.36, "text": " situation of Intel TDX, but this will change soon, hopefully.", "tokens": [51190, 2590, 295, 19762, 42606, 55, 11, 457, 341, 486, 1319, 2321, 11, 4696, 13, 51450], "temperature": 0.0, "avg_logprob": -0.2511183353180581, "compression_ratio": 1.6566523605150214, "no_speech_prob": 0.01382137555629015}, {"id": 64, "seek": 29664, "start": 318.36, "end": 323.15999999999997, "text": " One last slide of the overview is the availability of Intel TDX.", "tokens": [51450, 1485, 1036, 4137, 295, 264, 12492, 307, 264, 17945, 295, 19762, 42606, 55, 13, 51690], "temperature": 0.0, "avg_logprob": -0.2511183353180581, "compression_ratio": 1.6566523605150214, "no_speech_prob": 0.01382137555629015}, {"id": 65, "seek": 32316, "start": 323.20000000000005, "end": 329.0, "text": " Intel TDX was introduced at the beginning of 2023 with the fourth generation of Intel Xeon", "tokens": [50366, 19762, 42606, 55, 390, 7268, 412, 264, 2863, 295, 44377, 365, 264, 6409, 5125, 295, 19762, 1783, 27015, 50656], "temperature": 0.0, "avg_logprob": -0.2222794002956814, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.011840119026601315}, {"id": 66, "seek": 32316, "start": 329.0, "end": 335.88000000000005, "text": " Scalables, but back then, only at four leading cloud service providers you see on the right.", "tokens": [50656, 2747, 304, 2965, 11, 457, 646, 550, 11, 787, 412, 1451, 5775, 4588, 2643, 11330, 291, 536, 322, 264, 558, 13, 51000], "temperature": 0.0, "avg_logprob": -0.2222794002956814, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.011840119026601315}, {"id": 67, "seek": 32316, "start": 335.88000000000005, "end": 340.76000000000005, "text": " Everybody else buying these CPUs did not have Intel TDX enabled.", "tokens": [51000, 7646, 1646, 6382, 613, 13199, 82, 630, 406, 362, 19762, 42606, 55, 15172, 13, 51244], "temperature": 0.0, "avg_logprob": -0.2222794002956814, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.011840119026601315}, {"id": 68, "seek": 32316, "start": 340.76000000000005, "end": 348.36, "text": " Previous at that cloud service providers started already in Q1 2023, and general ability is", "tokens": [51244, 6001, 1502, 412, 300, 4588, 2643, 11330, 1409, 1217, 294, 1249, 16, 44377, 11, 293, 2674, 3485, 307, 51624], "temperature": 0.0, "avg_logprob": -0.2222794002956814, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.011840119026601315}, {"id": 69, "seek": 32316, "start": 348.36, "end": 352.44000000000005, "text": " supposed to be soon this year.", "tokens": [51624, 3442, 281, 312, 2321, 341, 1064, 13, 51828], "temperature": 0.0, "avg_logprob": -0.2222794002956814, "compression_ratio": 1.5588235294117647, "no_speech_prob": 0.011840119026601315}, {"id": 70, "seek": 35244, "start": 352.44, "end": 357.52, "text": " Intel TDX became generally available with the fifth generation of Xeon Scalables, which", "tokens": [50364, 19762, 42606, 55, 3062, 5101, 2435, 365, 264, 9266, 5125, 295, 1783, 27015, 2747, 304, 2965, 11, 597, 50618], "temperature": 0.0, "avg_logprob": -0.25735258127187755, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.00037392074591480196}, {"id": 71, "seek": 35244, "start": 357.52, "end": 363.12, "text": " was introduced at the end of last year in December, meaning if you now go to your favorite", "tokens": [50618, 390, 7268, 412, 264, 917, 295, 1036, 1064, 294, 7687, 11, 3620, 498, 291, 586, 352, 281, 428, 2954, 50898], "temperature": 0.0, "avg_logprob": -0.25735258127187755, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.00037392074591480196}, {"id": 72, "seek": 35244, "start": 363.12, "end": 368.08, "text": " hardware vendor, you should be able to get such CPUs or at least soon.", "tokens": [50898, 8837, 24321, 11, 291, 820, 312, 1075, 281, 483, 1270, 13199, 82, 420, 412, 1935, 2321, 13, 51146], "temperature": 0.0, "avg_logprob": -0.25735258127187755, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.00037392074591480196}, {"id": 73, "seek": 35244, "start": 368.08, "end": 370.96, "text": " Good.", "tokens": [51146, 2205, 13, 51290], "temperature": 0.0, "avg_logprob": -0.25735258127187755, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.00037392074591480196}, {"id": 74, "seek": 35244, "start": 370.96, "end": 374.92, "text": " Now to selected technical details of the technology.", "tokens": [51290, 823, 281, 8209, 6191, 4365, 295, 264, 2899, 13, 51488], "temperature": 0.0, "avg_logprob": -0.25735258127187755, "compression_ratio": 1.4666666666666666, "no_speech_prob": 0.00037392074591480196}, {"id": 75, "seek": 37492, "start": 375.92, "end": 382.76, "text": " First, the CPU state is kept confidential by managing it in CPU protected memory, and", "tokens": [50414, 2386, 11, 264, 13199, 1785, 307, 4305, 27054, 538, 11642, 309, 294, 13199, 10594, 4675, 11, 293, 50756], "temperature": 0.0, "avg_logprob": -0.12848854064941406, "compression_ratio": 1.8020304568527918, "no_speech_prob": 0.0008038401138037443}, {"id": 76, "seek": 37492, "start": 382.76, "end": 386.0, "text": " that's the responsibility of the TDX module.", "tokens": [50756, 300, 311, 264, 6357, 295, 264, 42606, 55, 10088, 13, 50918], "temperature": 0.0, "avg_logprob": -0.12848854064941406, "compression_ratio": 1.8020304568527918, "no_speech_prob": 0.0008038401138037443}, {"id": 77, "seek": 37492, "start": 386.0, "end": 392.6, "text": " For example, on a TDX exit, the CPU state is saved by the TDX module in a protected", "tokens": [50918, 1171, 1365, 11, 322, 257, 42606, 55, 11043, 11, 264, 13199, 1785, 307, 6624, 538, 264, 42606, 55, 10088, 294, 257, 10594, 51248], "temperature": 0.0, "avg_logprob": -0.12848854064941406, "compression_ratio": 1.8020304568527918, "no_speech_prob": 0.0008038401138037443}, {"id": 78, "seek": 37492, "start": 392.6, "end": 397.0, "text": " memory region, and this memory region is encrypted.", "tokens": [51248, 4675, 4458, 11, 293, 341, 4675, 4458, 307, 36663, 13, 51468], "temperature": 0.0, "avg_logprob": -0.12848854064941406, "compression_ratio": 1.8020304568527918, "no_speech_prob": 0.0008038401138037443}, {"id": 79, "seek": 37492, "start": 397.0, "end": 403.12, "text": " And all memory confidentiality and integrity that's provided by Intel TDX is provided by", "tokens": [51468, 400, 439, 4675, 27054, 507, 293, 16000, 300, 311, 5649, 538, 19762, 42606, 55, 307, 5649, 538, 51774], "temperature": 0.0, "avg_logprob": -0.12848854064941406, "compression_ratio": 1.8020304568527918, "no_speech_prob": 0.0008038401138037443}, {"id": 80, "seek": 40312, "start": 403.12, "end": 412.0, "text": " what we call the TME IM key engine, the total memory encryption, integrity, multi key engine.", "tokens": [50364, 437, 321, 818, 264, 314, 15454, 21463, 2141, 2848, 11, 264, 3217, 4675, 29575, 11, 16000, 11, 4825, 2141, 2848, 13, 50808], "temperature": 0.0, "avg_logprob": -0.17280671993891397, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.007118226960301399}, {"id": 81, "seek": 40312, "start": 412.0, "end": 417.4, "text": " And this is used to encrypt all the main memory belonging to a TD to prevent untrusted software", "tokens": [50808, 400, 341, 307, 1143, 281, 17972, 662, 439, 264, 2135, 4675, 22957, 281, 257, 42606, 281, 4871, 1701, 81, 6589, 4722, 51078], "temperature": 0.0, "avg_logprob": -0.17280671993891397, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.007118226960301399}, {"id": 82, "seek": 40312, "start": 417.4, "end": 420.44, "text": " or from observing the TD's memory.", "tokens": [51078, 420, 490, 22107, 264, 42606, 311, 4675, 13, 51230], "temperature": 0.0, "avg_logprob": -0.17280671993891397, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.007118226960301399}, {"id": 83, "seek": 40312, "start": 420.44, "end": 427.6, "text": " It uses AX XTS 128 bit, and each memory as mentioned before has its own keys.", "tokens": [51230, 467, 4960, 316, 55, 1783, 7327, 29810, 857, 11, 293, 1184, 4675, 382, 2835, 949, 575, 1080, 1065, 9317, 13, 51588], "temperature": 0.0, "avg_logprob": -0.17280671993891397, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.007118226960301399}, {"id": 84, "seek": 40312, "start": 427.6, "end": 432.84000000000003, "text": " The memory integrity feature detects TD private memory corruption by software and direct", "tokens": [51588, 440, 4675, 16000, 4111, 5531, 82, 42606, 4551, 4675, 17959, 538, 4722, 293, 2047, 51850], "temperature": 0.0, "avg_logprob": -0.17280671993891397, "compression_ratio": 1.6224066390041494, "no_speech_prob": 0.007118226960301399}, {"id": 85, "seek": 43284, "start": 432.84, "end": 436.4, "text": " memory access.", "tokens": [50364, 4675, 2105, 13, 50542], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 86, "seek": 43284, "start": 436.4, "end": 442.44, "text": " The TDX module is responsible for managing all the keys, but to encrypt the different", "tokens": [50542, 440, 42606, 55, 10088, 307, 6250, 337, 11642, 439, 264, 9317, 11, 457, 281, 17972, 662, 264, 819, 50844], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 87, "seek": 43284, "start": 442.44, "end": 443.44, "text": " keys.", "tokens": [50844, 9317, 13, 50894], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 88, "seek": 43284, "start": 443.44, "end": 447.52, "text": " But the TDX module itself still does not have access to the keys.", "tokens": [50894, 583, 264, 42606, 55, 10088, 2564, 920, 775, 406, 362, 2105, 281, 264, 9317, 13, 51098], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 89, "seek": 43284, "start": 447.52, "end": 456.44, "text": " This is done by the TME IMK hardware that manages the keys, and the TDX module only references", "tokens": [51098, 639, 307, 1096, 538, 264, 314, 15454, 21463, 42, 8837, 300, 22489, 264, 9317, 11, 293, 264, 42606, 55, 10088, 787, 15400, 51544], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 90, "seek": 43284, "start": 456.44, "end": 457.44, "text": " key IDs.", "tokens": [51544, 2141, 48212, 13, 51594], "temperature": 0.0, "avg_logprob": -0.17349089585341415, "compression_ratio": 1.5681818181818181, "no_speech_prob": 0.000677118543535471}, {"id": 91, "seek": 45744, "start": 458.4, "end": 463.68, "text": " No access at any point to the keys that are actually used for the main memory encryption,", "tokens": [50412, 883, 2105, 412, 604, 935, 281, 264, 9317, 300, 366, 767, 1143, 337, 264, 2135, 4675, 29575, 11, 50676], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 92, "seek": 45744, "start": 463.68, "end": 465.92, "text": " not by any piece of software.", "tokens": [50676, 406, 538, 604, 2522, 295, 4722, 13, 50788], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 93, "seek": 45744, "start": 465.92, "end": 472.32, "text": " I will skip remote attestation for now, because I will explain details later.", "tokens": [50788, 286, 486, 10023, 8607, 951, 377, 399, 337, 586, 11, 570, 286, 486, 2903, 4365, 1780, 13, 51108], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 94, "seek": 45744, "start": 472.32, "end": 475.88, "text": " But a bit about IO compatibility.", "tokens": [51108, 583, 257, 857, 466, 39839, 34237, 13, 51286], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 95, "seek": 45744, "start": 475.88, "end": 480.88, "text": " By default, no direct connection to external devices is possible, because those external", "tokens": [51286, 3146, 7576, 11, 572, 2047, 4984, 281, 8320, 5759, 307, 1944, 11, 570, 729, 8320, 51536], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 96, "seek": 45744, "start": 480.88, "end": 482.44, "text": " devices are untrusted.", "tokens": [51536, 5759, 366, 1701, 81, 6589, 13, 51614], "temperature": 0.0, "avg_logprob": -0.20463934398832775, "compression_ratio": 1.5806451612903225, "no_speech_prob": 0.004328720271587372}, {"id": 97, "seek": 48244, "start": 483.16, "end": 488.24, "text": " SQIO can be emulated by software, but this has performance overhead.", "tokens": [50400, 318, 48, 15167, 393, 312, 846, 6987, 538, 4722, 11, 457, 341, 575, 3389, 19922, 13, 50654], "temperature": 0.0, "avg_logprob": -0.18444188435872397, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.002671517664566636}, {"id": 98, "seek": 48244, "start": 488.24, "end": 493.12, "text": " At the end of the talk, I will talk a bit more about these aspects and how the situation", "tokens": [50654, 1711, 264, 917, 295, 264, 751, 11, 286, 486, 751, 257, 857, 544, 466, 613, 7270, 293, 577, 264, 2590, 50898], "temperature": 0.0, "avg_logprob": -0.18444188435872397, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.002671517664566636}, {"id": 99, "seek": 48244, "start": 493.12, "end": 500.4, "text": " should be changed or migrated in the future.", "tokens": [50898, 820, 312, 3105, 420, 48329, 294, 264, 2027, 13, 51262], "temperature": 0.0, "avg_logprob": -0.18444188435872397, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.002671517664566636}, {"id": 100, "seek": 48244, "start": 500.4, "end": 506.84, "text": " With Intel TDX, performance monitoring and debug facilities run inside TTD.", "tokens": [51262, 2022, 19762, 42606, 55, 11, 3389, 11028, 293, 24083, 9406, 1190, 1854, 32576, 35, 13, 51584], "temperature": 0.0, "avg_logprob": -0.18444188435872397, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.002671517664566636}, {"id": 101, "seek": 48244, "start": 506.84, "end": 512.4, "text": " This is a difference compared to Intel SGX, because this means you can debug your application", "tokens": [51584, 639, 307, 257, 2649, 5347, 281, 19762, 34520, 55, 11, 570, 341, 1355, 291, 393, 24083, 428, 3861, 51862], "temperature": 0.0, "avg_logprob": -0.18444188435872397, "compression_ratio": 1.5435684647302905, "no_speech_prob": 0.002671517664566636}, {"id": 102, "seek": 51240, "start": 513.36, "end": 515.48, "text": " handling sensitive data.", "tokens": [50412, 13175, 9477, 1412, 13, 50518], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 103, "seek": 51240, "start": 515.48, "end": 520.3199999999999, "text": " Because even during debugging, you are protected, you are inside the trust domain.", "tokens": [50518, 1436, 754, 1830, 45592, 11, 291, 366, 10594, 11, 291, 366, 1854, 264, 3361, 9274, 13, 50760], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 104, "seek": 51240, "start": 520.3199999999999, "end": 524.76, "text": " Sure, the person that does the debugging now has access, but still the infrastructure", "tokens": [50760, 4894, 11, 264, 954, 300, 775, 264, 45592, 586, 575, 2105, 11, 457, 920, 264, 6896, 50982], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 105, "seek": 51240, "start": 524.76, "end": 529.04, "text": " provider doesn't see it.", "tokens": [50982, 12398, 1177, 380, 536, 309, 13, 51196], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 106, "seek": 51240, "start": 529.04, "end": 534.72, "text": " One final aspect here, the page table management happens inside the trust domain now to address", "tokens": [51196, 1485, 2572, 4171, 510, 11, 264, 3028, 3199, 4592, 2314, 1854, 264, 3361, 9274, 586, 281, 2985, 51480], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 107, "seek": 51240, "start": 534.72, "end": 535.72, "text": " remapping attacks.", "tokens": [51480, 890, 10534, 8122, 13, 51530], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 108, "seek": 51240, "start": 535.72, "end": 538.4399999999999, "text": " This was also different with SGX.", "tokens": [51530, 639, 390, 611, 819, 365, 34520, 55, 13, 51666], "temperature": 0.0, "avg_logprob": -0.25588526670960177, "compression_ratio": 1.6311111111111112, "no_speech_prob": 0.016372013837099075}, {"id": 109, "seek": 53844, "start": 538.44, "end": 544.48, "text": " It was responsibility of the operating system, which was untrusted.", "tokens": [50364, 467, 390, 6357, 295, 264, 7447, 1185, 11, 597, 390, 1701, 81, 6589, 13, 50666], "temperature": 0.0, "avg_logprob": -0.2164152617095619, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.001646898570470512}, {"id": 110, "seek": 53844, "start": 544.48, "end": 550.48, "text": " A few more details about the TDX module and what we call the secure arbitration mode.", "tokens": [50666, 316, 1326, 544, 4365, 466, 264, 42606, 55, 10088, 293, 437, 321, 818, 264, 7144, 14931, 2405, 4391, 13, 50966], "temperature": 0.0, "avg_logprob": -0.2164152617095619, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.001646898570470512}, {"id": 111, "seek": 53844, "start": 550.48, "end": 555.8800000000001, "text": " The TDX module is provided by Intel and the code is open source.", "tokens": [50966, 440, 42606, 55, 10088, 307, 5649, 538, 19762, 293, 264, 3089, 307, 1269, 4009, 13, 51236], "temperature": 0.0, "avg_logprob": -0.2164152617095619, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.001646898570470512}, {"id": 112, "seek": 53844, "start": 555.8800000000001, "end": 560.48, "text": " Since only two weeks ago or something, it's on GitHub now.", "tokens": [51236, 4162, 787, 732, 3259, 2057, 420, 746, 11, 309, 311, 322, 23331, 586, 13, 51466], "temperature": 0.0, "avg_logprob": -0.2164152617095619, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.001646898570470512}, {"id": 113, "seek": 53844, "start": 560.48, "end": 566.44, "text": " The seam loader verifies the signature of the Intel TDX module when the system boots and", "tokens": [51466, 440, 12337, 3677, 260, 1306, 11221, 264, 13397, 295, 264, 19762, 42606, 55, 10088, 562, 264, 1185, 15194, 293, 51764], "temperature": 0.0, "avg_logprob": -0.2164152617095619, "compression_ratio": 1.5913043478260869, "no_speech_prob": 0.001646898570470512}, {"id": 114, "seek": 56644, "start": 566.44, "end": 571.48, "text": " loads it into a special memory region, which we call the seam RR.", "tokens": [50364, 12668, 309, 666, 257, 2121, 4675, 4458, 11, 597, 321, 818, 264, 12337, 497, 49, 13, 50616], "temperature": 0.0, "avg_logprob": -0.20559581445187938, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.0029786948580294847}, {"id": 115, "seek": 56644, "start": 571.48, "end": 577.32, "text": " Only software in the seam RR itself are able to access other memory in the seam RR.", "tokens": [50616, 5686, 4722, 294, 264, 12337, 497, 49, 2564, 366, 1075, 281, 2105, 661, 4675, 294, 264, 12337, 497, 49, 13, 50908], "temperature": 0.0, "avg_logprob": -0.20559581445187938, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.0029786948580294847}, {"id": 116, "seek": 56644, "start": 577.32, "end": 583.24, "text": " In fact, hindering everything but the TDX module from doing anything.", "tokens": [50908, 682, 1186, 11, 20138, 1794, 1203, 457, 264, 42606, 55, 10088, 490, 884, 1340, 13, 51204], "temperature": 0.0, "avg_logprob": -0.20559581445187938, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.0029786948580294847}, {"id": 117, "seek": 56644, "start": 583.24, "end": 588.72, "text": " All other software access and DMA access to this memory is completely blocked.", "tokens": [51204, 1057, 661, 4722, 2105, 293, 413, 9998, 2105, 281, 341, 4675, 307, 2584, 15470, 13, 51478], "temperature": 0.0, "avg_logprob": -0.20559581445187938, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.0029786948580294847}, {"id": 118, "seek": 56644, "start": 588.72, "end": 596.32, "text": " The confidentiality and integrity of the seam RR is again protected with AES, XTS,", "tokens": [51478, 440, 27054, 507, 293, 16000, 295, 264, 12337, 497, 49, 307, 797, 10594, 365, 316, 2358, 11, 1783, 7327, 11, 51858], "temperature": 0.0, "avg_logprob": -0.20559581445187938, "compression_ratio": 1.6422413793103448, "no_speech_prob": 0.0029786948580294847}, {"id": 119, "seek": 59632, "start": 596.32, "end": 597.32, "text": " 128 bit.", "tokens": [50364, 29810, 857, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 120, "seek": 59632, "start": 597.32, "end": 606.72, "text": " The Intel TDX module runs in what we call the secure arbitration mode or seam for short.", "tokens": [50414, 440, 19762, 42606, 55, 10088, 6676, 294, 437, 321, 818, 264, 7144, 14931, 2405, 4391, 420, 12337, 337, 2099, 13, 50884], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 121, "seek": 59632, "start": 606.72, "end": 611.2800000000001, "text": " To be more precise in the seam VMX route mode.", "tokens": [50884, 1407, 312, 544, 13600, 294, 264, 12337, 18038, 55, 7955, 4391, 13, 51112], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 122, "seek": 59632, "start": 611.2800000000001, "end": 614.96, "text": " The ISA was extended with introduction of Intel TDX.", "tokens": [51112, 440, 6205, 32, 390, 10913, 365, 9339, 295, 19762, 42606, 55, 13, 51296], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 123, "seek": 59632, "start": 614.96, "end": 620.12, "text": " The ISA was extended by four instructions to enable the communication between the host,", "tokens": [51296, 440, 6205, 32, 390, 10913, 538, 1451, 9415, 281, 9528, 264, 6101, 1296, 264, 3975, 11, 51554], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 124, "seek": 59632, "start": 620.12, "end": 622.9200000000001, "text": " the hypervisor and the hardware.", "tokens": [51554, 264, 9848, 16457, 293, 264, 8837, 13, 51694], "temperature": 0.0, "avg_logprob": -0.2969398952665783, "compression_ratio": 1.59, "no_speech_prob": 0.0025491181295365095}, {"id": 125, "seek": 62292, "start": 622.92, "end": 627.52, "text": " These four instructions are seam calls for interactions between the hypervisor and the", "tokens": [50364, 1981, 1451, 9415, 366, 12337, 5498, 337, 13280, 1296, 264, 9848, 16457, 293, 264, 50594], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 126, "seek": 62292, "start": 627.52, "end": 628.52, "text": " TDX module.", "tokens": [50594, 42606, 55, 10088, 13, 50644], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 127, "seek": 62292, "start": 628.52, "end": 632.1999999999999, "text": " So, start the TD, stop the TD, things like that.", "tokens": [50644, 407, 11, 722, 264, 42606, 11, 1590, 264, 42606, 11, 721, 411, 300, 13, 50828], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 128, "seek": 62292, "start": 632.1999999999999, "end": 636.56, "text": " Seam read to return the execution control back to the hypervisor.", "tokens": [50828, 1100, 335, 1401, 281, 2736, 264, 15058, 1969, 646, 281, 264, 9848, 16457, 13, 51046], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 129, "seek": 62292, "start": 636.56, "end": 642.64, "text": " TD call from a call from the TD to the TDX module and seam ops for calls from the TDX", "tokens": [51046, 42606, 818, 490, 257, 818, 490, 264, 42606, 281, 264, 42606, 55, 10088, 293, 12337, 44663, 337, 5498, 490, 264, 42606, 55, 51350], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 130, "seek": 62292, "start": 642.64, "end": 645.36, "text": " module to the hardware.", "tokens": [51350, 10088, 281, 264, 8837, 13, 51486], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 131, "seek": 62292, "start": 645.36, "end": 651.92, "text": " Certain security critical ISA instructions are denied in seam to provide the protection", "tokens": [51486, 13407, 3825, 4924, 6205, 32, 9415, 366, 17774, 294, 12337, 281, 2893, 264, 6334, 51814], "temperature": 0.0, "avg_logprob": -0.23330608849386567, "compression_ratio": 1.8597285067873304, "no_speech_prob": 0.016392966732382774}, {"id": 132, "seek": 65192, "start": 651.92, "end": 655.36, "text": " guarantees we want.", "tokens": [50364, 32567, 321, 528, 13, 50536], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 133, "seek": 65192, "start": 655.36, "end": 659.36, "text": " Now to TDX remote attestation.", "tokens": [50536, 823, 281, 42606, 55, 8607, 951, 377, 399, 13, 50736], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 134, "seek": 65192, "start": 659.36, "end": 664.8399999999999, "text": " The TDX remote attestation, you all know that, you all have heard of that in SGX or in other", "tokens": [50736, 440, 42606, 55, 8607, 951, 377, 399, 11, 291, 439, 458, 300, 11, 291, 439, 362, 2198, 295, 300, 294, 34520, 55, 420, 294, 661, 51010], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 135, "seek": 65192, "start": 664.8399999999999, "end": 667.88, "text": " technologies, uses quotes.", "tokens": [51010, 7943, 11, 4960, 19963, 13, 51162], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 136, "seek": 65192, "start": 667.88, "end": 671.04, "text": " Quotes are created by hardware and the quotes are used to prove something.", "tokens": [51162, 2326, 17251, 366, 2942, 538, 8837, 293, 264, 19963, 366, 1143, 281, 7081, 746, 13, 51320], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 137, "seek": 65192, "start": 671.04, "end": 678.9599999999999, "text": " In this case, the TD can prove four different attributes, at least four attributes with this", "tokens": [51320, 682, 341, 1389, 11, 264, 42606, 393, 7081, 1451, 819, 17212, 11, 412, 1935, 1451, 17212, 365, 341, 51716], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 138, "seek": 65192, "start": 678.9599999999999, "end": 680.9599999999999, "text": " quote.", "tokens": [51716, 6513, 13, 51816], "temperature": 0.0, "avg_logprob": -0.2542815715708631, "compression_ratio": 1.6350710900473933, "no_speech_prob": 0.0389750711619854}, {"id": 139, "seek": 68096, "start": 681.48, "end": 685.52, "text": " The booted image is exactly as expected.", "tokens": [50390, 440, 11450, 292, 3256, 307, 2293, 382, 5176, 13, 50592], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 140, "seek": 68096, "start": 685.52, "end": 689.36, "text": " During the loading of the image, it's measured, so it's hashed and this hash is stored in", "tokens": [50592, 6842, 264, 15114, 295, 264, 3256, 11, 309, 311, 12690, 11, 370, 309, 311, 22019, 292, 293, 341, 22019, 307, 12187, 294, 50784], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 141, "seek": 68096, "start": 689.36, "end": 691.6, "text": " what we call the MRTD.", "tokens": [50784, 437, 321, 818, 264, 9808, 51, 35, 13, 50896], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 142, "seek": 68096, "start": 691.6, "end": 694.1600000000001, "text": " This is part of the quote.", "tokens": [50896, 639, 307, 644, 295, 264, 6513, 13, 51024], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 143, "seek": 68096, "start": 694.1600000000001, "end": 699.36, "text": " Second, measurements created or extended during runtime.", "tokens": [51024, 5736, 11, 15383, 2942, 420, 10913, 1830, 34474, 13, 51284], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 144, "seek": 68096, "start": 699.36, "end": 705.72, "text": " Intel TDX has what we call runtime measurement registers or RTMRs and they can be extended", "tokens": [51284, 19762, 42606, 55, 575, 437, 321, 818, 34474, 13160, 38351, 420, 21797, 21173, 82, 293, 436, 393, 312, 10913, 51602], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 145, "seek": 68096, "start": 705.72, "end": 706.72, "text": " at runtime.", "tokens": [51602, 412, 34474, 13, 51652], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 146, "seek": 68096, "start": 706.72, "end": 709.08, "text": " It's not done automatically, it's a can.", "tokens": [51652, 467, 311, 406, 1096, 6772, 11, 309, 311, 257, 393, 13, 51770], "temperature": 0.0, "avg_logprob": -0.26154464145876327, "compression_ratio": 1.7008928571428572, "no_speech_prob": 0.024021388962864876}, {"id": 147, "seek": 70908, "start": 709.2, "end": 715.96, "text": " It's a subtle topic, if you're more interested in that, but that's what we have.", "tokens": [50370, 467, 311, 257, 13743, 4829, 11, 498, 291, 434, 544, 3102, 294, 300, 11, 457, 300, 311, 437, 321, 362, 13, 50708], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 148, "seek": 70908, "start": 715.96, "end": 721.44, "text": " Number three, the TD is executed on an Intel TDX enabled platform.", "tokens": [50708, 5118, 1045, 11, 264, 42606, 307, 17577, 322, 364, 19762, 42606, 55, 15172, 3663, 13, 50982], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 149, "seek": 70908, "start": 721.44, "end": 725.76, "text": " It's obvious that that's important, so nobody should just be able to simulate that it's", "tokens": [50982, 467, 311, 6322, 300, 300, 311, 1021, 11, 370, 5079, 820, 445, 312, 1075, 281, 27817, 300, 309, 311, 51198], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 150, "seek": 70908, "start": 725.76, "end": 728.0, "text": " an Intel TDX hardware.", "tokens": [51198, 364, 19762, 42606, 55, 8837, 13, 51310], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 151, "seek": 70908, "start": 728.0, "end": 732.24, "text": " Number four, the Intel TDX platform is fully patched.", "tokens": [51310, 5118, 1451, 11, 264, 19762, 42606, 55, 3663, 307, 4498, 9972, 292, 13, 51522], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 152, "seek": 70908, "start": 732.24, "end": 737.36, "text": " As you also know, I assume in the past, there were problems with the different technologies,", "tokens": [51522, 1018, 291, 611, 458, 11, 286, 6552, 294, 264, 1791, 11, 456, 645, 2740, 365, 264, 819, 7943, 11, 51778], "temperature": 0.0, "avg_logprob": -0.2735163608444071, "compression_ratio": 1.6265060240963856, "no_speech_prob": 0.0007782282773405313}, {"id": 153, "seek": 73736, "start": 737.48, "end": 743.6, "text": " loading Intel SX, but then we provide a patch and we have the ability to prove at what patch", "tokens": [50370, 15114, 19762, 318, 55, 11, 457, 550, 321, 2893, 257, 9972, 293, 321, 362, 264, 3485, 281, 7081, 412, 437, 9972, 50676], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 154, "seek": 73736, "start": 743.6, "end": 746.12, "text": " level your platform is.", "tokens": [50676, 1496, 428, 3663, 307, 13, 50802], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 155, "seek": 73736, "start": 746.12, "end": 751.64, "text": " Then it's as it says here in the next line, whoever is dessert or a lying party can look", "tokens": [50802, 1396, 309, 311, 382, 309, 1619, 510, 294, 264, 958, 1622, 11, 11387, 307, 14593, 420, 257, 8493, 3595, 393, 574, 51078], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 156, "seek": 73736, "start": 751.64, "end": 756.4, "text": " at the quote and then decide if it trusts the TD or not.", "tokens": [51078, 412, 264, 6513, 293, 550, 4536, 498, 309, 45358, 264, 42606, 420, 406, 13, 51316], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 157, "seek": 73736, "start": 756.4, "end": 761.28, "text": " Some might decide even an older patch level is fine, some say only the newest one is fine,", "tokens": [51316, 2188, 1062, 4536, 754, 364, 4906, 9972, 1496, 307, 2489, 11, 512, 584, 787, 264, 17569, 472, 307, 2489, 11, 51560], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 158, "seek": 73736, "start": 761.28, "end": 766.76, "text": " some say MRTDs has to be a certain aspect, RTMRs have to be or don't have to be used,", "tokens": [51560, 512, 584, 9808, 51, 35, 82, 575, 281, 312, 257, 1629, 4171, 11, 21797, 21173, 82, 362, 281, 312, 420, 500, 380, 362, 281, 312, 1143, 11, 51834], "temperature": 0.0, "avg_logprob": -0.19221685753494014, "compression_ratio": 1.6755725190839694, "no_speech_prob": 0.008570369333028793}, {"id": 159, "seek": 76676, "start": 766.76, "end": 768.16, "text": " all that's possible.", "tokens": [50364, 439, 300, 311, 1944, 13, 50434], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 160, "seek": 76676, "start": 768.16, "end": 775.3199999999999, "text": " A bit more about the process of remote attestation, which should look very, very familiar to people", "tokens": [50434, 316, 857, 544, 466, 264, 1399, 295, 8607, 951, 377, 399, 11, 597, 820, 574, 588, 11, 588, 4963, 281, 561, 50792], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 161, "seek": 76676, "start": 775.3199999999999, "end": 778.96, "text": " that have seen the SGX remote attestation.", "tokens": [50792, 300, 362, 1612, 264, 34520, 55, 8607, 951, 377, 399, 13, 50974], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 162, "seek": 76676, "start": 778.96, "end": 783.6, "text": " It all starts with a relying party triggering the trust domain of here, please prove to", "tokens": [50974, 467, 439, 3719, 365, 257, 24140, 3595, 40406, 264, 3361, 9274, 295, 510, 11, 1767, 7081, 281, 51206], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 163, "seek": 76676, "start": 783.6, "end": 786.08, "text": " me the things I just mentioned.", "tokens": [51206, 385, 264, 721, 286, 445, 2835, 13, 51330], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 164, "seek": 76676, "start": 786.08, "end": 792.68, "text": " The TD will reach out to the TDX module and the TDX module will reach out to the hardware.", "tokens": [51330, 440, 42606, 486, 2524, 484, 281, 264, 42606, 55, 10088, 293, 264, 42606, 55, 10088, 486, 2524, 484, 281, 264, 8837, 13, 51660], "temperature": 0.0, "avg_logprob": -0.17229935557571882, "compression_ratio": 1.6622222222222223, "no_speech_prob": 0.0007551762391813099}, {"id": 165, "seek": 79268, "start": 792.68, "end": 798.64, "text": " The hardware will then generate what we call a TD report and this report contains the measurement", "tokens": [50364, 440, 8837, 486, 550, 8460, 437, 321, 818, 257, 42606, 2275, 293, 341, 2275, 8306, 264, 13160, 50662], "temperature": 0.0, "avg_logprob": -0.15973398162097466, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.007811742834746838}, {"id": 166, "seek": 79268, "start": 798.64, "end": 804.1999999999999, "text": " I mentioned before, but it also has for example the security version number of the TDX module,", "tokens": [50662, 286, 2835, 949, 11, 457, 309, 611, 575, 337, 1365, 264, 3825, 3037, 1230, 295, 264, 42606, 55, 10088, 11, 50940], "temperature": 0.0, "avg_logprob": -0.15973398162097466, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.007811742834746838}, {"id": 167, "seek": 79268, "start": 804.1999999999999, "end": 808.52, "text": " the measurement of the TDX module and the measurements of the TD and all other aspects", "tokens": [50940, 264, 13160, 295, 264, 42606, 55, 10088, 293, 264, 15383, 295, 264, 42606, 293, 439, 661, 7270, 51156], "temperature": 0.0, "avg_logprob": -0.15973398162097466, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.007811742834746838}, {"id": 168, "seek": 79268, "start": 808.52, "end": 815.16, "text": " that are in the trusted computing base and it's signed by the hardware at this point.", "tokens": [51156, 300, 366, 294, 264, 16034, 15866, 3096, 293, 309, 311, 8175, 538, 264, 8837, 412, 341, 935, 13, 51488], "temperature": 0.0, "avg_logprob": -0.15973398162097466, "compression_ratio": 1.7464114832535884, "no_speech_prob": 0.007811742834746838}, {"id": 169, "seek": 81516, "start": 815.16, "end": 822.68, "text": " The TD report then is routed back to the TD, back to the hypervisor and then to what", "tokens": [50364, 440, 42606, 2275, 550, 307, 4020, 292, 646, 281, 264, 42606, 11, 646, 281, 264, 9848, 16457, 293, 550, 281, 437, 50740], "temperature": 0.0, "avg_logprob": -0.19967575073242189, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.10218238830566406}, {"id": 170, "seek": 81516, "start": 822.68, "end": 825.16, "text": " we call the TD quoting enclave.", "tokens": [50740, 321, 818, 264, 42606, 41552, 2058, 27995, 13, 50864], "temperature": 0.0, "avg_logprob": -0.19967575073242189, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.10218238830566406}, {"id": 171, "seek": 81516, "start": 825.16, "end": 830.12, "text": " And as the name enclave already suggests, it's an Intel SGX enclave, right?", "tokens": [50864, 400, 382, 264, 1315, 2058, 27995, 1217, 13409, 11, 309, 311, 364, 19762, 34520, 55, 2058, 27995, 11, 558, 30, 51112], "temperature": 0.0, "avg_logprob": -0.19967575073242189, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.10218238830566406}, {"id": 172, "seek": 81516, "start": 830.12, "end": 835.64, "text": " So we use Intel SGX for remote attestation of TDX.", "tokens": [51112, 407, 321, 764, 19762, 34520, 55, 337, 8607, 951, 377, 399, 295, 42606, 55, 13, 51388], "temperature": 0.0, "avg_logprob": -0.19967575073242189, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.10218238830566406}, {"id": 173, "seek": 81516, "start": 835.64, "end": 841.28, "text": " The TD quoting enclave checks if the report was signed at the same platform and if that's", "tokens": [51388, 440, 42606, 41552, 2058, 27995, 13834, 498, 264, 2275, 390, 8175, 412, 264, 912, 3663, 293, 498, 300, 311, 51670], "temperature": 0.0, "avg_logprob": -0.19967575073242189, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.10218238830566406}, {"id": 174, "seek": 84128, "start": 841.28, "end": 844.88, "text": " the case, it will sign it with the attestation key.", "tokens": [50364, 264, 1389, 11, 309, 486, 1465, 309, 365, 264, 951, 377, 399, 2141, 13, 50544], "temperature": 0.0, "avg_logprob": -0.19984328609773483, "compression_ratio": 1.63681592039801, "no_speech_prob": 0.059122633188962936}, {"id": 175, "seek": 84128, "start": 844.88, "end": 849.56, "text": " I will come, what this means in a second and why this matters.", "tokens": [50544, 286, 486, 808, 11, 437, 341, 1355, 294, 257, 1150, 293, 983, 341, 7001, 13, 50778], "temperature": 0.0, "avg_logprob": -0.19984328609773483, "compression_ratio": 1.63681592039801, "no_speech_prob": 0.059122633188962936}, {"id": 176, "seek": 84128, "start": 849.56, "end": 856.6, "text": " But then now we have a TD quote that's signed by the attestation key and this TD quote is", "tokens": [50778, 583, 550, 586, 321, 362, 257, 42606, 6513, 300, 311, 8175, 538, 264, 951, 377, 399, 2141, 293, 341, 42606, 6513, 307, 51130], "temperature": 0.0, "avg_logprob": -0.19984328609773483, "compression_ratio": 1.63681592039801, "no_speech_prob": 0.059122633188962936}, {"id": 177, "seek": 84128, "start": 856.6, "end": 862.9599999999999, "text": " passed back to the relying party who can do quote verification now.", "tokens": [51130, 4678, 646, 281, 264, 24140, 3595, 567, 393, 360, 6513, 30206, 586, 13, 51448], "temperature": 0.0, "avg_logprob": -0.19984328609773483, "compression_ratio": 1.63681592039801, "no_speech_prob": 0.059122633188962936}, {"id": 178, "seek": 84128, "start": 862.9599999999999, "end": 867.0, "text": " But the important question is what just happened, right?", "tokens": [51448, 583, 264, 1021, 1168, 307, 437, 445, 2011, 11, 558, 30, 51650], "temperature": 0.0, "avg_logprob": -0.19984328609773483, "compression_ratio": 1.63681592039801, "no_speech_prob": 0.059122633188962936}, {"id": 179, "seek": 86700, "start": 867.0, "end": 871.96, "text": " The TD quote was signed with an attestation key, what does it mean, why should we trust", "tokens": [50364, 440, 42606, 6513, 390, 8175, 365, 364, 951, 377, 399, 2141, 11, 437, 775, 309, 914, 11, 983, 820, 321, 3361, 50612], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 180, "seek": 86700, "start": 871.96, "end": 874.12, "text": " that, right?", "tokens": [50612, 300, 11, 558, 30, 50720], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 181, "seek": 86700, "start": 874.12, "end": 880.04, "text": " And a key piece I skipped before is that the TD quoting enclave has randomly generated", "tokens": [50720, 400, 257, 2141, 2522, 286, 30193, 949, 307, 300, 264, 42606, 41552, 2058, 27995, 575, 16979, 10833, 51016], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 182, "seek": 86700, "start": 880.04, "end": 883.6, "text": " the attestation key before the process even starts, right?", "tokens": [51016, 264, 951, 377, 399, 2141, 949, 264, 1399, 754, 3719, 11, 558, 30, 51194], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 183, "seek": 86700, "start": 883.6, "end": 887.64, "text": " Without Intel being involved at all, this happens on the platform.", "tokens": [51194, 9129, 19762, 885, 3288, 412, 439, 11, 341, 2314, 322, 264, 3663, 13, 51396], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 184, "seek": 86700, "start": 887.64, "end": 889.84, "text": " But that still doesn't help much.", "tokens": [51396, 583, 300, 920, 1177, 380, 854, 709, 13, 51506], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 185, "seek": 86700, "start": 889.84, "end": 895.32, "text": " But what also happens on start, the so-called provisioning certification enclave that's", "tokens": [51506, 583, 437, 611, 2314, 322, 722, 11, 264, 370, 12, 11880, 17225, 278, 21775, 2058, 27995, 300, 311, 51780], "temperature": 0.0, "avg_logprob": -0.17031206651167435, "compression_ratio": 1.6795366795366795, "no_speech_prob": 0.0013240702683106065}, {"id": 186, "seek": 89532, "start": 895.32, "end": 900.5200000000001, "text": " also provided by Intel will do local attestation with the TD quoting enclave.", "tokens": [50364, 611, 5649, 538, 19762, 486, 360, 2654, 951, 377, 399, 365, 264, 42606, 41552, 2058, 27995, 13, 50624], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 187, "seek": 89532, "start": 900.5200000000001, "end": 902.96, "text": " It will see, yes, okay, we run both on the same machine.", "tokens": [50624, 467, 486, 536, 11, 2086, 11, 1392, 11, 321, 1190, 1293, 322, 264, 912, 3479, 13, 50746], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 188, "seek": 89532, "start": 902.96, "end": 905.44, "text": " It's a TD quoting enclave that I expect.", "tokens": [50746, 467, 311, 257, 42606, 41552, 2058, 27995, 300, 286, 2066, 13, 50870], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 189, "seek": 89532, "start": 905.44, "end": 908.24, "text": " And it just provided me an attestation key.", "tokens": [50870, 400, 309, 445, 5649, 385, 364, 951, 377, 399, 2141, 13, 51010], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 190, "seek": 89532, "start": 908.24, "end": 914.5600000000001, "text": " And then it will use the provisioning certification key to sign a certificate.", "tokens": [51010, 400, 550, 309, 486, 764, 264, 17225, 278, 21775, 2141, 281, 1465, 257, 15953, 13, 51326], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 191, "seek": 89532, "start": 914.5600000000001, "end": 920.24, "text": " So then we have, as is you on the right side, an attestation key certificate that's signed", "tokens": [51326, 407, 550, 321, 362, 11, 382, 307, 291, 322, 264, 558, 1252, 11, 364, 951, 377, 399, 2141, 15953, 300, 311, 8175, 51610], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 192, "seek": 89532, "start": 920.24, "end": 922.24, "text": " by the PCK key.", "tokens": [51610, 538, 264, 6465, 42, 2141, 13, 51710], "temperature": 0.0, "avg_logprob": -0.16870159015320896, "compression_ratio": 1.8161434977578474, "no_speech_prob": 0.001925461576320231}, {"id": 193, "seek": 92224, "start": 923.16, "end": 926.5600000000001, "text": " But again, why does this matter, right?", "tokens": [50410, 583, 797, 11, 983, 775, 341, 1871, 11, 558, 30, 50580], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 194, "seek": 92224, "start": 926.5600000000001, "end": 934.6800000000001, "text": " The important piece now is Intel is able to create PCK certificates that are then rooted", "tokens": [50580, 440, 1021, 2522, 586, 307, 19762, 307, 1075, 281, 1884, 6465, 42, 32941, 300, 366, 550, 25277, 50986], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 195, "seek": 92224, "start": 934.6800000000001, "end": 936.64, "text": " in an Intel CA.", "tokens": [50986, 294, 364, 19762, 22852, 13, 51084], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 196, "seek": 92224, "start": 936.64, "end": 939.48, "text": " And this ends the trust chain, right?", "tokens": [51084, 400, 341, 5314, 264, 3361, 5021, 11, 558, 30, 51226], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 197, "seek": 92224, "start": 939.48, "end": 945.32, "text": " So the attestation key generated on hardware, but it links back to an Intel CA.", "tokens": [51226, 407, 264, 951, 377, 399, 2141, 10833, 322, 8837, 11, 457, 309, 6123, 646, 281, 364, 19762, 22852, 13, 51518], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 198, "seek": 92224, "start": 945.32, "end": 949.44, "text": " And during quote verification, whoever does it, wherever this is done, can reach out to", "tokens": [51518, 400, 1830, 6513, 30206, 11, 11387, 775, 309, 11, 8660, 341, 307, 1096, 11, 393, 2524, 484, 281, 51724], "temperature": 0.0, "avg_logprob": -0.16666172898334006, "compression_ratio": 1.583710407239819, "no_speech_prob": 0.0016221734695136547}, {"id": 199, "seek": 94944, "start": 949.44, "end": 954.24, "text": " what we call the provisioning certification service to get all the collateral that's needed", "tokens": [50364, 437, 321, 818, 264, 17225, 278, 21775, 2643, 281, 483, 439, 264, 41875, 300, 311, 2978, 50604], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 200, "seek": 94944, "start": 954.24, "end": 957.48, "text": " to check this chain.", "tokens": [50604, 281, 1520, 341, 5021, 13, 50766], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 201, "seek": 94944, "start": 957.48, "end": 959.6400000000001, "text": " That's the process of remote attestation.", "tokens": [50766, 663, 311, 264, 1399, 295, 8607, 951, 377, 399, 13, 50874], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 202, "seek": 94944, "start": 959.6400000000001, "end": 965.6, "text": " And as said before, Intel TDX attestation uses Intel SGX.", "tokens": [50874, 400, 382, 848, 949, 11, 19762, 42606, 55, 951, 377, 399, 4960, 19762, 34520, 55, 13, 51172], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 203, "seek": 94944, "start": 965.6, "end": 971.44, "text": " All the sets of collateral we had before, PCK certificate, distribution, caching services,", "tokens": [51172, 1057, 264, 6352, 295, 41875, 321, 632, 949, 11, 6465, 42, 15953, 11, 7316, 11, 269, 2834, 3328, 11, 51464], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 204, "seek": 94944, "start": 971.44, "end": 974.6400000000001, "text": " they supported Intel SGX in the Pado in the past only.", "tokens": [51464, 436, 8104, 19762, 34520, 55, 294, 264, 430, 1573, 294, 264, 1791, 787, 13, 51624], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 205, "seek": 94944, "start": 974.6400000000001, "end": 977.0400000000001, "text": " Now they support both.", "tokens": [51624, 823, 436, 1406, 1293, 13, 51744], "temperature": 0.0, "avg_logprob": -0.17680885768172763, "compression_ratio": 1.7085201793721974, "no_speech_prob": 0.00288752350024879}, {"id": 206, "seek": 97704, "start": 977.04, "end": 981.88, "text": " And it also, this also means that as it's required to enable SGX on the machine when", "tokens": [50364, 400, 309, 611, 11, 341, 611, 1355, 300, 382, 309, 311, 4739, 281, 9528, 34520, 55, 322, 264, 3479, 562, 50606], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 207, "seek": 97704, "start": 981.88, "end": 985.5999999999999, "text": " you want to use TDX.", "tokens": [50606, 291, 528, 281, 764, 42606, 55, 13, 50792], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 208, "seek": 97704, "start": 985.5999999999999, "end": 989.4399999999999, "text": " Just quickly, a few words about how you can do the verification, right?", "tokens": [50792, 1449, 2661, 11, 257, 1326, 2283, 466, 577, 291, 393, 360, 264, 30206, 11, 558, 30, 50984], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 209, "seek": 97704, "start": 989.4399999999999, "end": 991.04, "text": " There are basically four options.", "tokens": [50984, 821, 366, 1936, 1451, 3956, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 210, "seek": 97704, "start": 991.04, "end": 994.3199999999999, "text": " You can use a service by the cloud service provider.", "tokens": [51064, 509, 393, 764, 257, 2643, 538, 264, 4588, 2643, 12398, 13, 51228], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 211, "seek": 97704, "start": 994.3199999999999, "end": 998.24, "text": " You can use a service by the vendor of your application.", "tokens": [51228, 509, 393, 764, 257, 2643, 538, 264, 24321, 295, 428, 3861, 13, 51424], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 212, "seek": 97704, "start": 998.24, "end": 1003.8, "text": " You can use potentially the Intel trust authority like an independent software as a service", "tokens": [51424, 509, 393, 764, 7263, 264, 19762, 3361, 8281, 411, 364, 6695, 4722, 382, 257, 2643, 51702], "temperature": 0.0, "avg_logprob": -0.14226980116760846, "compression_ratio": 1.6788617886178863, "no_speech_prob": 0.0002822846290655434}, {"id": 213, "seek": 100380, "start": 1003.8, "end": 1008.7199999999999, "text": " offering by Intel to do the verification for you, to alleviate the process.", "tokens": [50364, 8745, 538, 19762, 281, 360, 264, 30206, 337, 291, 11, 281, 42701, 264, 1399, 13, 50610], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 214, "seek": 100380, "start": 1008.7199999999999, "end": 1014.76, "text": " Or you can build it your own with the open source Intel libraries we provide.", "tokens": [50610, 1610, 291, 393, 1322, 309, 428, 1065, 365, 264, 1269, 4009, 19762, 15148, 321, 2893, 13, 50912], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 215, "seek": 100380, "start": 1014.76, "end": 1021.7199999999999, "text": " A few pieces of differentiation between the services, if you want to have a separation", "tokens": [50912, 316, 1326, 3755, 295, 38902, 1296, 264, 3328, 11, 498, 291, 528, 281, 362, 257, 14634, 51260], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 216, "seek": 100380, "start": 1021.7199999999999, "end": 1026.44, "text": " of responsibility between the infrastructure provider and the verification party, then", "tokens": [51260, 295, 6357, 1296, 264, 6896, 12398, 293, 264, 30206, 3595, 11, 550, 51496], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 217, "seek": 100380, "start": 1026.44, "end": 1029.52, "text": " you should not use the cloud service provider, obviously.", "tokens": [51496, 291, 820, 406, 764, 264, 4588, 2643, 12398, 11, 2745, 13, 51650], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 218, "seek": 100380, "start": 1029.52, "end": 1032.04, "text": " But in all the other cases, it's fine.", "tokens": [51650, 583, 294, 439, 264, 661, 3331, 11, 309, 311, 2489, 13, 51776], "temperature": 0.0, "avg_logprob": -0.1579255555805407, "compression_ratio": 1.7377049180327868, "no_speech_prob": 0.0014311890117824078}, {"id": 219, "seek": 103204, "start": 1032.04, "end": 1036.48, "text": " If you want to have consistency, if you want to support SGX and TDX, then it's up to the", "tokens": [50364, 759, 291, 528, 281, 362, 14416, 11, 498, 291, 528, 281, 1406, 34520, 55, 293, 42606, 55, 11, 550, 309, 311, 493, 281, 264, 50586], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 220, "seek": 103204, "start": 1036.48, "end": 1042.04, "text": " cloud service provider and the application provider if they supported our variance, definitely", "tokens": [50586, 4588, 2643, 12398, 293, 264, 3861, 12398, 498, 436, 8104, 527, 21977, 11, 2138, 50864], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 221, "seek": 103204, "start": 1042.04, "end": 1043.84, "text": " supported.", "tokens": [50864, 8104, 13, 50954], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 222, "seek": 103204, "start": 1043.84, "end": 1048.6399999999999, "text": " If you want to have consistencies across your applications, across the environment you have", "tokens": [50954, 759, 291, 528, 281, 362, 4603, 6464, 2108, 428, 5821, 11, 2108, 264, 2823, 291, 362, 51194], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 223, "seek": 103204, "start": 1048.6399999999999, "end": 1054.32, "text": " on-prem hybrid, whatever, then obviously cloud service providers cannot be used, the application", "tokens": [51194, 322, 12, 29403, 13051, 11, 2035, 11, 550, 2745, 4588, 2643, 11330, 2644, 312, 1143, 11, 264, 3861, 51478], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 224, "seek": 103204, "start": 1054.32, "end": 1059.8, "text": " vendor potentially, and the others will do it.", "tokens": [51478, 24321, 7263, 11, 293, 264, 2357, 486, 360, 309, 13, 51752], "temperature": 0.0, "avg_logprob": -0.1699658997204839, "compression_ratio": 1.8859649122807018, "no_speech_prob": 0.00054365728283301}, {"id": 225, "seek": 105980, "start": 1059.8, "end": 1065.84, "text": " From a development perspective, it's low in the first three cases and I would say medium", "tokens": [50364, 3358, 257, 3250, 4585, 11, 309, 311, 2295, 294, 264, 700, 1045, 3331, 293, 286, 576, 584, 6399, 50666], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 226, "seek": 105980, "start": 1065.84, "end": 1068.96, "text": " in the last case.", "tokens": [50666, 294, 264, 1036, 1389, 13, 50822], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 227, "seek": 105980, "start": 1068.96, "end": 1075.72, "text": " So quickly, very quickly, two upcoming features of Intel TDXO that we have at least a little", "tokens": [50822, 407, 2661, 11, 588, 2661, 11, 732, 11500, 4122, 295, 19762, 42606, 55, 46, 300, 321, 362, 412, 1935, 257, 707, 51160], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 228, "seek": 105980, "start": 1075.72, "end": 1078.8799999999999, "text": " bit time for Q&A.", "tokens": [51160, 857, 565, 337, 1249, 5, 32, 13, 51318], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 229, "seek": 105980, "start": 1078.8799999999999, "end": 1079.8799999999999, "text": " First TD migration.", "tokens": [51318, 2386, 42606, 17011, 13, 51368], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 230, "seek": 105980, "start": 1079.8799999999999, "end": 1086.12, "text": " TD migration will allow to live migrate one TD from one platform to another.", "tokens": [51368, 42606, 17011, 486, 2089, 281, 1621, 31821, 472, 42606, 490, 472, 3663, 281, 1071, 13, 51680], "temperature": 0.0, "avg_logprob": -0.18508740833827428, "compression_ratio": 1.4881516587677726, "no_speech_prob": 0.008436954580247402}, {"id": 231, "seek": 108612, "start": 1086.12, "end": 1090.76, "text": " It uses a service TD called the migration TD to do that.", "tokens": [50364, 467, 4960, 257, 2643, 42606, 1219, 264, 17011, 42606, 281, 360, 300, 13, 50596], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 232, "seek": 108612, "start": 1090.76, "end": 1093.4399999999998, "text": " All the data is obviously encrypted.", "tokens": [50596, 1057, 264, 1412, 307, 2745, 36663, 13, 50730], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 233, "seek": 108612, "start": 1093.4399999999998, "end": 1096.6399999999999, "text": " Just skipping a few details now, everything is encrypted.", "tokens": [50730, 1449, 31533, 257, 1326, 4365, 586, 11, 1203, 307, 36663, 13, 50890], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 234, "seek": 108612, "start": 1096.6399999999999, "end": 1099.9599999999998, "text": " Everything will go over step by step, a short break.", "tokens": [50890, 5471, 486, 352, 670, 1823, 538, 1823, 11, 257, 2099, 1821, 13, 51056], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 235, "seek": 108612, "start": 1099.9599999999998, "end": 1104.1599999999999, "text": " One TD on the left side goes down, the one on the right side goes up, which guarantees", "tokens": [51056, 1485, 42606, 322, 264, 1411, 1252, 1709, 760, 11, 264, 472, 322, 264, 558, 1252, 1709, 493, 11, 597, 32567, 51266], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 236, "seek": 108612, "start": 1104.1599999999999, "end": 1107.04, "text": " that a TD lives only once at a time.", "tokens": [51266, 300, 257, 42606, 2909, 787, 1564, 412, 257, 565, 13, 51410], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 237, "seek": 108612, "start": 1107.04, "end": 1111.32, "text": " You should not have two different TDs with the same content.", "tokens": [51410, 509, 820, 406, 362, 732, 819, 42606, 82, 365, 264, 912, 2701, 13, 51624], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 238, "seek": 108612, "start": 1111.32, "end": 1114.52, "text": " And one last feature, Intel TDX Connect.", "tokens": [51624, 400, 472, 1036, 4111, 11, 19762, 42606, 55, 11653, 13, 51784], "temperature": 0.0, "avg_logprob": -0.16147919705039576, "compression_ratio": 1.6104868913857677, "no_speech_prob": 0.014488087967038155}, {"id": 239, "seek": 111452, "start": 1114.52, "end": 1116.36, "text": " I mentioned that before.", "tokens": [50364, 286, 2835, 300, 949, 13, 50456], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 240, "seek": 111452, "start": 1116.36, "end": 1122.76, "text": " So it's a bit problematic at the moment to connect trust domains with a device.", "tokens": [50456, 407, 309, 311, 257, 857, 19011, 412, 264, 1623, 281, 1745, 3361, 25514, 365, 257, 4302, 13, 50776], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 241, "seek": 111452, "start": 1122.76, "end": 1128.16, "text": " It is possible, but what's needed at the moment is the trust domain, like everything", "tokens": [50776, 467, 307, 1944, 11, 457, 437, 311, 2978, 412, 264, 1623, 307, 264, 3361, 9274, 11, 411, 1203, 51046], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 242, "seek": 111452, "start": 1128.16, "end": 1130.8799999999999, "text": " in the private memory of the trust domain is encrypted.", "tokens": [51046, 294, 264, 4551, 4675, 295, 264, 3361, 9274, 307, 36663, 13, 51182], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 243, "seek": 111452, "start": 1130.8799999999999, "end": 1135.36, "text": " But it can't directly, so it can write to shared memory, right?", "tokens": [51182, 583, 309, 393, 380, 3838, 11, 370, 309, 393, 2464, 281, 5507, 4675, 11, 558, 30, 51406], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 244, "seek": 111452, "start": 1135.36, "end": 1137.56, "text": " That's what it can, but it can't, no.", "tokens": [51406, 663, 311, 437, 309, 393, 11, 457, 309, 393, 380, 11, 572, 13, 51516], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 245, "seek": 111452, "start": 1137.56, "end": 1139.8799999999999, "text": " It can't directly write to device.", "tokens": [51516, 467, 393, 380, 3838, 2464, 281, 4302, 13, 51632], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 246, "seek": 111452, "start": 1139.8799999999999, "end": 1144.48, "text": " What it only can do is put data on a shared memory and the device can take the data from", "tokens": [51632, 708, 309, 787, 393, 360, 307, 829, 1412, 322, 257, 5507, 4675, 293, 264, 4302, 393, 747, 264, 1412, 490, 51862], "temperature": 0.0, "avg_logprob": -0.1581948749602787, "compression_ratio": 1.8543307086614174, "no_speech_prob": 0.0034786276519298553}, {"id": 247, "seek": 114448, "start": 1144.48, "end": 1145.48, "text": " a shared memory, right?", "tokens": [50364, 257, 5507, 4675, 11, 558, 30, 50414], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 248, "seek": 114448, "start": 1145.48, "end": 1147.32, "text": " What we call a bounce buffer.", "tokens": [50414, 708, 321, 818, 257, 15894, 21762, 13, 50506], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 249, "seek": 114448, "start": 1147.32, "end": 1149.32, "text": " So this is a bit slow.", "tokens": [50506, 407, 341, 307, 257, 857, 2964, 13, 50606], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 250, "seek": 114448, "start": 1149.32, "end": 1151.72, "text": " Still, it can be done securely, right?", "tokens": [50606, 8291, 11, 309, 393, 312, 1096, 38348, 11, 558, 30, 50726], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 251, "seek": 114448, "start": 1151.72, "end": 1158.08, "text": " If a secure session key is established between device and trust domain, the data can be encrypted,", "tokens": [50726, 759, 257, 7144, 5481, 2141, 307, 7545, 1296, 4302, 293, 3361, 9274, 11, 264, 1412, 393, 312, 36663, 11, 51044], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 252, "seek": 114448, "start": 1158.08, "end": 1162.04, "text": " put there, read in the device, and it's encrypted.", "tokens": [51044, 829, 456, 11, 1401, 294, 264, 4302, 11, 293, 309, 311, 36663, 13, 51242], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 253, "seek": 114448, "start": 1162.04, "end": 1164.76, "text": " So even today, this solution is there.", "tokens": [51242, 407, 754, 965, 11, 341, 3827, 307, 456, 13, 51378], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 254, "seek": 114448, "start": 1164.76, "end": 1169.92, "text": " Like you can connect an Intel TDX trust domain to an NVIDIA GPU with their confidential computing", "tokens": [51378, 1743, 291, 393, 1745, 364, 19762, 42606, 55, 3361, 9274, 281, 364, 426, 3958, 6914, 18407, 365, 641, 27054, 15866, 51636], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 255, "seek": 114448, "start": 1169.92, "end": 1172.8, "text": " technology, have it end to end secure.", "tokens": [51636, 2899, 11, 362, 309, 917, 281, 917, 7144, 13, 51780], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 256, "seek": 114448, "start": 1172.8, "end": 1173.8, "text": " That's possible.", "tokens": [51780, 663, 311, 1944, 13, 51830], "temperature": 0.0, "avg_logprob": -0.18730078803168404, "compression_ratio": 1.5958188153310104, "no_speech_prob": 0.0006766854203306139}, {"id": 257, "seek": 117380, "start": 1173.8, "end": 1179.32, "text": " But it's a bit slow, or it has a bit of overhead because of this bounce buffer stuff.", "tokens": [50364, 583, 309, 311, 257, 857, 2964, 11, 420, 309, 575, 257, 857, 295, 19922, 570, 295, 341, 15894, 21762, 1507, 13, 50640], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 258, "seek": 117380, "start": 1179.32, "end": 1182.8, "text": " And this will change when Intel TDX comes along.", "tokens": [50640, 400, 341, 486, 1319, 562, 19762, 42606, 55, 1487, 2051, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 259, "seek": 117380, "start": 1182.8, "end": 1189.2, "text": " Because with Intel TDX Connect, the idea is that a trusted device is put in, let's say,", "tokens": [50814, 1436, 365, 19762, 42606, 55, 11653, 11, 264, 1558, 307, 300, 257, 16034, 4302, 307, 829, 294, 11, 718, 311, 584, 11, 51134], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 260, "seek": 117380, "start": 1189.2, "end": 1191.32, "text": " the trust zone of a trust domain.", "tokens": [51134, 264, 3361, 6668, 295, 257, 3361, 9274, 13, 51240], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 261, "seek": 117380, "start": 1191.32, "end": 1195.68, "text": " They're able to write into each other's memory directly after they trust each other, which", "tokens": [51240, 814, 434, 1075, 281, 2464, 666, 1184, 661, 311, 4675, 3838, 934, 436, 3361, 1184, 661, 11, 597, 51458], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 262, "seek": 117380, "start": 1195.68, "end": 1202.84, "text": " will make the whole thing more efficient and has low overhead.", "tokens": [51458, 486, 652, 264, 1379, 551, 544, 7148, 293, 575, 2295, 19922, 13, 51816], "temperature": 0.0, "avg_logprob": -0.14441905831390955, "compression_ratio": 1.6205533596837944, "no_speech_prob": 0.001187527901493013}, {"id": 263, "seek": 120284, "start": 1202.84, "end": 1206.56, "text": " This is just nothing I mentioned today is any secret, right?", "tokens": [50364, 639, 307, 445, 1825, 286, 2835, 965, 307, 604, 4054, 11, 558, 30, 50550], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 264, "seek": 120284, "start": 1206.56, "end": 1209.48, "text": " All of that is open here on this page.", "tokens": [50550, 1057, 295, 300, 307, 1269, 510, 322, 341, 3028, 13, 50696], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 265, "seek": 120284, "start": 1209.48, "end": 1210.8799999999999, "text": " We have documentations.", "tokens": [50696, 492, 362, 4166, 763, 13, 50766], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 266, "seek": 120284, "start": 1210.8799999999999, "end": 1211.8799999999999, "text": " Knock yourself out.", "tokens": [50766, 34017, 1803, 484, 13, 50816], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 267, "seek": 120284, "start": 1211.8799999999999, "end": 1216.6799999999998, "text": " It's like thousands of pages you can read in the PDFs to get all the details you want.", "tokens": [50816, 467, 311, 411, 5383, 295, 7183, 291, 393, 1401, 294, 264, 17752, 82, 281, 483, 439, 264, 4365, 291, 528, 13, 51056], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 268, "seek": 120284, "start": 1216.6799999999998, "end": 1222.1599999999999, "text": " If not, feel free to reach out to me at any point after this talk, at any point later.", "tokens": [51056, 759, 406, 11, 841, 1737, 281, 2524, 484, 281, 385, 412, 604, 935, 934, 341, 751, 11, 412, 604, 935, 1780, 13, 51330], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 269, "seek": 120284, "start": 1222.1599999999999, "end": 1226.84, "text": " If you have interest in, for example, bare metal access to machine, I'm also your guy", "tokens": [51330, 759, 291, 362, 1179, 294, 11, 337, 1365, 11, 6949, 5760, 2105, 281, 3479, 11, 286, 478, 611, 428, 2146, 51564], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 270, "seek": 120284, "start": 1226.84, "end": 1231.6799999999998, "text": " for whatever experiments at the University as an organization, whatever, right?", "tokens": [51564, 337, 2035, 12050, 412, 264, 3535, 382, 364, 4475, 11, 2035, 11, 558, 30, 51806], "temperature": 0.0, "avg_logprob": -0.15162356819693498, "compression_ratio": 1.6317567567567568, "no_speech_prob": 0.14724451303482056}, {"id": 271, "seek": 123168, "start": 1231.68, "end": 1234.52, "text": " Because at the Cloud Service providers, you normally don't get that, right?", "tokens": [50364, 1436, 412, 264, 8061, 9561, 11330, 11, 291, 5646, 500, 380, 483, 300, 11, 558, 30, 50506], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 272, "seek": 123168, "start": 1234.52, "end": 1235.6000000000001, "text": " You get a trust domain.", "tokens": [50506, 509, 483, 257, 3361, 9274, 13, 50560], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 273, "seek": 123168, "start": 1235.6000000000001, "end": 1236.6000000000001, "text": " That's it.", "tokens": [50560, 663, 311, 309, 13, 50610], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 274, "seek": 123168, "start": 1236.6000000000001, "end": 1239.16, "text": " Might be enough in many cases, but not in all.", "tokens": [50610, 23964, 312, 1547, 294, 867, 3331, 11, 457, 406, 294, 439, 13, 50738], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 275, "seek": 123168, "start": 1239.16, "end": 1243.2, "text": " So reach out to me and thank you for your attention.", "tokens": [50738, 407, 2524, 484, 281, 385, 293, 1309, 291, 337, 428, 3202, 13, 50940], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 276, "seek": 123168, "start": 1243.2, "end": 1251.92, "text": " Can we repeat the questions?", "tokens": [50940, 1664, 321, 7149, 264, 1651, 30, 51376], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 277, "seek": 123168, "start": 1251.92, "end": 1253.52, "text": " Yeah, so, yeah?", "tokens": [51376, 865, 11, 370, 11, 1338, 30, 51456], "temperature": 0.0, "avg_logprob": -0.4431777856288812, "compression_ratio": 1.408839779005525, "no_speech_prob": 0.024956757202744484}, {"id": 278, "seek": 125352, "start": 1253.52, "end": 1271.28, "text": " I have to repeat the question.", "tokens": [50364, 286, 362, 281, 7149, 264, 1168, 13, 51252], "temperature": 0.0, "avg_logprob": -0.32349765661991003, "compression_ratio": 1.4407894736842106, "no_speech_prob": 0.02813095785677433}, {"id": 279, "seek": 125352, "start": 1271.28, "end": 1277.4, "text": " The question was, is it possible, or I rephrase, correct me if I'm doing a bad job there.", "tokens": [51252, 440, 1168, 390, 11, 307, 309, 1944, 11, 420, 286, 319, 44598, 651, 11, 3006, 385, 498, 286, 478, 884, 257, 1578, 1691, 456, 13, 51558], "temperature": 0.0, "avg_logprob": -0.32349765661991003, "compression_ratio": 1.4407894736842106, "no_speech_prob": 0.02813095785677433}, {"id": 280, "seek": 125352, "start": 1277.4, "end": 1280.48, "text": " You said, it's possible to run a legacy application in a trust domain.", "tokens": [51558, 509, 848, 11, 309, 311, 1944, 281, 1190, 257, 11711, 3861, 294, 257, 3361, 9274, 13, 51712], "temperature": 0.0, "avg_logprob": -0.32349765661991003, "compression_ratio": 1.4407894736842106, "no_speech_prob": 0.02813095785677433}, {"id": 281, "seek": 125352, "start": 1280.48, "end": 1282.48, "text": " Yeah, that's what you said.", "tokens": [51712, 865, 11, 300, 311, 437, 291, 848, 13, 51812], "temperature": 0.0, "avg_logprob": -0.32349765661991003, "compression_ratio": 1.4407894736842106, "no_speech_prob": 0.02813095785677433}, {"id": 282, "seek": 128248, "start": 1282.48, "end": 1290.84, "text": " The question is, how is the integrity of such classes being maintained considering the fact", "tokens": [50364, 440, 1168, 307, 11, 577, 307, 264, 16000, 295, 1270, 5359, 885, 17578, 8079, 264, 1186, 50782], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 283, "seek": 128248, "start": 1290.84, "end": 1294.48, "text": " that this application is legacy doesn't?", "tokens": [50782, 300, 341, 3861, 307, 11711, 1177, 380, 30, 50964], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 284, "seek": 128248, "start": 1294.48, "end": 1295.48, "text": " Okay, yeah.", "tokens": [50964, 1033, 11, 1338, 13, 51014], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 285, "seek": 128248, "start": 1295.48, "end": 1300.64, "text": " So the question was, again, in my words, how is the process then, how is this protected", "tokens": [51014, 407, 264, 1168, 390, 11, 797, 11, 294, 452, 2283, 11, 577, 307, 264, 1399, 550, 11, 577, 307, 341, 10594, 51272], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 286, "seek": 128248, "start": 1300.64, "end": 1306.32, "text": " because the application wasn't written, right, for this environment?", "tokens": [51272, 570, 264, 3861, 2067, 380, 3720, 11, 558, 11, 337, 341, 2823, 30, 51556], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 287, "seek": 128248, "start": 1306.32, "end": 1310.1200000000001, "text": " And the answer is, it depends, right?", "tokens": [51556, 400, 264, 1867, 307, 11, 309, 5946, 11, 558, 30, 51746], "temperature": 0.0, "avg_logprob": -0.34575014336164606, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.032347001135349274}, {"id": 288, "seek": 131012, "start": 1310.12, "end": 1314.56, "text": " Meaning you have an in-memory only application, then you don't have to do anything, right?", "tokens": [50364, 19948, 291, 362, 364, 294, 12, 17886, 827, 787, 3861, 11, 550, 291, 500, 380, 362, 281, 360, 1340, 11, 558, 30, 50586], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 289, "seek": 131012, "start": 1314.56, "end": 1317.1999999999998, "text": " Because the main memory is encrypted and you're done.", "tokens": [50586, 1436, 264, 2135, 4675, 307, 36663, 293, 291, 434, 1096, 13, 50718], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 290, "seek": 131012, "start": 1317.1999999999998, "end": 1321.36, "text": " As soon as your application writes to disk, it's a different story, right?", "tokens": [50718, 1018, 2321, 382, 428, 3861, 13657, 281, 12355, 11, 309, 311, 257, 819, 1657, 11, 558, 30, 50926], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 291, "seek": 131012, "start": 1321.36, "end": 1325.4399999999998, "text": " Because if you write to disk plain text data, then it's plain text and everybody will see", "tokens": [50926, 1436, 498, 291, 2464, 281, 12355, 11121, 2487, 1412, 11, 550, 309, 311, 11121, 2487, 293, 2201, 486, 536, 51130], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 292, "seek": 131012, "start": 1325.4399999999998, "end": 1326.56, "text": " it.", "tokens": [51130, 309, 13, 51186], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 293, "seek": 131012, "start": 1326.56, "end": 1331.1999999999998, "text": " One thing you can do is you can either your application encrypts data before, then it", "tokens": [51186, 1485, 551, 291, 393, 360, 307, 291, 393, 2139, 428, 3861, 17972, 39280, 1412, 949, 11, 550, 309, 51418], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 294, "seek": 131012, "start": 1331.1999999999998, "end": 1333.52, "text": " is a change to the application, right?", "tokens": [51418, 307, 257, 1319, 281, 264, 3861, 11, 558, 30, 51534], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 295, "seek": 131012, "start": 1333.52, "end": 1338.4399999999998, "text": " Or another variant is you activate, for example, full disk encryption in your operating system.", "tokens": [51534, 1610, 1071, 17501, 307, 291, 13615, 11, 337, 1365, 11, 1577, 12355, 29575, 294, 428, 7447, 1185, 13, 51780], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 296, "seek": 131012, "start": 1338.4399999999998, "end": 1339.6, "text": " Then you have to manage the key, right?", "tokens": [51780, 1396, 291, 362, 281, 3067, 264, 2141, 11, 558, 30, 51838], "temperature": 0.0, "avg_logprob": -0.17218001901286922, "compression_ratio": 1.9523809523809523, "no_speech_prob": 0.251374751329422}, {"id": 297, "seek": 133960, "start": 1339.6, "end": 1342.6799999999998, "text": " That's another question then, but that's what you can do.", "tokens": [50364, 663, 311, 1071, 1168, 550, 11, 457, 300, 311, 437, 291, 393, 360, 13, 50518], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 298, "seek": 133960, "start": 1342.6799999999998, "end": 1345.52, "text": " And exactly the same for network connections, right?", "tokens": [50518, 400, 2293, 264, 912, 337, 3209, 9271, 11, 558, 30, 50660], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 299, "seek": 133960, "start": 1345.52, "end": 1348.8799999999999, "text": " If you, again, send plain text data out, yeah, plain text data is out.", "tokens": [50660, 759, 291, 11, 797, 11, 2845, 11121, 2487, 1412, 484, 11, 1338, 11, 11121, 2487, 1412, 307, 484, 13, 50828], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 300, "seek": 133960, "start": 1348.8799999999999, "end": 1354.0, "text": " But if you use TLS, you can do it, you just put your TLS endpoint in the trust domain", "tokens": [50828, 583, 498, 291, 764, 314, 19198, 11, 291, 393, 360, 309, 11, 291, 445, 829, 428, 314, 19198, 35795, 294, 264, 3361, 9274, 51084], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 301, "seek": 133960, "start": 1354.0, "end": 1356.0, "text": " now and you're good.", "tokens": [51084, 586, 293, 291, 434, 665, 13, 51184], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 302, "seek": 133960, "start": 1356.0, "end": 1357.0, "text": " Yeah?", "tokens": [51184, 865, 30, 51234], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 303, "seek": 133960, "start": 1357.0, "end": 1359.0, "text": " Thank you for a very nice talk.", "tokens": [51234, 1044, 291, 337, 257, 588, 1481, 751, 13, 51334], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 304, "seek": 133960, "start": 1359.0, "end": 1366.0, "text": " So I had a question about the state software support.", "tokens": [51334, 407, 286, 632, 257, 1168, 466, 264, 1785, 4722, 1406, 13, 51684], "temperature": 0.0, "avg_logprob": -0.2757611317677541, "compression_ratio": 1.5767634854771784, "no_speech_prob": 0.019253171980381012}, {"id": 305, "seek": 136600, "start": 1366.0, "end": 1371.0, "text": " Thank you very much.", "tokens": [50364, 1044, 291, 588, 709, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19673019409179687, "compression_ratio": 1.609375, "no_speech_prob": 0.016271980479359627}, {"id": 306, "seek": 136600, "start": 1371.0, "end": 1375.76, "text": " So I had a question related to the sort of status on the software support on the guest", "tokens": [50614, 407, 286, 632, 257, 1168, 4077, 281, 264, 1333, 295, 6558, 322, 264, 4722, 1406, 322, 264, 8341, 50852], "temperature": 0.0, "avg_logprob": -0.19673019409179687, "compression_ratio": 1.609375, "no_speech_prob": 0.016271980479359627}, {"id": 307, "seek": 136600, "start": 1375.76, "end": 1376.76, "text": " side, right?", "tokens": [50852, 1252, 11, 558, 30, 50902], "temperature": 0.0, "avg_logprob": -0.19673019409179687, "compression_ratio": 1.609375, "no_speech_prob": 0.016271980479359627}, {"id": 308, "seek": 136600, "start": 1376.76, "end": 1383.08, "text": " So with some of these comparable technologies today, you still need kind of some components", "tokens": [50902, 407, 365, 512, 295, 613, 25323, 7943, 965, 11, 291, 920, 643, 733, 295, 512, 6677, 51218], "temperature": 0.0, "avg_logprob": -0.19673019409179687, "compression_ratio": 1.609375, "no_speech_prob": 0.016271980479359627}, {"id": 309, "seek": 136600, "start": 1383.08, "end": 1391.24, "text": " in the middle on the guest side, like basically like firmware inside the guest or like Paraviser", "tokens": [51218, 294, 264, 2808, 322, 264, 8341, 1252, 11, 411, 1936, 411, 30289, 1854, 264, 8341, 420, 411, 3457, 706, 6694, 51626], "temperature": 0.0, "avg_logprob": -0.19673019409179687, "compression_ratio": 1.609375, "no_speech_prob": 0.016271980479359627}, {"id": 310, "seek": 139124, "start": 1391.24, "end": 1396.76, "text": " functionality that hides some of this communication between the underlying layer.", "tokens": [50364, 14980, 300, 35953, 512, 295, 341, 6101, 1296, 264, 14217, 4583, 13, 50640], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 311, "seek": 139124, "start": 1396.76, "end": 1398.84, "text": " So how is it with TDX today?", "tokens": [50640, 407, 577, 307, 309, 365, 42606, 55, 965, 30, 50744], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 312, "seek": 139124, "start": 1398.84, "end": 1401.36, "text": " Can you take like a stock Linux kernel and run this?", "tokens": [50744, 1664, 291, 747, 411, 257, 4127, 18734, 28256, 293, 1190, 341, 30, 50870], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 313, "seek": 139124, "start": 1401.36, "end": 1409.48, "text": " So you still need some components there which are not yet fully open source?", "tokens": [50870, 407, 291, 920, 643, 512, 6677, 456, 597, 366, 406, 1939, 4498, 1269, 4009, 30, 51276], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 314, "seek": 139124, "start": 1409.48, "end": 1413.56, "text": " So at the moment, as I said, briefly before not everything is upstreamed, right?", "tokens": [51276, 407, 412, 264, 1623, 11, 382, 286, 848, 11, 10515, 949, 406, 1203, 307, 33915, 292, 11, 558, 30, 51480], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 315, "seek": 139124, "start": 1413.56, "end": 1417.56, "text": " So it's, I guess, like the basic enabling should be there middle of the year.", "tokens": [51480, 407, 309, 311, 11, 286, 2041, 11, 411, 264, 3875, 23148, 820, 312, 456, 2808, 295, 264, 1064, 13, 51680], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 316, "seek": 139124, "start": 1417.56, "end": 1420.36, "text": " So at the moment, it's not there fully.", "tokens": [51680, 407, 412, 264, 1623, 11, 309, 311, 406, 456, 4498, 13, 51820], "temperature": 0.0, "avg_logprob": -0.126999610293228, "compression_ratio": 1.6139705882352942, "no_speech_prob": 0.08562655001878738}, {"id": 317, "seek": 142036, "start": 1420.36, "end": 1424.08, "text": " But what we have is what we call a TDX early preview.", "tokens": [50364, 583, 437, 321, 362, 307, 437, 321, 818, 257, 42606, 55, 2440, 14281, 13, 50550], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 318, "seek": 142036, "start": 1424.08, "end": 1431.52, "text": " So we collaborate with three operate distribution vendors to provide specific distribution versions.", "tokens": [50550, 407, 321, 18338, 365, 1045, 9651, 7316, 22056, 281, 2893, 2685, 7316, 9606, 13, 50922], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 319, "seek": 142036, "start": 1431.52, "end": 1434.6399999999999, "text": " And that's canonical, Red Hat and SUSE.", "tokens": [50922, 400, 300, 311, 46491, 11, 4477, 15867, 293, 40117, 36, 13, 51078], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 320, "seek": 142036, "start": 1434.6399999999999, "end": 1436.4399999999998, "text": " And we have all this is online.", "tokens": [51078, 400, 321, 362, 439, 341, 307, 2950, 13, 51168], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 321, "seek": 142036, "start": 1436.4399999999998, "end": 1440.8, "text": " You just go to GitHub and it's, I just did it yesterday night, right?", "tokens": [51168, 509, 445, 352, 281, 23331, 293, 309, 311, 11, 286, 445, 630, 309, 5186, 1818, 11, 558, 30, 51386], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 322, "seek": 142036, "start": 1440.8, "end": 1446.12, "text": " It's really like you start up a Buntu 2310, for example, you clone their repository,", "tokens": [51386, 467, 311, 534, 411, 291, 722, 493, 257, 363, 45605, 6673, 3279, 11, 337, 1365, 11, 291, 26506, 641, 25841, 11, 51652], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 323, "seek": 142036, "start": 1446.12, "end": 1448.1599999999999, "text": " click install, done.", "tokens": [51652, 2052, 3625, 11, 1096, 13, 51754], "temperature": 0.0, "avg_logprob": -0.2517502508430837, "compression_ratio": 1.5112781954887218, "no_speech_prob": 0.021253421902656555}, {"id": 324, "seek": 144816, "start": 1448.16, "end": 1451.0800000000002, "text": " You go to the buyers and activate TDX.", "tokens": [50364, 509, 352, 281, 264, 23465, 293, 13615, 42606, 55, 13, 50510], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 325, "seek": 144816, "start": 1451.0800000000002, "end": 1454.48, "text": " Then there have another script to create a guest image.", "tokens": [50510, 1396, 456, 362, 1071, 5755, 281, 1884, 257, 8341, 3256, 13, 50680], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 326, "seek": 144816, "start": 1454.48, "end": 1458.16, "text": " I don't just take them like 15 minutes to create, but just of download and all of that", "tokens": [50680, 286, 500, 380, 445, 747, 552, 411, 2119, 2077, 281, 1884, 11, 457, 445, 295, 5484, 293, 439, 295, 300, 50864], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 327, "seek": 144816, "start": 1458.16, "end": 1459.16, "text": " stuff.", "tokens": [50864, 1507, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 328, "seek": 144816, "start": 1459.16, "end": 1461.8000000000002, "text": " You start your trust domain and you're done.", "tokens": [50914, 509, 722, 428, 3361, 9274, 293, 291, 434, 1096, 13, 51046], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 329, "seek": 144816, "start": 1461.8000000000002, "end": 1463.8000000000002, "text": " So that's pretty easy already.", "tokens": [51046, 407, 300, 311, 1238, 1858, 1217, 13, 51146], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 330, "seek": 144816, "start": 1463.8000000000002, "end": 1470.16, "text": " Yeah, thank you for the talk.", "tokens": [51146, 865, 11, 1309, 291, 337, 264, 751, 13, 51464], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 331, "seek": 144816, "start": 1470.16, "end": 1471.68, "text": " I have kind of an obvious question.", "tokens": [51464, 286, 362, 733, 295, 364, 6322, 1168, 13, 51540], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 332, "seek": 144816, "start": 1471.68, "end": 1476.6000000000001, "text": " Is there a latency cost within one trusted domain from memory access given that it's encrypted", "tokens": [51540, 1119, 456, 257, 27043, 2063, 1951, 472, 16034, 9274, 490, 4675, 2105, 2212, 300, 309, 311, 36663, 51786], "temperature": 0.0, "avg_logprob": -0.3195974974505669, "compression_ratio": 1.585820895522388, "no_speech_prob": 0.002248136792331934}, {"id": 333, "seek": 147660, "start": 1476.6, "end": 1479.56, "text": " and so on?", "tokens": [50364, 293, 370, 322, 30, 50512], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 334, "seek": 147660, "start": 1479.56, "end": 1481.56, "text": " So performance you mean, right?", "tokens": [50512, 407, 3389, 291, 914, 11, 558, 30, 50612], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 335, "seek": 147660, "start": 1481.56, "end": 1482.56, "text": " Okay.", "tokens": [50612, 1033, 13, 50662], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 336, "seek": 147660, "start": 1482.56, "end": 1484.36, "text": " Yes, obviously it has to be, right?", "tokens": [50662, 1079, 11, 2745, 309, 575, 281, 312, 11, 558, 30, 50752], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 337, "seek": 147660, "start": 1484.36, "end": 1487.12, "text": " Infection can't be for free.", "tokens": [50752, 682, 1836, 313, 393, 380, 312, 337, 1737, 13, 50890], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 338, "seek": 147660, "start": 1487.12, "end": 1491.12, "text": " But how high the overhead is highly depends on your workload.", "tokens": [50890, 583, 577, 1090, 264, 19922, 307, 5405, 5946, 322, 428, 20139, 13, 51090], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 339, "seek": 147660, "start": 1491.12, "end": 1495.24, "text": " If it's a processor only workload, it's basically free.", "tokens": [51090, 759, 309, 311, 257, 15321, 787, 20139, 11, 309, 311, 1936, 1737, 13, 51296], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 340, "seek": 147660, "start": 1495.24, "end": 1498.32, "text": " I don't have concrete numbers, but let's say one, two percent, right?", "tokens": [51296, 286, 500, 380, 362, 9859, 3547, 11, 457, 718, 311, 584, 472, 11, 732, 3043, 11, 558, 30, 51450], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 341, "seek": 147660, "start": 1498.32, "end": 1500.08, "text": " So really, really low.", "tokens": [51450, 407, 534, 11, 534, 2295, 13, 51538], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 342, "seek": 147660, "start": 1500.08, "end": 1504.6399999999999, "text": " If it's really disk IO sensitive, it's a different question, right?", "tokens": [51538, 759, 309, 311, 534, 12355, 39839, 9477, 11, 309, 311, 257, 819, 1168, 11, 558, 30, 51766], "temperature": 0.0, "avg_logprob": -0.28093363657718945, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.020837441086769104}, {"id": 343, "seek": 150464, "start": 1504.68, "end": 1508.1200000000001, "text": " Because of this balance buffer and all of that stuff.", "tokens": [50366, 1436, 295, 341, 4772, 21762, 293, 439, 295, 300, 1507, 13, 50538], "temperature": 0.0, "avg_logprob": -0.2418847401936849, "compression_ratio": 1.4659090909090908, "no_speech_prob": 0.014821343123912811}, {"id": 344, "seek": 150464, "start": 1508.1200000000001, "end": 1513.1200000000001, "text": " Again, don't nail me on it, but let's say like it might go to 10% or even more, right?", "tokens": [50538, 3764, 11, 500, 380, 10173, 385, 322, 309, 11, 457, 718, 311, 584, 411, 309, 1062, 352, 281, 1266, 4, 420, 754, 544, 11, 558, 30, 50788], "temperature": 0.0, "avg_logprob": -0.2418847401936849, "compression_ratio": 1.4659090909090908, "no_speech_prob": 0.014821343123912811}, {"id": 345, "seek": 150464, "start": 1513.1200000000001, "end": 1515.88, "text": " It's really, really dependent on your workload.", "tokens": [50788, 467, 311, 534, 11, 534, 12334, 322, 428, 20139, 13, 50926], "temperature": 0.0, "avg_logprob": -0.2418847401936849, "compression_ratio": 1.4659090909090908, "no_speech_prob": 0.014821343123912811}, {"id": 346, "seek": 150464, "start": 1515.88, "end": 1517.96, "text": " I guess I have to stop now, but you can just come to me later, right?", "tokens": [50926, 286, 2041, 286, 362, 281, 1590, 586, 11, 457, 291, 393, 445, 808, 281, 385, 1780, 11, 558, 30, 51030], "temperature": 0.0, "avg_logprob": -0.2418847401936849, "compression_ratio": 1.4659090909090908, "no_speech_prob": 0.014821343123912811}], "language": "en"}