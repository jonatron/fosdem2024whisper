{"text": " Okay, so good afternoon. My name is Miguel Duarte. I'm a software engineer working for Red Hat and the OpenShift Virtualization Networking team. Well, in this talk we're going to be discussing an SDN solution for both types of workflows so you can have pods and virtual machines in the same network and the use cases that this SDN provides and a little bit how it works. There are going to be some demos as well. So let's jump to the agenda. All right, so first thing we're going to do is explain the motivation, like what drives us to have like to do this and the actual problem we're trying to solve. From there, there's going to be a little short introduction that depends how deep it is going to be. Well, it depends on a few things. And then I'm going to walk you through the use cases for this SDN solution, show the demos, finalize with the roadmap for the future and with the lessons we've learned during this development. So first thing, how many of you have used or like worked for stuff that has anything to do with Kubernetes? Like yeah, pretty much everyone. How many of you use Kubeverts or know what it is? Well, more than I thought. Okay, cool. So the introduction is not going to be that deep. But yeah, let's start. First thing, going to be discussing the Kubernetes networking model. Like as most of you will know, pretty much it's very simple. And one of its few premises is that any pod that is deployed on the Kubernetes cluster can contact and can reach any other pods in the Kubernetes cluster. Like basically you have cluster-wide communication between whatever type of workloads that are deployed in your cluster. Without NAT, by the way. So another thing you get as a byproduct of that is like VSC and all that, it pretty much it configures a way for you to reach the outside world. So you get free batteries to reach the outside world, to reach the internet. The thing it does not allow you to do is to connect to a pre-existing network. If it's, for instance, I say you want to connect to a database that's deployed on an existing network, well, you're out of luck. Kubernetes does not solve this. More things, if you, for instance, you want to deploy a VNF, for instance, and you require more than an interface, Kubernetes will also not do that for you. There are solutions out of three, but we're not going to go there right now. So the motivation for our talk pretty much comes that you don't have like an entryway for you to access like stuff on physical networks and to get access to additional networks. The default cluster network that you have that comes bundled and Kubernetes gives you for free or whatever Kubernetes distributions you have give you, well, it's not suited for all types of use cases. For instance, for virtualization, like the ones that you, of you that use Qvert, should know like you'll get IP addresses and well, IPAM management in for virtualization is extremely tricky and it will not mix well. Pretty much because you have like different IPs when you migrate from the source to the destination pod and that thing will not play along correctly. And finally, in virtualization, you typically like use secondary networks to do all sorts of east-west communication and you pretty much rely on the default cluster network just to like get batteries of the Kubernetes services, stuff like cluster DNS and things like that. So on your secondary networks, you need to figure out other ways. So you could do like bridge CNI and other types of plugins, but that leaves like your operation teams will need to know how to debug yet another totally different solution. Where admins will need to know and configure yet another like bunch of solutions and depending on the use cases, you'll realize that this plugin will work, but this other will not. So like the matrix of things that your operations team has to know and your administrators need to learn how to configure, it skyrockets like it's and it becomes literally too expensive to actually handle. So now the objectives we have the first is we want these cluster admins to like go do something else like we want to push all the complexity of these different sorts of use cases and this mix and match technology to be pushed from their heads and from this lots of tools that they need to learn and know. We want to push all this complexity to the network. And finally we want to have like a single like a single plugin be able to handle like a multitude of use cases. So pretty much what we want to have is like to have the whatever the CNI that comes bundled with the with our Kubernetes distribution, we want that to be able to to to work properly both for the cluster default network and for the secondaries. Okay, so very short introduction now. So Qvert. Qvert is a Kubernetes plugin that allows you to run virtual machines inside pods. So you basically get two different types of workloads. You have pods and VMs and like you manage them from the same from the same solution. As a like an implementation detail like the virtual machine actually runs inside of the pod. And each pod has like a live version instance running in it and the QML process and all that and like just to finalize you have like the networking requirements that virtual machine has is a lot more than a pod like a pod is something like entirely stateful. It's like a cattle you just kill it and a new one will spawn and do it a new thing while a VM is stateful and you need to treat it very careful carefully. Now kind of a little disclaimer our SDN solution that we developed uses Oven and Oven stands for open virtual network and it is essentially like an SDN control an SDN control plane to open V switch. So you have like a bunch of you have open V switch installed in each of the nodes of the cluster. You have Oven on top that is kind of rendering open flow and installing it in each of the open V switches in the nodes from like higher level entities like you have things like a logical switch that grants you connect L2 connectivity between the workloads on these two nodes and this thing gets rendered into open flow and installed to the nodes. Then we have Oven Kubernetes on top of it. It's a CNI plugin that what it does is translate from Kubernetes entities into Oven logical entities. So for instance when we have like a secondary network what we end up having is a logical switch when you have like pod attachments what we have is logical switch ports that are connected to the logical switches and for instance in network policy is nothing more than like a port group that associates a list of ports of logical switch ports to a bunch of ACLs. Alright, so supported use cases as I said in the initially in the motivation section for virtualization use cases mostly you do not rely on the default cluster network to do east-west communication. You use secondary networks. So that's the first use case we are focused on is east-west communication. So as you can see here like pretty much what we end up having like these things here are pods or virtual machines it doesn't matter what we actually end up doing is attaching a new internet network interface to it configure it and what we get is like the logical view of having like them connected via a cluster wide switch. So that's literally what we get a cluster wide switch a connection to this cluster wide switch and everybody that is disconnected that is connected to it can communicate across that network. There's a short demo right here and we'll see that oh god no internet I knew that that's why I have this terminal here. I'm really sorry for the font size but if I put this a little bit bigger it'll basically mess up like the window configuration. I hope you can still see it. So first thing we're going to see is what the network configuration is. I'm not sure if you're used to using MULTUS the ones of you that use Kieferd I guess they are so this is the first thing that we need to look at the network attachment definition. This explains this pretty much holds the CNI configuration from which the CNI plugin will just configure networking for your pod. So the interesting thing here is pretty much like the name of the network so the idea here is that the networks are not namespaced but the network attachments are. So this means that if your network admin wants to grant a namespace connection to a network he needs to provision or she needs to provision one of these like in the proper namespace and this will connect your namespace to this network. Finally the oops sorry it does not go back. Another interesting thing that was there was the topology which is layer 2 so pretty much what we have is an overlay network this is totally disconnected from the physical network that allows you to have like east-west communication. And we do not have IPAM because IPAM for work loads is very tricky and we'll see more on that later on. So we're connecting two different namespaces as I said. Now we're going to provision these into the cluster like fun fact this is like all lazy so I just put like a bunch of stuff in the cluster but nothing happened yet. It's just like the definitions are provisioned and nothing else and now we're going to show the workload definitions. Here they are so we have one virtual machine remember we do not have IPAM in the network so we need to configure the IP statically you have there in the bottom we configure the IP statically using cloud init in the VM and that's its IP 192, 168, 200 dot 10. And then we have like our pod we have two pods here specified we have the blue server pod and you have like a yellow server pod and the blue pod has the dot 20 IP that we configure using the network selection elements this is like multis lingo and what this is doing is exposing like an HTTP server on port 9000 and what we want to do is so we have two servers the blue and the yellow and we have the VM is the client and we're going to be curling to each of the servers by their hostname so that's what we're going to see in well let's first provision this the windows in the bottom are so we can kind of see when they're ready so the old service ready the tenant so the VM is booting up let's speed up this part so we're now going to log in via console to the virtual machine and we're going to curl both the servers and they're going to echo back their hostnames. So God it's going to take forever if only I had internet and I could play a video oh God. Does anybody know how you can ask an emma tell it wow amazing I don't know. It stopped again. Okay it's playing cool so yeah login via console I hope it did not stop what's happening so yeah I should have known better but again we're going to log via console the UI of this thing is absolutely preposterous like I don't know if it's playing or not. Okay so yeah you get curl to the dot 20 IP address it replies with the blue server thing we do the same thing to the dot 30 IP address it replies with its hostname which is the yellow server this concludes the first demo which shows us like east-west communication between well different workloads in different namespaces. Now going to the second use case which now we want to have like remember the motivation slides where I mentioned stuff about accessing things on a pre-existing physical network that's exactly what we're going to be seeing now so as before we see like we have a logical view of a cluster wide switch the difference is that this switch is actually connected to a physical network and you can access stuff that's there in our example it's going to be like a database that has well the data the VM needs. The first thing we need to kind of elaborate a little bit is that you need to configure the physical network so first of all it's not something that a typical user will get access to it needs to happen by a cluster admin and for that we're going to be using two tools first NM state and Kubernetes NM state. NM state is basically like a declarative tool that configures networking you just give it like the desired state I want my network to be like this and it's going to go while punching buttons attempting to make the current state be what you desire to be if it fails it rolls everything back so no changes to your network so it cannot destroy it and if it succeeds it'll tell you you succeeded so basically what we want to do is use Kubernetes NM state which is kind of a cluster wide thing send YAML specification to the cluster and all my network specification will be applied in all the nodes in our cluster so it would look like this so in the in the left we have an example of a policy and in the right we have like a diagram of the topology we're trying to do here so if you look here we this is going to be applied to all the Kubernetes worker nodes because of this node selector that we have here and what we're going to do is create an OVS bridge in each of these worker nodes attach this ENS for interface to the OVS bridge and then using this these oven bridge mappings in the bottom we're going we're saying that we want traffic from the network called default network to be sent to the OVS bridge called BRX and we want the traffic from the tenant blue physical network to be sent to the OVS one bridge it's literally what you diagram you see there in the right now we are granting access to from workloads to the physical network you should not mean should fret carefully when you do this and for that we need to have like micro segmentation this pretty much is like what you have in for the primary network for the cluster default network network policies this is the exact same thing but applied to secondary networks so in our example what we want to have is like a virtual machine that wants data from the database but we do not allow it to actually consume the data directly from the database so we expose that information from a pod so the pod actually can connect to the database and expose this information from a RESTful API over port 9000 so this is kind of what we want to do ensure that the VM cannot reach the database directly over the port the posgrasql port but and ensure you can using well this tiny pod as its proxy data proxy so again another demo this is going to be a disaster I have tempted to tell you to just check this at home but how many times we have more than five minutes right again this does not work sorry it's the other cast so now in this demo what we do have we do have two namespaces data consumer and data adapter we just provisioned them let's first thing some information like this I'm running a kind cluster here and I botched this again so I'm running a kind cluster here and so my Kubernetes nodes are running basic as containers in in my laptop and so the physical network that we see in the diagram is basically like my laptop it's going to be connected by a Linux bridge in the in the laptop and for that I need to kind of since I'm using a VLAN I'm going to need to pre provision the VLAN and that's the interface you see here in the bottom like this podman 1.123 it's a VLAN on top of the Linux bridge management interface I'm going to show this again and so again VLAN 1.123 that's subnet and we have a database running in containerized database running here and we are going you see we have access to the database now let's check our manifests really sorry so I think you should check the demo at home and we have five minutes yeah I don't think this is going to work please do check the demo at home but pretty much what you'll see is what I showed in this diagram so you'll have access on one port you'll have access direct access from the VM to the database like you can PSQL to the data directly and to get the data from using HTTP from the pod and then I provision some policies and then you stop having access to the database and that's pretty much it now roadmap what what are we going for next first thing we need to have is like IPAM for the workloads so we need to find a way to tie the IP allocation to the virtual machine and not to the pod where the VM runs like remember the our big issue where the virtualization is migration and that means that when you migrate the VM to a new node the pod gets a new interface the VM is still with the old interface and basically networking is not properly configured we wanted to address that first and that will unlock the next thing in our in our queue which is selective selective policies so our kind of policies for the secondary networks right now you can only use IP blocks you cannot use like semantic things like I want to allow all workloads from this namespace we're having these labels to access this sort of workload you cannot do that you need to specify IP ranges directly once we have these two things we're going for services next like we want to have like exposed via services like egress from VMs and to have like load balancer services so that you can access them directly over the secondary networks finally self-service networks this is instead of having the cluster admin provision these for you since network overlay a simple overlay that does not touch the physical network you could directly use like a self-service functionality to just create the network yourself and connect and provide east-west connectivity to your workloads okay well lessons learned this was a let's say a joint venture like or a collaboration between both Red Hat and NVIDIA and the fun thing is we had the exact use cases in mind like both of them focusing on Qvert but with different scope so we are a lot more into the generic kind of world we want we give you a platform and you do whatever you want with your platform and NVIDIA notes they have like their use case in mind which is I guess gaming in a data center and their tooling is a lot more let's say pointed in that direction but was a really nice collaboration and we're hoping to see more in the future on a less positive note we get the user experience of this is not amazing like it's better than originally intended because like for instance the thing I've showed you about the the nm state policy that was something that we came up with because we felt like this feature is entirely unusable like people are going to be breaking their default cluster network every time they use this or risk doing that so we've provided that but we still have some sort of nightmarish stories every now and then because of the the way network attachment definitions look like and how easy it is for you to get things wrong and how silently and how these silent errors kind of creep up it's absolutely insane like sometimes things work but not in the way you expect because it just doesn't recognize one of the parameters because you typed it wrong but everything else works it's insanely hard and yeah I'm really sorry about the demo but yeah thank you for listening and if you have any questions in one minute one question it's the same thing yeah so the question yeah so the question is basically there's another cni so we're doing this in oven Kubernetes and there's another cni cni called cube oven so it's kind of it really screams that it does the same thing and yeah it really does the same thing the use cases are mostly the same the thing is that they do a lot more than we do like quite honestly like their feature set is a lot more complete than ours and we're trying to get there like if your question is like why didn't you just use that well we do not have any let's say current stake in that cni we do not have maintainers there we do not like we would have to try to gain entry there and in some cases we do not like their API so we're trying to do things in another way it might seem like we're reinventing the wheel sometimes but yeah kind of we kind of are like we both do the same thing and their feature set is more complete but again we're trying to do more and reach their feature set thank you for the question and I think it's that's it well", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.64, "text": " Okay, so good afternoon.", "tokens": [50364, 1033, 11, 370, 665, 6499, 13, 51046], "temperature": 0.0, "avg_logprob": -0.36079690622728927, "compression_ratio": 1.2, "no_speech_prob": 0.17724475264549255}, {"id": 1, "seek": 0, "start": 13.64, "end": 14.68, "text": " My name is Miguel Duarte.", "tokens": [51046, 1222, 1315, 307, 29150, 5153, 11026, 13, 51098], "temperature": 0.0, "avg_logprob": -0.36079690622728927, "compression_ratio": 1.2, "no_speech_prob": 0.17724475264549255}, {"id": 2, "seek": 0, "start": 14.68, "end": 21.400000000000002, "text": " I'm a software engineer working for Red Hat and the OpenShift Virtualization Networking", "tokens": [51098, 286, 478, 257, 4722, 11403, 1364, 337, 4477, 15867, 293, 264, 7238, 7774, 2008, 23887, 2144, 12640, 278, 51434], "temperature": 0.0, "avg_logprob": -0.36079690622728927, "compression_ratio": 1.2, "no_speech_prob": 0.17724475264549255}, {"id": 3, "seek": 0, "start": 21.400000000000002, "end": 23.400000000000002, "text": " team.", "tokens": [51434, 1469, 13, 51534], "temperature": 0.0, "avg_logprob": -0.36079690622728927, "compression_ratio": 1.2, "no_speech_prob": 0.17724475264549255}, {"id": 4, "seek": 2340, "start": 23.4, "end": 31.479999999999997, "text": " Well, in this talk we're going to be discussing an SDN solution for both types of workflows", "tokens": [50364, 1042, 11, 294, 341, 751, 321, 434, 516, 281, 312, 10850, 364, 14638, 45, 3827, 337, 1293, 3467, 295, 43461, 50768], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 5, "seek": 2340, "start": 31.479999999999997, "end": 38.839999999999996, "text": " so you can have pods and virtual machines in the same network and the use cases that", "tokens": [50768, 370, 291, 393, 362, 31925, 293, 6374, 8379, 294, 264, 912, 3209, 293, 264, 764, 3331, 300, 51136], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 6, "seek": 2340, "start": 38.839999999999996, "end": 42.92, "text": " this SDN provides and a little bit how it works.", "tokens": [51136, 341, 14638, 45, 6417, 293, 257, 707, 857, 577, 309, 1985, 13, 51340], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 7, "seek": 2340, "start": 42.92, "end": 45.0, "text": " There are going to be some demos as well.", "tokens": [51340, 821, 366, 516, 281, 312, 512, 33788, 382, 731, 13, 51444], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 8, "seek": 2340, "start": 45.0, "end": 47.64, "text": " So let's jump to the agenda.", "tokens": [51444, 407, 718, 311, 3012, 281, 264, 9829, 13, 51576], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 9, "seek": 2340, "start": 47.64, "end": 52.28, "text": " All right, so first thing we're going to do is explain the motivation, like what drives", "tokens": [51576, 1057, 558, 11, 370, 700, 551, 321, 434, 516, 281, 360, 307, 2903, 264, 12335, 11, 411, 437, 11754, 51808], "temperature": 0.0, "avg_logprob": -0.22446334838867188, "compression_ratio": 1.6, "no_speech_prob": 0.4597029685974121}, {"id": 10, "seek": 5228, "start": 52.28, "end": 57.88, "text": " us to have like to do this and the actual problem we're trying to solve.", "tokens": [50364, 505, 281, 362, 411, 281, 360, 341, 293, 264, 3539, 1154, 321, 434, 1382, 281, 5039, 13, 50644], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 11, "seek": 5228, "start": 57.88, "end": 62.84, "text": " From there, there's going to be a little short introduction that depends how deep it is going", "tokens": [50644, 3358, 456, 11, 456, 311, 516, 281, 312, 257, 707, 2099, 9339, 300, 5946, 577, 2452, 309, 307, 516, 50892], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 12, "seek": 5228, "start": 62.84, "end": 63.84, "text": " to be.", "tokens": [50892, 281, 312, 13, 50942], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 13, "seek": 5228, "start": 63.84, "end": 66.0, "text": " Well, it depends on a few things.", "tokens": [50942, 1042, 11, 309, 5946, 322, 257, 1326, 721, 13, 51050], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 14, "seek": 5228, "start": 66.0, "end": 69.92, "text": " And then I'm going to walk you through the use cases for this SDN solution, show the", "tokens": [51050, 400, 550, 286, 478, 516, 281, 1792, 291, 807, 264, 764, 3331, 337, 341, 14638, 45, 3827, 11, 855, 264, 51246], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 15, "seek": 5228, "start": 69.92, "end": 76.04, "text": " demos, finalize with the roadmap for the future and with the lessons we've learned during", "tokens": [51246, 33788, 11, 2572, 1125, 365, 264, 35738, 337, 264, 2027, 293, 365, 264, 8820, 321, 600, 3264, 1830, 51552], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 16, "seek": 5228, "start": 76.04, "end": 78.36, "text": " this development.", "tokens": [51552, 341, 3250, 13, 51668], "temperature": 0.0, "avg_logprob": -0.19135080973307292, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.0886550098657608}, {"id": 17, "seek": 7836, "start": 78.36, "end": 85.03999999999999, "text": " So first thing, how many of you have used or like worked for stuff that has anything", "tokens": [50364, 407, 700, 551, 11, 577, 867, 295, 291, 362, 1143, 420, 411, 2732, 337, 1507, 300, 575, 1340, 50698], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 18, "seek": 7836, "start": 85.03999999999999, "end": 87.6, "text": " to do with Kubernetes?", "tokens": [50698, 281, 360, 365, 23145, 30, 50826], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 19, "seek": 7836, "start": 87.6, "end": 88.76, "text": " Like yeah, pretty much everyone.", "tokens": [50826, 1743, 1338, 11, 1238, 709, 1518, 13, 50884], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 20, "seek": 7836, "start": 88.76, "end": 93.32, "text": " How many of you use Kubeverts or know what it is?", "tokens": [50884, 1012, 867, 295, 291, 764, 591, 1977, 36999, 420, 458, 437, 309, 307, 30, 51112], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 21, "seek": 7836, "start": 93.32, "end": 94.96000000000001, "text": " Well, more than I thought.", "tokens": [51112, 1042, 11, 544, 813, 286, 1194, 13, 51194], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 22, "seek": 7836, "start": 94.96000000000001, "end": 95.96000000000001, "text": " Okay, cool.", "tokens": [51194, 1033, 11, 1627, 13, 51244], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 23, "seek": 7836, "start": 95.96000000000001, "end": 99.64, "text": " So the introduction is not going to be that deep.", "tokens": [51244, 407, 264, 9339, 307, 406, 516, 281, 312, 300, 2452, 13, 51428], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 24, "seek": 7836, "start": 99.64, "end": 100.96000000000001, "text": " But yeah, let's start.", "tokens": [51428, 583, 1338, 11, 718, 311, 722, 13, 51494], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 25, "seek": 7836, "start": 100.96000000000001, "end": 104.92, "text": " First thing, going to be discussing the Kubernetes networking model.", "tokens": [51494, 2386, 551, 11, 516, 281, 312, 10850, 264, 23145, 17985, 2316, 13, 51692], "temperature": 0.0, "avg_logprob": -0.23146974472772508, "compression_ratio": 1.6130434782608696, "no_speech_prob": 0.005381308030337095}, {"id": 26, "seek": 10492, "start": 104.92, "end": 110.4, "text": " Like as most of you will know, pretty much it's very simple.", "tokens": [50364, 1743, 382, 881, 295, 291, 486, 458, 11, 1238, 709, 309, 311, 588, 2199, 13, 50638], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 27, "seek": 10492, "start": 110.4, "end": 116.68, "text": " And one of its few premises is that any pod that is deployed on the Kubernetes cluster", "tokens": [50638, 400, 472, 295, 1080, 1326, 34266, 307, 300, 604, 2497, 300, 307, 17826, 322, 264, 23145, 13630, 50952], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 28, "seek": 10492, "start": 116.68, "end": 120.84, "text": " can contact and can reach any other pods in the Kubernetes cluster.", "tokens": [50952, 393, 3385, 293, 393, 2524, 604, 661, 31925, 294, 264, 23145, 13630, 13, 51160], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 29, "seek": 10492, "start": 120.84, "end": 126.4, "text": " Like basically you have cluster-wide communication between whatever type of workloads that are", "tokens": [51160, 1743, 1936, 291, 362, 13630, 12, 7990, 6101, 1296, 2035, 2010, 295, 32452, 300, 366, 51438], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 30, "seek": 10492, "start": 126.4, "end": 129.0, "text": " deployed in your cluster.", "tokens": [51438, 17826, 294, 428, 13630, 13, 51568], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 31, "seek": 10492, "start": 129.0, "end": 130.88, "text": " Without NAT, by the way.", "tokens": [51568, 9129, 14500, 11, 538, 264, 636, 13, 51662], "temperature": 0.0, "avg_logprob": -0.17015706661135652, "compression_ratio": 1.6484018264840183, "no_speech_prob": 0.13633722066879272}, {"id": 32, "seek": 13088, "start": 130.88, "end": 139.64, "text": " So another thing you get as a byproduct of that is like VSC and all that, it pretty much", "tokens": [50364, 407, 1071, 551, 291, 483, 382, 257, 538, 33244, 295, 300, 307, 411, 691, 20839, 293, 439, 300, 11, 309, 1238, 709, 50802], "temperature": 0.0, "avg_logprob": -0.22274048511798566, "compression_ratio": 1.7356828193832599, "no_speech_prob": 0.01796925999224186}, {"id": 33, "seek": 13088, "start": 139.64, "end": 143.24, "text": " it configures a way for you to reach the outside world.", "tokens": [50802, 309, 6662, 1303, 257, 636, 337, 291, 281, 2524, 264, 2380, 1002, 13, 50982], "temperature": 0.0, "avg_logprob": -0.22274048511798566, "compression_ratio": 1.7356828193832599, "no_speech_prob": 0.01796925999224186}, {"id": 34, "seek": 13088, "start": 143.24, "end": 150.12, "text": " So you get free batteries to reach the outside world, to reach the internet.", "tokens": [50982, 407, 291, 483, 1737, 13070, 281, 2524, 264, 2380, 1002, 11, 281, 2524, 264, 4705, 13, 51326], "temperature": 0.0, "avg_logprob": -0.22274048511798566, "compression_ratio": 1.7356828193832599, "no_speech_prob": 0.01796925999224186}, {"id": 35, "seek": 13088, "start": 150.12, "end": 155.8, "text": " The thing it does not allow you to do is to connect to a pre-existing network.", "tokens": [51326, 440, 551, 309, 775, 406, 2089, 291, 281, 360, 307, 281, 1745, 281, 257, 659, 12, 36447, 3209, 13, 51610], "temperature": 0.0, "avg_logprob": -0.22274048511798566, "compression_ratio": 1.7356828193832599, "no_speech_prob": 0.01796925999224186}, {"id": 36, "seek": 13088, "start": 155.8, "end": 160.48, "text": " If it's, for instance, I say you want to connect to a database that's deployed on an existing", "tokens": [51610, 759, 309, 311, 11, 337, 5197, 11, 286, 584, 291, 528, 281, 1745, 281, 257, 8149, 300, 311, 17826, 322, 364, 6741, 51844], "temperature": 0.0, "avg_logprob": -0.22274048511798566, "compression_ratio": 1.7356828193832599, "no_speech_prob": 0.01796925999224186}, {"id": 37, "seek": 16048, "start": 160.48, "end": 162.51999999999998, "text": " network, well, you're out of luck.", "tokens": [50364, 3209, 11, 731, 11, 291, 434, 484, 295, 3668, 13, 50466], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 38, "seek": 16048, "start": 162.51999999999998, "end": 164.51999999999998, "text": " Kubernetes does not solve this.", "tokens": [50466, 23145, 775, 406, 5039, 341, 13, 50566], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 39, "seek": 16048, "start": 164.51999999999998, "end": 168.6, "text": " More things, if you, for instance, you want to deploy a VNF, for instance, and you require", "tokens": [50566, 5048, 721, 11, 498, 291, 11, 337, 5197, 11, 291, 528, 281, 7274, 257, 691, 45, 37, 11, 337, 5197, 11, 293, 291, 3651, 50770], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 40, "seek": 16048, "start": 168.6, "end": 175.39999999999998, "text": " more than an interface, Kubernetes will also not do that for you.", "tokens": [50770, 544, 813, 364, 9226, 11, 23145, 486, 611, 406, 360, 300, 337, 291, 13, 51110], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 41, "seek": 16048, "start": 175.39999999999998, "end": 181.83999999999997, "text": " There are solutions out of three, but we're not going to go there right now.", "tokens": [51110, 821, 366, 6547, 484, 295, 1045, 11, 457, 321, 434, 406, 516, 281, 352, 456, 558, 586, 13, 51432], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 42, "seek": 16048, "start": 181.83999999999997, "end": 188.2, "text": " So the motivation for our talk pretty much comes that you don't have like an entryway", "tokens": [51432, 407, 264, 12335, 337, 527, 751, 1238, 709, 1487, 300, 291, 500, 380, 362, 411, 364, 8729, 676, 51750], "temperature": 0.0, "avg_logprob": -0.16921725639930138, "compression_ratio": 1.6218487394957983, "no_speech_prob": 0.0361800454556942}, {"id": 43, "seek": 18820, "start": 188.44, "end": 196.94, "text": " for you to access like stuff on physical networks and to get access to additional networks.", "tokens": [50376, 337, 291, 281, 2105, 411, 1507, 322, 4001, 9590, 293, 281, 483, 2105, 281, 4497, 9590, 13, 50801], "temperature": 0.0, "avg_logprob": -0.1854602513688334, "compression_ratio": 1.6740088105726871, "no_speech_prob": 0.14980995655059814}, {"id": 44, "seek": 18820, "start": 196.94, "end": 201.04, "text": " The default cluster network that you have that comes bundled and Kubernetes gives you", "tokens": [50801, 440, 7576, 13630, 3209, 300, 291, 362, 300, 1487, 13882, 1493, 293, 23145, 2709, 291, 51006], "temperature": 0.0, "avg_logprob": -0.1854602513688334, "compression_ratio": 1.6740088105726871, "no_speech_prob": 0.14980995655059814}, {"id": 45, "seek": 18820, "start": 201.04, "end": 206.39999999999998, "text": " for free or whatever Kubernetes distributions you have give you, well, it's not suited for", "tokens": [51006, 337, 1737, 420, 2035, 23145, 37870, 291, 362, 976, 291, 11, 731, 11, 309, 311, 406, 24736, 337, 51274], "temperature": 0.0, "avg_logprob": -0.1854602513688334, "compression_ratio": 1.6740088105726871, "no_speech_prob": 0.14980995655059814}, {"id": 46, "seek": 18820, "start": 206.39999999999998, "end": 207.76, "text": " all types of use cases.", "tokens": [51274, 439, 3467, 295, 764, 3331, 13, 51342], "temperature": 0.0, "avg_logprob": -0.1854602513688334, "compression_ratio": 1.6740088105726871, "no_speech_prob": 0.14980995655059814}, {"id": 47, "seek": 18820, "start": 207.76, "end": 212.56, "text": " For instance, for virtualization, like the ones that you, of you that use Qvert, should", "tokens": [51342, 1171, 5197, 11, 337, 6374, 2144, 11, 411, 264, 2306, 300, 291, 11, 295, 291, 300, 764, 1249, 3281, 11, 820, 51582], "temperature": 0.0, "avg_logprob": -0.1854602513688334, "compression_ratio": 1.6740088105726871, "no_speech_prob": 0.14980995655059814}, {"id": 48, "seek": 21256, "start": 212.56, "end": 221.8, "text": " know like you'll get IP addresses and well, IPAM management in for virtualization is extremely", "tokens": [50364, 458, 411, 291, 603, 483, 8671, 16862, 293, 731, 11, 8671, 2865, 4592, 294, 337, 6374, 2144, 307, 4664, 50826], "temperature": 0.0, "avg_logprob": -0.2363169306800479, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0979132428765297}, {"id": 49, "seek": 21256, "start": 221.8, "end": 225.44, "text": " tricky and it will not mix well.", "tokens": [50826, 12414, 293, 309, 486, 406, 2890, 731, 13, 51008], "temperature": 0.0, "avg_logprob": -0.2363169306800479, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0979132428765297}, {"id": 50, "seek": 21256, "start": 225.44, "end": 230.8, "text": " Pretty much because you have like different IPs when you migrate from the source to the", "tokens": [51008, 10693, 709, 570, 291, 362, 411, 819, 8671, 82, 562, 291, 31821, 490, 264, 4009, 281, 264, 51276], "temperature": 0.0, "avg_logprob": -0.2363169306800479, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0979132428765297}, {"id": 51, "seek": 21256, "start": 230.8, "end": 235.88, "text": " destination pod and that thing will not play along correctly.", "tokens": [51276, 12236, 2497, 293, 300, 551, 486, 406, 862, 2051, 8944, 13, 51530], "temperature": 0.0, "avg_logprob": -0.2363169306800479, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0979132428765297}, {"id": 52, "seek": 21256, "start": 235.88, "end": 242.48000000000002, "text": " And finally, in virtualization, you typically like use secondary networks to do all sorts", "tokens": [51530, 400, 2721, 11, 294, 6374, 2144, 11, 291, 5850, 411, 764, 11396, 9590, 281, 360, 439, 7527, 51860], "temperature": 0.0, "avg_logprob": -0.2363169306800479, "compression_ratio": 1.5683760683760684, "no_speech_prob": 0.0979132428765297}, {"id": 53, "seek": 24248, "start": 242.48, "end": 248.44, "text": " of east-west communication and you pretty much rely on the default cluster network just", "tokens": [50364, 295, 10648, 12, 8750, 6101, 293, 291, 1238, 709, 10687, 322, 264, 7576, 13630, 3209, 445, 50662], "temperature": 0.0, "avg_logprob": -0.15877384835101188, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.0009397483663633466}, {"id": 54, "seek": 24248, "start": 248.44, "end": 255.6, "text": " to like get batteries of the Kubernetes services, stuff like cluster DNS and things like that.", "tokens": [50662, 281, 411, 483, 13070, 295, 264, 23145, 3328, 11, 1507, 411, 13630, 35153, 293, 721, 411, 300, 13, 51020], "temperature": 0.0, "avg_logprob": -0.15877384835101188, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.0009397483663633466}, {"id": 55, "seek": 24248, "start": 255.6, "end": 260.52, "text": " So on your secondary networks, you need to figure out other ways.", "tokens": [51020, 407, 322, 428, 11396, 9590, 11, 291, 643, 281, 2573, 484, 661, 2098, 13, 51266], "temperature": 0.0, "avg_logprob": -0.15877384835101188, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.0009397483663633466}, {"id": 56, "seek": 24248, "start": 260.52, "end": 266.28, "text": " So you could do like bridge CNI and other types of plugins, but that leaves like your", "tokens": [51266, 407, 291, 727, 360, 411, 7283, 14589, 40, 293, 661, 3467, 295, 33759, 11, 457, 300, 5510, 411, 428, 51554], "temperature": 0.0, "avg_logprob": -0.15877384835101188, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.0009397483663633466}, {"id": 57, "seek": 24248, "start": 266.28, "end": 271.92, "text": " operation teams will need to know how to debug yet another totally different solution.", "tokens": [51554, 6916, 5491, 486, 643, 281, 458, 577, 281, 24083, 1939, 1071, 3879, 819, 3827, 13, 51836], "temperature": 0.0, "avg_logprob": -0.15877384835101188, "compression_ratio": 1.6381322957198443, "no_speech_prob": 0.0009397483663633466}, {"id": 58, "seek": 27192, "start": 271.92, "end": 277.76, "text": " Where admins will need to know and configure yet another like bunch of solutions and depending", "tokens": [50364, 2305, 5910, 1292, 486, 643, 281, 458, 293, 22162, 1939, 1071, 411, 3840, 295, 6547, 293, 5413, 50656], "temperature": 0.0, "avg_logprob": -0.1577614452062028, "compression_ratio": 1.7004405286343611, "no_speech_prob": 0.09935647249221802}, {"id": 59, "seek": 27192, "start": 277.76, "end": 283.36, "text": " on the use cases, you'll realize that this plugin will work, but this other will not.", "tokens": [50656, 322, 264, 764, 3331, 11, 291, 603, 4325, 300, 341, 23407, 486, 589, 11, 457, 341, 661, 486, 406, 13, 50936], "temperature": 0.0, "avg_logprob": -0.1577614452062028, "compression_ratio": 1.7004405286343611, "no_speech_prob": 0.09935647249221802}, {"id": 60, "seek": 27192, "start": 283.36, "end": 290.56, "text": " So like the matrix of things that your operations team has to know and your administrators need", "tokens": [50936, 407, 411, 264, 8141, 295, 721, 300, 428, 7705, 1469, 575, 281, 458, 293, 428, 27754, 643, 51296], "temperature": 0.0, "avg_logprob": -0.1577614452062028, "compression_ratio": 1.7004405286343611, "no_speech_prob": 0.09935647249221802}, {"id": 61, "seek": 27192, "start": 290.56, "end": 298.32, "text": " to learn how to configure, it skyrockets like it's and it becomes literally too expensive", "tokens": [51296, 281, 1466, 577, 281, 22162, 11, 309, 5443, 340, 11984, 411, 309, 311, 293, 309, 3643, 3736, 886, 5124, 51684], "temperature": 0.0, "avg_logprob": -0.1577614452062028, "compression_ratio": 1.7004405286343611, "no_speech_prob": 0.09935647249221802}, {"id": 62, "seek": 27192, "start": 298.32, "end": 300.20000000000005, "text": " to actually handle.", "tokens": [51684, 281, 767, 4813, 13, 51778], "temperature": 0.0, "avg_logprob": -0.1577614452062028, "compression_ratio": 1.7004405286343611, "no_speech_prob": 0.09935647249221802}, {"id": 63, "seek": 30020, "start": 300.2, "end": 306.68, "text": " So now the objectives we have the first is we want these cluster admins to like go do", "tokens": [50364, 407, 586, 264, 15961, 321, 362, 264, 700, 307, 321, 528, 613, 13630, 5910, 1292, 281, 411, 352, 360, 50688], "temperature": 0.0, "avg_logprob": -0.18585855820599725, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.30328744649887085}, {"id": 64, "seek": 30020, "start": 306.68, "end": 313.52, "text": " something else like we want to push all the complexity of these different sorts of use", "tokens": [50688, 746, 1646, 411, 321, 528, 281, 2944, 439, 264, 14024, 295, 613, 819, 7527, 295, 764, 51030], "temperature": 0.0, "avg_logprob": -0.18585855820599725, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.30328744649887085}, {"id": 65, "seek": 30020, "start": 313.52, "end": 322.28, "text": " cases and this mix and match technology to be pushed from their heads and from this lots", "tokens": [51030, 3331, 293, 341, 2890, 293, 2995, 2899, 281, 312, 9152, 490, 641, 8050, 293, 490, 341, 3195, 51468], "temperature": 0.0, "avg_logprob": -0.18585855820599725, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.30328744649887085}, {"id": 66, "seek": 30020, "start": 322.28, "end": 324.88, "text": " of tools that they need to learn and know.", "tokens": [51468, 295, 3873, 300, 436, 643, 281, 1466, 293, 458, 13, 51598], "temperature": 0.0, "avg_logprob": -0.18585855820599725, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.30328744649887085}, {"id": 67, "seek": 30020, "start": 324.88, "end": 327.96, "text": " We want to push all this complexity to the network.", "tokens": [51598, 492, 528, 281, 2944, 439, 341, 14024, 281, 264, 3209, 13, 51752], "temperature": 0.0, "avg_logprob": -0.18585855820599725, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.30328744649887085}, {"id": 68, "seek": 32796, "start": 327.96, "end": 334.79999999999995, "text": " And finally we want to have like a single like a single plugin be able to handle like", "tokens": [50364, 400, 2721, 321, 528, 281, 362, 411, 257, 2167, 411, 257, 2167, 23407, 312, 1075, 281, 4813, 411, 50706], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 69, "seek": 32796, "start": 334.79999999999995, "end": 336.76, "text": " a multitude of use cases.", "tokens": [50706, 257, 36358, 295, 764, 3331, 13, 50804], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 70, "seek": 32796, "start": 336.76, "end": 342.56, "text": " So pretty much what we want to have is like to have the whatever the CNI that comes bundled", "tokens": [50804, 407, 1238, 709, 437, 321, 528, 281, 362, 307, 411, 281, 362, 264, 2035, 264, 14589, 40, 300, 1487, 13882, 1493, 51094], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 71, "seek": 32796, "start": 342.56, "end": 348.08, "text": " with the with our Kubernetes distribution, we want that to be able to to to work properly", "tokens": [51094, 365, 264, 365, 527, 23145, 7316, 11, 321, 528, 300, 281, 312, 1075, 281, 281, 281, 589, 6108, 51370], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 72, "seek": 32796, "start": 348.08, "end": 353.35999999999996, "text": " both for the cluster default network and for the secondaries.", "tokens": [51370, 1293, 337, 264, 13630, 7576, 3209, 293, 337, 264, 1150, 4889, 13, 51634], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 73, "seek": 32796, "start": 353.35999999999996, "end": 357.03999999999996, "text": " Okay, so very short introduction now.", "tokens": [51634, 1033, 11, 370, 588, 2099, 9339, 586, 13, 51818], "temperature": 0.0, "avg_logprob": -0.19925044738140302, "compression_ratio": 1.7312775330396475, "no_speech_prob": 0.1207297146320343}, {"id": 74, "seek": 35704, "start": 357.04, "end": 358.28000000000003, "text": " So Qvert.", "tokens": [50364, 407, 1249, 3281, 13, 50426], "temperature": 0.0, "avg_logprob": -0.27768268083271225, "compression_ratio": 1.619289340101523, "no_speech_prob": 0.06648886203765869}, {"id": 75, "seek": 35704, "start": 358.28000000000003, "end": 365.72, "text": " Qvert is a Kubernetes plugin that allows you to run virtual machines inside pods.", "tokens": [50426, 1249, 3281, 307, 257, 23145, 23407, 300, 4045, 291, 281, 1190, 6374, 8379, 1854, 31925, 13, 50798], "temperature": 0.0, "avg_logprob": -0.27768268083271225, "compression_ratio": 1.619289340101523, "no_speech_prob": 0.06648886203765869}, {"id": 76, "seek": 35704, "start": 365.72, "end": 368.68, "text": " So you basically get two different types of workloads.", "tokens": [50798, 407, 291, 1936, 483, 732, 819, 3467, 295, 32452, 13, 50946], "temperature": 0.0, "avg_logprob": -0.27768268083271225, "compression_ratio": 1.619289340101523, "no_speech_prob": 0.06648886203765869}, {"id": 77, "seek": 35704, "start": 368.68, "end": 377.08000000000004, "text": " You have pods and VMs and like you manage them from the same from the same solution.", "tokens": [50946, 509, 362, 31925, 293, 18038, 82, 293, 411, 291, 3067, 552, 490, 264, 912, 490, 264, 912, 3827, 13, 51366], "temperature": 0.0, "avg_logprob": -0.27768268083271225, "compression_ratio": 1.619289340101523, "no_speech_prob": 0.06648886203765869}, {"id": 78, "seek": 35704, "start": 377.08000000000004, "end": 382.44, "text": " As a like an implementation detail like the virtual machine actually runs inside of the", "tokens": [51366, 1018, 257, 411, 364, 11420, 2607, 411, 264, 6374, 3479, 767, 6676, 1854, 295, 264, 51634], "temperature": 0.0, "avg_logprob": -0.27768268083271225, "compression_ratio": 1.619289340101523, "no_speech_prob": 0.06648886203765869}, {"id": 79, "seek": 38244, "start": 382.44, "end": 384.12, "text": " pod.", "tokens": [50364, 2497, 13, 50448], "temperature": 0.0, "avg_logprob": -0.2941423694739181, "compression_ratio": 1.6372093023255814, "no_speech_prob": 0.5332003235816956}, {"id": 80, "seek": 38244, "start": 384.12, "end": 389.0, "text": " And each pod has like a live version instance running in it and the QML process and all that", "tokens": [50448, 400, 1184, 2497, 575, 411, 257, 1621, 3037, 5197, 2614, 294, 309, 293, 264, 1249, 12683, 1399, 293, 439, 300, 50692], "temperature": 0.0, "avg_logprob": -0.2941423694739181, "compression_ratio": 1.6372093023255814, "no_speech_prob": 0.5332003235816956}, {"id": 81, "seek": 38244, "start": 389.0, "end": 395.96, "text": " and like just to finalize you have like the networking requirements that virtual machine", "tokens": [50692, 293, 411, 445, 281, 2572, 1125, 291, 362, 411, 264, 17985, 7728, 300, 6374, 3479, 51040], "temperature": 0.0, "avg_logprob": -0.2941423694739181, "compression_ratio": 1.6372093023255814, "no_speech_prob": 0.5332003235816956}, {"id": 82, "seek": 38244, "start": 395.96, "end": 402.56, "text": " has is a lot more than a pod like a pod is something like entirely stateful.", "tokens": [51040, 575, 307, 257, 688, 544, 813, 257, 2497, 411, 257, 2497, 307, 746, 411, 7696, 1785, 906, 13, 51370], "temperature": 0.0, "avg_logprob": -0.2941423694739181, "compression_ratio": 1.6372093023255814, "no_speech_prob": 0.5332003235816956}, {"id": 83, "seek": 38244, "start": 402.56, "end": 407.64, "text": " It's like a cattle you just kill it and a new one will spawn and do it a new thing while", "tokens": [51370, 467, 311, 411, 257, 19992, 291, 445, 1961, 309, 293, 257, 777, 472, 486, 17088, 293, 360, 309, 257, 777, 551, 1339, 51624], "temperature": 0.0, "avg_logprob": -0.2941423694739181, "compression_ratio": 1.6372093023255814, "no_speech_prob": 0.5332003235816956}, {"id": 84, "seek": 40764, "start": 407.64, "end": 414.91999999999996, "text": " a VM is stateful and you need to treat it very careful carefully.", "tokens": [50364, 257, 18038, 307, 1785, 906, 293, 291, 643, 281, 2387, 309, 588, 5026, 7500, 13, 50728], "temperature": 0.0, "avg_logprob": -0.24740230335908778, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.16219943761825562}, {"id": 85, "seek": 40764, "start": 414.91999999999996, "end": 425.47999999999996, "text": " Now kind of a little disclaimer our SDN solution that we developed uses Oven and Oven stands", "tokens": [50728, 823, 733, 295, 257, 707, 40896, 527, 14638, 45, 3827, 300, 321, 4743, 4960, 422, 553, 293, 422, 553, 7382, 51256], "temperature": 0.0, "avg_logprob": -0.24740230335908778, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.16219943761825562}, {"id": 86, "seek": 40764, "start": 425.47999999999996, "end": 433.0, "text": " for open virtual network and it is essentially like an SDN control an SDN control plane to", "tokens": [51256, 337, 1269, 6374, 3209, 293, 309, 307, 4476, 411, 364, 14638, 45, 1969, 364, 14638, 45, 1969, 5720, 281, 51632], "temperature": 0.0, "avg_logprob": -0.24740230335908778, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.16219943761825562}, {"id": 87, "seek": 40764, "start": 433.0, "end": 434.24, "text": " open V switch.", "tokens": [51632, 1269, 691, 3679, 13, 51694], "temperature": 0.0, "avg_logprob": -0.24740230335908778, "compression_ratio": 1.5348837209302326, "no_speech_prob": 0.16219943761825562}, {"id": 88, "seek": 43424, "start": 434.24, "end": 438.6, "text": " So you have like a bunch of you have open V switch installed in each of the nodes of", "tokens": [50364, 407, 291, 362, 411, 257, 3840, 295, 291, 362, 1269, 691, 3679, 8899, 294, 1184, 295, 264, 13891, 295, 50582], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 89, "seek": 43424, "start": 438.6, "end": 439.6, "text": " the cluster.", "tokens": [50582, 264, 13630, 13, 50632], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 90, "seek": 43424, "start": 439.6, "end": 445.8, "text": " You have Oven on top that is kind of rendering open flow and installing it in each of the", "tokens": [50632, 509, 362, 422, 553, 322, 1192, 300, 307, 733, 295, 22407, 1269, 3095, 293, 20762, 309, 294, 1184, 295, 264, 50942], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 91, "seek": 43424, "start": 445.8, "end": 451.72, "text": " open V switches in the nodes from like higher level entities like you have things like a", "tokens": [50942, 1269, 691, 19458, 294, 264, 13891, 490, 411, 2946, 1496, 16667, 411, 291, 362, 721, 411, 257, 51238], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 92, "seek": 43424, "start": 451.72, "end": 457.2, "text": " logical switch that grants you connect L2 connectivity between the workloads on these", "tokens": [51238, 14978, 3679, 300, 16101, 291, 1745, 441, 17, 21095, 1296, 264, 32452, 322, 613, 51512], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 93, "seek": 43424, "start": 457.2, "end": 463.96000000000004, "text": " two nodes and this thing gets rendered into open flow and installed to the nodes.", "tokens": [51512, 732, 13891, 293, 341, 551, 2170, 28748, 666, 1269, 3095, 293, 8899, 281, 264, 13891, 13, 51850], "temperature": 0.0, "avg_logprob": -0.12214375468133723, "compression_ratio": 1.9559471365638768, "no_speech_prob": 0.3002961575984955}, {"id": 94, "seek": 46396, "start": 463.96, "end": 466.4, "text": " Then we have Oven Kubernetes on top of it.", "tokens": [50364, 1396, 321, 362, 422, 553, 23145, 322, 1192, 295, 309, 13, 50486], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 95, "seek": 46396, "start": 466.4, "end": 474.91999999999996, "text": " It's a CNI plugin that what it does is translate from Kubernetes entities into Oven logical", "tokens": [50486, 467, 311, 257, 14589, 40, 23407, 300, 437, 309, 775, 307, 13799, 490, 23145, 16667, 666, 422, 553, 14978, 50912], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 96, "seek": 46396, "start": 474.91999999999996, "end": 475.91999999999996, "text": " entities.", "tokens": [50912, 16667, 13, 50962], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 97, "seek": 46396, "start": 475.91999999999996, "end": 480.4, "text": " So for instance when we have like a secondary network what we end up having is a logical", "tokens": [50962, 407, 337, 5197, 562, 321, 362, 411, 257, 11396, 3209, 437, 321, 917, 493, 1419, 307, 257, 14978, 51186], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 98, "seek": 46396, "start": 480.4, "end": 484.96, "text": " switch when you have like pod attachments what we have is logical switch ports that", "tokens": [51186, 3679, 562, 291, 362, 411, 2497, 37987, 437, 321, 362, 307, 14978, 3679, 18160, 300, 51414], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 99, "seek": 46396, "start": 484.96, "end": 490.12, "text": " are connected to the logical switches and for instance in network policy is nothing more", "tokens": [51414, 366, 4582, 281, 264, 14978, 19458, 293, 337, 5197, 294, 3209, 3897, 307, 1825, 544, 51672], "temperature": 0.0, "avg_logprob": -0.17863143758570893, "compression_ratio": 1.8044444444444445, "no_speech_prob": 0.34377625584602356}, {"id": 100, "seek": 49012, "start": 490.12, "end": 495.96, "text": " than like a port group that associates a list of ports of logical switch ports to a bunch", "tokens": [50364, 813, 411, 257, 2436, 1594, 300, 36914, 257, 1329, 295, 18160, 295, 14978, 3679, 18160, 281, 257, 3840, 50656], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 101, "seek": 49012, "start": 495.96, "end": 497.46, "text": " of ACLs.", "tokens": [50656, 295, 43873, 82, 13, 50731], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 102, "seek": 49012, "start": 497.46, "end": 507.0, "text": " Alright, so supported use cases as I said in the initially in the motivation section", "tokens": [50731, 2798, 11, 370, 8104, 764, 3331, 382, 286, 848, 294, 264, 9105, 294, 264, 12335, 3541, 51208], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 103, "seek": 49012, "start": 507.0, "end": 512.6, "text": " for virtualization use cases mostly you do not rely on the default cluster network to", "tokens": [51208, 337, 6374, 2144, 764, 3331, 5240, 291, 360, 406, 10687, 322, 264, 7576, 13630, 3209, 281, 51488], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 104, "seek": 49012, "start": 512.6, "end": 515.72, "text": " do east-west communication.", "tokens": [51488, 360, 10648, 12, 8750, 6101, 13, 51644], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 105, "seek": 49012, "start": 515.72, "end": 516.88, "text": " You use secondary networks.", "tokens": [51644, 509, 764, 11396, 9590, 13, 51702], "temperature": 0.0, "avg_logprob": -0.22804289226290547, "compression_ratio": 1.5625, "no_speech_prob": 0.15187552571296692}, {"id": 106, "seek": 51688, "start": 516.88, "end": 522.28, "text": " So that's the first use case we are focused on is east-west communication.", "tokens": [50364, 407, 300, 311, 264, 700, 764, 1389, 321, 366, 5178, 322, 307, 10648, 12, 8750, 6101, 13, 50634], "temperature": 0.0, "avg_logprob": -0.1492411090481666, "compression_ratio": 1.7198275862068966, "no_speech_prob": 0.08027051389217377}, {"id": 107, "seek": 51688, "start": 522.28, "end": 526.96, "text": " So as you can see here like pretty much what we end up having like these things here are", "tokens": [50634, 407, 382, 291, 393, 536, 510, 411, 1238, 709, 437, 321, 917, 493, 1419, 411, 613, 721, 510, 366, 50868], "temperature": 0.0, "avg_logprob": -0.1492411090481666, "compression_ratio": 1.7198275862068966, "no_speech_prob": 0.08027051389217377}, {"id": 108, "seek": 51688, "start": 526.96, "end": 532.52, "text": " pods or virtual machines it doesn't matter what we actually end up doing is attaching", "tokens": [50868, 31925, 420, 6374, 8379, 309, 1177, 380, 1871, 437, 321, 767, 917, 493, 884, 307, 39074, 51146], "temperature": 0.0, "avg_logprob": -0.1492411090481666, "compression_ratio": 1.7198275862068966, "no_speech_prob": 0.08027051389217377}, {"id": 109, "seek": 51688, "start": 532.52, "end": 538.16, "text": " a new internet network interface to it configure it and what we get is like the logical view", "tokens": [51146, 257, 777, 4705, 3209, 9226, 281, 309, 22162, 309, 293, 437, 321, 483, 307, 411, 264, 14978, 1910, 51428], "temperature": 0.0, "avg_logprob": -0.1492411090481666, "compression_ratio": 1.7198275862068966, "no_speech_prob": 0.08027051389217377}, {"id": 110, "seek": 51688, "start": 538.16, "end": 544.12, "text": " of having like them connected via a cluster wide switch.", "tokens": [51428, 295, 1419, 411, 552, 4582, 5766, 257, 13630, 4874, 3679, 13, 51726], "temperature": 0.0, "avg_logprob": -0.1492411090481666, "compression_ratio": 1.7198275862068966, "no_speech_prob": 0.08027051389217377}, {"id": 111, "seek": 54412, "start": 544.12, "end": 547.76, "text": " So that's literally what we get a cluster wide switch a connection to this cluster", "tokens": [50364, 407, 300, 311, 3736, 437, 321, 483, 257, 13630, 4874, 3679, 257, 4984, 281, 341, 13630, 50546], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 112, "seek": 54412, "start": 547.76, "end": 553.68, "text": " wide switch and everybody that is disconnected that is connected to it can communicate across", "tokens": [50546, 4874, 3679, 293, 2201, 300, 307, 29426, 300, 307, 4582, 281, 309, 393, 7890, 2108, 50842], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 113, "seek": 54412, "start": 553.68, "end": 556.32, "text": " that network.", "tokens": [50842, 300, 3209, 13, 50974], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 114, "seek": 54412, "start": 556.32, "end": 563.88, "text": " There's a short demo right here and we'll see that oh god no internet I knew that that's", "tokens": [50974, 821, 311, 257, 2099, 10723, 558, 510, 293, 321, 603, 536, 300, 1954, 3044, 572, 4705, 286, 2586, 300, 300, 311, 51352], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 115, "seek": 54412, "start": 563.88, "end": 566.5600000000001, "text": " why I have this terminal here.", "tokens": [51352, 983, 286, 362, 341, 14709, 510, 13, 51486], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 116, "seek": 54412, "start": 566.5600000000001, "end": 572.72, "text": " I'm really sorry for the font size but if I put this a little bit bigger it'll basically", "tokens": [51486, 286, 478, 534, 2597, 337, 264, 10703, 2744, 457, 498, 286, 829, 341, 257, 707, 857, 3801, 309, 603, 1936, 51794], "temperature": 0.0, "avg_logprob": -0.12840442856152853, "compression_ratio": 1.7272727272727273, "no_speech_prob": 0.5066039562225342}, {"id": 117, "seek": 57272, "start": 572.72, "end": 576.24, "text": " mess up like the window configuration.", "tokens": [50364, 2082, 493, 411, 264, 4910, 11694, 13, 50540], "temperature": 0.0, "avg_logprob": -0.217459075752346, "compression_ratio": 1.6443298969072164, "no_speech_prob": 0.10657182335853577}, {"id": 118, "seek": 57272, "start": 576.24, "end": 578.96, "text": " I hope you can still see it.", "tokens": [50540, 286, 1454, 291, 393, 920, 536, 309, 13, 50676], "temperature": 0.0, "avg_logprob": -0.217459075752346, "compression_ratio": 1.6443298969072164, "no_speech_prob": 0.10657182335853577}, {"id": 119, "seek": 57272, "start": 578.96, "end": 587.72, "text": " So first thing we're going to see is what the network configuration is.", "tokens": [50676, 407, 700, 551, 321, 434, 516, 281, 536, 307, 437, 264, 3209, 11694, 307, 13, 51114], "temperature": 0.0, "avg_logprob": -0.217459075752346, "compression_ratio": 1.6443298969072164, "no_speech_prob": 0.10657182335853577}, {"id": 120, "seek": 57272, "start": 587.72, "end": 593.4, "text": " I'm not sure if you're used to using MULTUS the ones of you that use Kieferd I guess they", "tokens": [51114, 286, 478, 406, 988, 498, 291, 434, 1143, 281, 1228, 376, 10253, 51, 3447, 264, 2306, 295, 291, 300, 764, 591, 414, 612, 67, 286, 2041, 436, 51398], "temperature": 0.0, "avg_logprob": -0.217459075752346, "compression_ratio": 1.6443298969072164, "no_speech_prob": 0.10657182335853577}, {"id": 121, "seek": 57272, "start": 593.4, "end": 598.28, "text": " are so this is the first thing that we need to look at the network attachment definition.", "tokens": [51398, 366, 370, 341, 307, 264, 700, 551, 300, 321, 643, 281, 574, 412, 264, 3209, 19431, 7123, 13, 51642], "temperature": 0.0, "avg_logprob": -0.217459075752346, "compression_ratio": 1.6443298969072164, "no_speech_prob": 0.10657182335853577}, {"id": 122, "seek": 59828, "start": 598.28, "end": 604.8, "text": " This explains this pretty much holds the CNI configuration from which the CNI plugin will", "tokens": [50364, 639, 13948, 341, 1238, 709, 9190, 264, 14589, 40, 11694, 490, 597, 264, 14589, 40, 23407, 486, 50690], "temperature": 0.0, "avg_logprob": -0.11723071475361668, "compression_ratio": 1.8509615384615385, "no_speech_prob": 0.8090635538101196}, {"id": 123, "seek": 59828, "start": 604.8, "end": 608.3199999999999, "text": " just configure networking for your pod.", "tokens": [50690, 445, 22162, 17985, 337, 428, 2497, 13, 50866], "temperature": 0.0, "avg_logprob": -0.11723071475361668, "compression_ratio": 1.8509615384615385, "no_speech_prob": 0.8090635538101196}, {"id": 124, "seek": 59828, "start": 608.3199999999999, "end": 613.24, "text": " So the interesting thing here is pretty much like the name of the network so the idea here", "tokens": [50866, 407, 264, 1880, 551, 510, 307, 1238, 709, 411, 264, 1315, 295, 264, 3209, 370, 264, 1558, 510, 51112], "temperature": 0.0, "avg_logprob": -0.11723071475361668, "compression_ratio": 1.8509615384615385, "no_speech_prob": 0.8090635538101196}, {"id": 125, "seek": 59828, "start": 613.24, "end": 617.9, "text": " is that the networks are not namespaced but the network attachments are.", "tokens": [51112, 307, 300, 264, 9590, 366, 406, 5288, 47038, 457, 264, 3209, 37987, 366, 13, 51345], "temperature": 0.0, "avg_logprob": -0.11723071475361668, "compression_ratio": 1.8509615384615385, "no_speech_prob": 0.8090635538101196}, {"id": 126, "seek": 59828, "start": 617.9, "end": 624.4399999999999, "text": " So this means that if your network admin wants to grant a namespace connection to a network", "tokens": [51345, 407, 341, 1355, 300, 498, 428, 3209, 24236, 2738, 281, 6386, 257, 5288, 17940, 4984, 281, 257, 3209, 51672], "temperature": 0.0, "avg_logprob": -0.11723071475361668, "compression_ratio": 1.8509615384615385, "no_speech_prob": 0.8090635538101196}, {"id": 127, "seek": 62444, "start": 624.44, "end": 629.6400000000001, "text": " he needs to provision or she needs to provision one of these like in the proper namespace", "tokens": [50364, 415, 2203, 281, 17225, 420, 750, 2203, 281, 17225, 472, 295, 613, 411, 294, 264, 2296, 5288, 17940, 50624], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 128, "seek": 62444, "start": 629.6400000000001, "end": 634.4000000000001, "text": " and this will connect your namespace to this network.", "tokens": [50624, 293, 341, 486, 1745, 428, 5288, 17940, 281, 341, 3209, 13, 50862], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 129, "seek": 62444, "start": 634.4000000000001, "end": 638.9200000000001, "text": " Finally the oops sorry it does not go back.", "tokens": [50862, 6288, 264, 34166, 2597, 309, 775, 406, 352, 646, 13, 51088], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 130, "seek": 62444, "start": 638.9200000000001, "end": 644.6400000000001, "text": " Another interesting thing that was there was the topology which is layer 2 so pretty much", "tokens": [51088, 3996, 1880, 551, 300, 390, 456, 390, 264, 1192, 1793, 597, 307, 4583, 568, 370, 1238, 709, 51374], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 131, "seek": 62444, "start": 644.6400000000001, "end": 649.5200000000001, "text": " what we have is an overlay network this is totally disconnected from the physical network", "tokens": [51374, 437, 321, 362, 307, 364, 31741, 3209, 341, 307, 3879, 29426, 490, 264, 4001, 3209, 51618], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 132, "seek": 62444, "start": 649.5200000000001, "end": 652.6400000000001, "text": " that allows you to have like east-west communication.", "tokens": [51618, 300, 4045, 291, 281, 362, 411, 10648, 12, 8750, 6101, 13, 51774], "temperature": 0.0, "avg_logprob": -0.2011131445566813, "compression_ratio": 1.7615062761506277, "no_speech_prob": 0.49413782358169556}, {"id": 133, "seek": 65264, "start": 652.64, "end": 659.12, "text": " And we do not have IPAM because IPAM for work loads is very tricky and we'll see more on", "tokens": [50364, 400, 321, 360, 406, 362, 8671, 2865, 570, 8671, 2865, 337, 589, 12668, 307, 588, 12414, 293, 321, 603, 536, 544, 322, 50688], "temperature": 0.0, "avg_logprob": -0.1327956000039744, "compression_ratio": 1.542857142857143, "no_speech_prob": 0.07258938252925873}, {"id": 134, "seek": 65264, "start": 659.12, "end": 660.96, "text": " that later on.", "tokens": [50688, 300, 1780, 322, 13, 50780], "temperature": 0.0, "avg_logprob": -0.1327956000039744, "compression_ratio": 1.542857142857143, "no_speech_prob": 0.07258938252925873}, {"id": 135, "seek": 65264, "start": 660.96, "end": 665.56, "text": " So we're connecting two different namespaces as I said.", "tokens": [50780, 407, 321, 434, 11015, 732, 819, 5288, 79, 2116, 382, 286, 848, 13, 51010], "temperature": 0.0, "avg_logprob": -0.1327956000039744, "compression_ratio": 1.542857142857143, "no_speech_prob": 0.07258938252925873}, {"id": 136, "seek": 65264, "start": 665.56, "end": 673.36, "text": " Now we're going to provision these into the cluster like fun fact this is like all lazy", "tokens": [51010, 823, 321, 434, 516, 281, 17225, 613, 666, 264, 13630, 411, 1019, 1186, 341, 307, 411, 439, 14847, 51400], "temperature": 0.0, "avg_logprob": -0.1327956000039744, "compression_ratio": 1.542857142857143, "no_speech_prob": 0.07258938252925873}, {"id": 137, "seek": 65264, "start": 673.36, "end": 679.88, "text": " so I just put like a bunch of stuff in the cluster but nothing happened yet.", "tokens": [51400, 370, 286, 445, 829, 411, 257, 3840, 295, 1507, 294, 264, 13630, 457, 1825, 2011, 1939, 13, 51726], "temperature": 0.0, "avg_logprob": -0.1327956000039744, "compression_ratio": 1.542857142857143, "no_speech_prob": 0.07258938252925873}, {"id": 138, "seek": 67988, "start": 679.88, "end": 685.36, "text": " It's just like the definitions are provisioned and nothing else and now we're going to show", "tokens": [50364, 467, 311, 445, 411, 264, 21988, 366, 17225, 292, 293, 1825, 1646, 293, 586, 321, 434, 516, 281, 855, 50638], "temperature": 0.0, "avg_logprob": -0.2242493232091268, "compression_ratio": 1.644736842105263, "no_speech_prob": 0.08505679666996002}, {"id": 139, "seek": 67988, "start": 685.36, "end": 690.24, "text": " the workload definitions.", "tokens": [50638, 264, 20139, 21988, 13, 50882], "temperature": 0.0, "avg_logprob": -0.2242493232091268, "compression_ratio": 1.644736842105263, "no_speech_prob": 0.08505679666996002}, {"id": 140, "seek": 67988, "start": 690.24, "end": 695.84, "text": " Here they are so we have one virtual machine remember we do not have IPAM in the network", "tokens": [50882, 1692, 436, 366, 370, 321, 362, 472, 6374, 3479, 1604, 321, 360, 406, 362, 8671, 2865, 294, 264, 3209, 51162], "temperature": 0.0, "avg_logprob": -0.2242493232091268, "compression_ratio": 1.644736842105263, "no_speech_prob": 0.08505679666996002}, {"id": 141, "seek": 67988, "start": 695.84, "end": 701.28, "text": " so we need to configure the IP statically you have there in the bottom we configure the", "tokens": [51162, 370, 321, 643, 281, 22162, 264, 8671, 2219, 984, 291, 362, 456, 294, 264, 2767, 321, 22162, 264, 51434], "temperature": 0.0, "avg_logprob": -0.2242493232091268, "compression_ratio": 1.644736842105263, "no_speech_prob": 0.08505679666996002}, {"id": 142, "seek": 67988, "start": 701.28, "end": 709.84, "text": " IP statically using cloud init in the VM and that's its IP 192, 168, 200 dot 10.", "tokens": [51434, 8671, 2219, 984, 1228, 4588, 3157, 294, 264, 18038, 293, 300, 311, 1080, 8671, 1294, 17, 11, 3165, 23, 11, 2331, 5893, 1266, 13, 51862], "temperature": 0.0, "avg_logprob": -0.2242493232091268, "compression_ratio": 1.644736842105263, "no_speech_prob": 0.08505679666996002}, {"id": 143, "seek": 70984, "start": 709.84, "end": 716.6800000000001, "text": " And then we have like our pod we have two pods here specified we have the blue server", "tokens": [50364, 400, 550, 321, 362, 411, 527, 2497, 321, 362, 732, 31925, 510, 22206, 321, 362, 264, 3344, 7154, 50706], "temperature": 0.0, "avg_logprob": -0.17282192097153776, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.1729024201631546}, {"id": 144, "seek": 70984, "start": 716.6800000000001, "end": 722.6800000000001, "text": " pod and you have like a yellow server pod and the blue pod has the dot 20 IP that we", "tokens": [50706, 2497, 293, 291, 362, 411, 257, 5566, 7154, 2497, 293, 264, 3344, 2497, 575, 264, 5893, 945, 8671, 300, 321, 51006], "temperature": 0.0, "avg_logprob": -0.17282192097153776, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.1729024201631546}, {"id": 145, "seek": 70984, "start": 722.6800000000001, "end": 730.1600000000001, "text": " configure using the network selection elements this is like multis lingo and what this is", "tokens": [51006, 22162, 1228, 264, 3209, 9450, 4959, 341, 307, 411, 2120, 271, 287, 18459, 293, 437, 341, 307, 51380], "temperature": 0.0, "avg_logprob": -0.17282192097153776, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.1729024201631546}, {"id": 146, "seek": 70984, "start": 730.1600000000001, "end": 737.5600000000001, "text": " doing is exposing like an HTTP server on port 9000 and what we want to do is so we have", "tokens": [51380, 884, 307, 33178, 411, 364, 33283, 7154, 322, 2436, 1722, 1360, 293, 437, 321, 528, 281, 360, 307, 370, 321, 362, 51750], "temperature": 0.0, "avg_logprob": -0.17282192097153776, "compression_ratio": 1.7755102040816326, "no_speech_prob": 0.1729024201631546}, {"id": 147, "seek": 73756, "start": 737.56, "end": 741.88, "text": " two servers the blue and the yellow and we have the VM is the client and we're going", "tokens": [50364, 732, 15909, 264, 3344, 293, 264, 5566, 293, 321, 362, 264, 18038, 307, 264, 6423, 293, 321, 434, 516, 50580], "temperature": 0.0, "avg_logprob": -0.14597967091728659, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13825029134750366}, {"id": 148, "seek": 73756, "start": 741.88, "end": 749.5999999999999, "text": " to be curling to each of the servers by their hostname so that's what we're going to see", "tokens": [50580, 281, 312, 45085, 281, 1184, 295, 264, 15909, 538, 641, 3975, 16344, 370, 300, 311, 437, 321, 434, 516, 281, 536, 50966], "temperature": 0.0, "avg_logprob": -0.14597967091728659, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13825029134750366}, {"id": 149, "seek": 73756, "start": 749.5999999999999, "end": 761.4, "text": " in well let's first provision this the windows in the bottom are so we can kind of see when", "tokens": [50966, 294, 731, 718, 311, 700, 17225, 341, 264, 9309, 294, 264, 2767, 366, 370, 321, 393, 733, 295, 536, 562, 51556], "temperature": 0.0, "avg_logprob": -0.14597967091728659, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13825029134750366}, {"id": 150, "seek": 76140, "start": 761.4, "end": 767.56, "text": " they're ready so the old service ready the tenant so the VM is booting up let's speed", "tokens": [50364, 436, 434, 1919, 370, 264, 1331, 2643, 1919, 264, 31000, 370, 264, 18038, 307, 11450, 278, 493, 718, 311, 3073, 50672], "temperature": 0.0, "avg_logprob": -0.21522048025420218, "compression_ratio": 1.62987012987013, "no_speech_prob": 0.6133182048797607}, {"id": 151, "seek": 76140, "start": 767.56, "end": 775.64, "text": " up this part so we're now going to log in via console to the virtual machine and we're", "tokens": [50672, 493, 341, 644, 370, 321, 434, 586, 516, 281, 3565, 294, 5766, 11076, 281, 264, 6374, 3479, 293, 321, 434, 51076], "temperature": 0.0, "avg_logprob": -0.21522048025420218, "compression_ratio": 1.62987012987013, "no_speech_prob": 0.6133182048797607}, {"id": 152, "seek": 76140, "start": 775.64, "end": 782.76, "text": " going to curl both the servers and they're going to echo back their hostnames.", "tokens": [51076, 516, 281, 22591, 1293, 264, 15909, 293, 436, 434, 516, 281, 14300, 646, 641, 3975, 77, 1632, 13, 51432], "temperature": 0.0, "avg_logprob": -0.21522048025420218, "compression_ratio": 1.62987012987013, "no_speech_prob": 0.6133182048797607}, {"id": 153, "seek": 78276, "start": 782.76, "end": 804.6, "text": " So God it's going to take forever if only I had internet and I could play a video oh", "tokens": [50364, 407, 1265, 309, 311, 516, 281, 747, 5680, 498, 787, 286, 632, 4705, 293, 286, 727, 862, 257, 960, 1954, 51456], "temperature": 0.0, "avg_logprob": -0.33214980363845825, "compression_ratio": 1.0632911392405062, "no_speech_prob": 0.8819453120231628}, {"id": 154, "seek": 80460, "start": 804.6, "end": 816.44, "text": " God.", "tokens": [50364, 1265, 13, 50956], "temperature": 0.0, "avg_logprob": -0.6535020308061079, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.458480566740036}, {"id": 155, "seek": 80460, "start": 816.44, "end": 824.0, "text": " Does anybody know how you can ask an emma tell it wow amazing I don't know.", "tokens": [50956, 4402, 4472, 458, 577, 291, 393, 1029, 364, 846, 1696, 980, 309, 6076, 2243, 286, 500, 380, 458, 13, 51334], "temperature": 0.0, "avg_logprob": -0.6535020308061079, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.458480566740036}, {"id": 156, "seek": 80460, "start": 824.0, "end": 828.44, "text": " It stopped again.", "tokens": [51334, 467, 5936, 797, 13, 51556], "temperature": 0.0, "avg_logprob": -0.6535020308061079, "compression_ratio": 1.101123595505618, "no_speech_prob": 0.458480566740036}, {"id": 157, "seek": 82844, "start": 828.44, "end": 843.4000000000001, "text": " Okay it's playing cool so yeah login via console I hope it did not stop what's happening", "tokens": [50364, 1033, 309, 311, 2433, 1627, 370, 1338, 24276, 5766, 11076, 286, 1454, 309, 630, 406, 1590, 437, 311, 2737, 51112], "temperature": 0.0, "avg_logprob": -0.18390013376871744, "compression_ratio": 1.3984375, "no_speech_prob": 0.6855138540267944}, {"id": 158, "seek": 82844, "start": 843.4000000000001, "end": 855.0400000000001, "text": " so yeah I should have known better but again we're going to log via console the UI of this", "tokens": [51112, 370, 1338, 286, 820, 362, 2570, 1101, 457, 797, 321, 434, 516, 281, 3565, 5766, 11076, 264, 15682, 295, 341, 51694], "temperature": 0.0, "avg_logprob": -0.18390013376871744, "compression_ratio": 1.3984375, "no_speech_prob": 0.6855138540267944}, {"id": 159, "seek": 85504, "start": 855.04, "end": 862.24, "text": " thing is absolutely preposterous like I don't know if it's playing or not.", "tokens": [50364, 551, 307, 3122, 2666, 7096, 563, 411, 286, 500, 380, 458, 498, 309, 311, 2433, 420, 406, 13, 50724], "temperature": 0.0, "avg_logprob": -0.23854451007153615, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.7166762351989746}, {"id": 160, "seek": 85504, "start": 862.24, "end": 870.68, "text": " Okay so yeah you get curl to the dot 20 IP address it replies with the blue server thing", "tokens": [50724, 1033, 370, 1338, 291, 483, 22591, 281, 264, 5893, 945, 8671, 2985, 309, 42289, 365, 264, 3344, 7154, 551, 51146], "temperature": 0.0, "avg_logprob": -0.23854451007153615, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.7166762351989746}, {"id": 161, "seek": 85504, "start": 870.68, "end": 875.1999999999999, "text": " we do the same thing to the dot 30 IP address it replies with its hostname which is the yellow", "tokens": [51146, 321, 360, 264, 912, 551, 281, 264, 5893, 2217, 8671, 2985, 309, 42289, 365, 1080, 3975, 16344, 597, 307, 264, 5566, 51372], "temperature": 0.0, "avg_logprob": -0.23854451007153615, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.7166762351989746}, {"id": 162, "seek": 85504, "start": 875.1999999999999, "end": 881.0, "text": " server this concludes the first demo which shows us like east-west communication between", "tokens": [51372, 7154, 341, 24643, 264, 700, 10723, 597, 3110, 505, 411, 10648, 12, 8750, 6101, 1296, 51662], "temperature": 0.0, "avg_logprob": -0.23854451007153615, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.7166762351989746}, {"id": 163, "seek": 88100, "start": 881.0, "end": 886.36, "text": " well different workloads in different namespaces.", "tokens": [50364, 731, 819, 32452, 294, 819, 5288, 79, 2116, 13, 50632], "temperature": 0.0, "avg_logprob": -0.16002775563134086, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.693541944026947}, {"id": 164, "seek": 88100, "start": 886.36, "end": 894.5, "text": " Now going to the second use case which now we want to have like remember the motivation", "tokens": [50632, 823, 516, 281, 264, 1150, 764, 1389, 597, 586, 321, 528, 281, 362, 411, 1604, 264, 12335, 51039], "temperature": 0.0, "avg_logprob": -0.16002775563134086, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.693541944026947}, {"id": 165, "seek": 88100, "start": 894.5, "end": 900.52, "text": " slides where I mentioned stuff about accessing things on a pre-existing physical network", "tokens": [51039, 9788, 689, 286, 2835, 1507, 466, 26440, 721, 322, 257, 659, 12, 36447, 4001, 3209, 51340], "temperature": 0.0, "avg_logprob": -0.16002775563134086, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.693541944026947}, {"id": 166, "seek": 88100, "start": 900.52, "end": 906.48, "text": " that's exactly what we're going to be seeing now so as before we see like we have a logical", "tokens": [51340, 300, 311, 2293, 437, 321, 434, 516, 281, 312, 2577, 586, 370, 382, 949, 321, 536, 411, 321, 362, 257, 14978, 51638], "temperature": 0.0, "avg_logprob": -0.16002775563134086, "compression_ratio": 1.5820895522388059, "no_speech_prob": 0.693541944026947}, {"id": 167, "seek": 90648, "start": 906.48, "end": 911.76, "text": " view of a cluster wide switch the difference is that this switch is actually connected", "tokens": [50364, 1910, 295, 257, 13630, 4874, 3679, 264, 2649, 307, 300, 341, 3679, 307, 767, 4582, 50628], "temperature": 0.0, "avg_logprob": -0.13545836130777994, "compression_ratio": 1.5870646766169154, "no_speech_prob": 0.5457392334938049}, {"id": 168, "seek": 90648, "start": 911.76, "end": 917.12, "text": " to a physical network and you can access stuff that's there in our example it's going to", "tokens": [50628, 281, 257, 4001, 3209, 293, 291, 393, 2105, 1507, 300, 311, 456, 294, 527, 1365, 309, 311, 516, 281, 50896], "temperature": 0.0, "avg_logprob": -0.13545836130777994, "compression_ratio": 1.5870646766169154, "no_speech_prob": 0.5457392334938049}, {"id": 169, "seek": 90648, "start": 917.12, "end": 922.46, "text": " be like a database that has well the data the VM needs.", "tokens": [50896, 312, 411, 257, 8149, 300, 575, 731, 264, 1412, 264, 18038, 2203, 13, 51163], "temperature": 0.0, "avg_logprob": -0.13545836130777994, "compression_ratio": 1.5870646766169154, "no_speech_prob": 0.5457392334938049}, {"id": 170, "seek": 90648, "start": 922.46, "end": 930.72, "text": " The first thing we need to kind of elaborate a little bit is that you need to configure", "tokens": [51163, 440, 700, 551, 321, 643, 281, 733, 295, 20945, 257, 707, 857, 307, 300, 291, 643, 281, 22162, 51576], "temperature": 0.0, "avg_logprob": -0.13545836130777994, "compression_ratio": 1.5870646766169154, "no_speech_prob": 0.5457392334938049}, {"id": 171, "seek": 93072, "start": 930.72, "end": 937.28, "text": " the physical network so first of all it's not something that a typical user will get", "tokens": [50364, 264, 4001, 3209, 370, 700, 295, 439, 309, 311, 406, 746, 300, 257, 7476, 4195, 486, 483, 50692], "temperature": 0.0, "avg_logprob": -0.15328016086500518, "compression_ratio": 1.7327586206896552, "no_speech_prob": 0.8482799530029297}, {"id": 172, "seek": 93072, "start": 937.28, "end": 943.32, "text": " access to it needs to happen by a cluster admin and for that we're going to be using", "tokens": [50692, 2105, 281, 309, 2203, 281, 1051, 538, 257, 13630, 24236, 293, 337, 300, 321, 434, 516, 281, 312, 1228, 50994], "temperature": 0.0, "avg_logprob": -0.15328016086500518, "compression_ratio": 1.7327586206896552, "no_speech_prob": 0.8482799530029297}, {"id": 173, "seek": 93072, "start": 943.32, "end": 947.2, "text": " two tools first NM state and Kubernetes NM state.", "tokens": [50994, 732, 3873, 700, 426, 44, 1785, 293, 23145, 426, 44, 1785, 13, 51188], "temperature": 0.0, "avg_logprob": -0.15328016086500518, "compression_ratio": 1.7327586206896552, "no_speech_prob": 0.8482799530029297}, {"id": 174, "seek": 93072, "start": 947.2, "end": 951.84, "text": " NM state is basically like a declarative tool that configures networking you just give it", "tokens": [51188, 426, 44, 1785, 307, 1936, 411, 257, 16694, 1166, 2290, 300, 6662, 1303, 17985, 291, 445, 976, 309, 51420], "temperature": 0.0, "avg_logprob": -0.15328016086500518, "compression_ratio": 1.7327586206896552, "no_speech_prob": 0.8482799530029297}, {"id": 175, "seek": 93072, "start": 951.84, "end": 957.1600000000001, "text": " like the desired state I want my network to be like this and it's going to go while punching", "tokens": [51420, 411, 264, 14721, 1785, 286, 528, 452, 3209, 281, 312, 411, 341, 293, 309, 311, 516, 281, 352, 1339, 34866, 51686], "temperature": 0.0, "avg_logprob": -0.15328016086500518, "compression_ratio": 1.7327586206896552, "no_speech_prob": 0.8482799530029297}, {"id": 176, "seek": 95716, "start": 957.16, "end": 962.8399999999999, "text": " buttons attempting to make the current state be what you desire to be if it fails it rolls", "tokens": [50364, 9905, 22001, 281, 652, 264, 2190, 1785, 312, 437, 291, 7516, 281, 312, 498, 309, 18199, 309, 15767, 50648], "temperature": 0.0, "avg_logprob": -0.12542360305786132, "compression_ratio": 1.720472440944882, "no_speech_prob": 0.26842284202575684}, {"id": 177, "seek": 95716, "start": 962.8399999999999, "end": 968.36, "text": " everything back so no changes to your network so it cannot destroy it and if it succeeds", "tokens": [50648, 1203, 646, 370, 572, 2962, 281, 428, 3209, 370, 309, 2644, 5293, 309, 293, 498, 309, 49263, 50924], "temperature": 0.0, "avg_logprob": -0.12542360305786132, "compression_ratio": 1.720472440944882, "no_speech_prob": 0.26842284202575684}, {"id": 178, "seek": 95716, "start": 968.36, "end": 972.56, "text": " it'll tell you you succeeded so basically what we want to do is use Kubernetes NM state", "tokens": [50924, 309, 603, 980, 291, 291, 20263, 370, 1936, 437, 321, 528, 281, 360, 307, 764, 23145, 426, 44, 1785, 51134], "temperature": 0.0, "avg_logprob": -0.12542360305786132, "compression_ratio": 1.720472440944882, "no_speech_prob": 0.26842284202575684}, {"id": 179, "seek": 95716, "start": 972.56, "end": 979.3199999999999, "text": " which is kind of a cluster wide thing send YAML specification to the cluster and all", "tokens": [51134, 597, 307, 733, 295, 257, 13630, 4874, 551, 2845, 398, 2865, 43, 31256, 281, 264, 13630, 293, 439, 51472], "temperature": 0.0, "avg_logprob": -0.12542360305786132, "compression_ratio": 1.720472440944882, "no_speech_prob": 0.26842284202575684}, {"id": 180, "seek": 95716, "start": 979.3199999999999, "end": 984.0, "text": " my network specification will be applied in all the nodes in our cluster so it would", "tokens": [51472, 452, 3209, 31256, 486, 312, 6456, 294, 439, 264, 13891, 294, 527, 13630, 370, 309, 576, 51706], "temperature": 0.0, "avg_logprob": -0.12542360305786132, "compression_ratio": 1.720472440944882, "no_speech_prob": 0.26842284202575684}, {"id": 181, "seek": 98400, "start": 984.0, "end": 989.28, "text": " look like this so in the in the left we have an example of a policy and in the right we", "tokens": [50364, 574, 411, 341, 370, 294, 264, 294, 264, 1411, 321, 362, 364, 1365, 295, 257, 3897, 293, 294, 264, 558, 321, 50628], "temperature": 0.0, "avg_logprob": -0.13264568035419172, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.522164523601532}, {"id": 182, "seek": 98400, "start": 989.28, "end": 995.36, "text": " have like a diagram of the topology we're trying to do here so if you look here we this is", "tokens": [50628, 362, 411, 257, 10686, 295, 264, 1192, 1793, 321, 434, 1382, 281, 360, 510, 370, 498, 291, 574, 510, 321, 341, 307, 50932], "temperature": 0.0, "avg_logprob": -0.13264568035419172, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.522164523601532}, {"id": 183, "seek": 98400, "start": 995.36, "end": 1000.48, "text": " going to be applied to all the Kubernetes worker nodes because of this node selector", "tokens": [50932, 516, 281, 312, 6456, 281, 439, 264, 23145, 11346, 13891, 570, 295, 341, 9984, 23264, 1672, 51188], "temperature": 0.0, "avg_logprob": -0.13264568035419172, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.522164523601532}, {"id": 184, "seek": 98400, "start": 1000.48, "end": 1006.08, "text": " that we have here and what we're going to do is create an OVS bridge in each of these", "tokens": [51188, 300, 321, 362, 510, 293, 437, 321, 434, 516, 281, 360, 307, 1884, 364, 422, 53, 50, 7283, 294, 1184, 295, 613, 51468], "temperature": 0.0, "avg_logprob": -0.13264568035419172, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.522164523601532}, {"id": 185, "seek": 100608, "start": 1006.12, "end": 1014.72, "text": " worker nodes attach this ENS for interface to the OVS bridge and then using this these", "tokens": [50366, 11346, 13891, 5085, 341, 15244, 50, 337, 9226, 281, 264, 422, 53, 50, 7283, 293, 550, 1228, 341, 613, 50796], "temperature": 0.0, "avg_logprob": -0.13505916161970657, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.6916387677192688}, {"id": 186, "seek": 100608, "start": 1014.72, "end": 1021.0, "text": " oven bridge mappings in the bottom we're going we're saying that we want traffic from the", "tokens": [50796, 9090, 7283, 463, 28968, 294, 264, 2767, 321, 434, 516, 321, 434, 1566, 300, 321, 528, 6419, 490, 264, 51110], "temperature": 0.0, "avg_logprob": -0.13505916161970657, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.6916387677192688}, {"id": 187, "seek": 100608, "start": 1021.0, "end": 1027.4, "text": " network called default network to be sent to the OVS bridge called BRX and we want the", "tokens": [51110, 3209, 1219, 7576, 3209, 281, 312, 2279, 281, 264, 422, 53, 50, 7283, 1219, 10262, 55, 293, 321, 528, 264, 51430], "temperature": 0.0, "avg_logprob": -0.13505916161970657, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.6916387677192688}, {"id": 188, "seek": 100608, "start": 1027.4, "end": 1035.3600000000001, "text": " traffic from the tenant blue physical network to be sent to the OVS one bridge it's literally", "tokens": [51430, 6419, 490, 264, 31000, 3344, 4001, 3209, 281, 312, 2279, 281, 264, 422, 53, 50, 472, 7283, 309, 311, 3736, 51828], "temperature": 0.0, "avg_logprob": -0.13505916161970657, "compression_ratio": 1.8214285714285714, "no_speech_prob": 0.6916387677192688}, {"id": 189, "seek": 103536, "start": 1035.36, "end": 1044.6, "text": " what you diagram you see there in the right now we are granting access to from workloads to the", "tokens": [50364, 437, 291, 10686, 291, 536, 456, 294, 264, 558, 586, 321, 366, 50204, 2105, 281, 490, 32452, 281, 264, 50826], "temperature": 0.0, "avg_logprob": -0.166590178885111, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0022864877246320248}, {"id": 190, "seek": 103536, "start": 1044.6, "end": 1051.56, "text": " physical network you should not mean should fret carefully when you do this and for that we need", "tokens": [50826, 4001, 3209, 291, 820, 406, 914, 820, 24189, 7500, 562, 291, 360, 341, 293, 337, 300, 321, 643, 51174], "temperature": 0.0, "avg_logprob": -0.166590178885111, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0022864877246320248}, {"id": 191, "seek": 103536, "start": 1051.56, "end": 1057.32, "text": " to have like micro segmentation this pretty much is like what you have in for the primary network", "tokens": [51174, 281, 362, 411, 4532, 9469, 399, 341, 1238, 709, 307, 411, 437, 291, 362, 294, 337, 264, 6194, 3209, 51462], "temperature": 0.0, "avg_logprob": -0.166590178885111, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0022864877246320248}, {"id": 192, "seek": 103536, "start": 1057.32, "end": 1063.28, "text": " for the cluster default network network policies this is the exact same thing but applied to", "tokens": [51462, 337, 264, 13630, 7576, 3209, 3209, 7657, 341, 307, 264, 1900, 912, 551, 457, 6456, 281, 51760], "temperature": 0.0, "avg_logprob": -0.166590178885111, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.0022864877246320248}, {"id": 193, "seek": 106328, "start": 1063.3999999999999, "end": 1068.12, "text": " secondary networks so in our example what we want to have is like a virtual machine that", "tokens": [50370, 11396, 9590, 370, 294, 527, 1365, 437, 321, 528, 281, 362, 307, 411, 257, 6374, 3479, 300, 50606], "temperature": 0.0, "avg_logprob": -0.16553686927346623, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.04879550263285637}, {"id": 194, "seek": 106328, "start": 1068.12, "end": 1074.92, "text": " wants data from the database but we do not allow it to actually consume the data directly from", "tokens": [50606, 2738, 1412, 490, 264, 8149, 457, 321, 360, 406, 2089, 309, 281, 767, 14732, 264, 1412, 3838, 490, 50946], "temperature": 0.0, "avg_logprob": -0.16553686927346623, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.04879550263285637}, {"id": 195, "seek": 106328, "start": 1074.92, "end": 1081.28, "text": " the database so we expose that information from a pod so the pod actually can connect to the", "tokens": [50946, 264, 8149, 370, 321, 19219, 300, 1589, 490, 257, 2497, 370, 264, 2497, 767, 393, 1745, 281, 264, 51264], "temperature": 0.0, "avg_logprob": -0.16553686927346623, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.04879550263285637}, {"id": 196, "seek": 106328, "start": 1081.28, "end": 1090.08, "text": " database and expose this information from a RESTful API over port 9000 so this is kind of what we", "tokens": [51264, 8149, 293, 19219, 341, 1589, 490, 257, 497, 14497, 906, 9362, 670, 2436, 1722, 1360, 370, 341, 307, 733, 295, 437, 321, 51704], "temperature": 0.0, "avg_logprob": -0.16553686927346623, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.04879550263285637}, {"id": 197, "seek": 109008, "start": 1090.08, "end": 1096.0, "text": " want to do ensure that the VM cannot reach the database directly over the port the posgrasql", "tokens": [50364, 528, 281, 360, 5586, 300, 264, 18038, 2644, 2524, 264, 8149, 3838, 670, 264, 2436, 264, 1366, 861, 296, 80, 75, 50660], "temperature": 0.0, "avg_logprob": -0.1731471061706543, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.15378394722938538}, {"id": 198, "seek": 109008, "start": 1096.0, "end": 1106.1999999999998, "text": " port but and ensure you can using well this tiny pod as its proxy data proxy so again another", "tokens": [50660, 2436, 457, 293, 5586, 291, 393, 1228, 731, 341, 5870, 2497, 382, 1080, 29690, 1412, 29690, 370, 797, 1071, 51170], "temperature": 0.0, "avg_logprob": -0.1731471061706543, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.15378394722938538}, {"id": 199, "seek": 109008, "start": 1106.1999999999998, "end": 1113.1999999999998, "text": " demo this is going to be a disaster I have tempted to tell you to just check this at home but how", "tokens": [51170, 10723, 341, 307, 516, 281, 312, 257, 11293, 286, 362, 29941, 281, 980, 291, 281, 445, 1520, 341, 412, 1280, 457, 577, 51520], "temperature": 0.0, "avg_logprob": -0.1731471061706543, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.15378394722938538}, {"id": 200, "seek": 111320, "start": 1113.2, "end": 1121.8, "text": " many times we have more than five minutes right again this does not work sorry it's the other cast", "tokens": [50364, 867, 1413, 321, 362, 544, 813, 1732, 2077, 558, 797, 341, 775, 406, 589, 2597, 309, 311, 264, 661, 4193, 50794], "temperature": 0.0, "avg_logprob": -0.18739771842956543, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.02841828390955925}, {"id": 201, "seek": 111320, "start": 1121.8, "end": 1134.56, "text": " so now in this demo what we do have we do have two namespaces data consumer and data adapter we", "tokens": [50794, 370, 586, 294, 341, 10723, 437, 321, 360, 362, 321, 360, 362, 732, 5288, 79, 2116, 1412, 9711, 293, 1412, 22860, 321, 51432], "temperature": 0.0, "avg_logprob": -0.18739771842956543, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.02841828390955925}, {"id": 202, "seek": 113456, "start": 1134.6, "end": 1148.24, "text": " just provisioned them let's first thing some information like this I'm running a kind cluster", "tokens": [50366, 445, 17225, 292, 552, 718, 311, 700, 551, 512, 1589, 411, 341, 286, 478, 2614, 257, 733, 13630, 51048], "temperature": 0.0, "avg_logprob": -0.20195337931315105, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.07798492908477783}, {"id": 203, "seek": 113456, "start": 1148.24, "end": 1160.08, "text": " here and I botched this again so I'm running a kind cluster here and so my Kubernetes nodes are", "tokens": [51048, 510, 293, 286, 10592, 19318, 341, 797, 370, 286, 478, 2614, 257, 733, 13630, 510, 293, 370, 452, 23145, 13891, 366, 51640], "temperature": 0.0, "avg_logprob": -0.20195337931315105, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.07798492908477783}, {"id": 204, "seek": 116008, "start": 1160.12, "end": 1169.1599999999999, "text": " running basic as containers in in my laptop and so the physical network that we see in the diagram", "tokens": [50366, 2614, 3875, 382, 17089, 294, 294, 452, 10732, 293, 370, 264, 4001, 3209, 300, 321, 536, 294, 264, 10686, 50818], "temperature": 0.0, "avg_logprob": -0.1868019676208496, "compression_ratio": 1.6964285714285714, "no_speech_prob": 0.1050320491194725}, {"id": 205, "seek": 116008, "start": 1169.1599999999999, "end": 1174.4399999999998, "text": " is basically like my laptop it's going to be connected by a Linux bridge in the in the laptop", "tokens": [50818, 307, 1936, 411, 452, 10732, 309, 311, 516, 281, 312, 4582, 538, 257, 18734, 7283, 294, 264, 294, 264, 10732, 51082], "temperature": 0.0, "avg_logprob": -0.1868019676208496, "compression_ratio": 1.6964285714285714, "no_speech_prob": 0.1050320491194725}, {"id": 206, "seek": 116008, "start": 1174.4399999999998, "end": 1180.04, "text": " and for that I need to kind of since I'm using a VLAN I'm going to need to pre provision the", "tokens": [51082, 293, 337, 300, 286, 643, 281, 733, 295, 1670, 286, 478, 1228, 257, 691, 36527, 286, 478, 516, 281, 643, 281, 659, 17225, 264, 51362], "temperature": 0.0, "avg_logprob": -0.1868019676208496, "compression_ratio": 1.6964285714285714, "no_speech_prob": 0.1050320491194725}, {"id": 207, "seek": 116008, "start": 1180.04, "end": 1187.76, "text": " VLAN and that's the interface you see here in the bottom like this podman 1.123 it's a VLAN on", "tokens": [51362, 691, 36527, 293, 300, 311, 264, 9226, 291, 536, 510, 294, 264, 2767, 411, 341, 2497, 1601, 502, 13, 4762, 18, 309, 311, 257, 691, 36527, 322, 51748], "temperature": 0.0, "avg_logprob": -0.1868019676208496, "compression_ratio": 1.6964285714285714, "no_speech_prob": 0.1050320491194725}, {"id": 208, "seek": 118776, "start": 1187.8, "end": 1200.76, "text": " top of the Linux bridge management interface I'm going to show this again and so again VLAN", "tokens": [50366, 1192, 295, 264, 18734, 7283, 4592, 9226, 286, 478, 516, 281, 855, 341, 797, 293, 370, 797, 691, 36527, 51014], "temperature": 0.0, "avg_logprob": -0.1859418787854783, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.006286971736699343}, {"id": 209, "seek": 118776, "start": 1200.76, "end": 1209.56, "text": " 1.123 that's subnet and we have a database running in containerized database running here and we", "tokens": [51014, 502, 13, 4762, 18, 300, 311, 1422, 7129, 293, 321, 362, 257, 8149, 2614, 294, 10129, 1602, 8149, 2614, 510, 293, 321, 51454], "temperature": 0.0, "avg_logprob": -0.1859418787854783, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.006286971736699343}, {"id": 210, "seek": 120956, "start": 1209.6, "end": 1216.04, "text": " are going you see we have access to the database now let's check our manifests", "tokens": [50366, 366, 516, 291, 536, 321, 362, 2105, 281, 264, 8149, 586, 718, 311, 1520, 527, 50252, 50688], "temperature": 0.0, "avg_logprob": -0.14611806291522403, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.15187160670757294}, {"id": 211, "seek": 120956, "start": 1216.04, "end": 1226.0, "text": " really sorry so I think you should check the demo at home and we have five minutes yeah I don't", "tokens": [50688, 534, 2597, 370, 286, 519, 291, 820, 1520, 264, 10723, 412, 1280, 293, 321, 362, 1732, 2077, 1338, 286, 500, 380, 51186], "temperature": 0.0, "avg_logprob": -0.14611806291522403, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.15187160670757294}, {"id": 212, "seek": 120956, "start": 1226.0, "end": 1232.2, "text": " think this is going to work please do check the demo at home but pretty much what you'll see is", "tokens": [51186, 519, 341, 307, 516, 281, 589, 1767, 360, 1520, 264, 10723, 412, 1280, 457, 1238, 709, 437, 291, 603, 536, 307, 51496], "temperature": 0.0, "avg_logprob": -0.14611806291522403, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.15187160670757294}, {"id": 213, "seek": 123220, "start": 1232.72, "end": 1240.28, "text": " what I showed in this diagram so you'll have access on one port you'll have access direct access", "tokens": [50390, 437, 286, 4712, 294, 341, 10686, 370, 291, 603, 362, 2105, 322, 472, 2436, 291, 603, 362, 2105, 2047, 2105, 50768], "temperature": 0.0, "avg_logprob": -0.15241672010982737, "compression_ratio": 1.7023809523809523, "no_speech_prob": 0.1458570808172226}, {"id": 214, "seek": 123220, "start": 1240.28, "end": 1247.32, "text": " from the VM to the database like you can PSQL to the data directly and to get the data from using", "tokens": [50768, 490, 264, 18038, 281, 264, 8149, 411, 291, 393, 8168, 13695, 281, 264, 1412, 3838, 293, 281, 483, 264, 1412, 490, 1228, 51120], "temperature": 0.0, "avg_logprob": -0.15241672010982737, "compression_ratio": 1.7023809523809523, "no_speech_prob": 0.1458570808172226}, {"id": 215, "seek": 123220, "start": 1247.32, "end": 1252.64, "text": " HTTP from the pod and then I provision some policies and then you stop having access to the", "tokens": [51120, 33283, 490, 264, 2497, 293, 550, 286, 17225, 512, 7657, 293, 550, 291, 1590, 1419, 2105, 281, 264, 51386], "temperature": 0.0, "avg_logprob": -0.15241672010982737, "compression_ratio": 1.7023809523809523, "no_speech_prob": 0.1458570808172226}, {"id": 216, "seek": 125264, "start": 1252.68, "end": 1263.3600000000001, "text": " database and that's pretty much it now roadmap what what are we going for next first thing we need", "tokens": [50366, 8149, 293, 300, 311, 1238, 709, 309, 586, 35738, 437, 437, 366, 321, 516, 337, 958, 700, 551, 321, 643, 50900], "temperature": 0.0, "avg_logprob": -0.14081807817731584, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.1401689052581787}, {"id": 217, "seek": 125264, "start": 1263.3600000000001, "end": 1271.16, "text": " to have is like IPAM for the workloads so we need to find a way to tie the IP allocation to the", "tokens": [50900, 281, 362, 307, 411, 8671, 2865, 337, 264, 32452, 370, 321, 643, 281, 915, 257, 636, 281, 7582, 264, 8671, 27599, 281, 264, 51290], "temperature": 0.0, "avg_logprob": -0.14081807817731584, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.1401689052581787}, {"id": 218, "seek": 125264, "start": 1271.16, "end": 1276.76, "text": " virtual machine and not to the pod where the VM runs like remember the our big issue where the", "tokens": [51290, 6374, 3479, 293, 406, 281, 264, 2497, 689, 264, 18038, 6676, 411, 1604, 264, 527, 955, 2734, 689, 264, 51570], "temperature": 0.0, "avg_logprob": -0.14081807817731584, "compression_ratio": 1.5879120879120878, "no_speech_prob": 0.1401689052581787}, {"id": 219, "seek": 127676, "start": 1277.0, "end": 1283.2, "text": " virtualization is migration and that means that when you migrate the VM to a new node the pod gets a", "tokens": [50376, 6374, 2144, 307, 17011, 293, 300, 1355, 300, 562, 291, 31821, 264, 18038, 281, 257, 777, 9984, 264, 2497, 2170, 257, 50686], "temperature": 0.0, "avg_logprob": -0.1624282511269174, "compression_ratio": 1.84037558685446, "no_speech_prob": 0.21970181167125702}, {"id": 220, "seek": 127676, "start": 1283.2, "end": 1288.76, "text": " new interface the VM is still with the old interface and basically networking is not properly", "tokens": [50686, 777, 9226, 264, 18038, 307, 920, 365, 264, 1331, 9226, 293, 1936, 17985, 307, 406, 6108, 50964], "temperature": 0.0, "avg_logprob": -0.1624282511269174, "compression_ratio": 1.84037558685446, "no_speech_prob": 0.21970181167125702}, {"id": 221, "seek": 127676, "start": 1288.76, "end": 1295.28, "text": " configured we wanted to address that first and that will unlock the next thing in our in our queue", "tokens": [50964, 30538, 321, 1415, 281, 2985, 300, 700, 293, 300, 486, 11634, 264, 958, 551, 294, 527, 294, 527, 18639, 51290], "temperature": 0.0, "avg_logprob": -0.1624282511269174, "compression_ratio": 1.84037558685446, "no_speech_prob": 0.21970181167125702}, {"id": 222, "seek": 127676, "start": 1295.28, "end": 1301.8799999999999, "text": " which is selective selective policies so our kind of policies for the secondary networks right now", "tokens": [51290, 597, 307, 33930, 33930, 7657, 370, 527, 733, 295, 7657, 337, 264, 11396, 9590, 558, 586, 51620], "temperature": 0.0, "avg_logprob": -0.1624282511269174, "compression_ratio": 1.84037558685446, "no_speech_prob": 0.21970181167125702}, {"id": 223, "seek": 130188, "start": 1302.48, "end": 1308.48, "text": " you can only use IP blocks you cannot use like semantic things like I want to allow all workloads", "tokens": [50394, 291, 393, 787, 764, 8671, 8474, 291, 2644, 764, 411, 47982, 721, 411, 286, 528, 281, 2089, 439, 32452, 50694], "temperature": 0.0, "avg_logprob": -0.1471643557493714, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.15590909123420715}, {"id": 224, "seek": 130188, "start": 1308.48, "end": 1313.3200000000002, "text": " from this namespace we're having these labels to access this sort of workload you cannot do that", "tokens": [50694, 490, 341, 5288, 17940, 321, 434, 1419, 613, 16949, 281, 2105, 341, 1333, 295, 20139, 291, 2644, 360, 300, 50936], "temperature": 0.0, "avg_logprob": -0.1471643557493714, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.15590909123420715}, {"id": 225, "seek": 130188, "start": 1313.3200000000002, "end": 1320.92, "text": " you need to specify IP ranges directly once we have these two things we're going for services", "tokens": [50936, 291, 643, 281, 16500, 8671, 22526, 3838, 1564, 321, 362, 613, 732, 721, 321, 434, 516, 337, 3328, 51316], "temperature": 0.0, "avg_logprob": -0.1471643557493714, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.15590909123420715}, {"id": 226, "seek": 130188, "start": 1320.92, "end": 1326.92, "text": " next like we want to have like exposed via services like egress from VMs and to have like load", "tokens": [51316, 958, 411, 321, 528, 281, 362, 411, 9495, 5766, 3328, 411, 308, 3091, 490, 18038, 82, 293, 281, 362, 411, 3677, 51616], "temperature": 0.0, "avg_logprob": -0.1471643557493714, "compression_ratio": 1.7981220657276995, "no_speech_prob": 0.15590909123420715}, {"id": 227, "seek": 132692, "start": 1326.96, "end": 1333.2, "text": " balancer services so that you can access them directly over the secondary networks finally", "tokens": [50366, 3119, 28347, 3328, 370, 300, 291, 393, 2105, 552, 3838, 670, 264, 11396, 9590, 2721, 50678], "temperature": 0.0, "avg_logprob": -0.16232834635554133, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.015651952475309372}, {"id": 228, "seek": 132692, "start": 1333.2, "end": 1340.5600000000002, "text": " self-service networks this is instead of having the cluster admin provision these for you since", "tokens": [50678, 2698, 12, 39279, 9590, 341, 307, 2602, 295, 1419, 264, 13630, 24236, 17225, 613, 337, 291, 1670, 51046], "temperature": 0.0, "avg_logprob": -0.16232834635554133, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.015651952475309372}, {"id": 229, "seek": 132692, "start": 1340.5600000000002, "end": 1347.2, "text": " network overlay a simple overlay that does not touch the physical network you could directly", "tokens": [51046, 3209, 31741, 257, 2199, 31741, 300, 775, 406, 2557, 264, 4001, 3209, 291, 727, 3838, 51378], "temperature": 0.0, "avg_logprob": -0.16232834635554133, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.015651952475309372}, {"id": 230, "seek": 132692, "start": 1347.2, "end": 1354.5600000000002, "text": " use like a self-service functionality to just create the network yourself and connect and provide", "tokens": [51378, 764, 411, 257, 2698, 12, 39279, 14980, 281, 445, 1884, 264, 3209, 1803, 293, 1745, 293, 2893, 51746], "temperature": 0.0, "avg_logprob": -0.16232834635554133, "compression_ratio": 1.8300970873786409, "no_speech_prob": 0.015651952475309372}, {"id": 231, "seek": 135456, "start": 1354.6, "end": 1363.6799999999998, "text": " east-west connectivity to your workloads okay well lessons learned this was a let's say a joint", "tokens": [50366, 10648, 12, 8750, 21095, 281, 428, 32452, 1392, 731, 8820, 3264, 341, 390, 257, 718, 311, 584, 257, 7225, 50820], "temperature": 0.0, "avg_logprob": -0.21045094898768835, "compression_ratio": 1.46, "no_speech_prob": 0.0056400541216135025}, {"id": 232, "seek": 135456, "start": 1363.6799999999998, "end": 1370.12, "text": " venture like or a collaboration between both Red Hat and NVIDIA and the fun thing is we had the", "tokens": [50820, 18474, 411, 420, 257, 9363, 1296, 1293, 4477, 15867, 293, 426, 3958, 6914, 293, 264, 1019, 551, 307, 321, 632, 264, 51142], "temperature": 0.0, "avg_logprob": -0.21045094898768835, "compression_ratio": 1.46, "no_speech_prob": 0.0056400541216135025}, {"id": 233, "seek": 135456, "start": 1370.12, "end": 1378.32, "text": " exact use cases in mind like both of them focusing on Qvert but with different scope so we are a lot", "tokens": [51142, 1900, 764, 3331, 294, 1575, 411, 1293, 295, 552, 8416, 322, 1249, 3281, 457, 365, 819, 11923, 370, 321, 366, 257, 688, 51552], "temperature": 0.0, "avg_logprob": -0.21045094898768835, "compression_ratio": 1.46, "no_speech_prob": 0.0056400541216135025}, {"id": 234, "seek": 137832, "start": 1378.36, "end": 1385.8799999999999, "text": " more into the generic kind of world we want we give you a platform and you do whatever you want", "tokens": [50366, 544, 666, 264, 19577, 733, 295, 1002, 321, 528, 321, 976, 291, 257, 3663, 293, 291, 360, 2035, 291, 528, 50742], "temperature": 0.0, "avg_logprob": -0.1309521685364426, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.29662278294563293}, {"id": 235, "seek": 137832, "start": 1385.8799999999999, "end": 1391.04, "text": " with your platform and NVIDIA notes they have like their use case in mind which is I guess gaming in", "tokens": [50742, 365, 428, 3663, 293, 426, 3958, 6914, 5570, 436, 362, 411, 641, 764, 1389, 294, 1575, 597, 307, 286, 2041, 9703, 294, 51000], "temperature": 0.0, "avg_logprob": -0.1309521685364426, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.29662278294563293}, {"id": 236, "seek": 137832, "start": 1391.04, "end": 1398.8799999999999, "text": " a data center and their tooling is a lot more let's say pointed in that direction but was a really", "tokens": [51000, 257, 1412, 3056, 293, 641, 46593, 307, 257, 688, 544, 718, 311, 584, 10932, 294, 300, 3513, 457, 390, 257, 534, 51392], "temperature": 0.0, "avg_logprob": -0.1309521685364426, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.29662278294563293}, {"id": 237, "seek": 137832, "start": 1398.8799999999999, "end": 1406.1599999999999, "text": " nice collaboration and we're hoping to see more in the future on a less positive note we get the", "tokens": [51392, 1481, 9363, 293, 321, 434, 7159, 281, 536, 544, 294, 264, 2027, 322, 257, 1570, 3353, 3637, 321, 483, 264, 51756], "temperature": 0.0, "avg_logprob": -0.1309521685364426, "compression_ratio": 1.6680851063829787, "no_speech_prob": 0.29662278294563293}, {"id": 238, "seek": 140616, "start": 1406.2, "end": 1413.28, "text": " user experience of this is not amazing like it's better than originally intended because like for", "tokens": [50366, 4195, 1752, 295, 341, 307, 406, 2243, 411, 309, 311, 1101, 813, 7993, 10226, 570, 411, 337, 50720], "temperature": 0.0, "avg_logprob": -0.13155200869538064, "compression_ratio": 1.7155172413793103, "no_speech_prob": 0.1986379325389862}, {"id": 239, "seek": 140616, "start": 1413.28, "end": 1420.4, "text": " instance the thing I've showed you about the the nm state policy that was something that we came up", "tokens": [50720, 5197, 264, 551, 286, 600, 4712, 291, 466, 264, 264, 297, 76, 1785, 3897, 300, 390, 746, 300, 321, 1361, 493, 51076], "temperature": 0.0, "avg_logprob": -0.13155200869538064, "compression_ratio": 1.7155172413793103, "no_speech_prob": 0.1986379325389862}, {"id": 240, "seek": 140616, "start": 1420.4, "end": 1427.0, "text": " with because we felt like this feature is entirely unusable like people are going to be breaking their", "tokens": [51076, 365, 570, 321, 2762, 411, 341, 4111, 307, 7696, 10054, 712, 411, 561, 366, 516, 281, 312, 7697, 641, 51406], "temperature": 0.0, "avg_logprob": -0.13155200869538064, "compression_ratio": 1.7155172413793103, "no_speech_prob": 0.1986379325389862}, {"id": 241, "seek": 140616, "start": 1427.0, "end": 1432.3600000000001, "text": " default cluster network every time they use this or risk doing that so we've provided that but we", "tokens": [51406, 7576, 13630, 3209, 633, 565, 436, 764, 341, 420, 3148, 884, 300, 370, 321, 600, 5649, 300, 457, 321, 51674], "temperature": 0.0, "avg_logprob": -0.13155200869538064, "compression_ratio": 1.7155172413793103, "no_speech_prob": 0.1986379325389862}, {"id": 242, "seek": 143236, "start": 1432.3999999999999, "end": 1439.4399999999998, "text": " still have some sort of nightmarish stories every now and then because of the the way network", "tokens": [50366, 920, 362, 512, 1333, 295, 1818, 6209, 742, 3676, 633, 586, 293, 550, 570, 295, 264, 264, 636, 3209, 50718], "temperature": 0.0, "avg_logprob": -0.12034082412719727, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.04874033480882645}, {"id": 243, "seek": 143236, "start": 1439.4399999999998, "end": 1446.9199999999998, "text": " attachment definitions look like and how easy it is for you to get things wrong and how silently", "tokens": [50718, 19431, 21988, 574, 411, 293, 577, 1858, 309, 307, 337, 291, 281, 483, 721, 2085, 293, 577, 40087, 51092], "temperature": 0.0, "avg_logprob": -0.12034082412719727, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.04874033480882645}, {"id": 244, "seek": 143236, "start": 1446.9199999999998, "end": 1453.36, "text": " and how these silent errors kind of creep up it's absolutely insane like sometimes things work but", "tokens": [51092, 293, 577, 613, 12784, 13603, 733, 295, 9626, 493, 309, 311, 3122, 10838, 411, 2171, 721, 589, 457, 51414], "temperature": 0.0, "avg_logprob": -0.12034082412719727, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.04874033480882645}, {"id": 245, "seek": 143236, "start": 1453.36, "end": 1458.9199999999998, "text": " not in the way you expect because it just doesn't recognize one of the parameters because you typed", "tokens": [51414, 406, 294, 264, 636, 291, 2066, 570, 309, 445, 1177, 380, 5521, 472, 295, 264, 9834, 570, 291, 33941, 51692], "temperature": 0.0, "avg_logprob": -0.12034082412719727, "compression_ratio": 1.728888888888889, "no_speech_prob": 0.04874033480882645}, {"id": 246, "seek": 145892, "start": 1458.96, "end": 1466.28, "text": " it wrong but everything else works it's insanely hard and yeah I'm really sorry about the demo but", "tokens": [50366, 309, 2085, 457, 1203, 1646, 1985, 309, 311, 40965, 1152, 293, 1338, 286, 478, 534, 2597, 466, 264, 10723, 457, 50732], "temperature": 0.0, "avg_logprob": -0.20940526326497397, "compression_ratio": 1.4375, "no_speech_prob": 0.09223468601703644}, {"id": 247, "seek": 145892, "start": 1466.28, "end": 1475.68, "text": " yeah thank you for listening and if you have any questions in one minute one question", "tokens": [50732, 1338, 1309, 291, 337, 4764, 293, 498, 291, 362, 604, 1651, 294, 472, 3456, 472, 1168, 51202], "temperature": 0.0, "avg_logprob": -0.20940526326497397, "compression_ratio": 1.4375, "no_speech_prob": 0.09223468601703644}, {"id": 248, "seek": 147568, "start": 1475.8400000000001, "end": 1499.88, "text": " it's the same thing yeah so the question yeah so the question is basically there's another cni so", "tokens": [50372, 309, 311, 264, 912, 551, 1338, 370, 264, 1168, 1338, 370, 264, 1168, 307, 1936, 456, 311, 1071, 269, 3722, 370, 51574], "temperature": 0.0, "avg_logprob": -0.38046009063720704, "compression_ratio": 1.3472222222222223, "no_speech_prob": 0.08110526204109192}, {"id": 249, "seek": 149988, "start": 1499.92, "end": 1505.88, "text": " we're doing this in oven Kubernetes and there's another cni cni called cube oven so it's kind of it", "tokens": [50366, 321, 434, 884, 341, 294, 9090, 23145, 293, 456, 311, 1071, 269, 3722, 269, 3722, 1219, 13728, 9090, 370, 309, 311, 733, 295, 309, 50664], "temperature": 0.0, "avg_logprob": -0.12974916759290192, "compression_ratio": 1.8761904761904762, "no_speech_prob": 0.09791409224271774}, {"id": 250, "seek": 149988, "start": 1505.88, "end": 1512.1200000000001, "text": " really screams that it does the same thing and yeah it really does the same thing the use cases are", "tokens": [50664, 534, 22832, 300, 309, 775, 264, 912, 551, 293, 1338, 309, 534, 775, 264, 912, 551, 264, 764, 3331, 366, 50976], "temperature": 0.0, "avg_logprob": -0.12974916759290192, "compression_ratio": 1.8761904761904762, "no_speech_prob": 0.09791409224271774}, {"id": 251, "seek": 149988, "start": 1512.1200000000001, "end": 1518.3200000000002, "text": " mostly the same the thing is that they do a lot more than we do like quite honestly like their", "tokens": [50976, 5240, 264, 912, 264, 551, 307, 300, 436, 360, 257, 688, 544, 813, 321, 360, 411, 1596, 6095, 411, 641, 51286], "temperature": 0.0, "avg_logprob": -0.12974916759290192, "compression_ratio": 1.8761904761904762, "no_speech_prob": 0.09791409224271774}, {"id": 252, "seek": 149988, "start": 1518.3200000000002, "end": 1526.2, "text": " feature set is a lot more complete than ours and we're trying to get there like if your question is", "tokens": [51286, 4111, 992, 307, 257, 688, 544, 3566, 813, 11896, 293, 321, 434, 1382, 281, 483, 456, 411, 498, 428, 1168, 307, 51680], "temperature": 0.0, "avg_logprob": -0.12974916759290192, "compression_ratio": 1.8761904761904762, "no_speech_prob": 0.09791409224271774}, {"id": 253, "seek": 152620, "start": 1526.32, "end": 1533.64, "text": " like why didn't you just use that well we do not have any let's say current stake in that cni we do", "tokens": [50370, 411, 983, 994, 380, 291, 445, 764, 300, 731, 321, 360, 406, 362, 604, 718, 311, 584, 2190, 10407, 294, 300, 269, 3722, 321, 360, 50736], "temperature": 0.0, "avg_logprob": -0.10553475379943848, "compression_ratio": 1.7945205479452055, "no_speech_prob": 0.14389672875404358}, {"id": 254, "seek": 152620, "start": 1533.64, "end": 1540.68, "text": " not have maintainers there we do not like we would have to try to gain entry there and in some cases", "tokens": [50736, 406, 362, 6909, 433, 456, 321, 360, 406, 411, 321, 576, 362, 281, 853, 281, 6052, 8729, 456, 293, 294, 512, 3331, 51088], "temperature": 0.0, "avg_logprob": -0.10553475379943848, "compression_ratio": 1.7945205479452055, "no_speech_prob": 0.14389672875404358}, {"id": 255, "seek": 152620, "start": 1540.68, "end": 1545.72, "text": " we do not like their API so we're trying to do things in another way it might seem like we're", "tokens": [51088, 321, 360, 406, 411, 641, 9362, 370, 321, 434, 1382, 281, 360, 721, 294, 1071, 636, 309, 1062, 1643, 411, 321, 434, 51340], "temperature": 0.0, "avg_logprob": -0.10553475379943848, "compression_ratio": 1.7945205479452055, "no_speech_prob": 0.14389672875404358}, {"id": 256, "seek": 152620, "start": 1545.72, "end": 1550.92, "text": " reinventing the wheel sometimes but yeah kind of we kind of are like we both do the same thing and", "tokens": [51340, 33477, 278, 264, 5589, 2171, 457, 1338, 733, 295, 321, 733, 295, 366, 411, 321, 1293, 360, 264, 912, 551, 293, 51600], "temperature": 0.0, "avg_logprob": -0.10553475379943848, "compression_ratio": 1.7945205479452055, "no_speech_prob": 0.14389672875404358}, {"id": 257, "seek": 155092, "start": 1551.16, "end": 1556.8400000000001, "text": " their feature set is more complete but again we're trying to do more and reach their feature set", "tokens": [50376, 641, 4111, 992, 307, 544, 3566, 457, 797, 321, 434, 1382, 281, 360, 544, 293, 2524, 641, 4111, 992, 50660], "temperature": 0.0, "avg_logprob": -0.2013210748371325, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.016622982919216156}, {"id": 258, "seek": 155092, "start": 1558.6000000000001, "end": 1563.16, "text": " thank you for the question and I think it's that's it well", "tokens": [50748, 1309, 291, 337, 264, 1168, 293, 286, 519, 309, 311, 300, 311, 309, 731, 50976], "temperature": 0.0, "avg_logprob": -0.2013210748371325, "compression_ratio": 1.4090909090909092, "no_speech_prob": 0.016622982919216156}], "language": "en"}