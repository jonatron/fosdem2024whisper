{"text": " So, welcome for the second time. Thanks for staying this long with me last talk today, named Google Home, but better. Starting really good. Just a second. So, even though it's a short talk, just really quick, a little agenda for today, what you can expect. A bulk section, really brief about me, why am I talking about this, why should you listen to me talking about Flutter. The hardware used in this project, of course, that's one of the interesting parts, but no really big surprises there. It's just what you would all expect. Then we get to the software part one, the embedded Flutter part, and part two, the implementation. And I think this is for most of you, this will be the most interesting parts of this talk. So, first about me. Hi there, I'm Moritz. Yeah, a few years ago, when I was 15, 16, I started out with embedded development. Back then it was all hobbies. I started out with an 8051 Derivate. I think it was an Infinion XC878. I started developing in C. Back then I wanted to mainly build everything around music, high-fee, loudspeakers, equalizers, digital sound processors, and so on. Following through college, I worked as a why we created Snap Embedded. That's what we're doing there. Also, co-organizing the Flutter Munich meetup. So if you ever want to come over or speak in Munich about Flutter, just feel free to hit me up. So, I left Embedded. Now I'm back at Embedded. Why? And this is maybe really short clip showcasing why I'm back at Embedded user interfaces, because this is still stuff we get today in new projects. And it's still sometimes you get a new coffee machine state of the art with a touchscreen and you use the touchscreen and you're like, oh no, God, why did you build this? So, yeah, I don't want to build any more of those things. I run, I want to build the UI like of the one today's talk is about. I think this, I hope this looks a little better than the things you saw before. That's the user interface of the Google Home replica we built or I built that I normally wanted to present here, but sadly there was, it would have been hard to set it up in five minutes, get it here on the table, so we'll rather stick with the presentation. Also, it would have been unfair for all the people online. But nevertheless, I have picture of everything. We're going through that now. So, the hardware. Yeah, as I said, not much more as you would imagine, Raspberry Pi 4. It's still model 4B, 4GB of RAM, that's enough. 2GB of RAM with a desktop environment and Flutter, yeah, wouldn't recommend that on a Raspberry Pi. Of course, the Raspberry Pi 5 would work. It would just be more expensive and it would run just as good. A little thing we have in here, what deals with the but better part with the Google Home or Smart Home devices in general, we can't add whatever we want hardware and as we will not be adding a voice command service on this device, I thought about what would be cooler. Voice commands would are already out there and what do we need to see? What is the most interesting thing and that's for a lot of people, I guess, interacting with custom hardware. Therefore, we integrated an air sensor there, the Pimoroni SCD41 measures CO2 temperature and humidity, connects to the Raspberry Pi with I2C and it comes that is also very handy with a ready Python library that's known to be working with the Raspberry Pi. The touchscreen is just some WaveShare 11 inch IPS panel, capacitive touch, USB, HDMI, really nothing too special. Those touch screens just got really good in the last years using them. Yeah, at least with the Raspberry Pi OS or so, just works out of the box, it's fine, nothing to worry anymore about. Then for the last part, yeah, with Smart Home, what most people think about is turning light bulbs, plugs on and off and for Smart Home projects or whenever you want to do projects on your own, devices that come in really, really handy are those Shelly bulbs and Shelly plugs because they just come in with a built-in web server and you just have a REST API, connect them through your Wi-Fi, they come with an app, super easy and yeah, you have a REST API where you just can interact and it on, off, change the colors, it couldn't get much easier. So, all together without a whole bunch of cables, that then looks like this. So, now that we have the hardware part together, now comes the interesting, the next part, the embedded flutter part and as the talk earlier already pointed out, there's not just flutter to run on embedded devices. If you Google it, if you want to start out with it, you will find a few repositories all dealing with flutter and embedded devices. We just saw one, in fact in the last talk, it was using flutter Pi, so what's with that? Why are there different options? Is this not flutter or well, it is flutter, but to understand this, we may have to, yeah, next slide, we may have to look at the Linux embedded that flutter uses. The main difference, those custom embedders have, the custom embedder connects or the embedders connect the flutter engine with the targeted platform and the main difference we have with those custom embedders, which I have, let's see if this works, here on the right side, fancy, I wasn't prepared for that. So, the main thing you can see is here, something's missing. Flutter for Linux just heavily depends on GTK and GTK, in fact GTK 2, which is getting a pain right now for flutter itself. So, what most of those, or what all of those libraries have in common, we don't really need those GTK parts that flutter uses anyway in embedded hardware. We don't have tabs, we normally don't have windows, we don't need all of that stuff, so they just get rid of it, and which sadly isn't that easy in the Linux, in the, let's call it vanilla, flutter, embedded, but they get rid of it, so you can use flutter on custom hardware without GTK and GTK, and that means you can use flutter, for example, with Wayland, with a custom embedder, as the talk before already pointed out, which is not possible right now with the, let's call it flutter on embedded projects, especially if you want to go in a really industrial style, but we're getting there. Also, a big part that's missing right now is tutorials on how tools are still, there's not so many out there, just Google it, it's, yeah, there's not much out there, but I'm sure we will get through this within this year, or at least maybe the next year, and then flutter will also definitely become available to startups, to smaller, medium-sized companies, there will be tools, software as a services around that, and flutter will get more mature, I think we don't know it, but I guess that flutter will get more mature in the embedded world in the next one to two years. But, so if we want to do a project right now, where we just want to try out how flutter on embedded devices works, at least for this project, when we use a Raspberry Pi, we have Raspberry Pi OS, we can just use flutter as it is, we can build for Linux there, it will work just fine. The newest Raspberry Pi OS changed to, I think it changed to using Wayland, I haven't tried it yet, but apparently it works alright. Flutter needs to do something about GTK2 anyway, so maybe it will be possible with the just normal flutter to build something suitable for Wayland and direct rendering as well in the future. For right now, if you're doing a hobby project, if you just want to try something out with a Raspberry Pi, just go with flutter as it is, it's fine. If you want to go with, if you want to use direct rendering, if you want to go with Wayland, if you want to get something into production grade, then you have to look at flutter Pi, Toyota's, IVI Home Screen, or the one from Sony, whereas the Toyota thing really is amazing and is moving forward at a really fast pace. So enough to this generic talk about flutter, what about the implementation for this project right now? I want to go through it in a few steps and yeah, the first part or the first part that we need to integrate for this project to work is connect to Raspberry Pi to the touchscreen. What do we do for that? We use the Raspberry Pi Installer, Installer Raspberry Pi OS, it just works out of the box. Thanks to a lot of guys that are also here. That's really, really easy. Then we need to get flutter running. For that, we wrote a tool, I just said it with Snap Embedded, we're doing open source projects around that. We basically built a tool in the end, there's a repo with the link called Snap CLI which allows you to, from your host machine, set up a Raspberry Pi that's connected in the same network as you are. It'll connect over SSH, it will install flutter, all the stuff you need, and it will set it up as a custom debug device so that you can just run the code and debug out of VS code on Linux, Mac, Windows, and the code will compile and everything will run in real time with hot reload working with the Dart tools on your Raspberry Pi. If you want to just develop on Raspberry Pi, that's already really easy and straightforward. Even the Dart DevTools work, all of that is already there. Just, yeah, no cross compilation, we don't want to get in that direction yet. The next part is, yeah, it's rather uninteresting. Here you can see a little bit of Dart, that code won't run, I cut out everything that looked ugly. So that's just basically a get request. You connect the bulb and the plugs with your flutter or Dart application, run this function to get the bulb status, set the bulb status, or to set the bulb color. The more interesting part, I guess, and what I wanted to point out, which will also explain how you would integrate a voice assistant to with a flutter application on the Raspberry Pi, is how do we connect this sensor that's connected to the I2C bus with our flutter application. We would have a different approach, or we do have different approaches that we could use here. We could do a Dart implementation of everything directly to the I2C bus. We could go through the data sheets of the sensor, implement everything by ourselves, all the commands do it all by ourselves. We could run up an MQTT prokure on the Raspberry Pi. We could then connect the sensor to this on the prokure, subscribe the flutter application on the MQTT prokure, because MQTT is one of those plugins that work with most of the custom embedders, so that really works out of the box. So that would be possible to take. We could, of course, here, I use Python, but we could use a Python backend, just make another REST API on this device and talk to it locally, I think, in a lot of embedded projects. It's done that way. Or we use Dboss. We have the Dboss running on Raspberry Pi OS. We have the Dboss running on most Linux systems, and we can just clip on the session bus for this purpose. The plugins are also already there. And for this example, this is what we did, because connecting Flutter application with whatever else process is running on the machine, you can just use Dboss. We can just use the Python example library that was already shipped with the sensor, of course. I mean, we don't want to do work twice. So we can connect whatever we want right now with packages plugins that are already available. Resources, thank you very much. Two minutes.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.88, "text": " So, welcome for the second time. Thanks for staying this long with me last talk today,", "tokens": [50364, 407, 11, 2928, 337, 264, 1150, 565, 13, 2561, 337, 7939, 341, 938, 365, 385, 1036, 751, 965, 11, 51058], "temperature": 0.0, "avg_logprob": -0.31476037398628565, "compression_ratio": 1.2773722627737227, "no_speech_prob": 0.245030015707016}, {"id": 1, "seek": 0, "start": 13.88, "end": 22.240000000000002, "text": " named Google Home, but better. Starting really good. Just a second. So, even though it's", "tokens": [51058, 4926, 3329, 8719, 11, 457, 1101, 13, 16217, 534, 665, 13, 1449, 257, 1150, 13, 407, 11, 754, 1673, 309, 311, 51476], "temperature": 0.0, "avg_logprob": -0.31476037398628565, "compression_ratio": 1.2773722627737227, "no_speech_prob": 0.245030015707016}, {"id": 2, "seek": 2224, "start": 22.24, "end": 30.519999999999996, "text": " a short talk, just really quick, a little agenda for today, what you can expect. A", "tokens": [50364, 257, 2099, 751, 11, 445, 534, 1702, 11, 257, 707, 9829, 337, 965, 11, 437, 291, 393, 2066, 13, 316, 50778], "temperature": 0.0, "avg_logprob": -0.227218649853235, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.4816133975982666}, {"id": 3, "seek": 2224, "start": 30.519999999999996, "end": 35.839999999999996, "text": " bulk section, really brief about me, why am I talking about this, why should you listen", "tokens": [50778, 16139, 3541, 11, 534, 5353, 466, 385, 11, 983, 669, 286, 1417, 466, 341, 11, 983, 820, 291, 2140, 51044], "temperature": 0.0, "avg_logprob": -0.227218649853235, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.4816133975982666}, {"id": 4, "seek": 2224, "start": 35.839999999999996, "end": 43.480000000000004, "text": " to me talking about Flutter. The hardware used in this project, of course, that's one", "tokens": [51044, 281, 385, 1417, 466, 3235, 9947, 13, 440, 8837, 1143, 294, 341, 1716, 11, 295, 1164, 11, 300, 311, 472, 51426], "temperature": 0.0, "avg_logprob": -0.227218649853235, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.4816133975982666}, {"id": 5, "seek": 2224, "start": 43.480000000000004, "end": 48.4, "text": " of the interesting parts, but no really big surprises there. It's just what you would", "tokens": [51426, 295, 264, 1880, 3166, 11, 457, 572, 534, 955, 22655, 456, 13, 467, 311, 445, 437, 291, 576, 51672], "temperature": 0.0, "avg_logprob": -0.227218649853235, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.4816133975982666}, {"id": 6, "seek": 4840, "start": 48.4, "end": 56.08, "text": " all expect. Then we get to the software part one, the embedded Flutter part, and part two,", "tokens": [50364, 439, 2066, 13, 1396, 321, 483, 281, 264, 4722, 644, 472, 11, 264, 16741, 3235, 9947, 644, 11, 293, 644, 732, 11, 50748], "temperature": 0.0, "avg_logprob": -0.20518853505452475, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.02703287824988365}, {"id": 7, "seek": 4840, "start": 56.08, "end": 62.0, "text": " the implementation. And I think this is for most of you, this will be the most interesting", "tokens": [50748, 264, 11420, 13, 400, 286, 519, 341, 307, 337, 881, 295, 291, 11, 341, 486, 312, 264, 881, 1880, 51044], "temperature": 0.0, "avg_logprob": -0.20518853505452475, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.02703287824988365}, {"id": 8, "seek": 4840, "start": 62.0, "end": 73.56, "text": " parts of this talk. So, first about me. Hi there, I'm Moritz. Yeah, a few years ago,", "tokens": [51044, 3166, 295, 341, 751, 13, 407, 11, 700, 466, 385, 13, 2421, 456, 11, 286, 478, 5146, 6862, 13, 865, 11, 257, 1326, 924, 2057, 11, 51622], "temperature": 0.0, "avg_logprob": -0.20518853505452475, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.02703287824988365}, {"id": 9, "seek": 7356, "start": 73.56, "end": 79.8, "text": " when I was 15, 16, I started out with embedded development. Back then it was all hobbies.", "tokens": [50364, 562, 286, 390, 2119, 11, 3165, 11, 286, 1409, 484, 365, 16741, 3250, 13, 5833, 550, 309, 390, 439, 35750, 13, 50676], "temperature": 0.0, "avg_logprob": -0.25829053392597273, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.03709308058023453}, {"id": 10, "seek": 7356, "start": 79.8, "end": 88.92, "text": " I started out with an 8051 Derivate. I think it was an Infinion XC878. I started developing", "tokens": [50676, 286, 1409, 484, 365, 364, 4688, 18682, 5618, 592, 473, 13, 286, 519, 309, 390, 364, 22145, 313, 1783, 34, 23853, 23, 13, 286, 1409, 6416, 51132], "temperature": 0.0, "avg_logprob": -0.25829053392597273, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.03709308058023453}, {"id": 11, "seek": 7356, "start": 88.92, "end": 96.68, "text": " in C. Back then I wanted to mainly build everything around music, high-fee, loudspeakers, equalizers,", "tokens": [51132, 294, 383, 13, 5833, 550, 286, 1415, 281, 8704, 1322, 1203, 926, 1318, 11, 1090, 12, 69, 1653, 11, 6588, 7053, 19552, 11, 2681, 22525, 11, 51520], "temperature": 0.0, "avg_logprob": -0.25829053392597273, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.03709308058023453}, {"id": 12, "seek": 7356, "start": 96.68, "end": 102.80000000000001, "text": " digital sound processors, and so on. Following through college, I worked as a why we created", "tokens": [51520, 4562, 1626, 27751, 11, 293, 370, 322, 13, 19192, 807, 3859, 11, 286, 2732, 382, 257, 983, 321, 2942, 51826], "temperature": 0.0, "avg_logprob": -0.25829053392597273, "compression_ratio": 1.5666666666666667, "no_speech_prob": 0.03709308058023453}, {"id": 13, "seek": 10280, "start": 102.8, "end": 108.08, "text": " Snap Embedded. That's what we're doing there. Also, co-organizing the Flutter Munich meetup.", "tokens": [50364, 18254, 24234, 292, 9207, 13, 663, 311, 437, 321, 434, 884, 456, 13, 2743, 11, 598, 12, 12372, 3319, 264, 3235, 9947, 40601, 1677, 1010, 13, 50628], "temperature": 0.0, "avg_logprob": -0.19268331160912147, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.054688382893800735}, {"id": 14, "seek": 10280, "start": 108.08, "end": 113.52, "text": " So if you ever want to come over or speak in Munich about Flutter, just feel free to", "tokens": [50628, 407, 498, 291, 1562, 528, 281, 808, 670, 420, 1710, 294, 40601, 466, 3235, 9947, 11, 445, 841, 1737, 281, 50900], "temperature": 0.0, "avg_logprob": -0.19268331160912147, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.054688382893800735}, {"id": 15, "seek": 10280, "start": 113.52, "end": 124.47999999999999, "text": " hit me up. So, I left Embedded. Now I'm back at Embedded. Why? And this is maybe really", "tokens": [50900, 2045, 385, 493, 13, 407, 11, 286, 1411, 24234, 292, 9207, 13, 823, 286, 478, 646, 412, 24234, 292, 9207, 13, 1545, 30, 400, 341, 307, 1310, 534, 51448], "temperature": 0.0, "avg_logprob": -0.19268331160912147, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.054688382893800735}, {"id": 16, "seek": 10280, "start": 124.47999999999999, "end": 131.36, "text": " short clip showcasing why I'm back at Embedded user interfaces, because this is still stuff", "tokens": [51448, 2099, 7353, 29794, 3349, 983, 286, 478, 646, 412, 24234, 292, 9207, 4195, 28416, 11, 570, 341, 307, 920, 1507, 51792], "temperature": 0.0, "avg_logprob": -0.19268331160912147, "compression_ratio": 1.579646017699115, "no_speech_prob": 0.054688382893800735}, {"id": 17, "seek": 13136, "start": 131.44000000000003, "end": 137.76000000000002, "text": " we get today in new projects. And it's still sometimes you get a new coffee machine state", "tokens": [50368, 321, 483, 965, 294, 777, 4455, 13, 400, 309, 311, 920, 2171, 291, 483, 257, 777, 4982, 3479, 1785, 50684], "temperature": 0.0, "avg_logprob": -0.2132796470565025, "compression_ratio": 1.662037037037037, "no_speech_prob": 0.048509031534194946}, {"id": 18, "seek": 13136, "start": 137.76000000000002, "end": 142.16000000000003, "text": " of the art with a touchscreen and you use the touchscreen and you're like, oh no, God,", "tokens": [50684, 295, 264, 1523, 365, 257, 46775, 293, 291, 764, 264, 46775, 293, 291, 434, 411, 11, 1954, 572, 11, 1265, 11, 50904], "temperature": 0.0, "avg_logprob": -0.2132796470565025, "compression_ratio": 1.662037037037037, "no_speech_prob": 0.048509031534194946}, {"id": 19, "seek": 13136, "start": 142.16000000000003, "end": 148.96, "text": " why did you build this? So, yeah, I don't want to build any more of those things. I run, I", "tokens": [50904, 983, 630, 291, 1322, 341, 30, 407, 11, 1338, 11, 286, 500, 380, 528, 281, 1322, 604, 544, 295, 729, 721, 13, 286, 1190, 11, 286, 51244], "temperature": 0.0, "avg_logprob": -0.2132796470565025, "compression_ratio": 1.662037037037037, "no_speech_prob": 0.048509031534194946}, {"id": 20, "seek": 13136, "start": 148.96, "end": 156.64000000000001, "text": " want to build the UI like of the one today's talk is about. I think this, I hope this looks", "tokens": [51244, 528, 281, 1322, 264, 15682, 411, 295, 264, 472, 965, 311, 751, 307, 466, 13, 286, 519, 341, 11, 286, 1454, 341, 1542, 51628], "temperature": 0.0, "avg_logprob": -0.2132796470565025, "compression_ratio": 1.662037037037037, "no_speech_prob": 0.048509031534194946}, {"id": 21, "seek": 15664, "start": 156.64, "end": 163.2, "text": " a little better than the things you saw before. That's the user interface of the Google Home", "tokens": [50364, 257, 707, 1101, 813, 264, 721, 291, 1866, 949, 13, 663, 311, 264, 4195, 9226, 295, 264, 3329, 8719, 50692], "temperature": 0.0, "avg_logprob": -0.14997295097068505, "compression_ratio": 1.6844106463878328, "no_speech_prob": 0.031053828075528145}, {"id": 22, "seek": 15664, "start": 163.2, "end": 169.67999999999998, "text": " replica we built or I built that I normally wanted to present here, but sadly there was,", "tokens": [50692, 35456, 321, 3094, 420, 286, 3094, 300, 286, 5646, 1415, 281, 1974, 510, 11, 457, 22023, 456, 390, 11, 51016], "temperature": 0.0, "avg_logprob": -0.14997295097068505, "compression_ratio": 1.6844106463878328, "no_speech_prob": 0.031053828075528145}, {"id": 23, "seek": 15664, "start": 169.67999999999998, "end": 175.27999999999997, "text": " it would have been hard to set it up in five minutes, get it here on the table, so we'll", "tokens": [51016, 309, 576, 362, 668, 1152, 281, 992, 309, 493, 294, 1732, 2077, 11, 483, 309, 510, 322, 264, 3199, 11, 370, 321, 603, 51296], "temperature": 0.0, "avg_logprob": -0.14997295097068505, "compression_ratio": 1.6844106463878328, "no_speech_prob": 0.031053828075528145}, {"id": 24, "seek": 15664, "start": 175.27999999999997, "end": 179.2, "text": " rather stick with the presentation. Also, it would have been unfair for all the people online.", "tokens": [51296, 2831, 2897, 365, 264, 5860, 13, 2743, 11, 309, 576, 362, 668, 17019, 337, 439, 264, 561, 2950, 13, 51492], "temperature": 0.0, "avg_logprob": -0.14997295097068505, "compression_ratio": 1.6844106463878328, "no_speech_prob": 0.031053828075528145}, {"id": 25, "seek": 15664, "start": 180.48, "end": 183.83999999999997, "text": " But nevertheless, I have picture of everything. We're going through that now.", "tokens": [51556, 583, 26924, 11, 286, 362, 3036, 295, 1203, 13, 492, 434, 516, 807, 300, 586, 13, 51724], "temperature": 0.0, "avg_logprob": -0.14997295097068505, "compression_ratio": 1.6844106463878328, "no_speech_prob": 0.031053828075528145}, {"id": 26, "seek": 18384, "start": 184.72, "end": 190.56, "text": " So, the hardware. Yeah, as I said, not much more as you would imagine,", "tokens": [50408, 407, 11, 264, 8837, 13, 865, 11, 382, 286, 848, 11, 406, 709, 544, 382, 291, 576, 3811, 11, 50700], "temperature": 0.0, "avg_logprob": -0.18934245904286703, "compression_ratio": 1.527027027027027, "no_speech_prob": 0.0009692168678157032}, {"id": 27, "seek": 18384, "start": 191.76, "end": 198.8, "text": " Raspberry Pi 4. It's still model 4B, 4GB of RAM, that's enough. 2GB of RAM with a desktop", "tokens": [50760, 41154, 17741, 1017, 13, 467, 311, 920, 2316, 1017, 33, 11, 1017, 8769, 295, 14561, 11, 300, 311, 1547, 13, 568, 8769, 295, 14561, 365, 257, 14502, 51112], "temperature": 0.0, "avg_logprob": -0.18934245904286703, "compression_ratio": 1.527027027027027, "no_speech_prob": 0.0009692168678157032}, {"id": 28, "seek": 18384, "start": 198.8, "end": 204.08, "text": " environment and Flutter, yeah, wouldn't recommend that on a Raspberry Pi. Of course, the Raspberry", "tokens": [51112, 2823, 293, 3235, 9947, 11, 1338, 11, 2759, 380, 2748, 300, 322, 257, 41154, 17741, 13, 2720, 1164, 11, 264, 41154, 51376], "temperature": 0.0, "avg_logprob": -0.18934245904286703, "compression_ratio": 1.527027027027027, "no_speech_prob": 0.0009692168678157032}, {"id": 29, "seek": 18384, "start": 204.08, "end": 209.44, "text": " Pi 5 would work. It would just be more expensive and it would run just as good.", "tokens": [51376, 17741, 1025, 576, 589, 13, 467, 576, 445, 312, 544, 5124, 293, 309, 576, 1190, 445, 382, 665, 13, 51644], "temperature": 0.0, "avg_logprob": -0.18934245904286703, "compression_ratio": 1.527027027027027, "no_speech_prob": 0.0009692168678157032}, {"id": 30, "seek": 20944, "start": 210.0, "end": 217.68, "text": " A little thing we have in here, what deals with the but better part with the Google Home or", "tokens": [50392, 316, 707, 551, 321, 362, 294, 510, 11, 437, 11215, 365, 264, 457, 1101, 644, 365, 264, 3329, 8719, 420, 50776], "temperature": 0.0, "avg_logprob": -0.18737925840227793, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0035835138987749815}, {"id": 31, "seek": 20944, "start": 217.68, "end": 224.16, "text": " Smart Home devices in general, we can't add whatever we want hardware and as we will not be", "tokens": [50776, 12923, 8719, 5759, 294, 2674, 11, 321, 393, 380, 909, 2035, 321, 528, 8837, 293, 382, 321, 486, 406, 312, 51100], "temperature": 0.0, "avg_logprob": -0.18737925840227793, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0035835138987749815}, {"id": 32, "seek": 20944, "start": 224.16, "end": 231.84, "text": " adding a voice command service on this device, I thought about what would be cooler. Voice commands", "tokens": [51100, 5127, 257, 3177, 5622, 2643, 322, 341, 4302, 11, 286, 1194, 466, 437, 576, 312, 15566, 13, 15229, 16901, 51484], "temperature": 0.0, "avg_logprob": -0.18737925840227793, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0035835138987749815}, {"id": 33, "seek": 20944, "start": 231.84, "end": 237.76, "text": " would are already out there and what do we need to see? What is the most interesting thing and", "tokens": [51484, 576, 366, 1217, 484, 456, 293, 437, 360, 321, 643, 281, 536, 30, 708, 307, 264, 881, 1880, 551, 293, 51780], "temperature": 0.0, "avg_logprob": -0.18737925840227793, "compression_ratio": 1.6578947368421053, "no_speech_prob": 0.0035835138987749815}, {"id": 34, "seek": 23776, "start": 237.76, "end": 244.64, "text": " that's for a lot of people, I guess, interacting with custom hardware. Therefore, we integrated an", "tokens": [50364, 300, 311, 337, 257, 688, 295, 561, 11, 286, 2041, 11, 18017, 365, 2375, 8837, 13, 7504, 11, 321, 10919, 364, 50708], "temperature": 0.0, "avg_logprob": -0.15131648381551108, "compression_ratio": 1.4129353233830846, "no_speech_prob": 0.0011310066329315305}, {"id": 35, "seek": 23776, "start": 244.64, "end": 253.12, "text": " air sensor there, the Pimoroni SCD41 measures CO2 temperature and humidity, connects to the", "tokens": [50708, 1988, 10200, 456, 11, 264, 430, 332, 284, 17049, 9028, 35, 17344, 8000, 3002, 17, 4292, 293, 24751, 11, 16967, 281, 264, 51132], "temperature": 0.0, "avg_logprob": -0.15131648381551108, "compression_ratio": 1.4129353233830846, "no_speech_prob": 0.0011310066329315305}, {"id": 36, "seek": 23776, "start": 253.12, "end": 261.44, "text": " Raspberry Pi with I2C and it comes that is also very handy with a ready Python library that's", "tokens": [51132, 41154, 17741, 365, 286, 17, 34, 293, 309, 1487, 300, 307, 611, 588, 13239, 365, 257, 1919, 15329, 6405, 300, 311, 51548], "temperature": 0.0, "avg_logprob": -0.15131648381551108, "compression_ratio": 1.4129353233830846, "no_speech_prob": 0.0011310066329315305}, {"id": 37, "seek": 26144, "start": 261.52, "end": 269.2, "text": " known to be working with the Raspberry Pi. The touchscreen is just some WaveShare 11 inch IPS", "tokens": [50368, 2570, 281, 312, 1364, 365, 264, 41154, 17741, 13, 440, 46775, 307, 445, 512, 28530, 7774, 543, 2975, 7227, 50021, 50752], "temperature": 0.0, "avg_logprob": -0.19347584084288716, "compression_ratio": 1.5025641025641026, "no_speech_prob": 0.02880978211760521}, {"id": 38, "seek": 26144, "start": 269.2, "end": 275.2, "text": " panel, capacitive touch, USB, HDMI, really nothing too special. Those touch screens just got really", "tokens": [50752, 4831, 11, 4637, 2187, 2557, 11, 10109, 11, 30811, 11, 534, 1825, 886, 2121, 13, 3950, 2557, 11171, 445, 658, 534, 51052], "temperature": 0.0, "avg_logprob": -0.19347584084288716, "compression_ratio": 1.5025641025641026, "no_speech_prob": 0.02880978211760521}, {"id": 39, "seek": 26144, "start": 275.2, "end": 282.32, "text": " good in the last years using them. Yeah, at least with the Raspberry Pi OS or so, just works out of", "tokens": [51052, 665, 294, 264, 1036, 924, 1228, 552, 13, 865, 11, 412, 1935, 365, 264, 41154, 17741, 12731, 420, 370, 11, 445, 1985, 484, 295, 51408], "temperature": 0.0, "avg_logprob": -0.19347584084288716, "compression_ratio": 1.5025641025641026, "no_speech_prob": 0.02880978211760521}, {"id": 40, "seek": 28232, "start": 282.32, "end": 291.68, "text": " the box, it's fine, nothing to worry anymore about. Then for the last part, yeah, with Smart Home,", "tokens": [50364, 264, 2424, 11, 309, 311, 2489, 11, 1825, 281, 3292, 3602, 466, 13, 1396, 337, 264, 1036, 644, 11, 1338, 11, 365, 12923, 8719, 11, 50832], "temperature": 0.0, "avg_logprob": -0.125005387768303, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.09382185339927673}, {"id": 41, "seek": 28232, "start": 291.68, "end": 297.92, "text": " what most people think about is turning light bulbs, plugs on and off and for Smart Home projects or", "tokens": [50832, 437, 881, 561, 519, 466, 307, 6246, 1442, 32871, 11, 33899, 322, 293, 766, 293, 337, 12923, 8719, 4455, 420, 51144], "temperature": 0.0, "avg_logprob": -0.125005387768303, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.09382185339927673}, {"id": 42, "seek": 28232, "start": 297.92, "end": 303.52, "text": " whenever you want to do projects on your own, devices that come in really, really handy are those", "tokens": [51144, 5699, 291, 528, 281, 360, 4455, 322, 428, 1065, 11, 5759, 300, 808, 294, 534, 11, 534, 13239, 366, 729, 51424], "temperature": 0.0, "avg_logprob": -0.125005387768303, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.09382185339927673}, {"id": 43, "seek": 28232, "start": 303.52, "end": 310.0, "text": " Shelly bulbs and Shelly plugs because they just come in with a built-in web server and you just", "tokens": [51424, 1240, 13020, 32871, 293, 1240, 13020, 33899, 570, 436, 445, 808, 294, 365, 257, 3094, 12, 259, 3670, 7154, 293, 291, 445, 51748], "temperature": 0.0, "avg_logprob": -0.125005387768303, "compression_ratio": 1.6794871794871795, "no_speech_prob": 0.09382185339927673}, {"id": 44, "seek": 31000, "start": 310.0, "end": 315.6, "text": " have a REST API, connect them through your Wi-Fi, they come with an app, super easy and yeah, you", "tokens": [50364, 362, 257, 497, 14497, 9362, 11, 1745, 552, 807, 428, 14035, 12, 13229, 11, 436, 808, 365, 364, 724, 11, 1687, 1858, 293, 1338, 11, 291, 50644], "temperature": 0.0, "avg_logprob": -0.13923754141880915, "compression_ratio": 1.6016260162601625, "no_speech_prob": 0.011313363909721375}, {"id": 45, "seek": 31000, "start": 315.6, "end": 321.92, "text": " have a REST API where you just can interact and it on, off, change the colors, it couldn't get much", "tokens": [50644, 362, 257, 497, 14497, 9362, 689, 291, 445, 393, 4648, 293, 309, 322, 11, 766, 11, 1319, 264, 4577, 11, 309, 2809, 380, 483, 709, 50960], "temperature": 0.0, "avg_logprob": -0.13923754141880915, "compression_ratio": 1.6016260162601625, "no_speech_prob": 0.011313363909721375}, {"id": 46, "seek": 31000, "start": 321.92, "end": 331.28, "text": " easier. So, all together without a whole bunch of cables, that then looks like this. So, now that we", "tokens": [50960, 3571, 13, 407, 11, 439, 1214, 1553, 257, 1379, 3840, 295, 17555, 11, 300, 550, 1542, 411, 341, 13, 407, 11, 586, 300, 321, 51428], "temperature": 0.0, "avg_logprob": -0.13923754141880915, "compression_ratio": 1.6016260162601625, "no_speech_prob": 0.011313363909721375}, {"id": 47, "seek": 31000, "start": 331.28, "end": 336.96, "text": " have the hardware part together, now comes the interesting, the next part, the embedded flutter", "tokens": [51428, 362, 264, 8837, 644, 1214, 11, 586, 1487, 264, 1880, 11, 264, 958, 644, 11, 264, 16741, 932, 9947, 51712], "temperature": 0.0, "avg_logprob": -0.13923754141880915, "compression_ratio": 1.6016260162601625, "no_speech_prob": 0.011313363909721375}, {"id": 48, "seek": 33696, "start": 336.96, "end": 344.23999999999995, "text": " part and as the talk earlier already pointed out, there's not just flutter to run on embedded devices.", "tokens": [50364, 644, 293, 382, 264, 751, 3071, 1217, 10932, 484, 11, 456, 311, 406, 445, 932, 9947, 281, 1190, 322, 16741, 5759, 13, 50728], "temperature": 0.0, "avg_logprob": -0.16453359728661654, "compression_ratio": 1.6974789915966386, "no_speech_prob": 0.009115535765886307}, {"id": 49, "seek": 33696, "start": 344.23999999999995, "end": 350.0, "text": " If you Google it, if you want to start out with it, you will find a few repositories all dealing with", "tokens": [50728, 759, 291, 3329, 309, 11, 498, 291, 528, 281, 722, 484, 365, 309, 11, 291, 486, 915, 257, 1326, 22283, 2083, 439, 6260, 365, 51016], "temperature": 0.0, "avg_logprob": -0.16453359728661654, "compression_ratio": 1.6974789915966386, "no_speech_prob": 0.009115535765886307}, {"id": 50, "seek": 33696, "start": 350.0, "end": 356.71999999999997, "text": " flutter and embedded devices. We just saw one, in fact in the last talk, it was using flutter Pi,", "tokens": [51016, 932, 9947, 293, 16741, 5759, 13, 492, 445, 1866, 472, 11, 294, 1186, 294, 264, 1036, 751, 11, 309, 390, 1228, 932, 9947, 17741, 11, 51352], "temperature": 0.0, "avg_logprob": -0.16453359728661654, "compression_ratio": 1.6974789915966386, "no_speech_prob": 0.009115535765886307}, {"id": 51, "seek": 33696, "start": 356.71999999999997, "end": 365.84, "text": " so what's with that? Why are there different options? Is this not flutter or well, it is flutter, but", "tokens": [51352, 370, 437, 311, 365, 300, 30, 1545, 366, 456, 819, 3956, 30, 1119, 341, 406, 932, 9947, 420, 731, 11, 309, 307, 932, 9947, 11, 457, 51808], "temperature": 0.0, "avg_logprob": -0.16453359728661654, "compression_ratio": 1.6974789915966386, "no_speech_prob": 0.009115535765886307}, {"id": 52, "seek": 36584, "start": 366.71999999999997, "end": 373.84, "text": " to understand this, we may have to, yeah, next slide, we may have to look at the Linux", "tokens": [50408, 281, 1223, 341, 11, 321, 815, 362, 281, 11, 1338, 11, 958, 4137, 11, 321, 815, 362, 281, 574, 412, 264, 18734, 50764], "temperature": 0.0, "avg_logprob": -0.11424155901837092, "compression_ratio": 1.891089108910891, "no_speech_prob": 0.00466711912304163}, {"id": 53, "seek": 36584, "start": 373.84, "end": 380.71999999999997, "text": " embedded that flutter uses. The main difference, those custom embedders have, the custom embedder", "tokens": [50764, 16741, 300, 932, 9947, 4960, 13, 440, 2135, 2649, 11, 729, 2375, 12240, 15633, 362, 11, 264, 2375, 12240, 1068, 51108], "temperature": 0.0, "avg_logprob": -0.11424155901837092, "compression_ratio": 1.891089108910891, "no_speech_prob": 0.00466711912304163}, {"id": 54, "seek": 36584, "start": 380.71999999999997, "end": 387.2, "text": " connects or the embedders connect the flutter engine with the targeted platform and the main", "tokens": [51108, 16967, 420, 264, 12240, 15633, 1745, 264, 932, 9947, 2848, 365, 264, 15045, 3663, 293, 264, 2135, 51432], "temperature": 0.0, "avg_logprob": -0.11424155901837092, "compression_ratio": 1.891089108910891, "no_speech_prob": 0.00466711912304163}, {"id": 55, "seek": 36584, "start": 387.2, "end": 393.2, "text": " difference we have with those custom embedders, which I have, let's see if this works, here on the right", "tokens": [51432, 2649, 321, 362, 365, 729, 2375, 12240, 15633, 11, 597, 286, 362, 11, 718, 311, 536, 498, 341, 1985, 11, 510, 322, 264, 558, 51732], "temperature": 0.0, "avg_logprob": -0.11424155901837092, "compression_ratio": 1.891089108910891, "no_speech_prob": 0.00466711912304163}, {"id": 56, "seek": 39320, "start": 393.2, "end": 406.64, "text": " side, fancy, I wasn't prepared for that. So, the main thing you can see is here, something's missing.", "tokens": [50364, 1252, 11, 10247, 11, 286, 2067, 380, 4927, 337, 300, 13, 407, 11, 264, 2135, 551, 291, 393, 536, 307, 510, 11, 746, 311, 5361, 13, 51036], "temperature": 0.0, "avg_logprob": -0.18760610881604647, "compression_ratio": 1.3, "no_speech_prob": 0.004823498893529177}, {"id": 57, "seek": 39320, "start": 407.92, "end": 415.36, "text": " Flutter for Linux just heavily depends on GTK and GTK, in fact GTK 2, which is getting a pain", "tokens": [51100, 3235, 9947, 337, 18734, 445, 10950, 5946, 322, 17530, 42, 293, 17530, 42, 11, 294, 1186, 17530, 42, 568, 11, 597, 307, 1242, 257, 1822, 51472], "temperature": 0.0, "avg_logprob": -0.18760610881604647, "compression_ratio": 1.3, "no_speech_prob": 0.004823498893529177}, {"id": 58, "seek": 41536, "start": 415.36, "end": 423.44, "text": " right now for flutter itself. So, what most of those, or what all of those libraries have in common,", "tokens": [50364, 558, 586, 337, 932, 9947, 2564, 13, 407, 11, 437, 881, 295, 729, 11, 420, 437, 439, 295, 729, 15148, 362, 294, 2689, 11, 50768], "temperature": 0.0, "avg_logprob": -0.1330753962198893, "compression_ratio": 1.6872246696035242, "no_speech_prob": 0.038954462856054306}, {"id": 59, "seek": 41536, "start": 423.44, "end": 429.76, "text": " we don't really need those GTK parts that flutter uses anyway in embedded hardware. We don't have", "tokens": [50768, 321, 500, 380, 534, 643, 729, 17530, 42, 3166, 300, 932, 9947, 4960, 4033, 294, 16741, 8837, 13, 492, 500, 380, 362, 51084], "temperature": 0.0, "avg_logprob": -0.1330753962198893, "compression_ratio": 1.6872246696035242, "no_speech_prob": 0.038954462856054306}, {"id": 60, "seek": 41536, "start": 429.76, "end": 434.96000000000004, "text": " tabs, we normally don't have windows, we don't need all of that stuff, so they just get rid of it,", "tokens": [51084, 20743, 11, 321, 5646, 500, 380, 362, 9309, 11, 321, 500, 380, 643, 439, 295, 300, 1507, 11, 370, 436, 445, 483, 3973, 295, 309, 11, 51344], "temperature": 0.0, "avg_logprob": -0.1330753962198893, "compression_ratio": 1.6872246696035242, "no_speech_prob": 0.038954462856054306}, {"id": 61, "seek": 41536, "start": 436.0, "end": 442.56, "text": " and which sadly isn't that easy in the Linux, in the, let's call it vanilla, flutter,", "tokens": [51396, 293, 597, 22023, 1943, 380, 300, 1858, 294, 264, 18734, 11, 294, 264, 11, 718, 311, 818, 309, 17528, 11, 932, 9947, 11, 51724], "temperature": 0.0, "avg_logprob": -0.1330753962198893, "compression_ratio": 1.6872246696035242, "no_speech_prob": 0.038954462856054306}, {"id": 62, "seek": 44256, "start": 442.56, "end": 453.2, "text": " embedded, but they get rid of it, so you can use flutter on custom hardware without GTK and GTK,", "tokens": [50364, 16741, 11, 457, 436, 483, 3973, 295, 309, 11, 370, 291, 393, 764, 932, 9947, 322, 2375, 8837, 1553, 17530, 42, 293, 17530, 42, 11, 50896], "temperature": 0.0, "avg_logprob": -0.16491340188419118, "compression_ratio": 1.6375, "no_speech_prob": 0.020598985254764557}, {"id": 63, "seek": 44256, "start": 453.2, "end": 458.56, "text": " and that means you can use flutter, for example, with Wayland, with a custom embedder, as the", "tokens": [50896, 293, 300, 1355, 291, 393, 764, 932, 9947, 11, 337, 1365, 11, 365, 9558, 1661, 11, 365, 257, 2375, 12240, 1068, 11, 382, 264, 51164], "temperature": 0.0, "avg_logprob": -0.16491340188419118, "compression_ratio": 1.6375, "no_speech_prob": 0.020598985254764557}, {"id": 64, "seek": 44256, "start": 459.36, "end": 466.0, "text": " talk before already pointed out, which is not possible right now with the, let's call it flutter on", "tokens": [51204, 751, 949, 1217, 10932, 484, 11, 597, 307, 406, 1944, 558, 586, 365, 264, 11, 718, 311, 818, 309, 932, 9947, 322, 51536], "temperature": 0.0, "avg_logprob": -0.16491340188419118, "compression_ratio": 1.6375, "no_speech_prob": 0.020598985254764557}, {"id": 65, "seek": 44256, "start": 466.0, "end": 471.52, "text": " embedded projects, especially if you want to go in a really industrial style, but we're getting there.", "tokens": [51536, 16741, 4455, 11, 2318, 498, 291, 528, 281, 352, 294, 257, 534, 9987, 3758, 11, 457, 321, 434, 1242, 456, 13, 51812], "temperature": 0.0, "avg_logprob": -0.16491340188419118, "compression_ratio": 1.6375, "no_speech_prob": 0.020598985254764557}, {"id": 66, "seek": 47152, "start": 472.32, "end": 477.2, "text": " Also, a big part that's missing right now is tutorials on how tools are still, there's not", "tokens": [50404, 2743, 11, 257, 955, 644, 300, 311, 5361, 558, 586, 307, 17616, 322, 577, 3873, 366, 920, 11, 456, 311, 406, 50648], "temperature": 0.0, "avg_logprob": -0.10696907432711854, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.004460083786398172}, {"id": 67, "seek": 47152, "start": 477.2, "end": 483.59999999999997, "text": " so many out there, just Google it, it's, yeah, there's not much out there, but I'm sure we will", "tokens": [50648, 370, 867, 484, 456, 11, 445, 3329, 309, 11, 309, 311, 11, 1338, 11, 456, 311, 406, 709, 484, 456, 11, 457, 286, 478, 988, 321, 486, 50968], "temperature": 0.0, "avg_logprob": -0.10696907432711854, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.004460083786398172}, {"id": 68, "seek": 47152, "start": 483.59999999999997, "end": 490.4, "text": " get through this within this year, or at least maybe the next year, and then flutter will also", "tokens": [50968, 483, 807, 341, 1951, 341, 1064, 11, 420, 412, 1935, 1310, 264, 958, 1064, 11, 293, 550, 932, 9947, 486, 611, 51308], "temperature": 0.0, "avg_logprob": -0.10696907432711854, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.004460083786398172}, {"id": 69, "seek": 47152, "start": 490.4, "end": 497.03999999999996, "text": " definitely become available to startups, to smaller, medium-sized companies, there will be tools,", "tokens": [51308, 2138, 1813, 2435, 281, 28041, 11, 281, 4356, 11, 6399, 12, 20614, 3431, 11, 456, 486, 312, 3873, 11, 51640], "temperature": 0.0, "avg_logprob": -0.10696907432711854, "compression_ratio": 1.6406926406926408, "no_speech_prob": 0.004460083786398172}, {"id": 70, "seek": 49704, "start": 497.12, "end": 504.24, "text": " software as a services around that, and flutter will get more mature, I think we don't know it,", "tokens": [50368, 4722, 382, 257, 3328, 926, 300, 11, 293, 932, 9947, 486, 483, 544, 14442, 11, 286, 519, 321, 500, 380, 458, 309, 11, 50724], "temperature": 0.0, "avg_logprob": -0.09467674704159007, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.002666792366653681}, {"id": 71, "seek": 49704, "start": 504.24, "end": 508.56, "text": " but I guess that flutter will get more mature in the embedded world in the next one to two years.", "tokens": [50724, 457, 286, 2041, 300, 932, 9947, 486, 483, 544, 14442, 294, 264, 16741, 1002, 294, 264, 958, 472, 281, 732, 924, 13, 50940], "temperature": 0.0, "avg_logprob": -0.09467674704159007, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.002666792366653681}, {"id": 72, "seek": 49704, "start": 509.36, "end": 516.64, "text": " But, so if we want to do a project right now, where we just want to try out how flutter on", "tokens": [50980, 583, 11, 370, 498, 321, 528, 281, 360, 257, 1716, 558, 586, 11, 689, 321, 445, 528, 281, 853, 484, 577, 932, 9947, 322, 51344], "temperature": 0.0, "avg_logprob": -0.09467674704159007, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.002666792366653681}, {"id": 73, "seek": 49704, "start": 516.64, "end": 523.52, "text": " embedded devices works, at least for this project, when we use a Raspberry Pi, we have Raspberry Pi OS,", "tokens": [51344, 16741, 5759, 1985, 11, 412, 1935, 337, 341, 1716, 11, 562, 321, 764, 257, 41154, 17741, 11, 321, 362, 41154, 17741, 12731, 11, 51688], "temperature": 0.0, "avg_logprob": -0.09467674704159007, "compression_ratio": 1.7168141592920354, "no_speech_prob": 0.002666792366653681}, {"id": 74, "seek": 52352, "start": 523.52, "end": 529.1999999999999, "text": " we can just use flutter as it is, we can build for Linux there, it will work just fine.", "tokens": [50364, 321, 393, 445, 764, 932, 9947, 382, 309, 307, 11, 321, 393, 1322, 337, 18734, 456, 11, 309, 486, 589, 445, 2489, 13, 50648], "temperature": 0.0, "avg_logprob": -0.10026124580619261, "compression_ratio": 1.5772357723577235, "no_speech_prob": 0.0016471367562189698}, {"id": 75, "seek": 52352, "start": 529.1999999999999, "end": 535.92, "text": " The newest Raspberry Pi OS changed to, I think it changed to using Wayland, I haven't tried it yet,", "tokens": [50648, 440, 17569, 41154, 17741, 12731, 3105, 281, 11, 286, 519, 309, 3105, 281, 1228, 9558, 1661, 11, 286, 2378, 380, 3031, 309, 1939, 11, 50984], "temperature": 0.0, "avg_logprob": -0.10026124580619261, "compression_ratio": 1.5772357723577235, "no_speech_prob": 0.0016471367562189698}, {"id": 76, "seek": 52352, "start": 535.92, "end": 544.56, "text": " but apparently it works alright. Flutter needs to do something about GTK2 anyway, so maybe it will", "tokens": [50984, 457, 7970, 309, 1985, 5845, 13, 3235, 9947, 2203, 281, 360, 746, 466, 17530, 42, 17, 4033, 11, 370, 1310, 309, 486, 51416], "temperature": 0.0, "avg_logprob": -0.10026124580619261, "compression_ratio": 1.5772357723577235, "no_speech_prob": 0.0016471367562189698}, {"id": 77, "seek": 52352, "start": 544.56, "end": 551.36, "text": " be possible with the just normal flutter to build something suitable for Wayland and direct rendering", "tokens": [51416, 312, 1944, 365, 264, 445, 2710, 932, 9947, 281, 1322, 746, 12873, 337, 9558, 1661, 293, 2047, 22407, 51756], "temperature": 0.0, "avg_logprob": -0.10026124580619261, "compression_ratio": 1.5772357723577235, "no_speech_prob": 0.0016471367562189698}, {"id": 78, "seek": 55136, "start": 551.36, "end": 556.8000000000001, "text": " as well in the future. For right now, if you're doing a hobby project, if you just want to try", "tokens": [50364, 382, 731, 294, 264, 2027, 13, 1171, 558, 586, 11, 498, 291, 434, 884, 257, 18240, 1716, 11, 498, 291, 445, 528, 281, 853, 50636], "temperature": 0.0, "avg_logprob": -0.09267627967978423, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.01184032578021288}, {"id": 79, "seek": 55136, "start": 556.8000000000001, "end": 563.12, "text": " something out with a Raspberry Pi, just go with flutter as it is, it's fine. If you want to go", "tokens": [50636, 746, 484, 365, 257, 41154, 17741, 11, 445, 352, 365, 932, 9947, 382, 309, 307, 11, 309, 311, 2489, 13, 759, 291, 528, 281, 352, 50952], "temperature": 0.0, "avg_logprob": -0.09267627967978423, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.01184032578021288}, {"id": 80, "seek": 55136, "start": 563.12, "end": 567.44, "text": " with, if you want to use direct rendering, if you want to go with Wayland, if you want to get", "tokens": [50952, 365, 11, 498, 291, 528, 281, 764, 2047, 22407, 11, 498, 291, 528, 281, 352, 365, 9558, 1661, 11, 498, 291, 528, 281, 483, 51168], "temperature": 0.0, "avg_logprob": -0.09267627967978423, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.01184032578021288}, {"id": 81, "seek": 55136, "start": 567.44, "end": 574.08, "text": " something into production grade, then you have to look at flutter Pi, Toyota's, IVI Home Screen,", "tokens": [51168, 746, 666, 4265, 7204, 11, 550, 291, 362, 281, 574, 412, 932, 9947, 17741, 11, 22926, 311, 11, 15967, 40, 8719, 25823, 11, 51500], "temperature": 0.0, "avg_logprob": -0.09267627967978423, "compression_ratio": 1.7511520737327189, "no_speech_prob": 0.01184032578021288}, {"id": 82, "seek": 57408, "start": 574.08, "end": 582.24, "text": " or the one from Sony, whereas the Toyota thing really is amazing and is moving forward at a", "tokens": [50364, 420, 264, 472, 490, 13575, 11, 9735, 264, 22926, 551, 534, 307, 2243, 293, 307, 2684, 2128, 412, 257, 50772], "temperature": 0.0, "avg_logprob": -0.10563669204711915, "compression_ratio": 1.704035874439462, "no_speech_prob": 0.03773084655404091}, {"id": 83, "seek": 57408, "start": 582.24, "end": 590.0, "text": " really fast pace. So enough to this generic talk about flutter, what about the implementation", "tokens": [50772, 534, 2370, 11638, 13, 407, 1547, 281, 341, 19577, 751, 466, 932, 9947, 11, 437, 466, 264, 11420, 51160], "temperature": 0.0, "avg_logprob": -0.10563669204711915, "compression_ratio": 1.704035874439462, "no_speech_prob": 0.03773084655404091}, {"id": 84, "seek": 57408, "start": 590.0, "end": 596.64, "text": " for this project right now? I want to go through it in a few steps and yeah, the first part or the", "tokens": [51160, 337, 341, 1716, 558, 586, 30, 286, 528, 281, 352, 807, 309, 294, 257, 1326, 4439, 293, 1338, 11, 264, 700, 644, 420, 264, 51492], "temperature": 0.0, "avg_logprob": -0.10563669204711915, "compression_ratio": 1.704035874439462, "no_speech_prob": 0.03773084655404091}, {"id": 85, "seek": 57408, "start": 596.64, "end": 600.8000000000001, "text": " first part that we need to integrate for this project to work is connect to Raspberry Pi to the", "tokens": [51492, 700, 644, 300, 321, 643, 281, 13365, 337, 341, 1716, 281, 589, 307, 1745, 281, 41154, 17741, 281, 264, 51700], "temperature": 0.0, "avg_logprob": -0.10563669204711915, "compression_ratio": 1.704035874439462, "no_speech_prob": 0.03773084655404091}, {"id": 86, "seek": 60080, "start": 600.8, "end": 606.4, "text": " touchscreen. What do we do for that? We use the Raspberry Pi Installer, Installer Raspberry Pi OS,", "tokens": [50364, 46775, 13, 708, 360, 321, 360, 337, 300, 30, 492, 764, 264, 41154, 17741, 2730, 22414, 11, 2730, 22414, 41154, 17741, 12731, 11, 50644], "temperature": 0.0, "avg_logprob": -0.13969785922041564, "compression_ratio": 1.6040816326530611, "no_speech_prob": 0.02125309407711029}, {"id": 87, "seek": 60080, "start": 606.4, "end": 611.68, "text": " it just works out of the box. Thanks to a lot of guys that are also here. That's really, really easy.", "tokens": [50644, 309, 445, 1985, 484, 295, 264, 2424, 13, 2561, 281, 257, 688, 295, 1074, 300, 366, 611, 510, 13, 663, 311, 534, 11, 534, 1858, 13, 50908], "temperature": 0.0, "avg_logprob": -0.13969785922041564, "compression_ratio": 1.6040816326530611, "no_speech_prob": 0.02125309407711029}, {"id": 88, "seek": 60080, "start": 612.4799999999999, "end": 619.52, "text": " Then we need to get flutter running. For that, we wrote a tool, I just said it with Snap Embedded,", "tokens": [50948, 1396, 321, 643, 281, 483, 932, 9947, 2614, 13, 1171, 300, 11, 321, 4114, 257, 2290, 11, 286, 445, 848, 309, 365, 18254, 24234, 292, 9207, 11, 51300], "temperature": 0.0, "avg_logprob": -0.13969785922041564, "compression_ratio": 1.6040816326530611, "no_speech_prob": 0.02125309407711029}, {"id": 89, "seek": 60080, "start": 619.52, "end": 626.56, "text": " we're doing open source projects around that. We basically built a tool in the end, there's a", "tokens": [51300, 321, 434, 884, 1269, 4009, 4455, 926, 300, 13, 492, 1936, 3094, 257, 2290, 294, 264, 917, 11, 456, 311, 257, 51652], "temperature": 0.0, "avg_logprob": -0.13969785922041564, "compression_ratio": 1.6040816326530611, "no_speech_prob": 0.02125309407711029}, {"id": 90, "seek": 62656, "start": 626.56, "end": 633.4399999999999, "text": " repo with the link called Snap CLI which allows you to, from your host machine, set up a Raspberry Pi", "tokens": [50364, 49040, 365, 264, 2113, 1219, 18254, 12855, 40, 597, 4045, 291, 281, 11, 490, 428, 3975, 3479, 11, 992, 493, 257, 41154, 17741, 50708], "temperature": 0.0, "avg_logprob": -0.1109933479159486, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.011145188473165035}, {"id": 91, "seek": 62656, "start": 633.4399999999999, "end": 638.64, "text": " that's connected in the same network as you are. It'll connect over SSH, it will install flutter,", "tokens": [50708, 300, 311, 4582, 294, 264, 912, 3209, 382, 291, 366, 13, 467, 603, 1745, 670, 12238, 39, 11, 309, 486, 3625, 932, 9947, 11, 50968], "temperature": 0.0, "avg_logprob": -0.1109933479159486, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.011145188473165035}, {"id": 92, "seek": 62656, "start": 638.64, "end": 644.64, "text": " all the stuff you need, and it will set it up as a custom debug device so that you can just run the", "tokens": [50968, 439, 264, 1507, 291, 643, 11, 293, 309, 486, 992, 309, 493, 382, 257, 2375, 24083, 4302, 370, 300, 291, 393, 445, 1190, 264, 51268], "temperature": 0.0, "avg_logprob": -0.1109933479159486, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.011145188473165035}, {"id": 93, "seek": 62656, "start": 644.64, "end": 652.8, "text": " code and debug out of VS code on Linux, Mac, Windows, and the code will compile and everything", "tokens": [51268, 3089, 293, 24083, 484, 295, 25091, 3089, 322, 18734, 11, 5707, 11, 8591, 11, 293, 264, 3089, 486, 31413, 293, 1203, 51676], "temperature": 0.0, "avg_logprob": -0.1109933479159486, "compression_ratio": 1.5951417004048583, "no_speech_prob": 0.011145188473165035}, {"id": 94, "seek": 65280, "start": 652.8, "end": 658.16, "text": " will run in real time with hot reload working with the Dart tools on your Raspberry Pi. If you", "tokens": [50364, 486, 1190, 294, 957, 565, 365, 2368, 25628, 1364, 365, 264, 30271, 3873, 322, 428, 41154, 17741, 13, 759, 291, 50632], "temperature": 0.0, "avg_logprob": -0.1435496226078322, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.005295924376696348}, {"id": 95, "seek": 65280, "start": 658.16, "end": 662.7199999999999, "text": " want to just develop on Raspberry Pi, that's already really easy and straightforward. Even the", "tokens": [50632, 528, 281, 445, 1499, 322, 41154, 17741, 11, 300, 311, 1217, 534, 1858, 293, 15325, 13, 2754, 264, 50860], "temperature": 0.0, "avg_logprob": -0.1435496226078322, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.005295924376696348}, {"id": 96, "seek": 65280, "start": 662.7199999999999, "end": 668.0799999999999, "text": " Dart DevTools work, all of that is already there. Just, yeah, no cross compilation, we don't want", "tokens": [50860, 30271, 9096, 51, 29298, 589, 11, 439, 295, 300, 307, 1217, 456, 13, 1449, 11, 1338, 11, 572, 3278, 40261, 11, 321, 500, 380, 528, 51128], "temperature": 0.0, "avg_logprob": -0.1435496226078322, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.005295924376696348}, {"id": 97, "seek": 65280, "start": 668.0799999999999, "end": 675.76, "text": " to get in that direction yet. The next part is, yeah, it's rather uninteresting. Here you can", "tokens": [51128, 281, 483, 294, 300, 3513, 1939, 13, 440, 958, 644, 307, 11, 1338, 11, 309, 311, 2831, 49234, 8714, 13, 1692, 291, 393, 51512], "temperature": 0.0, "avg_logprob": -0.1435496226078322, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.005295924376696348}, {"id": 98, "seek": 65280, "start": 675.76, "end": 680.4, "text": " see a little bit of Dart, that code won't run, I cut out everything that looked ugly.", "tokens": [51512, 536, 257, 707, 857, 295, 30271, 11, 300, 3089, 1582, 380, 1190, 11, 286, 1723, 484, 1203, 300, 2956, 12246, 13, 51744], "temperature": 0.0, "avg_logprob": -0.1435496226078322, "compression_ratio": 1.6501766784452296, "no_speech_prob": 0.005295924376696348}, {"id": 99, "seek": 68040, "start": 681.36, "end": 689.36, "text": " So that's just basically a get request. You connect the bulb and the plugs with your flutter or", "tokens": [50412, 407, 300, 311, 445, 1936, 257, 483, 5308, 13, 509, 1745, 264, 21122, 293, 264, 33899, 365, 428, 932, 9947, 420, 50812], "temperature": 0.0, "avg_logprob": -0.16141344441307914, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0013654095819219947}, {"id": 100, "seek": 68040, "start": 689.36, "end": 698.0799999999999, "text": " Dart application, run this function to get the bulb status, set the bulb status, or to set the", "tokens": [50812, 30271, 3861, 11, 1190, 341, 2445, 281, 483, 264, 21122, 6558, 11, 992, 264, 21122, 6558, 11, 420, 281, 992, 264, 51248], "temperature": 0.0, "avg_logprob": -0.16141344441307914, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0013654095819219947}, {"id": 101, "seek": 68040, "start": 698.0799999999999, "end": 705.4399999999999, "text": " bulb color. The more interesting part, I guess, and what I wanted to point out, which will also", "tokens": [51248, 21122, 2017, 13, 440, 544, 1880, 644, 11, 286, 2041, 11, 293, 437, 286, 1415, 281, 935, 484, 11, 597, 486, 611, 51616], "temperature": 0.0, "avg_logprob": -0.16141344441307914, "compression_ratio": 1.5714285714285714, "no_speech_prob": 0.0013654095819219947}, {"id": 102, "seek": 70544, "start": 706.08, "end": 712.24, "text": " explain how you would integrate a voice assistant to with a flutter application on the Raspberry Pi,", "tokens": [50396, 2903, 577, 291, 576, 13365, 257, 3177, 10994, 281, 365, 257, 932, 9947, 3861, 322, 264, 41154, 17741, 11, 50704], "temperature": 0.0, "avg_logprob": -0.13377824359469945, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.0014768581604585052}, {"id": 103, "seek": 70544, "start": 712.24, "end": 720.08, "text": " is how do we connect this sensor that's connected to the I2C bus with our flutter application.", "tokens": [50704, 307, 577, 360, 321, 1745, 341, 10200, 300, 311, 4582, 281, 264, 286, 17, 34, 1255, 365, 527, 932, 9947, 3861, 13, 51096], "temperature": 0.0, "avg_logprob": -0.13377824359469945, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.0014768581604585052}, {"id": 104, "seek": 70544, "start": 721.9200000000001, "end": 727.7600000000001, "text": " We would have a different approach, or we do have different approaches that we could use here.", "tokens": [51188, 492, 576, 362, 257, 819, 3109, 11, 420, 321, 360, 362, 819, 11587, 300, 321, 727, 764, 510, 13, 51480], "temperature": 0.0, "avg_logprob": -0.13377824359469945, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.0014768581604585052}, {"id": 105, "seek": 70544, "start": 727.7600000000001, "end": 734.0, "text": " We could do a Dart implementation of everything directly to the I2C bus. We could go through", "tokens": [51480, 492, 727, 360, 257, 30271, 11420, 295, 1203, 3838, 281, 264, 286, 17, 34, 1255, 13, 492, 727, 352, 807, 51792], "temperature": 0.0, "avg_logprob": -0.13377824359469945, "compression_ratio": 1.7252252252252251, "no_speech_prob": 0.0014768581604585052}, {"id": 106, "seek": 73400, "start": 734.0, "end": 740.48, "text": " the data sheets of the sensor, implement everything by ourselves, all the commands", "tokens": [50364, 264, 1412, 15421, 295, 264, 10200, 11, 4445, 1203, 538, 4175, 11, 439, 264, 16901, 50688], "temperature": 0.0, "avg_logprob": -0.15549736416216978, "compression_ratio": 1.719626168224299, "no_speech_prob": 0.0005789489950984716}, {"id": 107, "seek": 73400, "start": 740.48, "end": 749.12, "text": " do it all by ourselves. We could run up an MQTT prokure on the Raspberry Pi. We could then connect", "tokens": [50688, 360, 309, 439, 538, 4175, 13, 492, 727, 1190, 493, 364, 376, 48, 28178, 447, 74, 540, 322, 264, 41154, 17741, 13, 492, 727, 550, 1745, 51120], "temperature": 0.0, "avg_logprob": -0.15549736416216978, "compression_ratio": 1.719626168224299, "no_speech_prob": 0.0005789489950984716}, {"id": 108, "seek": 73400, "start": 749.12, "end": 757.52, "text": " the sensor to this on the prokure, subscribe the flutter application on the MQTT prokure,", "tokens": [51120, 264, 10200, 281, 341, 322, 264, 447, 74, 540, 11, 3022, 264, 932, 9947, 3861, 322, 264, 376, 48, 28178, 447, 74, 540, 11, 51540], "temperature": 0.0, "avg_logprob": -0.15549736416216978, "compression_ratio": 1.719626168224299, "no_speech_prob": 0.0005789489950984716}, {"id": 109, "seek": 73400, "start": 757.52, "end": 763.36, "text": " because MQTT is one of those plugins that work with most of the custom embedders, so that really", "tokens": [51540, 570, 376, 48, 28178, 307, 472, 295, 729, 33759, 300, 589, 365, 881, 295, 264, 2375, 12240, 15633, 11, 370, 300, 534, 51832], "temperature": 0.0, "avg_logprob": -0.15549736416216978, "compression_ratio": 1.719626168224299, "no_speech_prob": 0.0005789489950984716}, {"id": 110, "seek": 76336, "start": 763.36, "end": 770.96, "text": " works out of the box. So that would be possible to take. We could, of course, here, I use Python,", "tokens": [50364, 1985, 484, 295, 264, 2424, 13, 407, 300, 576, 312, 1944, 281, 747, 13, 492, 727, 11, 295, 1164, 11, 510, 11, 286, 764, 15329, 11, 50744], "temperature": 0.0, "avg_logprob": -0.16289515667651072, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.005293691996484995}, {"id": 111, "seek": 76336, "start": 770.96, "end": 778.64, "text": " but we could use a Python backend, just make another REST API on this device and talk to it", "tokens": [50744, 457, 321, 727, 764, 257, 15329, 38087, 11, 445, 652, 1071, 497, 14497, 9362, 322, 341, 4302, 293, 751, 281, 309, 51128], "temperature": 0.0, "avg_logprob": -0.16289515667651072, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.005293691996484995}, {"id": 112, "seek": 76336, "start": 778.64, "end": 787.12, "text": " locally, I think, in a lot of embedded projects. It's done that way. Or we use Dboss. We have the", "tokens": [51128, 16143, 11, 286, 519, 11, 294, 257, 688, 295, 16741, 4455, 13, 467, 311, 1096, 300, 636, 13, 1610, 321, 764, 413, 65, 772, 13, 492, 362, 264, 51552], "temperature": 0.0, "avg_logprob": -0.16289515667651072, "compression_ratio": 1.4422110552763818, "no_speech_prob": 0.005293691996484995}, {"id": 113, "seek": 78712, "start": 787.84, "end": 794.32, "text": " Dboss running on Raspberry Pi OS. We have the Dboss running on most Linux systems, and we can just", "tokens": [50400, 413, 65, 772, 2614, 322, 41154, 17741, 12731, 13, 492, 362, 264, 413, 65, 772, 2614, 322, 881, 18734, 3652, 11, 293, 321, 393, 445, 50724], "temperature": 0.0, "avg_logprob": -0.12679745356241862, "compression_ratio": 1.6108597285067874, "no_speech_prob": 0.0019260094268247485}, {"id": 114, "seek": 78712, "start": 794.32, "end": 800.32, "text": " clip on the session bus for this purpose. The plugins are also already there. And", "tokens": [50724, 7353, 322, 264, 5481, 1255, 337, 341, 4334, 13, 440, 33759, 366, 611, 1217, 456, 13, 400, 51024], "temperature": 0.0, "avg_logprob": -0.12679745356241862, "compression_ratio": 1.6108597285067874, "no_speech_prob": 0.0019260094268247485}, {"id": 115, "seek": 78712, "start": 801.84, "end": 806.64, "text": " for this example, this is what we did, because connecting Flutter application with", "tokens": [51100, 337, 341, 1365, 11, 341, 307, 437, 321, 630, 11, 570, 11015, 3235, 9947, 3861, 365, 51340], "temperature": 0.0, "avg_logprob": -0.12679745356241862, "compression_ratio": 1.6108597285067874, "no_speech_prob": 0.0019260094268247485}, {"id": 116, "seek": 78712, "start": 807.68, "end": 813.2, "text": " whatever else process is running on the machine, you can just use Dboss. We can just use the", "tokens": [51392, 2035, 1646, 1399, 307, 2614, 322, 264, 3479, 11, 291, 393, 445, 764, 413, 65, 772, 13, 492, 393, 445, 764, 264, 51668], "temperature": 0.0, "avg_logprob": -0.12679745356241862, "compression_ratio": 1.6108597285067874, "no_speech_prob": 0.0019260094268247485}, {"id": 117, "seek": 81320, "start": 813.2, "end": 818.72, "text": " Python example library that was already shipped with the sensor, of course. I mean,", "tokens": [50364, 15329, 1365, 6405, 300, 390, 1217, 25312, 365, 264, 10200, 11, 295, 1164, 13, 286, 914, 11, 50640], "temperature": 0.0, "avg_logprob": -0.22016320690031974, "compression_ratio": 1.4245810055865922, "no_speech_prob": 0.0013018690515309572}, {"id": 118, "seek": 81320, "start": 819.44, "end": 826.4000000000001, "text": " we don't want to do work twice. So we can connect whatever we want right now with packages plugins", "tokens": [50676, 321, 500, 380, 528, 281, 360, 589, 6091, 13, 407, 321, 393, 1745, 2035, 321, 528, 558, 586, 365, 17401, 33759, 51024], "temperature": 0.0, "avg_logprob": -0.22016320690031974, "compression_ratio": 1.4245810055865922, "no_speech_prob": 0.0013018690515309572}, {"id": 119, "seek": 81320, "start": 826.4000000000001, "end": 829.6800000000001, "text": " that are already available. Resources, thank you very much.", "tokens": [51024, 300, 366, 1217, 2435, 13, 29706, 11, 1309, 291, 588, 709, 13, 51188], "temperature": 0.0, "avg_logprob": -0.22016320690031974, "compression_ratio": 1.4245810055865922, "no_speech_prob": 0.0013018690515309572}, {"id": 120, "seek": 81320, "start": 838.88, "end": 839.76, "text": " Two minutes.", "tokens": [51648, 4453, 2077, 13, 51692], "temperature": 0.0, "avg_logprob": -0.22016320690031974, "compression_ratio": 1.4245810055865922, "no_speech_prob": 0.0013018690515309572}], "language": "en"}