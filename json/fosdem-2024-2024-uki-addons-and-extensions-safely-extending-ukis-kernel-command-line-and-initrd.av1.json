{"text": " Okay. Hello, everyone. My name is Emmanuel Giuseppe Sposto. I'm a software engineer at Red Hat. And today I'm talking about the UKI at Donson Extension, how to safely extend UKI, scan and comma line in E3D. So why this talk? First of all, because this is extremely new stuff, like it's very new, hopefully also exciting. Because there's not a lot of documentation, of course, because this stuff was just merged. And hopefully this talk will also help you understand a little bit more about what they are, how to use these addons and so on. And because they may be very useful because UKI, as also Vitaly explained in this talk one hour ago, is pretty static on the point of comma line in E3D. And with these addons, we can extend it, these two things without sacrificing the security. And also, yeah, this attempt to advertise a little bit to UKI, so what they are to the more public to be more recognized. So let's look first at Vitaly's slides. These are from last year, I think. So I will just briefly go through this. So Confidential VM provides data protection from the host he runs on. So we are protecting the VM from the hypervisor because it could be malicious and it's privileged, so we can access the VM and we don't want that. The host is still able to disrupt the execution of the VM. And there are specific hardware, SV, SMP and TDX responsible for encrypting memory and CPU. And storage encryption is necessary for security and must be done by the guest OS. This was already explained by Vitaly. And usually the situation that we have is that we usually encrypt, we have the encrypted part and while the kernel is signed by the vendor, in NITRA MFS and the common line are locally produced, are not signed and also it's difficult to measure them, of course. Whereas with the UKI unified kernel images, basically a single binary produced and signed by the vendor, in this case Red Hat. And it basically contains the important parts, the RP sections together with the signature, there is the kernel, the NITRA MFS and there is also the common line as a separate section that is then feed to the kernel. Before going to the next details, I wanted also to explain like the use case, like yeah, the use case in this case for this talk, that we have the UFI, the firmware that is in terms called shim the boot loader, which in terms called system distap which is very key piece for the add-ons and on both the kernel and common line the NITRA MFS which in turn unpacks the UKI and gets the kernel and runs the OS. The issue that also Vitaly mentioned is that the kernel line is immutable and is something that we don't like because there are limitations and you cannot have a static common line for every use case that you have, there is a crash kernel options, debugging options and we cannot ship different UKI for every basically use case. So what we are aiming for the UKI kernel common line is it cannot be static as I said because there are different use case, it has to be secure so whoever modifies the common line has to be authenticated otherwise the whole point of confidential computing is lost and by default nobody because the common line is inserted inside the UKI and then is signed so you cannot modify it anymore and has to be extensible of course because we don't want to ship a new UKI every single time. There are already ways for the one that are no UKIs to extend to add kernel common line to a new UKI but it's a little bit when we talk about confidential virtual machine it's a little bit tricky because as again I'll show you the option and you need to trust a lot of parts. So as I said there is the common line section it's embedded in UKI, it's generated with UKI, it's secure, it's shipped with UKI altogether but it's static, you cannot be modified. Then there is FI shell which is looked by system distable if the common line section inside the UKI is missing many distro for example they ship always something in the common line section inside the UKI so it's ignored. It's useful usually for type 1 entries but again it's unsafe because an attacker can easily inject its own parameter through the FI shell that's why it was disabled for CVMs so you cannot extend the kernel common line with the FI shell. There is SM BIOS system management BIOS, embedded metal this is good, it's trusted because it's coming from firmware and BIOS but it doesn't apply on CVMs again the hypervisor can easily inject kernel common line. So yeah as I said it's not good so it was also this was disabled and then there is QM firmware configuration by the name you can already figure that this is only from QM it's again coming from hypervisor so also disabled. Then what do we do? Our proposal initially upstream was an allow list basically an allow list is another P section where you use regex globbing and whatever just something like this to parse the common line that you want to get and the easy case will be if there is something that we don't accept in the regex we just discard the whole common line but the common line would come from FI shell SM BIOS all these sources but we try to filter and system desktop does the parsing. The advantage is of course that we can reject what we don't want but the problem is just moved to another place because then you can do attacks on the regex and globbing because they need to be very careful formulated so what's also this was disabled so was rejected actually and eventually we have the solution the system D solution nuclei addons. Nuclei addons is basically another separate binary which is contains a very few P section one of these is the common line and it's signed by yeah can be signed but should be signed for the CVMs and we take advantage of shim validate function offered by shim to validate the P signature so basically this means that system desktop will ask shim to validate if the binary has been signed by some key that we trust in the secure boot database. There is a very useful tool UQFI in system D upstream it's you can create UQIs very easily very better than drag up and object copy and you can also create addons and yeah basically the common line is very easy you can also provide the keys when you want to sign your own addon so it's this is the solution. So how UQI works the workflow is UQFI first you create the addons so you ask UQFI to create an addon with the common line that you want then the addons it needs to be put in the specific location in the ESP I will show you later where exactly is this system this tab looks for this location and finds automatically the addons asks shim calling shim verify on the addon to verify the if the addon is trusted so it's signed by somebody that we trust and then if a leadation is successful we read the addon the system read the addon and appends the common line inside the addon to the UQI common line section to extend it and then it's provided to VM linux to start links with the new common line there are two kinds of addons there is global and local addons so global addons can be applied to all installed UQIs and this is the location and UQFI UQI specific addons so if you want to apply all these to one specific UQI you have installed has to be provided in the UQI name has to be in an extra d folder in the same location where your UQI is and then has to be put in there just naming convention because last time I checked the system this tab was checking for also the extension name and this kind of stuff so you need to get them right UQIs are always located in the this part AFI linux UQIs always ends with the AFI and addons is dot addon dot AFI and specific addons here as I said you need to be located in the extra d folder okay so next next step is what is but white self so suppose that we as a vendor we shipped a new key I common line addon and we signed it and everybody's using it and then we figured the common line as an issue then what do we do because we signed it as a vendor so what it's trusted first solution just change the certificate so but this is basically impractical yeah good luck with that yeah we messes up all the measurements you invalidate all the addons so second solution try to create a blacklist on the cloud provider this is impractical third solution at the station check if the hash is matching your addon that you don't like anymore and the last solution these are these s but rules so what is s but is basically another p section inside the UQI the yeah the addons for example and contains component generation and also other information but the key part is the component generation table because there is the same table there should be the same table inside your shim that and then the we are at component level so for example every Linux PS action has should be should have the its own component generation version for the Linux one for the addon and so on and if the component generation match with the what shim has we accept it but if the generation for this component of the addon that is incoming is lower then we have a mismatch and even if the addon is signed by red dot or whatever it will be rejected and this part is done by shim when they verifies they are done in checks the s but components and generation just an example to clarify this in this case we have the shim has s but one myadon version two and then the addon contains the same version for s but and myadon so it's good it will be accepted of course has to be signed by somebody we trust in this case the my the addon as the s but version is correct but my addon component is lower which means that we don't accept it even if it's signed by whoever we trust in the secure boot database it won't be accepted one open problem it's combining addons so if you have two separate addons that contain common line that is safe but together can create a security issue because they enable something that we don't like how do we do it how do we solve this issue to be honest as of now I couldn't come up with a concrete example for this and yeah one solution will be to use that station to see if they are both there talking about the system dc6 in iterative addons so system dc6 already exist they are already famous so used and what is new is that you can also use them for uki so for what if you don't know is a system system extends an image extend the base system with an overlay containing additional files so you can extend base system and you can use this system this tab provides also the possibility to use this to extend the initer d inside the uki um more or less is same concept as the common line addons so you just use different tools because they are different things they are no p binary with p files sections so there are system extension images and micozi is used instead the uki fi and but the part for example where to put it is the same the workflow is more or less again the same create a system c6 extension you put it inside the extra d folder it must be a raw file and then this is the only difference system this tab will take the initer d the addon and will put it inside the initer d extra c6 folder where the c6 extension will then load it and apply it to the initer d yeah who uses this can use these addons the use case are various there are three groups of users that can use this the vendors for example read that they want to ship we want to debug kernel and uki and we ship our addon and there are there could be the vstod the virt host admins that can use host side tools like virt firmware or whatever to modify these these kind of variables more or less the same use case and the guest admins can add you can use guest side tools like mock to insert the key insecure boot even though this is a little bit tricky for in the cloud because on asia it's basically impossible to add a key in mock because when it reboots you cannot connect via when you connect with the shell you skip the mock reboot section when they ask you to confirm your key available tools there is a system d has a lot of tools uki fie is the main one in different version is supported gradually first how to build and then how to inspect them and then there is also i sent a pr to extend boot ctl to find addons and display already as a preview what will be the kernel command the full command line so if there is a system d maintainers right then and there is mico c to create a system d sex the image and then we have a uki director for fedora there is kernel boot config you can add update and remove uki's and then we and also added kernel addon which does the same thing for uki addons and the future work what are we planning to do next maybe an rpm so the vendor ships an rpm with the collection of addons generic addons that we want to ship signed by the vendor but of course we don't want to pollute the esp with the addons that the user doesn't need so there was a agreement also upstream to find these two locations user lib linux extra d for global and the other one for uki specific addons where the rpm should install these addons and then when the user needs them can simply use kernel addon or just copy the addon that for example we as a developer ask to for debugging the uki to copy it in the esp reboot and they will be there yeah on the cloud cloud if they want to allow the user to upload their own uki addons they need to be a way to inject to inject the owner certificate otherwise yeah you cannot do it this also there is a little bit an issue with the measurement because the when you add the user certificate has to be measured in pscr7 especially and the solution we found is to simply add the dummy addon before performing attestation so the certificate is part of the in the key ring so it will be attest is measured on prem more or less the same things who for us is libvirt we want to offer the same possibility to upload the certificate for secure boot and yeah and there is already a way to add the dummy addon so that's that's it from my e-talk if you have any question here outside thank you yes please uh so second comment is on all of the add-ons Right? Because you can trust the UiViceQ boot mechanism. Whereas in a confidential computer environment you cannot today use. I'm not aware of any stack right now that gives you a trustworthy UiViceQ boot environment. That means you need another mechanism to do that measurement for a confidential computer environment. The most natural path for that is to use the launch digest. Because you have the launch measurements, you need to know ahead of time. When you boot the VM in a way, in a way, in a way at boot time, all of the data that you need to launch at the end, which means you need to have the UiViceQ ready to be available including all the add-ons. At which point we go in full circle, I think we are much better off just building a separate UiViceQ for that one set of configuration you're doing. So you can attest that I'm actually running a set of configuration. You don't want your debug add-on in your production fleet. That is, you want to pre-aggressively. So I think the mechanism that is the most natural one here is to go and build a separate one-off UiViceQ even if they're made of add-ons if you want to. Okay. Okay, thank you. Okay. Thank you. We cannot do a vocation only with a firmware. The firmware cannot support a vocation mechanism outside of the DDX. And DDX has both space and around that. If you have a lot of space, if you ditch the microsoft solution, don't use the microsoft solution. Thank you. Bye. We know how it ends. Guys, you are more than welcome to present next year if you want. You are more than welcome to present next year. You are more than welcome.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.44, "text": " Okay. Hello, everyone. My name is Emmanuel Giuseppe Sposto. I'm a software engineer at", "tokens": [50364, 1033, 13, 2425, 11, 1518, 13, 1222, 1315, 307, 44421, 15334, 438, 19833, 1738, 22756, 13, 286, 478, 257, 4722, 11403, 412, 51236], "temperature": 0.0, "avg_logprob": -0.440854870543188, "compression_ratio": 1.2269503546099292, "no_speech_prob": 0.17694582045078278}, {"id": 1, "seek": 0, "start": 17.44, "end": 24.32, "text": " Red Hat. And today I'm talking about the UKI at Donson Extension, how to safely extend", "tokens": [51236, 4477, 15867, 13, 400, 965, 286, 478, 1417, 466, 264, 624, 27731, 412, 1468, 3015, 37034, 11, 577, 281, 11750, 10101, 51580], "temperature": 0.0, "avg_logprob": -0.440854870543188, "compression_ratio": 1.2269503546099292, "no_speech_prob": 0.17694582045078278}, {"id": 2, "seek": 2432, "start": 24.32, "end": 33.96, "text": " UKI, scan and comma line in E3D. So why this talk? First of all, because this is extremely", "tokens": [50364, 624, 27731, 11, 11049, 293, 22117, 1622, 294, 462, 18, 35, 13, 407, 983, 341, 751, 30, 2386, 295, 439, 11, 570, 341, 307, 4664, 50846], "temperature": 0.0, "avg_logprob": -0.29919274212562874, "compression_ratio": 1.4659685863874345, "no_speech_prob": 0.04020038619637489}, {"id": 3, "seek": 2432, "start": 33.96, "end": 42.84, "text": " new stuff, like it's very new, hopefully also exciting. Because there's not a lot of documentation,", "tokens": [50846, 777, 1507, 11, 411, 309, 311, 588, 777, 11, 4696, 611, 4670, 13, 1436, 456, 311, 406, 257, 688, 295, 14333, 11, 51290], "temperature": 0.0, "avg_logprob": -0.29919274212562874, "compression_ratio": 1.4659685863874345, "no_speech_prob": 0.04020038619637489}, {"id": 4, "seek": 2432, "start": 42.84, "end": 52.08, "text": " of course, because this stuff was just merged. And hopefully this talk will also help you", "tokens": [51290, 295, 1164, 11, 570, 341, 1507, 390, 445, 36427, 13, 400, 4696, 341, 751, 486, 611, 854, 291, 51752], "temperature": 0.0, "avg_logprob": -0.29919274212562874, "compression_ratio": 1.4659685863874345, "no_speech_prob": 0.04020038619637489}, {"id": 5, "seek": 5208, "start": 52.08, "end": 59.8, "text": " understand a little bit more about what they are, how to use these addons and so on. And", "tokens": [50364, 1223, 257, 707, 857, 544, 466, 437, 436, 366, 11, 577, 281, 764, 613, 909, 892, 293, 370, 322, 13, 400, 50750], "temperature": 0.0, "avg_logprob": -0.2137956484942369, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.02107771299779415}, {"id": 6, "seek": 5208, "start": 59.8, "end": 66.96, "text": " because they may be very useful because UKI, as also Vitaly explained in this talk one", "tokens": [50750, 570, 436, 815, 312, 588, 4420, 570, 624, 27731, 11, 382, 611, 48307, 88, 8825, 294, 341, 751, 472, 51108], "temperature": 0.0, "avg_logprob": -0.2137956484942369, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.02107771299779415}, {"id": 7, "seek": 5208, "start": 66.96, "end": 75.48, "text": " hour ago, is pretty static on the point of comma line in E3D. And with these addons,", "tokens": [51108, 1773, 2057, 11, 307, 1238, 13437, 322, 264, 935, 295, 22117, 1622, 294, 462, 18, 35, 13, 400, 365, 613, 909, 892, 11, 51534], "temperature": 0.0, "avg_logprob": -0.2137956484942369, "compression_ratio": 1.4606741573033708, "no_speech_prob": 0.02107771299779415}, {"id": 8, "seek": 7548, "start": 75.48, "end": 84.12, "text": " we can extend it, these two things without sacrificing the security. And also, yeah,", "tokens": [50364, 321, 393, 10101, 309, 11, 613, 732, 721, 1553, 42294, 264, 3825, 13, 400, 611, 11, 1338, 11, 50796], "temperature": 0.0, "avg_logprob": -0.24018190867865263, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.01924530602991581}, {"id": 9, "seek": 7548, "start": 84.12, "end": 90.92, "text": " this attempt to advertise a little bit to UKI, so what they are to the more public to", "tokens": [50796, 341, 5217, 281, 35379, 257, 707, 857, 281, 624, 27731, 11, 370, 437, 436, 366, 281, 264, 544, 1908, 281, 51136], "temperature": 0.0, "avg_logprob": -0.24018190867865263, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.01924530602991581}, {"id": 10, "seek": 7548, "start": 90.92, "end": 97.88000000000001, "text": " be more recognized. So let's look first at Vitaly's slides. These are from last year,", "tokens": [51136, 312, 544, 9823, 13, 407, 718, 311, 574, 700, 412, 48307, 88, 311, 9788, 13, 1981, 366, 490, 1036, 1064, 11, 51484], "temperature": 0.0, "avg_logprob": -0.24018190867865263, "compression_ratio": 1.4143646408839778, "no_speech_prob": 0.01924530602991581}, {"id": 11, "seek": 9788, "start": 97.88, "end": 106.8, "text": " I think. So I will just briefly go through this. So Confidential VM provides data protection", "tokens": [50364, 286, 519, 13, 407, 286, 486, 445, 10515, 352, 807, 341, 13, 407, 11701, 1078, 831, 18038, 6417, 1412, 6334, 50810], "temperature": 0.0, "avg_logprob": -0.23210782590119736, "compression_ratio": 1.4861878453038675, "no_speech_prob": 0.36915507912635803}, {"id": 12, "seek": 9788, "start": 106.8, "end": 116.64, "text": " from the host he runs on. So we are protecting the VM from the hypervisor because it could", "tokens": [50810, 490, 264, 3975, 415, 6676, 322, 13, 407, 321, 366, 12316, 264, 18038, 490, 264, 9848, 16457, 570, 309, 727, 51302], "temperature": 0.0, "avg_logprob": -0.23210782590119736, "compression_ratio": 1.4861878453038675, "no_speech_prob": 0.36915507912635803}, {"id": 13, "seek": 9788, "start": 116.64, "end": 123.56, "text": " be malicious and it's privileged, so we can access the VM and we don't want that. The", "tokens": [51302, 312, 33496, 293, 309, 311, 25293, 11, 370, 321, 393, 2105, 264, 18038, 293, 321, 500, 380, 528, 300, 13, 440, 51648], "temperature": 0.0, "avg_logprob": -0.23210782590119736, "compression_ratio": 1.4861878453038675, "no_speech_prob": 0.36915507912635803}, {"id": 14, "seek": 12356, "start": 123.56, "end": 131.32, "text": " host is still able to disrupt the execution of the VM. And there are specific hardware,", "tokens": [50364, 3975, 307, 920, 1075, 281, 14124, 264, 15058, 295, 264, 18038, 13, 400, 456, 366, 2685, 8837, 11, 50752], "temperature": 0.0, "avg_logprob": -0.2479385497078063, "compression_ratio": 1.4, "no_speech_prob": 0.0048530264757573605}, {"id": 15, "seek": 12356, "start": 131.32, "end": 138.4, "text": " SV, SMP and TDX responsible for encrypting memory and CPU. And storage encryption is", "tokens": [50752, 31910, 11, 318, 12224, 293, 42606, 55, 6250, 337, 17972, 662, 278, 4675, 293, 13199, 13, 400, 6725, 29575, 307, 51106], "temperature": 0.0, "avg_logprob": -0.2479385497078063, "compression_ratio": 1.4, "no_speech_prob": 0.0048530264757573605}, {"id": 16, "seek": 12356, "start": 138.4, "end": 143.32, "text": " necessary for security and must be done by the guest OS. This was already explained by", "tokens": [51106, 4818, 337, 3825, 293, 1633, 312, 1096, 538, 264, 8341, 12731, 13, 639, 390, 1217, 8825, 538, 51352], "temperature": 0.0, "avg_logprob": -0.2479385497078063, "compression_ratio": 1.4, "no_speech_prob": 0.0048530264757573605}, {"id": 17, "seek": 14332, "start": 143.32, "end": 152.72, "text": " Vitaly. And usually the situation that we have is that we usually encrypt, we have the", "tokens": [50364, 48307, 88, 13, 400, 2673, 264, 2590, 300, 321, 362, 307, 300, 321, 2673, 17972, 662, 11, 321, 362, 264, 50834], "temperature": 0.0, "avg_logprob": -0.3113950188480206, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.09373199194669724}, {"id": 18, "seek": 14332, "start": 152.72, "end": 161.56, "text": " encrypted part and while the kernel is signed by the vendor, in NITRA MFS and the common", "tokens": [50834, 36663, 644, 293, 1339, 264, 28256, 307, 8175, 538, 264, 24321, 11, 294, 426, 3927, 3750, 376, 29318, 293, 264, 2689, 51276], "temperature": 0.0, "avg_logprob": -0.3113950188480206, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.09373199194669724}, {"id": 19, "seek": 14332, "start": 161.56, "end": 168.95999999999998, "text": " line are locally produced, are not signed and also it's difficult to measure them, of", "tokens": [51276, 1622, 366, 16143, 7126, 11, 366, 406, 8175, 293, 611, 309, 311, 2252, 281, 3481, 552, 11, 295, 51646], "temperature": 0.0, "avg_logprob": -0.3113950188480206, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.09373199194669724}, {"id": 20, "seek": 16896, "start": 168.96, "end": 176.36, "text": " course. Whereas with the UKI unified kernel images, basically a single binary produced", "tokens": [50364, 1164, 13, 13813, 365, 264, 624, 27731, 26787, 28256, 5267, 11, 1936, 257, 2167, 17434, 7126, 50734], "temperature": 0.0, "avg_logprob": -0.33790553166316106, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.05483953654766083}, {"id": 21, "seek": 16896, "start": 176.36, "end": 185.12, "text": " and signed by the vendor, in this case Red Hat. And it basically contains the important", "tokens": [50734, 293, 8175, 538, 264, 24321, 11, 294, 341, 1389, 4477, 15867, 13, 400, 309, 1936, 8306, 264, 1021, 51172], "temperature": 0.0, "avg_logprob": -0.33790553166316106, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.05483953654766083}, {"id": 22, "seek": 16896, "start": 185.12, "end": 192.76000000000002, "text": " parts, the RP sections together with the signature, there is the kernel, the NITRA MFS and there", "tokens": [51172, 3166, 11, 264, 14105, 10863, 1214, 365, 264, 13397, 11, 456, 307, 264, 28256, 11, 264, 426, 3927, 3750, 376, 29318, 293, 456, 51554], "temperature": 0.0, "avg_logprob": -0.33790553166316106, "compression_ratio": 1.4648648648648648, "no_speech_prob": 0.05483953654766083}, {"id": 23, "seek": 19276, "start": 192.76, "end": 202.0, "text": " is also the common line as a separate section that is then feed to the kernel. Before going", "tokens": [50364, 307, 611, 264, 2689, 1622, 382, 257, 4994, 3541, 300, 307, 550, 3154, 281, 264, 28256, 13, 4546, 516, 50826], "temperature": 0.0, "avg_logprob": -0.2603155495463938, "compression_ratio": 1.6280487804878048, "no_speech_prob": 0.07125761359930038}, {"id": 24, "seek": 19276, "start": 202.0, "end": 210.44, "text": " to the next details, I wanted also to explain like the use case, like yeah, the use case", "tokens": [50826, 281, 264, 958, 4365, 11, 286, 1415, 611, 281, 2903, 411, 264, 764, 1389, 11, 411, 1338, 11, 264, 764, 1389, 51248], "temperature": 0.0, "avg_logprob": -0.2603155495463938, "compression_ratio": 1.6280487804878048, "no_speech_prob": 0.07125761359930038}, {"id": 25, "seek": 19276, "start": 210.44, "end": 216.84, "text": " in this case for this talk, that we have the UFI, the firmware that is in terms called", "tokens": [51248, 294, 341, 1389, 337, 341, 751, 11, 300, 321, 362, 264, 624, 38568, 11, 264, 30289, 300, 307, 294, 2115, 1219, 51568], "temperature": 0.0, "avg_logprob": -0.2603155495463938, "compression_ratio": 1.6280487804878048, "no_speech_prob": 0.07125761359930038}, {"id": 26, "seek": 21684, "start": 216.84, "end": 223.04, "text": " shim the boot loader, which in terms called system distap which is very key piece for", "tokens": [50364, 402, 332, 264, 11450, 3677, 260, 11, 597, 294, 2115, 1219, 1185, 1483, 569, 597, 307, 588, 2141, 2522, 337, 50674], "temperature": 0.0, "avg_logprob": -0.37425997485853224, "compression_ratio": 1.502824858757062, "no_speech_prob": 0.030992139130830765}, {"id": 27, "seek": 21684, "start": 223.04, "end": 229.64000000000001, "text": " the add-ons and on both the kernel and common line the NITRA MFS which in turn unpacks the", "tokens": [50674, 264, 909, 12, 892, 293, 322, 1293, 264, 28256, 293, 2689, 1622, 264, 426, 3927, 3750, 376, 29318, 597, 294, 1261, 20994, 7424, 264, 51004], "temperature": 0.0, "avg_logprob": -0.37425997485853224, "compression_ratio": 1.502824858757062, "no_speech_prob": 0.030992139130830765}, {"id": 28, "seek": 21684, "start": 229.64000000000001, "end": 238.6, "text": " UKI and gets the kernel and runs the OS. The issue that also Vitaly mentioned is that the", "tokens": [51004, 624, 27731, 293, 2170, 264, 28256, 293, 6676, 264, 12731, 13, 440, 2734, 300, 611, 48307, 88, 2835, 307, 300, 264, 51452], "temperature": 0.0, "avg_logprob": -0.37425997485853224, "compression_ratio": 1.502824858757062, "no_speech_prob": 0.030992139130830765}, {"id": 29, "seek": 23860, "start": 238.6, "end": 247.56, "text": " kernel line is immutable and is something that we don't like because there are limitations", "tokens": [50364, 28256, 1622, 307, 3397, 32148, 293, 307, 746, 300, 321, 500, 380, 411, 570, 456, 366, 15705, 50812], "temperature": 0.0, "avg_logprob": -0.19340111779384925, "compression_ratio": 1.5780346820809248, "no_speech_prob": 0.28067198395729065}, {"id": 30, "seek": 23860, "start": 247.56, "end": 252.95999999999998, "text": " and you cannot have a static common line for every use case that you have, there is a crash", "tokens": [50812, 293, 291, 2644, 362, 257, 13437, 2689, 1622, 337, 633, 764, 1389, 300, 291, 362, 11, 456, 307, 257, 8252, 51082], "temperature": 0.0, "avg_logprob": -0.19340111779384925, "compression_ratio": 1.5780346820809248, "no_speech_prob": 0.28067198395729065}, {"id": 31, "seek": 23860, "start": 252.95999999999998, "end": 261.15999999999997, "text": " kernel options, debugging options and we cannot ship different UKI for every basically use", "tokens": [51082, 28256, 3956, 11, 45592, 3956, 293, 321, 2644, 5374, 819, 624, 27731, 337, 633, 1936, 764, 51492], "temperature": 0.0, "avg_logprob": -0.19340111779384925, "compression_ratio": 1.5780346820809248, "no_speech_prob": 0.28067198395729065}, {"id": 32, "seek": 26116, "start": 261.16, "end": 268.44, "text": " case. So what we are aiming for the UKI kernel common line is it cannot be static as I said", "tokens": [50364, 1389, 13, 407, 437, 321, 366, 20253, 337, 264, 624, 27731, 28256, 2689, 1622, 307, 309, 2644, 312, 13437, 382, 286, 848, 50728], "temperature": 0.0, "avg_logprob": -0.1854383629488658, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.2953897714614868}, {"id": 33, "seek": 26116, "start": 268.44, "end": 275.8, "text": " because there are different use case, it has to be secure so whoever modifies the common", "tokens": [50728, 570, 456, 366, 819, 764, 1389, 11, 309, 575, 281, 312, 7144, 370, 11387, 1072, 11221, 264, 2689, 51096], "temperature": 0.0, "avg_logprob": -0.1854383629488658, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.2953897714614868}, {"id": 34, "seek": 26116, "start": 275.8, "end": 281.40000000000003, "text": " line has to be authenticated otherwise the whole point of confidential computing is lost", "tokens": [51096, 1622, 575, 281, 312, 9214, 3587, 5911, 264, 1379, 935, 295, 27054, 15866, 307, 2731, 51376], "temperature": 0.0, "avg_logprob": -0.1854383629488658, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.2953897714614868}, {"id": 35, "seek": 26116, "start": 281.40000000000003, "end": 288.12, "text": " and by default nobody because the common line is inserted inside the UKI and then is signed", "tokens": [51376, 293, 538, 7576, 5079, 570, 264, 2689, 1622, 307, 27992, 1854, 264, 624, 27731, 293, 550, 307, 8175, 51712], "temperature": 0.0, "avg_logprob": -0.1854383629488658, "compression_ratio": 1.7190476190476192, "no_speech_prob": 0.2953897714614868}, {"id": 36, "seek": 28812, "start": 288.2, "end": 294.12, "text": " so you cannot modify it anymore and has to be extensible of course because we don't want to", "tokens": [50368, 370, 291, 2644, 16927, 309, 3602, 293, 575, 281, 312, 1279, 30633, 295, 1164, 570, 321, 500, 380, 528, 281, 50664], "temperature": 0.0, "avg_logprob": -0.17458741561226224, "compression_ratio": 1.6205357142857142, "no_speech_prob": 0.004659560043364763}, {"id": 37, "seek": 28812, "start": 294.12, "end": 305.24, "text": " ship a new UKI every single time. There are already ways for the one that are no UKIs to", "tokens": [50664, 5374, 257, 777, 624, 27731, 633, 2167, 565, 13, 821, 366, 1217, 2098, 337, 264, 472, 300, 366, 572, 624, 27731, 82, 281, 51220], "temperature": 0.0, "avg_logprob": -0.17458741561226224, "compression_ratio": 1.6205357142857142, "no_speech_prob": 0.004659560043364763}, {"id": 38, "seek": 28812, "start": 305.24, "end": 311.4, "text": " extend to add kernel common line to a new UKI but it's a little bit when we talk about", "tokens": [51220, 10101, 281, 909, 28256, 2689, 1622, 281, 257, 777, 624, 27731, 457, 309, 311, 257, 707, 857, 562, 321, 751, 466, 51528], "temperature": 0.0, "avg_logprob": -0.17458741561226224, "compression_ratio": 1.6205357142857142, "no_speech_prob": 0.004659560043364763}, {"id": 39, "seek": 28812, "start": 311.4, "end": 316.68, "text": " confidential virtual machine it's a little bit tricky because as again I'll show you the option", "tokens": [51528, 27054, 6374, 3479, 309, 311, 257, 707, 857, 12414, 570, 382, 797, 286, 603, 855, 291, 264, 3614, 51792], "temperature": 0.0, "avg_logprob": -0.17458741561226224, "compression_ratio": 1.6205357142857142, "no_speech_prob": 0.004659560043364763}, {"id": 40, "seek": 31668, "start": 316.68, "end": 325.48, "text": " and you need to trust a lot of parts. So as I said there is the common line section it's embedded", "tokens": [50364, 293, 291, 643, 281, 3361, 257, 688, 295, 3166, 13, 407, 382, 286, 848, 456, 307, 264, 2689, 1622, 3541, 309, 311, 16741, 50804], "temperature": 0.0, "avg_logprob": -0.26648391047610515, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0045027355663478374}, {"id": 41, "seek": 31668, "start": 325.48, "end": 336.12, "text": " in UKI, it's generated with UKI, it's secure, it's shipped with UKI altogether but it's static,", "tokens": [50804, 294, 624, 27731, 11, 309, 311, 10833, 365, 624, 27731, 11, 309, 311, 7144, 11, 309, 311, 25312, 365, 624, 27731, 19051, 457, 309, 311, 13437, 11, 51336], "temperature": 0.0, "avg_logprob": -0.26648391047610515, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0045027355663478374}, {"id": 42, "seek": 31668, "start": 336.92, "end": 345.8, "text": " you cannot be modified. Then there is FI shell which is looked by system distable if the common", "tokens": [51376, 291, 2644, 312, 15873, 13, 1396, 456, 307, 479, 40, 8720, 597, 307, 2956, 538, 1185, 1483, 712, 498, 264, 2689, 51820], "temperature": 0.0, "avg_logprob": -0.26648391047610515, "compression_ratio": 1.5792349726775956, "no_speech_prob": 0.0045027355663478374}, {"id": 43, "seek": 34580, "start": 346.12, "end": 351.96000000000004, "text": " line section inside the UKI is missing many distro for example they ship always something in the", "tokens": [50380, 1622, 3541, 1854, 264, 624, 27731, 307, 5361, 867, 1483, 340, 337, 1365, 436, 5374, 1009, 746, 294, 264, 50672], "temperature": 0.0, "avg_logprob": -0.1452165227947813, "compression_ratio": 1.5543478260869565, "no_speech_prob": 0.01269103866070509}, {"id": 44, "seek": 34580, "start": 351.96000000000004, "end": 359.96000000000004, "text": " common line section inside the UKI so it's ignored. It's useful usually for type 1 entries but", "tokens": [50672, 2689, 1622, 3541, 1854, 264, 624, 27731, 370, 309, 311, 19735, 13, 467, 311, 4420, 2673, 337, 2010, 502, 23041, 457, 51072], "temperature": 0.0, "avg_logprob": -0.1452165227947813, "compression_ratio": 1.5543478260869565, "no_speech_prob": 0.01269103866070509}, {"id": 45, "seek": 34580, "start": 361.40000000000003, "end": 368.2, "text": " again it's unsafe because an attacker can easily inject its own parameter through the FI shell", "tokens": [51144, 797, 309, 311, 35948, 570, 364, 35871, 393, 3612, 10711, 1080, 1065, 13075, 807, 264, 479, 40, 8720, 51484], "temperature": 0.0, "avg_logprob": -0.1452165227947813, "compression_ratio": 1.5543478260869565, "no_speech_prob": 0.01269103866070509}, {"id": 46, "seek": 36820, "start": 368.2, "end": 378.36, "text": " that's why it was disabled for CVMs so you cannot extend the kernel common line with the FI shell.", "tokens": [50364, 300, 311, 983, 309, 390, 15191, 337, 22995, 26386, 370, 291, 2644, 10101, 264, 28256, 2689, 1622, 365, 264, 479, 40, 8720, 13, 50872], "temperature": 0.0, "avg_logprob": -0.17528621570484057, "compression_ratio": 1.4106280193236715, "no_speech_prob": 0.009159726090729237}, {"id": 47, "seek": 36820, "start": 379.32, "end": 385.96, "text": " There is SM BIOS system management BIOS, embedded metal this is good, it's trusted because it's", "tokens": [50920, 821, 307, 13115, 23524, 4367, 1185, 4592, 23524, 4367, 11, 16741, 5760, 341, 307, 665, 11, 309, 311, 16034, 570, 309, 311, 51252], "temperature": 0.0, "avg_logprob": -0.17528621570484057, "compression_ratio": 1.4106280193236715, "no_speech_prob": 0.009159726090729237}, {"id": 48, "seek": 36820, "start": 385.96, "end": 392.84, "text": " coming from firmware and BIOS but it doesn't apply on CVMs again the hypervisor can easily inject", "tokens": [51252, 1348, 490, 30289, 293, 23524, 4367, 457, 309, 1177, 380, 3079, 322, 22995, 26386, 797, 264, 9848, 16457, 393, 3612, 10711, 51596], "temperature": 0.0, "avg_logprob": -0.17528621570484057, "compression_ratio": 1.4106280193236715, "no_speech_prob": 0.009159726090729237}, {"id": 49, "seek": 39284, "start": 393.64, "end": 402.03999999999996, "text": " kernel common line. So yeah as I said it's not good so it was also this was disabled", "tokens": [50404, 28256, 2689, 1622, 13, 407, 1338, 382, 286, 848, 309, 311, 406, 665, 370, 309, 390, 611, 341, 390, 15191, 50824], "temperature": 0.0, "avg_logprob": -0.1953264734019404, "compression_ratio": 1.4891304347826086, "no_speech_prob": 0.016142353415489197}, {"id": 50, "seek": 39284, "start": 402.84, "end": 409.15999999999997, "text": " and then there is QM firmware configuration by the name you can already figure that this is", "tokens": [50864, 293, 550, 456, 307, 1249, 44, 30289, 11694, 538, 264, 1315, 291, 393, 1217, 2573, 300, 341, 307, 51180], "temperature": 0.0, "avg_logprob": -0.1953264734019404, "compression_ratio": 1.4891304347826086, "no_speech_prob": 0.016142353415489197}, {"id": 51, "seek": 39284, "start": 409.15999999999997, "end": 419.79999999999995, "text": " only from QM it's again coming from hypervisor so also disabled. Then what do we do? Our proposal", "tokens": [51180, 787, 490, 1249, 44, 309, 311, 797, 1348, 490, 9848, 16457, 370, 611, 15191, 13, 1396, 437, 360, 321, 360, 30, 2621, 11494, 51712], "temperature": 0.0, "avg_logprob": -0.1953264734019404, "compression_ratio": 1.4891304347826086, "no_speech_prob": 0.016142353415489197}, {"id": 52, "seek": 41980, "start": 419.8, "end": 426.36, "text": " initially upstream was an allow list basically an allow list is another P section where you", "tokens": [50364, 9105, 33915, 390, 364, 2089, 1329, 1936, 364, 2089, 1329, 307, 1071, 430, 3541, 689, 291, 50692], "temperature": 0.0, "avg_logprob": -0.13508003345434216, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.013963518664240837}, {"id": 53, "seek": 41980, "start": 427.08, "end": 435.32, "text": " use regex globbing and whatever just something like this to parse the common line that you want to", "tokens": [50728, 764, 319, 432, 87, 16125, 4324, 293, 2035, 445, 746, 411, 341, 281, 48377, 264, 2689, 1622, 300, 291, 528, 281, 51140], "temperature": 0.0, "avg_logprob": -0.13508003345434216, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.013963518664240837}, {"id": 54, "seek": 41980, "start": 435.32, "end": 442.68, "text": " get and the easy case will be if there is something that we don't accept in the regex we just discard", "tokens": [51140, 483, 293, 264, 1858, 1389, 486, 312, 498, 456, 307, 746, 300, 321, 500, 380, 3241, 294, 264, 319, 432, 87, 321, 445, 31597, 51508], "temperature": 0.0, "avg_logprob": -0.13508003345434216, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.013963518664240837}, {"id": 55, "seek": 44268, "start": 442.92, "end": 450.52, "text": " the whole common line but the common line would come from FI shell SM BIOS all these sources but", "tokens": [50376, 264, 1379, 2689, 1622, 457, 264, 2689, 1622, 576, 808, 490, 479, 40, 8720, 13115, 23524, 4367, 439, 613, 7139, 457, 50756], "temperature": 0.0, "avg_logprob": -0.15900655972060337, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.020995166152715683}, {"id": 56, "seek": 44268, "start": 450.52, "end": 459.32, "text": " we try to filter and system desktop does the parsing. The advantage is of course that we can reject", "tokens": [50756, 321, 853, 281, 6608, 293, 1185, 14502, 775, 264, 21156, 278, 13, 440, 5002, 307, 295, 1164, 300, 321, 393, 8248, 51196], "temperature": 0.0, "avg_logprob": -0.15900655972060337, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.020995166152715683}, {"id": 57, "seek": 44268, "start": 459.32, "end": 465.16, "text": " what we don't want but the problem is just moved to another place because then you can do", "tokens": [51196, 437, 321, 500, 380, 528, 457, 264, 1154, 307, 445, 4259, 281, 1071, 1081, 570, 550, 291, 393, 360, 51488], "temperature": 0.0, "avg_logprob": -0.15900655972060337, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.020995166152715683}, {"id": 58, "seek": 44268, "start": 466.12, "end": 472.04, "text": " attacks on the regex and globbing because they need to be very careful formulated so what's also", "tokens": [51536, 8122, 322, 264, 319, 432, 87, 293, 16125, 4324, 570, 436, 643, 281, 312, 588, 5026, 1254, 6987, 370, 437, 311, 611, 51832], "temperature": 0.0, "avg_logprob": -0.15900655972060337, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.020995166152715683}, {"id": 59, "seek": 47204, "start": 472.04, "end": 480.20000000000005, "text": " this was disabled so was rejected actually and eventually we have the solution the system D solution", "tokens": [50364, 341, 390, 15191, 370, 390, 15749, 767, 293, 4728, 321, 362, 264, 3827, 264, 1185, 413, 3827, 50772], "temperature": 0.0, "avg_logprob": -0.24325552582740784, "compression_ratio": 1.5942857142857143, "no_speech_prob": 0.0007764245383441448}, {"id": 60, "seek": 47204, "start": 480.20000000000005, "end": 489.16, "text": " nuclei addons. Nuclei addons is basically another separate binary which is contains a", "tokens": [50772, 49919, 909, 892, 13, 426, 1311, 35436, 909, 892, 307, 1936, 1071, 4994, 17434, 597, 307, 8306, 257, 51220], "temperature": 0.0, "avg_logprob": -0.24325552582740784, "compression_ratio": 1.5942857142857143, "no_speech_prob": 0.0007764245383441448}, {"id": 61, "seek": 47204, "start": 490.28000000000003, "end": 498.76, "text": " very few P section one of these is the common line and it's signed by yeah can be signed but", "tokens": [51276, 588, 1326, 430, 3541, 472, 295, 613, 307, 264, 2689, 1622, 293, 309, 311, 8175, 538, 1338, 393, 312, 8175, 457, 51700], "temperature": 0.0, "avg_logprob": -0.24325552582740784, "compression_ratio": 1.5942857142857143, "no_speech_prob": 0.0007764245383441448}, {"id": 62, "seek": 49876, "start": 498.84, "end": 505.71999999999997, "text": " should be signed for the CVMs and we take advantage of shim validate function offered by shim", "tokens": [50368, 820, 312, 8175, 337, 264, 22995, 26386, 293, 321, 747, 5002, 295, 402, 332, 29562, 2445, 8059, 538, 402, 332, 50712], "temperature": 0.0, "avg_logprob": -0.12905597686767578, "compression_ratio": 1.5614973262032086, "no_speech_prob": 0.001959789777174592}, {"id": 63, "seek": 49876, "start": 506.84, "end": 513.08, "text": " to validate the P signature so basically this means that system desktop will ask shim to validate if", "tokens": [50768, 281, 29562, 264, 430, 13397, 370, 1936, 341, 1355, 300, 1185, 14502, 486, 1029, 402, 332, 281, 29562, 498, 51080], "temperature": 0.0, "avg_logprob": -0.12905597686767578, "compression_ratio": 1.5614973262032086, "no_speech_prob": 0.001959789777174592}, {"id": 64, "seek": 49876, "start": 513.08, "end": 519.72, "text": " the binary has been signed by some key that we trust in the secure boot database. There is a very", "tokens": [51080, 264, 17434, 575, 668, 8175, 538, 512, 2141, 300, 321, 3361, 294, 264, 7144, 11450, 8149, 13, 821, 307, 257, 588, 51412], "temperature": 0.0, "avg_logprob": -0.12905597686767578, "compression_ratio": 1.5614973262032086, "no_speech_prob": 0.001959789777174592}, {"id": 65, "seek": 51972, "start": 519.72, "end": 529.96, "text": " useful tool UQFI in system D upstream it's you can create UQIs very easily very better than", "tokens": [50364, 4420, 2290, 624, 48, 38568, 294, 1185, 413, 33915, 309, 311, 291, 393, 1884, 624, 48, 6802, 588, 3612, 588, 1101, 813, 50876], "temperature": 0.0, "avg_logprob": -0.21786749852846746, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.012215075083076954}, {"id": 66, "seek": 51972, "start": 529.96, "end": 539.08, "text": " drag up and object copy and you can also create addons and yeah basically the common line is very", "tokens": [50876, 5286, 493, 293, 2657, 5055, 293, 291, 393, 611, 1884, 909, 892, 293, 1338, 1936, 264, 2689, 1622, 307, 588, 51332], "temperature": 0.0, "avg_logprob": -0.21786749852846746, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.012215075083076954}, {"id": 67, "seek": 51972, "start": 539.08, "end": 549.24, "text": " easy you can also provide the keys when you want to sign your own addon so it's this is the solution.", "tokens": [51332, 1858, 291, 393, 611, 2893, 264, 9317, 562, 291, 528, 281, 1465, 428, 1065, 909, 266, 370, 309, 311, 341, 307, 264, 3827, 13, 51840], "temperature": 0.0, "avg_logprob": -0.21786749852846746, "compression_ratio": 1.598901098901099, "no_speech_prob": 0.012215075083076954}, {"id": 68, "seek": 54972, "start": 549.96, "end": 559.8000000000001, "text": " So how UQI works the workflow is UQFI first you create the addons so you ask UQFI to create an", "tokens": [50376, 407, 577, 624, 48, 40, 1985, 264, 20993, 307, 624, 48, 38568, 700, 291, 1884, 264, 909, 892, 370, 291, 1029, 624, 48, 38568, 281, 1884, 364, 50868], "temperature": 0.0, "avg_logprob": -0.1377206978045012, "compression_ratio": 1.6149425287356323, "no_speech_prob": 0.001504676416516304}, {"id": 69, "seek": 54972, "start": 559.8000000000001, "end": 566.6800000000001, "text": " addon with the common line that you want then the addons it needs to be put in the specific", "tokens": [50868, 909, 266, 365, 264, 2689, 1622, 300, 291, 528, 550, 264, 909, 892, 309, 2203, 281, 312, 829, 294, 264, 2685, 51212], "temperature": 0.0, "avg_logprob": -0.1377206978045012, "compression_ratio": 1.6149425287356323, "no_speech_prob": 0.001504676416516304}, {"id": 70, "seek": 54972, "start": 566.6800000000001, "end": 573.72, "text": " location in the ESP I will show you later where exactly is this system this tab looks for this", "tokens": [51212, 4914, 294, 264, 12564, 47, 286, 486, 855, 291, 1780, 689, 2293, 307, 341, 1185, 341, 4421, 1542, 337, 341, 51564], "temperature": 0.0, "avg_logprob": -0.1377206978045012, "compression_ratio": 1.6149425287356323, "no_speech_prob": 0.001504676416516304}, {"id": 71, "seek": 57372, "start": 573.72, "end": 581.96, "text": " location and finds automatically the addons asks shim calling shim verify on the addon to verify the", "tokens": [50364, 4914, 293, 10704, 6772, 264, 909, 892, 8962, 402, 332, 5141, 402, 332, 16888, 322, 264, 909, 266, 281, 16888, 264, 50776], "temperature": 0.0, "avg_logprob": -0.12460998639668504, "compression_ratio": 1.813664596273292, "no_speech_prob": 0.005822619888931513}, {"id": 72, "seek": 57372, "start": 582.6800000000001, "end": 589.0, "text": " if the addon is trusted so it's signed by somebody that we trust and then if a leadation is successful", "tokens": [50812, 498, 264, 909, 266, 307, 16034, 370, 309, 311, 8175, 538, 2618, 300, 321, 3361, 293, 550, 498, 257, 1477, 399, 307, 4406, 51128], "temperature": 0.0, "avg_logprob": -0.12460998639668504, "compression_ratio": 1.813664596273292, "no_speech_prob": 0.005822619888931513}, {"id": 73, "seek": 57372, "start": 589.0, "end": 595.72, "text": " we read the addon the system read the addon and appends the common line inside the addon", "tokens": [51128, 321, 1401, 264, 909, 266, 264, 1185, 1401, 264, 909, 266, 293, 724, 2581, 264, 2689, 1622, 1854, 264, 909, 266, 51464], "temperature": 0.0, "avg_logprob": -0.12460998639668504, "compression_ratio": 1.813664596273292, "no_speech_prob": 0.005822619888931513}, {"id": 74, "seek": 59572, "start": 595.72, "end": 603.24, "text": " to the UQI common line section to extend it and then it's provided to VM linux to", "tokens": [50364, 281, 264, 624, 48, 40, 2689, 1622, 3541, 281, 10101, 309, 293, 550, 309, 311, 5649, 281, 18038, 22896, 2449, 281, 50740], "temperature": 0.0, "avg_logprob": -0.10834624103664123, "compression_ratio": 1.748792270531401, "no_speech_prob": 0.004254811909049749}, {"id": 75, "seek": 59572, "start": 603.24, "end": 610.44, "text": " start links with the new common line there are two kinds of addons there is global and local", "tokens": [50740, 722, 6123, 365, 264, 777, 2689, 1622, 456, 366, 732, 3685, 295, 909, 892, 456, 307, 4338, 293, 2654, 51100], "temperature": 0.0, "avg_logprob": -0.10834624103664123, "compression_ratio": 1.748792270531401, "no_speech_prob": 0.004254811909049749}, {"id": 76, "seek": 59572, "start": 610.44, "end": 618.0400000000001, "text": " addons so global addons can be applied to all installed UQIs and this is the location and UQFI", "tokens": [51100, 909, 892, 370, 4338, 909, 892, 393, 312, 6456, 281, 439, 8899, 624, 48, 6802, 293, 341, 307, 264, 4914, 293, 624, 48, 38568, 51480], "temperature": 0.0, "avg_logprob": -0.10834624103664123, "compression_ratio": 1.748792270531401, "no_speech_prob": 0.004254811909049749}, {"id": 77, "seek": 59572, "start": 618.0400000000001, "end": 623.72, "text": " UQI specific addons so if you want to apply all these to one specific UQI you have installed", "tokens": [51480, 624, 48, 40, 2685, 909, 892, 370, 498, 291, 528, 281, 3079, 439, 613, 281, 472, 2685, 624, 48, 40, 291, 362, 8899, 51764], "temperature": 0.0, "avg_logprob": -0.10834624103664123, "compression_ratio": 1.748792270531401, "no_speech_prob": 0.004254811909049749}, {"id": 78, "seek": 62372, "start": 623.72, "end": 632.6, "text": " has to be provided in the UQI name has to be in an extra d folder in the same location where your", "tokens": [50364, 575, 281, 312, 5649, 294, 264, 624, 48, 40, 1315, 575, 281, 312, 294, 364, 2857, 274, 10820, 294, 264, 912, 4914, 689, 428, 50808], "temperature": 0.0, "avg_logprob": -0.12110049015766866, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.00791092962026596}, {"id": 79, "seek": 62372, "start": 632.6, "end": 642.2, "text": " UQI is and then has to be put in there just naming convention because last time I checked the system", "tokens": [50808, 624, 48, 40, 307, 293, 550, 575, 281, 312, 829, 294, 456, 445, 25290, 10286, 570, 1036, 565, 286, 10033, 264, 1185, 51288], "temperature": 0.0, "avg_logprob": -0.12110049015766866, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.00791092962026596}, {"id": 80, "seek": 62372, "start": 642.2, "end": 647.4, "text": " this tab was checking for also the extension name and this kind of stuff so you need to get them", "tokens": [51288, 341, 4421, 390, 8568, 337, 611, 264, 10320, 1315, 293, 341, 733, 295, 1507, 370, 291, 643, 281, 483, 552, 51548], "temperature": 0.0, "avg_logprob": -0.12110049015766866, "compression_ratio": 1.6480446927374302, "no_speech_prob": 0.00791092962026596}, {"id": 81, "seek": 64740, "start": 647.4, "end": 661.0, "text": " right UQIs are always located in the this part AFI linux UQIs always ends with the AFI and addons", "tokens": [50364, 558, 624, 48, 6802, 366, 1009, 6870, 294, 264, 341, 644, 20389, 40, 22896, 2449, 624, 48, 6802, 1009, 5314, 365, 264, 20389, 40, 293, 909, 892, 51044], "temperature": 0.0, "avg_logprob": -0.23366739038835493, "compression_ratio": 1.5039370078740157, "no_speech_prob": 0.011144145391881466}, {"id": 82, "seek": 64740, "start": 661.0, "end": 669.16, "text": " is dot addon dot AFI and specific addons here as I said you need to be located in the extra d", "tokens": [51044, 307, 5893, 909, 266, 5893, 20389, 40, 293, 2685, 909, 892, 510, 382, 286, 848, 291, 643, 281, 312, 6870, 294, 264, 2857, 274, 51452], "temperature": 0.0, "avg_logprob": -0.23366739038835493, "compression_ratio": 1.5039370078740157, "no_speech_prob": 0.011144145391881466}, {"id": 83, "seek": 66916, "start": 669.16, "end": 680.1999999999999, "text": " folder okay so next next step is what is but white self so suppose that we as a vendor we", "tokens": [50364, 10820, 1392, 370, 958, 958, 1823, 307, 437, 307, 457, 2418, 2698, 370, 7297, 300, 321, 382, 257, 24321, 321, 50916], "temperature": 0.0, "avg_logprob": -0.21141774124569362, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.020220158621668816}, {"id": 84, "seek": 66916, "start": 680.92, "end": 687.64, "text": " shipped a new key I common line addon and we signed it and everybody's using it and then we figured", "tokens": [50952, 25312, 257, 777, 2141, 286, 2689, 1622, 909, 266, 293, 321, 8175, 309, 293, 2201, 311, 1228, 309, 293, 550, 321, 8932, 51288], "temperature": 0.0, "avg_logprob": -0.21141774124569362, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.020220158621668816}, {"id": 85, "seek": 66916, "start": 687.64, "end": 695.9599999999999, "text": " the common line as an issue then what do we do because we signed it as a vendor so what it's", "tokens": [51288, 264, 2689, 1622, 382, 364, 2734, 550, 437, 360, 321, 360, 570, 321, 8175, 309, 382, 257, 24321, 370, 437, 309, 311, 51704], "temperature": 0.0, "avg_logprob": -0.21141774124569362, "compression_ratio": 1.7195121951219512, "no_speech_prob": 0.020220158621668816}, {"id": 86, "seek": 69596, "start": 696.0400000000001, "end": 705.4000000000001, "text": " trusted first solution just change the certificate so but this is basically impractical yeah good luck", "tokens": [50368, 16034, 700, 3827, 445, 1319, 264, 15953, 370, 457, 341, 307, 1936, 704, 1897, 804, 1338, 665, 3668, 50836], "temperature": 0.0, "avg_logprob": -0.16808152921272046, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.006982740014791489}, {"id": 87, "seek": 69596, "start": 705.4000000000001, "end": 714.52, "text": " with that yeah we messes up all the measurements you invalidate all the addons so second solution", "tokens": [50836, 365, 300, 1338, 321, 2082, 279, 493, 439, 264, 15383, 291, 34702, 473, 439, 264, 909, 892, 370, 1150, 3827, 51292], "temperature": 0.0, "avg_logprob": -0.16808152921272046, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.006982740014791489}, {"id": 88, "seek": 69596, "start": 715.08, "end": 721.88, "text": " try to create a blacklist on the cloud provider this is impractical third solution at the station", "tokens": [51320, 853, 281, 1884, 257, 2211, 8264, 322, 264, 4588, 12398, 341, 307, 704, 1897, 804, 2636, 3827, 412, 264, 5214, 51660], "temperature": 0.0, "avg_logprob": -0.16808152921272046, "compression_ratio": 1.7325581395348837, "no_speech_prob": 0.006982740014791489}, {"id": 89, "seek": 72188, "start": 721.88, "end": 728.6, "text": " check if the hash is matching your addon that you don't like anymore and the last solution", "tokens": [50364, 1520, 498, 264, 22019, 307, 14324, 428, 909, 266, 300, 291, 500, 380, 411, 3602, 293, 264, 1036, 3827, 50700], "temperature": 0.0, "avg_logprob": -0.1817565596247294, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.005841965787112713}, {"id": 90, "seek": 72188, "start": 728.6, "end": 735.32, "text": " these are these s but rules so what is s but is basically another p section inside the UQI", "tokens": [50700, 613, 366, 613, 262, 457, 4474, 370, 437, 307, 262, 457, 307, 1936, 1071, 280, 3541, 1854, 264, 624, 48, 40, 51036], "temperature": 0.0, "avg_logprob": -0.1817565596247294, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.005841965787112713}, {"id": 91, "seek": 72188, "start": 735.32, "end": 744.52, "text": " the yeah the addons for example and contains component generation and also other information", "tokens": [51036, 264, 1338, 264, 909, 892, 337, 1365, 293, 8306, 6542, 5125, 293, 611, 661, 1589, 51496], "temperature": 0.0, "avg_logprob": -0.1817565596247294, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.005841965787112713}, {"id": 92, "seek": 72188, "start": 744.52, "end": 750.36, "text": " but the key part is the component generation table because there is the same table there should be", "tokens": [51496, 457, 264, 2141, 644, 307, 264, 6542, 5125, 3199, 570, 456, 307, 264, 912, 3199, 456, 820, 312, 51788], "temperature": 0.0, "avg_logprob": -0.1817565596247294, "compression_ratio": 1.8019323671497585, "no_speech_prob": 0.005841965787112713}, {"id": 93, "seek": 75036, "start": 750.36, "end": 757.96, "text": " the same table inside your shim that and then the we are at component level so for example every", "tokens": [50364, 264, 912, 3199, 1854, 428, 402, 332, 300, 293, 550, 264, 321, 366, 412, 6542, 1496, 370, 337, 1365, 633, 50744], "temperature": 0.0, "avg_logprob": -0.1509229176080049, "compression_ratio": 1.727810650887574, "no_speech_prob": 0.001984979026019573}, {"id": 94, "seek": 75036, "start": 757.96, "end": 766.2, "text": " Linux PS action has should be should have the its own component generation version for the Linux one", "tokens": [50744, 18734, 8168, 3069, 575, 820, 312, 820, 362, 264, 1080, 1065, 6542, 5125, 3037, 337, 264, 18734, 472, 51156], "temperature": 0.0, "avg_logprob": -0.1509229176080049, "compression_ratio": 1.727810650887574, "no_speech_prob": 0.001984979026019573}, {"id": 95, "seek": 75036, "start": 766.2, "end": 775.16, "text": " for the addon and so on and if the component generation match with the what shim has we accept", "tokens": [51156, 337, 264, 909, 266, 293, 370, 322, 293, 498, 264, 6542, 5125, 2995, 365, 264, 437, 402, 332, 575, 321, 3241, 51604], "temperature": 0.0, "avg_logprob": -0.1509229176080049, "compression_ratio": 1.727810650887574, "no_speech_prob": 0.001984979026019573}, {"id": 96, "seek": 77516, "start": 775.24, "end": 782.04, "text": " it but if the generation for this component of the addon that is incoming is lower then we have", "tokens": [50368, 309, 457, 498, 264, 5125, 337, 341, 6542, 295, 264, 909, 266, 300, 307, 22341, 307, 3126, 550, 321, 362, 50708], "temperature": 0.0, "avg_logprob": -0.13925530253977014, "compression_ratio": 1.6768292682926829, "no_speech_prob": 0.0022352596279233694}, {"id": 97, "seek": 77516, "start": 782.04, "end": 788.4399999999999, "text": " a mismatch and even if the addon is signed by red dot or whatever it will be rejected", "tokens": [50708, 257, 23220, 852, 293, 754, 498, 264, 909, 266, 307, 8175, 538, 2182, 5893, 420, 2035, 309, 486, 312, 15749, 51028], "temperature": 0.0, "avg_logprob": -0.13925530253977014, "compression_ratio": 1.6768292682926829, "no_speech_prob": 0.0022352596279233694}, {"id": 98, "seek": 77516, "start": 790.92, "end": 796.68, "text": " and this part is done by shim when they verifies they are done in checks the s but components", "tokens": [51152, 293, 341, 644, 307, 1096, 538, 402, 332, 562, 436, 1306, 11221, 436, 366, 1096, 294, 13834, 264, 262, 457, 6677, 51440], "temperature": 0.0, "avg_logprob": -0.13925530253977014, "compression_ratio": 1.6768292682926829, "no_speech_prob": 0.0022352596279233694}, {"id": 99, "seek": 79668, "start": 796.68, "end": 804.68, "text": " and generation just an example to clarify this in this case we have the shim has s but one myadon", "tokens": [50364, 293, 5125, 445, 364, 1365, 281, 17594, 341, 294, 341, 1389, 321, 362, 264, 402, 332, 575, 262, 457, 472, 452, 345, 266, 50764], "temperature": 0.0, "avg_logprob": -0.15122774049833224, "compression_ratio": 1.6839080459770115, "no_speech_prob": 0.0077220480889081955}, {"id": 100, "seek": 79668, "start": 804.68, "end": 814.04, "text": " version two and then the addon contains the same version for s but and myadon so it's good it will", "tokens": [50764, 3037, 732, 293, 550, 264, 909, 266, 8306, 264, 912, 3037, 337, 262, 457, 293, 452, 345, 266, 370, 309, 311, 665, 309, 486, 51232], "temperature": 0.0, "avg_logprob": -0.15122774049833224, "compression_ratio": 1.6839080459770115, "no_speech_prob": 0.0077220480889081955}, {"id": 101, "seek": 79668, "start": 814.04, "end": 821.4, "text": " be accepted of course has to be signed by somebody we trust in this case the my the addon as the", "tokens": [51232, 312, 9035, 295, 1164, 575, 281, 312, 8175, 538, 2618, 321, 3361, 294, 341, 1389, 264, 452, 264, 909, 266, 382, 264, 51600], "temperature": 0.0, "avg_logprob": -0.15122774049833224, "compression_ratio": 1.6839080459770115, "no_speech_prob": 0.0077220480889081955}, {"id": 102, "seek": 82140, "start": 822.04, "end": 829.8, "text": " s but version is correct but my addon component is lower which means that we don't accept it even", "tokens": [50396, 262, 457, 3037, 307, 3006, 457, 452, 909, 266, 6542, 307, 3126, 597, 1355, 300, 321, 500, 380, 3241, 309, 754, 50784], "temperature": 0.0, "avg_logprob": -0.09490156173706055, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.0014451564056798816}, {"id": 103, "seek": 82140, "start": 829.8, "end": 835.64, "text": " if it's signed by whoever we trust in the secure boot database it won't be accepted", "tokens": [50784, 498, 309, 311, 8175, 538, 11387, 321, 3361, 294, 264, 7144, 11450, 8149, 309, 1582, 380, 312, 9035, 51076], "temperature": 0.0, "avg_logprob": -0.09490156173706055, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.0014451564056798816}, {"id": 104, "seek": 82140, "start": 838.12, "end": 845.0, "text": " one open problem it's combining addons so if you have two separate addons that contain", "tokens": [51200, 472, 1269, 1154, 309, 311, 21928, 909, 892, 370, 498, 291, 362, 732, 4994, 909, 892, 300, 5304, 51544], "temperature": 0.0, "avg_logprob": -0.09490156173706055, "compression_ratio": 1.6047904191616766, "no_speech_prob": 0.0014451564056798816}, {"id": 105, "seek": 84500, "start": 845.96, "end": 853.16, "text": " common line that is safe but together can create a security issue because they enable something", "tokens": [50412, 2689, 1622, 300, 307, 3273, 457, 1214, 393, 1884, 257, 3825, 2734, 570, 436, 9528, 746, 50772], "temperature": 0.0, "avg_logprob": -0.09481628962925502, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.014804393984377384}, {"id": 106, "seek": 84500, "start": 853.16, "end": 863.08, "text": " that we don't like how do we do it how do we solve this issue to be honest as of now I couldn't", "tokens": [50772, 300, 321, 500, 380, 411, 577, 360, 321, 360, 309, 577, 360, 321, 5039, 341, 2734, 281, 312, 3245, 382, 295, 586, 286, 2809, 380, 51268], "temperature": 0.0, "avg_logprob": -0.09481628962925502, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.014804393984377384}, {"id": 107, "seek": 84500, "start": 863.08, "end": 870.28, "text": " come up with a concrete example for this and yeah one solution will be to use that station to see if", "tokens": [51268, 808, 493, 365, 257, 9859, 1365, 337, 341, 293, 1338, 472, 3827, 486, 312, 281, 764, 300, 5214, 281, 536, 498, 51628], "temperature": 0.0, "avg_logprob": -0.09481628962925502, "compression_ratio": 1.6132596685082874, "no_speech_prob": 0.014804393984377384}, {"id": 108, "seek": 87028, "start": 870.36, "end": 881.64, "text": " they are both there talking about the system dc6 in iterative addons so system dc6 already exist", "tokens": [50368, 436, 366, 1293, 456, 1417, 466, 264, 1185, 274, 66, 21, 294, 17138, 1166, 909, 892, 370, 1185, 274, 66, 21, 1217, 2514, 50932], "temperature": 0.0, "avg_logprob": -0.25014110711904675, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.0033684177324175835}, {"id": 109, "seek": 87028, "start": 883.3199999999999, "end": 891.9599999999999, "text": " they are already famous so used and what is new is that you can also use them for uki so for what", "tokens": [51016, 436, 366, 1217, 4618, 370, 1143, 293, 437, 307, 777, 307, 300, 291, 393, 611, 764, 552, 337, 344, 2984, 370, 337, 437, 51448], "temperature": 0.0, "avg_logprob": -0.25014110711904675, "compression_ratio": 1.564516129032258, "no_speech_prob": 0.0033684177324175835}, {"id": 110, "seek": 89196, "start": 892.84, "end": 900.6800000000001, "text": " if you don't know is a system system extends an image extend the base system with an overlay", "tokens": [50408, 498, 291, 500, 380, 458, 307, 257, 1185, 1185, 26448, 364, 3256, 10101, 264, 3096, 1185, 365, 364, 31741, 50800], "temperature": 0.0, "avg_logprob": -0.14987367098448706, "compression_ratio": 1.804054054054054, "no_speech_prob": 0.027605712413787842}, {"id": 111, "seek": 89196, "start": 900.6800000000001, "end": 908.0400000000001, "text": " containing additional files so you can extend base system and you can use this system this", "tokens": [50800, 19273, 4497, 7098, 370, 291, 393, 10101, 3096, 1185, 293, 291, 393, 764, 341, 1185, 341, 51168], "temperature": 0.0, "avg_logprob": -0.14987367098448706, "compression_ratio": 1.804054054054054, "no_speech_prob": 0.027605712413787842}, {"id": 112, "seek": 89196, "start": 908.0400000000001, "end": 916.0400000000001, "text": " tab provides also the possibility to use this to extend the initer d inside the uki", "tokens": [51168, 4421, 6417, 611, 264, 7959, 281, 764, 341, 281, 10101, 264, 294, 1681, 274, 1854, 264, 344, 2984, 51568], "temperature": 0.0, "avg_logprob": -0.14987367098448706, "compression_ratio": 1.804054054054054, "no_speech_prob": 0.027605712413787842}, {"id": 113, "seek": 91604, "start": 917.0, "end": 924.5999999999999, "text": " um more or less is same concept as the common line addons so you just use different tools", "tokens": [50412, 1105, 544, 420, 1570, 307, 912, 3410, 382, 264, 2689, 1622, 909, 892, 370, 291, 445, 764, 819, 3873, 50792], "temperature": 0.0, "avg_logprob": -0.27229199689977307, "compression_ratio": 1.6436781609195403, "no_speech_prob": 0.002384463557973504}, {"id": 114, "seek": 91604, "start": 924.5999999999999, "end": 930.8399999999999, "text": " because they are different things they are no p binary with p files sections so there are system", "tokens": [50792, 570, 436, 366, 819, 721, 436, 366, 572, 280, 17434, 365, 280, 7098, 10863, 370, 456, 366, 1185, 51104], "temperature": 0.0, "avg_logprob": -0.27229199689977307, "compression_ratio": 1.6436781609195403, "no_speech_prob": 0.002384463557973504}, {"id": 115, "seek": 91604, "start": 930.8399999999999, "end": 939.24, "text": " extension images and micozi is used instead the uki fi and but the part for example where to put it", "tokens": [51104, 10320, 5267, 293, 275, 2789, 3992, 307, 1143, 2602, 264, 344, 2984, 15848, 293, 457, 264, 644, 337, 1365, 689, 281, 829, 309, 51524], "temperature": 0.0, "avg_logprob": -0.27229199689977307, "compression_ratio": 1.6436781609195403, "no_speech_prob": 0.002384463557973504}, {"id": 116, "seek": 93924, "start": 939.24, "end": 948.2, "text": " is the same the workflow is more or less again the same create a system c6 extension you put it", "tokens": [50364, 307, 264, 912, 264, 20993, 307, 544, 420, 1570, 797, 264, 912, 1884, 257, 1185, 269, 21, 10320, 291, 829, 309, 50812], "temperature": 0.0, "avg_logprob": -0.12927195832536026, "compression_ratio": 1.7636363636363637, "no_speech_prob": 0.0029771984554827213}, {"id": 117, "seek": 93924, "start": 948.2, "end": 955.4, "text": " inside the extra d folder it must be a raw file and then this is the only difference system this", "tokens": [50812, 1854, 264, 2857, 274, 10820, 309, 1633, 312, 257, 8936, 3991, 293, 550, 341, 307, 264, 787, 2649, 1185, 341, 51172], "temperature": 0.0, "avg_logprob": -0.12927195832536026, "compression_ratio": 1.7636363636363637, "no_speech_prob": 0.0029771984554827213}, {"id": 118, "seek": 93924, "start": 955.4, "end": 964.2, "text": " tab will take the initer d the addon and will put it inside the initer d extra c6 folder where the", "tokens": [51172, 4421, 486, 747, 264, 294, 1681, 274, 264, 909, 266, 293, 486, 829, 309, 1854, 264, 294, 1681, 274, 2857, 269, 21, 10820, 689, 264, 51612], "temperature": 0.0, "avg_logprob": -0.12927195832536026, "compression_ratio": 1.7636363636363637, "no_speech_prob": 0.0029771984554827213}, {"id": 119, "seek": 96420, "start": 964.2800000000001, "end": 970.36, "text": " c6 extension will then load it and apply it to the initer d", "tokens": [50368, 269, 21, 10320, 486, 550, 3677, 309, 293, 3079, 309, 281, 264, 294, 1681, 274, 50672], "temperature": 0.0, "avg_logprob": -0.15660338768592247, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.002679542638361454}, {"id": 120, "seek": 96420, "start": 973.24, "end": 982.84, "text": " yeah who uses this can use these addons the use case are various there are three groups of users", "tokens": [50816, 1338, 567, 4960, 341, 393, 764, 613, 909, 892, 264, 764, 1389, 366, 3683, 456, 366, 1045, 3935, 295, 5022, 51296], "temperature": 0.0, "avg_logprob": -0.15660338768592247, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.002679542638361454}, {"id": 121, "seek": 96420, "start": 982.84, "end": 992.0400000000001, "text": " that can use this the vendors for example read that they want to ship we want to debug kernel and uki", "tokens": [51296, 300, 393, 764, 341, 264, 22056, 337, 1365, 1401, 300, 436, 528, 281, 5374, 321, 528, 281, 24083, 28256, 293, 344, 2984, 51756], "temperature": 0.0, "avg_logprob": -0.15660338768592247, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.002679542638361454}, {"id": 122, "seek": 99204, "start": 992.5999999999999, "end": 1002.1999999999999, "text": " and we ship our addon and there are there could be the vstod the virt host admins that can use", "tokens": [50392, 293, 321, 5374, 527, 909, 266, 293, 456, 366, 456, 727, 312, 264, 371, 372, 378, 264, 4480, 3975, 5910, 1292, 300, 393, 764, 50872], "temperature": 0.0, "avg_logprob": -0.21369689619037466, "compression_ratio": 1.8012422360248448, "no_speech_prob": 0.014323065057396889}, {"id": 123, "seek": 99204, "start": 1002.1999999999999, "end": 1009.56, "text": " host side tools like virt firmware or whatever to modify these these kind of variables more or", "tokens": [50872, 3975, 1252, 3873, 411, 4480, 30289, 420, 2035, 281, 16927, 613, 613, 733, 295, 9102, 544, 420, 51240], "temperature": 0.0, "avg_logprob": -0.21369689619037466, "compression_ratio": 1.8012422360248448, "no_speech_prob": 0.014323065057396889}, {"id": 124, "seek": 99204, "start": 1009.56, "end": 1016.8399999999999, "text": " less the same use case and the guest admins can add you can use guest side tools like mock to insert", "tokens": [51240, 1570, 264, 912, 764, 1389, 293, 264, 8341, 5910, 1292, 393, 909, 291, 393, 764, 8341, 1252, 3873, 411, 17362, 281, 8969, 51604], "temperature": 0.0, "avg_logprob": -0.21369689619037466, "compression_ratio": 1.8012422360248448, "no_speech_prob": 0.014323065057396889}, {"id": 125, "seek": 101684, "start": 1016.84, "end": 1024.2, "text": " the key insecure boot even though this is a little bit tricky for in the cloud because on", "tokens": [50364, 264, 2141, 32215, 11450, 754, 1673, 341, 307, 257, 707, 857, 12414, 337, 294, 264, 4588, 570, 322, 50732], "temperature": 0.0, "avg_logprob": -0.12061017209833319, "compression_ratio": 1.64, "no_speech_prob": 0.005243353545665741}, {"id": 126, "seek": 101684, "start": 1024.2, "end": 1032.04, "text": " asia it's basically impossible to add a key in mock because when it reboots you cannot connect via", "tokens": [50732, 382, 654, 309, 311, 1936, 6243, 281, 909, 257, 2141, 294, 17362, 570, 562, 309, 26802, 1971, 291, 2644, 1745, 5766, 51124], "temperature": 0.0, "avg_logprob": -0.12061017209833319, "compression_ratio": 1.64, "no_speech_prob": 0.005243353545665741}, {"id": 127, "seek": 101684, "start": 1032.04, "end": 1038.04, "text": " when you connect with the shell you skip the mock reboot section when they ask you to confirm your", "tokens": [51124, 562, 291, 1745, 365, 264, 8720, 291, 10023, 264, 17362, 33818, 3541, 562, 436, 1029, 291, 281, 9064, 428, 51424], "temperature": 0.0, "avg_logprob": -0.12061017209833319, "compression_ratio": 1.64, "no_speech_prob": 0.005243353545665741}, {"id": 128, "seek": 103804, "start": 1038.76, "end": 1047.48, "text": " key available tools there is a system d has a lot of tools uki fie is the main one in different", "tokens": [50400, 2141, 2435, 3873, 456, 307, 257, 1185, 274, 575, 257, 688, 295, 3873, 344, 2984, 283, 414, 307, 264, 2135, 472, 294, 819, 50836], "temperature": 0.0, "avg_logprob": -0.26990207465919286, "compression_ratio": 1.6647727272727273, "no_speech_prob": 0.014143078587949276}, {"id": 129, "seek": 103804, "start": 1047.48, "end": 1055.48, "text": " version is supported gradually first how to build and then how to inspect them and then there is also", "tokens": [50836, 3037, 307, 8104, 13145, 700, 577, 281, 1322, 293, 550, 577, 281, 15018, 552, 293, 550, 456, 307, 611, 51236], "temperature": 0.0, "avg_logprob": -0.26990207465919286, "compression_ratio": 1.6647727272727273, "no_speech_prob": 0.014143078587949276}, {"id": 130, "seek": 103804, "start": 1056.68, "end": 1063.0, "text": " i sent a pr to extend boot ctl to find addons and display already as a preview what will be the", "tokens": [51296, 741, 2279, 257, 582, 281, 10101, 11450, 269, 83, 75, 281, 915, 909, 892, 293, 4674, 1217, 382, 257, 14281, 437, 486, 312, 264, 51612], "temperature": 0.0, "avg_logprob": -0.26990207465919286, "compression_ratio": 1.6647727272727273, "no_speech_prob": 0.014143078587949276}, {"id": 131, "seek": 106300, "start": 1063.0, "end": 1069.4, "text": " kernel command the full command line so if there is a system d maintainers right", "tokens": [50364, 28256, 5622, 264, 1577, 5622, 1622, 370, 498, 456, 307, 257, 1185, 274, 6909, 433, 558, 50684], "temperature": 0.0, "avg_logprob": -0.22303900920169453, "compression_ratio": 1.7453416149068324, "no_speech_prob": 0.005522036459296942}, {"id": 132, "seek": 106300, "start": 1072.44, "end": 1082.12, "text": " then and there is mico c to create a system d sex the image and then we have a uki director for fedora", "tokens": [50836, 550, 293, 456, 307, 275, 2789, 269, 281, 1884, 257, 1185, 274, 3260, 264, 3256, 293, 550, 321, 362, 257, 344, 2984, 5391, 337, 4636, 3252, 51320], "temperature": 0.0, "avg_logprob": -0.22303900920169453, "compression_ratio": 1.7453416149068324, "no_speech_prob": 0.005522036459296942}, {"id": 133, "seek": 106300, "start": 1082.12, "end": 1091.0, "text": " there is kernel boot config you can add update and remove uki's and then we and also added kernel", "tokens": [51320, 456, 307, 28256, 11450, 6662, 291, 393, 909, 5623, 293, 4159, 344, 2984, 311, 293, 550, 321, 293, 611, 3869, 28256, 51764], "temperature": 0.0, "avg_logprob": -0.22303900920169453, "compression_ratio": 1.7453416149068324, "no_speech_prob": 0.005522036459296942}, {"id": 134, "seek": 109100, "start": 1091.0, "end": 1099.4, "text": " addon which does the same thing for uki addons and the future work what are we planning to do next", "tokens": [50364, 909, 266, 597, 775, 264, 912, 551, 337, 344, 2984, 909, 892, 293, 264, 2027, 589, 437, 366, 321, 5038, 281, 360, 958, 50784], "temperature": 0.0, "avg_logprob": -0.13000153875970222, "compression_ratio": 1.7650602409638554, "no_speech_prob": 0.0010018543107435107}, {"id": 135, "seek": 109100, "start": 1101.8, "end": 1110.84, "text": " maybe an rpm so the vendor ships an rpm with the collection of addons generic addons that we want to", "tokens": [50904, 1310, 364, 367, 14395, 370, 264, 24321, 11434, 364, 367, 14395, 365, 264, 5765, 295, 909, 892, 19577, 909, 892, 300, 321, 528, 281, 51356], "temperature": 0.0, "avg_logprob": -0.13000153875970222, "compression_ratio": 1.7650602409638554, "no_speech_prob": 0.0010018543107435107}, {"id": 136, "seek": 109100, "start": 1111.56, "end": 1120.04, "text": " ship signed by the vendor but of course we don't want to pollute the esp with the addons that", "tokens": [51392, 5374, 8175, 538, 264, 24321, 457, 295, 1164, 321, 500, 380, 528, 281, 6418, 1169, 264, 7089, 365, 264, 909, 892, 300, 51816], "temperature": 0.0, "avg_logprob": -0.13000153875970222, "compression_ratio": 1.7650602409638554, "no_speech_prob": 0.0010018543107435107}, {"id": 137, "seek": 112004, "start": 1120.04, "end": 1126.76, "text": " the user doesn't need so there was a agreement also upstream to find these two locations user", "tokens": [50364, 264, 4195, 1177, 380, 643, 370, 456, 390, 257, 8106, 611, 33915, 281, 915, 613, 732, 9253, 4195, 50700], "temperature": 0.0, "avg_logprob": -0.14506980937014344, "compression_ratio": 1.7616822429906542, "no_speech_prob": 0.007699286099523306}, {"id": 138, "seek": 112004, "start": 1126.76, "end": 1134.6, "text": " lib linux extra d for global and the other one for uki specific addons where the rpm should", "tokens": [50700, 22854, 22896, 2449, 2857, 274, 337, 4338, 293, 264, 661, 472, 337, 344, 2984, 2685, 909, 892, 689, 264, 367, 14395, 820, 51092], "temperature": 0.0, "avg_logprob": -0.14506980937014344, "compression_ratio": 1.7616822429906542, "no_speech_prob": 0.007699286099523306}, {"id": 139, "seek": 112004, "start": 1134.6, "end": 1142.12, "text": " install these addons and then when the user needs them can simply use kernel addon or just copy the", "tokens": [51092, 3625, 613, 909, 892, 293, 550, 562, 264, 4195, 2203, 552, 393, 2935, 764, 28256, 909, 266, 420, 445, 5055, 264, 51468], "temperature": 0.0, "avg_logprob": -0.14506980937014344, "compression_ratio": 1.7616822429906542, "no_speech_prob": 0.007699286099523306}, {"id": 140, "seek": 112004, "start": 1142.12, "end": 1149.6399999999999, "text": " addon that for example we as a developer ask to for debugging the uki to copy it in the esp", "tokens": [51468, 909, 266, 300, 337, 1365, 321, 382, 257, 10754, 1029, 281, 337, 45592, 264, 344, 2984, 281, 5055, 309, 294, 264, 7089, 51844], "temperature": 0.0, "avg_logprob": -0.14506980937014344, "compression_ratio": 1.7616822429906542, "no_speech_prob": 0.007699286099523306}, {"id": 141, "seek": 114964, "start": 1149.64, "end": 1162.3600000000001, "text": " reboot and they will be there yeah on the cloud cloud if they want to allow the user to upload", "tokens": [50364, 33818, 293, 436, 486, 312, 456, 1338, 322, 264, 4588, 4588, 498, 436, 528, 281, 2089, 264, 4195, 281, 6580, 51000], "temperature": 0.0, "avg_logprob": -0.17943252987331815, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.0027670569252222776}, {"id": 142, "seek": 114964, "start": 1162.3600000000001, "end": 1170.68, "text": " their own uki addons they need to be a way to inject to inject the owner certificate", "tokens": [51000, 641, 1065, 344, 2984, 909, 892, 436, 643, 281, 312, 257, 636, 281, 10711, 281, 10711, 264, 7289, 15953, 51416], "temperature": 0.0, "avg_logprob": -0.17943252987331815, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.0027670569252222776}, {"id": 143, "seek": 117068, "start": 1170.76, "end": 1178.44, "text": " otherwise yeah you cannot do it this also there is a little bit an issue with the measurement", "tokens": [50368, 5911, 1338, 291, 2644, 360, 309, 341, 611, 456, 307, 257, 707, 857, 364, 2734, 365, 264, 13160, 50752], "temperature": 0.0, "avg_logprob": -0.26184417262221826, "compression_ratio": 1.68, "no_speech_prob": 0.021916884928941727}, {"id": 144, "seek": 117068, "start": 1178.44, "end": 1185.88, "text": " because the when you add the user certificate has to be measured in pscr7 especially and the solution", "tokens": [50752, 570, 264, 562, 291, 909, 264, 4195, 15953, 575, 281, 312, 12690, 294, 18815, 10757, 22, 2318, 293, 264, 3827, 51124], "temperature": 0.0, "avg_logprob": -0.26184417262221826, "compression_ratio": 1.68, "no_speech_prob": 0.021916884928941727}, {"id": 145, "seek": 117068, "start": 1185.88, "end": 1192.76, "text": " we found is to simply add the dummy addon before performing attestation so the certificate is part", "tokens": [51124, 321, 1352, 307, 281, 2935, 909, 264, 35064, 909, 266, 949, 10205, 951, 377, 399, 370, 264, 15953, 307, 644, 51468], "temperature": 0.0, "avg_logprob": -0.26184417262221826, "compression_ratio": 1.68, "no_speech_prob": 0.021916884928941727}, {"id": 146, "seek": 119276, "start": 1193.48, "end": 1198.84, "text": " of the in the key ring so it will be attest is measured", "tokens": [50400, 295, 264, 294, 264, 2141, 4875, 370, 309, 486, 312, 951, 377, 307, 12690, 50668], "temperature": 0.0, "avg_logprob": -0.1850738525390625, "compression_ratio": 1.6114649681528663, "no_speech_prob": 0.019142771139740944}, {"id": 147, "seek": 119276, "start": 1201.48, "end": 1208.44, "text": " on prem more or less the same things who for us is libvirt we want to offer the same possibility", "tokens": [50800, 322, 5624, 544, 420, 1570, 264, 912, 721, 567, 337, 505, 307, 22854, 85, 2498, 321, 528, 281, 2626, 264, 912, 7959, 51148], "temperature": 0.0, "avg_logprob": -0.1850738525390625, "compression_ratio": 1.6114649681528663, "no_speech_prob": 0.019142771139740944}, {"id": 148, "seek": 119276, "start": 1208.44, "end": 1217.4, "text": " to upload the certificate for secure boot and yeah and there is already a way to add the dummy addon", "tokens": [51148, 281, 6580, 264, 15953, 337, 7144, 11450, 293, 1338, 293, 456, 307, 1217, 257, 636, 281, 909, 264, 35064, 909, 266, 51596], "temperature": 0.0, "avg_logprob": -0.1850738525390625, "compression_ratio": 1.6114649681528663, "no_speech_prob": 0.019142771139740944}, {"id": 149, "seek": 121740, "start": 1217.96, "end": 1226.0400000000002, "text": " so that's that's it from my e-talk if you have any question here outside thank you", "tokens": [50392, 370, 300, 311, 300, 311, 309, 490, 452, 308, 12, 29302, 498, 291, 362, 604, 1168, 510, 2380, 1309, 291, 50796], "temperature": 0.0, "avg_logprob": -0.37347571055094403, "compression_ratio": 1.1625, "no_speech_prob": 0.027070291340351105}, {"id": 150, "seek": 121740, "start": 1237.5600000000002, "end": 1238.0400000000002, "text": " yes please", "tokens": [51372, 2086, 1767, 51396], "temperature": 0.0, "avg_logprob": -0.37347571055094403, "compression_ratio": 1.1625, "no_speech_prob": 0.027070291340351105}, {"id": 151, "seek": 124740, "start": 1247.8000000000002, "end": 1251.16, "text": " uh", "tokens": [50384, 2232, 50552], "temperature": 1.0, "avg_logprob": -1.9172325134277344, "compression_ratio": 0.9, "no_speech_prob": 0.33176469802856445}, {"id": 152, "seek": 124740, "start": 1264.52, "end": 1267.48, "text": " so", "tokens": [51220, 370, 51368], "temperature": 1.0, "avg_logprob": -1.9172325134277344, "compression_ratio": 0.9, "no_speech_prob": 0.33176469802856445}, {"id": 153, "seek": 124740, "start": 1270.44, "end": 1273.24, "text": " second comment is on all of the add-ons", "tokens": [51516, 1150, 2871, 307, 322, 439, 295, 264, 909, 12, 892, 51656], "temperature": 1.0, "avg_logprob": -1.9172325134277344, "compression_ratio": 0.9, "no_speech_prob": 0.33176469802856445}, {"id": 154, "seek": 127740, "start": 1277.4, "end": 1281.4, "text": " Right? Because you can trust the UiViceQ boot mechanism.", "tokens": [50364, 1779, 30, 1436, 291, 393, 3361, 264, 624, 72, 53, 573, 48, 11450, 7513, 13, 50564], "temperature": 0.0, "avg_logprob": -0.34801124882053686, "compression_ratio": 1.7150537634408602, "no_speech_prob": 0.3323138952255249}, {"id": 155, "seek": 127740, "start": 1281.4, "end": 1286.4, "text": " Whereas in a confidential computer environment you cannot today use.", "tokens": [50564, 13813, 294, 257, 27054, 3820, 2823, 291, 2644, 965, 764, 13, 50814], "temperature": 0.0, "avg_logprob": -0.34801124882053686, "compression_ratio": 1.7150537634408602, "no_speech_prob": 0.3323138952255249}, {"id": 156, "seek": 127740, "start": 1286.4, "end": 1293.4, "text": " I'm not aware of any stack right now that gives you a trustworthy UiViceQ boot environment.", "tokens": [50814, 286, 478, 406, 3650, 295, 604, 8630, 558, 586, 300, 2709, 291, 257, 39714, 624, 72, 53, 573, 48, 11450, 2823, 13, 51164], "temperature": 0.0, "avg_logprob": -0.34801124882053686, "compression_ratio": 1.7150537634408602, "no_speech_prob": 0.3323138952255249}, {"id": 157, "seek": 127740, "start": 1293.4, "end": 1301.4, "text": " That means you need another mechanism to do that measurement for a confidential computer environment.", "tokens": [51164, 663, 1355, 291, 643, 1071, 7513, 281, 360, 300, 13160, 337, 257, 27054, 3820, 2823, 13, 51564], "temperature": 0.0, "avg_logprob": -0.34801124882053686, "compression_ratio": 1.7150537634408602, "no_speech_prob": 0.3323138952255249}, {"id": 158, "seek": 130140, "start": 1301.4, "end": 1307.4, "text": " The most natural path for that is to use the launch digest.", "tokens": [50364, 440, 881, 3303, 3100, 337, 300, 307, 281, 764, 264, 4025, 13884, 13, 50664], "temperature": 0.0, "avg_logprob": -0.29463429146624626, "compression_ratio": 1.7208121827411167, "no_speech_prob": 0.40489813685417175}, {"id": 159, "seek": 130140, "start": 1307.4, "end": 1315.4, "text": " Because you have the launch measurements, you need to know ahead of time.", "tokens": [50664, 1436, 291, 362, 264, 4025, 15383, 11, 291, 643, 281, 458, 2286, 295, 565, 13, 51064], "temperature": 0.0, "avg_logprob": -0.29463429146624626, "compression_ratio": 1.7208121827411167, "no_speech_prob": 0.40489813685417175}, {"id": 160, "seek": 130140, "start": 1315.4, "end": 1320.4, "text": " When you boot the VM in a way, in a way, in a way at boot time,", "tokens": [51064, 1133, 291, 11450, 264, 18038, 294, 257, 636, 11, 294, 257, 636, 11, 294, 257, 636, 412, 11450, 565, 11, 51314], "temperature": 0.0, "avg_logprob": -0.29463429146624626, "compression_ratio": 1.7208121827411167, "no_speech_prob": 0.40489813685417175}, {"id": 161, "seek": 130140, "start": 1320.4, "end": 1330.4, "text": " all of the data that you need to launch at the end, which means you need to have the UiViceQ ready to be available including all the add-ons.", "tokens": [51314, 439, 295, 264, 1412, 300, 291, 643, 281, 4025, 412, 264, 917, 11, 597, 1355, 291, 643, 281, 362, 264, 624, 72, 53, 573, 48, 1919, 281, 312, 2435, 3009, 439, 264, 909, 12, 892, 13, 51814], "temperature": 0.0, "avg_logprob": -0.29463429146624626, "compression_ratio": 1.7208121827411167, "no_speech_prob": 0.40489813685417175}, {"id": 162, "seek": 133040, "start": 1330.4, "end": 1338.4, "text": " At which point we go in full circle, I think we are much better off just building a separate UiViceQ for that one set of configuration you're doing.", "tokens": [50364, 1711, 597, 935, 321, 352, 294, 1577, 6329, 11, 286, 519, 321, 366, 709, 1101, 766, 445, 2390, 257, 4994, 624, 72, 53, 573, 48, 337, 300, 472, 992, 295, 11694, 291, 434, 884, 13, 50764], "temperature": 0.0, "avg_logprob": -0.3052898968837058, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.1935882419347763}, {"id": 163, "seek": 133040, "start": 1338.4, "end": 1341.4, "text": " So you can attest that I'm actually running a set of configuration.", "tokens": [50764, 407, 291, 393, 951, 377, 300, 286, 478, 767, 2614, 257, 992, 295, 11694, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3052898968837058, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.1935882419347763}, {"id": 164, "seek": 133040, "start": 1341.4, "end": 1344.4, "text": " You don't want your debug add-on in your production fleet.", "tokens": [50914, 509, 500, 380, 528, 428, 24083, 909, 12, 266, 294, 428, 4265, 19396, 13, 51064], "temperature": 0.0, "avg_logprob": -0.3052898968837058, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.1935882419347763}, {"id": 165, "seek": 133040, "start": 1344.4, "end": 1347.4, "text": " That is, you want to pre-aggressively.", "tokens": [51064, 663, 307, 11, 291, 528, 281, 659, 12, 559, 3091, 3413, 13, 51214], "temperature": 0.0, "avg_logprob": -0.3052898968837058, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.1935882419347763}, {"id": 166, "seek": 133040, "start": 1347.4, "end": 1359.4, "text": " So I think the mechanism that is the most natural one here is to go and build a separate one-off UiViceQ even if they're made of add-ons if you want to.", "tokens": [51214, 407, 286, 519, 264, 7513, 300, 307, 264, 881, 3303, 472, 510, 307, 281, 352, 293, 1322, 257, 4994, 472, 12, 4506, 624, 72, 53, 573, 48, 754, 498, 436, 434, 1027, 295, 909, 12, 892, 498, 291, 528, 281, 13, 51814], "temperature": 0.0, "avg_logprob": -0.3052898968837058, "compression_ratio": 1.7043795620437956, "no_speech_prob": 0.1935882419347763}, {"id": 167, "seek": 135940, "start": 1360.4, "end": 1361.4, "text": " Okay.", "tokens": [50414, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.42061937422979445, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.5782501101493835}, {"id": 168, "seek": 135940, "start": 1361.4, "end": 1363.4, "text": " Okay, thank you.", "tokens": [50464, 1033, 11, 1309, 291, 13, 50564], "temperature": 0.0, "avg_logprob": -0.42061937422979445, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.5782501101493835}, {"id": 169, "seek": 135940, "start": 1377.4, "end": 1378.4, "text": " Okay.", "tokens": [51264, 1033, 13, 51314], "temperature": 0.0, "avg_logprob": -0.42061937422979445, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.5782501101493835}, {"id": 170, "seek": 135940, "start": 1378.4, "end": 1379.4, "text": " Thank you.", "tokens": [51314, 1044, 291, 13, 51364], "temperature": 0.0, "avg_logprob": -0.42061937422979445, "compression_ratio": 1.1470588235294117, "no_speech_prob": 0.5782501101493835}, {"id": 171, "seek": 138940, "start": 1389.4, "end": 1392.4, "text": " We cannot do a vocation only with a firmware.", "tokens": [50364, 492, 2644, 360, 257, 2329, 399, 787, 365, 257, 30289, 13, 50514], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 172, "seek": 138940, "start": 1392.4, "end": 1396.4, "text": " The firmware cannot support a vocation mechanism outside of the DDX.", "tokens": [50514, 440, 30289, 2644, 1406, 257, 2329, 399, 7513, 2380, 295, 264, 30778, 55, 13, 50714], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 173, "seek": 138940, "start": 1396.4, "end": 1398.4, "text": " And DDX has both space and around that.", "tokens": [50714, 400, 30778, 55, 575, 1293, 1901, 293, 926, 300, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 174, "seek": 138940, "start": 1398.4, "end": 1402.4, "text": " If you have a lot of space, if you ditch the microsoft solution, don't use the microsoft solution.", "tokens": [50814, 759, 291, 362, 257, 688, 295, 1901, 11, 498, 291, 25325, 264, 3123, 7856, 3827, 11, 500, 380, 764, 264, 3123, 7856, 3827, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 175, "seek": 138940, "start": 1405.4, "end": 1406.4, "text": " Thank you.", "tokens": [51164, 1044, 291, 13, 51214], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 176, "seek": 138940, "start": 1406.4, "end": 1407.4, "text": " Bye.", "tokens": [51214, 4621, 13, 51264], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 177, "seek": 138940, "start": 1409.4, "end": 1410.4, "text": " We know how it ends.", "tokens": [51364, 492, 458, 577, 309, 5314, 13, 51414], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 178, "seek": 138940, "start": 1410.4, "end": 1414.4, "text": " Guys, you are more than welcome to present next year if you want.", "tokens": [51414, 7855, 11, 291, 366, 544, 813, 2928, 281, 1974, 958, 1064, 498, 291, 528, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 179, "seek": 138940, "start": 1414.4, "end": 1417.4, "text": " You are more than welcome to present next year.", "tokens": [51614, 509, 366, 544, 813, 2928, 281, 1974, 958, 1064, 13, 51764], "temperature": 0.0, "avg_logprob": -0.3605836232503255, "compression_ratio": 1.7876106194690264, "no_speech_prob": 0.22493602335453033}, {"id": 180, "seek": 141940, "start": 1419.4, "end": 1421.4, "text": " You are more than welcome.", "tokens": [50364, 509, 366, 544, 813, 2928, 13, 50464], "temperature": 0.0, "avg_logprob": -0.5235943264431424, "compression_ratio": 0.8125, "no_speech_prob": 0.5673131942749023}], "language": "en"}