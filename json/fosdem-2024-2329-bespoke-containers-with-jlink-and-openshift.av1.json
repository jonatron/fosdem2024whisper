{"text": " Alright, good afternoon. My name is Jonathan Dowland. I'm a principal software engineer at Red Hat. I work on OpenJDK, in particular on containers. And I'm going to present some work for you today, which is a project team myself and Josh and Jay, who sadly can't be here today. I'm going to present some work we've been doing to look at integrating Java module technology with OpenShift. So I suspect you're all very familiar with Java modules, introduced to the JDK in 9 with Project Jigsaw, and perhaps less aware of what Red Hat OpenShift is. So OpenShift is Red Hat's enterprise distribution of Kubernetes, which is the de facto standard tool for doing container orchestration. So talking about containers. Red Hat, obviously probably heard of REL, Red Hat Enterprise Linux. Another project we have is the universal base image. And it's based on REL, and so it has some similar design principles, such as focus on quality and suitability for the enterprise. But it's different in the sense that it's available under the terms of a different end user license agreement. There's a short link at the top there to the full gory legal details. But unlike REL, you can, anybody without any kind of relationship to Red Hat can access UBI images, pull, push them and build upon them and distribute derivatives. So effectively it's a free image, and it's been designed to be useful as a base for any kind of containerized application. There's three flavors of the main UBI images. So there's UBI as it's called, and then there's minimal and then there's micro, and they're decreasing order size. So the full UBI image is about 200 megabytes uncompressed, and the minimal one's about 90, and the micro one, which is really small, has almost nothing in it, is about 20 megabytes, 20 megabytes of nothing somehow. You can get these, I mean those particular UBI containers are available, widely available, places like Docker Hub, but most or many Red Hat containers are not available from Docker Hub, and I'm not sure if you can see it in the room because of the positions of the tables, but the Red Hat ecosystem catalog is the place to go for Red Hat containers. So you can browse all of the UBI ones there. And the open JDK containers then, the thing I work on, they're part of the UBI family, so they're available under the same user license agreement, and you can pull and pull them freely without needing to be a customer or to have a developer subscription. I haven't included the full matrix of JDK containers we have now because it's grown too big for a slide. I think we have about 16 at last count, but the general URI form for the containers is there's two variants. There's build of images which contain the full JDK and developer tooling, the Java compiler and Maven, and that's the top one. And the second flavor we have is the runtime variants, which effectively suffix runtime, you get that. That has a slightly smaller subset of the JDK and doesn't include build tooling. I've included a link, which is probably at a better height now, to some, this is a page really, but we have a Gitub auto-generated documentation for all of the containers that we've shipped in recent times, so that's the place to go to see what's available. It has jumping off points to the ecosystem catalog, but it also includes information on how to actually configure the containers and to tailor them to your needs. So OpenShift has value add on top of Kubernetes. One of the concept ads is something called a build config and an instance of that is source to image. What OpenShift source to image is a process which allows you to define a workflow to consume an application source and produce a running deployable container automatically and automate the put-back process. By running a command like that, that's OC is the main OpenShift command line tool. You can create a whole load of objects inside OpenShift, which are interconnected to each other with triggers, so that in this particular example, if your application source URI is changes, if you push and you commit, or the base image upon which you're using for this process changes, then the workflow will pick that up and event up and automatically rerun and build a new deployment application, a deployment container. It's quite a simple workflow and the output image from this process is layered on top of the input image, which is the builder. The problem with that is the builder image is pretty big and customers want small containers and size of side, it also has stuff in you don't want necessarily in a runtime context, so the compiler, Maven, etc. So people with strong security concerns or with audit requirements want something else. The current state of the art in OpenShift for achieving that is multi-stage pipelines. You can chain these things together. The top part of this diagram is from the previous slide and you can chain that into a second build. In this case, the second build is using a different build conflict strategy called Docker strategy and basically it's a Docker file, which you may be familiar with. In this case, the output of the first stage is an intermediate image, which is used as one of the ingredients for the second stage and what we do basically, there we are. YAML, if you've ever dealt with Kubernetes, OpenShift is exactly the same, YAML, lots of YAML. The key piece here for that second stage is a Docker file, which in this case is embedded deep in the middle of YAML territory and it's a reasonably simple one. That's the state of the art today. I'm using Qwakus, I think you mentioned it on the side. For what follows, I've used Qwakus mostly for my experiments and for the examples. How big is it when you finish that process? It's pretty big. Unfortunately, the savings over the straightforward S2I process these days is pretty small, about 5%, not very good. If you look at the pie chart there, the thinnest slice on the slide is the application itself. The cost of doing business with this is quite high. The largest slice of the pie is the JDK itself and therefore that's the place we're focusing on trying to make space and size reductions. You can see another of the second biggest slice is the minimal base image itself. The open JDK container images based upon the UBI minimal image and that's about a quarter of the final payload for the application container here. First focus then is on trying to shrink the JDK and the second focus is to take a look at this base image. Our approach, what we're exploring is effectively the same basic shape of the workflow as before except we're going to extend the two build phases. The first extension is we're going to add at the application build stage, a post build, an analysis of the application using J-Link or J-Dep to determine which Java modules it uses. I should probably stress that the application itself does not need to use Java modules for this to function. We're looking at the Java modules that the application touches within the JDK. Then we use J-Link to strip the RedTap Open JDK that's provided in the container and create a bespoke VM which we then stash in the intermediate image. The second stage, the cherry picking stage then, we extend what we did before where we copied the application jar over into the runtime image and we additionally copy over the stripped JVM and a run script, basically the shell script entry point for the container which does some of the configuration at runtime and a small number of system dependencies we need to make the whole thing work. The reason we need to do these additional cherry picking things is because we've also switched out the image which we're layering on top of and we're now able to target the UBI micro image. I'm going to attempt something approximating a demo here. Let's have a look. If I was super brave, I would fire up an open shift cluster and give you a full blown web based exploration of that going on. I'm not that brave and subject to the constraints of operating on a laptop and FOSDEM Wi-Fi. I hope they'll forgive me for that. I mulled over exactly what I should show you and I could run through some of those build stages in isolation because in development we could do each of those stages separately. I figured perhaps what I'll do is I'll just show you the end stage if you like. What I have on this machine is a set of containers that have been built already. Scrolling off the bottom, let me fix that. Give the terminal a bit more read and state. I've got three containers here, container images on my machine. The first one running through the normal one stage S2I process has resulted, I've highlighted on the other window, perils of multi-mono. Here we are. So the plain S2I image then, this is a quarkus quick start and it ended up being 421 megs according to the podman. The multi-stage image, the current state of the art was a little bit smaller at 384. Actually that's better than the slides. Then the final image which has gone through our proof of concept jailing integration is down to 146. Let's run it. Run it, plonk, so that starts the app. Am I typing the right numbers here? Let's find out. I'm unable to connect, obviously not. Let me just borrow that window, fix it and put it back. Okay, there we go. Right, yeah, there you go, so the app works. So perhaps not the most exciting time you've seen today. That one, there we go. So yeah, in slightly more detail in the first phase when we extend the build process, this is opt in. We won't be doing it necessarily for every container build, so you have to enable it with an environment variable. As I said earlier, the general gist of it is run JDEPS and then JLink and there's an awful lot of pre- and processing going on to make that work. We're at the stage of this project where we're exploring a wider variety of applications to find all the edge cases. We have to add some modules that aren't picked up for whatever reason. We have to do some path fudging around when the class path is a bit unusual, et cetera. I've got a link to the source later if anyone really wants the gory details. So after this first stage, the intermediate image is pretty large. This is the second stage, the Docker file. Do not attempt to read this slide. The takeaway really is that it's grown more complicated than it was before. It was one or two lines before and we're doing quite a lot more work now. But yeah, there's four distinct things we copy in. We copy in the application, the stripped JVM, a run script and some system dependencies. At the moment, that's just grep and orc actually. But that might grow as we expand this. The results are pretty good. We're exploring a range of apps. This is not the best result. I've had all the worst. I've tried to be fair. It's about 43% the size of doing the multi-stage build. We've thrown away close to 70%. We're very happy with that. The new JVM is half the size of the older and the other significant saving is switching out to the micro-base image. We're happy with this and we're going to pursue it. A few bits and there are caveats. We've got to determine how, whether we're already serious blockers for real-world applications, more complicated applications than just quick starts. We've got some fun with JDK 11. At the moment, it grows the image. You get something twice as big instead of half the size. We know why and that's in trying to be fixed. Missing features. The reason it's getting smaller is because we're throwing stuff away. If you want FIPS support, if you're going to do stuff with time zone information or locales or you want debugging tools, that all needs to be added back in. We're trying to figure out a way that that would be practical for customers to actually do. The whole thing, our development works all in the open. If you want to do it, you can go to that address there and see all the gory details. It's on the bottom of that slide too. That's it. Thank you. I've got five minutes. I can't start the next one early. We've got five minutes of questions if anyone would like to. I don't know. I think the recording schedule would be broken. Any questions? Thank you. Sorry. Thanks. Sorry, I just want to hear me. Your previous slide there, you just talked a couple of things. You listed down TZD, locales, debugging information. One thing just to know is the TZD is actually in the base module. You don't get a choice. That will always be there. With your locales, there's actually a jailing plugin that actually allows you to select the locales. Maybe on your next step is something like that. By default, you just get US English. You can actually with the dash include locales, you can actually list out the locales that you want. That plugin will actually just take the resource data for those specific locales. That actually might be useful for you. More generally, the reason that locales are an issue for you is that it's what's called a service module. It's a service provider. There's nothing that directly depends on it. When you run JGEPs, you basically just sort of work out. That's basically doing static analysis to actually tell you what references there are. You never see static reference to something that's in a service provider module. Security providers is something you could actually list down there as well. J&DI providers is actually a bunch of those in the JDK that you never actually see a static reference to. Okay, thank you. That is really useful. I think we've made things... One of the modifications we do to the JDK in RHEL is to use the system time zone data. I think actually we've introduced this problem which you probably wouldn't have upstream. The information about the system data module is very useful. Thank you very much. Is there one right at the back? So, nice presentation, by the way. My question is, this seems to be optimizing for disk size. What about memory usage and stuff like that? Yes, so that's true. Size was the driver. I don't think it should make an appreciable difference to memory usage. I don't believe the Java will page in the modules it's not actually using or they'll page that out. I don't know, actually. We'll have to do some measurements. It's not been a driver for the project, but I wouldn't expect this to make significant gains in memory usage. Do you foresee that this could have a side effect on the memory side of things or not? Not loading stuff obviously consumes less memory. The fact that you don't load some stuff might make the system slower or something like that. I think... I don't know. We could add some measurements to our testing matrix, I think, and see what happens. For memory usage, the focus... The driver for that exploration is not in and Red Hat seems to have been towards Quarkus and Native Image. We've stuck to OpenJDK and the JVM for this work. We haven't really looked at memory, so it would be interesting to see. Thank you. Maybe I could just add to your reply just to that question. One of the side effects of having fewer modules in the runtime image is that you're actually memory mapping, you're mapping a smaller... It's called the G-image file. What actually happens is that that's actually completely memory mapped. You're not going to touch all the pages, so you may actually get some positive memory footprint benefits just because you're only going to have a small number of modules in the target image. It may help there. Great. Thank you. Cool. Okay. Thank you very much. Right. Next one. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.44, "text": " Alright, good afternoon. My name is Jonathan Dowland. I'm a principal software engineer", "tokens": [50364, 2798, 11, 665, 6499, 13, 1222, 1315, 307, 15471, 20947, 1661, 13, 286, 478, 257, 9716, 4722, 11403, 50936], "temperature": 0.0, "avg_logprob": -0.21745130290155826, "compression_ratio": 1.568888888888889, "no_speech_prob": 0.2982288599014282}, {"id": 1, "seek": 0, "start": 11.44, "end": 17.44, "text": " at Red Hat. I work on OpenJDK, in particular on containers. And I'm going to present some", "tokens": [50936, 412, 4477, 15867, 13, 286, 589, 322, 7238, 41, 35, 42, 11, 294, 1729, 322, 17089, 13, 400, 286, 478, 516, 281, 1974, 512, 51236], "temperature": 0.0, "avg_logprob": -0.21745130290155826, "compression_ratio": 1.568888888888889, "no_speech_prob": 0.2982288599014282}, {"id": 2, "seek": 0, "start": 17.44, "end": 22.240000000000002, "text": " work for you today, which is a project team myself and Josh and Jay, who sadly can't be", "tokens": [51236, 589, 337, 291, 965, 11, 597, 307, 257, 1716, 1469, 2059, 293, 9785, 293, 11146, 11, 567, 22023, 393, 380, 312, 51476], "temperature": 0.0, "avg_logprob": -0.21745130290155826, "compression_ratio": 1.568888888888889, "no_speech_prob": 0.2982288599014282}, {"id": 3, "seek": 0, "start": 22.240000000000002, "end": 26.44, "text": " here today. I'm going to present some work we've been doing to look at integrating Java", "tokens": [51476, 510, 965, 13, 286, 478, 516, 281, 1974, 512, 589, 321, 600, 668, 884, 281, 574, 412, 26889, 10745, 51686], "temperature": 0.0, "avg_logprob": -0.21745130290155826, "compression_ratio": 1.568888888888889, "no_speech_prob": 0.2982288599014282}, {"id": 4, "seek": 2644, "start": 26.44, "end": 34.120000000000005, "text": " module technology with OpenShift. So I suspect you're all very familiar with Java modules,", "tokens": [50364, 10088, 2899, 365, 7238, 7774, 2008, 13, 407, 286, 9091, 291, 434, 439, 588, 4963, 365, 10745, 16679, 11, 50748], "temperature": 0.0, "avg_logprob": -0.2392409430609809, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.0939483791589737}, {"id": 5, "seek": 2644, "start": 34.120000000000005, "end": 40.72, "text": " introduced to the JDK in 9 with Project Jigsaw, and perhaps less aware of what Red Hat OpenShift", "tokens": [50748, 7268, 281, 264, 37082, 42, 294, 1722, 365, 9849, 508, 17156, 1607, 11, 293, 4317, 1570, 3650, 295, 437, 4477, 15867, 7238, 7774, 2008, 51078], "temperature": 0.0, "avg_logprob": -0.2392409430609809, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.0939483791589737}, {"id": 6, "seek": 2644, "start": 40.72, "end": 47.72, "text": " is. So OpenShift is Red Hat's enterprise distribution of Kubernetes, which is the de facto standard", "tokens": [51078, 307, 13, 407, 7238, 7774, 2008, 307, 4477, 15867, 311, 14132, 7316, 295, 23145, 11, 597, 307, 264, 368, 42225, 3832, 51428], "temperature": 0.0, "avg_logprob": -0.2392409430609809, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.0939483791589737}, {"id": 7, "seek": 2644, "start": 47.72, "end": 56.120000000000005, "text": " tool for doing container orchestration. So talking about containers. Red Hat, obviously", "tokens": [51428, 2290, 337, 884, 10129, 14161, 2405, 13, 407, 1417, 466, 17089, 13, 4477, 15867, 11, 2745, 51848], "temperature": 0.0, "avg_logprob": -0.2392409430609809, "compression_ratio": 1.5756302521008403, "no_speech_prob": 0.0939483791589737}, {"id": 8, "seek": 5612, "start": 56.8, "end": 62.44, "text": " probably heard of REL, Red Hat Enterprise Linux. Another project we have is the universal", "tokens": [50398, 1391, 2198, 295, 497, 3158, 11, 4477, 15867, 26696, 18734, 13, 3996, 1716, 321, 362, 307, 264, 11455, 50680], "temperature": 0.0, "avg_logprob": -0.1792446686340882, "compression_ratio": 1.629496402877698, "no_speech_prob": 0.004088180605322123}, {"id": 9, "seek": 5612, "start": 62.44, "end": 67.6, "text": " base image. And it's based on REL, and so it has some similar design principles, such", "tokens": [50680, 3096, 3256, 13, 400, 309, 311, 2361, 322, 497, 3158, 11, 293, 370, 309, 575, 512, 2531, 1715, 9156, 11, 1270, 50938], "temperature": 0.0, "avg_logprob": -0.1792446686340882, "compression_ratio": 1.629496402877698, "no_speech_prob": 0.004088180605322123}, {"id": 10, "seek": 5612, "start": 67.6, "end": 72.64, "text": " as focus on quality and suitability for the enterprise. But it's different in the sense", "tokens": [50938, 382, 1879, 322, 3125, 293, 5722, 2310, 337, 264, 14132, 13, 583, 309, 311, 819, 294, 264, 2020, 51190], "temperature": 0.0, "avg_logprob": -0.1792446686340882, "compression_ratio": 1.629496402877698, "no_speech_prob": 0.004088180605322123}, {"id": 11, "seek": 5612, "start": 72.64, "end": 77.64, "text": " that it's available under the terms of a different end user license agreement. There's a short", "tokens": [51190, 300, 309, 311, 2435, 833, 264, 2115, 295, 257, 819, 917, 4195, 10476, 8106, 13, 821, 311, 257, 2099, 51440], "temperature": 0.0, "avg_logprob": -0.1792446686340882, "compression_ratio": 1.629496402877698, "no_speech_prob": 0.004088180605322123}, {"id": 12, "seek": 5612, "start": 77.64, "end": 83.2, "text": " link at the top there to the full gory legal details. But unlike REL, you can, anybody without", "tokens": [51440, 2113, 412, 264, 1192, 456, 281, 264, 1577, 290, 827, 5089, 4365, 13, 583, 8343, 497, 3158, 11, 291, 393, 11, 4472, 1553, 51718], "temperature": 0.0, "avg_logprob": -0.1792446686340882, "compression_ratio": 1.629496402877698, "no_speech_prob": 0.004088180605322123}, {"id": 13, "seek": 8320, "start": 83.24000000000001, "end": 88.92, "text": " any kind of relationship to Red Hat can access UBI images, pull, push them and build upon", "tokens": [50366, 604, 733, 295, 2480, 281, 4477, 15867, 393, 2105, 624, 11291, 5267, 11, 2235, 11, 2944, 552, 293, 1322, 3564, 50650], "temperature": 0.0, "avg_logprob": -0.15382873802854305, "compression_ratio": 1.7346153846153847, "no_speech_prob": 0.018674250692129135}, {"id": 14, "seek": 8320, "start": 88.92, "end": 94.08, "text": " them and distribute derivatives. So effectively it's a free image, and it's been designed", "tokens": [50650, 552, 293, 20594, 33733, 13, 407, 8659, 309, 311, 257, 1737, 3256, 11, 293, 309, 311, 668, 4761, 50908], "temperature": 0.0, "avg_logprob": -0.15382873802854305, "compression_ratio": 1.7346153846153847, "no_speech_prob": 0.018674250692129135}, {"id": 15, "seek": 8320, "start": 94.08, "end": 99.56, "text": " to be useful as a base for any kind of containerized application. There's three flavors of the", "tokens": [50908, 281, 312, 4420, 382, 257, 3096, 337, 604, 733, 295, 10129, 1602, 3861, 13, 821, 311, 1045, 16303, 295, 264, 51182], "temperature": 0.0, "avg_logprob": -0.15382873802854305, "compression_ratio": 1.7346153846153847, "no_speech_prob": 0.018674250692129135}, {"id": 16, "seek": 8320, "start": 99.56, "end": 105.08, "text": " main UBI images. So there's UBI as it's called, and then there's minimal and then there's", "tokens": [51182, 2135, 624, 11291, 5267, 13, 407, 456, 311, 624, 11291, 382, 309, 311, 1219, 11, 293, 550, 456, 311, 13206, 293, 550, 456, 311, 51458], "temperature": 0.0, "avg_logprob": -0.15382873802854305, "compression_ratio": 1.7346153846153847, "no_speech_prob": 0.018674250692129135}, {"id": 17, "seek": 8320, "start": 105.08, "end": 110.72, "text": " micro, and they're decreasing order size. So the full UBI image is about 200 megabytes", "tokens": [51458, 4532, 11, 293, 436, 434, 23223, 1668, 2744, 13, 407, 264, 1577, 624, 11291, 3256, 307, 466, 2331, 10816, 24538, 51740], "temperature": 0.0, "avg_logprob": -0.15382873802854305, "compression_ratio": 1.7346153846153847, "no_speech_prob": 0.018674250692129135}, {"id": 18, "seek": 11072, "start": 110.76, "end": 115.84, "text": " uncompressed, and the minimal one's about 90, and the micro one, which is really small,", "tokens": [50366, 8585, 79, 3805, 11, 293, 264, 13206, 472, 311, 466, 4289, 11, 293, 264, 4532, 472, 11, 597, 307, 534, 1359, 11, 50620], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 19, "seek": 11072, "start": 115.84, "end": 121.84, "text": " has almost nothing in it, is about 20 megabytes, 20 megabytes of nothing somehow. You can get", "tokens": [50620, 575, 1920, 1825, 294, 309, 11, 307, 466, 945, 10816, 24538, 11, 945, 10816, 24538, 295, 1825, 6063, 13, 509, 393, 483, 50920], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 20, "seek": 11072, "start": 121.84, "end": 125.76, "text": " these, I mean those particular UBI containers are available, widely available, places like", "tokens": [50920, 613, 11, 286, 914, 729, 1729, 624, 11291, 17089, 366, 2435, 11, 13371, 2435, 11, 3190, 411, 51116], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 21, "seek": 11072, "start": 125.76, "end": 131.92, "text": " Docker Hub, but most or many Red Hat containers are not available from Docker Hub, and I'm", "tokens": [51116, 33772, 18986, 11, 457, 881, 420, 867, 4477, 15867, 17089, 366, 406, 2435, 490, 33772, 18986, 11, 293, 286, 478, 51424], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 22, "seek": 11072, "start": 131.92, "end": 135.48, "text": " not sure if you can see it in the room because of the positions of the tables, but the Red", "tokens": [51424, 406, 988, 498, 291, 393, 536, 309, 294, 264, 1808, 570, 295, 264, 8432, 295, 264, 8020, 11, 457, 264, 4477, 51602], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 23, "seek": 11072, "start": 135.48, "end": 139.96, "text": " Hat ecosystem catalog is the place to go for Red Hat containers. So you can browse all", "tokens": [51602, 15867, 11311, 19746, 307, 264, 1081, 281, 352, 337, 4477, 15867, 17089, 13, 407, 291, 393, 31442, 439, 51826], "temperature": 0.0, "avg_logprob": -0.17313219896003382, "compression_ratio": 1.8154362416107384, "no_speech_prob": 0.017713453620672226}, {"id": 24, "seek": 13996, "start": 140.0, "end": 147.0, "text": " of the UBI ones there. And the open JDK containers then, the thing I work on, they're part of", "tokens": [50366, 295, 264, 624, 11291, 2306, 456, 13, 400, 264, 1269, 37082, 42, 17089, 550, 11, 264, 551, 286, 589, 322, 11, 436, 434, 644, 295, 50716], "temperature": 0.0, "avg_logprob": -0.15966109225624486, "compression_ratio": 1.6313868613138687, "no_speech_prob": 0.010030857287347317}, {"id": 25, "seek": 13996, "start": 147.0, "end": 151.8, "text": " the UBI family, so they're available under the same user license agreement, and you", "tokens": [50716, 264, 624, 11291, 1605, 11, 370, 436, 434, 2435, 833, 264, 912, 4195, 10476, 8106, 11, 293, 291, 50956], "temperature": 0.0, "avg_logprob": -0.15966109225624486, "compression_ratio": 1.6313868613138687, "no_speech_prob": 0.010030857287347317}, {"id": 26, "seek": 13996, "start": 151.8, "end": 157.8, "text": " can pull and pull them freely without needing to be a customer or to have a developer subscription.", "tokens": [50956, 393, 2235, 293, 2235, 552, 16433, 1553, 18006, 281, 312, 257, 5474, 420, 281, 362, 257, 10754, 17231, 13, 51256], "temperature": 0.0, "avg_logprob": -0.15966109225624486, "compression_ratio": 1.6313868613138687, "no_speech_prob": 0.010030857287347317}, {"id": 27, "seek": 13996, "start": 157.8, "end": 163.28, "text": " I haven't included the full matrix of JDK containers we have now because it's grown", "tokens": [51256, 286, 2378, 380, 5556, 264, 1577, 8141, 295, 37082, 42, 17089, 321, 362, 586, 570, 309, 311, 7709, 51530], "temperature": 0.0, "avg_logprob": -0.15966109225624486, "compression_ratio": 1.6313868613138687, "no_speech_prob": 0.010030857287347317}, {"id": 28, "seek": 13996, "start": 163.28, "end": 168.04000000000002, "text": " too big for a slide. I think we have about 16 at last count, but the general URI form", "tokens": [51530, 886, 955, 337, 257, 4137, 13, 286, 519, 321, 362, 466, 3165, 412, 1036, 1207, 11, 457, 264, 2674, 624, 5577, 1254, 51768], "temperature": 0.0, "avg_logprob": -0.15966109225624486, "compression_ratio": 1.6313868613138687, "no_speech_prob": 0.010030857287347317}, {"id": 29, "seek": 16804, "start": 168.07999999999998, "end": 173.28, "text": " for the containers is there's two variants. There's build of images which contain the", "tokens": [50366, 337, 264, 17089, 307, 456, 311, 732, 21669, 13, 821, 311, 1322, 295, 5267, 597, 5304, 264, 50626], "temperature": 0.0, "avg_logprob": -0.2028134547242331, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.020225245505571365}, {"id": 30, "seek": 16804, "start": 173.28, "end": 179.0, "text": " full JDK and developer tooling, the Java compiler and Maven, and that's the top one.", "tokens": [50626, 1577, 37082, 42, 293, 10754, 46593, 11, 264, 10745, 31958, 293, 4042, 553, 11, 293, 300, 311, 264, 1192, 472, 13, 50912], "temperature": 0.0, "avg_logprob": -0.2028134547242331, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.020225245505571365}, {"id": 31, "seek": 16804, "start": 179.0, "end": 184.0, "text": " And the second flavor we have is the runtime variants, which effectively suffix runtime,", "tokens": [50912, 400, 264, 1150, 6813, 321, 362, 307, 264, 34474, 21669, 11, 597, 8659, 3889, 970, 34474, 11, 51162], "temperature": 0.0, "avg_logprob": -0.2028134547242331, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.020225245505571365}, {"id": 32, "seek": 16804, "start": 184.0, "end": 188.92, "text": " you get that. That has a slightly smaller subset of the JDK and doesn't include build", "tokens": [51162, 291, 483, 300, 13, 663, 575, 257, 4748, 4356, 25993, 295, 264, 37082, 42, 293, 1177, 380, 4090, 1322, 51408], "temperature": 0.0, "avg_logprob": -0.2028134547242331, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.020225245505571365}, {"id": 33, "seek": 16804, "start": 188.92, "end": 195.92, "text": " tooling. I've included a link, which is probably at a better height now, to some, this is a", "tokens": [51408, 46593, 13, 286, 600, 5556, 257, 2113, 11, 597, 307, 1391, 412, 257, 1101, 6681, 586, 11, 281, 512, 11, 341, 307, 257, 51758], "temperature": 0.0, "avg_logprob": -0.2028134547242331, "compression_ratio": 1.6807692307692308, "no_speech_prob": 0.020225245505571365}, {"id": 34, "seek": 19592, "start": 196.0, "end": 200.67999999999998, "text": " page really, but we have a Gitub auto-generated documentation for all of the containers that", "tokens": [50368, 3028, 534, 11, 457, 321, 362, 257, 16939, 836, 8399, 12, 21848, 770, 14333, 337, 439, 295, 264, 17089, 300, 50602], "temperature": 0.0, "avg_logprob": -0.23649262446983188, "compression_ratio": 1.6311787072243347, "no_speech_prob": 0.01644996739923954}, {"id": 35, "seek": 19592, "start": 200.67999999999998, "end": 205.56, "text": " we've shipped in recent times, so that's the place to go to see what's available. It has", "tokens": [50602, 321, 600, 25312, 294, 5162, 1413, 11, 370, 300, 311, 264, 1081, 281, 352, 281, 536, 437, 311, 2435, 13, 467, 575, 50846], "temperature": 0.0, "avg_logprob": -0.23649262446983188, "compression_ratio": 1.6311787072243347, "no_speech_prob": 0.01644996739923954}, {"id": 36, "seek": 19592, "start": 205.56, "end": 210.56, "text": " jumping off points to the ecosystem catalog, but it also includes information on how to", "tokens": [50846, 11233, 766, 2793, 281, 264, 11311, 19746, 11, 457, 309, 611, 5974, 1589, 322, 577, 281, 51096], "temperature": 0.0, "avg_logprob": -0.23649262446983188, "compression_ratio": 1.6311787072243347, "no_speech_prob": 0.01644996739923954}, {"id": 37, "seek": 19592, "start": 210.56, "end": 216.23999999999998, "text": " actually configure the containers and to tailor them to your needs.", "tokens": [51096, 767, 22162, 264, 17089, 293, 281, 33068, 552, 281, 428, 2203, 13, 51380], "temperature": 0.0, "avg_logprob": -0.23649262446983188, "compression_ratio": 1.6311787072243347, "no_speech_prob": 0.01644996739923954}, {"id": 38, "seek": 19592, "start": 216.23999999999998, "end": 222.48, "text": " So OpenShift has value add on top of Kubernetes. One of the concept ads is something called", "tokens": [51380, 407, 7238, 7774, 2008, 575, 2158, 909, 322, 1192, 295, 23145, 13, 1485, 295, 264, 3410, 10342, 307, 746, 1219, 51692], "temperature": 0.0, "avg_logprob": -0.23649262446983188, "compression_ratio": 1.6311787072243347, "no_speech_prob": 0.01644996739923954}, {"id": 39, "seek": 22248, "start": 222.51999999999998, "end": 227.88, "text": " a build config and an instance of that is source to image. What OpenShift source to image", "tokens": [50366, 257, 1322, 6662, 293, 364, 5197, 295, 300, 307, 4009, 281, 3256, 13, 708, 7238, 7774, 2008, 4009, 281, 3256, 50634], "temperature": 0.0, "avg_logprob": -0.26201727332138436, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.016242919489741325}, {"id": 40, "seek": 22248, "start": 227.88, "end": 234.88, "text": " is a process which allows you to define a workflow to consume an application source", "tokens": [50634, 307, 257, 1399, 597, 4045, 291, 281, 6964, 257, 20993, 281, 14732, 364, 3861, 4009, 50984], "temperature": 0.0, "avg_logprob": -0.26201727332138436, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.016242919489741325}, {"id": 41, "seek": 22248, "start": 235.07999999999998, "end": 242.07999999999998, "text": " and produce a running deployable container automatically and automate the put-back process.", "tokens": [50994, 293, 5258, 257, 2614, 7274, 712, 10129, 6772, 293, 31605, 264, 829, 12, 3207, 1399, 13, 51344], "temperature": 0.0, "avg_logprob": -0.26201727332138436, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.016242919489741325}, {"id": 42, "seek": 22248, "start": 242.12, "end": 247.35999999999999, "text": " By running a command like that, that's OC is the main OpenShift command line tool. You", "tokens": [51346, 3146, 2614, 257, 5622, 411, 300, 11, 300, 311, 42278, 307, 264, 2135, 7238, 7774, 2008, 5622, 1622, 2290, 13, 509, 51608], "temperature": 0.0, "avg_logprob": -0.26201727332138436, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.016242919489741325}, {"id": 43, "seek": 24736, "start": 247.4, "end": 252.24, "text": " can create a whole load of objects inside OpenShift, which are interconnected to each", "tokens": [50366, 393, 1884, 257, 1379, 3677, 295, 6565, 1854, 7238, 7774, 2008, 11, 597, 366, 36611, 281, 1184, 50608], "temperature": 0.0, "avg_logprob": -0.17943376541137696, "compression_ratio": 1.6466165413533835, "no_speech_prob": 0.018468592315912247}, {"id": 44, "seek": 24736, "start": 252.24, "end": 258.74, "text": " other with triggers, so that in this particular example, if your application source URI is", "tokens": [50608, 661, 365, 22827, 11, 370, 300, 294, 341, 1729, 1365, 11, 498, 428, 3861, 4009, 624, 5577, 307, 50933], "temperature": 0.0, "avg_logprob": -0.17943376541137696, "compression_ratio": 1.6466165413533835, "no_speech_prob": 0.018468592315912247}, {"id": 45, "seek": 24736, "start": 258.74, "end": 263.32, "text": " changes, if you push and you commit, or the base image upon which you're using for this", "tokens": [50933, 2962, 11, 498, 291, 2944, 293, 291, 5599, 11, 420, 264, 3096, 3256, 3564, 597, 291, 434, 1228, 337, 341, 51162], "temperature": 0.0, "avg_logprob": -0.17943376541137696, "compression_ratio": 1.6466165413533835, "no_speech_prob": 0.018468592315912247}, {"id": 46, "seek": 24736, "start": 263.32, "end": 268.28000000000003, "text": " process changes, then the workflow will pick that up and event up and automatically rerun", "tokens": [51162, 1399, 2962, 11, 550, 264, 20993, 486, 1888, 300, 493, 293, 2280, 493, 293, 6772, 43819, 409, 51410], "temperature": 0.0, "avg_logprob": -0.17943376541137696, "compression_ratio": 1.6466165413533835, "no_speech_prob": 0.018468592315912247}, {"id": 47, "seek": 24736, "start": 268.28000000000003, "end": 272.96000000000004, "text": " and build a new deployment application, a deployment container. It's quite a simple", "tokens": [51410, 293, 1322, 257, 777, 19317, 3861, 11, 257, 19317, 10129, 13, 467, 311, 1596, 257, 2199, 51644], "temperature": 0.0, "avg_logprob": -0.17943376541137696, "compression_ratio": 1.6466165413533835, "no_speech_prob": 0.018468592315912247}, {"id": 48, "seek": 27296, "start": 273.0, "end": 280.0, "text": " workflow and the output image from this process is layered on top of the input image, which", "tokens": [50366, 20993, 293, 264, 5598, 3256, 490, 341, 1399, 307, 34666, 322, 1192, 295, 264, 4846, 3256, 11, 597, 50716], "temperature": 0.0, "avg_logprob": -0.17131596167110702, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.08954035490751266}, {"id": 49, "seek": 27296, "start": 280.35999999999996, "end": 285.28, "text": " is the builder. The problem with that is the builder image is pretty big and customers", "tokens": [50734, 307, 264, 27377, 13, 440, 1154, 365, 300, 307, 264, 27377, 3256, 307, 1238, 955, 293, 4581, 50980], "temperature": 0.0, "avg_logprob": -0.17131596167110702, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.08954035490751266}, {"id": 50, "seek": 27296, "start": 285.28, "end": 291.08, "text": " want small containers and size of side, it also has stuff in you don't want necessarily", "tokens": [50980, 528, 1359, 17089, 293, 2744, 295, 1252, 11, 309, 611, 575, 1507, 294, 291, 500, 380, 528, 4725, 51270], "temperature": 0.0, "avg_logprob": -0.17131596167110702, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.08954035490751266}, {"id": 51, "seek": 27296, "start": 291.08, "end": 296.88, "text": " in a runtime context, so the compiler, Maven, etc. So people with strong security concerns", "tokens": [51270, 294, 257, 34474, 4319, 11, 370, 264, 31958, 11, 4042, 553, 11, 5183, 13, 407, 561, 365, 2068, 3825, 7389, 51560], "temperature": 0.0, "avg_logprob": -0.17131596167110702, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.08954035490751266}, {"id": 52, "seek": 27296, "start": 296.88, "end": 302.88, "text": " or with audit requirements want something else. The current state of the art in OpenShift", "tokens": [51560, 420, 365, 17748, 7728, 528, 746, 1646, 13, 440, 2190, 1785, 295, 264, 1523, 294, 7238, 7774, 2008, 51860], "temperature": 0.0, "avg_logprob": -0.17131596167110702, "compression_ratio": 1.6679104477611941, "no_speech_prob": 0.08954035490751266}, {"id": 53, "seek": 30288, "start": 303.52, "end": 308.12, "text": " for achieving that is multi-stage pipelines. You can chain these things together. The top", "tokens": [50396, 337, 19626, 300, 307, 4825, 12, 17882, 40168, 13, 509, 393, 5021, 613, 721, 1214, 13, 440, 1192, 50626], "temperature": 0.0, "avg_logprob": -0.17291912665733924, "compression_ratio": 1.7743190661478598, "no_speech_prob": 0.009999784640967846}, {"id": 54, "seek": 30288, "start": 308.12, "end": 313.92, "text": " part of this diagram is from the previous slide and you can chain that into a second", "tokens": [50626, 644, 295, 341, 10686, 307, 490, 264, 3894, 4137, 293, 291, 393, 5021, 300, 666, 257, 1150, 50916], "temperature": 0.0, "avg_logprob": -0.17291912665733924, "compression_ratio": 1.7743190661478598, "no_speech_prob": 0.009999784640967846}, {"id": 55, "seek": 30288, "start": 313.92, "end": 319.0, "text": " build. In this case, the second build is using a different build conflict strategy called", "tokens": [50916, 1322, 13, 682, 341, 1389, 11, 264, 1150, 1322, 307, 1228, 257, 819, 1322, 6596, 5206, 1219, 51170], "temperature": 0.0, "avg_logprob": -0.17291912665733924, "compression_ratio": 1.7743190661478598, "no_speech_prob": 0.009999784640967846}, {"id": 56, "seek": 30288, "start": 319.0, "end": 325.12, "text": " Docker strategy and basically it's a Docker file, which you may be familiar with. In this", "tokens": [51170, 33772, 5206, 293, 1936, 309, 311, 257, 33772, 3991, 11, 597, 291, 815, 312, 4963, 365, 13, 682, 341, 51476], "temperature": 0.0, "avg_logprob": -0.17291912665733924, "compression_ratio": 1.7743190661478598, "no_speech_prob": 0.009999784640967846}, {"id": 57, "seek": 30288, "start": 325.12, "end": 329.71999999999997, "text": " case, the output of the first stage is an intermediate image, which is used as one of the ingredients", "tokens": [51476, 1389, 11, 264, 5598, 295, 264, 700, 3233, 307, 364, 19376, 3256, 11, 597, 307, 1143, 382, 472, 295, 264, 6952, 51706], "temperature": 0.0, "avg_logprob": -0.17291912665733924, "compression_ratio": 1.7743190661478598, "no_speech_prob": 0.009999784640967846}, {"id": 58, "seek": 32972, "start": 329.72, "end": 336.72, "text": " for the second stage and what we do basically, there we are. YAML, if you've ever dealt with", "tokens": [50364, 337, 264, 1150, 3233, 293, 437, 321, 360, 1936, 11, 456, 321, 366, 13, 398, 2865, 43, 11, 498, 291, 600, 1562, 15991, 365, 50714], "temperature": 0.0, "avg_logprob": -0.2333312459511332, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.036491990089416504}, {"id": 59, "seek": 32972, "start": 338.52000000000004, "end": 344.32000000000005, "text": " Kubernetes, OpenShift is exactly the same, YAML, lots of YAML. The key piece here for", "tokens": [50804, 23145, 11, 7238, 7774, 2008, 307, 2293, 264, 912, 11, 398, 2865, 43, 11, 3195, 295, 398, 2865, 43, 13, 440, 2141, 2522, 510, 337, 51094], "temperature": 0.0, "avg_logprob": -0.2333312459511332, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.036491990089416504}, {"id": 60, "seek": 32972, "start": 344.32000000000005, "end": 348.48, "text": " that second stage is a Docker file, which in this case is embedded deep in the middle", "tokens": [51094, 300, 1150, 3233, 307, 257, 33772, 3991, 11, 597, 294, 341, 1389, 307, 16741, 2452, 294, 264, 2808, 51302], "temperature": 0.0, "avg_logprob": -0.2333312459511332, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.036491990089416504}, {"id": 61, "seek": 32972, "start": 348.48, "end": 355.48, "text": " of YAML territory and it's a reasonably simple one. That's the state of the art today. I'm", "tokens": [51302, 295, 398, 2865, 43, 11360, 293, 309, 311, 257, 23551, 2199, 472, 13, 663, 311, 264, 1785, 295, 264, 1523, 965, 13, 286, 478, 51652], "temperature": 0.0, "avg_logprob": -0.2333312459511332, "compression_ratio": 1.5570175438596492, "no_speech_prob": 0.036491990089416504}, {"id": 62, "seek": 35548, "start": 355.76, "end": 360.48, "text": " using Qwakus, I think you mentioned it on the side. For what follows, I've used Qwakus", "tokens": [50378, 1228, 1249, 86, 514, 301, 11, 286, 519, 291, 2835, 309, 322, 264, 1252, 13, 1171, 437, 10002, 11, 286, 600, 1143, 1249, 86, 514, 301, 50614], "temperature": 0.0, "avg_logprob": -0.20353529625332234, "compression_ratio": 1.5168067226890756, "no_speech_prob": 0.00662976922467351}, {"id": 63, "seek": 35548, "start": 360.48, "end": 367.48, "text": " mostly for my experiments and for the examples. How big is it when you finish that process?", "tokens": [50614, 5240, 337, 452, 12050, 293, 337, 264, 5110, 13, 1012, 955, 307, 309, 562, 291, 2413, 300, 1399, 30, 50964], "temperature": 0.0, "avg_logprob": -0.20353529625332234, "compression_ratio": 1.5168067226890756, "no_speech_prob": 0.00662976922467351}, {"id": 64, "seek": 35548, "start": 369.24, "end": 374.72, "text": " It's pretty big. Unfortunately, the savings over the straightforward S2I process these", "tokens": [51052, 467, 311, 1238, 955, 13, 8590, 11, 264, 13454, 670, 264, 15325, 318, 17, 40, 1399, 613, 51326], "temperature": 0.0, "avg_logprob": -0.20353529625332234, "compression_ratio": 1.5168067226890756, "no_speech_prob": 0.00662976922467351}, {"id": 65, "seek": 35548, "start": 374.72, "end": 381.72, "text": " days is pretty small, about 5%, not very good. If you look at the pie chart there, the thinnest", "tokens": [51326, 1708, 307, 1238, 1359, 11, 466, 1025, 8923, 406, 588, 665, 13, 759, 291, 574, 412, 264, 1730, 6927, 456, 11, 264, 5862, 77, 377, 51676], "temperature": 0.0, "avg_logprob": -0.20353529625332234, "compression_ratio": 1.5168067226890756, "no_speech_prob": 0.00662976922467351}, {"id": 66, "seek": 38172, "start": 382.44000000000005, "end": 389.44000000000005, "text": " slice on the slide is the application itself. The cost of doing business with this is quite", "tokens": [50400, 13153, 322, 264, 4137, 307, 264, 3861, 2564, 13, 440, 2063, 295, 884, 1606, 365, 341, 307, 1596, 50750], "temperature": 0.0, "avg_logprob": -0.14738139365483255, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.009672326035797596}, {"id": 67, "seek": 38172, "start": 390.08000000000004, "end": 395.68, "text": " high. The largest slice of the pie is the JDK itself and therefore that's the place", "tokens": [50782, 1090, 13, 440, 6443, 13153, 295, 264, 1730, 307, 264, 37082, 42, 2564, 293, 4412, 300, 311, 264, 1081, 51062], "temperature": 0.0, "avg_logprob": -0.14738139365483255, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.009672326035797596}, {"id": 68, "seek": 38172, "start": 395.68, "end": 400.0, "text": " we're focusing on trying to make space and size reductions. You can see another of the", "tokens": [51062, 321, 434, 8416, 322, 1382, 281, 652, 1901, 293, 2744, 40296, 13, 509, 393, 536, 1071, 295, 264, 51278], "temperature": 0.0, "avg_logprob": -0.14738139365483255, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.009672326035797596}, {"id": 69, "seek": 38172, "start": 400.0, "end": 405.24, "text": " second biggest slice is the minimal base image itself. The open JDK container images based", "tokens": [51278, 1150, 3880, 13153, 307, 264, 13206, 3096, 3256, 2564, 13, 440, 1269, 37082, 42, 10129, 5267, 2361, 51540], "temperature": 0.0, "avg_logprob": -0.14738139365483255, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.009672326035797596}, {"id": 70, "seek": 38172, "start": 405.24, "end": 411.20000000000005, "text": " upon the UBI minimal image and that's about a quarter of the final payload for the application", "tokens": [51540, 3564, 264, 624, 11291, 13206, 3256, 293, 300, 311, 466, 257, 6555, 295, 264, 2572, 30918, 337, 264, 3861, 51838], "temperature": 0.0, "avg_logprob": -0.14738139365483255, "compression_ratio": 1.7991967871485943, "no_speech_prob": 0.009672326035797596}, {"id": 71, "seek": 41120, "start": 411.2, "end": 416.32, "text": " container here. First focus then is on trying to shrink the JDK and the second focus is", "tokens": [50364, 10129, 510, 13, 2386, 1879, 550, 307, 322, 1382, 281, 23060, 264, 37082, 42, 293, 264, 1150, 1879, 307, 50620], "temperature": 0.0, "avg_logprob": -0.16080097819483558, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.005687658675014973}, {"id": 72, "seek": 41120, "start": 416.32, "end": 423.32, "text": " to take a look at this base image. Our approach, what we're exploring is effectively the same", "tokens": [50620, 281, 747, 257, 574, 412, 341, 3096, 3256, 13, 2621, 3109, 11, 437, 321, 434, 12736, 307, 8659, 264, 912, 50970], "temperature": 0.0, "avg_logprob": -0.16080097819483558, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.005687658675014973}, {"id": 73, "seek": 41120, "start": 423.52, "end": 429.36, "text": " basic shape of the workflow as before except we're going to extend the two build phases.", "tokens": [50980, 3875, 3909, 295, 264, 20993, 382, 949, 3993, 321, 434, 516, 281, 10101, 264, 732, 1322, 18764, 13, 51272], "temperature": 0.0, "avg_logprob": -0.16080097819483558, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.005687658675014973}, {"id": 74, "seek": 41120, "start": 429.36, "end": 436.36, "text": " The first extension is we're going to add at the application build stage, a post build,", "tokens": [51272, 440, 700, 10320, 307, 321, 434, 516, 281, 909, 412, 264, 3861, 1322, 3233, 11, 257, 2183, 1322, 11, 51622], "temperature": 0.0, "avg_logprob": -0.16080097819483558, "compression_ratio": 1.6199095022624435, "no_speech_prob": 0.005687658675014973}, {"id": 75, "seek": 43636, "start": 436.44, "end": 442.40000000000003, "text": " an analysis of the application using J-Link or J-Dep to determine which Java modules it", "tokens": [50368, 364, 5215, 295, 264, 3861, 1228, 508, 12, 26822, 420, 508, 12, 35, 595, 281, 6997, 597, 10745, 16679, 309, 50666], "temperature": 0.0, "avg_logprob": -0.21406197280026554, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.019105225801467896}, {"id": 76, "seek": 43636, "start": 442.40000000000003, "end": 448.12, "text": " uses. I should probably stress that the application itself does not need to use Java modules for", "tokens": [50666, 4960, 13, 286, 820, 1391, 4244, 300, 264, 3861, 2564, 775, 406, 643, 281, 764, 10745, 16679, 337, 50952], "temperature": 0.0, "avg_logprob": -0.21406197280026554, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.019105225801467896}, {"id": 77, "seek": 43636, "start": 448.12, "end": 452.16, "text": " this to function. We're looking at the Java modules that the application touches within", "tokens": [50952, 341, 281, 2445, 13, 492, 434, 1237, 412, 264, 10745, 16679, 300, 264, 3861, 17431, 1951, 51154], "temperature": 0.0, "avg_logprob": -0.21406197280026554, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.019105225801467896}, {"id": 78, "seek": 43636, "start": 452.16, "end": 459.16, "text": " the JDK. Then we use J-Link to strip the RedTap Open JDK that's provided in the container", "tokens": [51154, 264, 37082, 42, 13, 1396, 321, 764, 508, 12, 26822, 281, 12828, 264, 4477, 51, 569, 7238, 37082, 42, 300, 311, 5649, 294, 264, 10129, 51504], "temperature": 0.0, "avg_logprob": -0.21406197280026554, "compression_ratio": 1.6837209302325582, "no_speech_prob": 0.019105225801467896}, {"id": 79, "seek": 45916, "start": 460.16, "end": 467.16, "text": " and create a bespoke VM which we then stash in the intermediate image. The second stage,", "tokens": [50414, 293, 1884, 257, 4097, 48776, 18038, 597, 321, 550, 342, 1299, 294, 264, 19376, 3256, 13, 440, 1150, 3233, 11, 50764], "temperature": 0.0, "avg_logprob": -0.2262211765151426, "compression_ratio": 1.6711711711711712, "no_speech_prob": 0.030742065981030464}, {"id": 80, "seek": 45916, "start": 468.36, "end": 473.76000000000005, "text": " the cherry picking stage then, we extend what we did before where we copied the application", "tokens": [50824, 264, 20164, 8867, 3233, 550, 11, 321, 10101, 437, 321, 630, 949, 689, 321, 25365, 264, 3861, 51094], "temperature": 0.0, "avg_logprob": -0.2262211765151426, "compression_ratio": 1.6711711711711712, "no_speech_prob": 0.030742065981030464}, {"id": 81, "seek": 45916, "start": 473.76000000000005, "end": 480.76000000000005, "text": " jar over into the runtime image and we additionally copy over the stripped JVM and a run script,", "tokens": [51094, 15181, 670, 666, 264, 34474, 3256, 293, 321, 43181, 5055, 670, 264, 33221, 508, 53, 44, 293, 257, 1190, 5755, 11, 51444], "temperature": 0.0, "avg_logprob": -0.2262211765151426, "compression_ratio": 1.6711711711711712, "no_speech_prob": 0.030742065981030464}, {"id": 82, "seek": 45916, "start": 482.36, "end": 486.84000000000003, "text": " basically the shell script entry point for the container which does some of the configuration", "tokens": [51524, 1936, 264, 8720, 5755, 8729, 935, 337, 264, 10129, 597, 775, 512, 295, 264, 11694, 51748], "temperature": 0.0, "avg_logprob": -0.2262211765151426, "compression_ratio": 1.6711711711711712, "no_speech_prob": 0.030742065981030464}, {"id": 83, "seek": 48684, "start": 486.84, "end": 492.2, "text": " at runtime and a small number of system dependencies we need to make the whole thing work. The reason", "tokens": [50364, 412, 34474, 293, 257, 1359, 1230, 295, 1185, 36606, 321, 643, 281, 652, 264, 1379, 551, 589, 13, 440, 1778, 50632], "temperature": 0.0, "avg_logprob": -0.17615670098198785, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.010140394791960716}, {"id": 84, "seek": 48684, "start": 492.2, "end": 496.47999999999996, "text": " we need to do these additional cherry picking things is because we've also switched out", "tokens": [50632, 321, 643, 281, 360, 613, 4497, 20164, 8867, 721, 307, 570, 321, 600, 611, 16858, 484, 50846], "temperature": 0.0, "avg_logprob": -0.17615670098198785, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.010140394791960716}, {"id": 85, "seek": 48684, "start": 496.47999999999996, "end": 503.47999999999996, "text": " the image which we're layering on top of and we're now able to target the UBI micro image.", "tokens": [50846, 264, 3256, 597, 321, 434, 40754, 322, 1192, 295, 293, 321, 434, 586, 1075, 281, 3779, 264, 624, 11291, 4532, 3256, 13, 51196], "temperature": 0.0, "avg_logprob": -0.17615670098198785, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.010140394791960716}, {"id": 86, "seek": 48684, "start": 503.79999999999995, "end": 510.79999999999995, "text": " I'm going to attempt something approximating a demo here. Let's have a look. If I was super", "tokens": [51212, 286, 478, 516, 281, 5217, 746, 8542, 990, 257, 10723, 510, 13, 961, 311, 362, 257, 574, 13, 759, 286, 390, 1687, 51562], "temperature": 0.0, "avg_logprob": -0.17615670098198785, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.010140394791960716}, {"id": 87, "seek": 51080, "start": 510.8, "end": 517.8, "text": " brave, I would fire up an open shift cluster and give you a full blown web based exploration", "tokens": [50364, 12653, 11, 286, 576, 2610, 493, 364, 1269, 5513, 13630, 293, 976, 291, 257, 1577, 16479, 3670, 2361, 16197, 50714], "temperature": 0.0, "avg_logprob": -0.23446142777152684, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.004580940119922161}, {"id": 88, "seek": 51080, "start": 518.4, "end": 525.4, "text": " of that going on. I'm not that brave and subject to the constraints of operating on a laptop", "tokens": [50744, 295, 300, 516, 322, 13, 286, 478, 406, 300, 12653, 293, 3983, 281, 264, 18491, 295, 7447, 322, 257, 10732, 51094], "temperature": 0.0, "avg_logprob": -0.23446142777152684, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.004580940119922161}, {"id": 89, "seek": 51080, "start": 525.4, "end": 530.44, "text": " and FOSDEM Wi-Fi. I hope they'll forgive me for that. I mulled over exactly what I should", "tokens": [51094, 293, 479, 4367, 35, 6683, 14035, 12, 13229, 13, 286, 1454, 436, 603, 10718, 385, 337, 300, 13, 286, 275, 858, 292, 670, 2293, 437, 286, 820, 51346], "temperature": 0.0, "avg_logprob": -0.23446142777152684, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.004580940119922161}, {"id": 90, "seek": 51080, "start": 530.44, "end": 535.92, "text": " show you and I could run through some of those build stages in isolation because in development", "tokens": [51346, 855, 291, 293, 286, 727, 1190, 807, 512, 295, 729, 1322, 10232, 294, 16001, 570, 294, 3250, 51620], "temperature": 0.0, "avg_logprob": -0.23446142777152684, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.004580940119922161}, {"id": 91, "seek": 51080, "start": 535.92, "end": 540.16, "text": " we could do each of those stages separately. I figured perhaps what I'll do is I'll just", "tokens": [51620, 321, 727, 360, 1184, 295, 729, 10232, 14759, 13, 286, 8932, 4317, 437, 286, 603, 360, 307, 286, 603, 445, 51832], "temperature": 0.0, "avg_logprob": -0.23446142777152684, "compression_ratio": 1.619718309859155, "no_speech_prob": 0.004580940119922161}, {"id": 92, "seek": 54016, "start": 540.1999999999999, "end": 547.1999999999999, "text": " show you the end stage if you like. What I have on this machine is a set of containers", "tokens": [50366, 855, 291, 264, 917, 3233, 498, 291, 411, 13, 708, 286, 362, 322, 341, 3479, 307, 257, 992, 295, 17089, 50716], "temperature": 0.0, "avg_logprob": -0.2818966753342572, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.004641575738787651}, {"id": 93, "seek": 54016, "start": 547.56, "end": 554.56, "text": " that have been built already. Scrolling off the bottom, let me fix that. Give the terminal", "tokens": [50734, 300, 362, 668, 3094, 1217, 13, 2747, 18688, 766, 264, 2767, 11, 718, 385, 3191, 300, 13, 5303, 264, 14709, 51084], "temperature": 0.0, "avg_logprob": -0.2818966753342572, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.004641575738787651}, {"id": 94, "seek": 54016, "start": 555.6, "end": 562.6, "text": " a bit more read and state. I've got three containers here, container images on my machine.", "tokens": [51136, 257, 857, 544, 1401, 293, 1785, 13, 286, 600, 658, 1045, 17089, 510, 11, 10129, 5267, 322, 452, 3479, 13, 51486], "temperature": 0.0, "avg_logprob": -0.2818966753342572, "compression_ratio": 1.558139534883721, "no_speech_prob": 0.004641575738787651}, {"id": 95, "seek": 56260, "start": 563.6, "end": 570.6, "text": " The first one running through the normal one stage S2I process has resulted, I've highlighted", "tokens": [50414, 440, 700, 472, 2614, 807, 264, 2710, 472, 3233, 318, 17, 40, 1399, 575, 18753, 11, 286, 600, 17173, 50764], "temperature": 0.0, "avg_logprob": -0.3717561340332031, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.012422913685441017}, {"id": 96, "seek": 56260, "start": 572.24, "end": 579.24, "text": " on the other window, perils of multi-mono. Here we are. So the plain S2I image then,", "tokens": [50846, 322, 264, 661, 4910, 11, 680, 4174, 295, 4825, 12, 3317, 78, 13, 1692, 321, 366, 13, 407, 264, 11121, 318, 17, 40, 3256, 550, 11, 51196], "temperature": 0.0, "avg_logprob": -0.3717561340332031, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.012422913685441017}, {"id": 97, "seek": 56260, "start": 584.88, "end": 591.88, "text": " this is a quarkus quick start and it ended up being 421 megs according to the podman.", "tokens": [51478, 341, 307, 257, 421, 809, 301, 1702, 722, 293, 309, 4590, 493, 885, 1017, 4436, 10816, 82, 4650, 281, 264, 2497, 1601, 13, 51828], "temperature": 0.0, "avg_logprob": -0.3717561340332031, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.012422913685441017}, {"id": 98, "seek": 59260, "start": 592.9200000000001, "end": 598.9200000000001, "text": " The multi-stage image, the current state of the art was a little bit smaller at 384. Actually", "tokens": [50380, 440, 4825, 12, 17882, 3256, 11, 264, 2190, 1785, 295, 264, 1523, 390, 257, 707, 857, 4356, 412, 12843, 19, 13, 5135, 50680], "temperature": 0.0, "avg_logprob": -0.28592566838340155, "compression_ratio": 1.3976608187134503, "no_speech_prob": 0.004061343148350716}, {"id": 99, "seek": 59260, "start": 598.9200000000001, "end": 603.64, "text": " that's better than the slides. Then the final image which has gone through our proof of", "tokens": [50680, 300, 311, 1101, 813, 264, 9788, 13, 1396, 264, 2572, 3256, 597, 575, 2780, 807, 527, 8177, 295, 50916], "temperature": 0.0, "avg_logprob": -0.28592566838340155, "compression_ratio": 1.3976608187134503, "no_speech_prob": 0.004061343148350716}, {"id": 100, "seek": 59260, "start": 603.64, "end": 610.64, "text": " concept jailing integration is down to 146. Let's run it.", "tokens": [50916, 3410, 10511, 278, 10980, 307, 760, 281, 3499, 21, 13, 961, 311, 1190, 309, 13, 51266], "temperature": 0.0, "avg_logprob": -0.28592566838340155, "compression_ratio": 1.3976608187134503, "no_speech_prob": 0.004061343148350716}, {"id": 101, "seek": 61064, "start": 610.64, "end": 617.64, "text": " Run it, plonk, so that starts the app. Am I typing the right numbers here? Let's find", "tokens": [50364, 8950, 309, 11, 499, 266, 74, 11, 370, 300, 3719, 264, 724, 13, 2012, 286, 18444, 264, 558, 3547, 510, 30, 961, 311, 915, 50714], "temperature": 0.0, "avg_logprob": -0.29335934508080574, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.02120083011686802}, {"id": 102, "seek": 61064, "start": 630.4399999999999, "end": 636.64, "text": " out. I'm unable to connect, obviously not. Let me just borrow that window, fix it and", "tokens": [51354, 484, 13, 286, 478, 11299, 281, 1745, 11, 2745, 406, 13, 961, 385, 445, 11172, 300, 4910, 11, 3191, 309, 293, 51664], "temperature": 0.0, "avg_logprob": -0.29335934508080574, "compression_ratio": 1.2391304347826086, "no_speech_prob": 0.02120083011686802}, {"id": 103, "seek": 63664, "start": 636.64, "end": 643.64, "text": " put it back. Okay, there we go. Right, yeah, there you go, so the app works. So perhaps", "tokens": [50364, 829, 309, 646, 13, 1033, 11, 456, 321, 352, 13, 1779, 11, 1338, 11, 456, 291, 352, 11, 370, 264, 724, 1985, 13, 407, 4317, 50714], "temperature": 0.0, "avg_logprob": -0.2824982337231906, "compression_ratio": 1.3828125, "no_speech_prob": 0.05195531249046326}, {"id": 104, "seek": 63664, "start": 652.68, "end": 659.68, "text": " not the most exciting time you've seen today. That one, there we go. So yeah, in slightly", "tokens": [51166, 406, 264, 881, 4670, 565, 291, 600, 1612, 965, 13, 663, 472, 11, 456, 321, 352, 13, 407, 1338, 11, 294, 4748, 51516], "temperature": 0.0, "avg_logprob": -0.2824982337231906, "compression_ratio": 1.3828125, "no_speech_prob": 0.05195531249046326}, {"id": 105, "seek": 65968, "start": 660.56, "end": 667.56, "text": " more detail in the first phase when we extend the build process, this is opt in. We won't", "tokens": [50408, 544, 2607, 294, 264, 700, 5574, 562, 321, 10101, 264, 1322, 1399, 11, 341, 307, 2427, 294, 13, 492, 1582, 380, 50758], "temperature": 0.0, "avg_logprob": -0.27720522373280626, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.00969616137444973}, {"id": 106, "seek": 65968, "start": 667.56, "end": 672.88, "text": " be doing it necessarily for every container build, so you have to enable it with an environment", "tokens": [50758, 312, 884, 309, 4725, 337, 633, 10129, 1322, 11, 370, 291, 362, 281, 9528, 309, 365, 364, 2823, 51024], "temperature": 0.0, "avg_logprob": -0.27720522373280626, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.00969616137444973}, {"id": 107, "seek": 65968, "start": 672.88, "end": 678.3599999999999, "text": " variable. As I said earlier, the general gist of it is run JDEPS and then JLink and there's", "tokens": [51024, 7006, 13, 1018, 286, 848, 3071, 11, 264, 2674, 290, 468, 295, 309, 307, 1190, 508, 22296, 6273, 293, 550, 508, 26822, 293, 456, 311, 51298], "temperature": 0.0, "avg_logprob": -0.27720522373280626, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.00969616137444973}, {"id": 108, "seek": 65968, "start": 678.3599999999999, "end": 685.3599999999999, "text": " an awful lot of pre- and processing going on to make that work. We're at the stage", "tokens": [51298, 364, 11232, 688, 295, 659, 12, 293, 9007, 516, 322, 281, 652, 300, 589, 13, 492, 434, 412, 264, 3233, 51648], "temperature": 0.0, "avg_logprob": -0.27720522373280626, "compression_ratio": 1.5254237288135593, "no_speech_prob": 0.00969616137444973}, {"id": 109, "seek": 68536, "start": 685.8000000000001, "end": 690.08, "text": " of this project where we're exploring a wider variety of applications to find all the edge", "tokens": [50386, 295, 341, 1716, 689, 321, 434, 12736, 257, 11842, 5673, 295, 5821, 281, 915, 439, 264, 4691, 50600], "temperature": 0.0, "avg_logprob": -0.1495846618305553, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.005296260584145784}, {"id": 110, "seek": 68536, "start": 690.08, "end": 696.2, "text": " cases. We have to add some modules that aren't picked up for whatever reason. We have to", "tokens": [50600, 3331, 13, 492, 362, 281, 909, 512, 16679, 300, 3212, 380, 6183, 493, 337, 2035, 1778, 13, 492, 362, 281, 50906], "temperature": 0.0, "avg_logprob": -0.1495846618305553, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.005296260584145784}, {"id": 111, "seek": 68536, "start": 696.2, "end": 703.2, "text": " do some path fudging around when the class path is a bit unusual, et cetera. I've got", "tokens": [50906, 360, 512, 3100, 283, 532, 3249, 926, 562, 264, 1508, 3100, 307, 257, 857, 10901, 11, 1030, 11458, 13, 286, 600, 658, 51256], "temperature": 0.0, "avg_logprob": -0.1495846618305553, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.005296260584145784}, {"id": 112, "seek": 68536, "start": 704.36, "end": 708.64, "text": " a link to the source later if anyone really wants the gory details. So after this first", "tokens": [51314, 257, 2113, 281, 264, 4009, 1780, 498, 2878, 534, 2738, 264, 290, 827, 4365, 13, 407, 934, 341, 700, 51528], "temperature": 0.0, "avg_logprob": -0.1495846618305553, "compression_ratio": 1.5550660792951543, "no_speech_prob": 0.005296260584145784}, {"id": 113, "seek": 70864, "start": 708.64, "end": 715.64, "text": " stage, the intermediate image is pretty large. This is the second stage, the Docker file. Do", "tokens": [50364, 3233, 11, 264, 19376, 3256, 307, 1238, 2416, 13, 639, 307, 264, 1150, 3233, 11, 264, 33772, 3991, 13, 1144, 50714], "temperature": 0.0, "avg_logprob": -0.2181287026620126, "compression_ratio": 1.6094890510948905, "no_speech_prob": 0.27217793464660645}, {"id": 114, "seek": 70864, "start": 716.84, "end": 721.52, "text": " not attempt to read this slide. The takeaway really is that it's grown more complicated", "tokens": [50774, 406, 5217, 281, 1401, 341, 4137, 13, 440, 30681, 534, 307, 300, 309, 311, 7709, 544, 6179, 51008], "temperature": 0.0, "avg_logprob": -0.2181287026620126, "compression_ratio": 1.6094890510948905, "no_speech_prob": 0.27217793464660645}, {"id": 115, "seek": 70864, "start": 721.52, "end": 725.0, "text": " than it was before. It was one or two lines before and we're doing quite a lot more work", "tokens": [51008, 813, 309, 390, 949, 13, 467, 390, 472, 420, 732, 3876, 949, 293, 321, 434, 884, 1596, 257, 688, 544, 589, 51182], "temperature": 0.0, "avg_logprob": -0.2181287026620126, "compression_ratio": 1.6094890510948905, "no_speech_prob": 0.27217793464660645}, {"id": 116, "seek": 70864, "start": 725.0, "end": 730.72, "text": " now. But yeah, there's four distinct things we copy in. We copy in the application, the", "tokens": [51182, 586, 13, 583, 1338, 11, 456, 311, 1451, 10644, 721, 321, 5055, 294, 13, 492, 5055, 294, 264, 3861, 11, 264, 51468], "temperature": 0.0, "avg_logprob": -0.2181287026620126, "compression_ratio": 1.6094890510948905, "no_speech_prob": 0.27217793464660645}, {"id": 117, "seek": 70864, "start": 730.72, "end": 736.4399999999999, "text": " stripped JVM, a run script and some system dependencies. At the moment, that's just", "tokens": [51468, 33221, 508, 53, 44, 11, 257, 1190, 5755, 293, 512, 1185, 36606, 13, 1711, 264, 1623, 11, 300, 311, 445, 51754], "temperature": 0.0, "avg_logprob": -0.2181287026620126, "compression_ratio": 1.6094890510948905, "no_speech_prob": 0.27217793464660645}, {"id": 118, "seek": 73644, "start": 736.48, "end": 743.48, "text": " grep and orc actually. But that might grow as we expand this. The results are pretty good.", "tokens": [50366, 6066, 79, 293, 420, 66, 767, 13, 583, 300, 1062, 1852, 382, 321, 5268, 341, 13, 440, 3542, 366, 1238, 665, 13, 50716], "temperature": 0.0, "avg_logprob": -0.20193196268914973, "compression_ratio": 1.5321888412017168, "no_speech_prob": 0.013797235675156116}, {"id": 119, "seek": 73644, "start": 747.1600000000001, "end": 750.48, "text": " We're exploring a range of apps. This is not the best result. I've had all the worst. I've", "tokens": [50900, 492, 434, 12736, 257, 3613, 295, 7733, 13, 639, 307, 406, 264, 1151, 1874, 13, 286, 600, 632, 439, 264, 5855, 13, 286, 600, 51066], "temperature": 0.0, "avg_logprob": -0.20193196268914973, "compression_ratio": 1.5321888412017168, "no_speech_prob": 0.013797235675156116}, {"id": 120, "seek": 73644, "start": 750.48, "end": 757.48, "text": " tried to be fair. It's about 43% the size of doing the multi-stage build. We've thrown", "tokens": [51066, 3031, 281, 312, 3143, 13, 467, 311, 466, 17914, 4, 264, 2744, 295, 884, 264, 4825, 12, 17882, 1322, 13, 492, 600, 11732, 51416], "temperature": 0.0, "avg_logprob": -0.20193196268914973, "compression_ratio": 1.5321888412017168, "no_speech_prob": 0.013797235675156116}, {"id": 121, "seek": 73644, "start": 758.9200000000001, "end": 765.2800000000001, "text": " away close to 70%. We're very happy with that. The new JVM is half the size of the older", "tokens": [51488, 1314, 1998, 281, 5285, 6856, 492, 434, 588, 2055, 365, 300, 13, 440, 777, 508, 53, 44, 307, 1922, 264, 2744, 295, 264, 4906, 51806], "temperature": 0.0, "avg_logprob": -0.20193196268914973, "compression_ratio": 1.5321888412017168, "no_speech_prob": 0.013797235675156116}, {"id": 122, "seek": 76528, "start": 765.28, "end": 770.6, "text": " and the other significant saving is switching out to the micro-base image. We're happy with", "tokens": [50364, 293, 264, 661, 4776, 6816, 307, 16493, 484, 281, 264, 4532, 12, 17429, 3256, 13, 492, 434, 2055, 365, 50630], "temperature": 0.0, "avg_logprob": -0.27500296698676213, "compression_ratio": 1.6, "no_speech_prob": 0.0019696399103850126}, {"id": 123, "seek": 76528, "start": 770.6, "end": 777.6, "text": " this and we're going to pursue it. A few bits and there are caveats. We've got to determine", "tokens": [50630, 341, 293, 321, 434, 516, 281, 12392, 309, 13, 316, 1326, 9239, 293, 456, 366, 11730, 1720, 13, 492, 600, 658, 281, 6997, 50980], "temperature": 0.0, "avg_logprob": -0.27500296698676213, "compression_ratio": 1.6, "no_speech_prob": 0.0019696399103850126}, {"id": 124, "seek": 76528, "start": 780.4, "end": 787.4, "text": " how, whether we're already serious blockers for real-world applications, more complicated", "tokens": [51120, 577, 11, 1968, 321, 434, 1217, 3156, 3461, 433, 337, 957, 12, 13217, 5821, 11, 544, 6179, 51470], "temperature": 0.0, "avg_logprob": -0.27500296698676213, "compression_ratio": 1.6, "no_speech_prob": 0.0019696399103850126}, {"id": 125, "seek": 76528, "start": 787.4399999999999, "end": 792.0799999999999, "text": " applications than just quick starts. We've got some fun with JDK 11. At the moment, it", "tokens": [51472, 5821, 813, 445, 1702, 3719, 13, 492, 600, 658, 512, 1019, 365, 37082, 42, 2975, 13, 1711, 264, 1623, 11, 309, 51704], "temperature": 0.0, "avg_logprob": -0.27500296698676213, "compression_ratio": 1.6, "no_speech_prob": 0.0019696399103850126}, {"id": 126, "seek": 79208, "start": 792.12, "end": 796.5600000000001, "text": " grows the image. You get something twice as big instead of half the size. We know why", "tokens": [50366, 13156, 264, 3256, 13, 509, 483, 746, 6091, 382, 955, 2602, 295, 1922, 264, 2744, 13, 492, 458, 983, 50588], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 127, "seek": 79208, "start": 796.5600000000001, "end": 802.1600000000001, "text": " and that's in trying to be fixed. Missing features. The reason it's getting smaller is", "tokens": [50588, 293, 300, 311, 294, 1382, 281, 312, 6806, 13, 5275, 278, 4122, 13, 440, 1778, 309, 311, 1242, 4356, 307, 50868], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 128, "seek": 79208, "start": 802.1600000000001, "end": 806.5200000000001, "text": " because we're throwing stuff away. If you want FIPS support, if you're going to do stuff", "tokens": [50868, 570, 321, 434, 10238, 1507, 1314, 13, 759, 291, 528, 479, 40, 6273, 1406, 11, 498, 291, 434, 516, 281, 360, 1507, 51086], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 129, "seek": 79208, "start": 806.5200000000001, "end": 811.4000000000001, "text": " with time zone information or locales or you want debugging tools, that all needs to be", "tokens": [51086, 365, 565, 6668, 1589, 420, 2654, 279, 420, 291, 528, 45592, 3873, 11, 300, 439, 2203, 281, 312, 51330], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 130, "seek": 79208, "start": 811.4000000000001, "end": 815.48, "text": " added back in. We're trying to figure out a way that that would be practical for customers", "tokens": [51330, 3869, 646, 294, 13, 492, 434, 1382, 281, 2573, 484, 257, 636, 300, 300, 576, 312, 8496, 337, 4581, 51534], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 131, "seek": 79208, "start": 815.48, "end": 821.48, "text": " to actually do. The whole thing, our development works all in the open. If you want to do", "tokens": [51534, 281, 767, 360, 13, 440, 1379, 551, 11, 527, 3250, 1985, 439, 294, 264, 1269, 13, 759, 291, 528, 281, 360, 51834], "temperature": 0.0, "avg_logprob": -0.20261991385257605, "compression_ratio": 1.6719242902208202, "no_speech_prob": 0.01418695691972971}, {"id": 132, "seek": 82208, "start": 822.2800000000001, "end": 828.2800000000001, "text": " it, you can go to that address there and see all the gory details. It's on the bottom", "tokens": [50374, 309, 11, 291, 393, 352, 281, 300, 2985, 456, 293, 536, 439, 264, 290, 827, 4365, 13, 467, 311, 322, 264, 2767, 50674], "temperature": 0.0, "avg_logprob": -0.26666415422812273, "compression_ratio": 1.5816326530612246, "no_speech_prob": 0.006988022942095995}, {"id": 133, "seek": 82208, "start": 828.2800000000001, "end": 831.2800000000001, "text": " of that slide too. That's it. Thank you.", "tokens": [50674, 295, 300, 4137, 886, 13, 663, 311, 309, 13, 1044, 291, 13, 50824], "temperature": 0.0, "avg_logprob": -0.26666415422812273, "compression_ratio": 1.5816326530612246, "no_speech_prob": 0.006988022942095995}, {"id": 134, "seek": 82208, "start": 831.2800000000001, "end": 838.2800000000001, "text": " I've got five minutes. I can't start the next one early. We've got five minutes of questions", "tokens": [50824, 286, 600, 658, 1732, 2077, 13, 286, 393, 380, 722, 264, 958, 472, 2440, 13, 492, 600, 658, 1732, 2077, 295, 1651, 51174], "temperature": 0.0, "avg_logprob": -0.26666415422812273, "compression_ratio": 1.5816326530612246, "no_speech_prob": 0.006988022942095995}, {"id": 135, "seek": 82208, "start": 842.48, "end": 849.48, "text": " if anyone would like to. I don't know. I think the recording schedule would be broken. Any", "tokens": [51384, 498, 2878, 576, 411, 281, 13, 286, 500, 380, 458, 13, 286, 519, 264, 6613, 7567, 576, 312, 5463, 13, 2639, 51734], "temperature": 0.0, "avg_logprob": -0.26666415422812273, "compression_ratio": 1.5816326530612246, "no_speech_prob": 0.006988022942095995}, {"id": 136, "seek": 84948, "start": 849.48, "end": 856.48, "text": " questions? Thank you. Sorry. Thanks.", "tokens": [50364, 1651, 30, 1044, 291, 13, 4919, 13, 2561, 13, 50714], "temperature": 0.0, "avg_logprob": -0.4950791001319885, "compression_ratio": 1.4049079754601228, "no_speech_prob": 0.005732410121709108}, {"id": 137, "seek": 84948, "start": 856.48, "end": 863.48, "text": " Sorry, I just want to hear me. Your previous slide there, you just talked a couple of things.", "tokens": [50714, 4919, 11, 286, 445, 528, 281, 1568, 385, 13, 2260, 3894, 4137, 456, 11, 291, 445, 2825, 257, 1916, 295, 721, 13, 51064], "temperature": 0.0, "avg_logprob": -0.4950791001319885, "compression_ratio": 1.4049079754601228, "no_speech_prob": 0.005732410121709108}, {"id": 138, "seek": 84948, "start": 869.48, "end": 874.88, "text": " You listed down TZD, locales, debugging information. One thing just to know is the TZD is actually", "tokens": [51364, 509, 10052, 760, 314, 57, 35, 11, 2654, 279, 11, 45592, 1589, 13, 1485, 551, 445, 281, 458, 307, 264, 314, 57, 35, 307, 767, 51634], "temperature": 0.0, "avg_logprob": -0.4950791001319885, "compression_ratio": 1.4049079754601228, "no_speech_prob": 0.005732410121709108}, {"id": 139, "seek": 87488, "start": 874.88, "end": 879.84, "text": " in the base module. You don't get a choice. That will always be there. With your locales,", "tokens": [50364, 294, 264, 3096, 10088, 13, 509, 500, 380, 483, 257, 3922, 13, 663, 486, 1009, 312, 456, 13, 2022, 428, 2654, 279, 11, 50612], "temperature": 0.0, "avg_logprob": -0.20175126221802858, "compression_ratio": 1.8142292490118577, "no_speech_prob": 0.22873283922672272}, {"id": 140, "seek": 87488, "start": 879.84, "end": 883.88, "text": " there's actually a jailing plugin that actually allows you to select the locales. Maybe on", "tokens": [50612, 456, 311, 767, 257, 10511, 278, 23407, 300, 767, 4045, 291, 281, 3048, 264, 2654, 279, 13, 2704, 322, 50814], "temperature": 0.0, "avg_logprob": -0.20175126221802858, "compression_ratio": 1.8142292490118577, "no_speech_prob": 0.22873283922672272}, {"id": 141, "seek": 87488, "start": 883.88, "end": 890.88, "text": " your next step is something like that. By default, you just get US English. You can actually", "tokens": [50814, 428, 958, 1823, 307, 746, 411, 300, 13, 3146, 7576, 11, 291, 445, 483, 2546, 3669, 13, 509, 393, 767, 51164], "temperature": 0.0, "avg_logprob": -0.20175126221802858, "compression_ratio": 1.8142292490118577, "no_speech_prob": 0.22873283922672272}, {"id": 142, "seek": 87488, "start": 891.92, "end": 896.8, "text": " with the dash include locales, you can actually list out the locales that you want. That plugin", "tokens": [51216, 365, 264, 8240, 4090, 2654, 279, 11, 291, 393, 767, 1329, 484, 264, 2654, 279, 300, 291, 528, 13, 663, 23407, 51460], "temperature": 0.0, "avg_logprob": -0.20175126221802858, "compression_ratio": 1.8142292490118577, "no_speech_prob": 0.22873283922672272}, {"id": 143, "seek": 87488, "start": 896.8, "end": 902.56, "text": " will actually just take the resource data for those specific locales. That actually might", "tokens": [51460, 486, 767, 445, 747, 264, 7684, 1412, 337, 729, 2685, 2654, 279, 13, 663, 767, 1062, 51748], "temperature": 0.0, "avg_logprob": -0.20175126221802858, "compression_ratio": 1.8142292490118577, "no_speech_prob": 0.22873283922672272}, {"id": 144, "seek": 90256, "start": 902.64, "end": 909.64, "text": " be useful for you. More generally, the reason that locales are an issue for you is that", "tokens": [50368, 312, 4420, 337, 291, 13, 5048, 5101, 11, 264, 1778, 300, 2654, 279, 366, 364, 2734, 337, 291, 307, 300, 50718], "temperature": 0.0, "avg_logprob": -0.17498305638631184, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00886586494743824}, {"id": 145, "seek": 90256, "start": 911.88, "end": 915.8, "text": " it's what's called a service module. It's a service provider. There's nothing that directly", "tokens": [50830, 309, 311, 437, 311, 1219, 257, 2643, 10088, 13, 467, 311, 257, 2643, 12398, 13, 821, 311, 1825, 300, 3838, 51026], "temperature": 0.0, "avg_logprob": -0.17498305638631184, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00886586494743824}, {"id": 146, "seek": 90256, "start": 915.8, "end": 922.8, "text": " depends on it. When you run JGEPs, you basically just sort of work out. That's basically doing", "tokens": [51026, 5946, 322, 309, 13, 1133, 291, 1190, 508, 38, 8929, 82, 11, 291, 1936, 445, 1333, 295, 589, 484, 13, 663, 311, 1936, 884, 51376], "temperature": 0.0, "avg_logprob": -0.17498305638631184, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00886586494743824}, {"id": 147, "seek": 90256, "start": 923.8399999999999, "end": 928.5999999999999, "text": " static analysis to actually tell you what references there are. You never see static reference", "tokens": [51428, 13437, 5215, 281, 767, 980, 291, 437, 15400, 456, 366, 13, 509, 1128, 536, 13437, 6408, 51666], "temperature": 0.0, "avg_logprob": -0.17498305638631184, "compression_ratio": 1.618421052631579, "no_speech_prob": 0.00886586494743824}, {"id": 148, "seek": 92860, "start": 928.64, "end": 933.28, "text": " to something that's in a service provider module. Security providers is something you", "tokens": [50366, 281, 746, 300, 311, 294, 257, 2643, 12398, 10088, 13, 11164, 11330, 307, 746, 291, 50598], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 149, "seek": 92860, "start": 933.28, "end": 937.28, "text": " could actually list down there as well. J&DI providers is actually a bunch of those in", "tokens": [50598, 727, 767, 1329, 760, 456, 382, 731, 13, 508, 5, 3085, 11330, 307, 767, 257, 3840, 295, 729, 294, 50798], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 150, "seek": 92860, "start": 937.28, "end": 940.6800000000001, "text": " the JDK that you never actually see a static reference to.", "tokens": [50798, 264, 37082, 42, 300, 291, 1128, 767, 536, 257, 13437, 6408, 281, 13, 50968], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 151, "seek": 92860, "start": 940.6800000000001, "end": 945.84, "text": " Okay, thank you. That is really useful. I think we've made things... One of the modifications", "tokens": [50968, 1033, 11, 1309, 291, 13, 663, 307, 534, 4420, 13, 286, 519, 321, 600, 1027, 721, 485, 1485, 295, 264, 26881, 51226], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 152, "seek": 92860, "start": 945.84, "end": 951.8000000000001, "text": " we do to the JDK in RHEL is to use the system time zone data. I think actually we've introduced", "tokens": [51226, 321, 360, 281, 264, 37082, 42, 294, 50209, 3158, 307, 281, 764, 264, 1185, 565, 6668, 1412, 13, 286, 519, 767, 321, 600, 7268, 51524], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 153, "seek": 92860, "start": 951.8000000000001, "end": 957.32, "text": " this problem which you probably wouldn't have upstream. The information about the system", "tokens": [51524, 341, 1154, 597, 291, 1391, 2759, 380, 362, 33915, 13, 440, 1589, 466, 264, 1185, 51800], "temperature": 0.0, "avg_logprob": -0.20970101789994675, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.01730240508913994}, {"id": 154, "seek": 95732, "start": 957.4000000000001, "end": 964.4000000000001, "text": " data module is very useful. Thank you very much. Is there one right at the back?", "tokens": [50368, 1412, 10088, 307, 588, 4420, 13, 1044, 291, 588, 709, 13, 1119, 456, 472, 558, 412, 264, 646, 30, 50718], "temperature": 0.0, "avg_logprob": -0.36942916220807015, "compression_ratio": 1.27007299270073, "no_speech_prob": 0.01604178361594677}, {"id": 155, "seek": 95732, "start": 976.2, "end": 983.2, "text": " So, nice presentation, by the way. My question is, this seems to be optimizing for disk size.", "tokens": [51308, 407, 11, 1481, 5860, 11, 538, 264, 636, 13, 1222, 1168, 307, 11, 341, 2544, 281, 312, 40425, 337, 12355, 2744, 13, 51658], "temperature": 0.0, "avg_logprob": -0.36942916220807015, "compression_ratio": 1.27007299270073, "no_speech_prob": 0.01604178361594677}, {"id": 156, "seek": 98320, "start": 983.6400000000001, "end": 987.1600000000001, "text": " What about memory usage and stuff like that?", "tokens": [50386, 708, 466, 4675, 14924, 293, 1507, 411, 300, 30, 50562], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 157, "seek": 98320, "start": 987.1600000000001, "end": 994.1600000000001, "text": " Yes, so that's true. Size was the driver. I don't think it should make an appreciable", "tokens": [50562, 1079, 11, 370, 300, 311, 2074, 13, 35818, 390, 264, 6787, 13, 286, 500, 380, 519, 309, 820, 652, 364, 3616, 712, 50912], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 158, "seek": 98320, "start": 994.6800000000001, "end": 1000.72, "text": " difference to memory usage. I don't believe the Java will page in the modules it's not", "tokens": [50938, 2649, 281, 4675, 14924, 13, 286, 500, 380, 1697, 264, 10745, 486, 3028, 294, 264, 16679, 309, 311, 406, 51240], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 159, "seek": 98320, "start": 1000.72, "end": 1004.2800000000001, "text": " actually using or they'll page that out. I don't know, actually. We'll have to do some", "tokens": [51240, 767, 1228, 420, 436, 603, 3028, 300, 484, 13, 286, 500, 380, 458, 11, 767, 13, 492, 603, 362, 281, 360, 512, 51418], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 160, "seek": 98320, "start": 1004.2800000000001, "end": 1008.84, "text": " measurements. It's not been a driver for the project, but I wouldn't expect this to make", "tokens": [51418, 15383, 13, 467, 311, 406, 668, 257, 6787, 337, 264, 1716, 11, 457, 286, 2759, 380, 2066, 341, 281, 652, 51646], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 161, "seek": 98320, "start": 1008.84, "end": 1012.0, "text": " significant gains in memory usage.", "tokens": [51646, 4776, 16823, 294, 4675, 14924, 13, 51804], "temperature": 0.0, "avg_logprob": -0.241425735609872, "compression_ratio": 1.6784313725490196, "no_speech_prob": 0.007711220532655716}, {"id": 162, "seek": 101200, "start": 1012.12, "end": 1018.12, "text": " Do you foresee that this could have a side effect on the memory side of things or not?", "tokens": [50370, 1144, 291, 38736, 300, 341, 727, 362, 257, 1252, 1802, 322, 264, 4675, 1252, 295, 721, 420, 406, 30, 50670], "temperature": 0.0, "avg_logprob": -0.23056165950814472, "compression_ratio": 1.6330645161290323, "no_speech_prob": 0.018936460837721825}, {"id": 163, "seek": 101200, "start": 1018.12, "end": 1023.44, "text": " Not loading stuff obviously consumes less memory. The fact that you don't load some", "tokens": [50670, 1726, 15114, 1507, 2745, 48823, 1570, 4675, 13, 440, 1186, 300, 291, 500, 380, 3677, 512, 50936], "temperature": 0.0, "avg_logprob": -0.23056165950814472, "compression_ratio": 1.6330645161290323, "no_speech_prob": 0.018936460837721825}, {"id": 164, "seek": 101200, "start": 1023.44, "end": 1028.24, "text": " stuff might make the system slower or something like that.", "tokens": [50936, 1507, 1062, 652, 264, 1185, 14009, 420, 746, 411, 300, 13, 51176], "temperature": 0.0, "avg_logprob": -0.23056165950814472, "compression_ratio": 1.6330645161290323, "no_speech_prob": 0.018936460837721825}, {"id": 165, "seek": 101200, "start": 1028.24, "end": 1032.56, "text": " I think... I don't know. We could add some measurements to our testing matrix, I think,", "tokens": [51176, 286, 519, 485, 286, 500, 380, 458, 13, 492, 727, 909, 512, 15383, 281, 527, 4997, 8141, 11, 286, 519, 11, 51392], "temperature": 0.0, "avg_logprob": -0.23056165950814472, "compression_ratio": 1.6330645161290323, "no_speech_prob": 0.018936460837721825}, {"id": 166, "seek": 101200, "start": 1032.56, "end": 1039.56, "text": " and see what happens. For memory usage, the focus... The driver for that exploration is", "tokens": [51392, 293, 536, 437, 2314, 13, 1171, 4675, 14924, 11, 264, 1879, 485, 440, 6787, 337, 300, 16197, 307, 51742], "temperature": 0.0, "avg_logprob": -0.23056165950814472, "compression_ratio": 1.6330645161290323, "no_speech_prob": 0.018936460837721825}, {"id": 167, "seek": 103956, "start": 1040.3999999999999, "end": 1046.3999999999999, "text": " not in and Red Hat seems to have been towards Quarkus and Native Image. We've stuck to", "tokens": [50406, 406, 294, 293, 4477, 15867, 2544, 281, 362, 668, 3030, 2326, 809, 301, 293, 15093, 29903, 13, 492, 600, 5541, 281, 50706], "temperature": 0.0, "avg_logprob": -0.3574404525756836, "compression_ratio": 1.5220883534136547, "no_speech_prob": 0.0031315425876528025}, {"id": 168, "seek": 103956, "start": 1046.3999999999999, "end": 1053.3999999999999, "text": " OpenJDK and the JVM for this work. We haven't really looked at memory, so it would be interesting", "tokens": [50706, 7238, 41, 35, 42, 293, 264, 508, 53, 44, 337, 341, 589, 13, 492, 2378, 380, 534, 2956, 412, 4675, 11, 370, 309, 576, 312, 1880, 51056], "temperature": 0.0, "avg_logprob": -0.3574404525756836, "compression_ratio": 1.5220883534136547, "no_speech_prob": 0.0031315425876528025}, {"id": 169, "seek": 103956, "start": 1053.3999999999999, "end": 1055.24, "text": " to see. Thank you.", "tokens": [51056, 281, 536, 13, 1044, 291, 13, 51148], "temperature": 0.0, "avg_logprob": -0.3574404525756836, "compression_ratio": 1.5220883534136547, "no_speech_prob": 0.0031315425876528025}, {"id": 170, "seek": 103956, "start": 1055.24, "end": 1062.24, "text": " Maybe I could just add to your reply just to that question. One of the side effects of", "tokens": [51148, 2704, 286, 727, 445, 909, 281, 428, 16972, 445, 281, 300, 1168, 13, 1485, 295, 264, 1252, 5065, 295, 51498], "temperature": 0.0, "avg_logprob": -0.3574404525756836, "compression_ratio": 1.5220883534136547, "no_speech_prob": 0.0031315425876528025}, {"id": 171, "seek": 103956, "start": 1062.24, "end": 1069.24, "text": " having fewer modules in the runtime image is that you're actually memory mapping, you're", "tokens": [51498, 1419, 13366, 16679, 294, 264, 34474, 3256, 307, 300, 291, 434, 767, 4675, 18350, 11, 291, 434, 51848], "temperature": 0.0, "avg_logprob": -0.3574404525756836, "compression_ratio": 1.5220883534136547, "no_speech_prob": 0.0031315425876528025}, {"id": 172, "seek": 106956, "start": 1069.56, "end": 1076.56, "text": " mapping a smaller... It's called the G-image file. What actually happens is that that's", "tokens": [50364, 18350, 257, 4356, 485, 467, 311, 1219, 264, 460, 12, 26624, 3991, 13, 708, 767, 2314, 307, 300, 300, 311, 50714], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 173, "seek": 106956, "start": 1077.32, "end": 1081.84, "text": " actually completely memory mapped. You're not going to touch all the pages, so you may", "tokens": [50752, 767, 2584, 4675, 33318, 13, 509, 434, 406, 516, 281, 2557, 439, 264, 7183, 11, 370, 291, 815, 50978], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 174, "seek": 106956, "start": 1081.84, "end": 1086.84, "text": " actually get some positive memory footprint benefits just because you're only going to", "tokens": [50978, 767, 483, 512, 3353, 4675, 24222, 5311, 445, 570, 291, 434, 787, 516, 281, 51228], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 175, "seek": 106956, "start": 1086.84, "end": 1091.24, "text": " have a small number of modules in the target image. It may help there.", "tokens": [51228, 362, 257, 1359, 1230, 295, 16679, 294, 264, 3779, 3256, 13, 467, 815, 854, 456, 13, 51448], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 176, "seek": 106956, "start": 1091.24, "end": 1093.24, "text": " Great. Thank you.", "tokens": [51448, 3769, 13, 1044, 291, 13, 51548], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 177, "seek": 106956, "start": 1093.24, "end": 1099.24, "text": " Cool. Okay. Thank you very much. Right. Next one.", "tokens": [51548, 8561, 13, 1033, 13, 1044, 291, 588, 709, 13, 1779, 13, 3087, 472, 13, 51848], "temperature": 0.0, "avg_logprob": -0.2657590293884277, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.004704465623944998}, {"id": 178, "seek": 109956, "start": 1099.56, "end": 1106.56, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50714], "temperature": 0.0, "avg_logprob": -0.9354394276936849, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.9687032699584961}], "language": "en"}