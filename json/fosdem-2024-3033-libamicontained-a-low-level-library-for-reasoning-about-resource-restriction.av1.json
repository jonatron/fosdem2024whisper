{"text": " Hi, so I'm Tycho Anderson. This is my colleague Sebastian Dabdupe and we work. I don't know, is this, is that, I don't know, we'll see. Oh, did I bump it now? Oh, that off. Okay. All right, so we work at Netflix on the multi-tenant container platform there. And I want to point out that the name for this is not in any way related to Jesse Frazell's library we break out. In fact, I didn't realize that when I cooked up this name that there was that name space collision. And I think there's some thought that we will probably merge this into a Linux containers project soonish. So that disclaimer, this won't be this particular name may not be that long lived. So with that, I just kind of want to go into kind of a basic question. How many CPUs do you have? And this is a question that it seems very simple. You know, you could call one function that would return an integer and tell you the answer. But as we'll see in a little bit, people have screwed it up in a large variety of ways. So the way that we do this today is typically with C groups, I'll go over some of the other interfaces in a bit. But if I just did like a, so I'm in, I'm in this C group here, I've just created it. There's no limit right now. So this anything tasks in this C group can run on any CPU. So there's no tasks in the C group right now. So what I'm going to do is put this shell in that C group. So now the things you'll see the first pit there is the task, the shell and the second one is cat. So now those tasks are in this C group, but there's still no restrictions. So I'm going to, so now I've restricted this particular shell can only run tasks on CPU zero and one. So this is like every container engine that you talk to has a way to do this. And it's, this is how they do it. The problem then is if that container itself, for example, suppose that you were running system D in that container, that can just container may create a sub C group. So now I'm in some sub C group. And in fact, the container engine will then grant the container the ability to manage C groups. So, so now I'm, now I'm here and I can see that I'm in a sub C group. And I have CPU set that CPU is that effective that tells me what things in this sub C group can what processes, I'm sorry, what processors they could run on. But if you look, if I look at the CPU set that CPU's file, which is the one that you use to control stuff with that files empty. So in particular, if you are a naive run time, you might look at this file and say like, Oh, hey, I can run on lots of CPU's. And the reality is you can't because there's this other file that ends in dot effective that tells you here's what the some total of all of the restrictions up the tree are. But you have to know to look at this right file. And this is only one of the, the whatever four different interfaces we have. So there's the kernel has a command line you can use to do this. This is what I still see pieces what people who really care about this stuff like HPC people use. The second one is, honestly, it's what libc's used to use. Then there's prox that prox CPU info all of the system prox of s's are emulated by Alex CFS. So in some container environments, you will get a view in prox that of the right thing, but in other container environments, you won't. And then on top of all of that, we also have this is called sked get affinity, which gives you some combination of the above results, but does not, for example, containing I sold CPUs. So if you know, based on all of these interfaces, how to answer this simple question of how many CPUs do I have, you can leave. And if you don't know that's okay, because the whole point of this talk is that we're going to try and fix that for you. So, so what's missing from this, in particular, you can do stuff like CFS quotas. So you're not even really worried about the number of CPUs you have, you may be able to run on any CPU, but you may have like a very small shared quota. And so in large multi tenant systems like we have at Netflix, we're trying to move away from assigning specific people to specific CPU sets with the goal being that if there is a CPU that somebody can run on somebody should be running on that CPU. So even even the original question is not necessarily correct. So it's hard to answer. I'm just going to kind of give you an overview of all the funny stuff that we found. So TC Malik, if you use non sequential CPU assignments, it will seg fault. That's bad. The JVM's implementation. This is a bug that we filed. So it queries CPU set that CPUs not effective, which was the demo I showed you. If you just look at the wrong file, you'll get the wrong answer. The other thing is that we care about other resources besides CPU. So we also care about memory and other network things. And the problem is that this effective file is really nice for CPUs, but it doesn't exist for memory. So if you want to do it for memory, you have to walk the whole C group through yourself as opposed to doing what the kernel already knows. So answering this question is also kind of annoying for other resources that aren't the, you know, the most obvious one, which is CPUs. So what we would end up with in production is a two CPU job would allocate 384 gigs of heap, which is half of an R5. And then, you know, that's not very good. So, so this, this kind of annoying. There's a longer explanation that one of my colleagues wrote about, you know, how to compute this correctly in the face of C groups, but again, doesn't take into account I sold CPUs or other things. So there's more bugs. So G libc used to use. CIS devices system node, which is a CISFS file. And so we could with LXCFS mask that value, but then they switched to sked get affinity. So now we can no longer do that. So the reason that it's important to think about what G libc does is lots of people use this CISCFS. Or if you use the nprox command line tool to do make dash j nprox or whatever that uses G libc, which uses sked get affinity. So if you are restricting resources in a, in a strange way, you may get the wrong answer and you'll spawn the wrong number of worker threads and you'll context switch into oblivion and get less work done. So one, one of the G libc maintainers pointed out that this particular problem should be solved by the kernel. That's a bug that he filed that I think nobody from the kernel side at redhead has ever looked at. Musil for just for completeness does the same thing. Sked get affinity. So we also saw crashes in lib uv reasoning about this incorrectly, which is no jazz, which is important because that's what serves on Netflix.com. Even Alex CFS, which was written by some of the people in this room, myself included, I guess maybe nobody else in this room now, but some of the people on the program committee for this containers thing wrote this code and it was wrong. We have, we found a couple of bugs there. So this caused crashes in lots of places. That was also bad. So even the people who are supposed to know how to do this don't know how to do it. So, yeah, they also though, I mentioned this thing earlier about if you use shares and quota, you know, then you really get the wrong answer. Alex CFS has a solution for this, which is kind of cool. It's called the CPU future. So there's a question about where should this computation live? One of the G-lib C developers said that it should live in the kernel, but the kernel people, you know, haven't really worried about this. They continue to add interfaces for figuring this out. So, you know, one answer is it should live nowhere. We should just keep allocating large heaps and crashing stuff and whatever. Unfortunately, my boss doesn't like that answer. So the next thing is we should fix that in the container runtime. So this is the traditional way that we did with Alex CFS. So you bind mounts and file. It's a fuse file system. It looks at when you make a fuse file request, it looks at that process ID. It goes and looks in the C group tree for that process ID and then tells you it lies to you and it basically says, hey, there's this many CPUs online. So this is the traditional way it worked for a very long time until libc started switching away from looking at proc and cysfs files and started using cyscalls, which makes sense because parsing proc and cysfs is kind of annoying. So, you know, if there's a cyscall that can do the thing, they want to use it. So that makes sense. The kernel people often will say this thing that's mechanism not policy. So they will give you the mechanism to reason about the thing and it's up to you to make a policy about how many threads or whatever you want to spawn. And so in principle, they have given us the mechanism because the mechanism is these 40 interfaces that are all can do very different things. And so if you look at all the right places, you can do it correctly. So in some sense, the kernel already did it. It's just sort of complicated. So yeah, there's lots of them. And the other thing is that there's a new patch series allowing ebpf to do scheduling. So right now, if you think about cfs and cfs quotas, cfs is hard coded in the kernel, very well understood by lots of people. If you, the user can load an ebpf program that will now decide which tasks to schedule, the algorithm for determining how many CPU equivalents this thing has is now dynamic. It depends on the results of this ebpf program. So the kernel also can't tell you necessarily anymore. So that's, I guess, the goal of our presentation here today is to have this library exist in user space. So it's one place so that everybody can go and ask this question in one location. So it should have no dependencies because Golang doesn't want to link against libc, but also, you know, run times generally don't want to include a lot of other stuff because they're supposed to be small. If you think about JVM or whatever. So it should also be correct. So correct in two senses. One is, you know, we should give you the right number of CPUs. So we should do the math correctly. And the other senses, we shouldn't do like terrible memory corruption or other things like that. So it should be safe in the programming languages execution model sense. And with that. So what we're proposing is this library called live mi contained. And the idea is that, well, it'll be a container aware API that like calculates like with the resources you have. In this talk, we're mostly focusing on CPU count. And it'll be statically linked with the CBI and we're writing it in Rust for, you know, safety guarantees. And the idea is that it's meant to be used by like language run times and applications instead of like trying to figure out which is the right interface for resources. And here's a link to our repo. So. So why do run times ask? And like, and we hit all those bugs before. The idea is that they mostly do this to size their thread pools and specifically like their GC threads. And they want to size their arenas and allocator threads as well. And how can this go wrong to give kind of a maybe so much of a sense of what's going on in the future. So how can this go wrong to give kind of a maybe simplified example. Let's say you have 10 containers on a host and just to make the math easy that host has 100 CPUs and we assign each container 10% CPU quota. Okay. All right back. So again, 10 containers, 100 CPUs, 10% quota each. Now what happens is those run times in each container, they're all going to see 100 CPUs and they're going to start 100 threads that they expect to do like a CPU's worth of work. So what happens they eat through their quota right away. And you get a ton of starvation right GC pauses. Everything starts spiking. So what should they do? Well, call our API. So what we have first is kind of your classic. This is a classic num CPU. So we're going to call a skedget affinity and this takes into account CPU sets, affinity masks, online CPU sets, affinity masks, online CPU sets. So we're going to take num CPUs like all this stuff. But our real value add is this recommended threads calculation. So this will take num CPUs and constrain it with like quota, for example, and compute. It's not a rocket science algorithm. It's basically just quota over a period gives you like a number of like how many threads you should be running. This is what like system D and Alex CFS do. So it's like a well known calculation. And so let's do that example again, but with recommended threads, right? We've got 10 containers. We've got our 100 CPU hosts with quota. Now each one is going to get when they call recommended threads, they're going to get 10 CPUs and problem solved forever. So what have people done in the past, including ourselves? So every language runtime implemented themselves, like they call it, you know, pass a container aware flag to JVM. But usually as we've seen, they get it wrong or sometimes Alex CFS does it does the right calculation, but it can only do the the proc file system mounting. It doesn't do like doesn't take care of like skedget affinity. So what we did at Netflix was we use Alex CFS and then using set comp would intercept this skedget affinity to like do this calculation. So this is kind of our follow up to say we're like, there must be a better way to do this. And there's lib which is in the Alex project today, but it's not container aware. So that's actually the we go for and then the next thing we do is we do a set comp. And the next thing is I wanted to throw out some like some additional like issues we ran into, which is a lot of things assume like static like a static resource size, right? But in kind of a containers world and you can when you can do you can like edit C groups, like for a running process, we don't think that that's no longer a correct assumption. Right. So like you're allowed to change C groups on live process and nothing seems to take that into account. So other things we're thinking about are like, what if thread pools were dynamically sized? It would periodically check like, Hey, do I still have 10 CPUs or now do I have 20? You can resize your thread pool that way. But that's not the way it works today. So we're that's future work, but more like food for thought. And that's it. Thank you. For sure there's overhead. But the reality is like if you want to lie to people about the right answer to this question, like you have to do something. And so that's like the best stop gap. I think like, is there a less over heady way like the real solution writers for just applications to get it right. So they don't have to worry about it. And so that's sort of how we arrived at this particular solution is what if people just actually knew how to do this correctly. The overhead of getting it wrong is probably worse than this. Right. Yeah. I'm not sure. So checkpoint restore will do C groups. So like the majority of the way people do this is with C groups. So I think one problem could be is if you restored an application to a larger or a smaller number of CPUs than originally had today, like mayhem. So if you if you have 100 CPU application, then you restore it onto a two CPU box. It's still going to think it has 100 CPUs. It's going to allocate 100 memory arenas free like one for each physical thread so that it can do, you know, threadless locking to do memory allocations quickly and stuff. And so 98 of those 100 arenas will be wasted. So for you guys, if you want to dynamically change CPU size, you have the same problem, but actually on steroids because you really want application run times to resize their thread pools, which is Sebastian's last point. For us, it's mostly like just get it right the first time, please. Like let's figure it out later. Other questions. It's a good question. We should right now. Our set comp stuff is not open source, but there's no reason it could be. We just has to like turn the crank to do the work. Just just for the offline folks. Yeah. So it's a good question. So your question is sort of what is the roadmap for this workload like this was basically stop zero of like, do people think this is a good idea? So it sounds like you think is a good idea. It would be nice to have your collaboration. One of the questions I have for the LXC project leaders, are you interested in having this code in LXC? Because I'm thinking step two would be, you know, we can centralize the code in a place where the container people like it. And then step three would be, as you say, go hat and hand to each front time. And it probably involves submitting a pull request and then flying to the Golang conference and the JVM conference and the Node.js conference. And you know, like it's going to be a long road, but what we have now is bad. So anyway, to point question to. Yeah, we talked about it. So the reason why the thing that exists right now has been developed by all of us is because it could probably make sense to have something that's more generic, that actually covers what needs and that hopefully is bad. So I think it's a good place to have the community that's working as a project because we're really not famous enough for that. We've got like CFS with a lot of those things there that are already used by others. It's a good place for it. And as I was talking with Tiger in the past about this, this is a long game. It's something we've been wanting for a lot of decades. Nobody really did anything about it that we wanted to finally do something about. So in a lot of decades we can have sites on our great every means instead of having to fill it out. And in the end, there's going to be the end point in the budget of different things. So I mean, the obvious one is that for things like the good things, especially the good right time, those kind of things that's almost right, I go to the back of the crowd. Those definitely need this kind of information because right now they're trying to do it differently, they wouldn't be wrong for different reasons. So that's what makes sense. But we can also go to... ... like you know, whatever it's using, it's not taking a lot of resources to use that kind of system. We've got that very common misconception in an activity that starts, you know, load up, rate, and then something. Which is really important because once you've got things that are mixed, you can easily create a lot of like 5,000 on the machine. That's how we did it all, by just creating a secret room that's got almost no resources on the media and then link that to the media. It's a pretty effective whole in right now, in order to do it, it's a great way to figure out what's actually going on. You can get some stuff, you can get some stuff on other bases, but if you want the full picture, you can have many different stuff. I'm getting really tired of having project passing next slide. It's just extremely hard to approach the material that they want. Sounds like the answer is yes. You're interested. Yes. I was just like, I'm not a project manager. I'm a group that people call, I don't know what it is. Because I'm a group that's a student. Yeah, yeah, memory is actually worse than CPU. I don't know what it is. I'm just trying to make it very easy to do in place. Yeah, so I would say I am certainly not opposed to this. I think this basically shouldn't live under some Netflix repo, Netflix repo, because nobody will take us seriously. It's much better to live upstream, whether it's Linux containers, U2 Linux or whatever. The biggest thing is I'm guessing that U2 Linux people aren't that into Rust. Rust is like a little bit of a weird thing, because you want to convince people that stuff is safe, but also adding a Rust tool chain to your build time is kind of painful. I'd be happy to talk if... Yeah, I have a question. He's a computer engineer, he's a employee of my company, so... Yes, yeah, we should talk after this, for sure. Yeah, yeah, where it lives is like, I don't want to make another talk in ten years with this same number of bug reports on the top. Other questions? Cool, thank you. Thanks for watching.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 17.76, "text": " Hi, so I'm Tycho Anderson. This is my colleague Sebastian Dabdupe and we work. I don't know,", "tokens": [50364, 2421, 11, 370, 286, 478, 5569, 5738, 18768, 13, 639, 307, 452, 13532, 31102, 413, 455, 769, 494, 293, 321, 589, 13, 286, 500, 380, 458, 11, 51252], "temperature": 0.0, "avg_logprob": -0.38825779869442895, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.1794736236333847}, {"id": 1, "seek": 0, "start": 17.76, "end": 24.88, "text": " is this, is that, I don't know, we'll see. Oh, did I bump it now? Oh, that off. Okay.", "tokens": [51252, 307, 341, 11, 307, 300, 11, 286, 500, 380, 458, 11, 321, 603, 536, 13, 876, 11, 630, 286, 9961, 309, 586, 30, 876, 11, 300, 766, 13, 1033, 13, 51608], "temperature": 0.0, "avg_logprob": -0.38825779869442895, "compression_ratio": 1.289855072463768, "no_speech_prob": 0.1794736236333847}, {"id": 2, "seek": 2488, "start": 24.88, "end": 32.879999999999995, "text": " All right, so we work at Netflix on the multi-tenant container platform there. And I want to point", "tokens": [50364, 1057, 558, 11, 370, 321, 589, 412, 12778, 322, 264, 4825, 12, 1147, 394, 10129, 3663, 456, 13, 400, 286, 528, 281, 935, 50764], "temperature": 0.0, "avg_logprob": -0.2215177362615412, "compression_ratio": 1.6024096385542168, "no_speech_prob": 0.04665016382932663}, {"id": 3, "seek": 2488, "start": 32.879999999999995, "end": 40.879999999999995, "text": " out that the name for this is not in any way related to Jesse Frazell's library we break out.", "tokens": [50764, 484, 300, 264, 1315, 337, 341, 307, 406, 294, 604, 636, 4077, 281, 21895, 5849, 89, 898, 311, 6405, 321, 1821, 484, 13, 51164], "temperature": 0.0, "avg_logprob": -0.2215177362615412, "compression_ratio": 1.6024096385542168, "no_speech_prob": 0.04665016382932663}, {"id": 4, "seek": 2488, "start": 40.879999999999995, "end": 44.879999999999995, "text": " In fact, I didn't realize that when I cooked up this name that there was that name space collision.", "tokens": [51164, 682, 1186, 11, 286, 994, 380, 4325, 300, 562, 286, 9267, 493, 341, 1315, 300, 456, 390, 300, 1315, 1901, 24644, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2215177362615412, "compression_ratio": 1.6024096385542168, "no_speech_prob": 0.04665016382932663}, {"id": 5, "seek": 2488, "start": 44.879999999999995, "end": 53.879999999999995, "text": " And I think there's some thought that we will probably merge this into a Linux containers project soonish.", "tokens": [51364, 400, 286, 519, 456, 311, 512, 1194, 300, 321, 486, 1391, 22183, 341, 666, 257, 18734, 17089, 1716, 2321, 742, 13, 51814], "temperature": 0.0, "avg_logprob": -0.2215177362615412, "compression_ratio": 1.6024096385542168, "no_speech_prob": 0.04665016382932663}, {"id": 6, "seek": 5388, "start": 53.88, "end": 61.88, "text": " So that disclaimer, this won't be this particular name may not be that long lived. So with that,", "tokens": [50364, 407, 300, 40896, 11, 341, 1582, 380, 312, 341, 1729, 1315, 815, 406, 312, 300, 938, 5152, 13, 407, 365, 300, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14866617249279487, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.03841543197631836}, {"id": 7, "seek": 5388, "start": 61.88, "end": 71.88, "text": " I just kind of want to go into kind of a basic question. How many CPUs do you have? And this is a question", "tokens": [50764, 286, 445, 733, 295, 528, 281, 352, 666, 733, 295, 257, 3875, 1168, 13, 1012, 867, 13199, 82, 360, 291, 362, 30, 400, 341, 307, 257, 1168, 51264], "temperature": 0.0, "avg_logprob": -0.14866617249279487, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.03841543197631836}, {"id": 8, "seek": 5388, "start": 71.88, "end": 77.88, "text": " that it seems very simple. You know, you could call one function that would return an integer and tell you the answer.", "tokens": [51264, 300, 309, 2544, 588, 2199, 13, 509, 458, 11, 291, 727, 818, 472, 2445, 300, 576, 2736, 364, 24922, 293, 980, 291, 264, 1867, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14866617249279487, "compression_ratio": 1.511737089201878, "no_speech_prob": 0.03841543197631836}, {"id": 9, "seek": 7788, "start": 77.88, "end": 85.88, "text": " But as we'll see in a little bit, people have screwed it up in a large variety of ways. So the way that we do this today is", "tokens": [50364, 583, 382, 321, 603, 536, 294, 257, 707, 857, 11, 561, 362, 20331, 309, 493, 294, 257, 2416, 5673, 295, 2098, 13, 407, 264, 636, 300, 321, 360, 341, 965, 307, 50764], "temperature": 0.0, "avg_logprob": -0.13119403521219888, "compression_ratio": 1.456140350877193, "no_speech_prob": 0.2624680697917938}, {"id": 10, "seek": 7788, "start": 85.88, "end": 97.88, "text": " typically with C groups, I'll go over some of the other interfaces in a bit. But if I just did like a, so I'm in, I'm in this", "tokens": [50764, 5850, 365, 383, 3935, 11, 286, 603, 352, 670, 512, 295, 264, 661, 28416, 294, 257, 857, 13, 583, 498, 286, 445, 630, 411, 257, 11, 370, 286, 478, 294, 11, 286, 478, 294, 341, 51364], "temperature": 0.0, "avg_logprob": -0.13119403521219888, "compression_ratio": 1.456140350877193, "no_speech_prob": 0.2624680697917938}, {"id": 11, "seek": 9788, "start": 97.88, "end": 112.88, "text": " C group here, I've just created it. There's no limit right now. So this anything tasks in this C group can run on any CPU.", "tokens": [50364, 383, 1594, 510, 11, 286, 600, 445, 2942, 309, 13, 821, 311, 572, 4948, 558, 586, 13, 407, 341, 1340, 9608, 294, 341, 383, 1594, 393, 1190, 322, 604, 13199, 13, 51114], "temperature": 0.0, "avg_logprob": -0.19584275654384067, "compression_ratio": 1.150943396226415, "no_speech_prob": 0.3135593831539154}, {"id": 12, "seek": 11288, "start": 112.88, "end": 132.88, "text": " So there's no tasks in the C group right now. So what I'm going to do is put this shell in that C group. So now the things you'll", "tokens": [50364, 407, 456, 311, 572, 9608, 294, 264, 383, 1594, 558, 586, 13, 407, 437, 286, 478, 516, 281, 360, 307, 829, 341, 8720, 294, 300, 383, 1594, 13, 407, 586, 264, 721, 291, 603, 51364], "temperature": 0.0, "avg_logprob": -0.13542647110788444, "compression_ratio": 1.2772277227722773, "no_speech_prob": 0.3552691340446472}, {"id": 13, "seek": 13288, "start": 132.88, "end": 143.88, "text": " see the first pit there is the task, the shell and the second one is cat. So now those tasks are in this C group, but there's still no restrictions.", "tokens": [50364, 536, 264, 700, 10147, 456, 307, 264, 5633, 11, 264, 8720, 293, 264, 1150, 472, 307, 3857, 13, 407, 586, 729, 9608, 366, 294, 341, 383, 1594, 11, 457, 456, 311, 920, 572, 14191, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16687214715140206, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.07581016421318054}, {"id": 14, "seek": 13288, "start": 143.88, "end": 161.88, "text": " So I'm going to, so now I've restricted this particular shell can only run tasks on CPU zero and one. So this is like every", "tokens": [50914, 407, 286, 478, 516, 281, 11, 370, 586, 286, 600, 20608, 341, 1729, 8720, 393, 787, 1190, 9608, 322, 13199, 4018, 293, 472, 13, 407, 341, 307, 411, 633, 51814], "temperature": 0.0, "avg_logprob": -0.16687214715140206, "compression_ratio": 1.5722543352601157, "no_speech_prob": 0.07581016421318054}, {"id": 15, "seek": 16188, "start": 161.88, "end": 170.88, "text": " container engine that you talk to has a way to do this. And it's, this is how they do it. The problem then is if that container itself,", "tokens": [50364, 10129, 2848, 300, 291, 751, 281, 575, 257, 636, 281, 360, 341, 13, 400, 309, 311, 11, 341, 307, 577, 436, 360, 309, 13, 440, 1154, 550, 307, 498, 300, 10129, 2564, 11, 50814], "temperature": 0.0, "avg_logprob": -0.13518515148678342, "compression_ratio": 1.6, "no_speech_prob": 0.10358281433582306}, {"id": 16, "seek": 16188, "start": 170.88, "end": 179.88, "text": " for example, suppose that you were running system D in that container, that can just container may create a sub C group. So now I'm in some sub C group.", "tokens": [50814, 337, 1365, 11, 7297, 300, 291, 645, 2614, 1185, 413, 294, 300, 10129, 11, 300, 393, 445, 10129, 815, 1884, 257, 1422, 383, 1594, 13, 407, 586, 286, 478, 294, 512, 1422, 383, 1594, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13518515148678342, "compression_ratio": 1.6, "no_speech_prob": 0.10358281433582306}, {"id": 17, "seek": 17988, "start": 179.88, "end": 201.88, "text": " And in fact, the container engine will then grant the container the ability to manage C groups. So, so now I'm, now I'm here and I can see that I'm in a sub C group.", "tokens": [50364, 400, 294, 1186, 11, 264, 10129, 2848, 486, 550, 6386, 264, 10129, 264, 3485, 281, 3067, 383, 3935, 13, 407, 11, 370, 586, 286, 478, 11, 586, 286, 478, 510, 293, 286, 393, 536, 300, 286, 478, 294, 257, 1422, 383, 1594, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1672618642766425, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.6750678420066833}, {"id": 18, "seek": 20188, "start": 201.88, "end": 211.88, "text": " And I have CPU set that CPU is that effective that tells me what things in this sub C group can what processes, I'm sorry, what processors they could run on.", "tokens": [50364, 400, 286, 362, 13199, 992, 300, 13199, 307, 300, 4942, 300, 5112, 385, 437, 721, 294, 341, 1422, 383, 1594, 393, 437, 7555, 11, 286, 478, 2597, 11, 437, 27751, 436, 727, 1190, 322, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1743680056403665, "compression_ratio": 1.6485148514851484, "no_speech_prob": 0.8325265049934387}, {"id": 19, "seek": 20188, "start": 211.88, "end": 224.88, "text": " But if you look, if I look at the CPU set that CPU's file, which is the one that you use to control stuff with that files empty. So in particular, if you are a naive run time,", "tokens": [50864, 583, 498, 291, 574, 11, 498, 286, 574, 412, 264, 13199, 992, 300, 13199, 311, 3991, 11, 597, 307, 264, 472, 300, 291, 764, 281, 1969, 1507, 365, 300, 7098, 6707, 13, 407, 294, 1729, 11, 498, 291, 366, 257, 29052, 1190, 565, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1743680056403665, "compression_ratio": 1.6485148514851484, "no_speech_prob": 0.8325265049934387}, {"id": 20, "seek": 22488, "start": 225.88, "end": 241.88, "text": " you might look at this file and say like, Oh, hey, I can run on lots of CPU's. And the reality is you can't because there's this other file that ends in dot effective that tells you here's what the some total of all of the restrictions up the tree are.", "tokens": [50414, 291, 1062, 574, 412, 341, 3991, 293, 584, 411, 11, 876, 11, 4177, 11, 286, 393, 1190, 322, 3195, 295, 13199, 311, 13, 400, 264, 4103, 307, 291, 393, 380, 570, 456, 311, 341, 661, 3991, 300, 5314, 294, 5893, 4942, 300, 5112, 291, 510, 311, 437, 264, 512, 3217, 295, 439, 295, 264, 14191, 493, 264, 4230, 366, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15914084017276764, "compression_ratio": 1.4823529411764707, "no_speech_prob": 0.7423365712165833}, {"id": 21, "seek": 24188, "start": 241.88, "end": 256.88, "text": " But you have to know to look at this right file. And this is only one of the, the whatever four different interfaces we have. So there's the kernel has a command line you can use to do this.", "tokens": [50364, 583, 291, 362, 281, 458, 281, 574, 412, 341, 558, 3991, 13, 400, 341, 307, 787, 472, 295, 264, 11, 264, 2035, 1451, 819, 28416, 321, 362, 13, 407, 456, 311, 264, 28256, 575, 257, 5622, 1622, 291, 393, 764, 281, 360, 341, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1345123847325643, "compression_ratio": 1.3768115942028984, "no_speech_prob": 0.6434012651443481}, {"id": 22, "seek": 25688, "start": 256.88, "end": 276.88, "text": " This is what I still see pieces what people who really care about this stuff like HPC people use. The second one is, honestly, it's what libc's used to use. Then there's prox that prox CPU info all of the system prox of s's are emulated by Alex CFS.", "tokens": [50364, 639, 307, 437, 286, 920, 536, 3755, 437, 561, 567, 534, 1127, 466, 341, 1507, 411, 12557, 34, 561, 764, 13, 440, 1150, 472, 307, 11, 6095, 11, 309, 311, 437, 22854, 66, 311, 1143, 281, 764, 13, 1396, 456, 311, 447, 87, 300, 447, 87, 13199, 13614, 439, 295, 264, 1185, 447, 87, 295, 262, 311, 366, 846, 6987, 538, 5202, 21792, 50, 13, 51364], "temperature": 0.0, "avg_logprob": -0.37468103049457935, "compression_ratio": 1.464705882352941, "no_speech_prob": 0.7682780027389526}, {"id": 23, "seek": 27688, "start": 276.88, "end": 295.88, "text": " So in some container environments, you will get a view in prox that of the right thing, but in other container environments, you won't. And then on top of all of that, we also have this is called sked get affinity, which gives you some combination of the above results, but does not, for example, containing", "tokens": [50364, 407, 294, 512, 10129, 12388, 11, 291, 486, 483, 257, 1910, 294, 447, 87, 300, 295, 264, 558, 551, 11, 457, 294, 661, 10129, 12388, 11, 291, 1582, 380, 13, 400, 550, 322, 1192, 295, 439, 295, 300, 11, 321, 611, 362, 341, 307, 1219, 1110, 292, 483, 39703, 11, 597, 2709, 291, 512, 6562, 295, 264, 3673, 3542, 11, 457, 775, 406, 11, 337, 1365, 11, 19273, 51314], "temperature": 0.0, "avg_logprob": -0.1883547438515557, "compression_ratio": 1.6684782608695652, "no_speech_prob": 0.6540189385414124}, {"id": 24, "seek": 29588, "start": 296.88, "end": 312.88, "text": " I sold CPUs. So if you know, based on all of these interfaces, how to answer this simple question of how many CPUs do I have, you can leave. And if you don't know that's okay, because the whole point of this talk is that we're going to try and fix that for you.", "tokens": [50414, 286, 3718, 13199, 82, 13, 407, 498, 291, 458, 11, 2361, 322, 439, 295, 613, 28416, 11, 577, 281, 1867, 341, 2199, 1168, 295, 577, 867, 13199, 82, 360, 286, 362, 11, 291, 393, 1856, 13, 400, 498, 291, 500, 380, 458, 300, 311, 1392, 11, 570, 264, 1379, 935, 295, 341, 751, 307, 300, 321, 434, 516, 281, 853, 293, 3191, 300, 337, 291, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1818610055106027, "compression_ratio": 1.441988950276243, "no_speech_prob": 0.8856589198112488}, {"id": 25, "seek": 31288, "start": 313.88, "end": 328.88, "text": " So, so what's missing from this, in particular, you can do stuff like CFS quotas. So you're not even really worried about the number of CPUs you have, you may be able to run on any CPU, but you may have like a very small shared quota.", "tokens": [50414, 407, 11, 370, 437, 311, 5361, 490, 341, 11, 294, 1729, 11, 291, 393, 360, 1507, 411, 21792, 50, 9641, 296, 13, 407, 291, 434, 406, 754, 534, 5804, 466, 264, 1230, 295, 13199, 82, 291, 362, 11, 291, 815, 312, 1075, 281, 1190, 322, 604, 13199, 11, 457, 291, 815, 362, 411, 257, 588, 1359, 5507, 45171, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09725305012294225, "compression_ratio": 1.4181818181818182, "no_speech_prob": 0.7178475856781006}, {"id": 26, "seek": 32888, "start": 328.88, "end": 341.88, "text": " And so in large multi tenant systems like we have at Netflix, we're trying to move away from assigning specific people to specific CPU sets with the goal being that if there is a CPU that somebody can run on somebody should be running on that CPU.", "tokens": [50364, 400, 370, 294, 2416, 4825, 31000, 3652, 411, 321, 362, 412, 12778, 11, 321, 434, 1382, 281, 1286, 1314, 490, 49602, 2685, 561, 281, 2685, 13199, 6352, 365, 264, 3387, 885, 300, 498, 456, 307, 257, 13199, 300, 2618, 393, 1190, 322, 2618, 820, 312, 2614, 322, 300, 13199, 13, 51014], "temperature": 0.0, "avg_logprob": -0.0844210259457852, "compression_ratio": 1.5931558935361216, "no_speech_prob": 0.6543669700622559}, {"id": 27, "seek": 32888, "start": 342.88, "end": 353.88, "text": " So even even the original question is not necessarily correct. So it's hard to answer. I'm just going to kind of give you an overview of all the funny stuff that we found.", "tokens": [51064, 407, 754, 754, 264, 3380, 1168, 307, 406, 4725, 3006, 13, 407, 309, 311, 1152, 281, 1867, 13, 286, 478, 445, 516, 281, 733, 295, 976, 291, 364, 12492, 295, 439, 264, 4074, 1507, 300, 321, 1352, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0844210259457852, "compression_ratio": 1.5931558935361216, "no_speech_prob": 0.6543669700622559}, {"id": 28, "seek": 35388, "start": 353.88, "end": 369.88, "text": " So TC Malik, if you use non sequential CPU assignments, it will seg fault. That's bad. The JVM's implementation. This is a bug that we filed. So it queries CPU set that CPUs not effective, which was the demo I showed you.", "tokens": [50364, 407, 34150, 5746, 1035, 11, 498, 291, 764, 2107, 42881, 13199, 22546, 11, 309, 486, 3896, 7441, 13, 663, 311, 1578, 13, 440, 508, 53, 44, 311, 11420, 13, 639, 307, 257, 7426, 300, 321, 18789, 13, 407, 309, 24109, 13199, 992, 300, 13199, 82, 406, 4942, 11, 597, 390, 264, 10723, 286, 4712, 291, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13051950230317957, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.04398226737976074}, {"id": 29, "seek": 35388, "start": 370.88, "end": 380.88, "text": " If you just look at the wrong file, you'll get the wrong answer. The other thing is that we care about other resources besides CPU. So we also care about memory and other network things.", "tokens": [51214, 759, 291, 445, 574, 412, 264, 2085, 3991, 11, 291, 603, 483, 264, 2085, 1867, 13, 440, 661, 551, 307, 300, 321, 1127, 466, 661, 3593, 11868, 13199, 13, 407, 321, 611, 1127, 466, 4675, 293, 661, 3209, 721, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13051950230317957, "compression_ratio": 1.6451612903225807, "no_speech_prob": 0.04398226737976074}, {"id": 30, "seek": 38088, "start": 380.88, "end": 392.88, "text": " And the problem is that this effective file is really nice for CPUs, but it doesn't exist for memory. So if you want to do it for memory, you have to walk the whole C group through yourself as opposed to doing what the kernel already knows.", "tokens": [50364, 400, 264, 1154, 307, 300, 341, 4942, 3991, 307, 534, 1481, 337, 13199, 82, 11, 457, 309, 1177, 380, 2514, 337, 4675, 13, 407, 498, 291, 528, 281, 360, 309, 337, 4675, 11, 291, 362, 281, 1792, 264, 1379, 383, 1594, 807, 1803, 382, 8851, 281, 884, 437, 264, 28256, 1217, 3255, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06055571523944983, "compression_ratio": 1.5798319327731092, "no_speech_prob": 0.02594122104346752}, {"id": 31, "seek": 38088, "start": 393.88, "end": 400.88, "text": " So answering this question is also kind of annoying for other resources that aren't the, you know, the most obvious one, which is CPUs.", "tokens": [51014, 407, 13430, 341, 1168, 307, 611, 733, 295, 11304, 337, 661, 3593, 300, 3212, 380, 264, 11, 291, 458, 11, 264, 881, 6322, 472, 11, 597, 307, 13199, 82, 13, 51364], "temperature": 0.0, "avg_logprob": -0.06055571523944983, "compression_ratio": 1.5798319327731092, "no_speech_prob": 0.02594122104346752}, {"id": 32, "seek": 40088, "start": 401.88, "end": 424.88, "text": " So what we would end up with in production is a two CPU job would allocate 384 gigs of heap, which is half of an R5. And then, you know, that's not very good. So, so this, this kind of annoying. There's a longer explanation that one of my colleagues wrote about, you know, how to compute this correctly in the face of C groups, but again, doesn't take into account I sold CPUs or other things.", "tokens": [50414, 407, 437, 321, 576, 917, 493, 365, 294, 4265, 307, 257, 732, 13199, 1691, 576, 35713, 12843, 19, 34586, 295, 33591, 11, 597, 307, 1922, 295, 364, 497, 20, 13, 400, 550, 11, 291, 458, 11, 300, 311, 406, 588, 665, 13, 407, 11, 370, 341, 11, 341, 733, 295, 11304, 13, 821, 311, 257, 2854, 10835, 300, 472, 295, 452, 7734, 4114, 466, 11, 291, 458, 11, 577, 281, 14722, 341, 8944, 294, 264, 1851, 295, 383, 3935, 11, 457, 797, 11, 1177, 380, 747, 666, 2696, 286, 3718, 13199, 82, 420, 661, 721, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16347877502441407, "compression_ratio": 1.494296577946768, "no_speech_prob": 0.44126471877098083}, {"id": 33, "seek": 42488, "start": 425.88, "end": 429.88, "text": " So there's more bugs. So G libc used to use.", "tokens": [50414, 407, 456, 311, 544, 15120, 13, 407, 460, 22854, 66, 1143, 281, 764, 13, 50614], "temperature": 0.0, "avg_logprob": -0.27418497836951056, "compression_ratio": 1.3375, "no_speech_prob": 0.2306155264377594}, {"id": 34, "seek": 42488, "start": 431.88, "end": 442.88, "text": " CIS devices system node, which is a CISFS file. And so we could with LXCFS mask that value, but then they switched to sked get affinity. So now we can no longer do that.", "tokens": [50714, 383, 2343, 5759, 1185, 9984, 11, 597, 307, 257, 383, 2343, 29318, 3991, 13, 400, 370, 321, 727, 365, 441, 55, 34, 29318, 6094, 300, 2158, 11, 457, 550, 436, 16858, 281, 1110, 292, 483, 39703, 13, 407, 586, 321, 393, 572, 2854, 360, 300, 13, 51264], "temperature": 0.0, "avg_logprob": -0.27418497836951056, "compression_ratio": 1.3375, "no_speech_prob": 0.2306155264377594}, {"id": 35, "seek": 44288, "start": 443.88, "end": 449.88, "text": " So the reason that it's important to think about what G libc does is lots of people use this CISCFS.", "tokens": [50414, 407, 264, 1778, 300, 309, 311, 1021, 281, 519, 466, 437, 460, 22854, 66, 775, 307, 3195, 295, 561, 764, 341, 383, 2343, 34, 29318, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16992999826158797, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.30361688137054443}, {"id": 36, "seek": 44288, "start": 450.88, "end": 457.88, "text": " Or if you use the nprox command line tool to do make dash j nprox or whatever that uses G libc, which uses sked get affinity.", "tokens": [50764, 1610, 498, 291, 764, 264, 297, 4318, 87, 5622, 1622, 2290, 281, 360, 652, 8240, 361, 297, 4318, 87, 420, 2035, 300, 4960, 460, 22854, 66, 11, 597, 4960, 1110, 292, 483, 39703, 13, 51114], "temperature": 0.0, "avg_logprob": -0.16992999826158797, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.30361688137054443}, {"id": 37, "seek": 44288, "start": 458.88, "end": 470.88, "text": " So if you are restricting resources in a, in a strange way, you may get the wrong answer and you'll spawn the wrong number of worker threads and you'll context switch into oblivion and get less work done.", "tokens": [51164, 407, 498, 291, 366, 1472, 37714, 3593, 294, 257, 11, 294, 257, 5861, 636, 11, 291, 815, 483, 264, 2085, 1867, 293, 291, 603, 17088, 264, 2085, 1230, 295, 11346, 19314, 293, 291, 603, 4319, 3679, 666, 47039, 313, 293, 483, 1570, 589, 1096, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16992999826158797, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.30361688137054443}, {"id": 38, "seek": 47288, "start": 473.88, "end": 485.88, "text": " So one, one of the G libc maintainers pointed out that this particular problem should be solved by the kernel. That's a bug that he filed that I think nobody from the kernel side at redhead has ever looked at.", "tokens": [50414, 407, 472, 11, 472, 295, 264, 460, 22854, 66, 6909, 433, 10932, 484, 300, 341, 1729, 1154, 820, 312, 13041, 538, 264, 28256, 13, 663, 311, 257, 7426, 300, 415, 18789, 300, 286, 519, 5079, 490, 264, 28256, 1252, 412, 2182, 1934, 575, 1562, 2956, 412, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1747740782224215, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.006794970948249102}, {"id": 39, "seek": 47288, "start": 486.88, "end": 490.88, "text": " Musil for just for completeness does the same thing. Sked get affinity.", "tokens": [51064, 3569, 388, 337, 445, 337, 1557, 15264, 775, 264, 912, 551, 13, 7324, 292, 483, 39703, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1747740782224215, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.006794970948249102}, {"id": 40, "seek": 47288, "start": 491.88, "end": 500.88, "text": " So we also saw crashes in lib uv reasoning about this incorrectly, which is no jazz, which is important because that's what serves on Netflix.com.", "tokens": [51314, 407, 321, 611, 1866, 28642, 294, 22854, 344, 85, 21577, 466, 341, 42892, 11, 597, 307, 572, 15066, 11, 597, 307, 1021, 570, 300, 311, 437, 13451, 322, 12778, 13, 1112, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1747740782224215, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.006794970948249102}, {"id": 41, "seek": 50088, "start": 501.88, "end": 513.88, "text": " Even Alex CFS, which was written by some of the people in this room, myself included, I guess maybe nobody else in this room now, but some of the people on the program committee for this containers thing wrote this code and it was wrong.", "tokens": [50414, 2754, 5202, 21792, 50, 11, 597, 390, 3720, 538, 512, 295, 264, 561, 294, 341, 1808, 11, 2059, 5556, 11, 286, 2041, 1310, 5079, 1646, 294, 341, 1808, 586, 11, 457, 512, 295, 264, 561, 322, 264, 1461, 7482, 337, 341, 17089, 551, 4114, 341, 3089, 293, 309, 390, 2085, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07844877688684196, "compression_ratio": 1.7235772357723578, "no_speech_prob": 0.015894321724772453}, {"id": 42, "seek": 50088, "start": 514.88, "end": 516.88, "text": " We have, we found a couple of bugs there.", "tokens": [51064, 492, 362, 11, 321, 1352, 257, 1916, 295, 15120, 456, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07844877688684196, "compression_ratio": 1.7235772357723578, "no_speech_prob": 0.015894321724772453}, {"id": 43, "seek": 50088, "start": 517.88, "end": 520.88, "text": " So this caused crashes in lots of places. That was also bad.", "tokens": [51214, 407, 341, 7008, 28642, 294, 3195, 295, 3190, 13, 663, 390, 611, 1578, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07844877688684196, "compression_ratio": 1.7235772357723578, "no_speech_prob": 0.015894321724772453}, {"id": 44, "seek": 50088, "start": 521.88, "end": 523.88, "text": " So even the people who are supposed to know how to do this don't know how to do it.", "tokens": [51414, 407, 754, 264, 561, 567, 366, 3442, 281, 458, 577, 281, 360, 341, 500, 380, 458, 577, 281, 360, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07844877688684196, "compression_ratio": 1.7235772357723578, "no_speech_prob": 0.015894321724772453}, {"id": 45, "seek": 52388, "start": 523.88, "end": 537.88, "text": " So, yeah, they also though, I mentioned this thing earlier about if you use shares and quota, you know, then you really get the wrong answer. Alex CFS has a solution for this, which is kind of cool.", "tokens": [50364, 407, 11, 1338, 11, 436, 611, 1673, 11, 286, 2835, 341, 551, 3071, 466, 498, 291, 764, 12182, 293, 45171, 11, 291, 458, 11, 550, 291, 534, 483, 264, 2085, 1867, 13, 5202, 21792, 50, 575, 257, 3827, 337, 341, 11, 597, 307, 733, 295, 1627, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14101461462072423, "compression_ratio": 1.45, "no_speech_prob": 0.12406060844659805}, {"id": 46, "seek": 52388, "start": 538.88, "end": 539.88, "text": " It's called the CPU future.", "tokens": [51114, 467, 311, 1219, 264, 13199, 2027, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14101461462072423, "compression_ratio": 1.45, "no_speech_prob": 0.12406060844659805}, {"id": 47, "seek": 52388, "start": 540.88, "end": 543.88, "text": " So there's a question about where should this computation live?", "tokens": [51214, 407, 456, 311, 257, 1168, 466, 689, 820, 341, 24903, 1621, 30, 51364], "temperature": 0.0, "avg_logprob": -0.14101461462072423, "compression_ratio": 1.45, "no_speech_prob": 0.12406060844659805}, {"id": 48, "seek": 54388, "start": 543.88, "end": 556.88, "text": " One of the G-lib C developers said that it should live in the kernel, but the kernel people, you know, haven't really worried about this. They continue to add interfaces for figuring this out.", "tokens": [50364, 1485, 295, 264, 460, 12, 38270, 383, 8849, 848, 300, 309, 820, 1621, 294, 264, 28256, 11, 457, 264, 28256, 561, 11, 291, 458, 11, 2378, 380, 534, 5804, 466, 341, 13, 814, 2354, 281, 909, 28416, 337, 15213, 341, 484, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10329928764930138, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.7302342057228088}, {"id": 49, "seek": 54388, "start": 557.88, "end": 563.88, "text": " So, you know, one answer is it should live nowhere. We should just keep allocating large heaps and crashing stuff and whatever.", "tokens": [51064, 407, 11, 291, 458, 11, 472, 1867, 307, 309, 820, 1621, 11159, 13, 492, 820, 445, 1066, 12660, 990, 2416, 415, 2382, 293, 26900, 1507, 293, 2035, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10329928764930138, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.7302342057228088}, {"id": 50, "seek": 54388, "start": 564.88, "end": 566.88, "text": " Unfortunately, my boss doesn't like that answer.", "tokens": [51414, 8590, 11, 452, 5741, 1177, 380, 411, 300, 1867, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10329928764930138, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.7302342057228088}, {"id": 51, "seek": 54388, "start": 567.88, "end": 570.88, "text": " So the next thing is we should fix that in the container runtime.", "tokens": [51564, 407, 264, 958, 551, 307, 321, 820, 3191, 300, 294, 264, 10129, 34474, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10329928764930138, "compression_ratio": 1.6539923954372624, "no_speech_prob": 0.7302342057228088}, {"id": 52, "seek": 57088, "start": 570.88, "end": 576.88, "text": " So this is the traditional way that we did with Alex CFS.", "tokens": [50364, 407, 341, 307, 264, 5164, 636, 300, 321, 630, 365, 5202, 21792, 50, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1514996846516927, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.05741114914417267}, {"id": 53, "seek": 57088, "start": 577.88, "end": 584.88, "text": " So you bind mounts and file. It's a fuse file system. It looks at when you make a fuse file request, it looks at that process ID.", "tokens": [50714, 407, 291, 14786, 40982, 293, 3991, 13, 467, 311, 257, 31328, 3991, 1185, 13, 467, 1542, 412, 562, 291, 652, 257, 31328, 3991, 5308, 11, 309, 1542, 412, 300, 1399, 7348, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1514996846516927, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.05741114914417267}, {"id": 54, "seek": 57088, "start": 585.88, "end": 591.88, "text": " It goes and looks in the C group tree for that process ID and then tells you it lies to you and it basically says, hey, there's this many CPUs online.", "tokens": [51114, 467, 1709, 293, 1542, 294, 264, 383, 1594, 4230, 337, 300, 1399, 7348, 293, 550, 5112, 291, 309, 9134, 281, 291, 293, 309, 1936, 1619, 11, 4177, 11, 456, 311, 341, 867, 13199, 82, 2950, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1514996846516927, "compression_ratio": 1.6095238095238096, "no_speech_prob": 0.05741114914417267}, {"id": 55, "seek": 59188, "start": 591.88, "end": 604.88, "text": " So this is the traditional way it worked for a very long time until libc started switching away from looking at proc and cysfs files and started using cyscalls, which makes sense because parsing proc and cysfs is kind of annoying.", "tokens": [50364, 407, 341, 307, 264, 5164, 636, 309, 2732, 337, 257, 588, 938, 565, 1826, 22854, 66, 1409, 16493, 1314, 490, 1237, 412, 9510, 293, 269, 749, 16883, 7098, 293, 1409, 1228, 269, 749, 66, 39655, 11, 597, 1669, 2020, 570, 21156, 278, 9510, 293, 269, 749, 16883, 307, 733, 295, 11304, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14471659614044485, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.44512757658958435}, {"id": 56, "seek": 59188, "start": 605.88, "end": 609.88, "text": " So, you know, if there's a cyscall that can do the thing, they want to use it. So that makes sense.", "tokens": [51064, 407, 11, 291, 458, 11, 498, 456, 311, 257, 269, 749, 45459, 300, 393, 360, 264, 551, 11, 436, 528, 281, 764, 309, 13, 407, 300, 1669, 2020, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14471659614044485, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.44512757658958435}, {"id": 57, "seek": 59188, "start": 610.88, "end": 614.88, "text": " The kernel people often will say this thing that's mechanism not policy.", "tokens": [51314, 440, 28256, 561, 2049, 486, 584, 341, 551, 300, 311, 7513, 406, 3897, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14471659614044485, "compression_ratio": 1.6791666666666667, "no_speech_prob": 0.44512757658958435}, {"id": 58, "seek": 61488, "start": 614.88, "end": 623.88, "text": " So they will give you the mechanism to reason about the thing and it's up to you to make a policy about how many threads or whatever you want to spawn.", "tokens": [50364, 407, 436, 486, 976, 291, 264, 7513, 281, 1778, 466, 264, 551, 293, 309, 311, 493, 281, 291, 281, 652, 257, 3897, 466, 577, 867, 19314, 420, 2035, 291, 528, 281, 17088, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0661673775086036, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.35521140694618225}, {"id": 59, "seek": 61488, "start": 624.88, "end": 633.88, "text": " And so in principle, they have given us the mechanism because the mechanism is these 40 interfaces that are all can do very different things.", "tokens": [50864, 400, 370, 294, 8665, 11, 436, 362, 2212, 505, 264, 7513, 570, 264, 7513, 307, 613, 3356, 28416, 300, 366, 439, 393, 360, 588, 819, 721, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0661673775086036, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.35521140694618225}, {"id": 60, "seek": 61488, "start": 634.88, "end": 637.88, "text": " And so if you look at all the right places, you can do it correctly.", "tokens": [51364, 400, 370, 498, 291, 574, 412, 439, 264, 558, 3190, 11, 291, 393, 360, 309, 8944, 13, 51514], "temperature": 0.0, "avg_logprob": -0.0661673775086036, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.35521140694618225}, {"id": 61, "seek": 61488, "start": 638.88, "end": 643.88, "text": " So in some sense, the kernel already did it. It's just sort of complicated.", "tokens": [51564, 407, 294, 512, 2020, 11, 264, 28256, 1217, 630, 309, 13, 467, 311, 445, 1333, 295, 6179, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0661673775086036, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.35521140694618225}, {"id": 62, "seek": 64488, "start": 644.88, "end": 646.88, "text": " So yeah, there's lots of them.", "tokens": [50364, 407, 1338, 11, 456, 311, 3195, 295, 552, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1241488015210187, "compression_ratio": 1.622568093385214, "no_speech_prob": 0.004394626710563898}, {"id": 63, "seek": 64488, "start": 647.88, "end": 653.88, "text": " And the other thing is that there's a new patch series allowing ebpf to do scheduling.", "tokens": [50514, 400, 264, 661, 551, 307, 300, 456, 311, 257, 777, 9972, 2638, 8293, 308, 65, 25302, 281, 360, 29055, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1241488015210187, "compression_ratio": 1.622568093385214, "no_speech_prob": 0.004394626710563898}, {"id": 64, "seek": 64488, "start": 654.88, "end": 661.88, "text": " So right now, if you think about cfs and cfs quotas, cfs is hard coded in the kernel, very well understood by lots of people.", "tokens": [50864, 407, 558, 586, 11, 498, 291, 519, 466, 269, 16883, 293, 269, 16883, 9641, 296, 11, 269, 16883, 307, 1152, 34874, 294, 264, 28256, 11, 588, 731, 7320, 538, 3195, 295, 561, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1241488015210187, "compression_ratio": 1.622568093385214, "no_speech_prob": 0.004394626710563898}, {"id": 65, "seek": 64488, "start": 662.88, "end": 673.88, "text": " If you, the user can load an ebpf program that will now decide which tasks to schedule, the algorithm for determining how many CPU equivalents this thing has is now dynamic.", "tokens": [51264, 759, 291, 11, 264, 4195, 393, 3677, 364, 308, 65, 25302, 1461, 300, 486, 586, 4536, 597, 9608, 281, 7567, 11, 264, 9284, 337, 23751, 577, 867, 13199, 9052, 791, 341, 551, 575, 307, 586, 8546, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1241488015210187, "compression_ratio": 1.622568093385214, "no_speech_prob": 0.004394626710563898}, {"id": 66, "seek": 67488, "start": 674.88, "end": 676.88, "text": " It depends on the results of this ebpf program.", "tokens": [50364, 467, 5946, 322, 264, 3542, 295, 341, 308, 65, 25302, 1461, 13, 50464], "temperature": 0.0, "avg_logprob": -0.06617935180664063, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00883557926863432}, {"id": 67, "seek": 67488, "start": 677.88, "end": 680.88, "text": " So the kernel also can't tell you necessarily anymore.", "tokens": [50514, 407, 264, 28256, 611, 393, 380, 980, 291, 4725, 3602, 13, 50664], "temperature": 0.0, "avg_logprob": -0.06617935180664063, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00883557926863432}, {"id": 68, "seek": 67488, "start": 682.88, "end": 691.88, "text": " So that's, I guess, the goal of our presentation here today is to have this library exist in user space.", "tokens": [50764, 407, 300, 311, 11, 286, 2041, 11, 264, 3387, 295, 527, 5860, 510, 965, 307, 281, 362, 341, 6405, 2514, 294, 4195, 1901, 13, 51214], "temperature": 0.0, "avg_logprob": -0.06617935180664063, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00883557926863432}, {"id": 69, "seek": 67488, "start": 692.88, "end": 695.88, "text": " So it's one place so that everybody can go and ask this question in one location.", "tokens": [51264, 407, 309, 311, 472, 1081, 370, 300, 2201, 393, 352, 293, 1029, 341, 1168, 294, 472, 4914, 13, 51414], "temperature": 0.0, "avg_logprob": -0.06617935180664063, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.00883557926863432}, {"id": 70, "seek": 69588, "start": 696.88, "end": 707.88, "text": " So it should have no dependencies because Golang doesn't want to link against libc, but also, you know, run times generally don't want to include a lot of other stuff because they're supposed to be small.", "tokens": [50414, 407, 309, 820, 362, 572, 36606, 570, 36319, 656, 1177, 380, 528, 281, 2113, 1970, 22854, 66, 11, 457, 611, 11, 291, 458, 11, 1190, 1413, 5101, 500, 380, 528, 281, 4090, 257, 688, 295, 661, 1507, 570, 436, 434, 3442, 281, 312, 1359, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 71, "seek": 69588, "start": 708.88, "end": 711.88, "text": " If you think about JVM or whatever.", "tokens": [51014, 759, 291, 519, 466, 508, 53, 44, 420, 2035, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 72, "seek": 69588, "start": 713.88, "end": 714.88, "text": " So it should also be correct.", "tokens": [51264, 407, 309, 820, 611, 312, 3006, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 73, "seek": 69588, "start": 715.88, "end": 716.88, "text": " So correct in two senses.", "tokens": [51364, 407, 3006, 294, 732, 17057, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 74, "seek": 69588, "start": 717.88, "end": 719.88, "text": " One is, you know, we should give you the right number of CPUs.", "tokens": [51464, 1485, 307, 11, 291, 458, 11, 321, 820, 976, 291, 264, 558, 1230, 295, 13199, 82, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 75, "seek": 69588, "start": 720.88, "end": 721.88, "text": " So we should do the math correctly.", "tokens": [51614, 407, 321, 820, 360, 264, 5221, 8944, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10241546809116256, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.4916853606700897}, {"id": 76, "seek": 72188, "start": 721.88, "end": 726.88, "text": " And the other senses, we shouldn't do like terrible memory corruption or other things like that.", "tokens": [50364, 400, 264, 661, 17057, 11, 321, 4659, 380, 360, 411, 6237, 4675, 17959, 420, 661, 721, 411, 300, 13, 50614], "temperature": 0.0, "avg_logprob": -0.17890488416299052, "compression_ratio": 1.6545454545454545, "no_speech_prob": 0.002147613326087594}, {"id": 77, "seek": 72188, "start": 727.88, "end": 731.88, "text": " So it should be safe in the programming languages execution model sense.", "tokens": [50664, 407, 309, 820, 312, 3273, 294, 264, 9410, 8650, 15058, 2316, 2020, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17890488416299052, "compression_ratio": 1.6545454545454545, "no_speech_prob": 0.002147613326087594}, {"id": 78, "seek": 72188, "start": 732.88, "end": 733.88, "text": " And with that.", "tokens": [50914, 400, 365, 300, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17890488416299052, "compression_ratio": 1.6545454545454545, "no_speech_prob": 0.002147613326087594}, {"id": 79, "seek": 72188, "start": 734.88, "end": 739.88, "text": " So what we're proposing is this library called live mi contained.", "tokens": [51014, 407, 437, 321, 434, 29939, 307, 341, 6405, 1219, 1621, 2752, 16212, 13, 51264], "temperature": 0.0, "avg_logprob": -0.17890488416299052, "compression_ratio": 1.6545454545454545, "no_speech_prob": 0.002147613326087594}, {"id": 80, "seek": 72188, "start": 740.88, "end": 749.88, "text": " And the idea is that, well, it'll be a container aware API that like calculates like with the resources you have.", "tokens": [51314, 400, 264, 1558, 307, 300, 11, 731, 11, 309, 603, 312, 257, 10129, 3650, 9362, 300, 411, 4322, 1024, 411, 365, 264, 3593, 291, 362, 13, 51764], "temperature": 0.0, "avg_logprob": -0.17890488416299052, "compression_ratio": 1.6545454545454545, "no_speech_prob": 0.002147613326087594}, {"id": 81, "seek": 74988, "start": 750.88, "end": 752.88, "text": " In this talk, we're mostly focusing on CPU count.", "tokens": [50414, 682, 341, 751, 11, 321, 434, 5240, 8416, 322, 13199, 1207, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10723268720838759, "compression_ratio": 1.5434782608695652, "no_speech_prob": 0.008348800241947174}, {"id": 82, "seek": 74988, "start": 755.88, "end": 761.88, "text": " And it'll be statically linked with the CBI and we're writing it in Rust for, you know, safety guarantees.", "tokens": [50664, 400, 309, 603, 312, 2219, 984, 9408, 365, 264, 383, 11291, 293, 321, 434, 3579, 309, 294, 34952, 337, 11, 291, 458, 11, 4514, 32567, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10723268720838759, "compression_ratio": 1.5434782608695652, "no_speech_prob": 0.008348800241947174}, {"id": 83, "seek": 74988, "start": 763.88, "end": 771.88, "text": " And the idea is that it's meant to be used by like language run times and applications instead of like trying to figure out which is the right interface for resources.", "tokens": [51064, 400, 264, 1558, 307, 300, 309, 311, 4140, 281, 312, 1143, 538, 411, 2856, 1190, 1413, 293, 5821, 2602, 295, 411, 1382, 281, 2573, 484, 597, 307, 264, 558, 9226, 337, 3593, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10723268720838759, "compression_ratio": 1.5434782608695652, "no_speech_prob": 0.008348800241947174}, {"id": 84, "seek": 74988, "start": 772.88, "end": 773.88, "text": " And here's a link to our repo.", "tokens": [51514, 400, 510, 311, 257, 2113, 281, 527, 49040, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10723268720838759, "compression_ratio": 1.5434782608695652, "no_speech_prob": 0.008348800241947174}, {"id": 85, "seek": 77388, "start": 773.88, "end": 774.88, "text": " So.", "tokens": [50364, 407, 13, 50414], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 86, "seek": 77388, "start": 775.88, "end": 777.88, "text": " So why do run times ask?", "tokens": [50464, 407, 983, 360, 1190, 1413, 1029, 30, 50564], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 87, "seek": 77388, "start": 778.88, "end": 780.88, "text": " And like, and we hit all those bugs before.", "tokens": [50614, 400, 411, 11, 293, 321, 2045, 439, 729, 15120, 949, 13, 50714], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 88, "seek": 77388, "start": 781.88, "end": 786.88, "text": " The idea is that they mostly do this to size their thread pools and specifically like their GC threads.", "tokens": [50764, 440, 1558, 307, 300, 436, 5240, 360, 341, 281, 2744, 641, 7207, 28688, 293, 4682, 411, 641, 29435, 19314, 13, 51014], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 89, "seek": 77388, "start": 787.88, "end": 790.88, "text": " And they want to size their arenas and allocator threads as well.", "tokens": [51064, 400, 436, 528, 281, 2744, 641, 3212, 296, 293, 12660, 1639, 19314, 382, 731, 13, 51214], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 90, "seek": 77388, "start": 793.88, "end": 800.88, "text": " And how can this go wrong to give kind of a maybe so much of a sense of what's going on in the future.", "tokens": [51364, 400, 577, 393, 341, 352, 2085, 281, 976, 733, 295, 257, 1310, 370, 709, 295, 257, 2020, 295, 437, 311, 516, 322, 294, 264, 2027, 13, 51714], "temperature": 0.0, "avg_logprob": -0.40062223735608554, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.011802167631685734}, {"id": 91, "seek": 80088, "start": 800.88, "end": 804.88, "text": " So how can this go wrong to give kind of a maybe simplified example.", "tokens": [50364, 407, 577, 393, 341, 352, 2085, 281, 976, 733, 295, 257, 1310, 26335, 1365, 13, 50564], "temperature": 0.0, "avg_logprob": -0.23259400421718382, "compression_ratio": 1.375, "no_speech_prob": 0.012367489747703075}, {"id": 92, "seek": 80088, "start": 806.88, "end": 818.88, "text": " Let's say you have 10 containers on a host and just to make the math easy that host has 100 CPUs and we assign each container 10% CPU quota.", "tokens": [50664, 961, 311, 584, 291, 362, 1266, 17089, 322, 257, 3975, 293, 445, 281, 652, 264, 5221, 1858, 300, 3975, 575, 2319, 13199, 82, 293, 321, 6269, 1184, 10129, 1266, 4, 13199, 45171, 13, 51264], "temperature": 0.0, "avg_logprob": -0.23259400421718382, "compression_ratio": 1.375, "no_speech_prob": 0.012367489747703075}, {"id": 93, "seek": 83088, "start": 830.88, "end": 831.88, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.0, "avg_logprob": -0.18110472626156277, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.011594523675739765}, {"id": 94, "seek": 83088, "start": 839.88, "end": 840.88, "text": " All right back.", "tokens": [50814, 1057, 558, 646, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18110472626156277, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.011594523675739765}, {"id": 95, "seek": 83088, "start": 841.88, "end": 845.88, "text": " So again, 10 containers, 100 CPUs, 10% quota each.", "tokens": [50914, 407, 797, 11, 1266, 17089, 11, 2319, 13199, 82, 11, 1266, 4, 45171, 1184, 13, 51114], "temperature": 0.0, "avg_logprob": -0.18110472626156277, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.011594523675739765}, {"id": 96, "seek": 83088, "start": 846.88, "end": 857.88, "text": " Now what happens is those run times in each container, they're all going to see 100 CPUs and they're going to start 100 threads that they expect to do like a CPU's worth of work.", "tokens": [51164, 823, 437, 2314, 307, 729, 1190, 1413, 294, 1184, 10129, 11, 436, 434, 439, 516, 281, 536, 2319, 13199, 82, 293, 436, 434, 516, 281, 722, 2319, 19314, 300, 436, 2066, 281, 360, 411, 257, 13199, 311, 3163, 295, 589, 13, 51714], "temperature": 0.0, "avg_logprob": -0.18110472626156277, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.011594523675739765}, {"id": 97, "seek": 85788, "start": 857.88, "end": 861.88, "text": " So what happens they eat through their quota right away.", "tokens": [50364, 407, 437, 2314, 436, 1862, 807, 641, 45171, 558, 1314, 13, 50564], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 98, "seek": 85788, "start": 862.88, "end": 865.88, "text": " And you get a ton of starvation right GC pauses.", "tokens": [50614, 400, 291, 483, 257, 2952, 295, 3543, 11116, 558, 29435, 2502, 8355, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 99, "seek": 85788, "start": 866.88, "end": 867.88, "text": " Everything starts spiking.", "tokens": [50814, 5471, 3719, 637, 13085, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 100, "seek": 85788, "start": 869.88, "end": 871.88, "text": " So what should they do?", "tokens": [50964, 407, 437, 820, 436, 360, 30, 51064], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 101, "seek": 85788, "start": 872.88, "end": 873.88, "text": " Well, call our API.", "tokens": [51114, 1042, 11, 818, 527, 9362, 13, 51164], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 102, "seek": 85788, "start": 874.88, "end": 878.88, "text": " So what we have first is kind of your classic.", "tokens": [51214, 407, 437, 321, 362, 700, 307, 733, 295, 428, 7230, 13, 51414], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 103, "seek": 85788, "start": 879.88, "end": 880.88, "text": " This is a classic num CPU.", "tokens": [51464, 639, 307, 257, 7230, 1031, 13199, 13, 51514], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 104, "seek": 85788, "start": 880.88, "end": 886.88, "text": " So we're going to call a skedget affinity and this takes into account CPU sets, affinity masks, online CPU sets, affinity masks, online CPU sets.", "tokens": [51514, 407, 321, 434, 516, 281, 818, 257, 1110, 292, 847, 39703, 293, 341, 2516, 666, 2696, 13199, 6352, 11, 39703, 11830, 11, 2950, 13199, 6352, 11, 39703, 11830, 11, 2950, 13199, 6352, 13, 51814], "temperature": 0.0, "avg_logprob": -0.24730379647071207, "compression_ratio": 1.706896551724138, "no_speech_prob": 0.0035132989287376404}, {"id": 105, "seek": 88788, "start": 887.88, "end": 888.88, "text": " So we're going to take num CPUs like all this stuff.", "tokens": [50364, 407, 321, 434, 516, 281, 747, 1031, 13199, 82, 411, 439, 341, 1507, 13, 50414], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 106, "seek": 88788, "start": 889.88, "end": 894.88, "text": " But our real value add is this recommended threads calculation.", "tokens": [50464, 583, 527, 957, 2158, 909, 307, 341, 9628, 19314, 17108, 13, 50714], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 107, "seek": 88788, "start": 895.88, "end": 901.88, "text": " So this will take num CPUs and constrain it with like quota, for example, and compute.", "tokens": [50764, 407, 341, 486, 747, 1031, 13199, 82, 293, 1817, 7146, 309, 365, 411, 45171, 11, 337, 1365, 11, 293, 14722, 13, 51064], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 108, "seek": 88788, "start": 903.88, "end": 905.88, "text": " It's not a rocket science algorithm.", "tokens": [51164, 467, 311, 406, 257, 13012, 3497, 9284, 13, 51264], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 109, "seek": 88788, "start": 905.88, "end": 909.88, "text": " It's basically just quota over a period gives you like a number of like how many threads you should be running.", "tokens": [51264, 467, 311, 1936, 445, 45171, 670, 257, 2896, 2709, 291, 411, 257, 1230, 295, 411, 577, 867, 19314, 291, 820, 312, 2614, 13, 51464], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 110, "seek": 88788, "start": 910.88, "end": 913.88, "text": " This is what like system D and Alex CFS do.", "tokens": [51514, 639, 307, 437, 411, 1185, 413, 293, 5202, 21792, 50, 360, 13, 51664], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 111, "seek": 88788, "start": 914.88, "end": 916.88, "text": " So it's like a well known calculation.", "tokens": [51714, 407, 309, 311, 411, 257, 731, 2570, 17108, 13, 51814], "temperature": 0.2, "avg_logprob": -0.2289829760526134, "compression_ratio": 1.6353383458646618, "no_speech_prob": 0.006959828082472086}, {"id": 112, "seek": 91788, "start": 917.88, "end": 920.88, "text": " And so let's do that example again, but with recommended threads, right?", "tokens": [50364, 400, 370, 718, 311, 360, 300, 1365, 797, 11, 457, 365, 9628, 19314, 11, 558, 30, 50514], "temperature": 0.0, "avg_logprob": -0.1564966643728861, "compression_ratio": 1.551219512195122, "no_speech_prob": 0.0011455747298896313}, {"id": 113, "seek": 91788, "start": 921.88, "end": 922.88, "text": " We've got 10 containers.", "tokens": [50564, 492, 600, 658, 1266, 17089, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1564966643728861, "compression_ratio": 1.551219512195122, "no_speech_prob": 0.0011455747298896313}, {"id": 114, "seek": 91788, "start": 923.88, "end": 925.88, "text": " We've got our 100 CPU hosts with quota.", "tokens": [50664, 492, 600, 658, 527, 2319, 13199, 21573, 365, 45171, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1564966643728861, "compression_ratio": 1.551219512195122, "no_speech_prob": 0.0011455747298896313}, {"id": 115, "seek": 91788, "start": 926.88, "end": 935.88, "text": " Now each one is going to get when they call recommended threads, they're going to get 10 CPUs and problem solved forever.", "tokens": [50814, 823, 1184, 472, 307, 516, 281, 483, 562, 436, 818, 9628, 19314, 11, 436, 434, 516, 281, 483, 1266, 13199, 82, 293, 1154, 13041, 5680, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1564966643728861, "compression_ratio": 1.551219512195122, "no_speech_prob": 0.0011455747298896313}, {"id": 116, "seek": 91788, "start": 939.88, "end": 943.88, "text": " So what have people done in the past, including ourselves?", "tokens": [51464, 407, 437, 362, 561, 1096, 294, 264, 1791, 11, 3009, 4175, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1564966643728861, "compression_ratio": 1.551219512195122, "no_speech_prob": 0.0011455747298896313}, {"id": 117, "seek": 94388, "start": 943.88, "end": 950.88, "text": " So every language runtime implemented themselves, like they call it, you know, pass a container aware flag to JVM.", "tokens": [50364, 407, 633, 2856, 34474, 12270, 2969, 11, 411, 436, 818, 309, 11, 291, 458, 11, 1320, 257, 10129, 3650, 7166, 281, 508, 53, 44, 13, 50714], "temperature": 0.0, "avg_logprob": -0.14353315035502115, "compression_ratio": 1.4977578475336324, "no_speech_prob": 0.0024245211388915777}, {"id": 118, "seek": 94388, "start": 951.88, "end": 961.88, "text": " But usually as we've seen, they get it wrong or sometimes Alex CFS does it does the right calculation, but it can only do the the proc file system mounting.", "tokens": [50764, 583, 2673, 382, 321, 600, 1612, 11, 436, 483, 309, 2085, 420, 2171, 5202, 21792, 50, 775, 309, 775, 264, 558, 17108, 11, 457, 309, 393, 787, 360, 264, 264, 9510, 3991, 1185, 22986, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14353315035502115, "compression_ratio": 1.4977578475336324, "no_speech_prob": 0.0024245211388915777}, {"id": 119, "seek": 94388, "start": 962.88, "end": 965.88, "text": " It doesn't do like doesn't take care of like skedget affinity.", "tokens": [51314, 467, 1177, 380, 360, 411, 1177, 380, 747, 1127, 295, 411, 1110, 292, 847, 39703, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14353315035502115, "compression_ratio": 1.4977578475336324, "no_speech_prob": 0.0024245211388915777}, {"id": 120, "seek": 96588, "start": 965.88, "end": 974.88, "text": " So what we did at Netflix was we use Alex CFS and then using set comp would intercept this skedget affinity to like do this calculation.", "tokens": [50364, 407, 437, 321, 630, 412, 12778, 390, 321, 764, 5202, 21792, 50, 293, 550, 1228, 992, 715, 576, 24700, 341, 1110, 292, 847, 39703, 281, 411, 360, 341, 17108, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3253918427687425, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.19367405772209167}, {"id": 121, "seek": 96588, "start": 975.88, "end": 978.88, "text": " So this is kind of our follow up to say we're like, there must be a better way to do this.", "tokens": [50864, 407, 341, 307, 733, 295, 527, 1524, 493, 281, 584, 321, 434, 411, 11, 456, 1633, 312, 257, 1101, 636, 281, 360, 341, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3253918427687425, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.19367405772209167}, {"id": 122, "seek": 96588, "start": 980.88, "end": 986.88, "text": " And there's lib which is in the Alex project today, but it's not container aware.", "tokens": [51114, 400, 456, 311, 22854, 597, 307, 294, 264, 5202, 1716, 965, 11, 457, 309, 311, 406, 10129, 3650, 13, 51414], "temperature": 0.0, "avg_logprob": -0.3253918427687425, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.19367405772209167}, {"id": 123, "seek": 96588, "start": 990.88, "end": 994.88, "text": " So that's actually the we go for and then the next thing we do is we do a set comp.", "tokens": [51614, 407, 300, 311, 767, 264, 321, 352, 337, 293, 550, 264, 958, 551, 321, 360, 307, 321, 360, 257, 992, 715, 13, 51814], "temperature": 0.0, "avg_logprob": -0.3253918427687425, "compression_ratio": 1.617283950617284, "no_speech_prob": 0.19367405772209167}, {"id": 124, "seek": 99588, "start": 995.88, "end": 1010.88, "text": " And the next thing is I wanted to throw out some like some additional like issues we ran into, which is a lot of things assume like static like a static resource size, right?", "tokens": [50364, 400, 264, 958, 551, 307, 286, 1415, 281, 3507, 484, 512, 411, 512, 4497, 411, 2663, 321, 5872, 666, 11, 597, 307, 257, 688, 295, 721, 6552, 411, 13437, 411, 257, 13437, 7684, 2744, 11, 558, 30, 51114], "temperature": 0.0, "avg_logprob": -0.16942871047789793, "compression_ratio": 1.6794258373205742, "no_speech_prob": 0.006453648675233126}, {"id": 125, "seek": 99588, "start": 1011.88, "end": 1019.88, "text": " But in kind of a containers world and you can when you can do you can like edit C groups, like for a running process, we don't think that that's no longer a correct assumption.", "tokens": [51164, 583, 294, 733, 295, 257, 17089, 1002, 293, 291, 393, 562, 291, 393, 360, 291, 393, 411, 8129, 383, 3935, 11, 411, 337, 257, 2614, 1399, 11, 321, 500, 380, 519, 300, 300, 311, 572, 2854, 257, 3006, 15302, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16942871047789793, "compression_ratio": 1.6794258373205742, "no_speech_prob": 0.006453648675233126}, {"id": 126, "seek": 101988, "start": 1019.88, "end": 1024.88, "text": " Right. So like you're allowed to change C groups on live process and nothing seems to take that into account.", "tokens": [50364, 1779, 13, 407, 411, 291, 434, 4350, 281, 1319, 383, 3935, 322, 1621, 1399, 293, 1825, 2544, 281, 747, 300, 666, 2696, 13, 50614], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 127, "seek": 101988, "start": 1025.88, "end": 1029.88, "text": " So other things we're thinking about are like, what if thread pools were dynamically sized?", "tokens": [50664, 407, 661, 721, 321, 434, 1953, 466, 366, 411, 11, 437, 498, 7207, 28688, 645, 43492, 20004, 30, 50864], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 128, "seek": 101988, "start": 1030.88, "end": 1035.88, "text": " It would periodically check like, Hey, do I still have 10 CPUs or now do I have 20?", "tokens": [50914, 467, 576, 38916, 1520, 411, 11, 1911, 11, 360, 286, 920, 362, 1266, 13199, 82, 420, 586, 360, 286, 362, 945, 30, 51164], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 129, "seek": 101988, "start": 1036.88, "end": 1039.88, "text": " You can resize your thread pool that way.", "tokens": [51214, 509, 393, 50069, 428, 7207, 7005, 300, 636, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 130, "seek": 101988, "start": 1041.88, "end": 1042.88, "text": " But that's not the way it works today.", "tokens": [51464, 583, 300, 311, 406, 264, 636, 309, 1985, 965, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 131, "seek": 101988, "start": 1043.88, "end": 1047.88, "text": " So we're that's future work, but more like food for thought.", "tokens": [51564, 407, 321, 434, 300, 311, 2027, 589, 11, 457, 544, 411, 1755, 337, 1194, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12757454262123452, "compression_ratio": 1.605263157894737, "no_speech_prob": 0.004185864701867104}, {"id": 132, "seek": 104788, "start": 1047.88, "end": 1050.88, "text": " And that's it. Thank you.", "tokens": [50414, 400, 300, 311, 309, 13, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.13496000116521661, "compression_ratio": 0.7575757575757576, "no_speech_prob": 0.03891817852854729}, {"id": 133, "seek": 107788, "start": 1078.88, "end": 1081.88, "text": " For sure there's overhead.", "tokens": [50414, 1171, 988, 456, 311, 19922, 13, 50564], "temperature": 0.0, "avg_logprob": -0.20309653811984593, "compression_ratio": 1.6132075471698113, "no_speech_prob": 0.04530593007802963}, {"id": 134, "seek": 107788, "start": 1082.88, "end": 1087.88, "text": " But the reality is like if you want to lie to people about the right answer to this question, like you have to do something.", "tokens": [50614, 583, 264, 4103, 307, 411, 498, 291, 528, 281, 4544, 281, 561, 466, 264, 558, 1867, 281, 341, 1168, 11, 411, 291, 362, 281, 360, 746, 13, 50864], "temperature": 0.0, "avg_logprob": -0.20309653811984593, "compression_ratio": 1.6132075471698113, "no_speech_prob": 0.04530593007802963}, {"id": 135, "seek": 107788, "start": 1088.88, "end": 1090.88, "text": " And so that's like the best stop gap.", "tokens": [50914, 400, 370, 300, 311, 411, 264, 1151, 1590, 7417, 13, 51014], "temperature": 0.0, "avg_logprob": -0.20309653811984593, "compression_ratio": 1.6132075471698113, "no_speech_prob": 0.04530593007802963}, {"id": 136, "seek": 107788, "start": 1091.88, "end": 1100.88, "text": " I think like, is there a less over heady way like the real solution writers for just applications to get it right.", "tokens": [51064, 286, 519, 411, 11, 307, 456, 257, 1570, 670, 1378, 88, 636, 411, 264, 957, 3827, 13491, 337, 445, 5821, 281, 483, 309, 558, 13, 51514], "temperature": 0.0, "avg_logprob": -0.20309653811984593, "compression_ratio": 1.6132075471698113, "no_speech_prob": 0.04530593007802963}, {"id": 137, "seek": 107788, "start": 1101.88, "end": 1102.88, "text": " So they don't have to worry about it.", "tokens": [51564, 407, 436, 500, 380, 362, 281, 3292, 466, 309, 13, 51614], "temperature": 0.0, "avg_logprob": -0.20309653811984593, "compression_ratio": 1.6132075471698113, "no_speech_prob": 0.04530593007802963}, {"id": 138, "seek": 110288, "start": 1102.88, "end": 1109.88, "text": " And so that's sort of how we arrived at this particular solution is what if people just actually knew how to do this correctly.", "tokens": [50364, 400, 370, 300, 311, 1333, 295, 577, 321, 6678, 412, 341, 1729, 3827, 307, 437, 498, 561, 445, 767, 2586, 577, 281, 360, 341, 8944, 13, 50714], "temperature": 0.0, "avg_logprob": -0.19554543962665633, "compression_ratio": 1.364864864864865, "no_speech_prob": 0.019409775733947754}, {"id": 139, "seek": 110288, "start": 1110.88, "end": 1113.88, "text": " The overhead of getting it wrong is probably worse than this.", "tokens": [50764, 440, 19922, 295, 1242, 309, 2085, 307, 1391, 5324, 813, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.19554543962665633, "compression_ratio": 1.364864864864865, "no_speech_prob": 0.019409775733947754}, {"id": 140, "seek": 110288, "start": 1114.88, "end": 1115.88, "text": " Right.", "tokens": [50964, 1779, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19554543962665633, "compression_ratio": 1.364864864864865, "no_speech_prob": 0.019409775733947754}, {"id": 141, "seek": 110288, "start": 1116.88, "end": 1117.88, "text": " Yeah.", "tokens": [51064, 865, 13, 51114], "temperature": 0.0, "avg_logprob": -0.19554543962665633, "compression_ratio": 1.364864864864865, "no_speech_prob": 0.019409775733947754}, {"id": 142, "seek": 113288, "start": 1133.88, "end": 1137.88, "text": " I'm not sure.", "tokens": [50414, 286, 478, 406, 988, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19587734010484484, "compression_ratio": 1.2040816326530612, "no_speech_prob": 0.01909114234149456}, {"id": 143, "seek": 113288, "start": 1153.88, "end": 1156.88, "text": " So checkpoint restore will do C groups.", "tokens": [51414, 407, 42269, 15227, 486, 360, 383, 3935, 13, 51564], "temperature": 0.0, "avg_logprob": -0.19587734010484484, "compression_ratio": 1.2040816326530612, "no_speech_prob": 0.01909114234149456}, {"id": 144, "seek": 113288, "start": 1157.88, "end": 1160.88, "text": " So like the majority of the way people do this is with C groups.", "tokens": [51614, 407, 411, 264, 6286, 295, 264, 636, 561, 360, 341, 307, 365, 383, 3935, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19587734010484484, "compression_ratio": 1.2040816326530612, "no_speech_prob": 0.01909114234149456}, {"id": 145, "seek": 116088, "start": 1160.88, "end": 1174.88, "text": " So I think one problem could be is if you restored an application to a larger or a smaller number of CPUs than originally had today, like mayhem.", "tokens": [50364, 407, 286, 519, 472, 1154, 727, 312, 307, 498, 291, 23143, 364, 3861, 281, 257, 4833, 420, 257, 4356, 1230, 295, 13199, 82, 813, 7993, 632, 965, 11, 411, 815, 28005, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11386122968461779, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.010471757501363754}, {"id": 146, "seek": 116088, "start": 1175.88, "end": 1179.88, "text": " So if you if you have 100 CPU application, then you restore it onto a two CPU box.", "tokens": [51114, 407, 498, 291, 498, 291, 362, 2319, 13199, 3861, 11, 550, 291, 15227, 309, 3911, 257, 732, 13199, 2424, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11386122968461779, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.010471757501363754}, {"id": 147, "seek": 116088, "start": 1180.88, "end": 1181.88, "text": " It's still going to think it has 100 CPUs.", "tokens": [51364, 467, 311, 920, 516, 281, 519, 309, 575, 2319, 13199, 82, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11386122968461779, "compression_ratio": 1.5310734463276836, "no_speech_prob": 0.010471757501363754}, {"id": 148, "seek": 118188, "start": 1181.88, "end": 1192.88, "text": " It's going to allocate 100 memory arenas free like one for each physical thread so that it can do, you know, threadless locking to do memory allocations quickly and stuff.", "tokens": [50364, 467, 311, 516, 281, 35713, 2319, 4675, 3212, 296, 1737, 411, 472, 337, 1184, 4001, 7207, 370, 300, 309, 393, 360, 11, 291, 458, 11, 7207, 1832, 23954, 281, 360, 4675, 12660, 763, 2661, 293, 1507, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13569401278354154, "compression_ratio": 1.5963636363636364, "no_speech_prob": 0.2593967914581299}, {"id": 149, "seek": 118188, "start": 1193.88, "end": 1196.88, "text": " And so 98 of those 100 arenas will be wasted.", "tokens": [50964, 400, 370, 20860, 295, 729, 2319, 3212, 296, 486, 312, 19496, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13569401278354154, "compression_ratio": 1.5963636363636364, "no_speech_prob": 0.2593967914581299}, {"id": 150, "seek": 118188, "start": 1197.88, "end": 1209.88, "text": " So for you guys, if you want to dynamically change CPU size, you have the same problem, but actually on steroids because you really want application run times to resize their thread pools, which is Sebastian's last point.", "tokens": [51164, 407, 337, 291, 1074, 11, 498, 291, 528, 281, 43492, 1319, 13199, 2744, 11, 291, 362, 264, 912, 1154, 11, 457, 767, 322, 45717, 570, 291, 534, 528, 3861, 1190, 1413, 281, 50069, 641, 7207, 28688, 11, 597, 307, 31102, 311, 1036, 935, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13569401278354154, "compression_ratio": 1.5963636363636364, "no_speech_prob": 0.2593967914581299}, {"id": 151, "seek": 120988, "start": 1210.88, "end": 1213.88, "text": " For us, it's mostly like just get it right the first time, please.", "tokens": [50414, 1171, 505, 11, 309, 311, 5240, 411, 445, 483, 309, 558, 264, 700, 565, 11, 1767, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 152, "seek": 120988, "start": 1214.88, "end": 1215.88, "text": " Like let's figure it out later.", "tokens": [50614, 1743, 718, 311, 2573, 309, 484, 1780, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 153, "seek": 120988, "start": 1216.88, "end": 1217.88, "text": " Other questions.", "tokens": [50714, 5358, 1651, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 154, "seek": 120988, "start": 1227.88, "end": 1228.88, "text": " It's a good question.", "tokens": [51264, 467, 311, 257, 665, 1168, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 155, "seek": 120988, "start": 1229.88, "end": 1230.88, "text": " We should right now.", "tokens": [51364, 492, 820, 558, 586, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 156, "seek": 120988, "start": 1231.88, "end": 1235.88, "text": " Our set comp stuff is not open source, but there's no reason it could be.", "tokens": [51464, 2621, 992, 715, 1507, 307, 406, 1269, 4009, 11, 457, 456, 311, 572, 1778, 309, 727, 312, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1923839810868384, "compression_ratio": 1.45, "no_speech_prob": 0.02060757391154766}, {"id": 157, "seek": 123588, "start": 1235.88, "end": 1238.88, "text": " We just has to like turn the crank to do the work.", "tokens": [50364, 492, 445, 575, 281, 411, 1261, 264, 21263, 281, 360, 264, 589, 13, 50514], "temperature": 0.0, "avg_logprob": -0.31095660527547203, "compression_ratio": 1.141025641025641, "no_speech_prob": 0.007800959516316652}, {"id": 158, "seek": 123588, "start": 1250.88, "end": 1251.88, "text": " Just just for the offline folks.", "tokens": [51114, 1449, 445, 337, 264, 21857, 4024, 13, 51164], "temperature": 0.0, "avg_logprob": -0.31095660527547203, "compression_ratio": 1.141025641025641, "no_speech_prob": 0.007800959516316652}, {"id": 159, "seek": 123588, "start": 1252.88, "end": 1253.88, "text": " Yeah.", "tokens": [51214, 865, 13, 51264], "temperature": 0.0, "avg_logprob": -0.31095660527547203, "compression_ratio": 1.141025641025641, "no_speech_prob": 0.007800959516316652}, {"id": 160, "seek": 125388, "start": 1253.88, "end": 1264.88, "text": " So it's a good question.", "tokens": [50364, 407, 309, 311, 257, 665, 1168, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16076557776507208, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.028799783438444138}, {"id": 161, "seek": 125388, "start": 1265.88, "end": 1272.88, "text": " So your question is sort of what is the roadmap for this workload like this was basically stop zero of like, do people think this is a good idea?", "tokens": [50964, 407, 428, 1168, 307, 1333, 295, 437, 307, 264, 35738, 337, 341, 20139, 411, 341, 390, 1936, 1590, 4018, 295, 411, 11, 360, 561, 519, 341, 307, 257, 665, 1558, 30, 51314], "temperature": 0.0, "avg_logprob": -0.16076557776507208, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.028799783438444138}, {"id": 162, "seek": 125388, "start": 1273.88, "end": 1275.88, "text": " So it sounds like you think is a good idea.", "tokens": [51364, 407, 309, 3263, 411, 291, 519, 307, 257, 665, 1558, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16076557776507208, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.028799783438444138}, {"id": 163, "seek": 125388, "start": 1276.88, "end": 1277.88, "text": " It would be nice to have your collaboration.", "tokens": [51514, 467, 576, 312, 1481, 281, 362, 428, 9363, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16076557776507208, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.028799783438444138}, {"id": 164, "seek": 127788, "start": 1277.88, "end": 1282.88, "text": " One of the questions I have for the LXC project leaders, are you interested in having this code in LXC?", "tokens": [50364, 1485, 295, 264, 1651, 286, 362, 337, 264, 441, 55, 34, 1716, 3523, 11, 366, 291, 3102, 294, 1419, 341, 3089, 294, 441, 55, 34, 30, 50614], "temperature": 0.0, "avg_logprob": -0.1334242525353896, "compression_ratio": 1.6654275092936803, "no_speech_prob": 0.1937856674194336}, {"id": 165, "seek": 127788, "start": 1283.88, "end": 1289.88, "text": " Because I'm thinking step two would be, you know, we can centralize the code in a place where the container people like it.", "tokens": [50664, 1436, 286, 478, 1953, 1823, 732, 576, 312, 11, 291, 458, 11, 321, 393, 5777, 1125, 264, 3089, 294, 257, 1081, 689, 264, 10129, 561, 411, 309, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1334242525353896, "compression_ratio": 1.6654275092936803, "no_speech_prob": 0.1937856674194336}, {"id": 166, "seek": 127788, "start": 1291.88, "end": 1295.88, "text": " And then step three would be, as you say, go hat and hand to each front time.", "tokens": [51064, 400, 550, 1823, 1045, 576, 312, 11, 382, 291, 584, 11, 352, 2385, 293, 1011, 281, 1184, 1868, 565, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1334242525353896, "compression_ratio": 1.6654275092936803, "no_speech_prob": 0.1937856674194336}, {"id": 167, "seek": 127788, "start": 1296.88, "end": 1302.88, "text": " And it probably involves submitting a pull request and then flying to the Golang conference and the JVM conference and the Node.js conference.", "tokens": [51314, 400, 309, 1391, 11626, 31836, 257, 2235, 5308, 293, 550, 7137, 281, 264, 36319, 656, 7586, 293, 264, 508, 53, 44, 7586, 293, 264, 38640, 13, 25530, 7586, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1334242525353896, "compression_ratio": 1.6654275092936803, "no_speech_prob": 0.1937856674194336}, {"id": 168, "seek": 130288, "start": 1302.88, "end": 1306.88, "text": " And you know, like it's going to be a long road, but what we have now is bad.", "tokens": [50364, 400, 291, 458, 11, 411, 309, 311, 516, 281, 312, 257, 938, 3060, 11, 457, 437, 321, 362, 586, 307, 1578, 13, 50564], "temperature": 0.0, "avg_logprob": -0.29910848405626084, "compression_ratio": 1.2142857142857142, "no_speech_prob": 0.06704821437597275}, {"id": 169, "seek": 130288, "start": 1307.88, "end": 1308.88, "text": " So anyway, to point question to.", "tokens": [50614, 407, 4033, 11, 281, 935, 1168, 281, 13, 50664], "temperature": 0.0, "avg_logprob": -0.29910848405626084, "compression_ratio": 1.2142857142857142, "no_speech_prob": 0.06704821437597275}, {"id": 170, "seek": 130288, "start": 1315.88, "end": 1316.88, "text": " Yeah, we talked about it.", "tokens": [51014, 865, 11, 321, 2825, 466, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.29910848405626084, "compression_ratio": 1.2142857142857142, "no_speech_prob": 0.06704821437597275}, {"id": 171, "seek": 131688, "start": 1316.88, "end": 1329.88, "text": " So the reason why the thing that exists right now has been developed by all of us is because it could probably make sense to have something that's more generic, that actually covers what needs and that hopefully is bad.", "tokens": [50364, 407, 264, 1778, 983, 264, 551, 300, 8198, 558, 586, 575, 668, 4743, 538, 439, 295, 505, 307, 570, 309, 727, 1391, 652, 2020, 281, 362, 746, 300, 311, 544, 19577, 11, 300, 767, 10538, 437, 2203, 293, 300, 4696, 307, 1578, 13, 51014], "temperature": 0.2, "avg_logprob": -0.5643396859217171, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.33432701230049133}, {"id": 172, "seek": 131688, "start": 1330.88, "end": 1337.88, "text": " So I think it's a good place to have the community that's working as a project because we're really not famous enough for that.", "tokens": [51064, 407, 286, 519, 309, 311, 257, 665, 1081, 281, 362, 264, 1768, 300, 311, 1364, 382, 257, 1716, 570, 321, 434, 534, 406, 4618, 1547, 337, 300, 13, 51414], "temperature": 0.2, "avg_logprob": -0.5643396859217171, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.33432701230049133}, {"id": 173, "seek": 131688, "start": 1338.88, "end": 1340.88, "text": " We've got like CFS with a lot of those things there that are already used by others.", "tokens": [51464, 492, 600, 658, 411, 383, 29318, 365, 257, 688, 295, 729, 721, 456, 300, 366, 1217, 1143, 538, 2357, 13, 51564], "temperature": 0.2, "avg_logprob": -0.5643396859217171, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.33432701230049133}, {"id": 174, "seek": 134088, "start": 1341.88, "end": 1342.88, "text": " It's a good place for it.", "tokens": [50414, 467, 311, 257, 665, 1081, 337, 309, 13, 50464], "temperature": 0.0, "avg_logprob": -0.4300083160400391, "compression_ratio": 1.642512077294686, "no_speech_prob": 0.14928990602493286}, {"id": 175, "seek": 134088, "start": 1343.88, "end": 1347.88, "text": " And as I was talking with Tiger in the past about this, this is a long game.", "tokens": [50514, 400, 382, 286, 390, 1417, 365, 22025, 294, 264, 1791, 466, 341, 11, 341, 307, 257, 938, 1216, 13, 50714], "temperature": 0.0, "avg_logprob": -0.4300083160400391, "compression_ratio": 1.642512077294686, "no_speech_prob": 0.14928990602493286}, {"id": 176, "seek": 134088, "start": 1348.88, "end": 1351.88, "text": " It's something we've been wanting for a lot of decades.", "tokens": [50764, 467, 311, 746, 321, 600, 668, 7935, 337, 257, 688, 295, 7878, 13, 50914], "temperature": 0.0, "avg_logprob": -0.4300083160400391, "compression_ratio": 1.642512077294686, "no_speech_prob": 0.14928990602493286}, {"id": 177, "seek": 134088, "start": 1352.88, "end": 1356.88, "text": " Nobody really did anything about it that we wanted to finally do something about.", "tokens": [50964, 9297, 534, 630, 1340, 466, 309, 300, 321, 1415, 281, 2721, 360, 746, 466, 13, 51164], "temperature": 0.0, "avg_logprob": -0.4300083160400391, "compression_ratio": 1.642512077294686, "no_speech_prob": 0.14928990602493286}, {"id": 178, "seek": 134088, "start": 1357.88, "end": 1363.88, "text": " So in a lot of decades we can have sites on our great every means instead of having to fill it out.", "tokens": [51214, 407, 294, 257, 688, 295, 7878, 321, 393, 362, 7533, 322, 527, 869, 633, 1355, 2602, 295, 1419, 281, 2836, 309, 484, 13, 51514], "temperature": 0.0, "avg_logprob": -0.4300083160400391, "compression_ratio": 1.642512077294686, "no_speech_prob": 0.14928990602493286}, {"id": 179, "seek": 136388, "start": 1363.88, "end": 1368.88, "text": " And in the end, there's going to be the end point in the budget of different things.", "tokens": [50364, 400, 294, 264, 917, 11, 456, 311, 516, 281, 312, 264, 917, 935, 294, 264, 4706, 295, 819, 721, 13, 50614], "temperature": 0.0, "avg_logprob": -0.6892846358449836, "compression_ratio": 1.7456896551724137, "no_speech_prob": 0.20544032752513885}, {"id": 180, "seek": 136388, "start": 1369.88, "end": 1377.88, "text": " So I mean, the obvious one is that for things like the good things, especially the good right time, those kind of things that's almost right, I go to the back of the crowd.", "tokens": [50664, 407, 286, 914, 11, 264, 6322, 472, 307, 300, 337, 721, 411, 264, 665, 721, 11, 2318, 264, 665, 558, 565, 11, 729, 733, 295, 721, 300, 311, 1920, 558, 11, 286, 352, 281, 264, 646, 295, 264, 6919, 13, 51064], "temperature": 0.0, "avg_logprob": -0.6892846358449836, "compression_ratio": 1.7456896551724137, "no_speech_prob": 0.20544032752513885}, {"id": 181, "seek": 136388, "start": 1378.88, "end": 1384.88, "text": " Those definitely need this kind of information because right now they're trying to do it differently, they wouldn't be wrong for different reasons.", "tokens": [51114, 3950, 2138, 643, 341, 733, 295, 1589, 570, 558, 586, 436, 434, 1382, 281, 360, 309, 7614, 11, 436, 2759, 380, 312, 2085, 337, 819, 4112, 13, 51414], "temperature": 0.0, "avg_logprob": -0.6892846358449836, "compression_ratio": 1.7456896551724137, "no_speech_prob": 0.20544032752513885}, {"id": 182, "seek": 138488, "start": 1385.88, "end": 1386.88, "text": " So that's what makes sense.", "tokens": [50414, 407, 300, 311, 437, 1669, 2020, 13, 50464], "temperature": 0.0, "avg_logprob": -0.6540576753162203, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.3747621178627014}, {"id": 183, "seek": 138488, "start": 1387.88, "end": 1389.88, "text": " But we can also go to...", "tokens": [50514, 583, 321, 393, 611, 352, 281, 485, 50614], "temperature": 0.0, "avg_logprob": -0.6540576753162203, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.3747621178627014}, {"id": 184, "seek": 138488, "start": 1390.88, "end": 1396.88, "text": " ... like you know, whatever it's using, it's not taking a lot of resources to use that kind of system.", "tokens": [50664, 1097, 411, 291, 458, 11, 2035, 309, 311, 1228, 11, 309, 311, 406, 1940, 257, 688, 295, 3593, 281, 764, 300, 733, 295, 1185, 13, 50964], "temperature": 0.0, "avg_logprob": -0.6540576753162203, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.3747621178627014}, {"id": 185, "seek": 138488, "start": 1397.88, "end": 1403.88, "text": " We've got that very common misconception in an activity that starts, you know, load up, rate, and then something.", "tokens": [51014, 492, 600, 658, 300, 588, 2689, 41350, 294, 364, 5191, 300, 3719, 11, 291, 458, 11, 3677, 493, 11, 3314, 11, 293, 550, 746, 13, 51314], "temperature": 0.0, "avg_logprob": -0.6540576753162203, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.3747621178627014}, {"id": 186, "seek": 138488, "start": 1404.88, "end": 1410.88, "text": " Which is really important because once you've got things that are mixed, you can easily create a lot of like 5,000 on the machine.", "tokens": [51364, 3013, 307, 534, 1021, 570, 1564, 291, 600, 658, 721, 300, 366, 7467, 11, 291, 393, 3612, 1884, 257, 688, 295, 411, 1025, 11, 1360, 322, 264, 3479, 13, 51664], "temperature": 0.0, "avg_logprob": -0.6540576753162203, "compression_ratio": 1.6260162601626016, "no_speech_prob": 0.3747621178627014}, {"id": 187, "seek": 141088, "start": 1410.88, "end": 1416.88, "text": " That's how we did it all, by just creating a secret room that's got almost no resources on the media and then link that to the media.", "tokens": [50364, 663, 311, 577, 321, 630, 309, 439, 11, 538, 445, 4084, 257, 4054, 1808, 300, 311, 658, 1920, 572, 3593, 322, 264, 3021, 293, 550, 2113, 300, 281, 264, 3021, 13, 50664], "temperature": 0.0, "avg_logprob": -0.5525543333038571, "compression_ratio": 1.7663230240549828, "no_speech_prob": 0.1742456704378128}, {"id": 188, "seek": 141088, "start": 1417.88, "end": 1423.88, "text": " It's a pretty effective whole in right now, in order to do it, it's a great way to figure out what's actually going on.", "tokens": [50714, 467, 311, 257, 1238, 4942, 1379, 294, 558, 586, 11, 294, 1668, 281, 360, 309, 11, 309, 311, 257, 869, 636, 281, 2573, 484, 437, 311, 767, 516, 322, 13, 51014], "temperature": 0.0, "avg_logprob": -0.5525543333038571, "compression_ratio": 1.7663230240549828, "no_speech_prob": 0.1742456704378128}, {"id": 189, "seek": 141088, "start": 1424.88, "end": 1431.88, "text": " You can get some stuff, you can get some stuff on other bases, but if you want the full picture, you can have many different stuff.", "tokens": [51064, 509, 393, 483, 512, 1507, 11, 291, 393, 483, 512, 1507, 322, 661, 17949, 11, 457, 498, 291, 528, 264, 1577, 3036, 11, 291, 393, 362, 867, 819, 1507, 13, 51414], "temperature": 0.0, "avg_logprob": -0.5525543333038571, "compression_ratio": 1.7663230240549828, "no_speech_prob": 0.1742456704378128}, {"id": 190, "seek": 141088, "start": 1432.88, "end": 1435.88, "text": " I'm getting really tired of having project passing next slide.", "tokens": [51464, 286, 478, 1242, 534, 5868, 295, 1419, 1716, 8437, 958, 4137, 13, 51614], "temperature": 0.0, "avg_logprob": -0.5525543333038571, "compression_ratio": 1.7663230240549828, "no_speech_prob": 0.1742456704378128}, {"id": 191, "seek": 141088, "start": 1436.88, "end": 1439.88, "text": " It's just extremely hard to approach the material that they want.", "tokens": [51664, 467, 311, 445, 4664, 1152, 281, 3109, 264, 2527, 300, 436, 528, 13, 51814], "temperature": 0.0, "avg_logprob": -0.5525543333038571, "compression_ratio": 1.7663230240549828, "no_speech_prob": 0.1742456704378128}, {"id": 192, "seek": 144088, "start": 1440.88, "end": 1442.88, "text": " Sounds like the answer is yes. You're interested.", "tokens": [50364, 14576, 411, 264, 1867, 307, 2086, 13, 509, 434, 3102, 13, 50464], "temperature": 0.0, "avg_logprob": -0.20922213130527073, "compression_ratio": 0.9152542372881356, "no_speech_prob": 0.005354706197977066}, {"id": 193, "seek": 144088, "start": 1443.88, "end": 1444.88, "text": " Yes.", "tokens": [50514, 1079, 13, 50564], "temperature": 0.0, "avg_logprob": -0.20922213130527073, "compression_ratio": 0.9152542372881356, "no_speech_prob": 0.005354706197977066}, {"id": 194, "seek": 147088, "start": 1470.88, "end": 1473.88, "text": " I was just like, I'm not a project manager.", "tokens": [50364, 286, 390, 445, 411, 11, 286, 478, 406, 257, 1716, 6598, 13, 50514], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 195, "seek": 147088, "start": 1474.88, "end": 1478.88, "text": " I'm a group that people call, I don't know what it is.", "tokens": [50564, 286, 478, 257, 1594, 300, 561, 818, 11, 286, 500, 380, 458, 437, 309, 307, 13, 50764], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 196, "seek": 147088, "start": 1479.88, "end": 1481.88, "text": " Because I'm a group that's a student.", "tokens": [50814, 1436, 286, 478, 257, 1594, 300, 311, 257, 3107, 13, 50914], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 197, "seek": 147088, "start": 1482.88, "end": 1486.88, "text": " Yeah, yeah, memory is actually worse than CPU.", "tokens": [50964, 865, 11, 1338, 11, 4675, 307, 767, 5324, 813, 13199, 13, 51164], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 198, "seek": 147088, "start": 1487.88, "end": 1488.88, "text": " I don't know what it is.", "tokens": [51214, 286, 500, 380, 458, 437, 309, 307, 13, 51264], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 199, "seek": 147088, "start": 1489.88, "end": 1492.88, "text": " I'm just trying to make it very easy to do in place.", "tokens": [51314, 286, 478, 445, 1382, 281, 652, 309, 588, 1858, 281, 360, 294, 1081, 13, 51464], "temperature": 0.0, "avg_logprob": -0.8984984453986673, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.062451571226119995}, {"id": 200, "seek": 149288, "start": 1493.88, "end": 1498.88, "text": " Yeah, so I would say I am certainly not opposed to this.", "tokens": [50414, 865, 11, 370, 286, 576, 584, 286, 669, 3297, 406, 8851, 281, 341, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14477930750165666, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.021253466606140137}, {"id": 201, "seek": 149288, "start": 1499.88, "end": 1508.88, "text": " I think this basically shouldn't live under some Netflix repo, Netflix repo, because nobody will take us seriously.", "tokens": [50714, 286, 519, 341, 1936, 4659, 380, 1621, 833, 512, 12778, 49040, 11, 12778, 49040, 11, 570, 5079, 486, 747, 505, 6638, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14477930750165666, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.021253466606140137}, {"id": 202, "seek": 149288, "start": 1509.88, "end": 1512.88, "text": " It's much better to live upstream, whether it's Linux containers, U2 Linux or whatever.", "tokens": [51214, 467, 311, 709, 1101, 281, 1621, 33915, 11, 1968, 309, 311, 18734, 17089, 11, 624, 17, 18734, 420, 2035, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14477930750165666, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.021253466606140137}, {"id": 203, "seek": 149288, "start": 1513.88, "end": 1519.88, "text": " The biggest thing is I'm guessing that U2 Linux people aren't that into Rust.", "tokens": [51414, 440, 3880, 551, 307, 286, 478, 17939, 300, 624, 17, 18734, 561, 3212, 380, 300, 666, 34952, 13, 51714], "temperature": 0.0, "avg_logprob": -0.14477930750165666, "compression_ratio": 1.5225225225225225, "no_speech_prob": 0.021253466606140137}, {"id": 204, "seek": 151988, "start": 1519.88, "end": 1524.88, "text": " Rust is like a little bit of a weird thing, because you want to convince people that stuff is safe,", "tokens": [50364, 34952, 307, 411, 257, 707, 857, 295, 257, 3657, 551, 11, 570, 291, 528, 281, 13447, 561, 300, 1507, 307, 3273, 11, 50614], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 205, "seek": 151988, "start": 1525.88, "end": 1528.88, "text": " but also adding a Rust tool chain to your build time is kind of painful.", "tokens": [50664, 457, 611, 5127, 257, 34952, 2290, 5021, 281, 428, 1322, 565, 307, 733, 295, 11697, 13, 50814], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 206, "seek": 151988, "start": 1529.88, "end": 1532.88, "text": " I'd be happy to talk if...", "tokens": [50864, 286, 1116, 312, 2055, 281, 751, 498, 485, 51014], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 207, "seek": 151988, "start": 1533.88, "end": 1534.88, "text": " Yeah, I have a question.", "tokens": [51064, 865, 11, 286, 362, 257, 1168, 13, 51114], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 208, "seek": 151988, "start": 1536.88, "end": 1540.88, "text": " He's a computer engineer, he's a employee of my company, so...", "tokens": [51214, 634, 311, 257, 3820, 11403, 11, 415, 311, 257, 10738, 295, 452, 2237, 11, 370, 485, 51414], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 209, "seek": 151988, "start": 1541.88, "end": 1543.88, "text": " Yes, yeah, we should talk after this, for sure.", "tokens": [51464, 1079, 11, 1338, 11, 321, 820, 751, 934, 341, 11, 337, 988, 13, 51564], "temperature": 0.0, "avg_logprob": -0.39972885449727374, "compression_ratio": 1.509009009009009, "no_speech_prob": 0.004896651487797499}, {"id": 210, "seek": 154388, "start": 1543.88, "end": 1556.88, "text": " Yeah, yeah, where it lives is like, I don't want to make another talk in ten years with this same number of bug reports on the top.", "tokens": [50364, 865, 11, 1338, 11, 689, 309, 2909, 307, 411, 11, 286, 500, 380, 528, 281, 652, 1071, 751, 294, 2064, 924, 365, 341, 912, 1230, 295, 7426, 7122, 322, 264, 1192, 13, 51014], "temperature": 0.0, "avg_logprob": -0.19984214863878616, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.027109241113066673}, {"id": 211, "seek": 154388, "start": 1560.88, "end": 1561.88, "text": " Other questions?", "tokens": [51214, 5358, 1651, 30, 51264], "temperature": 0.0, "avg_logprob": -0.19984214863878616, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.027109241113066673}, {"id": 212, "seek": 154388, "start": 1564.88, "end": 1565.88, "text": " Cool, thank you.", "tokens": [51414, 8561, 11, 1309, 291, 13, 51464], "temperature": 0.0, "avg_logprob": -0.19984214863878616, "compression_ratio": 1.2595419847328244, "no_speech_prob": 0.027109241113066673}, {"id": 213, "seek": 157388, "start": 1573.88, "end": 1575.88, "text": " Thanks for watching.", "tokens": [50364, 2561, 337, 1976, 13, 50464], "temperature": 0.0, "avg_logprob": -0.7831917490277972, "compression_ratio": 0.7142857142857143, "no_speech_prob": 0.9755045175552368}], "language": "en"}