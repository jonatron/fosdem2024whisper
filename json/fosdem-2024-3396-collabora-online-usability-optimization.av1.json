{"text": " Okay, so thank you for joining. The next talk is still about Collabora, second talk of the day about Collabora, which is about Collabora online usability optimization. And we still have Kaelin, and that was in the previous talk, and also Michael that is joining us. Thank you, Kaelin. Fantastic. This is Kaelin, this is Michael. Good. This is what I'm going to say. You'll see it as we get there. And yes, fantastic. Kaelin did a very good spiel earlier on how this thing works. So if you're in the previous talk, you saw something similar to this, but you have your browser, and then you have a web socket talking to a server on the back end, C++. And this talks to the Librofiskit over a Unix domain socket, which does all sorts of beautiful interoperability rendering, tiled goodness. And yes, this fetches data from an own cloud, an OSIS, a next cloud, a pygmc file, lots of things, any kind of WAPI share point I think we can use even. Yeah, for the good guys, right? And yes, so anyway, so this gets the file, this pushes it in here, it renders it, it comes back out to the browser. And yes, we do all sorts of things to try and cache that. So JavaScript here, good stuff over there. Anything else on there? Nope, nope. Seems pretty silly. And I just want to talk a little bit about latencies. This is an interactive presentation. I'm not going to ask you to put your hands up just yet. But just here are some timings. And the one I want to time is this human eye blink, 100 milliseconds for a human eye blink, okay? Right, so here we are. How good are you at blinking? Are you ready? Okay? So I'm going to press a button and we'll start blinking. And when you see red, stop. But you need to count at the same time, okay? You ready? Silently. Silently. Yeah, yeah, here we go. Ready? Ready? Are you ready? Go. How many? How many did you get? Do you want to try again? Yeah? Okay, so here is reciprocation for beginners, okay? So this is an advanced topic in maths, okay? If you need help. Anyway, so if you're a falcon, you've got like 7.7 milliseconds. So that's pretty good. Me, I'm more about here. I don't know how about you. Six, seven, eight. How many did you get? Do you want to try again? Okay, we're going to try again. It's like, okay, right? You got the idea now, right? Okay, ready? Not completely, okay. So I'm going to click and it's going to go green. Start blinking. And count the blinks you're doing. Blink as fast as you can, right? As many as you can. I want to get a high score here, right? We're going for the Peregrine Falcon 153 in a second, right? Okay, ready? Okay, three, two, you've not started yet, have you? Three, two, one, blink. Okay, that was a second. You had to blink. How many did you get? Five, six, seven, eight. Yeah, okay, fair enough. So this tells you your score. And interestingly, in the UK, they say a blink takes between 100 and 150 milliseconds. In Harvard, it takes between 100 and 400, which tells you something about Americans. Maybe. I don't know. It's slower pace of life is good for people generally. Anyway, sorry. So here we are. So actually, the very interesting thing is that when you start looking at some of these numbers, now on a log scale, so they're a bit more friendly, you know, the blinking is really quite slow. You can go from the Frankfurt to the US east coast and back again in the same time, right? So that's pretty good. You know, the 60 hertz frame time, 16, you know, is also quite long. You can get Frankfurt Milan, Frankfurt London is a similar time to the time it takes to get something on the screen, particularly when you add the monitor latency. So you blink faster than you miss. Lots of people are very worried about latency, and they don't have a good feeling for how long things take. But it's quite interesting to see some of these things. And also, in terms of typing, you know, like the average typist is supposed to be like three characters a second, pro 6.6. Yeah, it's human eye blinkers quicker. But you know, even me typing, not very accurately, it's like, yeah, quite, quite, and if you mash the keyboard, it turns out you're massively faster, like you're 10 times faster than the average typist when you mash the keyboard. It's not, you know, it's not good for it. So yes, there we go. Anyway, I'm going to hand over to Depp, Aquilon, unless you have anything to add? No, no, no, no, nothing to add on blinking. But yeah, the fundamental point that networking is really, really fast and stuff comes from one end to the other and back in a very, very sharp period of time is great. So, you know, don't generally have to worry too much about that part of things. Yeah, so what we do is that we have a bunch of demo servers that are generally publicly accessible. And what I've started, we started in recently is to use perf to sample once a second and record for an entire week what happens on the public servers. And at the end of the week, then we generate a single flame graph from all of that to see what, where, where, where our time is spent over the week generally. That's the demo servers, multi user testing. We have this once a week called some of the people present in the room, join us from that from other people, organizations and, and community members, members. And we just have a general feel as to what it feels like in that little 10, 20, 15 person call for the applications are still responsive or whatever issues arise in testing that can be checked at that point. And that is also profiled and flame graph generated, typically one for writer and one for Calc in recent tests, which are all stuck up in GitHub that you can look at yourselves if you're interested to see the change in time over what we're looking at. We use it internally in clapper, of course, with the deployment that is used daily there and the same week long profile that I mentioned for the demo server is run on the internal one now as well. Yeah, so that's the tooling that we're looking at there. And then interactive debugging, which you have the clapper online, you can do yourself. You just go help about and you trip a click on the dialogue there. And that'll show you up this debugging display that we're looking at here. There's loads of information in it there. The far right inside the tick box as you check them on, certain ones will check on display in the bottom left corner to tell you things. But maybe more interestingly, the one that we're calling the tile overlays. When you type in the documents, you'll get these flashing areas. And that's the part of the document that has been required to be redrawn because of your interaction. So what you're really hoping to see, especially looking at these things is that people are typing and you're hoping to see a small rectangle around the area of change that they're actually making. If the entire screen starts flashing, it means that there's a whole reason other piles of things have been redrawn or been invalidated to be painted to be redrawn later on to avoid that. These are the kind of flame graphs that we look at and the week and just for the purposes of looking at these things, the colors don't matter in these flame graphs or most flame graphs. What matters is the width of the line, the width of the bar, the wider the bar, the more proportionally time has been spent there. What you want to do is you want to take a quick look at it. You want to see which is the widest line and see can you make the wider lines narrower. I mean, it's nothing to the profiling really. It's just make the wide ones narrow. Yeah, so this particular one is in the widest bar there. This whole gigantic pile of boost, spirit, classic, whatever, which is all being used to detect if the PDF that people are opening up is a particular type of PDF, the hybrid PDF that's using LibreOffice where you can embed the LibreOffice document inside the PDF. So when you open up PDF, you also have the original document. It just takes a ludicrous amount of time, especially over the course of a week to collect up that information when it can be done in many orders of magnitude less. Yes. So it's good to see that sort of stuff and disappear off the profile. You should never optimize before profiling, obviously. Cool. Thanks, Will. Storing previous tiles. Yeah, so we've done a whole lot of work to improve our tile rendering performance. We store previous tiles that have been rendered so we can see what the difference is and just send the difference. That saves a lot of bandwidth and reduces latency too. And we've completely rewritten this. Well, how this is done in the last six months to a year. So we've already compressed it, so just a simple run length encoding. Because we're extremely modern, instead of doing stupid stuff like using byte lengths and this kind of thing, we use bit masks. And you'll see why in a second. So the bit mask essentially says, is the pixel the same as the previous pixel? So you end up with a bit mask. We have 1056 square tiles. So in four 64 bit numbers, we can have the whole bit mask for the row. And yeah, it's pretty easy. This removes a whole load of things. Previously, we stored them uncompressed. We compared them uncompressed. Turns out to be massively slower. Touch is much more memory. It uses much more space. And we also did clever things to hash each row as we did that while we were copying. But it turns out this is far better just to use the bit mask and some of that stuff. And, Koel and I did this fun thing with AVX2. Why not? You hear about these processor accelerated things and after shrinking our inner loop down to almost nothing, it's still not as quick as it could be on the CPU. So this is how we do it. We load a whole load, actually eight pixels, into a whole single AVX register, which is just kind of nice, right? Eight pixels at a time. And the problem is we need to compare it with the previous thing. So we shift a bit off the end. We shove the previous one. We shift it along, although actually it's really a sort of, yeah, it's a crossbar switch here that you permute to move things. There is no shift in AVX registers that does that. And then we just compare these guys. And that gives you a whole load of either whole all ones are all zeroes. And then comes Koel on magic trick. Well, yeah, in AVX, there's the AVX2, which is like practically available. But AVX512, which is not practically available, has a particular call that you can do that will compare the two things for you and give you that bit mask, which is not available in the AVX2. And if you look at what's available, though, you can guess if it was done in floats, then the number is basically available for you. So you cast it to floats, and you do this move mask thing brings your top bits in and gives you what you were hoping for in the first place, which is just an individual bit result for each individual pixel that you've compared, whether they're true or not. And you can basically so compress, pull the bits you're looking for out in no time. It's great. Which is pretty awesome. So, you know, you convert this into a floating point number, and you get the sign out of it. And that's your that's your orally bit mask. So the nice thing about this is there's no branch, there's no compare. There's nothing. There's a simple flat loop with about five instructions. At the end of that, we then have to work out how many pixels to copy because it's all very well saying these the same, but you need individual copies of those different pixels one after another. So a bit of a pop count will count the bits in the mask. And then with a clever lookup table, we can also use this. Yeah, this clever instruction shuffling instructions to shuffle the things in that we need to copy them out, stack them up. Bingo, twice as fast, which is nice. And hopefully AVX512, you know, will make it even even faster if you believe that you'll believe anything. So yes, here we go. So this is a real problem here. And if only we can find the idiot responsible for you. We don't need to suggest. Yeah, no, what's sometimes interesting is that, while I said earlier narrow was better, sometimes it can be interesting to see that wider will be better in the sense that when you look at the flame graph, what you should see is individual threads should all be positioned separately. So they shouldn't be, you know, combined with the main thread. So if you're not seeing work that you expect to see happening in a thread on the left hand side, basically, of your flame graph, then it means the threading isn't being used. So it becomes apparent that while there's this code that attempts to do this threading for doing this previous delta stuff, there is no existence of the threads and there's a flaw that needs to be sorted. So when you fix the flaw for the threading and bring it back in, you see then on the far left hand side, because it's rooted in the threading area, all that work is put on the left hand side separately in the flame graph. And while it's wider, it now means it's operating in a separate thread and you've made progress. So it's nice to get twice as fast and then four times as fast on top of it. That's the right sort of approach. Yeah, I think we're going to skip through some of these because we're running out of time. But working out where to do the work, either in the browser or not, and I'm pretty multiplying and the stupidity of the web and having an RGB, un-premultiplied alpha API. When it's almost certainly going to be premultiplied underneath its hood. Yeah, underneath the hood, all the hardware, everything is doing premultiplying because it's so much quicker. You can see the complaints online about people pushing RGBA into the canvas and getting something out that isn't the same because it's been premultiplied and then un-premultiplied. Anyway, there you go. The web APIs are awesome. What else? What should be on your profile? Well, it's very hard to know. This could be okay. Here's a whole lot of un-premultiplication here. It's a very old profile. It's a time, but hey, there's a lot of rendering on the profile. Not very much painting, lots of delta ring, so we fixed that. But actually, it's very hard to know if this is good or bad looking at that. Actually, with lots of bogus invalidations, you start to see lots of rendering and that's not what you want. So everything should shrink and you'll end up with a profile that looks the same, but everything feels much quicker. So we've done lots of work to shrink, I guess. Mr. Enders, do you want to pick a couple of these now? Yeah, just as you mentioned, with multiple user document tests, we have kind of basically monitor what's happening. People are joining documents. We got that full document invalidation we mentioned about happening. Clicking in headers and footers were causing the same things. I think fundamentally, because the invalidations and redrawing on the desktop has become so cheap, while in the past, the very distant past, we might have been pretty good at keeping validations down. In that case, we've become slack in recent decades and now we've treated it as cheap and that has affected things. So let's kind of have a look at that again and bring things down to smaller rendering areas and less invalidations. Yeah, and the good news is that improves LibreOffice, of course, as well. It's more efficient and clean on your PC as well underneath. So good. We've done lots better latency hiding in terms of more aggressive prefetching. So the next slide is there before you switch to it. So it's absolutely instant. Hiding latency in those ways is quite fun, enlarging the area around the view and maintaining that as tiles and just storing and managing much more compressed tile data in the clients that we manage much better now. This is a fun one. But we don't have much time for it. Yeah, well, God, classically, standard list and C++ was always a standard list. And if you wanted to get the size of it, you had to like pass the entire list from start to finish. That was sorted out decades ago. But for whatever reason, for compatibility purposes, if you use the particular Red Hat developer tool chain, then you seem to get the classic behavior or standard list back again. So when we were assuming that you was cheap and cheerful to get the length of a standard list, it turns out to be not the case with this particular case. So you have to go back to a different approach and it appears in your profile like that. But again, it looks normal that it should take some time to draw things. And it's normal to have a cache to speed that up. But if the cache has got 20,000 items in it, and you're just walking this list, you know, point it, chasing anyway. So gone. Oh, fun stuff. Like why not have a massive virtual device in the background that you could render to instead of the whole document every time you do something? Not great. Or another one, why not have a benchmark every time you start the document to see how fast rendering is, allocate a whole load of memory and dirty it, you know? Great. Yeah, trying to cache images. So we didn't bother catching compressed images because they're compressed, right? So why bother? They're small. They're good to have memory, except TIFFs not so much compressed, you know, you eventually have the whole massive chunk of memory there. Using G-Lib C trimming functions on idle to reduce memory usage. Yeah, trying to get better measurements of various things. Yeah, this is a fun one. Well, oh, this is the S-Maps word. Yes, yes, yes, we're reading the proc S-Maps to see how much memory we're using. And the classic S-Maps has got multiple entries in it for many, many parts of your process. So you just read multiple lines. So there's a relatively new one that has it all pre-edited for you. ProxMaps roll up, which is exactly what we want. Same code to read the previous one should work with the new one. Then apparently we're running out of memory, or it's being reported that we're running out of memory, and it's all very, very bizarre. You can't proc S-Maps roll up yourself. The numbers are good. There's something very odd, but it turns out that if you seek back to the beginning and then read again, that the numbers double every time you do this. There's an actual bug in the original implementation. It's not there in the kernel, my version 6 kernel, but it is there on version V18 or 16 that the servers were applied on. So you have to be just the right version for it to appear. So Linus fixed it, thank God. Quillholt found it. Well, it was fixed before we found it. But it's always nice to know you have to check your kernel is the right, you know, is the quality kernel before you start asking it how much memory it's using. Yeah, hunspell in the loop was almost entirely dominated, not by actually spelling things, but by looking at the time. You know, I'm sure in a bad talk, you know, it's quite similar. But that's a little bit unfortunate. So yeah, some improvements there. And lots of other things, graphs showing speedups. We've got to get to usability in the last minute. Let me whizz through this then. Here we go. Accessibility, dark modes, pretty pictures. This is going to be fast. Keyboard accelerators. This is all of the good stuff for people. Screen reading, and all sorts of nice things, videos of that. Better page navigators at the side so you can see where you're going. And lots of just little bits of usability polish, a nice font previews. Was this your page number thing? I forget who did that. Making it easier to insert page numbers so people can see, you know, what's going on easily, better change tracking and showing changes, AI, depot, stuff, and hey, some some. The good news is there's more opportunity for performance improvement. So we're still, we're still having fun. You know, hey, come join us. There's some cool play files to read. Right. Well, yes. At the moment, in Calc, when you're typing the entire row and validates beyond the right hand side of where you're actually typing. So we brought that down to the self in the most generic case, but it's not done for writer. In the writer case, if you're typing, we are invalidating all the way to the right hand side of the screen. So we'll bring shrink back back down again. We have some new metrics that we've included in that debugging overlay thing that give you an indication of, you know, how much of these updates that are coming through are the same data as they were before the update came through and the numbers are staggeringly high. So there's plenty of room for improvement to validate less, send more data down. So what we have now is fix, uh, approval. Yeah. The moment that's always been troublesome in, uh, Lear Office is the treatment of the alpha layer. We picked the wrong direction than everybody else does. Everybody else picks transparency. We picked opacity or vice versa. So we have the opposite direction. Everybody else would want to actually output something in the real world that handles transparency. We have to like reverse our transparency. So that's problematic. That's, that's now fixed. That one is fixed. That one is fixed. But then we've also kept our transparency layer in a separate, uh, bitmap, a separate buffer than an actual bitmap. And if we put them together someday, that would make things a lot easier, I believe. Yeah. It's the Windows 16 API decisions that are still with us. But anyway, we're getting rid of them quickly. That's great. Um, yeah, performance regression testing with Valgrind, uh, pipeline loading. So at the moment, oh, we got five minutes. Oh, look at that. Fantastic. I went too quickly. No, you're doing fine. Okay, right. Fine. Excellent. I think we're nearly the end. Um, so pipeline loading. So at the moment we have, um, we, we essentially fetch a, fetch a webpage that passes all the credentials we need to check ourselves. We'd load lots of JavaScript. We open a web socket. Then do we actually see if we can actually load the document and start checking who the user is? This is really foolish. I'm taking on a first start, we can be, you know, checking the user, downloading the document, even loading the document ready to get the web socket and then have a pre-rendered version. So this, this is very substantially reducing, um, startup time to make it incredibly quick. You already have a huge advantage that you have a real server at the back end and you're not having to jit, you know, millions of lines of code in your browser from JavaScript into something or, you know, web assembly into something. Um, so it should be just amazingly fast. And so this is a great way to, to speed that even further. And, you know, and a real server, you may have a time share, but you know, when you arrived your server, it's probably not doing much. In fact, the CPU cost on most of our servers is extremely low. So, you know, there's suddenly all these threads ready to render your document and get, get stuff to you quickly. Say some good things. And Valgrind, we've done a whole lot of work to get, um, it to run nicely under Valgrind with our privilege model and container model. It's a bit of a problem. Uh, and so we have some code now that turns everything into one process. So you can load and collaborate on one document and automate that, but you can run it in, in Valgrind. And why do you want to do performance profiling in Valgrind? It seems like a retro, uh, poly, right? But the beautiful thing about Valgrind is the simulated CPU. So anybody can run the same workload on their machine and between two runs, it's the same thing. And Valgrind luckily doesn't have a simulated thermal management system that randomly throttles your CPU, uh, performance. And it luckily doesn't have people screwing with your cache memory and running cron jobs in the background and, you know, thermally recalibrating your disk and all this other stuff. So what you discover is that between two identical commits, you're getting fractions of a, small fractions of a percent difference in the Valgrind numbers, which is beautiful because performance tends not to go away in big jumps. Like we can, it can go in big jumps, but it tends to go slowly downhill. And if the noise is bigger than the slow downhill, you've no idea where the problem is. So much better to have a little series of steps going down in one half a percent at a time and go, hey, we get rid of that and that. And did you realize and, uh, so, so this is really vital. And LibreOffice uses this on its perf, um, automation has been beautiful web pages with graphs. Um, and we'll, we'll be applying to, to collaborate online to, to try and avoid regressions. Yeah. Someday soon. Someday soon. Yeah. Neil, Neil Lazzone, we think probably. Anyway, anything else? No, I think we've covered plenty. Well, so, and yes, of course, we can't do anything without our partners and customers that pay for it all, blah, blah, blah, commercial plug. Good. Yes. That's good. Job done. And conclusions. Yes. So, uh, computers are unbelievably fast. I mean, like this is something that you should take home. You know, like the quarter of a nanosecond that your four giga hertz processor takes is just unbelievable in the scale of a hundred milliseconds plus. It takes you to blink your eye. It's just fantastically speedy in a way you can't explain. Uh, the network latency to anywhere almost, you know, you can go three times, uh, London to Frankfurt and back in the time you can blink, right? Like it's, it's unbelievably fast. In fact, you can go, you know, Frankfurt, Milan faster than your monitor can refresh, right? So, so like, it's quite amazing when you start looking at the times of things. Um, architecture is really a bet on CPUs and networks getting faster and cheaper. Has anyone noticed a trend there? I think there might be something in that. And, and we're basically racing the hardware guys. I mean, you know, we, we do stupid stuff, obviously, and then we remove it later. But, you know, the hardware people are also trying to beat us to run stupid stuff quicker. You know, that's their mission. And, uh, yes. And, and we extremely smooth. Don't get the feeling that it's bad. Try it. You know, most of these problems, you'll only start to see them when you have 20 plus people collaboratively editing in document. So, uh, yeah, it's, it's kind of, it's kind of cool. So give it a try and try the latest version and see, give us some feedback, get involved. And there's lots, lots of fun to get involved with. I mean, I don't know. Yeah, I'd like us to play two things. As I mentioned earlier, the profile that we have for Calc and Writers uploaded to GitHub once a week, generic Calc performance profile, generic writer performance profile, search on the online GitHub issues. And you can see all of the, the chats that we've mentioned there in the past. And you can even see with the progress there and the occasional blip during a call where things go horrifically wrong and get sorted out in the next one. So yeah, plenty to see and see what we're doing. There's some links in the slide. You can't see to the profiles and get involved in the Libre Office of Technology. Thank you. That's it. You've been very patient. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.0, "text": " Okay, so thank you for joining. The next talk is still about Collabora, second talk of the", "tokens": [50364, 1033, 11, 370, 1309, 291, 337, 5549, 13, 440, 958, 751, 307, 920, 466, 4586, 455, 3252, 11, 1150, 751, 295, 264, 51014], "temperature": 0.0, "avg_logprob": -0.32709083557128904, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.5071250200271606}, {"id": 1, "seek": 0, "start": 13.0, "end": 19.92, "text": " day about Collabora, which is about Collabora online usability optimization. And we still", "tokens": [51014, 786, 466, 4586, 455, 3252, 11, 597, 307, 466, 4586, 455, 3252, 2950, 46878, 19618, 13, 400, 321, 920, 51360], "temperature": 0.0, "avg_logprob": -0.32709083557128904, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.5071250200271606}, {"id": 2, "seek": 0, "start": 19.92, "end": 27.04, "text": " have Kaelin, and that was in the previous talk, and also Michael that is joining us.", "tokens": [51360, 362, 591, 4300, 259, 11, 293, 300, 390, 294, 264, 3894, 751, 11, 293, 611, 5116, 300, 307, 5549, 505, 13, 51716], "temperature": 0.0, "avg_logprob": -0.32709083557128904, "compression_ratio": 1.5773809523809523, "no_speech_prob": 0.5071250200271606}, {"id": 3, "seek": 2704, "start": 27.04, "end": 30.96, "text": " Thank you, Kaelin. Fantastic. This is Kaelin, this is Michael. Good. This is what I'm going", "tokens": [50364, 1044, 291, 11, 591, 4300, 259, 13, 21320, 13, 639, 307, 591, 4300, 259, 11, 341, 307, 5116, 13, 2205, 13, 639, 307, 437, 286, 478, 516, 50560], "temperature": 0.0, "avg_logprob": -0.22764018109736553, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.5206906795501709}, {"id": 4, "seek": 2704, "start": 30.96, "end": 37.96, "text": " to say. You'll see it as we get there. And yes, fantastic. Kaelin did a very good spiel", "tokens": [50560, 281, 584, 13, 509, 603, 536, 309, 382, 321, 483, 456, 13, 400, 2086, 11, 5456, 13, 591, 4300, 259, 630, 257, 588, 665, 637, 1187, 50910], "temperature": 0.0, "avg_logprob": -0.22764018109736553, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.5206906795501709}, {"id": 5, "seek": 2704, "start": 37.96, "end": 41.519999999999996, "text": " earlier on how this thing works. So if you're in the previous talk, you saw something similar", "tokens": [50910, 3071, 322, 577, 341, 551, 1985, 13, 407, 498, 291, 434, 294, 264, 3894, 751, 11, 291, 1866, 746, 2531, 51088], "temperature": 0.0, "avg_logprob": -0.22764018109736553, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.5206906795501709}, {"id": 6, "seek": 2704, "start": 41.519999999999996, "end": 45.28, "text": " to this, but you have your browser, and then you have a web socket talking to a server on", "tokens": [51088, 281, 341, 11, 457, 291, 362, 428, 11185, 11, 293, 550, 291, 362, 257, 3670, 19741, 1417, 281, 257, 7154, 322, 51276], "temperature": 0.0, "avg_logprob": -0.22764018109736553, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.5206906795501709}, {"id": 7, "seek": 2704, "start": 45.28, "end": 50.519999999999996, "text": " the back end, C++. And this talks to the Librofiskit over a Unix domain socket, which", "tokens": [51276, 264, 646, 917, 11, 383, 25472, 13, 400, 341, 6686, 281, 264, 15834, 340, 69, 7797, 270, 670, 257, 1156, 970, 9274, 19741, 11, 597, 51538], "temperature": 0.0, "avg_logprob": -0.22764018109736553, "compression_ratio": 1.6268115942028984, "no_speech_prob": 0.5206906795501709}, {"id": 8, "seek": 5052, "start": 50.52, "end": 57.080000000000005, "text": " does all sorts of beautiful interoperability rendering, tiled goodness. And yes, this fetches", "tokens": [50364, 775, 439, 7527, 295, 2238, 728, 7192, 2310, 22407, 11, 256, 7292, 8387, 13, 400, 2086, 11, 341, 15136, 3781, 50692], "temperature": 0.0, "avg_logprob": -0.3154019769632591, "compression_ratio": 1.554585152838428, "no_speech_prob": 0.3693382441997528}, {"id": 9, "seek": 5052, "start": 57.080000000000005, "end": 63.88, "text": " data from an own cloud, an OSIS, a next cloud, a pygmc file, lots of things, any kind of", "tokens": [50692, 1412, 490, 364, 1065, 4588, 11, 364, 12731, 2343, 11, 257, 958, 4588, 11, 257, 10664, 70, 76, 66, 3991, 11, 3195, 295, 721, 11, 604, 733, 295, 51032], "temperature": 0.0, "avg_logprob": -0.3154019769632591, "compression_ratio": 1.554585152838428, "no_speech_prob": 0.3693382441997528}, {"id": 10, "seek": 5052, "start": 63.88, "end": 71.80000000000001, "text": " WAPI share point I think we can use even. Yeah, for the good guys, right? And yes, so", "tokens": [51032, 343, 4715, 40, 2073, 935, 286, 519, 321, 393, 764, 754, 13, 865, 11, 337, 264, 665, 1074, 11, 558, 30, 400, 2086, 11, 370, 51428], "temperature": 0.0, "avg_logprob": -0.3154019769632591, "compression_ratio": 1.554585152838428, "no_speech_prob": 0.3693382441997528}, {"id": 11, "seek": 5052, "start": 71.80000000000001, "end": 75.36, "text": " anyway, so this gets the file, this pushes it in here, it renders it, it comes back out", "tokens": [51428, 4033, 11, 370, 341, 2170, 264, 3991, 11, 341, 21020, 309, 294, 510, 11, 309, 6125, 433, 309, 11, 309, 1487, 646, 484, 51606], "temperature": 0.0, "avg_logprob": -0.3154019769632591, "compression_ratio": 1.554585152838428, "no_speech_prob": 0.3693382441997528}, {"id": 12, "seek": 7536, "start": 75.36, "end": 81.32, "text": " to the browser. And yes, we do all sorts of things to try and cache that. So JavaScript", "tokens": [50364, 281, 264, 11185, 13, 400, 2086, 11, 321, 360, 439, 7527, 295, 721, 281, 853, 293, 19459, 300, 13, 407, 15778, 50662], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 13, "seek": 7536, "start": 81.32, "end": 83.68, "text": " here, good stuff over there. Anything else on there?", "tokens": [50662, 510, 11, 665, 1507, 670, 456, 13, 11998, 1646, 322, 456, 30, 50780], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 14, "seek": 7536, "start": 83.68, "end": 87.88, "text": " Nope, nope. Seems pretty silly. And I just want to talk a little bit about latencies.", "tokens": [50780, 12172, 11, 23444, 13, 22524, 1238, 11774, 13, 400, 286, 445, 528, 281, 751, 257, 707, 857, 466, 4465, 6464, 13, 50990], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 15, "seek": 7536, "start": 87.88, "end": 91.32, "text": " This is an interactive presentation. I'm not going to ask you to put your hands up just", "tokens": [50990, 639, 307, 364, 15141, 5860, 13, 286, 478, 406, 516, 281, 1029, 291, 281, 829, 428, 2377, 493, 445, 51162], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 16, "seek": 7536, "start": 91.32, "end": 96.12, "text": " yet. But just here are some timings. And the one I want to time is this human eye blink,", "tokens": [51162, 1939, 13, 583, 445, 510, 366, 512, 524, 1109, 13, 400, 264, 472, 286, 528, 281, 565, 307, 341, 1952, 3313, 24667, 11, 51402], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 17, "seek": 7536, "start": 96.12, "end": 100.92, "text": " 100 milliseconds for a human eye blink, okay? Right, so here we are. How good are you at", "tokens": [51402, 2319, 34184, 337, 257, 1952, 3313, 24667, 11, 1392, 30, 1779, 11, 370, 510, 321, 366, 13, 1012, 665, 366, 291, 412, 51642], "temperature": 0.0, "avg_logprob": -0.24257989363236862, "compression_ratio": 1.6237623762376239, "no_speech_prob": 0.9213241934776306}, {"id": 18, "seek": 10092, "start": 100.92, "end": 105.92, "text": " blinking? Are you ready? Okay? So I'm going to press a button and we'll start blinking.", "tokens": [50364, 45879, 30, 2014, 291, 1919, 30, 1033, 30, 407, 286, 478, 516, 281, 1886, 257, 2960, 293, 321, 603, 722, 45879, 13, 50614], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 19, "seek": 10092, "start": 105.92, "end": 109.6, "text": " And when you see red, stop. But you need to count at the same time, okay? You ready?", "tokens": [50614, 400, 562, 291, 536, 2182, 11, 1590, 13, 583, 291, 643, 281, 1207, 412, 264, 912, 565, 11, 1392, 30, 509, 1919, 30, 50798], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 20, "seek": 10092, "start": 109.6, "end": 110.6, "text": " Silently.", "tokens": [50798, 6943, 2276, 13, 50848], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 21, "seek": 10092, "start": 110.6, "end": 118.16, "text": " Silently. Yeah, yeah, here we go. Ready? Ready? Are you ready? Go. How many? How many did you", "tokens": [50848, 6943, 2276, 13, 865, 11, 1338, 11, 510, 321, 352, 13, 9944, 30, 9944, 30, 2014, 291, 1919, 30, 1037, 13, 1012, 867, 30, 1012, 867, 630, 291, 51226], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 22, "seek": 10092, "start": 118.16, "end": 124.4, "text": " get? Do you want to try again? Yeah? Okay, so here is reciprocation for beginners, okay?", "tokens": [51226, 483, 30, 1144, 291, 528, 281, 853, 797, 30, 865, 30, 1033, 11, 370, 510, 307, 28961, 46252, 337, 26992, 11, 1392, 30, 51538], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 23, "seek": 10092, "start": 124.4, "end": 130.9, "text": " So this is an advanced topic in maths, okay? If you need help. Anyway, so if you're a falcon,", "tokens": [51538, 407, 341, 307, 364, 7339, 4829, 294, 36287, 11, 1392, 30, 759, 291, 643, 854, 13, 5684, 11, 370, 498, 291, 434, 257, 3704, 1671, 11, 51863], "temperature": 0.0, "avg_logprob": -0.23131791807764726, "compression_ratio": 1.7, "no_speech_prob": 0.7586203217506409}, {"id": 24, "seek": 13090, "start": 130.9, "end": 137.66, "text": " you've got like 7.7 milliseconds. So that's pretty good. Me, I'm more about here. I don't", "tokens": [50364, 291, 600, 658, 411, 1614, 13, 22, 34184, 13, 407, 300, 311, 1238, 665, 13, 1923, 11, 286, 478, 544, 466, 510, 13, 286, 500, 380, 50702], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 25, "seek": 13090, "start": 137.66, "end": 141.42000000000002, "text": " know how about you. Six, seven, eight. How many did you get? Do you want to try again?", "tokens": [50702, 458, 577, 466, 291, 13, 11678, 11, 3407, 11, 3180, 13, 1012, 867, 630, 291, 483, 30, 1144, 291, 528, 281, 853, 797, 30, 50890], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 26, "seek": 13090, "start": 141.42000000000002, "end": 145.5, "text": " Okay, we're going to try again. It's like, okay, right? You got the idea now, right?", "tokens": [50890, 1033, 11, 321, 434, 516, 281, 853, 797, 13, 467, 311, 411, 11, 1392, 11, 558, 30, 509, 658, 264, 1558, 586, 11, 558, 30, 51094], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 27, "seek": 13090, "start": 145.5, "end": 150.78, "text": " Okay, ready? Not completely, okay. So I'm going to click and it's going to go green.", "tokens": [51094, 1033, 11, 1919, 30, 1726, 2584, 11, 1392, 13, 407, 286, 478, 516, 281, 2052, 293, 309, 311, 516, 281, 352, 3092, 13, 51358], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 28, "seek": 13090, "start": 150.78, "end": 155.94, "text": " Start blinking. And count the blinks you're doing. Blink as fast as you can, right? As", "tokens": [51358, 6481, 45879, 13, 400, 1207, 264, 888, 16431, 291, 434, 884, 13, 2177, 475, 382, 2370, 382, 291, 393, 11, 558, 30, 1018, 51616], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 29, "seek": 13090, "start": 155.94, "end": 159.94, "text": " many as you can. I want to get a high score here, right? We're going for the Peregrine", "tokens": [51616, 867, 382, 291, 393, 13, 286, 528, 281, 483, 257, 1090, 6175, 510, 11, 558, 30, 492, 434, 516, 337, 264, 49349, 861, 533, 51816], "temperature": 0.0, "avg_logprob": -0.1674457166179921, "compression_ratio": 1.7218543046357615, "no_speech_prob": 0.07973745465278625}, {"id": 30, "seek": 15994, "start": 159.98, "end": 165.98, "text": " Falcon 153 in a second, right? Okay, ready? Okay, three, two, you've not started yet,", "tokens": [50366, 31801, 2119, 18, 294, 257, 1150, 11, 558, 30, 1033, 11, 1919, 30, 1033, 11, 1045, 11, 732, 11, 291, 600, 406, 1409, 1939, 11, 50666], "temperature": 0.0, "avg_logprob": -0.19346331641787573, "compression_ratio": 1.5, "no_speech_prob": 0.03568194434046745}, {"id": 31, "seek": 15994, "start": 165.98, "end": 173.98, "text": " have you? Three, two, one, blink. Okay, that was a second. You had to blink. How many did", "tokens": [50666, 362, 291, 30, 6244, 11, 732, 11, 472, 11, 24667, 13, 1033, 11, 300, 390, 257, 1150, 13, 509, 632, 281, 24667, 13, 1012, 867, 630, 51066], "temperature": 0.0, "avg_logprob": -0.19346331641787573, "compression_ratio": 1.5, "no_speech_prob": 0.03568194434046745}, {"id": 32, "seek": 15994, "start": 173.98, "end": 180.14, "text": " you get? Five, six, seven, eight. Yeah, okay, fair enough. So this tells you your score.", "tokens": [51066, 291, 483, 30, 9436, 11, 2309, 11, 3407, 11, 3180, 13, 865, 11, 1392, 11, 3143, 1547, 13, 407, 341, 5112, 291, 428, 6175, 13, 51374], "temperature": 0.0, "avg_logprob": -0.19346331641787573, "compression_ratio": 1.5, "no_speech_prob": 0.03568194434046745}, {"id": 33, "seek": 15994, "start": 180.14, "end": 187.64, "text": " And interestingly, in the UK, they say a blink takes between 100 and 150 milliseconds. In", "tokens": [51374, 400, 25873, 11, 294, 264, 7051, 11, 436, 584, 257, 24667, 2516, 1296, 2319, 293, 8451, 34184, 13, 682, 51749], "temperature": 0.0, "avg_logprob": -0.19346331641787573, "compression_ratio": 1.5, "no_speech_prob": 0.03568194434046745}, {"id": 34, "seek": 18764, "start": 187.67999999999998, "end": 193.17999999999998, "text": " Harvard, it takes between 100 and 400, which tells you something about Americans. Maybe.", "tokens": [50366, 13378, 11, 309, 2516, 1296, 2319, 293, 8423, 11, 597, 5112, 291, 746, 466, 6280, 13, 2704, 13, 50641], "temperature": 0.0, "avg_logprob": -0.16728576727673017, "compression_ratio": 1.5395189003436427, "no_speech_prob": 0.017826449126005173}, {"id": 35, "seek": 18764, "start": 193.17999999999998, "end": 200.17999999999998, "text": " I don't know. It's slower pace of life is good for people generally. Anyway, sorry. So here", "tokens": [50641, 286, 500, 380, 458, 13, 467, 311, 14009, 11638, 295, 993, 307, 665, 337, 561, 5101, 13, 5684, 11, 2597, 13, 407, 510, 50991], "temperature": 0.0, "avg_logprob": -0.16728576727673017, "compression_ratio": 1.5395189003436427, "no_speech_prob": 0.017826449126005173}, {"id": 36, "seek": 18764, "start": 200.17999999999998, "end": 204.88, "text": " we are. So actually, the very interesting thing is that when you start looking at some of", "tokens": [50991, 321, 366, 13, 407, 767, 11, 264, 588, 1880, 551, 307, 300, 562, 291, 722, 1237, 412, 512, 295, 51226], "temperature": 0.0, "avg_logprob": -0.16728576727673017, "compression_ratio": 1.5395189003436427, "no_speech_prob": 0.017826449126005173}, {"id": 37, "seek": 18764, "start": 204.88, "end": 208.88, "text": " these numbers, now on a log scale, so they're a bit more friendly, you know, the blinking", "tokens": [51226, 613, 3547, 11, 586, 322, 257, 3565, 4373, 11, 370, 436, 434, 257, 857, 544, 9208, 11, 291, 458, 11, 264, 45879, 51426], "temperature": 0.0, "avg_logprob": -0.16728576727673017, "compression_ratio": 1.5395189003436427, "no_speech_prob": 0.017826449126005173}, {"id": 38, "seek": 18764, "start": 208.88, "end": 212.76, "text": " is really quite slow. You can go from the Frankfurt to the US east coast and back again", "tokens": [51426, 307, 534, 1596, 2964, 13, 509, 393, 352, 490, 264, 36530, 281, 264, 2546, 10648, 8684, 293, 646, 797, 51620], "temperature": 0.0, "avg_logprob": -0.16728576727673017, "compression_ratio": 1.5395189003436427, "no_speech_prob": 0.017826449126005173}, {"id": 39, "seek": 21276, "start": 212.79999999999998, "end": 219.79999999999998, "text": " in the same time, right? So that's pretty good. You know, the 60 hertz frame time, 16,", "tokens": [50366, 294, 264, 912, 565, 11, 558, 30, 407, 300, 311, 1238, 665, 13, 509, 458, 11, 264, 4060, 45830, 3920, 565, 11, 3165, 11, 50716], "temperature": 0.0, "avg_logprob": -0.172736289284446, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.017659611999988556}, {"id": 40, "seek": 21276, "start": 220.67999999999998, "end": 225.95999999999998, "text": " you know, is also quite long. You can get Frankfurt Milan, Frankfurt London is a similar", "tokens": [50760, 291, 458, 11, 307, 611, 1596, 938, 13, 509, 393, 483, 36530, 32874, 11, 36530, 7042, 307, 257, 2531, 51024], "temperature": 0.0, "avg_logprob": -0.172736289284446, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.017659611999988556}, {"id": 41, "seek": 21276, "start": 225.95999999999998, "end": 229.51999999999998, "text": " time to the time it takes to get something on the screen, particularly when you add the", "tokens": [51024, 565, 281, 264, 565, 309, 2516, 281, 483, 746, 322, 264, 2568, 11, 4098, 562, 291, 909, 264, 51202], "temperature": 0.0, "avg_logprob": -0.172736289284446, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.017659611999988556}, {"id": 42, "seek": 21276, "start": 229.51999999999998, "end": 234.32, "text": " monitor latency. So you blink faster than you miss. Lots of people are very worried", "tokens": [51202, 6002, 27043, 13, 407, 291, 24667, 4663, 813, 291, 1713, 13, 15908, 295, 561, 366, 588, 5804, 51442], "temperature": 0.0, "avg_logprob": -0.172736289284446, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.017659611999988556}, {"id": 43, "seek": 21276, "start": 234.32, "end": 240.48, "text": " about latency, and they don't have a good feeling for how long things take. But it's", "tokens": [51442, 466, 27043, 11, 293, 436, 500, 380, 362, 257, 665, 2633, 337, 577, 938, 721, 747, 13, 583, 309, 311, 51750], "temperature": 0.0, "avg_logprob": -0.172736289284446, "compression_ratio": 1.630188679245283, "no_speech_prob": 0.017659611999988556}, {"id": 44, "seek": 24048, "start": 240.95999999999998, "end": 244.95999999999998, "text": " quite interesting to see some of these things. And also, in terms of typing, you know, like", "tokens": [50388, 1596, 1880, 281, 536, 512, 295, 613, 721, 13, 400, 611, 11, 294, 2115, 295, 18444, 11, 291, 458, 11, 411, 50588], "temperature": 0.0, "avg_logprob": -0.2518717173872323, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.05505051463842392}, {"id": 45, "seek": 24048, "start": 244.95999999999998, "end": 251.56, "text": " the average typist is supposed to be like three characters a second, pro 6.6. Yeah,", "tokens": [50588, 264, 4274, 2125, 468, 307, 3442, 281, 312, 411, 1045, 4342, 257, 1150, 11, 447, 1386, 13, 21, 13, 865, 11, 50918], "temperature": 0.0, "avg_logprob": -0.2518717173872323, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.05505051463842392}, {"id": 46, "seek": 24048, "start": 251.56, "end": 257.56, "text": " it's human eye blinkers quicker. But you know, even me typing, not very accurately, it's", "tokens": [50918, 309, 311, 1952, 3313, 24667, 433, 16255, 13, 583, 291, 458, 11, 754, 385, 18444, 11, 406, 588, 20095, 11, 309, 311, 51218], "temperature": 0.0, "avg_logprob": -0.2518717173872323, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.05505051463842392}, {"id": 47, "seek": 24048, "start": 257.56, "end": 261.8, "text": " like, yeah, quite, quite, and if you mash the keyboard, it turns out you're massively", "tokens": [51218, 411, 11, 1338, 11, 1596, 11, 1596, 11, 293, 498, 291, 31344, 264, 10186, 11, 309, 4523, 484, 291, 434, 29379, 51430], "temperature": 0.0, "avg_logprob": -0.2518717173872323, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.05505051463842392}, {"id": 48, "seek": 24048, "start": 261.8, "end": 266.59999999999997, "text": " faster, like you're 10 times faster than the average typist when you mash the keyboard.", "tokens": [51430, 4663, 11, 411, 291, 434, 1266, 1413, 4663, 813, 264, 4274, 2125, 468, 562, 291, 31344, 264, 10186, 13, 51670], "temperature": 0.0, "avg_logprob": -0.2518717173872323, "compression_ratio": 1.7804878048780488, "no_speech_prob": 0.05505051463842392}, {"id": 49, "seek": 26660, "start": 267.40000000000003, "end": 272.08000000000004, "text": " It's not, you know, it's not good for it. So yes, there we go. Anyway, I'm going to", "tokens": [50404, 467, 311, 406, 11, 291, 458, 11, 309, 311, 406, 665, 337, 309, 13, 407, 2086, 11, 456, 321, 352, 13, 5684, 11, 286, 478, 516, 281, 50638], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 50, "seek": 26660, "start": 272.08000000000004, "end": 274.68, "text": " hand over to Depp, Aquilon, unless you have anything to add?", "tokens": [50638, 1011, 670, 281, 1346, 427, 11, 8728, 388, 266, 11, 5969, 291, 362, 1340, 281, 909, 30, 50768], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 51, "seek": 26660, "start": 274.68, "end": 281.18, "text": " No, no, no, no, nothing to add on blinking. But yeah, the fundamental point that networking", "tokens": [50768, 883, 11, 572, 11, 572, 11, 572, 11, 1825, 281, 909, 322, 45879, 13, 583, 1338, 11, 264, 8088, 935, 300, 17985, 51093], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 52, "seek": 26660, "start": 281.18, "end": 284.64000000000004, "text": " is really, really fast and stuff comes from one end to the other and back in a very, very", "tokens": [51093, 307, 534, 11, 534, 2370, 293, 1507, 1487, 490, 472, 917, 281, 264, 661, 293, 646, 294, 257, 588, 11, 588, 51266], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 53, "seek": 26660, "start": 284.64000000000004, "end": 288.12, "text": " sharp period of time is great. So, you know, don't generally have to worry too much about", "tokens": [51266, 8199, 2896, 295, 565, 307, 869, 13, 407, 11, 291, 458, 11, 500, 380, 5101, 362, 281, 3292, 886, 709, 466, 51440], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 54, "seek": 26660, "start": 288.12, "end": 294.8, "text": " that part of things. Yeah, so what we do is that we have a bunch of demo servers that", "tokens": [51440, 300, 644, 295, 721, 13, 865, 11, 370, 437, 321, 360, 307, 300, 321, 362, 257, 3840, 295, 10723, 15909, 300, 51774], "temperature": 0.0, "avg_logprob": -0.24884395999508305, "compression_ratio": 1.7074829931972788, "no_speech_prob": 0.04842909425497055}, {"id": 55, "seek": 29480, "start": 294.84000000000003, "end": 301.16, "text": " are generally publicly accessible. And what I've started, we started in recently is to", "tokens": [50366, 366, 5101, 14843, 9515, 13, 400, 437, 286, 600, 1409, 11, 321, 1409, 294, 3938, 307, 281, 50682], "temperature": 0.0, "avg_logprob": -0.2734858432662821, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.018181588500738144}, {"id": 56, "seek": 29480, "start": 301.16, "end": 308.16, "text": " use perf to sample once a second and record for an entire week what happens on the public", "tokens": [50682, 764, 13826, 281, 6889, 1564, 257, 1150, 293, 2136, 337, 364, 2302, 1243, 437, 2314, 322, 264, 1908, 51032], "temperature": 0.0, "avg_logprob": -0.2734858432662821, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.018181588500738144}, {"id": 57, "seek": 29480, "start": 308.16, "end": 311.76, "text": " servers. And at the end of the week, then we generate a single flame graph from all of", "tokens": [51032, 15909, 13, 400, 412, 264, 917, 295, 264, 1243, 11, 550, 321, 8460, 257, 2167, 13287, 4295, 490, 439, 295, 51212], "temperature": 0.0, "avg_logprob": -0.2734858432662821, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.018181588500738144}, {"id": 58, "seek": 29480, "start": 311.76, "end": 318.76, "text": " that to see what, where, where, where our time is spent over the week generally. That's", "tokens": [51212, 300, 281, 536, 437, 11, 689, 11, 689, 11, 689, 527, 565, 307, 4418, 670, 264, 1243, 5101, 13, 663, 311, 51562], "temperature": 0.0, "avg_logprob": -0.2734858432662821, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.018181588500738144}, {"id": 59, "seek": 29480, "start": 319.04, "end": 324.2, "text": " the demo servers, multi user testing. We have this once a week called some of the people", "tokens": [51576, 264, 10723, 15909, 11, 4825, 4195, 4997, 13, 492, 362, 341, 1564, 257, 1243, 1219, 512, 295, 264, 561, 51834], "temperature": 0.0, "avg_logprob": -0.2734858432662821, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.018181588500738144}, {"id": 60, "seek": 32420, "start": 324.24, "end": 328.88, "text": " present in the room, join us from that from other people, organizations and, and community", "tokens": [50366, 1974, 294, 264, 1808, 11, 3917, 505, 490, 300, 490, 661, 561, 11, 6150, 293, 11, 293, 1768, 50598], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 61, "seek": 32420, "start": 328.88, "end": 333.15999999999997, "text": " members, members. And we just have a general feel as to what it feels like in that little", "tokens": [50598, 2679, 11, 2679, 13, 400, 321, 445, 362, 257, 2674, 841, 382, 281, 437, 309, 3417, 411, 294, 300, 707, 50812], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 62, "seek": 32420, "start": 333.15999999999997, "end": 340.15999999999997, "text": " 10, 20, 15 person call for the applications are still responsive or whatever issues arise", "tokens": [50812, 1266, 11, 945, 11, 2119, 954, 818, 337, 264, 5821, 366, 920, 21826, 420, 2035, 2663, 20288, 51162], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 63, "seek": 32420, "start": 340.28, "end": 345.32, "text": " in testing that can be checked at that point. And that is also profiled and flame graph", "tokens": [51168, 294, 4997, 300, 393, 312, 10033, 412, 300, 935, 13, 400, 300, 307, 611, 1740, 7292, 293, 13287, 4295, 51420], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 64, "seek": 32420, "start": 345.32, "end": 350.15999999999997, "text": " generated, typically one for writer and one for Calc in recent tests, which are all stuck", "tokens": [51420, 10833, 11, 5850, 472, 337, 9936, 293, 472, 337, 3511, 66, 294, 5162, 6921, 11, 597, 366, 439, 5541, 51662], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 65, "seek": 32420, "start": 350.15999999999997, "end": 353.36, "text": " up in GitHub that you can look at yourselves if you're interested to see the change in", "tokens": [51662, 493, 294, 23331, 300, 291, 393, 574, 412, 14791, 498, 291, 434, 3102, 281, 536, 264, 1319, 294, 51822], "temperature": 0.0, "avg_logprob": -0.24994692993164064, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.013123106211423874}, {"id": 66, "seek": 35336, "start": 353.36, "end": 357.72, "text": " time over what we're looking at. We use it internally in clapper, of course, with the", "tokens": [50364, 565, 670, 437, 321, 434, 1237, 412, 13, 492, 764, 309, 19501, 294, 596, 34456, 11, 295, 1164, 11, 365, 264, 50582], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 67, "seek": 35336, "start": 357.72, "end": 362.8, "text": " deployment that is used daily there and the same week long profile that I mentioned for", "tokens": [50582, 19317, 300, 307, 1143, 5212, 456, 293, 264, 912, 1243, 938, 7964, 300, 286, 2835, 337, 50836], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 68, "seek": 35336, "start": 362.8, "end": 369.8, "text": " the demo server is run on the internal one now as well. Yeah, so that's the tooling that", "tokens": [50836, 264, 10723, 7154, 307, 1190, 322, 264, 6920, 472, 586, 382, 731, 13, 865, 11, 370, 300, 311, 264, 46593, 300, 51186], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 69, "seek": 35336, "start": 369.96000000000004, "end": 373.44, "text": " we're looking at there. And then interactive debugging, which you have the clapper online,", "tokens": [51194, 321, 434, 1237, 412, 456, 13, 400, 550, 15141, 45592, 11, 597, 291, 362, 264, 596, 34456, 2950, 11, 51368], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 70, "seek": 35336, "start": 373.44, "end": 378.36, "text": " you can do yourself. You just go help about and you trip a click on the dialogue there.", "tokens": [51368, 291, 393, 360, 1803, 13, 509, 445, 352, 854, 466, 293, 291, 4931, 257, 2052, 322, 264, 10221, 456, 13, 51614], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 71, "seek": 35336, "start": 378.36, "end": 382.04, "text": " And that'll show you up this debugging display that we're looking at here. There's loads", "tokens": [51614, 400, 300, 603, 855, 291, 493, 341, 45592, 4674, 300, 321, 434, 1237, 412, 510, 13, 821, 311, 12668, 51798], "temperature": 0.0, "avg_logprob": -0.2880236405592698, "compression_ratio": 1.8150684931506849, "no_speech_prob": 0.012150883674621582}, {"id": 72, "seek": 38204, "start": 382.08000000000004, "end": 387.20000000000005, "text": " of information in it there. The far right inside the tick box as you check them on, certain", "tokens": [50366, 295, 1589, 294, 309, 456, 13, 440, 1400, 558, 1854, 264, 5204, 2424, 382, 291, 1520, 552, 322, 11, 1629, 50622], "temperature": 0.0, "avg_logprob": -0.2457185497990361, "compression_ratio": 1.6727941176470589, "no_speech_prob": 0.04337494447827339}, {"id": 73, "seek": 38204, "start": 387.20000000000005, "end": 391.32, "text": " ones will check on display in the bottom left corner to tell you things. But maybe more", "tokens": [50622, 2306, 486, 1520, 322, 4674, 294, 264, 2767, 1411, 4538, 281, 980, 291, 721, 13, 583, 1310, 544, 50828], "temperature": 0.0, "avg_logprob": -0.2457185497990361, "compression_ratio": 1.6727941176470589, "no_speech_prob": 0.04337494447827339}, {"id": 74, "seek": 38204, "start": 391.32, "end": 398.04, "text": " interestingly, the one that we're calling the tile overlays. When you type in the documents,", "tokens": [50828, 25873, 11, 264, 472, 300, 321, 434, 5141, 264, 20590, 15986, 3772, 13, 1133, 291, 2010, 294, 264, 8512, 11, 51164], "temperature": 0.0, "avg_logprob": -0.2457185497990361, "compression_ratio": 1.6727941176470589, "no_speech_prob": 0.04337494447827339}, {"id": 75, "seek": 38204, "start": 398.04, "end": 403.84000000000003, "text": " you'll get these flashing areas. And that's the part of the document that has been required", "tokens": [51164, 291, 603, 483, 613, 31049, 3179, 13, 400, 300, 311, 264, 644, 295, 264, 4166, 300, 575, 668, 4739, 51454], "temperature": 0.0, "avg_logprob": -0.2457185497990361, "compression_ratio": 1.6727941176470589, "no_speech_prob": 0.04337494447827339}, {"id": 76, "seek": 38204, "start": 403.84000000000003, "end": 408.40000000000003, "text": " to be redrawn because of your interaction. So what you're really hoping to see, especially", "tokens": [51454, 281, 312, 2182, 29603, 570, 295, 428, 9285, 13, 407, 437, 291, 434, 534, 7159, 281, 536, 11, 2318, 51682], "temperature": 0.0, "avg_logprob": -0.2457185497990361, "compression_ratio": 1.6727941176470589, "no_speech_prob": 0.04337494447827339}, {"id": 77, "seek": 40840, "start": 408.44, "end": 411.96, "text": " looking at these things is that people are typing and you're hoping to see a small rectangle", "tokens": [50366, 1237, 412, 613, 721, 307, 300, 561, 366, 18444, 293, 291, 434, 7159, 281, 536, 257, 1359, 21930, 50542], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 78, "seek": 40840, "start": 411.96, "end": 416.23999999999995, "text": " around the area of change that they're actually making. If the entire screen starts flashing,", "tokens": [50542, 926, 264, 1859, 295, 1319, 300, 436, 434, 767, 1455, 13, 759, 264, 2302, 2568, 3719, 31049, 11, 50756], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 79, "seek": 40840, "start": 416.23999999999995, "end": 419.91999999999996, "text": " it means that there's a whole reason other piles of things have been redrawn or been", "tokens": [50756, 309, 1355, 300, 456, 311, 257, 1379, 1778, 661, 34861, 295, 721, 362, 668, 2182, 29603, 420, 668, 50940], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 80, "seek": 40840, "start": 419.91999999999996, "end": 426.67999999999995, "text": " invalidated to be painted to be redrawn later on to avoid that. These are the kind of flame", "tokens": [50940, 34702, 770, 281, 312, 11797, 281, 312, 2182, 29603, 1780, 322, 281, 5042, 300, 13, 1981, 366, 264, 733, 295, 13287, 51278], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 81, "seek": 40840, "start": 426.67999999999995, "end": 431.4, "text": " graphs that we look at and the week and just for the purposes of looking at these things,", "tokens": [51278, 24877, 300, 321, 574, 412, 293, 264, 1243, 293, 445, 337, 264, 9932, 295, 1237, 412, 613, 721, 11, 51514], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 82, "seek": 40840, "start": 431.4, "end": 435.23999999999995, "text": " the colors don't matter in these flame graphs or most flame graphs. What matters is the", "tokens": [51514, 264, 4577, 500, 380, 1871, 294, 613, 13287, 24877, 420, 881, 13287, 24877, 13, 708, 7001, 307, 264, 51706], "temperature": 0.0, "avg_logprob": -0.16225743672204396, "compression_ratio": 1.8784722222222223, "no_speech_prob": 0.02473793923854828}, {"id": 83, "seek": 43524, "start": 435.28000000000003, "end": 439.72, "text": " width of the line, the width of the bar, the wider the bar, the more proportionally time has", "tokens": [50366, 11402, 295, 264, 1622, 11, 264, 11402, 295, 264, 2159, 11, 264, 11842, 264, 2159, 11, 264, 544, 16068, 379, 565, 575, 50588], "temperature": 0.0, "avg_logprob": -0.2415634002685547, "compression_ratio": 1.892, "no_speech_prob": 0.05364474281668663}, {"id": 84, "seek": 43524, "start": 439.72, "end": 442.76, "text": " been spent there. What you want to do is you want to take a quick look at it. You want to see", "tokens": [50588, 668, 4418, 456, 13, 708, 291, 528, 281, 360, 307, 291, 528, 281, 747, 257, 1702, 574, 412, 309, 13, 509, 528, 281, 536, 50740], "temperature": 0.0, "avg_logprob": -0.2415634002685547, "compression_ratio": 1.892, "no_speech_prob": 0.05364474281668663}, {"id": 85, "seek": 43524, "start": 442.76, "end": 446.40000000000003, "text": " which is the widest line and see can you make the wider lines narrower. I mean, it's nothing to", "tokens": [50740, 597, 307, 264, 5274, 377, 1622, 293, 536, 393, 291, 652, 264, 11842, 3876, 46751, 13, 286, 914, 11, 309, 311, 1825, 281, 50922], "temperature": 0.0, "avg_logprob": -0.2415634002685547, "compression_ratio": 1.892, "no_speech_prob": 0.05364474281668663}, {"id": 86, "seek": 43524, "start": 446.40000000000003, "end": 453.36, "text": " the profiling really. It's just make the wide ones narrow. Yeah, so this particular one is in", "tokens": [50922, 264, 1740, 4883, 534, 13, 467, 311, 445, 652, 264, 4874, 2306, 9432, 13, 865, 11, 370, 341, 1729, 472, 307, 294, 51270], "temperature": 0.0, "avg_logprob": -0.2415634002685547, "compression_ratio": 1.892, "no_speech_prob": 0.05364474281668663}, {"id": 87, "seek": 43524, "start": 453.36, "end": 460.24, "text": " the widest bar there. This whole gigantic pile of boost, spirit, classic, whatever, which is all", "tokens": [51270, 264, 5274, 377, 2159, 456, 13, 639, 1379, 26800, 14375, 295, 9194, 11, 3797, 11, 7230, 11, 2035, 11, 597, 307, 439, 51614], "temperature": 0.0, "avg_logprob": -0.2415634002685547, "compression_ratio": 1.892, "no_speech_prob": 0.05364474281668663}, {"id": 88, "seek": 46024, "start": 460.24, "end": 465.56, "text": " being used to detect if the PDF that people are opening up is a particular type of PDF, the", "tokens": [50364, 885, 1143, 281, 5531, 498, 264, 17752, 300, 561, 366, 5193, 493, 307, 257, 1729, 2010, 295, 17752, 11, 264, 50630], "temperature": 0.0, "avg_logprob": -0.14422783851623536, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.151138037443161}, {"id": 89, "seek": 46024, "start": 465.56, "end": 471.08, "text": " hybrid PDF that's using LibreOffice where you can embed the LibreOffice document inside the PDF.", "tokens": [50630, 13051, 17752, 300, 311, 1228, 15834, 265, 29745, 573, 689, 291, 393, 12240, 264, 15834, 265, 29745, 573, 4166, 1854, 264, 17752, 13, 50906], "temperature": 0.0, "avg_logprob": -0.14422783851623536, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.151138037443161}, {"id": 90, "seek": 46024, "start": 471.08, "end": 477.68, "text": " So when you open up PDF, you also have the original document. It just takes a ludicrous amount of", "tokens": [50906, 407, 562, 291, 1269, 493, 17752, 11, 291, 611, 362, 264, 3380, 4166, 13, 467, 445, 2516, 257, 15946, 299, 21189, 2372, 295, 51236], "temperature": 0.0, "avg_logprob": -0.14422783851623536, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.151138037443161}, {"id": 91, "seek": 46024, "start": 477.68, "end": 482.68, "text": " time, especially over the course of a week to collect up that information when it can be done in", "tokens": [51236, 565, 11, 2318, 670, 264, 1164, 295, 257, 1243, 281, 2500, 493, 300, 1589, 562, 309, 393, 312, 1096, 294, 51486], "temperature": 0.0, "avg_logprob": -0.14422783851623536, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.151138037443161}, {"id": 92, "seek": 46024, "start": 482.68, "end": 489.2, "text": " many orders of magnitude less. Yes. So it's good to see that sort of stuff and disappear off the", "tokens": [51486, 867, 9470, 295, 15668, 1570, 13, 1079, 13, 407, 309, 311, 665, 281, 536, 300, 1333, 295, 1507, 293, 11596, 766, 264, 51812], "temperature": 0.0, "avg_logprob": -0.14422783851623536, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.151138037443161}, {"id": 93, "seek": 48920, "start": 489.24, "end": 497.24, "text": " profile. You should never optimize before profiling, obviously. Cool. Thanks, Will. Storing previous", "tokens": [50366, 7964, 13, 509, 820, 1128, 19719, 949, 1740, 4883, 11, 2745, 13, 8561, 13, 2561, 11, 3099, 13, 745, 3662, 3894, 50766], "temperature": 0.0, "avg_logprob": -0.17708790037367078, "compression_ratio": 1.6567796610169492, "no_speech_prob": 0.015596150420606136}, {"id": 94, "seek": 48920, "start": 497.24, "end": 503.56, "text": " tiles. Yeah, so we've done a whole lot of work to improve our tile rendering performance. We store", "tokens": [50766, 21982, 13, 865, 11, 370, 321, 600, 1096, 257, 1379, 688, 295, 589, 281, 3470, 527, 20590, 22407, 3389, 13, 492, 3531, 51082], "temperature": 0.0, "avg_logprob": -0.17708790037367078, "compression_ratio": 1.6567796610169492, "no_speech_prob": 0.015596150420606136}, {"id": 95, "seek": 48920, "start": 503.56, "end": 507.03999999999996, "text": " previous tiles that have been rendered so we can see what the difference is and just send the", "tokens": [51082, 3894, 21982, 300, 362, 668, 28748, 370, 321, 393, 536, 437, 264, 2649, 307, 293, 445, 2845, 264, 51256], "temperature": 0.0, "avg_logprob": -0.17708790037367078, "compression_ratio": 1.6567796610169492, "no_speech_prob": 0.015596150420606136}, {"id": 96, "seek": 48920, "start": 507.03999999999996, "end": 512.8, "text": " difference. That saves a lot of bandwidth and reduces latency too. And we've completely rewritten", "tokens": [51256, 2649, 13, 663, 19155, 257, 688, 295, 23647, 293, 18081, 27043, 886, 13, 400, 321, 600, 2584, 319, 26859, 51544], "temperature": 0.0, "avg_logprob": -0.17708790037367078, "compression_ratio": 1.6567796610169492, "no_speech_prob": 0.015596150420606136}, {"id": 97, "seek": 51280, "start": 512.8399999999999, "end": 519.24, "text": " this. Well, how this is done in the last six months to a year. So we've already compressed it, so", "tokens": [50366, 341, 13, 1042, 11, 577, 341, 307, 1096, 294, 264, 1036, 2309, 2493, 281, 257, 1064, 13, 407, 321, 600, 1217, 30353, 309, 11, 370, 50686], "temperature": 0.0, "avg_logprob": -0.16199355238065946, "compression_ratio": 1.6258278145695364, "no_speech_prob": 0.2810211181640625}, {"id": 98, "seek": 51280, "start": 519.24, "end": 524.5999999999999, "text": " just a simple run length encoding. Because we're extremely modern, instead of doing stupid stuff", "tokens": [50686, 445, 257, 2199, 1190, 4641, 43430, 13, 1436, 321, 434, 4664, 4363, 11, 2602, 295, 884, 6631, 1507, 50954], "temperature": 0.0, "avg_logprob": -0.16199355238065946, "compression_ratio": 1.6258278145695364, "no_speech_prob": 0.2810211181640625}, {"id": 99, "seek": 51280, "start": 524.5999999999999, "end": 530.4, "text": " like using byte lengths and this kind of thing, we use bit masks. And you'll see why in a second.", "tokens": [50954, 411, 1228, 40846, 26329, 293, 341, 733, 295, 551, 11, 321, 764, 857, 11830, 13, 400, 291, 603, 536, 983, 294, 257, 1150, 13, 51244], "temperature": 0.0, "avg_logprob": -0.16199355238065946, "compression_ratio": 1.6258278145695364, "no_speech_prob": 0.2810211181640625}, {"id": 100, "seek": 51280, "start": 530.4, "end": 535.16, "text": " So the bit mask essentially says, is the pixel the same as the previous pixel? So you end up with a", "tokens": [51244, 407, 264, 857, 6094, 4476, 1619, 11, 307, 264, 19261, 264, 912, 382, 264, 3894, 19261, 30, 407, 291, 917, 493, 365, 257, 51482], "temperature": 0.0, "avg_logprob": -0.16199355238065946, "compression_ratio": 1.6258278145695364, "no_speech_prob": 0.2810211181640625}, {"id": 101, "seek": 51280, "start": 535.16, "end": 541.52, "text": " bit mask. We have 1056 square tiles. So in four 64 bit numbers, we can have the whole bit mask for", "tokens": [51482, 857, 6094, 13, 492, 362, 1266, 18317, 3732, 21982, 13, 407, 294, 1451, 12145, 857, 3547, 11, 321, 393, 362, 264, 1379, 857, 6094, 337, 51800], "temperature": 0.0, "avg_logprob": -0.16199355238065946, "compression_ratio": 1.6258278145695364, "no_speech_prob": 0.2810211181640625}, {"id": 102, "seek": 54152, "start": 541.84, "end": 548.1999999999999, "text": " the row. And yeah, it's pretty easy. This removes a whole load of things. Previously, we stored them", "tokens": [50380, 264, 5386, 13, 400, 1338, 11, 309, 311, 1238, 1858, 13, 639, 30445, 257, 1379, 3677, 295, 721, 13, 33606, 11, 321, 12187, 552, 50698], "temperature": 0.0, "avg_logprob": -0.15417901992797853, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.00844957958906889}, {"id": 103, "seek": 54152, "start": 548.1999999999999, "end": 552.84, "text": " uncompressed. We compared them uncompressed. Turns out to be massively slower. Touch is much more", "tokens": [50698, 8585, 79, 3805, 13, 492, 5347, 552, 8585, 79, 3805, 13, 29524, 484, 281, 312, 29379, 14009, 13, 20029, 307, 709, 544, 50930], "temperature": 0.0, "avg_logprob": -0.15417901992797853, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.00844957958906889}, {"id": 104, "seek": 54152, "start": 552.84, "end": 560.24, "text": " memory. It uses much more space. And we also did clever things to hash each row as we did that", "tokens": [50930, 4675, 13, 467, 4960, 709, 544, 1901, 13, 400, 321, 611, 630, 13494, 721, 281, 22019, 1184, 5386, 382, 321, 630, 300, 51300], "temperature": 0.0, "avg_logprob": -0.15417901992797853, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.00844957958906889}, {"id": 105, "seek": 54152, "start": 561.36, "end": 566.0799999999999, "text": " while we were copying. But it turns out this is far better just to use the bit mask and some of", "tokens": [51356, 1339, 321, 645, 27976, 13, 583, 309, 4523, 484, 341, 307, 1400, 1101, 445, 281, 764, 264, 857, 6094, 293, 512, 295, 51592], "temperature": 0.0, "avg_logprob": -0.15417901992797853, "compression_ratio": 1.634453781512605, "no_speech_prob": 0.00844957958906889}, {"id": 106, "seek": 56608, "start": 566.08, "end": 571.6, "text": " that stuff. And, Koel and I did this fun thing with AVX2. Why not? You hear about these processor", "tokens": [50364, 300, 1507, 13, 400, 11, 10509, 338, 293, 286, 630, 341, 1019, 551, 365, 30198, 55, 17, 13, 1545, 406, 30, 509, 1568, 466, 613, 15321, 50640], "temperature": 0.0, "avg_logprob": -0.17191675626314604, "compression_ratio": 1.6032786885245902, "no_speech_prob": 0.03206305578351021}, {"id": 107, "seek": 56608, "start": 571.6, "end": 577.24, "text": " accelerated things and after shrinking our inner loop down to almost nothing, it's still not as", "tokens": [50640, 29763, 721, 293, 934, 41684, 527, 7284, 6367, 760, 281, 1920, 1825, 11, 309, 311, 920, 406, 382, 50922], "temperature": 0.0, "avg_logprob": -0.17191675626314604, "compression_ratio": 1.6032786885245902, "no_speech_prob": 0.03206305578351021}, {"id": 108, "seek": 56608, "start": 577.24, "end": 582.5200000000001, "text": " quick as it could be on the CPU. So this is how we do it. We load a whole load, actually eight pixels,", "tokens": [50922, 1702, 382, 309, 727, 312, 322, 264, 13199, 13, 407, 341, 307, 577, 321, 360, 309, 13, 492, 3677, 257, 1379, 3677, 11, 767, 3180, 18668, 11, 51186], "temperature": 0.0, "avg_logprob": -0.17191675626314604, "compression_ratio": 1.6032786885245902, "no_speech_prob": 0.03206305578351021}, {"id": 109, "seek": 56608, "start": 582.5200000000001, "end": 588.76, "text": " into a whole single AVX register, which is just kind of nice, right? Eight pixels at a time. And", "tokens": [51186, 666, 257, 1379, 2167, 30198, 55, 7280, 11, 597, 307, 445, 733, 295, 1481, 11, 558, 30, 17708, 18668, 412, 257, 565, 13, 400, 51498], "temperature": 0.0, "avg_logprob": -0.17191675626314604, "compression_ratio": 1.6032786885245902, "no_speech_prob": 0.03206305578351021}, {"id": 110, "seek": 56608, "start": 588.76, "end": 592.6, "text": " the problem is we need to compare it with the previous thing. So we shift a bit off the end. We", "tokens": [51498, 264, 1154, 307, 321, 643, 281, 6794, 309, 365, 264, 3894, 551, 13, 407, 321, 5513, 257, 857, 766, 264, 917, 13, 492, 51690], "temperature": 0.0, "avg_logprob": -0.17191675626314604, "compression_ratio": 1.6032786885245902, "no_speech_prob": 0.03206305578351021}, {"id": 111, "seek": 59260, "start": 592.8000000000001, "end": 599.6800000000001, "text": " shove the previous one. We shift it along, although actually it's really a sort of, yeah, it's a", "tokens": [50374, 35648, 264, 3894, 472, 13, 492, 5513, 309, 2051, 11, 4878, 767, 309, 311, 534, 257, 1333, 295, 11, 1338, 11, 309, 311, 257, 50718], "temperature": 0.0, "avg_logprob": -0.24966500184246312, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.004579085391014814}, {"id": 112, "seek": 59260, "start": 599.6800000000001, "end": 605.12, "text": " crossbar switch here that you permute to move things. There is no shift in AVX registers that", "tokens": [50718, 3278, 5356, 3679, 510, 300, 291, 4784, 1169, 281, 1286, 721, 13, 821, 307, 572, 5513, 294, 30198, 55, 38351, 300, 50990], "temperature": 0.0, "avg_logprob": -0.24966500184246312, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.004579085391014814}, {"id": 113, "seek": 59260, "start": 605.12, "end": 610.52, "text": " does that. And then we just compare these guys. And that gives you a whole load of either whole", "tokens": [50990, 775, 300, 13, 400, 550, 321, 445, 6794, 613, 1074, 13, 400, 300, 2709, 291, 257, 1379, 3677, 295, 2139, 1379, 51260], "temperature": 0.0, "avg_logprob": -0.24966500184246312, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.004579085391014814}, {"id": 114, "seek": 59260, "start": 610.52, "end": 616.8000000000001, "text": " all ones are all zeroes. And then comes Koel on magic trick. Well, yeah, in AVX, there's the AVX2,", "tokens": [51260, 439, 2306, 366, 439, 4018, 279, 13, 400, 550, 1487, 10509, 338, 322, 5585, 4282, 13, 1042, 11, 1338, 11, 294, 30198, 55, 11, 456, 311, 264, 30198, 55, 17, 11, 51574], "temperature": 0.0, "avg_logprob": -0.24966500184246312, "compression_ratio": 1.6382978723404256, "no_speech_prob": 0.004579085391014814}, {"id": 115, "seek": 61680, "start": 616.9599999999999, "end": 622.64, "text": " which is like practically available. But AVX512, which is not practically available, has a particular", "tokens": [50372, 597, 307, 411, 15667, 2435, 13, 583, 30198, 55, 20, 4762, 11, 597, 307, 406, 15667, 2435, 11, 575, 257, 1729, 50656], "temperature": 0.0, "avg_logprob": -0.14375192610943904, "compression_ratio": 1.90625, "no_speech_prob": 0.07894985377788544}, {"id": 116, "seek": 61680, "start": 622.64, "end": 628.0, "text": " call that you can do that will compare the two things for you and give you that bit mask, which", "tokens": [50656, 818, 300, 291, 393, 360, 300, 486, 6794, 264, 732, 721, 337, 291, 293, 976, 291, 300, 857, 6094, 11, 597, 50924], "temperature": 0.0, "avg_logprob": -0.14375192610943904, "compression_ratio": 1.90625, "no_speech_prob": 0.07894985377788544}, {"id": 117, "seek": 61680, "start": 628.0, "end": 635.76, "text": " is not available in the AVX2. And if you look at what's available, though, you can guess if it was", "tokens": [50924, 307, 406, 2435, 294, 264, 30198, 55, 17, 13, 400, 498, 291, 574, 412, 437, 311, 2435, 11, 1673, 11, 291, 393, 2041, 498, 309, 390, 51312], "temperature": 0.0, "avg_logprob": -0.14375192610943904, "compression_ratio": 1.90625, "no_speech_prob": 0.07894985377788544}, {"id": 118, "seek": 61680, "start": 635.76, "end": 640.52, "text": " done in floats, then the number is basically available for you. So you cast it to floats, and", "tokens": [51312, 1096, 294, 37878, 11, 550, 264, 1230, 307, 1936, 2435, 337, 291, 13, 407, 291, 4193, 309, 281, 37878, 11, 293, 51550], "temperature": 0.0, "avg_logprob": -0.14375192610943904, "compression_ratio": 1.90625, "no_speech_prob": 0.07894985377788544}, {"id": 119, "seek": 61680, "start": 640.52, "end": 646.4, "text": " you do this move mask thing brings your top bits in and gives you what you were hoping for in the", "tokens": [51550, 291, 360, 341, 1286, 6094, 551, 5607, 428, 1192, 9239, 294, 293, 2709, 291, 437, 291, 645, 7159, 337, 294, 264, 51844], "temperature": 0.0, "avg_logprob": -0.14375192610943904, "compression_ratio": 1.90625, "no_speech_prob": 0.07894985377788544}, {"id": 120, "seek": 64640, "start": 646.4399999999999, "end": 651.16, "text": " first place, which is just an individual bit result for each individual pixel that you've", "tokens": [50366, 700, 1081, 11, 597, 307, 445, 364, 2609, 857, 1874, 337, 1184, 2609, 19261, 300, 291, 600, 50602], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 121, "seek": 64640, "start": 651.16, "end": 656.1999999999999, "text": " compared, whether they're true or not. And you can basically so compress, pull the bits you're", "tokens": [50602, 5347, 11, 1968, 436, 434, 2074, 420, 406, 13, 400, 291, 393, 1936, 370, 14778, 11, 2235, 264, 9239, 291, 434, 50854], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 122, "seek": 64640, "start": 656.1999999999999, "end": 661.1999999999999, "text": " looking for out in no time. It's great. Which is pretty awesome. So, you know, you convert this", "tokens": [50854, 1237, 337, 484, 294, 572, 565, 13, 467, 311, 869, 13, 3013, 307, 1238, 3476, 13, 407, 11, 291, 458, 11, 291, 7620, 341, 51104], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 123, "seek": 64640, "start": 661.1999999999999, "end": 665.0, "text": " into a floating point number, and you get the sign out of it. And that's your that's your", "tokens": [51104, 666, 257, 12607, 935, 1230, 11, 293, 291, 483, 264, 1465, 484, 295, 309, 13, 400, 300, 311, 428, 300, 311, 428, 51294], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 124, "seek": 64640, "start": 665.0, "end": 669.8, "text": " orally bit mask. So the nice thing about this is there's no branch, there's no compare. There's", "tokens": [51294, 420, 379, 857, 6094, 13, 407, 264, 1481, 551, 466, 341, 307, 456, 311, 572, 9819, 11, 456, 311, 572, 6794, 13, 821, 311, 51534], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 125, "seek": 64640, "start": 669.8, "end": 674.04, "text": " nothing. There's a simple flat loop with about five instructions. At the end of that, we then", "tokens": [51534, 1825, 13, 821, 311, 257, 2199, 4962, 6367, 365, 466, 1732, 9415, 13, 1711, 264, 917, 295, 300, 11, 321, 550, 51746], "temperature": 0.0, "avg_logprob": -0.16864433822098313, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.0021191174164414406}, {"id": 126, "seek": 67404, "start": 674.0799999999999, "end": 677.56, "text": " have to work out how many pixels to copy because it's all very well saying these the same, but", "tokens": [50366, 362, 281, 589, 484, 577, 867, 18668, 281, 5055, 570, 309, 311, 439, 588, 731, 1566, 613, 264, 912, 11, 457, 50540], "temperature": 0.0, "avg_logprob": -0.13620478107083228, "compression_ratio": 1.6552901023890785, "no_speech_prob": 0.019758515059947968}, {"id": 127, "seek": 67404, "start": 677.56, "end": 682.76, "text": " you need individual copies of those different pixels one after another. So a bit of a pop count", "tokens": [50540, 291, 643, 2609, 14341, 295, 729, 819, 18668, 472, 934, 1071, 13, 407, 257, 857, 295, 257, 1665, 1207, 50800], "temperature": 0.0, "avg_logprob": -0.13620478107083228, "compression_ratio": 1.6552901023890785, "no_speech_prob": 0.019758515059947968}, {"id": 128, "seek": 67404, "start": 682.76, "end": 689.64, "text": " will count the bits in the mask. And then with a clever lookup table, we can also use this. Yeah,", "tokens": [50800, 486, 1207, 264, 9239, 294, 264, 6094, 13, 400, 550, 365, 257, 13494, 574, 1010, 3199, 11, 321, 393, 611, 764, 341, 13, 865, 11, 51144], "temperature": 0.0, "avg_logprob": -0.13620478107083228, "compression_ratio": 1.6552901023890785, "no_speech_prob": 0.019758515059947968}, {"id": 129, "seek": 67404, "start": 689.64, "end": 694.24, "text": " this clever instruction shuffling instructions to shuffle the things in that we need to copy them", "tokens": [51144, 341, 13494, 10951, 402, 1245, 1688, 9415, 281, 39426, 264, 721, 294, 300, 321, 643, 281, 5055, 552, 51374], "temperature": 0.0, "avg_logprob": -0.13620478107083228, "compression_ratio": 1.6552901023890785, "no_speech_prob": 0.019758515059947968}, {"id": 130, "seek": 67404, "start": 694.24, "end": 701.7199999999999, "text": " out, stack them up. Bingo, twice as fast, which is nice. And hopefully AVX512, you know, will make", "tokens": [51374, 484, 11, 8630, 552, 493, 13, 363, 18459, 11, 6091, 382, 2370, 11, 597, 307, 1481, 13, 400, 4696, 30198, 55, 20, 4762, 11, 291, 458, 11, 486, 652, 51748], "temperature": 0.0, "avg_logprob": -0.13620478107083228, "compression_ratio": 1.6552901023890785, "no_speech_prob": 0.019758515059947968}, {"id": 131, "seek": 70172, "start": 701.76, "end": 707.6800000000001, "text": " it even even faster if you believe that you'll believe anything. So yes, here we go. So this is a", "tokens": [50366, 309, 754, 754, 4663, 498, 291, 1697, 300, 291, 603, 1697, 1340, 13, 407, 2086, 11, 510, 321, 352, 13, 407, 341, 307, 257, 50662], "temperature": 0.0, "avg_logprob": -0.2469250720480214, "compression_ratio": 1.736462093862816, "no_speech_prob": 0.03327912092208862}, {"id": 132, "seek": 70172, "start": 707.6800000000001, "end": 713.64, "text": " real problem here. And if only we can find the idiot responsible for you. We don't need to", "tokens": [50662, 957, 1154, 510, 13, 400, 498, 787, 321, 393, 915, 264, 14270, 6250, 337, 291, 13, 492, 500, 380, 643, 281, 50960], "temperature": 0.0, "avg_logprob": -0.2469250720480214, "compression_ratio": 1.736462093862816, "no_speech_prob": 0.03327912092208862}, {"id": 133, "seek": 70172, "start": 713.64, "end": 719.08, "text": " suggest. Yeah, no, what's sometimes interesting is that, while I said earlier narrow was better,", "tokens": [50960, 3402, 13, 865, 11, 572, 11, 437, 311, 2171, 1880, 307, 300, 11, 1339, 286, 848, 3071, 9432, 390, 1101, 11, 51232], "temperature": 0.0, "avg_logprob": -0.2469250720480214, "compression_ratio": 1.736462093862816, "no_speech_prob": 0.03327912092208862}, {"id": 134, "seek": 70172, "start": 719.08, "end": 726.44, "text": " sometimes it can be interesting to see that wider will be better in the sense that when you look at", "tokens": [51232, 2171, 309, 393, 312, 1880, 281, 536, 300, 11842, 486, 312, 1101, 294, 264, 2020, 300, 562, 291, 574, 412, 51600], "temperature": 0.0, "avg_logprob": -0.2469250720480214, "compression_ratio": 1.736462093862816, "no_speech_prob": 0.03327912092208862}, {"id": 135, "seek": 70172, "start": 726.44, "end": 730.9200000000001, "text": " the flame graph, what you should see is individual threads should all be positioned separately.", "tokens": [51600, 264, 13287, 4295, 11, 437, 291, 820, 536, 307, 2609, 19314, 820, 439, 312, 24889, 14759, 13, 51824], "temperature": 0.0, "avg_logprob": -0.2469250720480214, "compression_ratio": 1.736462093862816, "no_speech_prob": 0.03327912092208862}, {"id": 136, "seek": 73092, "start": 730.9599999999999, "end": 735.7199999999999, "text": " So they shouldn't be, you know, combined with the main thread. So if you're not seeing work that you", "tokens": [50366, 407, 436, 4659, 380, 312, 11, 291, 458, 11, 9354, 365, 264, 2135, 7207, 13, 407, 498, 291, 434, 406, 2577, 589, 300, 291, 50604], "temperature": 0.0, "avg_logprob": -0.1536694503412014, "compression_ratio": 1.8357664233576643, "no_speech_prob": 0.005102606024593115}, {"id": 137, "seek": 73092, "start": 735.7199999999999, "end": 740.8399999999999, "text": " expect to see happening in a thread on the left hand side, basically, of your flame graph, then it", "tokens": [50604, 2066, 281, 536, 2737, 294, 257, 7207, 322, 264, 1411, 1011, 1252, 11, 1936, 11, 295, 428, 13287, 4295, 11, 550, 309, 50860], "temperature": 0.0, "avg_logprob": -0.1536694503412014, "compression_ratio": 1.8357664233576643, "no_speech_prob": 0.005102606024593115}, {"id": 138, "seek": 73092, "start": 740.8399999999999, "end": 744.92, "text": " means the threading isn't being used. So it becomes apparent that while there's this code that attempts", "tokens": [50860, 1355, 264, 7207, 278, 1943, 380, 885, 1143, 13, 407, 309, 3643, 18335, 300, 1339, 456, 311, 341, 3089, 300, 15257, 51064], "temperature": 0.0, "avg_logprob": -0.1536694503412014, "compression_ratio": 1.8357664233576643, "no_speech_prob": 0.005102606024593115}, {"id": 139, "seek": 73092, "start": 744.92, "end": 751.1999999999999, "text": " to do this threading for doing this previous delta stuff, there is no existence of the threads and", "tokens": [51064, 281, 360, 341, 7207, 278, 337, 884, 341, 3894, 8289, 1507, 11, 456, 307, 572, 9123, 295, 264, 19314, 293, 51378], "temperature": 0.0, "avg_logprob": -0.1536694503412014, "compression_ratio": 1.8357664233576643, "no_speech_prob": 0.005102606024593115}, {"id": 140, "seek": 73092, "start": 751.1999999999999, "end": 756.56, "text": " there's a flaw that needs to be sorted. So when you fix the flaw for the threading and bring it back", "tokens": [51378, 456, 311, 257, 13717, 300, 2203, 281, 312, 25462, 13, 407, 562, 291, 3191, 264, 13717, 337, 264, 7207, 278, 293, 1565, 309, 646, 51646], "temperature": 0.0, "avg_logprob": -0.1536694503412014, "compression_ratio": 1.8357664233576643, "no_speech_prob": 0.005102606024593115}, {"id": 141, "seek": 75656, "start": 756.5999999999999, "end": 762.28, "text": " in, you see then on the far left hand side, because it's rooted in the threading area, all that work", "tokens": [50366, 294, 11, 291, 536, 550, 322, 264, 1400, 1411, 1011, 1252, 11, 570, 309, 311, 25277, 294, 264, 7207, 278, 1859, 11, 439, 300, 589, 50650], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 142, "seek": 75656, "start": 762.28, "end": 766.9599999999999, "text": " is put on the left hand side separately in the flame graph. And while it's wider, it now means", "tokens": [50650, 307, 829, 322, 264, 1411, 1011, 1252, 14759, 294, 264, 13287, 4295, 13, 400, 1339, 309, 311, 11842, 11, 309, 586, 1355, 50884], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 143, "seek": 75656, "start": 766.9599999999999, "end": 772.2399999999999, "text": " it's operating in a separate thread and you've made progress. So it's nice to get twice as fast and", "tokens": [50884, 309, 311, 7447, 294, 257, 4994, 7207, 293, 291, 600, 1027, 4205, 13, 407, 309, 311, 1481, 281, 483, 6091, 382, 2370, 293, 51148], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 144, "seek": 75656, "start": 772.2399999999999, "end": 776.52, "text": " then four times as fast on top of it. That's the right sort of approach. Yeah, I think we're going", "tokens": [51148, 550, 1451, 1413, 382, 2370, 322, 1192, 295, 309, 13, 663, 311, 264, 558, 1333, 295, 3109, 13, 865, 11, 286, 519, 321, 434, 516, 51362], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 145, "seek": 75656, "start": 776.52, "end": 781.56, "text": " to skip through some of these because we're running out of time. But working out where to do the work,", "tokens": [51362, 281, 10023, 807, 512, 295, 613, 570, 321, 434, 2614, 484, 295, 565, 13, 583, 1364, 484, 689, 281, 360, 264, 589, 11, 51614], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 146, "seek": 75656, "start": 781.56, "end": 785.7199999999999, "text": " either in the browser or not, and I'm pretty multiplying and the stupidity of the web and", "tokens": [51614, 2139, 294, 264, 11185, 420, 406, 11, 293, 286, 478, 1238, 30955, 293, 264, 6631, 507, 295, 264, 3670, 293, 51822], "temperature": 0.0, "avg_logprob": -0.14759835443998637, "compression_ratio": 1.8061538461538462, "no_speech_prob": 0.03346600756049156}, {"id": 147, "seek": 78572, "start": 785.76, "end": 793.0, "text": " having an RGB, un-premultiplied alpha API. When it's almost certainly going to be premultiplied", "tokens": [50366, 1419, 364, 31231, 11, 517, 12, 29403, 723, 34442, 1091, 8961, 9362, 13, 1133, 309, 311, 1920, 3297, 516, 281, 312, 5624, 723, 34442, 1091, 50728], "temperature": 0.0, "avg_logprob": -0.21655362447102863, "compression_ratio": 1.7259259259259259, "no_speech_prob": 0.023068338632583618}, {"id": 148, "seek": 78572, "start": 793.0, "end": 795.8000000000001, "text": " underneath its hood. Yeah, underneath the hood, all the hardware, everything is doing", "tokens": [50728, 7223, 1080, 13376, 13, 865, 11, 7223, 264, 13376, 11, 439, 264, 8837, 11, 1203, 307, 884, 50868], "temperature": 0.0, "avg_logprob": -0.21655362447102863, "compression_ratio": 1.7259259259259259, "no_speech_prob": 0.023068338632583618}, {"id": 149, "seek": 78572, "start": 795.8000000000001, "end": 799.28, "text": " premultiplying because it's so much quicker. You can see the complaints online about people", "tokens": [50868, 5624, 723, 647, 7310, 570, 309, 311, 370, 709, 16255, 13, 509, 393, 536, 264, 19585, 2950, 466, 561, 51042], "temperature": 0.0, "avg_logprob": -0.21655362447102863, "compression_ratio": 1.7259259259259259, "no_speech_prob": 0.023068338632583618}, {"id": 150, "seek": 78572, "start": 799.28, "end": 803.36, "text": " pushing RGBA into the canvas and getting something out that isn't the same because it's been", "tokens": [51042, 7380, 31231, 32, 666, 264, 16267, 293, 1242, 746, 484, 300, 1943, 380, 264, 912, 570, 309, 311, 668, 51246], "temperature": 0.0, "avg_logprob": -0.21655362447102863, "compression_ratio": 1.7259259259259259, "no_speech_prob": 0.023068338632583618}, {"id": 151, "seek": 78572, "start": 803.36, "end": 810.8000000000001, "text": " premultiplied and then un-premultiplied. Anyway, there you go. The web APIs are awesome. What else?", "tokens": [51246, 5624, 723, 34442, 1091, 293, 550, 517, 12, 29403, 723, 34442, 1091, 13, 5684, 11, 456, 291, 352, 13, 440, 3670, 21445, 366, 3476, 13, 708, 1646, 30, 51618], "temperature": 0.0, "avg_logprob": -0.21655362447102863, "compression_ratio": 1.7259259259259259, "no_speech_prob": 0.023068338632583618}, {"id": 152, "seek": 81080, "start": 811.76, "end": 817.76, "text": " What should be on your profile? Well, it's very hard to know. This could be okay. Here's a whole", "tokens": [50412, 708, 820, 312, 322, 428, 7964, 30, 1042, 11, 309, 311, 588, 1152, 281, 458, 13, 639, 727, 312, 1392, 13, 1692, 311, 257, 1379, 50712], "temperature": 0.0, "avg_logprob": -0.2300369632777883, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.04189812019467354}, {"id": 153, "seek": 81080, "start": 817.76, "end": 822.9599999999999, "text": " lot of un-premultiplication here. It's a very old profile. It's a time, but hey, there's a lot of", "tokens": [50712, 688, 295, 517, 12, 29403, 723, 647, 1050, 399, 510, 13, 467, 311, 257, 588, 1331, 7964, 13, 467, 311, 257, 565, 11, 457, 4177, 11, 456, 311, 257, 688, 295, 50972], "temperature": 0.0, "avg_logprob": -0.2300369632777883, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.04189812019467354}, {"id": 154, "seek": 81080, "start": 822.9599999999999, "end": 827.68, "text": " rendering on the profile. Not very much painting, lots of delta ring, so we fixed that. But actually,", "tokens": [50972, 22407, 322, 264, 7964, 13, 1726, 588, 709, 5370, 11, 3195, 295, 8289, 4875, 11, 370, 321, 6806, 300, 13, 583, 767, 11, 51208], "temperature": 0.0, "avg_logprob": -0.2300369632777883, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.04189812019467354}, {"id": 155, "seek": 81080, "start": 827.68, "end": 831.56, "text": " it's very hard to know if this is good or bad looking at that. Actually, with lots of bogus", "tokens": [51208, 309, 311, 588, 1152, 281, 458, 498, 341, 307, 665, 420, 1578, 1237, 412, 300, 13, 5135, 11, 365, 3195, 295, 26132, 301, 51402], "temperature": 0.0, "avg_logprob": -0.2300369632777883, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.04189812019467354}, {"id": 156, "seek": 81080, "start": 831.56, "end": 836.88, "text": " invalidations, you start to see lots of rendering and that's not what you want. So everything", "tokens": [51402, 34702, 763, 11, 291, 722, 281, 536, 3195, 295, 22407, 293, 300, 311, 406, 437, 291, 528, 13, 407, 1203, 51668], "temperature": 0.0, "avg_logprob": -0.2300369632777883, "compression_ratio": 1.7655677655677655, "no_speech_prob": 0.04189812019467354}, {"id": 157, "seek": 83688, "start": 836.92, "end": 841.36, "text": " should shrink and you'll end up with a profile that looks the same, but everything feels much", "tokens": [50366, 820, 23060, 293, 291, 603, 917, 493, 365, 257, 7964, 300, 1542, 264, 912, 11, 457, 1203, 3417, 709, 50588], "temperature": 0.0, "avg_logprob": -0.22155316108095963, "compression_ratio": 1.6254295532646048, "no_speech_prob": 0.024935074150562286}, {"id": 158, "seek": 83688, "start": 841.36, "end": 845.6, "text": " quicker. So we've done lots of work to shrink, I guess. Mr. Enders, do you want to pick a couple", "tokens": [50588, 16255, 13, 407, 321, 600, 1096, 3195, 295, 589, 281, 23060, 11, 286, 2041, 13, 2221, 13, 6967, 433, 11, 360, 291, 528, 281, 1888, 257, 1916, 50800], "temperature": 0.0, "avg_logprob": -0.22155316108095963, "compression_ratio": 1.6254295532646048, "no_speech_prob": 0.024935074150562286}, {"id": 159, "seek": 83688, "start": 845.6, "end": 851.96, "text": " of these now? Yeah, just as you mentioned, with multiple user document tests, we have kind of", "tokens": [50800, 295, 613, 586, 30, 865, 11, 445, 382, 291, 2835, 11, 365, 3866, 4195, 4166, 6921, 11, 321, 362, 733, 295, 51118], "temperature": 0.0, "avg_logprob": -0.22155316108095963, "compression_ratio": 1.6254295532646048, "no_speech_prob": 0.024935074150562286}, {"id": 160, "seek": 83688, "start": 851.96, "end": 856.24, "text": " basically monitor what's happening. People are joining documents. We got that full document", "tokens": [51118, 1936, 6002, 437, 311, 2737, 13, 3432, 366, 5549, 8512, 13, 492, 658, 300, 1577, 4166, 51332], "temperature": 0.0, "avg_logprob": -0.22155316108095963, "compression_ratio": 1.6254295532646048, "no_speech_prob": 0.024935074150562286}, {"id": 161, "seek": 83688, "start": 856.24, "end": 862.36, "text": " invalidation we mentioned about happening. Clicking in headers and footers were causing the same", "tokens": [51332, 34702, 399, 321, 2835, 466, 2737, 13, 8230, 278, 294, 45101, 293, 2671, 433, 645, 9853, 264, 912, 51638], "temperature": 0.0, "avg_logprob": -0.22155316108095963, "compression_ratio": 1.6254295532646048, "no_speech_prob": 0.024935074150562286}, {"id": 162, "seek": 86236, "start": 862.36, "end": 866.64, "text": " things. I think fundamentally, because the invalidations and redrawing on the desktop has", "tokens": [50364, 721, 13, 286, 519, 17879, 11, 570, 264, 34702, 763, 293, 2182, 5131, 278, 322, 264, 14502, 575, 50578], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 163, "seek": 86236, "start": 866.64, "end": 871.24, "text": " become so cheap, while in the past, the very distant past, we might have been pretty good at", "tokens": [50578, 1813, 370, 7084, 11, 1339, 294, 264, 1791, 11, 264, 588, 17275, 1791, 11, 321, 1062, 362, 668, 1238, 665, 412, 50808], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 164, "seek": 86236, "start": 871.24, "end": 877.0, "text": " keeping validations down. In that case, we've become slack in recent decades and now we've", "tokens": [50808, 5145, 7363, 763, 760, 13, 682, 300, 1389, 11, 321, 600, 1813, 29767, 294, 5162, 7878, 293, 586, 321, 600, 51096], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 165, "seek": 86236, "start": 877.0, "end": 881.0, "text": " treated it as cheap and that has affected things. So let's kind of have a look at that again and", "tokens": [51096, 8668, 309, 382, 7084, 293, 300, 575, 8028, 721, 13, 407, 718, 311, 733, 295, 362, 257, 574, 412, 300, 797, 293, 51296], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 166, "seek": 86236, "start": 881.0, "end": 886.36, "text": " bring things down to smaller rendering areas and less invalidations. Yeah, and the good news is", "tokens": [51296, 1565, 721, 760, 281, 4356, 22407, 3179, 293, 1570, 34702, 763, 13, 865, 11, 293, 264, 665, 2583, 307, 51564], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 167, "seek": 86236, "start": 886.36, "end": 891.2, "text": " that improves LibreOffice, of course, as well. It's more efficient and clean on your PC as well", "tokens": [51564, 300, 24771, 15834, 265, 29745, 573, 11, 295, 1164, 11, 382, 731, 13, 467, 311, 544, 7148, 293, 2541, 322, 428, 6465, 382, 731, 51806], "temperature": 0.0, "avg_logprob": -0.1665556119835895, "compression_ratio": 1.772870662460568, "no_speech_prob": 0.06146642193198204}, {"id": 168, "seek": 89120, "start": 891.24, "end": 896.36, "text": " underneath. So good. We've done lots better latency hiding in terms of more aggressive", "tokens": [50366, 7223, 13, 407, 665, 13, 492, 600, 1096, 3195, 1101, 27043, 10596, 294, 2115, 295, 544, 10762, 50622], "temperature": 0.0, "avg_logprob": -0.1945499318890867, "compression_ratio": 1.68, "no_speech_prob": 0.00798303633928299}, {"id": 169, "seek": 89120, "start": 896.36, "end": 901.12, "text": " prefetching. So the next slide is there before you switch to it. So it's absolutely instant.", "tokens": [50622, 18417, 7858, 278, 13, 407, 264, 958, 4137, 307, 456, 949, 291, 3679, 281, 309, 13, 407, 309, 311, 3122, 9836, 13, 50860], "temperature": 0.0, "avg_logprob": -0.1945499318890867, "compression_ratio": 1.68, "no_speech_prob": 0.00798303633928299}, {"id": 170, "seek": 89120, "start": 901.12, "end": 905.84, "text": " Hiding latency in those ways is quite fun, enlarging the area around the view and maintaining", "tokens": [50860, 389, 2819, 27043, 294, 729, 2098, 307, 1596, 1019, 11, 31976, 3249, 264, 1859, 926, 264, 1910, 293, 14916, 51096], "temperature": 0.0, "avg_logprob": -0.1945499318890867, "compression_ratio": 1.68, "no_speech_prob": 0.00798303633928299}, {"id": 171, "seek": 89120, "start": 905.84, "end": 910.76, "text": " that as tiles and just storing and managing much more compressed tile data in the clients that", "tokens": [51096, 300, 382, 21982, 293, 445, 26085, 293, 11642, 709, 544, 30353, 20590, 1412, 294, 264, 6982, 300, 51342], "temperature": 0.0, "avg_logprob": -0.1945499318890867, "compression_ratio": 1.68, "no_speech_prob": 0.00798303633928299}, {"id": 172, "seek": 89120, "start": 910.76, "end": 917.24, "text": " we manage much better now. This is a fun one. But we don't have much time for it. Yeah, well,", "tokens": [51342, 321, 3067, 709, 1101, 586, 13, 639, 307, 257, 1019, 472, 13, 583, 321, 500, 380, 362, 709, 565, 337, 309, 13, 865, 11, 731, 11, 51666], "temperature": 0.0, "avg_logprob": -0.1945499318890867, "compression_ratio": 1.68, "no_speech_prob": 0.00798303633928299}, {"id": 173, "seek": 91724, "start": 917.28, "end": 922.36, "text": " God, classically, standard list and C++ was always a standard list. And if you wanted to get", "tokens": [50366, 1265, 11, 1508, 984, 11, 3832, 1329, 293, 383, 25472, 390, 1009, 257, 3832, 1329, 13, 400, 498, 291, 1415, 281, 483, 50620], "temperature": 0.0, "avg_logprob": -0.2155794195226721, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.001163939479738474}, {"id": 174, "seek": 91724, "start": 922.36, "end": 927.04, "text": " the size of it, you had to like pass the entire list from start to finish. That was sorted out", "tokens": [50620, 264, 2744, 295, 309, 11, 291, 632, 281, 411, 1320, 264, 2302, 1329, 490, 722, 281, 2413, 13, 663, 390, 25462, 484, 50854], "temperature": 0.0, "avg_logprob": -0.2155794195226721, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.001163939479738474}, {"id": 175, "seek": 91724, "start": 927.04, "end": 932.32, "text": " decades ago. But for whatever reason, for compatibility purposes, if you use the particular", "tokens": [50854, 7878, 2057, 13, 583, 337, 2035, 1778, 11, 337, 34237, 9932, 11, 498, 291, 764, 264, 1729, 51118], "temperature": 0.0, "avg_logprob": -0.2155794195226721, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.001163939479738474}, {"id": 176, "seek": 91724, "start": 932.32, "end": 936.96, "text": " Red Hat developer tool chain, then you seem to get the classic behavior or standard list back", "tokens": [51118, 4477, 15867, 10754, 2290, 5021, 11, 550, 291, 1643, 281, 483, 264, 7230, 5223, 420, 3832, 1329, 646, 51350], "temperature": 0.0, "avg_logprob": -0.2155794195226721, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.001163939479738474}, {"id": 177, "seek": 91724, "start": 936.96, "end": 943.12, "text": " again. So when we were assuming that you was cheap and cheerful to get the length of a standard", "tokens": [51350, 797, 13, 407, 562, 321, 645, 11926, 300, 291, 390, 7084, 293, 36942, 281, 483, 264, 4641, 295, 257, 3832, 51658], "temperature": 0.0, "avg_logprob": -0.2155794195226721, "compression_ratio": 1.7116788321167884, "no_speech_prob": 0.001163939479738474}, {"id": 178, "seek": 94312, "start": 943.16, "end": 947.92, "text": " list, it turns out to be not the case with this particular case. So you have to go back to a", "tokens": [50366, 1329, 11, 309, 4523, 484, 281, 312, 406, 264, 1389, 365, 341, 1729, 1389, 13, 407, 291, 362, 281, 352, 646, 281, 257, 50604], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 179, "seek": 94312, "start": 947.92, "end": 952.16, "text": " different approach and it appears in your profile like that. But again, it looks normal that it", "tokens": [50604, 819, 3109, 293, 309, 7038, 294, 428, 7964, 411, 300, 13, 583, 797, 11, 309, 1542, 2710, 300, 309, 50816], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 180, "seek": 94312, "start": 952.16, "end": 956.6, "text": " should take some time to draw things. And it's normal to have a cache to speed that up. But if", "tokens": [50816, 820, 747, 512, 565, 281, 2642, 721, 13, 400, 309, 311, 2710, 281, 362, 257, 19459, 281, 3073, 300, 493, 13, 583, 498, 51038], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 181, "seek": 94312, "start": 956.6, "end": 961.8, "text": " the cache has got 20,000 items in it, and you're just walking this list, you know, point it,", "tokens": [51038, 264, 19459, 575, 658, 945, 11, 1360, 4754, 294, 309, 11, 293, 291, 434, 445, 4494, 341, 1329, 11, 291, 458, 11, 935, 309, 11, 51298], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 182, "seek": 94312, "start": 961.8, "end": 968.08, "text": " chasing anyway. So gone. Oh, fun stuff. Like why not have a massive virtual device in the", "tokens": [51298, 17876, 4033, 13, 407, 2780, 13, 876, 11, 1019, 1507, 13, 1743, 983, 406, 362, 257, 5994, 6374, 4302, 294, 264, 51612], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 183, "seek": 94312, "start": 968.08, "end": 972.16, "text": " background that you could render to instead of the whole document every time you do something? Not", "tokens": [51612, 3678, 300, 291, 727, 15529, 281, 2602, 295, 264, 1379, 4166, 633, 565, 291, 360, 746, 30, 1726, 51816], "temperature": 0.0, "avg_logprob": -0.17662869966947115, "compression_ratio": 1.6966966966966968, "no_speech_prob": 0.02526012621819973}, {"id": 184, "seek": 97216, "start": 972.1999999999999, "end": 976.9599999999999, "text": " great. Or another one, why not have a benchmark every time you start the document to see how fast", "tokens": [50366, 869, 13, 1610, 1071, 472, 11, 983, 406, 362, 257, 18927, 633, 565, 291, 722, 264, 4166, 281, 536, 577, 2370, 50604], "temperature": 0.0, "avg_logprob": -0.21496594853761816, "compression_ratio": 1.658703071672355, "no_speech_prob": 0.010013646446168423}, {"id": 185, "seek": 97216, "start": 976.9599999999999, "end": 982.0799999999999, "text": " rendering is, allocate a whole load of memory and dirty it, you know? Great. Yeah, trying to cache", "tokens": [50604, 22407, 307, 11, 35713, 257, 1379, 3677, 295, 4675, 293, 9360, 309, 11, 291, 458, 30, 3769, 13, 865, 11, 1382, 281, 19459, 50860], "temperature": 0.0, "avg_logprob": -0.21496594853761816, "compression_ratio": 1.658703071672355, "no_speech_prob": 0.010013646446168423}, {"id": 186, "seek": 97216, "start": 982.0799999999999, "end": 986.16, "text": " images. So we didn't bother catching compressed images because they're compressed, right? So why", "tokens": [50860, 5267, 13, 407, 321, 994, 380, 8677, 16124, 30353, 5267, 570, 436, 434, 30353, 11, 558, 30, 407, 983, 51064], "temperature": 0.0, "avg_logprob": -0.21496594853761816, "compression_ratio": 1.658703071672355, "no_speech_prob": 0.010013646446168423}, {"id": 187, "seek": 97216, "start": 986.16, "end": 990.28, "text": " bother? They're small. They're good to have memory, except TIFFs not so much compressed, you know,", "tokens": [51064, 8677, 30, 814, 434, 1359, 13, 814, 434, 665, 281, 362, 4675, 11, 3993, 28819, 6345, 82, 406, 370, 709, 30353, 11, 291, 458, 11, 51270], "temperature": 0.0, "avg_logprob": -0.21496594853761816, "compression_ratio": 1.658703071672355, "no_speech_prob": 0.010013646446168423}, {"id": 188, "seek": 97216, "start": 990.28, "end": 997.0799999999999, "text": " you eventually have the whole massive chunk of memory there. Using G-Lib C trimming functions", "tokens": [51270, 291, 4728, 362, 264, 1379, 5994, 16635, 295, 4675, 456, 13, 11142, 460, 12, 43, 897, 383, 47212, 6828, 51610], "temperature": 0.0, "avg_logprob": -0.21496594853761816, "compression_ratio": 1.658703071672355, "no_speech_prob": 0.010013646446168423}, {"id": 189, "seek": 99708, "start": 997.24, "end": 1005.44, "text": " on idle to reduce memory usage. Yeah, trying to get better measurements of various things. Yeah,", "tokens": [50372, 322, 30650, 281, 5407, 4675, 14924, 13, 865, 11, 1382, 281, 483, 1101, 15383, 295, 3683, 721, 13, 865, 11, 50782], "temperature": 0.0, "avg_logprob": -0.21967616649942662, "compression_ratio": 1.6652360515021458, "no_speech_prob": 0.015945810824632645}, {"id": 190, "seek": 99708, "start": 1005.44, "end": 1011.76, "text": " this is a fun one. Well, oh, this is the S-Maps word. Yes, yes, yes, we're reading the proc S-Maps", "tokens": [50782, 341, 307, 257, 1019, 472, 13, 1042, 11, 1954, 11, 341, 307, 264, 318, 12, 44, 2382, 1349, 13, 1079, 11, 2086, 11, 2086, 11, 321, 434, 3760, 264, 9510, 318, 12, 44, 2382, 51098], "temperature": 0.0, "avg_logprob": -0.21967616649942662, "compression_ratio": 1.6652360515021458, "no_speech_prob": 0.015945810824632645}, {"id": 191, "seek": 99708, "start": 1011.76, "end": 1017.36, "text": " to see how much memory we're using. And the classic S-Maps has got multiple entries in it for many,", "tokens": [51098, 281, 536, 577, 709, 4675, 321, 434, 1228, 13, 400, 264, 7230, 318, 12, 44, 2382, 575, 658, 3866, 23041, 294, 309, 337, 867, 11, 51378], "temperature": 0.0, "avg_logprob": -0.21967616649942662, "compression_ratio": 1.6652360515021458, "no_speech_prob": 0.015945810824632645}, {"id": 192, "seek": 99708, "start": 1017.36, "end": 1024.6000000000001, "text": " many parts of your process. So you just read multiple lines. So there's a relatively new one", "tokens": [51378, 867, 3166, 295, 428, 1399, 13, 407, 291, 445, 1401, 3866, 3876, 13, 407, 456, 311, 257, 7226, 777, 472, 51740], "temperature": 0.0, "avg_logprob": -0.21967616649942662, "compression_ratio": 1.6652360515021458, "no_speech_prob": 0.015945810824632645}, {"id": 193, "seek": 102460, "start": 1024.6399999999999, "end": 1030.6799999999998, "text": " that has it all pre-edited for you. ProxMaps roll up, which is exactly what we want. Same code to", "tokens": [50366, 300, 575, 309, 439, 659, 12, 292, 1226, 337, 291, 13, 1705, 87, 44, 2382, 3373, 493, 11, 597, 307, 2293, 437, 321, 528, 13, 10635, 3089, 281, 50668], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 194, "seek": 102460, "start": 1030.6799999999998, "end": 1035.1599999999999, "text": " read the previous one should work with the new one. Then apparently we're running out of memory,", "tokens": [50668, 1401, 264, 3894, 472, 820, 589, 365, 264, 777, 472, 13, 1396, 7970, 321, 434, 2614, 484, 295, 4675, 11, 50892], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 195, "seek": 102460, "start": 1035.1599999999999, "end": 1038.7199999999998, "text": " or it's being reported that we're running out of memory, and it's all very, very bizarre. You", "tokens": [50892, 420, 309, 311, 885, 7055, 300, 321, 434, 2614, 484, 295, 4675, 11, 293, 309, 311, 439, 588, 11, 588, 18265, 13, 509, 51070], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 196, "seek": 102460, "start": 1038.7199999999998, "end": 1043.4399999999998, "text": " can't proc S-Maps roll up yourself. The numbers are good. There's something very odd, but it turns", "tokens": [51070, 393, 380, 9510, 318, 12, 44, 2382, 3373, 493, 1803, 13, 440, 3547, 366, 665, 13, 821, 311, 746, 588, 7401, 11, 457, 309, 4523, 51306], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 197, "seek": 102460, "start": 1043.4399999999998, "end": 1047.52, "text": " out that if you seek back to the beginning and then read again, that the numbers double every", "tokens": [51306, 484, 300, 498, 291, 8075, 646, 281, 264, 2863, 293, 550, 1401, 797, 11, 300, 264, 3547, 3834, 633, 51510], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 198, "seek": 102460, "start": 1047.52, "end": 1051.9199999999998, "text": " time you do this. There's an actual bug in the original implementation. It's not there in the", "tokens": [51510, 565, 291, 360, 341, 13, 821, 311, 364, 3539, 7426, 294, 264, 3380, 11420, 13, 467, 311, 406, 456, 294, 264, 51730], "temperature": 0.0, "avg_logprob": -0.17231669108072917, "compression_ratio": 1.7584097859327217, "no_speech_prob": 0.006950791459530592}, {"id": 199, "seek": 105192, "start": 1051.96, "end": 1059.3200000000002, "text": " kernel, my version 6 kernel, but it is there on version V18 or 16 that the servers were applied", "tokens": [50366, 28256, 11, 452, 3037, 1386, 28256, 11, 457, 309, 307, 456, 322, 3037, 691, 6494, 420, 3165, 300, 264, 15909, 645, 6456, 50734], "temperature": 0.0, "avg_logprob": -0.2435637196217935, "compression_ratio": 1.7163636363636363, "no_speech_prob": 0.005487849470227957}, {"id": 200, "seek": 105192, "start": 1059.3200000000002, "end": 1064.28, "text": " on. So you have to be just the right version for it to appear. So Linus fixed it, thank God.", "tokens": [50734, 322, 13, 407, 291, 362, 281, 312, 445, 264, 558, 3037, 337, 309, 281, 4204, 13, 407, 9355, 301, 6806, 309, 11, 1309, 1265, 13, 50982], "temperature": 0.0, "avg_logprob": -0.2435637196217935, "compression_ratio": 1.7163636363636363, "no_speech_prob": 0.005487849470227957}, {"id": 201, "seek": 105192, "start": 1064.28, "end": 1068.04, "text": " Quillholt found it. Well, it was fixed before we found it. But it's always nice to know you have", "tokens": [50982, 2326, 373, 71, 4837, 1352, 309, 13, 1042, 11, 309, 390, 6806, 949, 321, 1352, 309, 13, 583, 309, 311, 1009, 1481, 281, 458, 291, 362, 51170], "temperature": 0.0, "avg_logprob": -0.2435637196217935, "compression_ratio": 1.7163636363636363, "no_speech_prob": 0.005487849470227957}, {"id": 202, "seek": 105192, "start": 1068.04, "end": 1072.44, "text": " to check your kernel is the right, you know, is the quality kernel before you start asking it", "tokens": [51170, 281, 1520, 428, 28256, 307, 264, 558, 11, 291, 458, 11, 307, 264, 3125, 28256, 949, 291, 722, 3365, 309, 51390], "temperature": 0.0, "avg_logprob": -0.2435637196217935, "compression_ratio": 1.7163636363636363, "no_speech_prob": 0.005487849470227957}, {"id": 203, "seek": 105192, "start": 1072.44, "end": 1077.44, "text": " how much memory it's using. Yeah, hunspell in the loop was almost entirely dominated, not by", "tokens": [51390, 577, 709, 4675, 309, 311, 1228, 13, 865, 11, 7396, 7053, 285, 294, 264, 6367, 390, 1920, 7696, 23755, 11, 406, 538, 51640], "temperature": 0.0, "avg_logprob": -0.2435637196217935, "compression_ratio": 1.7163636363636363, "no_speech_prob": 0.005487849470227957}, {"id": 204, "seek": 107744, "start": 1077.48, "end": 1081.8, "text": " actually spelling things, but by looking at the time. You know, I'm sure in a bad talk, you know,", "tokens": [50366, 767, 22254, 721, 11, 457, 538, 1237, 412, 264, 565, 13, 509, 458, 11, 286, 478, 988, 294, 257, 1578, 751, 11, 291, 458, 11, 50582], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 205, "seek": 107744, "start": 1081.8, "end": 1086.96, "text": " it's quite similar. But that's a little bit unfortunate. So yeah, some improvements there.", "tokens": [50582, 309, 311, 1596, 2531, 13, 583, 300, 311, 257, 707, 857, 17843, 13, 407, 1338, 11, 512, 13797, 456, 13, 50840], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 206, "seek": 107744, "start": 1086.96, "end": 1091.48, "text": " And lots of other things, graphs showing speedups. We've got to get to usability in the last minute.", "tokens": [50840, 400, 3195, 295, 661, 721, 11, 24877, 4099, 3073, 7528, 13, 492, 600, 658, 281, 483, 281, 46878, 294, 264, 1036, 3456, 13, 51066], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 207, "seek": 107744, "start": 1091.48, "end": 1096.64, "text": " Let me whizz through this then. Here we go. Accessibility, dark modes, pretty pictures. This", "tokens": [51066, 961, 385, 315, 8072, 807, 341, 550, 13, 1692, 321, 352, 13, 17166, 2841, 11, 2877, 14068, 11, 1238, 5242, 13, 639, 51324], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 208, "seek": 107744, "start": 1096.64, "end": 1102.16, "text": " is going to be fast. Keyboard accelerators. This is all of the good stuff for people. Screen reading,", "tokens": [51324, 307, 516, 281, 312, 2370, 13, 12759, 3787, 10172, 3391, 13, 639, 307, 439, 295, 264, 665, 1507, 337, 561, 13, 25823, 3760, 11, 51600], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 209, "seek": 107744, "start": 1102.16, "end": 1107.42, "text": " and all sorts of nice things, videos of that. Better page navigators at the side so you", "tokens": [51600, 293, 439, 7527, 295, 1481, 721, 11, 2145, 295, 300, 13, 15753, 3028, 7407, 3391, 412, 264, 1252, 370, 291, 51863], "temperature": 0.0, "avg_logprob": -0.17994436057838234, "compression_ratio": 1.6296296296296295, "no_speech_prob": 0.08626540750265121}, {"id": 210, "seek": 110742, "start": 1107.42, "end": 1112.5, "text": " can see where you're going. And lots of just little bits of usability polish, a nice font", "tokens": [50364, 393, 536, 689, 291, 434, 516, 13, 400, 3195, 295, 445, 707, 9239, 295, 46878, 20452, 11, 257, 1481, 10703, 50618], "temperature": 0.0, "avg_logprob": -0.23104659781968298, "compression_ratio": 1.6151202749140894, "no_speech_prob": 0.009537301026284695}, {"id": 211, "seek": 110742, "start": 1112.5, "end": 1117.98, "text": " previews. Was this your page number thing? I forget who did that. Making it easier to insert page", "tokens": [50618, 14281, 82, 13, 3027, 341, 428, 3028, 1230, 551, 30, 286, 2870, 567, 630, 300, 13, 14595, 309, 3571, 281, 8969, 3028, 50892], "temperature": 0.0, "avg_logprob": -0.23104659781968298, "compression_ratio": 1.6151202749140894, "no_speech_prob": 0.009537301026284695}, {"id": 212, "seek": 110742, "start": 1117.98, "end": 1122.78, "text": " numbers so people can see, you know, what's going on easily, better change tracking and showing", "tokens": [50892, 3547, 370, 561, 393, 536, 11, 291, 458, 11, 437, 311, 516, 322, 3612, 11, 1101, 1319, 11603, 293, 4099, 51132], "temperature": 0.0, "avg_logprob": -0.23104659781968298, "compression_ratio": 1.6151202749140894, "no_speech_prob": 0.009537301026284695}, {"id": 213, "seek": 110742, "start": 1122.78, "end": 1130.0600000000002, "text": " changes, AI, depot, stuff, and hey, some some. The good news is there's more opportunity for", "tokens": [51132, 2962, 11, 7318, 11, 1367, 310, 11, 1507, 11, 293, 4177, 11, 512, 512, 13, 440, 665, 2583, 307, 456, 311, 544, 2650, 337, 51496], "temperature": 0.0, "avg_logprob": -0.23104659781968298, "compression_ratio": 1.6151202749140894, "no_speech_prob": 0.009537301026284695}, {"id": 214, "seek": 110742, "start": 1130.0600000000002, "end": 1135.5800000000002, "text": " performance improvement. So we're still, we're still having fun. You know, hey, come join us.", "tokens": [51496, 3389, 10444, 13, 407, 321, 434, 920, 11, 321, 434, 920, 1419, 1019, 13, 509, 458, 11, 4177, 11, 808, 3917, 505, 13, 51772], "temperature": 0.0, "avg_logprob": -0.23104659781968298, "compression_ratio": 1.6151202749140894, "no_speech_prob": 0.009537301026284695}, {"id": 215, "seek": 113558, "start": 1135.74, "end": 1137.1799999999998, "text": " There's some cool play files to read.", "tokens": [50372, 821, 311, 512, 1627, 862, 7098, 281, 1401, 13, 50444], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 216, "seek": 113558, "start": 1140.1799999999998, "end": 1141.26, "text": " Right. Well, yes.", "tokens": [50594, 1779, 13, 1042, 11, 2086, 13, 50648], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 217, "seek": 113558, "start": 1143.74, "end": 1148.02, "text": " At the moment, in Calc, when you're typing the entire row and validates beyond the right", "tokens": [50772, 1711, 264, 1623, 11, 294, 3511, 66, 11, 562, 291, 434, 18444, 264, 2302, 5386, 293, 7363, 1024, 4399, 264, 558, 50986], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 218, "seek": 113558, "start": 1148.02, "end": 1151.1, "text": " hand side of where you're actually typing. So we brought that down to the self in the most", "tokens": [50986, 1011, 1252, 295, 689, 291, 434, 767, 18444, 13, 407, 321, 3038, 300, 760, 281, 264, 2698, 294, 264, 881, 51140], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 219, "seek": 113558, "start": 1151.1, "end": 1155.1799999999998, "text": " generic case, but it's not done for writer. In the writer case, if you're typing, we are", "tokens": [51140, 19577, 1389, 11, 457, 309, 311, 406, 1096, 337, 9936, 13, 682, 264, 9936, 1389, 11, 498, 291, 434, 18444, 11, 321, 366, 51344], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 220, "seek": 113558, "start": 1155.1799999999998, "end": 1159.4199999999998, "text": " invalidating all the way to the right hand side of the screen. So we'll bring shrink back back", "tokens": [51344, 34702, 990, 439, 264, 636, 281, 264, 558, 1011, 1252, 295, 264, 2568, 13, 407, 321, 603, 1565, 23060, 646, 646, 51556], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 221, "seek": 113558, "start": 1159.4199999999998, "end": 1163.5, "text": " down again. We have some new metrics that we've included in that debugging overlay thing that", "tokens": [51556, 760, 797, 13, 492, 362, 512, 777, 16367, 300, 321, 600, 5556, 294, 300, 45592, 31741, 551, 300, 51760], "temperature": 0.0, "avg_logprob": -0.2581720779191202, "compression_ratio": 1.78125, "no_speech_prob": 0.001685066381469369}, {"id": 222, "seek": 116350, "start": 1163.5, "end": 1167.74, "text": " give you an indication of, you know, how much of these updates that are coming through are the same", "tokens": [50364, 976, 291, 364, 18877, 295, 11, 291, 458, 11, 577, 709, 295, 613, 9205, 300, 366, 1348, 807, 366, 264, 912, 50576], "temperature": 0.0, "avg_logprob": -0.2462245443592901, "compression_ratio": 1.6791808873720135, "no_speech_prob": 0.0012887940974906087}, {"id": 223, "seek": 116350, "start": 1169.18, "end": 1173.74, "text": " data as they were before the update came through and the numbers are staggeringly high. So there's", "tokens": [50648, 1412, 382, 436, 645, 949, 264, 5623, 1361, 807, 293, 264, 3547, 366, 29656, 12163, 1090, 13, 407, 456, 311, 50876], "temperature": 0.0, "avg_logprob": -0.2462245443592901, "compression_ratio": 1.6791808873720135, "no_speech_prob": 0.0012887940974906087}, {"id": 224, "seek": 116350, "start": 1173.74, "end": 1178.78, "text": " plenty of room for improvement to validate less, send more data down. So what we have now is", "tokens": [50876, 7140, 295, 1808, 337, 10444, 281, 29562, 1570, 11, 2845, 544, 1412, 760, 13, 407, 437, 321, 362, 586, 307, 51128], "temperature": 0.0, "avg_logprob": -0.2462245443592901, "compression_ratio": 1.6791808873720135, "no_speech_prob": 0.0012887940974906087}, {"id": 225, "seek": 116350, "start": 1179.74, "end": 1187.98, "text": " fix, uh, approval. Yeah. The moment that's always been troublesome in, uh, Lear Office is the treatment", "tokens": [51176, 3191, 11, 2232, 11, 13317, 13, 865, 13, 440, 1623, 300, 311, 1009, 668, 46838, 294, 11, 2232, 11, 1456, 289, 8935, 307, 264, 5032, 51588], "temperature": 0.0, "avg_logprob": -0.2462245443592901, "compression_ratio": 1.6791808873720135, "no_speech_prob": 0.0012887940974906087}, {"id": 226, "seek": 116350, "start": 1187.98, "end": 1193.02, "text": " of the alpha layer. We picked the wrong direction than everybody else does. Everybody else picks", "tokens": [51588, 295, 264, 8961, 4583, 13, 492, 6183, 264, 2085, 3513, 813, 2201, 1646, 775, 13, 7646, 1646, 16137, 51840], "temperature": 0.0, "avg_logprob": -0.2462245443592901, "compression_ratio": 1.6791808873720135, "no_speech_prob": 0.0012887940974906087}, {"id": 227, "seek": 119350, "start": 1194.06, "end": 1198.46, "text": " transparency. We picked opacity or vice versa. So we have the opposite direction. Everybody else", "tokens": [50392, 17131, 13, 492, 6183, 41693, 420, 11964, 25650, 13, 407, 321, 362, 264, 6182, 3513, 13, 7646, 1646, 50612], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 228, "seek": 119350, "start": 1198.46, "end": 1202.94, "text": " would want to actually output something in the real world that handles transparency. We have to", "tokens": [50612, 576, 528, 281, 767, 5598, 746, 294, 264, 957, 1002, 300, 18722, 17131, 13, 492, 362, 281, 50836], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 229, "seek": 119350, "start": 1202.94, "end": 1207.26, "text": " like reverse our transparency. So that's problematic. That's, that's now fixed. That one is fixed.", "tokens": [50836, 411, 9943, 527, 17131, 13, 407, 300, 311, 19011, 13, 663, 311, 11, 300, 311, 586, 6806, 13, 663, 472, 307, 6806, 13, 51052], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 230, "seek": 119350, "start": 1207.26, "end": 1211.9, "text": " That one is fixed. But then we've also kept our transparency layer in a separate, uh,", "tokens": [51052, 663, 472, 307, 6806, 13, 583, 550, 321, 600, 611, 4305, 527, 17131, 4583, 294, 257, 4994, 11, 2232, 11, 51284], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 231, "seek": 119350, "start": 1212.7, "end": 1217.58, "text": " bitmap, a separate buffer than an actual bitmap. And if we put them together someday, that would", "tokens": [51324, 857, 24223, 11, 257, 4994, 21762, 813, 364, 3539, 857, 24223, 13, 400, 498, 321, 829, 552, 1214, 19412, 11, 300, 576, 51568], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 232, "seek": 119350, "start": 1217.58, "end": 1221.74, "text": " make things a lot easier, I believe. Yeah. It's the Windows 16 API decisions that are still with", "tokens": [51568, 652, 721, 257, 688, 3571, 11, 286, 1697, 13, 865, 13, 467, 311, 264, 8591, 3165, 9362, 5327, 300, 366, 920, 365, 51776], "temperature": 0.0, "avg_logprob": -0.17739441815544577, "compression_ratio": 1.7678018575851393, "no_speech_prob": 0.005857883021235466}, {"id": 233, "seek": 122174, "start": 1221.74, "end": 1226.78, "text": " us. But anyway, we're getting rid of them quickly. That's great. Um, yeah, performance regression", "tokens": [50364, 505, 13, 583, 4033, 11, 321, 434, 1242, 3973, 295, 552, 2661, 13, 663, 311, 869, 13, 3301, 11, 1338, 11, 3389, 24590, 50616], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 234, "seek": 122174, "start": 1226.78, "end": 1230.86, "text": " testing with Valgrind, uh, pipeline loading. So at the moment, oh, we got five minutes. Oh,", "tokens": [50616, 4997, 365, 7188, 861, 471, 11, 2232, 11, 15517, 15114, 13, 407, 412, 264, 1623, 11, 1954, 11, 321, 658, 1732, 2077, 13, 876, 11, 50820], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 235, "seek": 122174, "start": 1230.86, "end": 1235.66, "text": " look at that. Fantastic. I went too quickly. No, you're doing fine. Okay, right. Fine. Excellent.", "tokens": [50820, 574, 412, 300, 13, 21320, 13, 286, 1437, 886, 2661, 13, 883, 11, 291, 434, 884, 2489, 13, 1033, 11, 558, 13, 12024, 13, 16723, 13, 51060], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 236, "seek": 122174, "start": 1235.66, "end": 1241.34, "text": " I think we're nearly the end. Um, so pipeline loading. So at the moment we have, um, we, we", "tokens": [51060, 286, 519, 321, 434, 6217, 264, 917, 13, 3301, 11, 370, 15517, 15114, 13, 407, 412, 264, 1623, 321, 362, 11, 1105, 11, 321, 11, 321, 51344], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 237, "seek": 122174, "start": 1241.34, "end": 1245.18, "text": " essentially fetch a, fetch a webpage that passes all the credentials we need to check ourselves.", "tokens": [51344, 4476, 23673, 257, 11, 23673, 257, 37852, 300, 11335, 439, 264, 27404, 321, 643, 281, 1520, 4175, 13, 51536], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 238, "seek": 122174, "start": 1245.18, "end": 1251.18, "text": " We'd load lots of JavaScript. We open a web socket. Then do we actually see if we can actually load", "tokens": [51536, 492, 1116, 3677, 3195, 295, 15778, 13, 492, 1269, 257, 3670, 19741, 13, 1396, 360, 321, 767, 536, 498, 321, 393, 767, 3677, 51836], "temperature": 0.0, "avg_logprob": -0.18307309304514238, "compression_ratio": 1.7297297297297298, "no_speech_prob": 0.024364028126001358}, {"id": 239, "seek": 125118, "start": 1251.18, "end": 1255.5800000000002, "text": " the document and start checking who the user is? This is really foolish. I'm taking on a first start,", "tokens": [50364, 264, 4166, 293, 722, 8568, 567, 264, 4195, 307, 30, 639, 307, 534, 23478, 13, 286, 478, 1940, 322, 257, 700, 722, 11, 50584], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 240, "seek": 125118, "start": 1255.5800000000002, "end": 1259.9, "text": " we can be, you know, checking the user, downloading the document, even loading the document ready", "tokens": [50584, 321, 393, 312, 11, 291, 458, 11, 8568, 264, 4195, 11, 32529, 264, 4166, 11, 754, 15114, 264, 4166, 1919, 50800], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 241, "seek": 125118, "start": 1259.9, "end": 1265.3400000000001, "text": " to get the web socket and then have a pre-rendered version. So this, this is very substantially", "tokens": [50800, 281, 483, 264, 3670, 19741, 293, 550, 362, 257, 659, 12, 4542, 4073, 3037, 13, 407, 341, 11, 341, 307, 588, 30797, 51072], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 242, "seek": 125118, "start": 1265.3400000000001, "end": 1270.7, "text": " reducing, um, startup time to make it incredibly quick. You already have a huge advantage that you", "tokens": [51072, 12245, 11, 1105, 11, 18578, 565, 281, 652, 309, 6252, 1702, 13, 509, 1217, 362, 257, 2603, 5002, 300, 291, 51340], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 243, "seek": 125118, "start": 1270.7, "end": 1275.42, "text": " have a real server at the back end and you're not having to jit, you know, millions of lines of code", "tokens": [51340, 362, 257, 957, 7154, 412, 264, 646, 917, 293, 291, 434, 406, 1419, 281, 361, 270, 11, 291, 458, 11, 6803, 295, 3876, 295, 3089, 51576], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 244, "seek": 125118, "start": 1276.14, "end": 1280.46, "text": " in your browser from JavaScript into something or, you know, web assembly into something. Um,", "tokens": [51612, 294, 428, 11185, 490, 15778, 666, 746, 420, 11, 291, 458, 11, 3670, 12103, 666, 746, 13, 3301, 11, 51828], "temperature": 0.0, "avg_logprob": -0.09892911177415115, "compression_ratio": 1.795731707317073, "no_speech_prob": 0.011104673147201538}, {"id": 245, "seek": 128046, "start": 1280.46, "end": 1285.58, "text": " so it should be just amazingly fast. And so this is a great way to, to speed that even further.", "tokens": [50364, 370, 309, 820, 312, 445, 31762, 2370, 13, 400, 370, 341, 307, 257, 869, 636, 281, 11, 281, 3073, 300, 754, 3052, 13, 50620], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 246, "seek": 128046, "start": 1285.58, "end": 1289.3400000000001, "text": " And, you know, and a real server, you may have a time share, but you know, when you arrived", "tokens": [50620, 400, 11, 291, 458, 11, 293, 257, 957, 7154, 11, 291, 815, 362, 257, 565, 2073, 11, 457, 291, 458, 11, 562, 291, 6678, 50808], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 247, "seek": 128046, "start": 1289.3400000000001, "end": 1293.5, "text": " your server, it's probably not doing much. In fact, the CPU cost on most of our servers is", "tokens": [50808, 428, 7154, 11, 309, 311, 1391, 406, 884, 709, 13, 682, 1186, 11, 264, 13199, 2063, 322, 881, 295, 527, 15909, 307, 51016], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 248, "seek": 128046, "start": 1293.5, "end": 1297.58, "text": " extremely low. So, you know, there's suddenly all these threads ready to render your document and", "tokens": [51016, 4664, 2295, 13, 407, 11, 291, 458, 11, 456, 311, 5800, 439, 613, 19314, 1919, 281, 15529, 428, 4166, 293, 51220], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 249, "seek": 128046, "start": 1297.58, "end": 1302.7, "text": " get, get stuff to you quickly. Say some good things. And Valgrind, we've done a whole lot of work to", "tokens": [51220, 483, 11, 483, 1507, 281, 291, 2661, 13, 6463, 512, 665, 721, 13, 400, 7188, 861, 471, 11, 321, 600, 1096, 257, 1379, 688, 295, 589, 281, 51476], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 250, "seek": 128046, "start": 1302.7, "end": 1308.38, "text": " get, um, it to run nicely under Valgrind with our privilege model and container model. It's a bit", "tokens": [51476, 483, 11, 1105, 11, 309, 281, 1190, 9594, 833, 7188, 861, 471, 365, 527, 12122, 2316, 293, 10129, 2316, 13, 467, 311, 257, 857, 51760], "temperature": 0.0, "avg_logprob": -0.14421373837954038, "compression_ratio": 1.6911764705882353, "no_speech_prob": 0.00417663436383009}, {"id": 251, "seek": 130838, "start": 1308.38, "end": 1314.0600000000002, "text": " of a problem. Uh, and so we have some code now that turns everything into one process. So you", "tokens": [50364, 295, 257, 1154, 13, 4019, 11, 293, 370, 321, 362, 512, 3089, 586, 300, 4523, 1203, 666, 472, 1399, 13, 407, 291, 50648], "temperature": 0.0, "avg_logprob": -0.0844596939086914, "compression_ratio": 1.6795774647887325, "no_speech_prob": 0.011938799172639847}, {"id": 252, "seek": 130838, "start": 1314.0600000000002, "end": 1318.46, "text": " can load and collaborate on one document and automate that, but you can run it in, in Valgrind.", "tokens": [50648, 393, 3677, 293, 18338, 322, 472, 4166, 293, 31605, 300, 11, 457, 291, 393, 1190, 309, 294, 11, 294, 7188, 861, 471, 13, 50868], "temperature": 0.0, "avg_logprob": -0.0844596939086914, "compression_ratio": 1.6795774647887325, "no_speech_prob": 0.011938799172639847}, {"id": 253, "seek": 130838, "start": 1318.46, "end": 1323.98, "text": " And why do you want to do performance profiling in Valgrind? It seems like a retro, uh, poly,", "tokens": [50868, 400, 983, 360, 291, 528, 281, 360, 3389, 1740, 4883, 294, 7188, 861, 471, 30, 467, 2544, 411, 257, 18820, 11, 2232, 11, 6754, 11, 51144], "temperature": 0.0, "avg_logprob": -0.0844596939086914, "compression_ratio": 1.6795774647887325, "no_speech_prob": 0.011938799172639847}, {"id": 254, "seek": 130838, "start": 1323.98, "end": 1329.9, "text": " right? But the beautiful thing about Valgrind is the simulated CPU. So anybody can run the same", "tokens": [51144, 558, 30, 583, 264, 2238, 551, 466, 7188, 861, 471, 307, 264, 41713, 13199, 13, 407, 4472, 393, 1190, 264, 912, 51440], "temperature": 0.0, "avg_logprob": -0.0844596939086914, "compression_ratio": 1.6795774647887325, "no_speech_prob": 0.011938799172639847}, {"id": 255, "seek": 130838, "start": 1329.9, "end": 1335.98, "text": " workload on their machine and between two runs, it's the same thing. And Valgrind luckily doesn't", "tokens": [51440, 20139, 322, 641, 3479, 293, 1296, 732, 6676, 11, 309, 311, 264, 912, 551, 13, 400, 7188, 861, 471, 22880, 1177, 380, 51744], "temperature": 0.0, "avg_logprob": -0.0844596939086914, "compression_ratio": 1.6795774647887325, "no_speech_prob": 0.011938799172639847}, {"id": 256, "seek": 133598, "start": 1335.98, "end": 1341.26, "text": " have a simulated thermal management system that randomly throttles your CPU, uh, performance. And", "tokens": [50364, 362, 257, 41713, 15070, 4592, 1185, 300, 16979, 739, 1521, 904, 428, 13199, 11, 2232, 11, 3389, 13, 400, 50628], "temperature": 0.0, "avg_logprob": -0.0820922157981179, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.03550966829061508}, {"id": 257, "seek": 133598, "start": 1341.26, "end": 1344.54, "text": " it luckily doesn't have people screwing with your cache memory and running cron jobs in the", "tokens": [50628, 309, 22880, 1177, 380, 362, 561, 5630, 278, 365, 428, 19459, 4675, 293, 2614, 941, 266, 4782, 294, 264, 50792], "temperature": 0.0, "avg_logprob": -0.0820922157981179, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.03550966829061508}, {"id": 258, "seek": 133598, "start": 1344.54, "end": 1349.5, "text": " background and, you know, thermally recalibrating your disk and all this other stuff. So what you", "tokens": [50792, 3678, 293, 11, 291, 458, 11, 8810, 379, 850, 304, 6414, 990, 428, 12355, 293, 439, 341, 661, 1507, 13, 407, 437, 291, 51040], "temperature": 0.0, "avg_logprob": -0.0820922157981179, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.03550966829061508}, {"id": 259, "seek": 133598, "start": 1349.5, "end": 1355.02, "text": " discover is that between two identical commits, you're getting fractions of a, small fractions of a", "tokens": [51040, 4411, 307, 300, 1296, 732, 14800, 48311, 11, 291, 434, 1242, 36058, 295, 257, 11, 1359, 36058, 295, 257, 51316], "temperature": 0.0, "avg_logprob": -0.0820922157981179, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.03550966829061508}, {"id": 260, "seek": 133598, "start": 1355.02, "end": 1360.06, "text": " percent difference in the Valgrind numbers, which is beautiful because performance tends not to go", "tokens": [51316, 3043, 2649, 294, 264, 7188, 861, 471, 3547, 11, 597, 307, 2238, 570, 3389, 12258, 406, 281, 352, 51568], "temperature": 0.0, "avg_logprob": -0.0820922157981179, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.03550966829061508}, {"id": 261, "seek": 136006, "start": 1360.1399999999999, "end": 1366.7, "text": " away in big jumps. Like we can, it can go in big jumps, but it tends to go slowly downhill. And if", "tokens": [50368, 1314, 294, 955, 16704, 13, 1743, 321, 393, 11, 309, 393, 352, 294, 955, 16704, 11, 457, 309, 12258, 281, 352, 5692, 29929, 13, 400, 498, 50696], "temperature": 0.0, "avg_logprob": -0.16112521094997434, "compression_ratio": 1.6578073089700998, "no_speech_prob": 0.27115675806999207}, {"id": 262, "seek": 136006, "start": 1366.7, "end": 1372.1399999999999, "text": " the noise is bigger than the slow downhill, you've no idea where the problem is. So much better to", "tokens": [50696, 264, 5658, 307, 3801, 813, 264, 2964, 29929, 11, 291, 600, 572, 1558, 689, 264, 1154, 307, 13, 407, 709, 1101, 281, 50968], "temperature": 0.0, "avg_logprob": -0.16112521094997434, "compression_ratio": 1.6578073089700998, "no_speech_prob": 0.27115675806999207}, {"id": 263, "seek": 136006, "start": 1372.1399999999999, "end": 1376.78, "text": " have a little series of steps going down in one half a percent at a time and go, hey, we get rid of", "tokens": [50968, 362, 257, 707, 2638, 295, 4439, 516, 760, 294, 472, 1922, 257, 3043, 412, 257, 565, 293, 352, 11, 4177, 11, 321, 483, 3973, 295, 51200], "temperature": 0.0, "avg_logprob": -0.16112521094997434, "compression_ratio": 1.6578073089700998, "no_speech_prob": 0.27115675806999207}, {"id": 264, "seek": 136006, "start": 1376.78, "end": 1382.1399999999999, "text": " that and that. And did you realize and, uh, so, so this is really vital. And LibreOffice uses this", "tokens": [51200, 300, 293, 300, 13, 400, 630, 291, 4325, 293, 11, 2232, 11, 370, 11, 370, 341, 307, 534, 11707, 13, 400, 15834, 265, 29745, 573, 4960, 341, 51468], "temperature": 0.0, "avg_logprob": -0.16112521094997434, "compression_ratio": 1.6578073089700998, "no_speech_prob": 0.27115675806999207}, {"id": 265, "seek": 136006, "start": 1382.1399999999999, "end": 1387.82, "text": " on its perf, um, automation has been beautiful web pages with graphs. Um, and we'll, we'll be applying", "tokens": [51468, 322, 1080, 13826, 11, 1105, 11, 17769, 575, 668, 2238, 3670, 7183, 365, 24877, 13, 3301, 11, 293, 321, 603, 11, 321, 603, 312, 9275, 51752], "temperature": 0.0, "avg_logprob": -0.16112521094997434, "compression_ratio": 1.6578073089700998, "no_speech_prob": 0.27115675806999207}, {"id": 266, "seek": 138782, "start": 1387.8999999999999, "end": 1392.3, "text": " to, to collaborate online to, to try and avoid regressions. Yeah. Someday soon. Someday soon.", "tokens": [50368, 281, 11, 281, 18338, 2950, 281, 11, 281, 853, 293, 5042, 1121, 735, 626, 13, 865, 13, 12297, 16826, 2321, 13, 12297, 16826, 2321, 13, 50588], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 267, "seek": 138782, "start": 1392.3, "end": 1396.06, "text": " Yeah. Neil, Neil Lazzone, we think probably. Anyway, anything else?", "tokens": [50588, 865, 13, 18615, 11, 18615, 441, 9112, 546, 11, 321, 519, 1391, 13, 5684, 11, 1340, 1646, 30, 50776], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 268, "seek": 138782, "start": 1396.06, "end": 1402.54, "text": " No, I think we've covered plenty. Well, so, and yes, of course, we can't do anything without our", "tokens": [50776, 883, 11, 286, 519, 321, 600, 5343, 7140, 13, 1042, 11, 370, 11, 293, 2086, 11, 295, 1164, 11, 321, 393, 380, 360, 1340, 1553, 527, 51100], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 269, "seek": 138782, "start": 1402.54, "end": 1406.46, "text": " partners and customers that pay for it all, blah, blah, blah, commercial plug. Good. Yes. That's good.", "tokens": [51100, 4462, 293, 4581, 300, 1689, 337, 309, 439, 11, 12288, 11, 12288, 11, 12288, 11, 6841, 5452, 13, 2205, 13, 1079, 13, 663, 311, 665, 13, 51296], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 270, "seek": 138782, "start": 1406.46, "end": 1412.3, "text": " Job done. And conclusions. Yes. So, uh, computers are unbelievably fast. I mean, like this is", "tokens": [51296, 18602, 1096, 13, 400, 22865, 13, 1079, 13, 407, 11, 2232, 11, 10807, 366, 43593, 2370, 13, 286, 914, 11, 411, 341, 307, 51588], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 271, "seek": 138782, "start": 1412.3, "end": 1416.46, "text": " something that you should take home. You know, like the quarter of a nanosecond that your four giga", "tokens": [51588, 746, 300, 291, 820, 747, 1280, 13, 509, 458, 11, 411, 264, 6555, 295, 257, 14067, 541, 18882, 300, 428, 1451, 8741, 64, 51796], "temperature": 0.0, "avg_logprob": -0.22276990336756552, "compression_ratio": 1.7024539877300613, "no_speech_prob": 0.12380598485469818}, {"id": 272, "seek": 141646, "start": 1416.46, "end": 1421.02, "text": " hertz processor takes is just unbelievable in the scale of a hundred milliseconds plus. It takes", "tokens": [50364, 45830, 15321, 2516, 307, 445, 16605, 294, 264, 4373, 295, 257, 3262, 34184, 1804, 13, 467, 2516, 50592], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 273, "seek": 141646, "start": 1421.02, "end": 1426.78, "text": " you to blink your eye. It's just fantastically speedy in a way you can't explain. Uh, the network", "tokens": [50592, 291, 281, 24667, 428, 3313, 13, 467, 311, 445, 4115, 22808, 3073, 88, 294, 257, 636, 291, 393, 380, 2903, 13, 4019, 11, 264, 3209, 50880], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 274, "seek": 141646, "start": 1426.78, "end": 1432.7, "text": " latency to anywhere almost, you know, you can go three times, uh, London to Frankfurt and back", "tokens": [50880, 27043, 281, 4992, 1920, 11, 291, 458, 11, 291, 393, 352, 1045, 1413, 11, 2232, 11, 7042, 281, 36530, 293, 646, 51176], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 275, "seek": 141646, "start": 1432.7, "end": 1436.8600000000001, "text": " in the time you can blink, right? Like it's, it's unbelievably fast. In fact, you can go,", "tokens": [51176, 294, 264, 565, 291, 393, 24667, 11, 558, 30, 1743, 309, 311, 11, 309, 311, 43593, 2370, 13, 682, 1186, 11, 291, 393, 352, 11, 51384], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 276, "seek": 141646, "start": 1437.58, "end": 1441.58, "text": " you know, Frankfurt, Milan faster than your monitor can refresh, right? So, so like,", "tokens": [51420, 291, 458, 11, 36530, 11, 32874, 4663, 813, 428, 6002, 393, 15134, 11, 558, 30, 407, 11, 370, 411, 11, 51620], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 277, "seek": 141646, "start": 1441.58, "end": 1446.06, "text": " it's quite amazing when you start looking at the times of things. Um, architecture is really a", "tokens": [51620, 309, 311, 1596, 2243, 562, 291, 722, 1237, 412, 264, 1413, 295, 721, 13, 3301, 11, 9482, 307, 534, 257, 51844], "temperature": 0.0, "avg_logprob": -0.14467526825380997, "compression_ratio": 1.7414330218068537, "no_speech_prob": 0.07398629933595657}, {"id": 278, "seek": 144606, "start": 1446.1399999999999, "end": 1451.4199999999998, "text": " bet on CPUs and networks getting faster and cheaper. Has anyone noticed a trend there? I think", "tokens": [50368, 778, 322, 13199, 82, 293, 9590, 1242, 4663, 293, 12284, 13, 8646, 2878, 5694, 257, 6028, 456, 30, 286, 519, 50632], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 279, "seek": 144606, "start": 1451.4199999999998, "end": 1454.94, "text": " there might be something in that. And, and we're basically racing the hardware guys. I mean, you", "tokens": [50632, 456, 1062, 312, 746, 294, 300, 13, 400, 11, 293, 321, 434, 1936, 12553, 264, 8837, 1074, 13, 286, 914, 11, 291, 50808], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 280, "seek": 144606, "start": 1454.94, "end": 1459.02, "text": " know, we, we do stupid stuff, obviously, and then we remove it later. But, you know, the hardware", "tokens": [50808, 458, 11, 321, 11, 321, 360, 6631, 1507, 11, 2745, 11, 293, 550, 321, 4159, 309, 1780, 13, 583, 11, 291, 458, 11, 264, 8837, 51012], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 281, "seek": 144606, "start": 1459.02, "end": 1462.7, "text": " people are also trying to beat us to run stupid stuff quicker. You know, that's their mission.", "tokens": [51012, 561, 366, 611, 1382, 281, 4224, 505, 281, 1190, 6631, 1507, 16255, 13, 509, 458, 11, 300, 311, 641, 4447, 13, 51196], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 282, "seek": 144606, "start": 1462.7, "end": 1467.8999999999999, "text": " And, uh, yes. And, and we extremely smooth. Don't get the feeling that it's bad. Try it. You know,", "tokens": [51196, 400, 11, 2232, 11, 2086, 13, 400, 11, 293, 321, 4664, 5508, 13, 1468, 380, 483, 264, 2633, 300, 309, 311, 1578, 13, 6526, 309, 13, 509, 458, 11, 51456], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 283, "seek": 144606, "start": 1467.8999999999999, "end": 1472.3, "text": " most of these problems, you'll only start to see them when you have 20 plus people collaboratively", "tokens": [51456, 881, 295, 613, 2740, 11, 291, 603, 787, 722, 281, 536, 552, 562, 291, 362, 945, 1804, 561, 16555, 356, 51676], "temperature": 0.0, "avg_logprob": -0.0923091054752173, "compression_ratio": 1.7270029673590503, "no_speech_prob": 0.006477779243141413}, {"id": 284, "seek": 147230, "start": 1472.3, "end": 1477.26, "text": " editing in document. So, uh, yeah, it's, it's kind of, it's kind of cool. So give it a try and try", "tokens": [50364, 10000, 294, 4166, 13, 407, 11, 2232, 11, 1338, 11, 309, 311, 11, 309, 311, 733, 295, 11, 309, 311, 733, 295, 1627, 13, 407, 976, 309, 257, 853, 293, 853, 50612], "temperature": 0.0, "avg_logprob": -0.18191415346585788, "compression_ratio": 1.75, "no_speech_prob": 0.02770182676613331}, {"id": 285, "seek": 147230, "start": 1477.26, "end": 1481.98, "text": " the latest version and see, give us some feedback, get involved. And there's lots, lots of fun to", "tokens": [50612, 264, 6792, 3037, 293, 536, 11, 976, 505, 512, 5824, 11, 483, 3288, 13, 400, 456, 311, 3195, 11, 3195, 295, 1019, 281, 50848], "temperature": 0.0, "avg_logprob": -0.18191415346585788, "compression_ratio": 1.75, "no_speech_prob": 0.02770182676613331}, {"id": 286, "seek": 147230, "start": 1481.98, "end": 1488.78, "text": " get involved with. I mean, I don't know. Yeah, I'd like us to play two things. As I mentioned earlier,", "tokens": [50848, 483, 3288, 365, 13, 286, 914, 11, 286, 500, 380, 458, 13, 865, 11, 286, 1116, 411, 505, 281, 862, 732, 721, 13, 1018, 286, 2835, 3071, 11, 51188], "temperature": 0.0, "avg_logprob": -0.18191415346585788, "compression_ratio": 1.75, "no_speech_prob": 0.02770182676613331}, {"id": 287, "seek": 147230, "start": 1488.78, "end": 1493.6599999999999, "text": " the profile that we have for Calc and Writers uploaded to GitHub once a week, generic Calc", "tokens": [51188, 264, 7964, 300, 321, 362, 337, 3511, 66, 293, 343, 39335, 17135, 281, 23331, 1564, 257, 1243, 11, 19577, 3511, 66, 51432], "temperature": 0.0, "avg_logprob": -0.18191415346585788, "compression_ratio": 1.75, "no_speech_prob": 0.02770182676613331}, {"id": 288, "seek": 147230, "start": 1493.6599999999999, "end": 1498.3799999999999, "text": " performance profile, generic writer performance profile, search on the online GitHub issues.", "tokens": [51432, 3389, 7964, 11, 19577, 9936, 3389, 7964, 11, 3164, 322, 264, 2950, 23331, 2663, 13, 51668], "temperature": 0.0, "avg_logprob": -0.18191415346585788, "compression_ratio": 1.75, "no_speech_prob": 0.02770182676613331}, {"id": 289, "seek": 149838, "start": 1498.38, "end": 1502.22, "text": " And you can see all of the, the chats that we've mentioned there in the past. And you can even", "tokens": [50364, 400, 291, 393, 536, 439, 295, 264, 11, 264, 38057, 300, 321, 600, 2835, 456, 294, 264, 1791, 13, 400, 291, 393, 754, 50556], "temperature": 0.0, "avg_logprob": -0.18240543919750768, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.05680232122540474}, {"id": 290, "seek": 149838, "start": 1502.22, "end": 1506.3000000000002, "text": " see with the progress there and the occasional blip during a call where things go horrifically", "tokens": [50556, 536, 365, 264, 4205, 456, 293, 264, 31644, 888, 647, 1830, 257, 818, 689, 721, 352, 17582, 4278, 50760], "temperature": 0.0, "avg_logprob": -0.18240543919750768, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.05680232122540474}, {"id": 291, "seek": 149838, "start": 1506.3000000000002, "end": 1510.14, "text": " wrong and get sorted out in the next one. So yeah, plenty to see and see what we're doing.", "tokens": [50760, 2085, 293, 483, 25462, 484, 294, 264, 958, 472, 13, 407, 1338, 11, 7140, 281, 536, 293, 536, 437, 321, 434, 884, 13, 50952], "temperature": 0.0, "avg_logprob": -0.18240543919750768, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.05680232122540474}, {"id": 292, "seek": 149838, "start": 1510.14, "end": 1512.94, "text": " There's some links in the slide. You can't see to the profiles and get involved in the Libre", "tokens": [50952, 821, 311, 512, 6123, 294, 264, 4137, 13, 509, 393, 380, 536, 281, 264, 23693, 293, 483, 3288, 294, 264, 15834, 265, 51092], "temperature": 0.0, "avg_logprob": -0.18240543919750768, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.05680232122540474}, {"id": 293, "seek": 149838, "start": 1512.94, "end": 1521.5800000000002, "text": " Office of Technology. Thank you. That's it. You've been very patient. Thank you.", "tokens": [51092, 8935, 295, 15037, 13, 1044, 291, 13, 663, 311, 309, 13, 509, 600, 668, 588, 4537, 13, 1044, 291, 13, 51524], "temperature": 0.0, "avg_logprob": -0.18240543919750768, "compression_ratio": 1.7196969696969697, "no_speech_prob": 0.05680232122540474}], "language": "en"}