{"text": " Hi everybody, next talk is about to start. We'll have Yamo Makinbach talking about using elliptic curve cryptography for the purposes of online identity. Thank you. Shall I start the buzzer? Shall I? And we're off apparently. Yeah. Alright, welcome. So I'm Yamo. I work on this project called Keogh's side, which is about online identity. And we're going to talk about it in a minute. First, because of the last previous talks, I wanted to specify the skill. There will be no 5 terabyte database here or serialization of billions of nodes, which is going to make a little script. It's a bit of a Bob Ross talk, I guess, which is going on a journey together and have fun, discover. And before I really start, we're going to try something experimental. We're going to try a little interactive demo at the end. We're going to write the script, but you're going to verify if the script that we're going to write actually works. So for this, for whoever wants to participate, you should consider downloading the Keogh's mobile app. It's available on these locations. You can just get the APK from the CodeBerg repo. Alright, let's get started. So if someone makes a claim, how do we verify that? Well, quite simply, with a proof. What do I mean with that? So for example, if Alice lost her luggage and then Bob found it very conveniently, and then Alice says it's hers, then Bob asked for the proof, of course, because, you know, and then Alice fiddles with the little dials and unlocks the luggage, and then she verified that the claim was indeed true, that it is indeed her luggage. So now we want to know, is this also true over the internet? Can we do this over the internet? Well, yes, we can. We can claim things over the internet, but humans travel rather poorly through ethernet cables, so we need to find a way to connect Alice and Bob in a different way, so that Alice can make her claim, and Bob can verify that claim, each in their own space and time. And so for this, we're going to use cryptographic signatures. So, yeah, we could talk for a long time about cryptographic signatures. For the purpose of this talk, let's just... the important stuff is basically just like a real signature, but digital, but the big difference, I guess, is that it's really difficult to forge, so that's good. And in short, we have a secret key, which we will use to sign documents, text documents, with a public key that we will use to verify those signatures, combine those two keys, and you have a key pair, and each key pair is identified by a unique fingerprint. All right. So let's try and work out this process then. So let's say that I will write this text document, which just says that this is my account on the Fediverse, on Macedon, now I will sign it with a key, which has this conveniently fingerprint, which starts with very familiar letters. And now the signature itself is just zeros and ones. We're not going to worry about that. So now I will give this text document, my claim, together with the signature to my friend, and my friend will use those two pieces of data. They will first verify that indeed the signature corresponds to this text document, and once that is done, they're going to my actual Fediverse account, and then they're going to read in the bio, oh, this person indeed wrote in their bio that they have this key. So that is the proof with which I verify my claim, and that it is indeed my account. So now we're going to do that whole process. We're going to try to create an online identity with just 100 lines of rust. I did need five dependencies. I tried to minimize it, but without these, it will be a lot more than 100 lines of code. So yeah, these will be it. So we're going to generate a key. This is where the elliptic curve part comes in. Elliptic curves are a technique of creating cryptographic keys, and in this case, we're using these specifically the P256 curve, but all this just to say, yeah, we're using these two lines of code just to create an entire cryptographic key. So this includes a public key and a secret key. Now, of course, I said every key pair has a fingerprint, so that's what this code does. It looks a bit complicated. This is the most complicated part. So the most important part about this script is basically we'll just get some data from the key, we'll get some parameters from the key, and then we're going to hash it, and that is how we get the actual fingerprint. Now we're going to collect the identity data. So we're going to create what we call a profile. Just a profile is just a name, some other metadata about the person, and claims, multiple claims. So I'm just going to continue with the same example as before. I'm just going to claim that that is my account on the Internet. Now we need a way to encode all this data, because we need the text document and we need a signature. So for this, we're going to use a JSON web token, which for the purposes of this talk is just a convenient way of combining a document and a signature. We'll need three parts. We'll need a header, a payload, and a signature. So let's make each of those. Oh yeah, some quick notes. So whenever you see that are you at ID, that is just the namespace that we use for the creation of the tokens. And sometimes you will see JWS instead of JWT. Those are different, but for the purposes of this talk, we'll just consider them the same. So let's create a header. So the header is just a little bit of metadata about the key that is creating this profile. So we'll set the fingerprints and we'll set the actual key. We'll just give it. And the public key, of course, not the secret key, because that one should be secret. We'll create the payload. The payload is the actual profile itself. So we're going to say like, oh, it's the type as a profile of this token. We're going to say line 10. We're going to say like, oh, what is the name? It will be the name and the identity claims. Don't mind all the payload set claims. That's just to confuse you, because JWT also uses the term claim in a different way. Just to make it easy. Now that we have the header and we have the payload, we're going to sign the two. That's what we do here. So line three, we get our key that we built earlier, generated earlier. And in line four and five, we're going to use it to sign the payload and the header. And with that, we are done. We have our profile. So now, if you would like to copy this, write this over. Yeah, that's not convenient. So we need to do a second part. We need to do a second step. I need to get this from my computer to your phone, to your device, whatever, so that you can verify for yourself that I do indeed have that account. So we need a way to transport, I guess, documents and preferably sign it. You guess where this is going? We're going to use another JSON web token. So we're actually going to reuse the same header, because we're going to use the same key. So we'll just use the same metadata about the key. We're going to create a second payload, which will be very similar. This time, instead of being a profile, it would just be a request. And we're just going to ask the server to create this profile. And then in line 14 and 15, we're actually going to give that document that we created earlier. We're just going to give it to the server. And this second outer JSON web token, we are actually going to upload it to... Sorry, we're going to sign it first, so we'll have a similar string, a piece of data that we can actually then send to the server. So this is where we're going to send it to what we call an ASPE server that we're working on. And it's just basically a way of storing and exchanging these kinds of profiles. And yeah, that is basically it, what you need to do. Those were the lines of code that you need to actually make an entire profile, make a claim, and make it so that people could verify for themselves with their own devices, with their own methods. So yeah, it is a fun script. You can actually just try it at home. Or as I said, we could try it live on stage. That is what we're going to try right now. So I did prepare it somewhere. So you'll see that apart from some cosmetic changes, if it loads... Yeah, that's the big risk of doing this on the stage. We'll give it a second. Apart from some cosmetic changes, it is largely the same script. And you'll see that it will fit neatly within 100 lines. And it might not. We'll give it another second. And if it... Alright, well, maybe it won't do it. It would have been phenomenal, I can promise you. Alright, I'll reload it once and then... I do have a sort of a backup. Alright, it's not playing game. Alright, so let's go back to the presentation. I think it's this one. I don't... wait. I have lost the presentation. That's a different presentation. What? That was not supposed to happen. Yeah, I don't know what's happening. But basically, yeah, this would have been... We would have run scripts and we would have created a profile. And then it would have presented you with a QR code that you could have scanned on your phone. And it would actually have worked. And then you could have seen that the script would have created a profile that we built here on stage. Yeah, and just with a couple of lines of code, we can work with cryptography, we can work with identity. And, yeah, thank you very much. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.8, "text": " Hi everybody, next talk is about to start. We'll have Yamo Makinbach talking about using", "tokens": [50364, 2421, 2201, 11, 958, 751, 307, 466, 281, 722, 13, 492, 603, 362, 398, 10502, 376, 12709, 32096, 1417, 466, 1228, 51004], "temperature": 0.0, "avg_logprob": -0.41989906017596906, "compression_ratio": 1.2751677852348993, "no_speech_prob": 0.396749883890152}, {"id": 1, "seek": 0, "start": 12.8, "end": 18.92, "text": " elliptic curve cryptography for the purposes of online identity.", "tokens": [51004, 8284, 22439, 299, 7605, 9844, 5820, 337, 264, 9932, 295, 2950, 6575, 13, 51310], "temperature": 0.0, "avg_logprob": -0.41989906017596906, "compression_ratio": 1.2751677852348993, "no_speech_prob": 0.396749883890152}, {"id": 2, "seek": 0, "start": 18.92, "end": 24.6, "text": " Thank you. Shall I start the buzzer?", "tokens": [51310, 1044, 291, 13, 12128, 286, 722, 264, 13036, 260, 30, 51594], "temperature": 0.0, "avg_logprob": -0.41989906017596906, "compression_ratio": 1.2751677852348993, "no_speech_prob": 0.396749883890152}, {"id": 3, "seek": 2460, "start": 25.6, "end": 29.6, "text": " Shall I? And we're off apparently.", "tokens": [50414, 12128, 286, 30, 400, 321, 434, 766, 7970, 13, 50614], "temperature": 0.0, "avg_logprob": -0.2962285384391118, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0554579459130764}, {"id": 4, "seek": 2460, "start": 29.6, "end": 37.6, "text": " Yeah. Alright, welcome. So I'm Yamo. I work on this project called Keogh's side, which is about online identity.", "tokens": [50614, 865, 13, 2798, 11, 2928, 13, 407, 286, 478, 398, 10502, 13, 286, 589, 322, 341, 1716, 1219, 3189, 664, 71, 311, 1252, 11, 597, 307, 466, 2950, 6575, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2962285384391118, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0554579459130764}, {"id": 5, "seek": 2460, "start": 37.6, "end": 45.6, "text": " And we're going to talk about it in a minute. First, because of the last previous talks, I wanted to specify the skill.", "tokens": [51014, 400, 321, 434, 516, 281, 751, 466, 309, 294, 257, 3456, 13, 2386, 11, 570, 295, 264, 1036, 3894, 6686, 11, 286, 1415, 281, 16500, 264, 5389, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2962285384391118, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0554579459130764}, {"id": 6, "seek": 2460, "start": 45.6, "end": 53.6, "text": " There will be no 5 terabyte database here or serialization of billions of nodes, which is going to make a little script.", "tokens": [51414, 821, 486, 312, 572, 1025, 1796, 34529, 8149, 510, 420, 17436, 2144, 295, 17375, 295, 13891, 11, 597, 307, 516, 281, 652, 257, 707, 5755, 13, 51814], "temperature": 0.0, "avg_logprob": -0.2962285384391118, "compression_ratio": 1.5275590551181102, "no_speech_prob": 0.0554579459130764}, {"id": 7, "seek": 5360, "start": 53.6, "end": 61.6, "text": " It's a bit of a Bob Ross talk, I guess, which is going on a journey together and have fun, discover.", "tokens": [50364, 467, 311, 257, 857, 295, 257, 6085, 16140, 751, 11, 286, 2041, 11, 597, 307, 516, 322, 257, 4671, 1214, 293, 362, 1019, 11, 4411, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09821070747813959, "compression_ratio": 1.7064676616915422, "no_speech_prob": 0.14380502700805664}, {"id": 8, "seek": 5360, "start": 61.6, "end": 72.6, "text": " And before I really start, we're going to try something experimental. We're going to try a little interactive demo at the end.", "tokens": [50764, 400, 949, 286, 534, 722, 11, 321, 434, 516, 281, 853, 746, 17069, 13, 492, 434, 516, 281, 853, 257, 707, 15141, 10723, 412, 264, 917, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09821070747813959, "compression_ratio": 1.7064676616915422, "no_speech_prob": 0.14380502700805664}, {"id": 9, "seek": 5360, "start": 72.6, "end": 78.6, "text": " We're going to write the script, but you're going to verify if the script that we're going to write actually works.", "tokens": [51314, 492, 434, 516, 281, 2464, 264, 5755, 11, 457, 291, 434, 516, 281, 16888, 498, 264, 5755, 300, 321, 434, 516, 281, 2464, 767, 1985, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09821070747813959, "compression_ratio": 1.7064676616915422, "no_speech_prob": 0.14380502700805664}, {"id": 10, "seek": 7860, "start": 78.6, "end": 87.6, "text": " So for this, for whoever wants to participate, you should consider downloading the Keogh's mobile app.", "tokens": [50364, 407, 337, 341, 11, 337, 11387, 2738, 281, 8197, 11, 291, 820, 1949, 32529, 264, 3189, 664, 71, 311, 6013, 724, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11939093771945225, "compression_ratio": 1.4298245614035088, "no_speech_prob": 0.04460645467042923}, {"id": 11, "seek": 7860, "start": 87.6, "end": 94.6, "text": " It's available on these locations. You can just get the APK from the CodeBerg repo.", "tokens": [50814, 467, 311, 2435, 322, 613, 9253, 13, 509, 393, 445, 483, 264, 5372, 42, 490, 264, 15549, 33, 17025, 49040, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11939093771945225, "compression_ratio": 1.4298245614035088, "no_speech_prob": 0.04460645467042923}, {"id": 12, "seek": 7860, "start": 94.6, "end": 100.6, "text": " Alright, let's get started. So if someone makes a claim, how do we verify that?", "tokens": [51164, 2798, 11, 718, 311, 483, 1409, 13, 407, 498, 1580, 1669, 257, 3932, 11, 577, 360, 321, 16888, 300, 30, 51464], "temperature": 0.0, "avg_logprob": -0.11939093771945225, "compression_ratio": 1.4298245614035088, "no_speech_prob": 0.04460645467042923}, {"id": 13, "seek": 7860, "start": 100.6, "end": 104.6, "text": " Well, quite simply, with a proof. What do I mean with that?", "tokens": [51464, 1042, 11, 1596, 2935, 11, 365, 257, 8177, 13, 708, 360, 286, 914, 365, 300, 30, 51664], "temperature": 0.0, "avg_logprob": -0.11939093771945225, "compression_ratio": 1.4298245614035088, "no_speech_prob": 0.04460645467042923}, {"id": 14, "seek": 10460, "start": 104.6, "end": 110.6, "text": " So for example, if Alice lost her luggage and then Bob found it very conveniently, and then Alice says it's hers,", "tokens": [50364, 407, 337, 1365, 11, 498, 16004, 2731, 720, 27744, 293, 550, 6085, 1352, 309, 588, 44375, 11, 293, 550, 16004, 1619, 309, 311, 6820, 11, 50664], "temperature": 0.0, "avg_logprob": -0.11970564830734069, "compression_ratio": 1.7172774869109948, "no_speech_prob": 0.1797182559967041}, {"id": 15, "seek": 10460, "start": 110.6, "end": 121.6, "text": " then Bob asked for the proof, of course, because, you know, and then Alice fiddles with the little dials and unlocks the luggage,", "tokens": [50664, 550, 6085, 2351, 337, 264, 8177, 11, 295, 1164, 11, 570, 11, 291, 458, 11, 293, 550, 16004, 283, 14273, 904, 365, 264, 707, 5502, 82, 293, 517, 34896, 264, 27744, 11, 51214], "temperature": 0.0, "avg_logprob": -0.11970564830734069, "compression_ratio": 1.7172774869109948, "no_speech_prob": 0.1797182559967041}, {"id": 16, "seek": 10460, "start": 121.6, "end": 128.6, "text": " and then she verified that the claim was indeed true, that it is indeed her luggage.", "tokens": [51214, 293, 550, 750, 31197, 300, 264, 3932, 390, 6451, 2074, 11, 300, 309, 307, 6451, 720, 27744, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11970564830734069, "compression_ratio": 1.7172774869109948, "no_speech_prob": 0.1797182559967041}, {"id": 17, "seek": 12860, "start": 128.6, "end": 133.6, "text": " So now we want to know, is this also true over the internet? Can we do this over the internet?", "tokens": [50364, 407, 586, 321, 528, 281, 458, 11, 307, 341, 611, 2074, 670, 264, 4705, 30, 1664, 321, 360, 341, 670, 264, 4705, 30, 50614], "temperature": 0.0, "avg_logprob": -0.09252329261935487, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06638262420892715}, {"id": 18, "seek": 12860, "start": 133.6, "end": 144.6, "text": " Well, yes, we can. We can claim things over the internet, but humans travel rather poorly through ethernet cables,", "tokens": [50614, 1042, 11, 2086, 11, 321, 393, 13, 492, 393, 3932, 721, 670, 264, 4705, 11, 457, 6255, 3147, 2831, 22271, 807, 37096, 7129, 17555, 11, 51164], "temperature": 0.0, "avg_logprob": -0.09252329261935487, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06638262420892715}, {"id": 19, "seek": 12860, "start": 144.6, "end": 149.6, "text": " so we need to find a way to connect Alice and Bob in a different way, so that Alice can make her claim,", "tokens": [51164, 370, 321, 643, 281, 915, 257, 636, 281, 1745, 16004, 293, 6085, 294, 257, 819, 636, 11, 370, 300, 16004, 393, 652, 720, 3932, 11, 51414], "temperature": 0.0, "avg_logprob": -0.09252329261935487, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06638262420892715}, {"id": 20, "seek": 12860, "start": 149.6, "end": 154.6, "text": " and Bob can verify that claim, each in their own space and time.", "tokens": [51414, 293, 6085, 393, 16888, 300, 3932, 11, 1184, 294, 641, 1065, 1901, 293, 565, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09252329261935487, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06638262420892715}, {"id": 21, "seek": 15460, "start": 154.6, "end": 159.6, "text": " And so for this, we're going to use cryptographic signatures.", "tokens": [50364, 400, 370, 337, 341, 11, 321, 434, 516, 281, 764, 9844, 12295, 32322, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1253671646118164, "compression_ratio": 1.6267942583732058, "no_speech_prob": 0.0609431229531765}, {"id": 22, "seek": 15460, "start": 159.6, "end": 165.6, "text": " So, yeah, we could talk for a long time about cryptographic signatures.", "tokens": [50614, 407, 11, 1338, 11, 321, 727, 751, 337, 257, 938, 565, 466, 9844, 12295, 32322, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1253671646118164, "compression_ratio": 1.6267942583732058, "no_speech_prob": 0.0609431229531765}, {"id": 23, "seek": 15460, "start": 165.6, "end": 174.6, "text": " For the purpose of this talk, let's just... the important stuff is basically just like a real signature, but digital,", "tokens": [50914, 1171, 264, 4334, 295, 341, 751, 11, 718, 311, 445, 485, 264, 1021, 1507, 307, 1936, 445, 411, 257, 957, 13397, 11, 457, 4562, 11, 51364], "temperature": 0.0, "avg_logprob": -0.1253671646118164, "compression_ratio": 1.6267942583732058, "no_speech_prob": 0.0609431229531765}, {"id": 24, "seek": 15460, "start": 174.6, "end": 182.6, "text": " but the big difference, I guess, is that it's really difficult to forge, so that's good.", "tokens": [51364, 457, 264, 955, 2649, 11, 286, 2041, 11, 307, 300, 309, 311, 534, 2252, 281, 38741, 11, 370, 300, 311, 665, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1253671646118164, "compression_ratio": 1.6267942583732058, "no_speech_prob": 0.0609431229531765}, {"id": 25, "seek": 18260, "start": 183.6, "end": 188.6, "text": " And in short, we have a secret key, which we will use to sign documents, text documents,", "tokens": [50414, 400, 294, 2099, 11, 321, 362, 257, 4054, 2141, 11, 597, 321, 486, 764, 281, 1465, 8512, 11, 2487, 8512, 11, 50664], "temperature": 0.0, "avg_logprob": -0.13468004124505178, "compression_ratio": 1.7429718875502007, "no_speech_prob": 0.03069121763110161}, {"id": 26, "seek": 18260, "start": 188.6, "end": 193.6, "text": " with a public key that we will use to verify those signatures, combine those two keys, and you have a key pair,", "tokens": [50664, 365, 257, 1908, 2141, 300, 321, 486, 764, 281, 16888, 729, 32322, 11, 10432, 729, 732, 9317, 11, 293, 291, 362, 257, 2141, 6119, 11, 50914], "temperature": 0.0, "avg_logprob": -0.13468004124505178, "compression_ratio": 1.7429718875502007, "no_speech_prob": 0.03069121763110161}, {"id": 27, "seek": 18260, "start": 193.6, "end": 198.6, "text": " and each key pair is identified by a unique fingerprint.", "tokens": [50914, 293, 1184, 2141, 6119, 307, 9234, 538, 257, 3845, 30715, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13468004124505178, "compression_ratio": 1.7429718875502007, "no_speech_prob": 0.03069121763110161}, {"id": 28, "seek": 18260, "start": 198.6, "end": 203.6, "text": " All right. So let's try and work out this process then.", "tokens": [51164, 1057, 558, 13, 407, 718, 311, 853, 293, 589, 484, 341, 1399, 550, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13468004124505178, "compression_ratio": 1.7429718875502007, "no_speech_prob": 0.03069121763110161}, {"id": 29, "seek": 18260, "start": 203.6, "end": 211.6, "text": " So let's say that I will write this text document, which just says that this is my account on the Fediverse, on Macedon,", "tokens": [51414, 407, 718, 311, 584, 300, 286, 486, 2464, 341, 2487, 4166, 11, 597, 445, 1619, 300, 341, 307, 452, 2696, 322, 264, 7772, 5376, 11, 322, 45603, 266, 11, 51814], "temperature": 0.0, "avg_logprob": -0.13468004124505178, "compression_ratio": 1.7429718875502007, "no_speech_prob": 0.03069121763110161}, {"id": 30, "seek": 21160, "start": 211.6, "end": 221.6, "text": " now I will sign it with a key, which has this conveniently fingerprint, which starts with very familiar letters.", "tokens": [50364, 586, 286, 486, 1465, 309, 365, 257, 2141, 11, 597, 575, 341, 44375, 30715, 11, 597, 3719, 365, 588, 4963, 7825, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12065270435379212, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.003235268872231245}, {"id": 31, "seek": 21160, "start": 221.6, "end": 227.6, "text": " And now the signature itself is just zeros and ones. We're not going to worry about that.", "tokens": [50864, 400, 586, 264, 13397, 2564, 307, 445, 35193, 293, 2306, 13, 492, 434, 406, 516, 281, 3292, 466, 300, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12065270435379212, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.003235268872231245}, {"id": 32, "seek": 21160, "start": 227.6, "end": 233.6, "text": " So now I will give this text document, my claim, together with the signature to my friend,", "tokens": [51164, 407, 586, 286, 486, 976, 341, 2487, 4166, 11, 452, 3932, 11, 1214, 365, 264, 13397, 281, 452, 1277, 11, 51464], "temperature": 0.0, "avg_logprob": -0.12065270435379212, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.003235268872231245}, {"id": 33, "seek": 21160, "start": 233.6, "end": 237.6, "text": " and my friend will use those two pieces of data.", "tokens": [51464, 293, 452, 1277, 486, 764, 729, 732, 3755, 295, 1412, 13, 51664], "temperature": 0.0, "avg_logprob": -0.12065270435379212, "compression_ratio": 1.5981308411214954, "no_speech_prob": 0.003235268872231245}, {"id": 34, "seek": 23760, "start": 237.6, "end": 242.6, "text": " They will first verify that indeed the signature corresponds to this text document,", "tokens": [50364, 814, 486, 700, 16888, 300, 6451, 264, 13397, 23249, 281, 341, 2487, 4166, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08308446684549022, "compression_ratio": 1.70935960591133, "no_speech_prob": 0.00806417502462864}, {"id": 35, "seek": 23760, "start": 242.6, "end": 248.6, "text": " and once that is done, they're going to my actual Fediverse account, and then they're going to read in the bio,", "tokens": [50614, 293, 1564, 300, 307, 1096, 11, 436, 434, 516, 281, 452, 3539, 7772, 5376, 2696, 11, 293, 550, 436, 434, 516, 281, 1401, 294, 264, 12198, 11, 50914], "temperature": 0.0, "avg_logprob": -0.08308446684549022, "compression_ratio": 1.70935960591133, "no_speech_prob": 0.00806417502462864}, {"id": 36, "seek": 23760, "start": 248.6, "end": 253.6, "text": " oh, this person indeed wrote in their bio that they have this key.", "tokens": [50914, 1954, 11, 341, 954, 6451, 4114, 294, 641, 12198, 300, 436, 362, 341, 2141, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08308446684549022, "compression_ratio": 1.70935960591133, "no_speech_prob": 0.00806417502462864}, {"id": 37, "seek": 23760, "start": 253.6, "end": 260.6, "text": " So that is the proof with which I verify my claim, and that it is indeed my account.", "tokens": [51164, 407, 300, 307, 264, 8177, 365, 597, 286, 16888, 452, 3932, 11, 293, 300, 309, 307, 6451, 452, 2696, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08308446684549022, "compression_ratio": 1.70935960591133, "no_speech_prob": 0.00806417502462864}, {"id": 38, "seek": 26060, "start": 260.6, "end": 268.6, "text": " So now we're going to do that whole process. We're going to try to create an online identity with just 100 lines of rust.", "tokens": [50364, 407, 586, 321, 434, 516, 281, 360, 300, 1379, 1399, 13, 492, 434, 516, 281, 853, 281, 1884, 364, 2950, 6575, 365, 445, 2319, 3876, 295, 15259, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09915930095471834, "compression_ratio": 1.6384976525821595, "no_speech_prob": 0.1122233048081398}, {"id": 39, "seek": 26060, "start": 268.6, "end": 276.6, "text": " I did need five dependencies. I tried to minimize it, but without these, it will be a lot more than 100 lines of code.", "tokens": [50764, 286, 630, 643, 1732, 36606, 13, 286, 3031, 281, 17522, 309, 11, 457, 1553, 613, 11, 309, 486, 312, 257, 688, 544, 813, 2319, 3876, 295, 3089, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09915930095471834, "compression_ratio": 1.6384976525821595, "no_speech_prob": 0.1122233048081398}, {"id": 40, "seek": 26060, "start": 276.6, "end": 279.6, "text": " So yeah, these will be it.", "tokens": [51164, 407, 1338, 11, 613, 486, 312, 309, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09915930095471834, "compression_ratio": 1.6384976525821595, "no_speech_prob": 0.1122233048081398}, {"id": 41, "seek": 26060, "start": 279.6, "end": 285.6, "text": " So we're going to generate a key. This is where the elliptic curve part comes in.", "tokens": [51314, 407, 321, 434, 516, 281, 8460, 257, 2141, 13, 639, 307, 689, 264, 8284, 22439, 299, 7605, 644, 1487, 294, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09915930095471834, "compression_ratio": 1.6384976525821595, "no_speech_prob": 0.1122233048081398}, {"id": 42, "seek": 28560, "start": 286.6, "end": 297.6, "text": " Elliptic curves are a technique of creating cryptographic keys, and in this case, we're using these specifically the P256 curve,", "tokens": [50414, 8353, 22439, 299, 19490, 366, 257, 6532, 295, 4084, 9844, 12295, 9317, 11, 293, 294, 341, 1389, 11, 321, 434, 1228, 613, 4682, 264, 430, 6074, 21, 7605, 11, 50964], "temperature": 0.0, "avg_logprob": -0.10795334867528968, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.028078928589820862}, {"id": 43, "seek": 28560, "start": 297.6, "end": 303.6, "text": " but all this just to say, yeah, we're using these two lines of code just to create an entire cryptographic key.", "tokens": [50964, 457, 439, 341, 445, 281, 584, 11, 1338, 11, 321, 434, 1228, 613, 732, 3876, 295, 3089, 445, 281, 1884, 364, 2302, 9844, 12295, 2141, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10795334867528968, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.028078928589820862}, {"id": 44, "seek": 28560, "start": 303.6, "end": 308.6, "text": " So this includes a public key and a secret key.", "tokens": [51264, 407, 341, 5974, 257, 1908, 2141, 293, 257, 4054, 2141, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10795334867528968, "compression_ratio": 1.6089385474860336, "no_speech_prob": 0.028078928589820862}, {"id": 45, "seek": 30860, "start": 308.6, "end": 315.6, "text": " Now, of course, I said every key pair has a fingerprint, so that's what this code does.", "tokens": [50364, 823, 11, 295, 1164, 11, 286, 848, 633, 2141, 6119, 575, 257, 30715, 11, 370, 300, 311, 437, 341, 3089, 775, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10563883217432166, "compression_ratio": 1.6990740740740742, "no_speech_prob": 0.006931912619620562}, {"id": 46, "seek": 30860, "start": 315.6, "end": 319.6, "text": " It looks a bit complicated. This is the most complicated part.", "tokens": [50714, 467, 1542, 257, 857, 6179, 13, 639, 307, 264, 881, 6179, 644, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10563883217432166, "compression_ratio": 1.6990740740740742, "no_speech_prob": 0.006931912619620562}, {"id": 47, "seek": 30860, "start": 319.6, "end": 328.6, "text": " So the most important part about this script is basically we'll just get some data from the key, we'll get some parameters from the key,", "tokens": [50914, 407, 264, 881, 1021, 644, 466, 341, 5755, 307, 1936, 321, 603, 445, 483, 512, 1412, 490, 264, 2141, 11, 321, 603, 483, 512, 9834, 490, 264, 2141, 11, 51364], "temperature": 0.0, "avg_logprob": -0.10563883217432166, "compression_ratio": 1.6990740740740742, "no_speech_prob": 0.006931912619620562}, {"id": 48, "seek": 30860, "start": 328.6, "end": 333.6, "text": " and then we're going to hash it, and that is how we get the actual fingerprint.", "tokens": [51364, 293, 550, 321, 434, 516, 281, 22019, 309, 11, 293, 300, 307, 577, 321, 483, 264, 3539, 30715, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10563883217432166, "compression_ratio": 1.6990740740740742, "no_speech_prob": 0.006931912619620562}, {"id": 49, "seek": 33360, "start": 333.6, "end": 337.6, "text": " Now we're going to collect the identity data.", "tokens": [50364, 823, 321, 434, 516, 281, 2500, 264, 6575, 1412, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1586320854368664, "compression_ratio": 1.702127659574468, "no_speech_prob": 0.009569133631885052}, {"id": 50, "seek": 33360, "start": 337.6, "end": 341.6, "text": " So we're going to create what we call a profile.", "tokens": [50564, 407, 321, 434, 516, 281, 1884, 437, 321, 818, 257, 7964, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1586320854368664, "compression_ratio": 1.702127659574468, "no_speech_prob": 0.009569133631885052}, {"id": 51, "seek": 33360, "start": 341.6, "end": 348.6, "text": " Just a profile is just a name, some other metadata about the person, and claims, multiple claims.", "tokens": [50764, 1449, 257, 7964, 307, 445, 257, 1315, 11, 512, 661, 26603, 466, 264, 954, 11, 293, 9441, 11, 3866, 9441, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1586320854368664, "compression_ratio": 1.702127659574468, "no_speech_prob": 0.009569133631885052}, {"id": 52, "seek": 33360, "start": 348.6, "end": 352.6, "text": " So I'm just going to continue with the same example as before.", "tokens": [51114, 407, 286, 478, 445, 516, 281, 2354, 365, 264, 912, 1365, 382, 949, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1586320854368664, "compression_ratio": 1.702127659574468, "no_speech_prob": 0.009569133631885052}, {"id": 53, "seek": 33360, "start": 352.6, "end": 356.6, "text": " I'm just going to claim that that is my account on the Internet.", "tokens": [51314, 286, 478, 445, 516, 281, 3932, 300, 300, 307, 452, 2696, 322, 264, 7703, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1586320854368664, "compression_ratio": 1.702127659574468, "no_speech_prob": 0.009569133631885052}, {"id": 54, "seek": 35660, "start": 357.6, "end": 363.6, "text": " Now we need a way to encode all this data, because we need the text document and we need a signature.", "tokens": [50414, 823, 321, 643, 257, 636, 281, 2058, 1429, 439, 341, 1412, 11, 570, 321, 643, 264, 2487, 4166, 293, 321, 643, 257, 13397, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09618945874665913, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.007923644036054611}, {"id": 55, "seek": 35660, "start": 363.6, "end": 374.6, "text": " So for this, we're going to use a JSON web token, which for the purposes of this talk is just a convenient way of combining a document and a signature.", "tokens": [50714, 407, 337, 341, 11, 321, 434, 516, 281, 764, 257, 31828, 3670, 14862, 11, 597, 337, 264, 9932, 295, 341, 751, 307, 445, 257, 10851, 636, 295, 21928, 257, 4166, 293, 257, 13397, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09618945874665913, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.007923644036054611}, {"id": 56, "seek": 35660, "start": 374.6, "end": 378.6, "text": " We'll need three parts. We'll need a header, a payload, and a signature.", "tokens": [51264, 492, 603, 643, 1045, 3166, 13, 492, 603, 643, 257, 23117, 11, 257, 30918, 11, 293, 257, 13397, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09618945874665913, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.007923644036054611}, {"id": 57, "seek": 35660, "start": 378.6, "end": 381.6, "text": " So let's make each of those.", "tokens": [51464, 407, 718, 311, 652, 1184, 295, 729, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09618945874665913, "compression_ratio": 1.714975845410628, "no_speech_prob": 0.007923644036054611}, {"id": 58, "seek": 38160, "start": 381.6, "end": 390.6, "text": " Oh yeah, some quick notes. So whenever you see that are you at ID, that is just the namespace that we use for the creation of the tokens.", "tokens": [50364, 876, 1338, 11, 512, 1702, 5570, 13, 407, 5699, 291, 536, 300, 366, 291, 412, 7348, 11, 300, 307, 445, 264, 5288, 17940, 300, 321, 764, 337, 264, 8016, 295, 264, 22667, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17947726983290452, "compression_ratio": 1.6512605042016806, "no_speech_prob": 0.004952187649905682}, {"id": 59, "seek": 38160, "start": 390.6, "end": 394.6, "text": " And sometimes you will see JWS instead of JWT.", "tokens": [50814, 400, 2171, 291, 486, 536, 508, 12508, 2602, 295, 508, 54, 51, 13, 51014], "temperature": 0.0, "avg_logprob": -0.17947726983290452, "compression_ratio": 1.6512605042016806, "no_speech_prob": 0.004952187649905682}, {"id": 60, "seek": 38160, "start": 394.6, "end": 400.6, "text": " Those are different, but for the purposes of this talk, we'll just consider them the same.", "tokens": [51014, 3950, 366, 819, 11, 457, 337, 264, 9932, 295, 341, 751, 11, 321, 603, 445, 1949, 552, 264, 912, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17947726983290452, "compression_ratio": 1.6512605042016806, "no_speech_prob": 0.004952187649905682}, {"id": 61, "seek": 38160, "start": 400.6, "end": 403.6, "text": " So let's create a header.", "tokens": [51314, 407, 718, 311, 1884, 257, 23117, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17947726983290452, "compression_ratio": 1.6512605042016806, "no_speech_prob": 0.004952187649905682}, {"id": 62, "seek": 38160, "start": 403.6, "end": 409.6, "text": " So the header is just a little bit of metadata about the key that is creating this profile.", "tokens": [51464, 407, 264, 23117, 307, 445, 257, 707, 857, 295, 26603, 466, 264, 2141, 300, 307, 4084, 341, 7964, 13, 51764], "temperature": 0.0, "avg_logprob": -0.17947726983290452, "compression_ratio": 1.6512605042016806, "no_speech_prob": 0.004952187649905682}, {"id": 63, "seek": 40960, "start": 409.6, "end": 415.6, "text": " So we'll set the fingerprints and we'll set the actual key. We'll just give it.", "tokens": [50364, 407, 321, 603, 992, 264, 42170, 293, 321, 603, 992, 264, 3539, 2141, 13, 492, 603, 445, 976, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1470212535697873, "compression_ratio": 1.8405172413793103, "no_speech_prob": 0.024561060592532158}, {"id": 64, "seek": 40960, "start": 415.6, "end": 419.6, "text": " And the public key, of course, not the secret key, because that one should be secret.", "tokens": [50664, 400, 264, 1908, 2141, 11, 295, 1164, 11, 406, 264, 4054, 2141, 11, 570, 300, 472, 820, 312, 4054, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1470212535697873, "compression_ratio": 1.8405172413793103, "no_speech_prob": 0.024561060592532158}, {"id": 65, "seek": 40960, "start": 419.6, "end": 423.6, "text": " We'll create the payload. The payload is the actual profile itself.", "tokens": [50864, 492, 603, 1884, 264, 30918, 13, 440, 30918, 307, 264, 3539, 7964, 2564, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1470212535697873, "compression_ratio": 1.8405172413793103, "no_speech_prob": 0.024561060592532158}, {"id": 66, "seek": 40960, "start": 423.6, "end": 429.6, "text": " So we're going to say like, oh, it's the type as a profile of this token.", "tokens": [51064, 407, 321, 434, 516, 281, 584, 411, 11, 1954, 11, 309, 311, 264, 2010, 382, 257, 7964, 295, 341, 14862, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1470212535697873, "compression_ratio": 1.8405172413793103, "no_speech_prob": 0.024561060592532158}, {"id": 67, "seek": 40960, "start": 429.6, "end": 435.6, "text": " We're going to say line 10. We're going to say like, oh, what is the name? It will be the name and the identity claims.", "tokens": [51364, 492, 434, 516, 281, 584, 1622, 1266, 13, 492, 434, 516, 281, 584, 411, 11, 1954, 11, 437, 307, 264, 1315, 30, 467, 486, 312, 264, 1315, 293, 264, 6575, 9441, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1470212535697873, "compression_ratio": 1.8405172413793103, "no_speech_prob": 0.024561060592532158}, {"id": 68, "seek": 43560, "start": 435.6, "end": 445.6, "text": " Don't mind all the payload set claims. That's just to confuse you, because JWT also uses the term claim in a different way.", "tokens": [50364, 1468, 380, 1575, 439, 264, 30918, 992, 9441, 13, 663, 311, 445, 281, 28584, 291, 11, 570, 508, 54, 51, 611, 4960, 264, 1433, 3932, 294, 257, 819, 636, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09583746535437447, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.019224757328629494}, {"id": 69, "seek": 43560, "start": 445.6, "end": 447.6, "text": " Just to make it easy.", "tokens": [50864, 1449, 281, 652, 309, 1858, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09583746535437447, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.019224757328629494}, {"id": 70, "seek": 43560, "start": 447.6, "end": 452.6, "text": " Now that we have the header and we have the payload, we're going to sign the two. That's what we do here.", "tokens": [50964, 823, 300, 321, 362, 264, 23117, 293, 321, 362, 264, 30918, 11, 321, 434, 516, 281, 1465, 264, 732, 13, 663, 311, 437, 321, 360, 510, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09583746535437447, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.019224757328629494}, {"id": 71, "seek": 43560, "start": 452.6, "end": 457.6, "text": " So line three, we get our key that we built earlier, generated earlier.", "tokens": [51214, 407, 1622, 1045, 11, 321, 483, 527, 2141, 300, 321, 3094, 3071, 11, 10833, 3071, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09583746535437447, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.019224757328629494}, {"id": 72, "seek": 43560, "start": 457.6, "end": 463.6, "text": " And in line four and five, we're going to use it to sign the payload and the header.", "tokens": [51464, 400, 294, 1622, 1451, 293, 1732, 11, 321, 434, 516, 281, 764, 309, 281, 1465, 264, 30918, 293, 264, 23117, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09583746535437447, "compression_ratio": 1.7586206896551724, "no_speech_prob": 0.019224757328629494}, {"id": 73, "seek": 46360, "start": 463.6, "end": 467.6, "text": " And with that, we are done. We have our profile.", "tokens": [50364, 400, 365, 300, 11, 321, 366, 1096, 13, 492, 362, 527, 7964, 13, 50564], "temperature": 0.0, "avg_logprob": -0.07006350065532484, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.02325742319226265}, {"id": 74, "seek": 46360, "start": 467.6, "end": 471.6, "text": " So now, if you would like to copy this, write this over.", "tokens": [50564, 407, 586, 11, 498, 291, 576, 411, 281, 5055, 341, 11, 2464, 341, 670, 13, 50764], "temperature": 0.0, "avg_logprob": -0.07006350065532484, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.02325742319226265}, {"id": 75, "seek": 46360, "start": 471.6, "end": 477.6, "text": " Yeah, that's not convenient. So we need to do a second part. We need to do a second step.", "tokens": [50764, 865, 11, 300, 311, 406, 10851, 13, 407, 321, 643, 281, 360, 257, 1150, 644, 13, 492, 643, 281, 360, 257, 1150, 1823, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07006350065532484, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.02325742319226265}, {"id": 76, "seek": 46360, "start": 477.6, "end": 487.6, "text": " I need to get this from my computer to your phone, to your device, whatever, so that you can verify for yourself that I do indeed have that account.", "tokens": [51064, 286, 643, 281, 483, 341, 490, 452, 3820, 281, 428, 2593, 11, 281, 428, 4302, 11, 2035, 11, 370, 300, 291, 393, 16888, 337, 1803, 300, 286, 360, 6451, 362, 300, 2696, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07006350065532484, "compression_ratio": 1.6538461538461537, "no_speech_prob": 0.02325742319226265}, {"id": 77, "seek": 48760, "start": 487.6, "end": 493.6, "text": " So we need a way to transport, I guess, documents and preferably sign it.", "tokens": [50364, 407, 321, 643, 257, 636, 281, 5495, 11, 286, 2041, 11, 8512, 293, 45916, 1465, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07332948928183698, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.013169360347092152}, {"id": 78, "seek": 48760, "start": 493.6, "end": 498.6, "text": " You guess where this is going? We're going to use another JSON web token.", "tokens": [50664, 509, 2041, 689, 341, 307, 516, 30, 492, 434, 516, 281, 764, 1071, 31828, 3670, 14862, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07332948928183698, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.013169360347092152}, {"id": 79, "seek": 48760, "start": 498.6, "end": 503.6, "text": " So we're actually going to reuse the same header, because we're going to use the same key.", "tokens": [50914, 407, 321, 434, 767, 516, 281, 26225, 264, 912, 23117, 11, 570, 321, 434, 516, 281, 764, 264, 912, 2141, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07332948928183698, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.013169360347092152}, {"id": 80, "seek": 48760, "start": 503.6, "end": 508.6, "text": " So we'll just use the same metadata about the key.", "tokens": [51164, 407, 321, 603, 445, 764, 264, 912, 26603, 466, 264, 2141, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07332948928183698, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.013169360347092152}, {"id": 81, "seek": 48760, "start": 508.6, "end": 513.6, "text": " We're going to create a second payload, which will be very similar.", "tokens": [51414, 492, 434, 516, 281, 1884, 257, 1150, 30918, 11, 597, 486, 312, 588, 2531, 13, 51664], "temperature": 0.0, "avg_logprob": -0.07332948928183698, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.013169360347092152}, {"id": 82, "seek": 51360, "start": 513.6, "end": 517.6, "text": " This time, instead of being a profile, it would just be a request.", "tokens": [50364, 639, 565, 11, 2602, 295, 885, 257, 7964, 11, 309, 576, 445, 312, 257, 5308, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08331625802176339, "compression_ratio": 1.6844660194174756, "no_speech_prob": 0.017544668167829514}, {"id": 83, "seek": 51360, "start": 517.6, "end": 522.6, "text": " And we're just going to ask the server to create this profile.", "tokens": [50564, 400, 321, 434, 445, 516, 281, 1029, 264, 7154, 281, 1884, 341, 7964, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08331625802176339, "compression_ratio": 1.6844660194174756, "no_speech_prob": 0.017544668167829514}, {"id": 84, "seek": 51360, "start": 522.6, "end": 528.6, "text": " And then in line 14 and 15, we're actually going to give that document that we created earlier.", "tokens": [50814, 400, 550, 294, 1622, 3499, 293, 2119, 11, 321, 434, 767, 516, 281, 976, 300, 4166, 300, 321, 2942, 3071, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08331625802176339, "compression_ratio": 1.6844660194174756, "no_speech_prob": 0.017544668167829514}, {"id": 85, "seek": 51360, "start": 528.6, "end": 532.6, "text": " We're just going to give it to the server.", "tokens": [51114, 492, 434, 445, 516, 281, 976, 309, 281, 264, 7154, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08331625802176339, "compression_ratio": 1.6844660194174756, "no_speech_prob": 0.017544668167829514}, {"id": 86, "seek": 51360, "start": 532.6, "end": 540.6, "text": " And this second outer JSON web token, we are actually going to upload it to...", "tokens": [51314, 400, 341, 1150, 10847, 31828, 3670, 14862, 11, 321, 366, 767, 516, 281, 6580, 309, 281, 485, 51714], "temperature": 0.0, "avg_logprob": -0.08331625802176339, "compression_ratio": 1.6844660194174756, "no_speech_prob": 0.017544668167829514}, {"id": 87, "seek": 54060, "start": 540.6, "end": 551.6, "text": " Sorry, we're going to sign it first, so we'll have a similar string, a piece of data that we can actually then send to the server.", "tokens": [50364, 4919, 11, 321, 434, 516, 281, 1465, 309, 700, 11, 370, 321, 603, 362, 257, 2531, 6798, 11, 257, 2522, 295, 1412, 300, 321, 393, 767, 550, 2845, 281, 264, 7154, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09498977072444963, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.007309030741453171}, {"id": 88, "seek": 54060, "start": 551.6, "end": 557.6, "text": " So this is where we're going to send it to what we call an ASPE server that we're working on.", "tokens": [50914, 407, 341, 307, 689, 321, 434, 516, 281, 2845, 309, 281, 437, 321, 818, 364, 7469, 5208, 7154, 300, 321, 434, 1364, 322, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09498977072444963, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.007309030741453171}, {"id": 89, "seek": 54060, "start": 557.6, "end": 564.6, "text": " And it's just basically a way of storing and exchanging these kinds of profiles.", "tokens": [51214, 400, 309, 311, 445, 1936, 257, 636, 295, 26085, 293, 6210, 9741, 613, 3685, 295, 23693, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09498977072444963, "compression_ratio": 1.5561224489795917, "no_speech_prob": 0.007309030741453171}, {"id": 90, "seek": 56460, "start": 564.6, "end": 568.6, "text": " And yeah, that is basically it, what you need to do.", "tokens": [50364, 400, 1338, 11, 300, 307, 1936, 309, 11, 437, 291, 643, 281, 360, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 91, "seek": 56460, "start": 568.6, "end": 574.6, "text": " Those were the lines of code that you need to actually make an entire profile, make a claim,", "tokens": [50564, 3950, 645, 264, 3876, 295, 3089, 300, 291, 643, 281, 767, 652, 364, 2302, 7964, 11, 652, 257, 3932, 11, 50864], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 92, "seek": 56460, "start": 574.6, "end": 584.6, "text": " and make it so that people could verify for themselves with their own devices, with their own methods.", "tokens": [50864, 293, 652, 309, 370, 300, 561, 727, 16888, 337, 2969, 365, 641, 1065, 5759, 11, 365, 641, 1065, 7150, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 93, "seek": 56460, "start": 584.6, "end": 587.6, "text": " So yeah, it is a fun script.", "tokens": [51364, 407, 1338, 11, 309, 307, 257, 1019, 5755, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 94, "seek": 56460, "start": 587.6, "end": 589.6, "text": " You can actually just try it at home.", "tokens": [51514, 509, 393, 767, 445, 853, 309, 412, 1280, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 95, "seek": 56460, "start": 589.6, "end": 593.6, "text": " Or as I said, we could try it live on stage.", "tokens": [51614, 1610, 382, 286, 848, 11, 321, 727, 853, 309, 1621, 322, 3233, 13, 51814], "temperature": 0.0, "avg_logprob": -0.08792067055750374, "compression_ratio": 1.643835616438356, "no_speech_prob": 0.11175072938203812}, {"id": 96, "seek": 59360, "start": 593.6, "end": 596.6, "text": " That is what we're going to try right now.", "tokens": [50364, 663, 307, 437, 321, 434, 516, 281, 853, 558, 586, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10355634400338838, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.01206943392753601}, {"id": 97, "seek": 59360, "start": 596.6, "end": 609.6, "text": " So I did prepare it somewhere.", "tokens": [50514, 407, 286, 630, 5940, 309, 4079, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10355634400338838, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.01206943392753601}, {"id": 98, "seek": 59360, "start": 609.6, "end": 615.6, "text": " So you'll see that apart from some cosmetic changes, if it loads...", "tokens": [51164, 407, 291, 603, 536, 300, 4936, 490, 512, 35828, 2962, 11, 498, 309, 12668, 485, 51464], "temperature": 0.0, "avg_logprob": -0.10355634400338838, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.01206943392753601}, {"id": 99, "seek": 59360, "start": 615.6, "end": 619.6, "text": " Yeah, that's the big risk of doing this on the stage.", "tokens": [51464, 865, 11, 300, 311, 264, 955, 3148, 295, 884, 341, 322, 264, 3233, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10355634400338838, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.01206943392753601}, {"id": 100, "seek": 59360, "start": 619.6, "end": 621.6, "text": " We'll give it a second.", "tokens": [51664, 492, 603, 976, 309, 257, 1150, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10355634400338838, "compression_ratio": 1.4129032258064516, "no_speech_prob": 0.01206943392753601}, {"id": 101, "seek": 62160, "start": 621.6, "end": 628.6, "text": " Apart from some cosmetic changes, it is largely the same script.", "tokens": [50364, 24111, 490, 512, 35828, 2962, 11, 309, 307, 11611, 264, 912, 5755, 13, 50714], "temperature": 0.0, "avg_logprob": -0.06029700736204783, "compression_ratio": 1.3, "no_speech_prob": 0.01643477939069271}, {"id": 102, "seek": 62160, "start": 628.6, "end": 634.6, "text": " And you'll see that it will fit neatly within 100 lines.", "tokens": [50714, 400, 291, 603, 536, 300, 309, 486, 3318, 36634, 1951, 2319, 3876, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06029700736204783, "compression_ratio": 1.3, "no_speech_prob": 0.01643477939069271}, {"id": 103, "seek": 62160, "start": 634.6, "end": 637.6, "text": " And it might not.", "tokens": [51014, 400, 309, 1062, 406, 13, 51164], "temperature": 0.0, "avg_logprob": -0.06029700736204783, "compression_ratio": 1.3, "no_speech_prob": 0.01643477939069271}, {"id": 104, "seek": 62160, "start": 637.6, "end": 645.6, "text": " We'll give it another second.", "tokens": [51164, 492, 603, 976, 309, 1071, 1150, 13, 51564], "temperature": 0.0, "avg_logprob": -0.06029700736204783, "compression_ratio": 1.3, "no_speech_prob": 0.01643477939069271}, {"id": 105, "seek": 64560, "start": 645.6, "end": 648.6, "text": " And if it...", "tokens": [50364, 400, 498, 309, 485, 50514], "temperature": 0.0, "avg_logprob": -0.1681679842764871, "compression_ratio": 1.328125, "no_speech_prob": 0.02960776723921299}, {"id": 106, "seek": 64560, "start": 648.6, "end": 652.6, "text": " Alright, well, maybe it won't do it.", "tokens": [50514, 2798, 11, 731, 11, 1310, 309, 1582, 380, 360, 309, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1681679842764871, "compression_ratio": 1.328125, "no_speech_prob": 0.02960776723921299}, {"id": 107, "seek": 64560, "start": 652.6, "end": 660.6, "text": " It would have been phenomenal, I can promise you.", "tokens": [50714, 467, 576, 362, 668, 17778, 11, 286, 393, 6228, 291, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1681679842764871, "compression_ratio": 1.328125, "no_speech_prob": 0.02960776723921299}, {"id": 108, "seek": 64560, "start": 660.6, "end": 664.6, "text": " Alright, I'll reload it once and then...", "tokens": [51114, 2798, 11, 286, 603, 25628, 309, 1564, 293, 550, 485, 51314], "temperature": 0.0, "avg_logprob": -0.1681679842764871, "compression_ratio": 1.328125, "no_speech_prob": 0.02960776723921299}, {"id": 109, "seek": 64560, "start": 664.6, "end": 673.6, "text": " I do have a sort of a backup.", "tokens": [51314, 286, 360, 362, 257, 1333, 295, 257, 14807, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1681679842764871, "compression_ratio": 1.328125, "no_speech_prob": 0.02960776723921299}, {"id": 110, "seek": 67360, "start": 673.6, "end": 678.6, "text": " Alright, it's not playing game.", "tokens": [50364, 2798, 11, 309, 311, 406, 2433, 1216, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1451929523831322, "compression_ratio": 1.2164948453608246, "no_speech_prob": 0.03045496717095375}, {"id": 111, "seek": 67360, "start": 678.6, "end": 684.6, "text": " Alright, so let's go back to the presentation.", "tokens": [50614, 2798, 11, 370, 718, 311, 352, 646, 281, 264, 5860, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1451929523831322, "compression_ratio": 1.2164948453608246, "no_speech_prob": 0.03045496717095375}, {"id": 112, "seek": 67360, "start": 684.6, "end": 693.6, "text": " I think it's this one.", "tokens": [50914, 286, 519, 309, 311, 341, 472, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1451929523831322, "compression_ratio": 1.2164948453608246, "no_speech_prob": 0.03045496717095375}, {"id": 113, "seek": 67360, "start": 693.6, "end": 702.6, "text": " I don't... wait.", "tokens": [51364, 286, 500, 380, 485, 1699, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1451929523831322, "compression_ratio": 1.2164948453608246, "no_speech_prob": 0.03045496717095375}, {"id": 114, "seek": 70260, "start": 702.6, "end": 705.6, "text": " I have lost the presentation.", "tokens": [50364, 286, 362, 2731, 264, 5860, 13, 50514], "temperature": 0.0, "avg_logprob": -0.21686138047112358, "compression_ratio": 1.087719298245614, "no_speech_prob": 0.017365410923957825}, {"id": 115, "seek": 70260, "start": 705.6, "end": 718.6, "text": " That's a different presentation.", "tokens": [50514, 663, 311, 257, 819, 5860, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21686138047112358, "compression_ratio": 1.087719298245614, "no_speech_prob": 0.017365410923957825}, {"id": 116, "seek": 71860, "start": 718.6, "end": 724.6, "text": " What?", "tokens": [50364, 708, 30, 50664], "temperature": 0.0, "avg_logprob": -0.1550436019897461, "compression_ratio": 1.3455882352941178, "no_speech_prob": 0.023007923737168312}, {"id": 117, "seek": 71860, "start": 724.6, "end": 734.6, "text": " That was not supposed to happen.", "tokens": [50664, 663, 390, 406, 3442, 281, 1051, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1550436019897461, "compression_ratio": 1.3455882352941178, "no_speech_prob": 0.023007923737168312}, {"id": 118, "seek": 71860, "start": 734.6, "end": 737.6, "text": " Yeah, I don't know what's happening.", "tokens": [51164, 865, 11, 286, 500, 380, 458, 437, 311, 2737, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1550436019897461, "compression_ratio": 1.3455882352941178, "no_speech_prob": 0.023007923737168312}, {"id": 119, "seek": 71860, "start": 737.6, "end": 739.6, "text": " But basically, yeah, this would have been...", "tokens": [51314, 583, 1936, 11, 1338, 11, 341, 576, 362, 668, 485, 51414], "temperature": 0.0, "avg_logprob": -0.1550436019897461, "compression_ratio": 1.3455882352941178, "no_speech_prob": 0.023007923737168312}, {"id": 120, "seek": 71860, "start": 739.6, "end": 742.6, "text": " We would have run scripts and we would have created a profile.", "tokens": [51414, 492, 576, 362, 1190, 23294, 293, 321, 576, 362, 2942, 257, 7964, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1550436019897461, "compression_ratio": 1.3455882352941178, "no_speech_prob": 0.023007923737168312}, {"id": 121, "seek": 74260, "start": 742.6, "end": 748.6, "text": " And then it would have presented you with a QR code", "tokens": [50364, 400, 550, 309, 576, 362, 8212, 291, 365, 257, 32784, 3089, 50664], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 122, "seek": 74260, "start": 748.6, "end": 750.6, "text": " that you could have scanned on your phone.", "tokens": [50664, 300, 291, 727, 362, 45089, 322, 428, 2593, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 123, "seek": 74260, "start": 750.6, "end": 752.6, "text": " And it would actually have worked.", "tokens": [50764, 400, 309, 576, 767, 362, 2732, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 124, "seek": 74260, "start": 752.6, "end": 756.6, "text": " And then you could have seen that the script would have created a profile", "tokens": [50864, 400, 550, 291, 727, 362, 1612, 300, 264, 5755, 576, 362, 2942, 257, 7964, 51064], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 125, "seek": 74260, "start": 756.6, "end": 759.6, "text": " that we built here on stage.", "tokens": [51064, 300, 321, 3094, 510, 322, 3233, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 126, "seek": 74260, "start": 759.6, "end": 761.6, "text": " Yeah, and just with a couple of lines of code,", "tokens": [51214, 865, 11, 293, 445, 365, 257, 1916, 295, 3876, 295, 3089, 11, 51314], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 127, "seek": 74260, "start": 761.6, "end": 765.6, "text": " we can work with cryptography, we can work with identity.", "tokens": [51314, 321, 393, 589, 365, 9844, 5820, 11, 321, 393, 589, 365, 6575, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 128, "seek": 74260, "start": 765.6, "end": 768.6, "text": " And, yeah, thank you very much.", "tokens": [51514, 400, 11, 1338, 11, 1309, 291, 588, 709, 13, 51664], "temperature": 0.0, "avg_logprob": -0.12269536018371582, "compression_ratio": 1.7655502392344498, "no_speech_prob": 0.4176580309867859}, {"id": 129, "seek": 76860, "start": 768.6, "end": 770.6, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.5597670475641886, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.6195179224014282}], "language": "en"}