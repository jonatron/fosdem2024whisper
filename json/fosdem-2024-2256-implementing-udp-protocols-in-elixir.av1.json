{"text": " There we go. I don't know about fun. We'll see. So thank you for the introduction. Hello, everyone. Nice to see you. Pretty happy that I can see so many Elixir developers on one place. I come from Croatia, where I think there is maybe 10 of us, and it's really hard to connect. So it's really nice to see that the community is growing worldwide. My name is Andre. I've been a developer for 11 years. I've been doing Elixir for the last three, two and a half-ish years. Previously, I've been a JavaScript developer. I decided that that's not going to fly anymore, that I need to have a life. So I switched to Elixir, and things have been going great. I'm a licensed accountant, building my own accounting software with Phoenix Liveview. It's going great. You should use it, Abandon React, use Liveview. It works for everything. I'm a vice president of the Croatian Association for Open Systems and Internet. I had to read that one out. We are very active in an open-source Croatian community. We organize an event. Please come talk to me after. I have some t-shirts. I have some stickers. And in the last slide, there is a coupon code for something percent off of the ticket. We're also going to try to have Sasha Urech this year there to come and talk. So if you want to mingle, please do come along. And I'm a member and the co-organizer of the conference. Let's start. So this is our plan today. We're going to go through the problem. As we're solving, we're going to fix it, and then we're going to talk why you should never do that things in Elixir or generally ever. So everything started. As things start, I was browsing Hacker News, and there were people doing a PP measuring context about their uptimes and who had the larger uptime. I update my servers, so I have a low uptime, but I wanted to be a part of that. And the idea was born. I want a fake uptime. How do you fake uptime? I didn't Google it. NTP server. I will just make the server ping for time, and every time it asks for time, I'll just downgrade the time, and hopefully it'll catch, and I will have a huge uptime. That's not how it works. You need to basically fake a kernel call. So maybe next year, I'm going to implement kernel modules in Elixir. It is possible, though. It is possible. I have a working proof of concept. You do, however, need a lower level language to call. I like solving these kinds of problems. So it's been super fun. Ever since I first applied at TopTel for a job, they gave me a task to implement the DNS server in JS. That's been super fun. So I wanted to see how it's done in Elixir. Spoiler alert, it's a lot easier and simpler and maintainable. And it's a cool topic to write about and talk about. This is a previous blog post. It's been featured in a couple of newsletters, which I'm still not sure why people like this, but maybe, hey, you share the same affinities as me. So the hardest thing was to discover the protocol. What's NTP? For those of you who might not know, it's a network time protocol. It is a terrible, oftenly abused protocol. Some of you might remember a couple of years back. It was used for a widespread DDoS attack. But it's one of the easiest ones to implement, so it turned out. So the first thing we need to do is we need to learn about the protocol. Now you can go and read RFC, but that's boring. I don't Google stuff, as it's obvious right now. So what I did, I just installed the TCP dump, NTP update in a virtual machine. I started up TCP dump and just updated the time. And I got the pick up file out. Now let's see how we read the pick up file. This is a very important part in implementing a protocol. So bear with me. This is how the packet looks like. If you love your life, unlike me, you'll probably use Wireshark. So it looks better. It's easier to browse, but this was also more fun. So let's get right into it. The first part, I've put up dots we should ignore it. That's the header of the UDP packet. This is something that's getting handled with us. If you remember the layers of TCP, the same thing applies to UDP as well. And the first parts are the hardware part, and then there is the network part. We can all ignore that, that will be handled for us by Elixir. So I just put dots in order not to confuse us. Everything else is super confusing anyways. So the first part, I'm just going to do this once. This is how you read the bytes. So this E3, you should convert to binary. And here we have something that we call flags. Here we have three flags. Those flags is something that you define as a protocol developer, or as whatever is the name of people defining protocols. So it's composed, this flag, this is three flags. So the first one is the leap here indicator. This is the NTP version and the packet mode. Now this packet mode is really important and you should remember that. So 011 is the client. So this is us asking for the time. And we will be making a server that responds. So you need to remember to flip this packet for shadowing. The next one is the clock stratum. Not important, we can ignore that. The pooling interval, this is how many packets will be sent, which is kind of telling that this kind of starts looking like a TCP, but whatever, you need to expect three. Not important, you can ignore that as well. And now we have a couple of flags. So we have the clock precision, the delay and dispersion. This is, since this is a VM, it doesn't look that all interesting. It's basically all zeros because it's lying about the time anyways. If you ran this on your computers and real laptops, you will see more details here. I've written some copious notes on that. So later go to this link and you will find a lot of links to the RFC and documentation if you really want to get into it. So let's continue. Now comes the more interesting parts, says he and there's all zeros. The first one is the reference ID. This is very important. This is how your server knows who asks for it. You can ignore it. The next part is the reference timestamp. So this is the timestamp we send to get actual time. Why it's zeros here? Because this is a client. The client does not need to tell the server it's time. You can however, the protocol allows it, but you don't need to. Next up is the origin timestamp. This is basically when the call was made or when the call was responded to. Again, you can send it as a client. You don't need to as a server, another story. The next part is the receive timestamp. This is actually when did we receive. This is very important for the server to send along because the client will then do some math between those three timestamps to get the actual timestamp. And this is the transmit timestamp. We need to return this as it is. Also foreshadowing, it took me way too much time to understand why I need to do this. It would be a lot easier if I read the RFC. Okay, so this was me at the point. After, this was after a couple of hours of things just not working, not understanding. I went through the documentation. Things started becoming a little more easier to understand. So let's get back to it. This is what we need. We need the reference ID and we need the transmit timestamp. Reference ID, again, repeating, this is very important to understand, is how we know to who to return the call to because you should keep some kind of a hash map or ETS tail or whatever. And the receive, the transmit timestamp you need to return. Otherwise, the client will return an error that it does not know how to calculate time because it diverged too much. So that's the main point. Okay, and this is where the fun part starts. If you ever did this with JavaScript, I should have included that slide. It's a lot of splitting on binary streams. It's extremely hard to read. And with Elixir, this is all that there is to it. So it's just pattern matching. And this was mind blowing to me. I know that Sasha has the whole chapter in his book about pattern matching on binary, I ignored it, I didn't kind of get it, but this is amazing. So what this does? I've decided to ignore the first part. Where is the mouse? I decided to ignore the first part. We don't need it. And I just ignore 12 bytes, right? Then we store the next four as the ID. Then we can ignore the rest 24. And then we just store the origin timestamp, the 8-1. That's all you need to do. When you receive a request, this is how you pattern match. Now imagine if you're developing your own protocol. This means that in a single line, you can basically parse the whole request that came to your server. Amazing. To me, this was mind blowing. I don't see too many mind blows. You either know this or don't think it's that interesting. But okay. So, and now we need to compile our response. We'll come to actual Elixir code in a second, don't worry. So, as you can see, we start with the receive timestamp as is. And now I've cheated here and you will see that I replied with the same two timestamps because I don't care about precision for this exercise. At this point, it was to me, it started becoming very obvious that whatever I returned, the uptime is not changing. So the level of this being fun started degrading rapidly. The only thing that was keeping me alive and to finish this little project was maybe I can get a blog post out of this. I don't know. Maybe some clout. So I stopped kind of caring. But yes, you should basically pull data from like a real clock source, like an atomic clock, a GPS clock, which is also kind of a fun thing to do because you can get an AliExpress those very cheap GPS USB modules, which are very easy to talk to and you can pull actual time from there. And it gives you the clock stratum. It gives you the precision and you can just dump it into it. So it is actually viable to create such a server in a language that I don't think it's best used for. But there we go. So we need to set again the reference, the origin and the receive timestamps now. The ID you will see later is basically the ID you respond with. Good practice started becoming just use your public IP as an ID because many NTP servers don't change their IPs at all. So it is a good idea to use it. It's not in the protocol, however. So you can do whatever you want. You can put Andre school there. And now let's create the actual UDP server in Elixir. By the way, it needs to run the port 123. I thought this was a joke. No, it's not. Pretty cool. So this can be done a lot better as I've learned later. But for posterity's sake, I decided to just continue on. If you use active false in this first line, you don't need to do a whole bunch of slides after. When I rewrote the slides after a meetup in Zagreb and I used active false, the whole presentation was kind of lacking for content. So I just left it in and decided, yes, we will do slides. And that's it. So let's use it. It's extremely simple to use. This will receive only one packet. If you put it active false, active true, it will receive many packets, whatever. So you need to open up a gen UDP server. You have the socket. What you then do is you can just pattern match on what you receive. We are mostly interested in the first part, like a real developer. I just ignore the errors and the closed states, whatever. Nobody cares about those anyways. And with the gen UDP send, you can send whatever. You can send strings even. That's it. This was also pretty mind blowing as an XJS developer. Just those condensed free lines in total is the whole UDP server. What? Just like a little side note, when I started learning Elixir, I was then, after JavaScript, I was a Python developer and a friend got me into learning Elixir. And one of my first revelations was, why was I writing so much code? I don't get it. So yes, this is all that there is to it. Let's create just like a simple server out of it. The first approach is, yes, let's just imitate something. So we have the init. And we'll just have a loop here. I forgot to call the actual loop, so don't forget to call the actual loop. So what this will do, just in a recursive fashion, every time it receives a packet, it will call itself again. That's it. To astound it a few here, this might look like a gen server, maybe. Yes, well, like everything in my life, I reinvented hot water, how we say in Croatian. So yes, let's make it into an actual gen server. So it's pretty simple. You can just use continue loop and have a handle continue. That's it. And don't forget to also include this part here, so you can actually start the gen server. In your supervision tree, in your application, for newbies in Elixir on the blog post, there is also a huge part how to start a new Elixir project that's not a Phoenix with the supervisor tree already set up. So you can go look at that. But if you have it set up, all you need to do is just include this child here and it'll get started and start working. And all that is super cool and fun, but where is the actual protocol? Where is the actual meat of the presentation? Well, it's also in the spirit of Elixir extremely simple. So we have one function here called generate NTP response. And you remember that pattern matching that I was raving on about? Well, I ignore everything, basically. I started and I just used the origin timestamp so I can do it in the function head as simple as this. We take the system time, which is the most precise way of getting time in the world. So everybody knows that. We store that as a receive timestamp. Doing a little bit of, thank you. I'll speed up. So I'm doing a little bit of code here to make it a bit more easier to read. Remember this sigil. If I'll have time, I'll show you how to implement your own sigils. Never do that again as well. But yes, this is way easier to read. So you just set up the header. Trust me, this is how you do it. Don't read too much into it. The ID is the private IP of that VM. And now comes the fun part. You can concatenate bit strings like anything else in the lixir. So this is how you do it. This NTP constant is really important. I have no idea what it is. I read the documentation. This is how you convert time vice versa. Why they need it? I don't understand. I'm very bad at math. So if somebody else knows it, please come and talk to me. Enlighten me. And again, you just compile the end result in a bit string. You return that instead of that hello world before that's it. So you can just generate NTP response from the request. You get the packet. You reply with it. Ta-da. There we go. All of this code, if you want to play around. And if you found mistakes, then you can go there and complain and do pull requests for a project that doesn't matter. But I would be more than happy to see what you guys think and what you feel about this. So come and see it. I still have a bit of more time. So let's implement the custom sigil and show how, again, how I should read more documentation. So let's create the sigil with tilde b, or whatever it was, quickly line b. It's pretty easy to do as well. You just create a module. You name it sigil and underscore and whatever letter you want that there to be. Now you can even do uppercase letter sites, I think, from the newest version of Elixir. And you can do even more letters than one. So that's cool. And you can just import it as is, and then it's available in that module. Now let's implement the actual parsing. So this is a string. And now here comes the me over complicating stuff. So I uppercase everything. I split everything. Then I do some mapping to get rid of multiple lines and whatever. And then reject empty spaces and then join everything. And I decode it. Well, I blame, blame, blame. You can just replace with a reg accent. Just decode it. But this looks way more fun anyways. Like everybody likes complications. So yes. That's it. A lot of the things I covered here I learned from this amazing book right over here from my friend Sasha Yurich. He gave us the 35% off code for the new version of the book. Go buy it. Even if you have the old versions support him. I think he is the foundation of learning Elixir in today's world. I've had so much fun with this book. Didn't reference it at all while I was doing this. I should have, but never mind. And also here is the coupon code 20% off. Here is the coupon code for the conference where we will try to also bring everybody who does Elixir there. So if you want to do, if you want to come over and hang out, or if you have open source projects in Elixir, do come talk about it with me. I have a Gantt T-shirt. I have some stickers here. Call for Spickle Flyers. And that's it. Thank you very much. You're welcome. Thank you. You're welcome.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 13.32, "text": " There we go.", "tokens": [50364, 821, 321, 352, 13, 51030], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 1, "seek": 0, "start": 13.32, "end": 14.48, "text": " I don't know about fun.", "tokens": [51030, 286, 500, 380, 458, 466, 1019, 13, 51088], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 2, "seek": 0, "start": 14.48, "end": 15.48, "text": " We'll see.", "tokens": [51088, 492, 603, 536, 13, 51138], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 3, "seek": 0, "start": 15.48, "end": 21.96, "text": " So thank you for the introduction.", "tokens": [51138, 407, 1309, 291, 337, 264, 9339, 13, 51462], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 4, "seek": 0, "start": 21.96, "end": 22.96, "text": " Hello, everyone.", "tokens": [51462, 2425, 11, 1518, 13, 51512], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 5, "seek": 0, "start": 22.96, "end": 23.96, "text": " Nice to see you.", "tokens": [51512, 5490, 281, 536, 291, 13, 51562], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 6, "seek": 0, "start": 23.96, "end": 29.36, "text": " Pretty happy that I can see so many Elixir developers on one place.", "tokens": [51562, 10693, 2055, 300, 286, 393, 536, 370, 867, 2699, 970, 347, 8849, 322, 472, 1081, 13, 51832], "temperature": 0.0, "avg_logprob": -0.30530526902940536, "compression_ratio": 1.2777777777777777, "no_speech_prob": 0.16131484508514404}, {"id": 7, "seek": 2936, "start": 29.36, "end": 37.0, "text": " I come from Croatia, where I think there is maybe 10 of us, and it's really hard to connect.", "tokens": [50364, 286, 808, 490, 50186, 11, 689, 286, 519, 456, 307, 1310, 1266, 295, 505, 11, 293, 309, 311, 534, 1152, 281, 1745, 13, 50746], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 8, "seek": 2936, "start": 37.0, "end": 42.04, "text": " So it's really nice to see that the community is growing worldwide.", "tokens": [50746, 407, 309, 311, 534, 1481, 281, 536, 300, 264, 1768, 307, 4194, 13485, 13, 50998], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 9, "seek": 2936, "start": 42.04, "end": 43.04, "text": " My name is Andre.", "tokens": [50998, 1222, 1315, 307, 20667, 13, 51048], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 10, "seek": 2936, "start": 43.04, "end": 44.92, "text": " I've been a developer for 11 years.", "tokens": [51048, 286, 600, 668, 257, 10754, 337, 2975, 924, 13, 51142], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 11, "seek": 2936, "start": 44.92, "end": 50.08, "text": " I've been doing Elixir for the last three, two and a half-ish years.", "tokens": [51142, 286, 600, 668, 884, 2699, 970, 347, 337, 264, 1036, 1045, 11, 732, 293, 257, 1922, 12, 742, 924, 13, 51400], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 12, "seek": 2936, "start": 50.08, "end": 52.760000000000005, "text": " Previously, I've been a JavaScript developer.", "tokens": [51400, 33606, 11, 286, 600, 668, 257, 15778, 10754, 13, 51534], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 13, "seek": 2936, "start": 52.760000000000005, "end": 56.519999999999996, "text": " I decided that that's not going to fly anymore, that I need to have a life.", "tokens": [51534, 286, 3047, 300, 300, 311, 406, 516, 281, 3603, 3602, 11, 300, 286, 643, 281, 362, 257, 993, 13, 51722], "temperature": 0.0, "avg_logprob": -0.18487094381581182, "compression_ratio": 1.6135458167330676, "no_speech_prob": 0.07094485312700272}, {"id": 14, "seek": 5652, "start": 56.52, "end": 60.160000000000004, "text": " So I switched to Elixir, and things have been going great.", "tokens": [50364, 407, 286, 16858, 281, 2699, 970, 347, 11, 293, 721, 362, 668, 516, 869, 13, 50546], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 15, "seek": 5652, "start": 60.160000000000004, "end": 65.8, "text": " I'm a licensed accountant, building my own accounting software with Phoenix Liveview.", "tokens": [50546, 286, 478, 257, 25225, 43898, 11, 2390, 452, 1065, 19163, 4722, 365, 18383, 10385, 1759, 13, 50828], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 16, "seek": 5652, "start": 65.8, "end": 66.8, "text": " It's going great.", "tokens": [50828, 467, 311, 516, 869, 13, 50878], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 17, "seek": 5652, "start": 66.8, "end": 71.24000000000001, "text": " You should use it, Abandon React, use Liveview.", "tokens": [50878, 509, 820, 764, 309, 11, 2847, 8518, 30644, 11, 764, 10385, 1759, 13, 51100], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 18, "seek": 5652, "start": 71.24000000000001, "end": 72.24000000000001, "text": " It works for everything.", "tokens": [51100, 467, 1985, 337, 1203, 13, 51150], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 19, "seek": 5652, "start": 72.24000000000001, "end": 76.64, "text": " I'm a vice president of the Croatian Association for Open Systems and Internet.", "tokens": [51150, 286, 478, 257, 11964, 3868, 295, 264, 37614, 952, 10734, 337, 7238, 27059, 293, 7703, 13, 51370], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 20, "seek": 5652, "start": 76.64, "end": 79.32000000000001, "text": " I had to read that one out.", "tokens": [51370, 286, 632, 281, 1401, 300, 472, 484, 13, 51504], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 21, "seek": 5652, "start": 79.32000000000001, "end": 83.16, "text": " We are very active in an open-source Croatian community.", "tokens": [51504, 492, 366, 588, 4967, 294, 364, 1269, 12, 41676, 37614, 952, 1768, 13, 51696], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 22, "seek": 5652, "start": 83.16, "end": 84.52000000000001, "text": " We organize an event.", "tokens": [51696, 492, 13859, 364, 2280, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 23, "seek": 5652, "start": 84.52000000000001, "end": 85.60000000000001, "text": " Please come talk to me after.", "tokens": [51764, 2555, 808, 751, 281, 385, 934, 13, 51818], "temperature": 0.0, "avg_logprob": -0.1977074432373047, "compression_ratio": 1.6200716845878136, "no_speech_prob": 0.1184660866856575}, {"id": 24, "seek": 8560, "start": 85.6, "end": 86.6, "text": " I have some t-shirts.", "tokens": [50364, 286, 362, 512, 256, 12, 25892, 13, 50414], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 25, "seek": 8560, "start": 86.6, "end": 87.6, "text": " I have some stickers.", "tokens": [50414, 286, 362, 512, 21019, 13, 50464], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 26, "seek": 8560, "start": 87.6, "end": 93.11999999999999, "text": " And in the last slide, there is a coupon code for something percent off of the ticket.", "tokens": [50464, 400, 294, 264, 1036, 4137, 11, 456, 307, 257, 33390, 3089, 337, 746, 3043, 766, 295, 264, 10550, 13, 50740], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 27, "seek": 8560, "start": 93.11999999999999, "end": 97.52, "text": " We're also going to try to have Sasha Urech this year there to come and talk.", "tokens": [50740, 492, 434, 611, 516, 281, 853, 281, 362, 29276, 624, 265, 339, 341, 1064, 456, 281, 808, 293, 751, 13, 50960], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 28, "seek": 8560, "start": 97.52, "end": 99.96, "text": " So if you want to mingle, please do come along.", "tokens": [50960, 407, 498, 291, 528, 281, 275, 26209, 11, 1767, 360, 808, 2051, 13, 51082], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 29, "seek": 8560, "start": 99.96, "end": 103.32, "text": " And I'm a member and the co-organizer of the conference.", "tokens": [51082, 400, 286, 478, 257, 4006, 293, 264, 598, 12, 12372, 6545, 295, 264, 7586, 13, 51250], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 30, "seek": 8560, "start": 103.32, "end": 104.96, "text": " Let's start.", "tokens": [51250, 961, 311, 722, 13, 51332], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 31, "seek": 8560, "start": 104.96, "end": 107.75999999999999, "text": " So this is our plan today.", "tokens": [51332, 407, 341, 307, 527, 1393, 965, 13, 51472], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 32, "seek": 8560, "start": 107.75999999999999, "end": 109.6, "text": " We're going to go through the problem.", "tokens": [51472, 492, 434, 516, 281, 352, 807, 264, 1154, 13, 51564], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 33, "seek": 8560, "start": 109.6, "end": 112.56, "text": " As we're solving, we're going to fix it, and then we're going to talk why you should", "tokens": [51564, 1018, 321, 434, 12606, 11, 321, 434, 516, 281, 3191, 309, 11, 293, 550, 321, 434, 516, 281, 751, 983, 291, 820, 51712], "temperature": 0.0, "avg_logprob": -0.19385484548715445, "compression_ratio": 1.7220216606498195, "no_speech_prob": 0.12043219804763794}, {"id": 34, "seek": 11256, "start": 112.56, "end": 117.56, "text": " never do that things in Elixir or generally ever.", "tokens": [50364, 1128, 360, 300, 721, 294, 2699, 970, 347, 420, 5101, 1562, 13, 50614], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 35, "seek": 11256, "start": 117.56, "end": 119.32000000000001, "text": " So everything started.", "tokens": [50614, 407, 1203, 1409, 13, 50702], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 36, "seek": 11256, "start": 119.32000000000001, "end": 124.68, "text": " As things start, I was browsing Hacker News, and there were people doing a PP measuring", "tokens": [50702, 1018, 721, 722, 11, 286, 390, 38602, 389, 23599, 7987, 11, 293, 456, 645, 561, 884, 257, 37369, 13389, 50970], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 37, "seek": 11256, "start": 124.68, "end": 129.92000000000002, "text": " context about their uptimes and who had the larger uptime.", "tokens": [50970, 4319, 466, 641, 493, 83, 1532, 293, 567, 632, 264, 4833, 493, 3766, 13, 51232], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 38, "seek": 11256, "start": 129.92000000000002, "end": 135.8, "text": " I update my servers, so I have a low uptime, but I wanted to be a part of that.", "tokens": [51232, 286, 5623, 452, 15909, 11, 370, 286, 362, 257, 2295, 493, 3766, 11, 457, 286, 1415, 281, 312, 257, 644, 295, 300, 13, 51526], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 39, "seek": 11256, "start": 135.8, "end": 136.8, "text": " And the idea was born.", "tokens": [51526, 400, 264, 1558, 390, 4232, 13, 51576], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 40, "seek": 11256, "start": 136.8, "end": 138.92000000000002, "text": " I want a fake uptime.", "tokens": [51576, 286, 528, 257, 7592, 493, 3766, 13, 51682], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 41, "seek": 11256, "start": 138.92000000000002, "end": 139.92000000000002, "text": " How do you fake uptime?", "tokens": [51682, 1012, 360, 291, 7592, 493, 3766, 30, 51732], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 42, "seek": 11256, "start": 139.92000000000002, "end": 141.28, "text": " I didn't Google it.", "tokens": [51732, 286, 994, 380, 3329, 309, 13, 51800], "temperature": 0.0, "avg_logprob": -0.19475495613227456, "compression_ratio": 1.6099585062240664, "no_speech_prob": 0.01881624385714531}, {"id": 43, "seek": 14128, "start": 141.72, "end": 142.52, "text": " NTP server.", "tokens": [50386, 426, 16804, 7154, 13, 50426], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 44, "seek": 14128, "start": 142.52, "end": 147.6, "text": " I will just make the server ping for time, and every time it asks for time, I'll just", "tokens": [50426, 286, 486, 445, 652, 264, 7154, 26151, 337, 565, 11, 293, 633, 565, 309, 8962, 337, 565, 11, 286, 603, 445, 50680], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 45, "seek": 14128, "start": 147.6, "end": 154.08, "text": " downgrade the time, and hopefully it'll catch, and I will have a huge uptime.", "tokens": [50680, 760, 8692, 264, 565, 11, 293, 4696, 309, 603, 3745, 11, 293, 286, 486, 362, 257, 2603, 493, 3766, 13, 51004], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 46, "seek": 14128, "start": 154.08, "end": 155.76, "text": " That's not how it works.", "tokens": [51004, 663, 311, 406, 577, 309, 1985, 13, 51088], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 47, "seek": 14128, "start": 155.76, "end": 158.56, "text": " You need to basically fake a kernel call.", "tokens": [51088, 509, 643, 281, 1936, 7592, 257, 28256, 818, 13, 51228], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 48, "seek": 14128, "start": 158.56, "end": 164.6, "text": " So maybe next year, I'm going to implement kernel modules in Elixir.", "tokens": [51228, 407, 1310, 958, 1064, 11, 286, 478, 516, 281, 4445, 28256, 16679, 294, 2699, 970, 347, 13, 51530], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 49, "seek": 14128, "start": 164.6, "end": 165.6, "text": " It is possible, though.", "tokens": [51530, 467, 307, 1944, 11, 1673, 13, 51580], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 50, "seek": 14128, "start": 165.6, "end": 166.6, "text": " It is possible.", "tokens": [51580, 467, 307, 1944, 13, 51630], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 51, "seek": 14128, "start": 166.6, "end": 168.12, "text": " I have a working proof of concept.", "tokens": [51630, 286, 362, 257, 1364, 8177, 295, 3410, 13, 51706], "temperature": 0.0, "avg_logprob": -0.20728778839111328, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.021602941676974297}, {"id": 52, "seek": 16812, "start": 168.12, "end": 171.88, "text": " You do, however, need a lower level language to call.", "tokens": [50364, 509, 360, 11, 4461, 11, 643, 257, 3126, 1496, 2856, 281, 818, 13, 50552], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 53, "seek": 16812, "start": 171.88, "end": 174.76, "text": " I like solving these kinds of problems.", "tokens": [50552, 286, 411, 12606, 613, 3685, 295, 2740, 13, 50696], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 54, "seek": 16812, "start": 174.76, "end": 176.76, "text": " So it's been super fun.", "tokens": [50696, 407, 309, 311, 668, 1687, 1019, 13, 50796], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 55, "seek": 16812, "start": 176.76, "end": 181.4, "text": " Ever since I first applied at TopTel for a job, they gave me a task to implement the", "tokens": [50796, 12123, 1670, 286, 700, 6456, 412, 8840, 51, 338, 337, 257, 1691, 11, 436, 2729, 385, 257, 5633, 281, 4445, 264, 51028], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 56, "seek": 16812, "start": 181.4, "end": 184.08, "text": " DNS server in JS.", "tokens": [51028, 35153, 7154, 294, 33063, 13, 51162], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 57, "seek": 16812, "start": 184.08, "end": 185.08, "text": " That's been super fun.", "tokens": [51162, 663, 311, 668, 1687, 1019, 13, 51212], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 58, "seek": 16812, "start": 185.08, "end": 188.52, "text": " So I wanted to see how it's done in Elixir.", "tokens": [51212, 407, 286, 1415, 281, 536, 577, 309, 311, 1096, 294, 2699, 970, 347, 13, 51384], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 59, "seek": 16812, "start": 188.52, "end": 193.04000000000002, "text": " Spoiler alert, it's a lot easier and simpler and maintainable.", "tokens": [51384, 45011, 5441, 9615, 11, 309, 311, 257, 688, 3571, 293, 18587, 293, 6909, 712, 13, 51610], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 60, "seek": 16812, "start": 193.04000000000002, "end": 195.76, "text": " And it's a cool topic to write about and talk about.", "tokens": [51610, 400, 309, 311, 257, 1627, 4829, 281, 2464, 466, 293, 751, 466, 13, 51746], "temperature": 0.0, "avg_logprob": -0.18953753299400455, "compression_ratio": 1.57421875, "no_speech_prob": 0.017978401854634285}, {"id": 61, "seek": 19576, "start": 195.76, "end": 197.76, "text": " This is a previous blog post.", "tokens": [50364, 639, 307, 257, 3894, 6968, 2183, 13, 50464], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 62, "seek": 19576, "start": 197.76, "end": 203.48, "text": " It's been featured in a couple of newsletters, which I'm still not sure why people like this,", "tokens": [50464, 467, 311, 668, 13822, 294, 257, 1916, 295, 2583, 2631, 1559, 11, 597, 286, 478, 920, 406, 988, 983, 561, 411, 341, 11, 50750], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 63, "seek": 19576, "start": 203.48, "end": 207.39999999999998, "text": " but maybe, hey, you share the same affinities as me.", "tokens": [50750, 457, 1310, 11, 4177, 11, 291, 2073, 264, 912, 2096, 259, 1088, 382, 385, 13, 50946], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 64, "seek": 19576, "start": 207.39999999999998, "end": 212.48, "text": " So the hardest thing was to discover the protocol.", "tokens": [50946, 407, 264, 13158, 551, 390, 281, 4411, 264, 10336, 13, 51200], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 65, "seek": 19576, "start": 212.48, "end": 213.48, "text": " What's NTP?", "tokens": [51200, 708, 311, 426, 16804, 30, 51250], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 66, "seek": 19576, "start": 213.48, "end": 217.04, "text": " For those of you who might not know, it's a network time protocol.", "tokens": [51250, 1171, 729, 295, 291, 567, 1062, 406, 458, 11, 309, 311, 257, 3209, 565, 10336, 13, 51428], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 67, "seek": 19576, "start": 217.04, "end": 220.07999999999998, "text": " It is a terrible, oftenly abused protocol.", "tokens": [51428, 467, 307, 257, 6237, 11, 2049, 356, 27075, 10336, 13, 51580], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 68, "seek": 19576, "start": 220.07999999999998, "end": 222.6, "text": " Some of you might remember a couple of years back.", "tokens": [51580, 2188, 295, 291, 1062, 1604, 257, 1916, 295, 924, 646, 13, 51706], "temperature": 0.0, "avg_logprob": -0.14261197629182235, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.06651978194713593}, {"id": 69, "seek": 22260, "start": 222.6, "end": 226.48, "text": " It was used for a widespread DDoS attack.", "tokens": [50364, 467, 390, 1143, 337, 257, 22679, 413, 7653, 50, 2690, 13, 50558], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 70, "seek": 22260, "start": 226.48, "end": 231.28, "text": " But it's one of the easiest ones to implement, so it turned out.", "tokens": [50558, 583, 309, 311, 472, 295, 264, 12889, 2306, 281, 4445, 11, 370, 309, 3574, 484, 13, 50798], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 71, "seek": 22260, "start": 231.28, "end": 234.92, "text": " So the first thing we need to do is we need to learn about the protocol.", "tokens": [50798, 407, 264, 700, 551, 321, 643, 281, 360, 307, 321, 643, 281, 1466, 466, 264, 10336, 13, 50980], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 72, "seek": 22260, "start": 234.92, "end": 237.2, "text": " Now you can go and read RFC, but that's boring.", "tokens": [50980, 823, 291, 393, 352, 293, 1401, 497, 18671, 11, 457, 300, 311, 9989, 13, 51094], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 73, "seek": 22260, "start": 237.2, "end": 241.44, "text": " I don't Google stuff, as it's obvious right now.", "tokens": [51094, 286, 500, 380, 3329, 1507, 11, 382, 309, 311, 6322, 558, 586, 13, 51306], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 74, "seek": 22260, "start": 241.44, "end": 246.76, "text": " So what I did, I just installed the TCP dump, NTP update in a virtual machine.", "tokens": [51306, 407, 437, 286, 630, 11, 286, 445, 8899, 264, 48965, 11430, 11, 426, 16804, 5623, 294, 257, 6374, 3479, 13, 51572], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 75, "seek": 22260, "start": 246.76, "end": 251.68, "text": " I started up TCP dump and just updated the time.", "tokens": [51572, 286, 1409, 493, 48965, 11430, 293, 445, 10588, 264, 565, 13, 51818], "temperature": 0.0, "avg_logprob": -0.15369871107198424, "compression_ratio": 1.565891472868217, "no_speech_prob": 0.010964905843138695}, {"id": 76, "seek": 25168, "start": 251.76000000000002, "end": 254.64000000000001, "text": " And I got the pick up file out.", "tokens": [50368, 400, 286, 658, 264, 1888, 493, 3991, 484, 13, 50512], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 77, "seek": 25168, "start": 254.64000000000001, "end": 257.96, "text": " Now let's see how we read the pick up file.", "tokens": [50512, 823, 718, 311, 536, 577, 321, 1401, 264, 1888, 493, 3991, 13, 50678], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 78, "seek": 25168, "start": 257.96, "end": 261.28000000000003, "text": " This is a very important part in implementing a protocol.", "tokens": [50678, 639, 307, 257, 588, 1021, 644, 294, 18114, 257, 10336, 13, 50844], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 79, "seek": 25168, "start": 261.28000000000003, "end": 262.92, "text": " So bear with me.", "tokens": [50844, 407, 6155, 365, 385, 13, 50926], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 80, "seek": 25168, "start": 262.92, "end": 265.08, "text": " This is how the packet looks like.", "tokens": [50926, 639, 307, 577, 264, 20300, 1542, 411, 13, 51034], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 81, "seek": 25168, "start": 265.08, "end": 269.2, "text": " If you love your life, unlike me, you'll probably use Wireshark.", "tokens": [51034, 759, 291, 959, 428, 993, 11, 8343, 385, 11, 291, 603, 1391, 764, 343, 3145, 71, 809, 13, 51240], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 82, "seek": 25168, "start": 269.2, "end": 270.2, "text": " So it looks better.", "tokens": [51240, 407, 309, 1542, 1101, 13, 51290], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 83, "seek": 25168, "start": 270.2, "end": 274.56, "text": " It's easier to browse, but this was also more fun.", "tokens": [51290, 467, 311, 3571, 281, 31442, 11, 457, 341, 390, 611, 544, 1019, 13, 51508], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 84, "seek": 25168, "start": 274.56, "end": 277.48, "text": " So let's get right into it.", "tokens": [51508, 407, 718, 311, 483, 558, 666, 309, 13, 51654], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 85, "seek": 25168, "start": 277.48, "end": 280.92, "text": " The first part, I've put up dots we should ignore it.", "tokens": [51654, 440, 700, 644, 11, 286, 600, 829, 493, 15026, 321, 820, 11200, 309, 13, 51826], "temperature": 0.0, "avg_logprob": -0.19823768615722656, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.026338988915085793}, {"id": 86, "seek": 28092, "start": 280.92, "end": 283.64000000000004, "text": " That's the header of the UDP packet.", "tokens": [50364, 663, 311, 264, 23117, 295, 264, 624, 11373, 20300, 13, 50500], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 87, "seek": 28092, "start": 283.64000000000004, "end": 286.08000000000004, "text": " This is something that's getting handled with us.", "tokens": [50500, 639, 307, 746, 300, 311, 1242, 18033, 365, 505, 13, 50622], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 88, "seek": 28092, "start": 286.08000000000004, "end": 292.24, "text": " If you remember the layers of TCP, the same thing applies to UDP as well.", "tokens": [50622, 759, 291, 1604, 264, 7914, 295, 48965, 11, 264, 912, 551, 13165, 281, 624, 11373, 382, 731, 13, 50930], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 89, "seek": 28092, "start": 292.24, "end": 295.68, "text": " And the first parts are the hardware part, and then there is the network part.", "tokens": [50930, 400, 264, 700, 3166, 366, 264, 8837, 644, 11, 293, 550, 456, 307, 264, 3209, 644, 13, 51102], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 90, "seek": 28092, "start": 295.68, "end": 299.16, "text": " We can all ignore that, that will be handled for us by Elixir.", "tokens": [51102, 492, 393, 439, 11200, 300, 11, 300, 486, 312, 18033, 337, 505, 538, 2699, 970, 347, 13, 51276], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 91, "seek": 28092, "start": 299.16, "end": 301.92, "text": " So I just put dots in order not to confuse us.", "tokens": [51276, 407, 286, 445, 829, 15026, 294, 1668, 406, 281, 28584, 505, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 92, "seek": 28092, "start": 303.12, "end": 305.8, "text": " Everything else is super confusing anyways.", "tokens": [51474, 5471, 1646, 307, 1687, 13181, 13448, 13, 51608], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 93, "seek": 28092, "start": 305.8, "end": 309.16, "text": " So the first part, I'm just going to do this once.", "tokens": [51608, 407, 264, 700, 644, 11, 286, 478, 445, 516, 281, 360, 341, 1564, 13, 51776], "temperature": 0.0, "avg_logprob": -0.12645738493136274, "compression_ratio": 1.6567164179104477, "no_speech_prob": 0.0010481240460649133}, {"id": 94, "seek": 30916, "start": 309.20000000000005, "end": 312.88000000000005, "text": " This is how you read the bytes.", "tokens": [50366, 639, 307, 577, 291, 1401, 264, 36088, 13, 50550], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 95, "seek": 30916, "start": 312.88000000000005, "end": 316.16, "text": " So this E3, you should convert to binary.", "tokens": [50550, 407, 341, 462, 18, 11, 291, 820, 7620, 281, 17434, 13, 50714], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 96, "seek": 30916, "start": 316.16, "end": 318.6, "text": " And here we have something that we call flags.", "tokens": [50714, 400, 510, 321, 362, 746, 300, 321, 818, 23265, 13, 50836], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 97, "seek": 30916, "start": 318.6, "end": 320.20000000000005, "text": " Here we have three flags.", "tokens": [50836, 1692, 321, 362, 1045, 23265, 13, 50916], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 98, "seek": 30916, "start": 320.20000000000005, "end": 324.56, "text": " Those flags is something that you define as a protocol developer, or", "tokens": [50916, 3950, 23265, 307, 746, 300, 291, 6964, 382, 257, 10336, 10754, 11, 420, 51134], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 99, "seek": 30916, "start": 324.56, "end": 330.6, "text": " as whatever is the name of people defining protocols.", "tokens": [51134, 382, 2035, 307, 264, 1315, 295, 561, 17827, 20618, 13, 51436], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 100, "seek": 30916, "start": 332.20000000000005, "end": 335.0, "text": " So it's composed, this flag, this is three flags.", "tokens": [51516, 407, 309, 311, 18204, 11, 341, 7166, 11, 341, 307, 1045, 23265, 13, 51656], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 101, "seek": 30916, "start": 335.0, "end": 337.48, "text": " So the first one is the leap here indicator.", "tokens": [51656, 407, 264, 700, 472, 307, 264, 19438, 510, 16961, 13, 51780], "temperature": 0.0, "avg_logprob": -0.19441438925386678, "compression_ratio": 1.6930232558139535, "no_speech_prob": 0.0006361669511534274}, {"id": 102, "seek": 33748, "start": 337.48, "end": 340.12, "text": " This is the NTP version and the packet mode.", "tokens": [50364, 639, 307, 264, 426, 16804, 3037, 293, 264, 20300, 4391, 13, 50496], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 103, "seek": 33748, "start": 340.12, "end": 343.0, "text": " Now this packet mode is really important and you should remember that.", "tokens": [50496, 823, 341, 20300, 4391, 307, 534, 1021, 293, 291, 820, 1604, 300, 13, 50640], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 104, "seek": 33748, "start": 343.0, "end": 345.52000000000004, "text": " So 011 is the client.", "tokens": [50640, 407, 1958, 5348, 307, 264, 6423, 13, 50766], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 105, "seek": 33748, "start": 345.52000000000004, "end": 348.20000000000005, "text": " So this is us asking for the time.", "tokens": [50766, 407, 341, 307, 505, 3365, 337, 264, 565, 13, 50900], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 106, "seek": 33748, "start": 348.20000000000005, "end": 350.64000000000004, "text": " And we will be making a server that responds.", "tokens": [50900, 400, 321, 486, 312, 1455, 257, 7154, 300, 27331, 13, 51022], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 107, "seek": 33748, "start": 350.64000000000004, "end": 354.08000000000004, "text": " So you need to remember to flip this packet for shadowing.", "tokens": [51022, 407, 291, 643, 281, 1604, 281, 7929, 341, 20300, 337, 8576, 278, 13, 51194], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 108, "seek": 33748, "start": 355.88, "end": 357.68, "text": " The next one is the clock stratum.", "tokens": [51284, 440, 958, 472, 307, 264, 7830, 23674, 449, 13, 51374], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 109, "seek": 33748, "start": 359.88, "end": 362.0, "text": " Not important, we can ignore that.", "tokens": [51484, 1726, 1021, 11, 321, 393, 11200, 300, 13, 51590], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 110, "seek": 33748, "start": 362.0, "end": 365.24, "text": " The pooling interval, this is how many packets will be sent,", "tokens": [51590, 440, 7005, 278, 15035, 11, 341, 307, 577, 867, 30364, 486, 312, 2279, 11, 51752], "temperature": 0.0, "avg_logprob": -0.2202630126685427, "compression_ratio": 1.7435897435897436, "no_speech_prob": 0.0012642618967220187}, {"id": 111, "seek": 36524, "start": 366.24, "end": 371.04, "text": " which is kind of telling that this kind of starts looking like a TCP,", "tokens": [50414, 597, 307, 733, 295, 3585, 300, 341, 733, 295, 3719, 1237, 411, 257, 48965, 11, 50654], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 112, "seek": 36524, "start": 371.04, "end": 372.68, "text": " but whatever, you need to expect three.", "tokens": [50654, 457, 2035, 11, 291, 643, 281, 2066, 1045, 13, 50736], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 113, "seek": 36524, "start": 373.96000000000004, "end": 376.28000000000003, "text": " Not important, you can ignore that as well.", "tokens": [50800, 1726, 1021, 11, 291, 393, 11200, 300, 382, 731, 13, 50916], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 114, "seek": 36524, "start": 376.28000000000003, "end": 378.32, "text": " And now we have a couple of flags.", "tokens": [50916, 400, 586, 321, 362, 257, 1916, 295, 23265, 13, 51018], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 115, "seek": 36524, "start": 378.32, "end": 382.04, "text": " So we have the clock precision, the delay and dispersion.", "tokens": [51018, 407, 321, 362, 264, 7830, 18356, 11, 264, 8577, 293, 24631, 313, 13, 51204], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 116, "seek": 36524, "start": 382.04, "end": 387.0, "text": " This is, since this is a VM, it doesn't look that all interesting.", "tokens": [51204, 639, 307, 11, 1670, 341, 307, 257, 18038, 11, 309, 1177, 380, 574, 300, 439, 1880, 13, 51452], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 117, "seek": 36524, "start": 387.0, "end": 390.08, "text": " It's basically all zeros because it's lying about the time anyways.", "tokens": [51452, 467, 311, 1936, 439, 35193, 570, 309, 311, 8493, 466, 264, 565, 13448, 13, 51606], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 118, "seek": 36524, "start": 390.08, "end": 392.52, "text": " If you ran this on your computers and real laptops,", "tokens": [51606, 759, 291, 5872, 341, 322, 428, 10807, 293, 957, 27642, 11, 51728], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 119, "seek": 36524, "start": 392.52, "end": 394.84000000000003, "text": " you will see more details here.", "tokens": [51728, 291, 486, 536, 544, 4365, 510, 13, 51844], "temperature": 0.0, "avg_logprob": -0.20042268691524381, "compression_ratio": 1.603448275862069, "no_speech_prob": 0.0011159115238115191}, {"id": 120, "seek": 39524, "start": 396.24, "end": 400.40000000000003, "text": " I've written some copious notes on that.", "tokens": [50414, 286, 600, 3720, 512, 2971, 851, 5570, 322, 300, 13, 50622], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 121, "seek": 39524, "start": 400.40000000000003, "end": 405.8, "text": " So later go to this link and you will find a lot of links to the RFC and", "tokens": [50622, 407, 1780, 352, 281, 341, 2113, 293, 291, 486, 915, 257, 688, 295, 6123, 281, 264, 497, 18671, 293, 50892], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 122, "seek": 39524, "start": 405.8, "end": 408.40000000000003, "text": " documentation if you really want to get into it.", "tokens": [50892, 14333, 498, 291, 534, 528, 281, 483, 666, 309, 13, 51022], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 123, "seek": 39524, "start": 410.64, "end": 411.96000000000004, "text": " So let's continue.", "tokens": [51134, 407, 718, 311, 2354, 13, 51200], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 124, "seek": 39524, "start": 411.96000000000004, "end": 416.96000000000004, "text": " Now comes the more interesting parts, says he and there's all zeros.", "tokens": [51200, 823, 1487, 264, 544, 1880, 3166, 11, 1619, 415, 293, 456, 311, 439, 35193, 13, 51450], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 125, "seek": 39524, "start": 416.96000000000004, "end": 418.96000000000004, "text": " The first one is the reference ID.", "tokens": [51450, 440, 700, 472, 307, 264, 6408, 7348, 13, 51550], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 126, "seek": 39524, "start": 418.96000000000004, "end": 420.28000000000003, "text": " This is very important.", "tokens": [51550, 639, 307, 588, 1021, 13, 51616], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 127, "seek": 39524, "start": 420.28000000000003, "end": 423.12, "text": " This is how your server knows who asks for it.", "tokens": [51616, 639, 307, 577, 428, 7154, 3255, 567, 8962, 337, 309, 13, 51758], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 128, "seek": 39524, "start": 423.12, "end": 423.72, "text": " You can ignore it.", "tokens": [51758, 509, 393, 11200, 309, 13, 51788], "temperature": 0.0, "avg_logprob": -0.22941150843540084, "compression_ratio": 1.5625, "no_speech_prob": 0.000273687212029472}, {"id": 129, "seek": 42524, "start": 425.36, "end": 427.64, "text": " The next part is the reference timestamp.", "tokens": [50370, 440, 958, 644, 307, 264, 6408, 49108, 1215, 13, 50484], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 130, "seek": 42524, "start": 427.64, "end": 432.32, "text": " So this is the timestamp we send to get actual time.", "tokens": [50484, 407, 341, 307, 264, 49108, 1215, 321, 2845, 281, 483, 3539, 565, 13, 50718], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 131, "seek": 42524, "start": 432.32, "end": 433.32, "text": " Why it's zeros here?", "tokens": [50718, 1545, 309, 311, 35193, 510, 30, 50768], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 132, "seek": 42524, "start": 433.32, "end": 434.56, "text": " Because this is a client.", "tokens": [50768, 1436, 341, 307, 257, 6423, 13, 50830], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 133, "seek": 42524, "start": 434.56, "end": 437.44, "text": " The client does not need to tell the server it's time.", "tokens": [50830, 440, 6423, 775, 406, 643, 281, 980, 264, 7154, 309, 311, 565, 13, 50974], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 134, "seek": 42524, "start": 437.44, "end": 440.44, "text": " You can however, the protocol allows it, but you don't need to.", "tokens": [50974, 509, 393, 4461, 11, 264, 10336, 4045, 309, 11, 457, 291, 500, 380, 643, 281, 13, 51124], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 135, "seek": 42524, "start": 441.6, "end": 443.72, "text": " Next up is the origin timestamp.", "tokens": [51182, 3087, 493, 307, 264, 4957, 49108, 1215, 13, 51288], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 136, "seek": 42524, "start": 443.72, "end": 449.88, "text": " This is basically when the call was made or when the call was responded to.", "tokens": [51288, 639, 307, 1936, 562, 264, 818, 390, 1027, 420, 562, 264, 818, 390, 15806, 281, 13, 51596], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 137, "seek": 42524, "start": 449.88, "end": 451.52, "text": " Again, you can send it as a client.", "tokens": [51596, 3764, 11, 291, 393, 2845, 309, 382, 257, 6423, 13, 51678], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 138, "seek": 42524, "start": 451.52, "end": 453.88, "text": " You don't need to as a server, another story.", "tokens": [51678, 509, 500, 380, 643, 281, 382, 257, 7154, 11, 1071, 1657, 13, 51796], "temperature": 0.0, "avg_logprob": -0.15914867488482526, "compression_ratio": 1.8333333333333333, "no_speech_prob": 0.0001971412420971319}, {"id": 139, "seek": 45388, "start": 454.88, "end": 456.96, "text": " The next part is the receive timestamp.", "tokens": [50414, 440, 958, 644, 307, 264, 4774, 49108, 1215, 13, 50518], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 140, "seek": 45388, "start": 456.96, "end": 458.76, "text": " This is actually when did we receive.", "tokens": [50518, 639, 307, 767, 562, 630, 321, 4774, 13, 50608], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 141, "seek": 45388, "start": 458.76, "end": 464.12, "text": " This is very important for the server to send along because the client will", "tokens": [50608, 639, 307, 588, 1021, 337, 264, 7154, 281, 2845, 2051, 570, 264, 6423, 486, 50876], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 142, "seek": 45388, "start": 464.12, "end": 468.92, "text": " then do some math between those three timestamps to get the actual timestamp.", "tokens": [50876, 550, 360, 512, 5221, 1296, 729, 1045, 49108, 23150, 281, 483, 264, 3539, 49108, 1215, 13, 51116], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 143, "seek": 45388, "start": 470.44, "end": 472.56, "text": " And this is the transmit timestamp.", "tokens": [51192, 400, 341, 307, 264, 17831, 49108, 1215, 13, 51298], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 144, "seek": 45388, "start": 472.56, "end": 475.4, "text": " We need to return this as it is.", "tokens": [51298, 492, 643, 281, 2736, 341, 382, 309, 307, 13, 51440], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 145, "seek": 45388, "start": 475.4, "end": 479.6, "text": " Also foreshadowing, it took me way too much time to understand why I need to do this.", "tokens": [51440, 2743, 2091, 2716, 345, 9637, 11, 309, 1890, 385, 636, 886, 709, 565, 281, 1223, 983, 286, 643, 281, 360, 341, 13, 51650], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 146, "seek": 45388, "start": 479.6, "end": 481.6, "text": " It would be a lot easier if I read the RFC.", "tokens": [51650, 467, 576, 312, 257, 688, 3571, 498, 286, 1401, 264, 497, 18671, 13, 51750], "temperature": 0.0, "avg_logprob": -0.20829495813092616, "compression_ratio": 1.72, "no_speech_prob": 0.0002694556606002152}, {"id": 147, "seek": 48160, "start": 482.6, "end": 485.0, "text": " Okay, so this was me at the point.", "tokens": [50414, 1033, 11, 370, 341, 390, 385, 412, 264, 935, 13, 50534], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 148, "seek": 48160, "start": 486.6, "end": 490.88, "text": " After, this was after a couple of hours of things just not working, not understanding.", "tokens": [50614, 2381, 11, 341, 390, 934, 257, 1916, 295, 2496, 295, 721, 445, 406, 1364, 11, 406, 3701, 13, 50828], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 149, "seek": 48160, "start": 490.88, "end": 492.56, "text": " I went through the documentation.", "tokens": [50828, 286, 1437, 807, 264, 14333, 13, 50912], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 150, "seek": 48160, "start": 492.56, "end": 497.40000000000003, "text": " Things started becoming a little more easier to understand.", "tokens": [50912, 9514, 1409, 5617, 257, 707, 544, 3571, 281, 1223, 13, 51154], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 151, "seek": 48160, "start": 498.6, "end": 500.0, "text": " So let's get back to it.", "tokens": [51214, 407, 718, 311, 483, 646, 281, 309, 13, 51284], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 152, "seek": 48160, "start": 501.04, "end": 502.96000000000004, "text": " This is what we need.", "tokens": [51336, 639, 307, 437, 321, 643, 13, 51432], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 153, "seek": 48160, "start": 502.96000000000004, "end": 507.52000000000004, "text": " We need the reference ID and we need the transmit timestamp.", "tokens": [51432, 492, 643, 264, 6408, 7348, 293, 321, 643, 264, 17831, 49108, 1215, 13, 51660], "temperature": 0.0, "avg_logprob": -0.2860086813740347, "compression_ratio": 1.5603864734299517, "no_speech_prob": 0.001500981394201517}, {"id": 154, "seek": 50752, "start": 508.52, "end": 512.52, "text": " Reference ID, again, repeating, this is very important to understand,", "tokens": [50414, 1300, 5158, 7348, 11, 797, 11, 18617, 11, 341, 307, 588, 1021, 281, 1223, 11, 50614], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 155, "seek": 50752, "start": 512.52, "end": 517.28, "text": " is how we know to who to return the call to because you should keep some kind of", "tokens": [50614, 307, 577, 321, 458, 281, 567, 281, 2736, 264, 818, 281, 570, 291, 820, 1066, 512, 733, 295, 50852], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 156, "seek": 50752, "start": 517.28, "end": 519.68, "text": " a hash map or ETS tail or whatever.", "tokens": [50852, 257, 22019, 4471, 420, 462, 7327, 6838, 420, 2035, 13, 50972], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 157, "seek": 50752, "start": 520.68, "end": 523.6, "text": " And the receive, the transmit timestamp you need to return.", "tokens": [51022, 400, 264, 4774, 11, 264, 17831, 49108, 1215, 291, 643, 281, 2736, 13, 51168], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 158, "seek": 50752, "start": 523.6, "end": 528.6, "text": " Otherwise, the client will return an error that it does not know how to calculate time", "tokens": [51168, 10328, 11, 264, 6423, 486, 2736, 364, 6713, 300, 309, 775, 406, 458, 577, 281, 8873, 565, 51418], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 159, "seek": 50752, "start": 528.6, "end": 530.92, "text": " because it diverged too much.", "tokens": [51418, 570, 309, 18558, 3004, 886, 709, 13, 51534], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 160, "seek": 50752, "start": 530.92, "end": 532.4399999999999, "text": " So that's the main point.", "tokens": [51534, 407, 300, 311, 264, 2135, 935, 13, 51610], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 161, "seek": 50752, "start": 533.72, "end": 536.52, "text": " Okay, and this is where the fun part starts.", "tokens": [51674, 1033, 11, 293, 341, 307, 689, 264, 1019, 644, 3719, 13, 51814], "temperature": 0.0, "avg_logprob": -0.30197365802267323, "compression_ratio": 1.6133828996282529, "no_speech_prob": 0.000743640644941479}, {"id": 162, "seek": 53752, "start": 537.92, "end": 543.8, "text": " If you ever did this with JavaScript, I should have included that slide.", "tokens": [50384, 759, 291, 1562, 630, 341, 365, 15778, 11, 286, 820, 362, 5556, 300, 4137, 13, 50678], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 163, "seek": 53752, "start": 543.8, "end": 547.0, "text": " It's a lot of splitting on binary streams.", "tokens": [50678, 467, 311, 257, 688, 295, 30348, 322, 17434, 15842, 13, 50838], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 164, "seek": 53752, "start": 547.0, "end": 549.0, "text": " It's extremely hard to read.", "tokens": [50838, 467, 311, 4664, 1152, 281, 1401, 13, 50938], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 165, "seek": 53752, "start": 549.0, "end": 552.4, "text": " And with Elixir, this is all that there is to it.", "tokens": [50938, 400, 365, 2699, 970, 347, 11, 341, 307, 439, 300, 456, 307, 281, 309, 13, 51108], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 166, "seek": 53752, "start": 552.4, "end": 554.92, "text": " So it's just pattern matching.", "tokens": [51108, 407, 309, 311, 445, 5102, 14324, 13, 51234], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 167, "seek": 53752, "start": 554.92, "end": 557.0799999999999, "text": " And this was mind blowing to me.", "tokens": [51234, 400, 341, 390, 1575, 15068, 281, 385, 13, 51342], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 168, "seek": 53752, "start": 557.0799999999999, "end": 560.4, "text": " I know that Sasha has the whole chapter in his book about pattern matching on", "tokens": [51342, 286, 458, 300, 29276, 575, 264, 1379, 7187, 294, 702, 1446, 466, 5102, 14324, 322, 51508], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 169, "seek": 53752, "start": 560.4, "end": 565.48, "text": " binary, I ignored it, I didn't kind of get it, but this is amazing.", "tokens": [51508, 17434, 11, 286, 19735, 309, 11, 286, 994, 380, 733, 295, 483, 309, 11, 457, 341, 307, 2243, 13, 51762], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 170, "seek": 53752, "start": 565.48, "end": 566.4399999999999, "text": " So what this does?", "tokens": [51762, 407, 437, 341, 775, 30, 51810], "temperature": 0.0, "avg_logprob": -0.14994387981320215, "compression_ratio": 1.6588235294117648, "no_speech_prob": 0.001754296594299376}, {"id": 171, "seek": 56644, "start": 566.44, "end": 568.08, "text": " I've decided to ignore the first part.", "tokens": [50364, 286, 600, 3047, 281, 11200, 264, 700, 644, 13, 50446], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 172, "seek": 56644, "start": 568.08, "end": 570.08, "text": " Where is the mouse?", "tokens": [50446, 2305, 307, 264, 9719, 30, 50546], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 173, "seek": 56644, "start": 570.08, "end": 571.48, "text": " I decided to ignore the first part.", "tokens": [50546, 286, 3047, 281, 11200, 264, 700, 644, 13, 50616], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 174, "seek": 56644, "start": 571.48, "end": 572.6, "text": " We don't need it.", "tokens": [50616, 492, 500, 380, 643, 309, 13, 50672], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 175, "seek": 56644, "start": 572.6, "end": 575.96, "text": " And I just ignore 12 bytes, right?", "tokens": [50672, 400, 286, 445, 11200, 2272, 36088, 11, 558, 30, 50840], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 176, "seek": 56644, "start": 575.96, "end": 579.36, "text": " Then we store the next four as the ID.", "tokens": [50840, 1396, 321, 3531, 264, 958, 1451, 382, 264, 7348, 13, 51010], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 177, "seek": 56644, "start": 579.36, "end": 582.5200000000001, "text": " Then we can ignore the rest 24.", "tokens": [51010, 1396, 321, 393, 11200, 264, 1472, 4022, 13, 51168], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 178, "seek": 56644, "start": 582.5200000000001, "end": 586.12, "text": " And then we just store the origin timestamp, the 8-1.", "tokens": [51168, 400, 550, 321, 445, 3531, 264, 4957, 49108, 1215, 11, 264, 1649, 12, 16, 13, 51348], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 179, "seek": 56644, "start": 586.12, "end": 587.32, "text": " That's all you need to do.", "tokens": [51348, 663, 311, 439, 291, 643, 281, 360, 13, 51408], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 180, "seek": 56644, "start": 587.32, "end": 590.96, "text": " When you receive a request, this is how you pattern match.", "tokens": [51408, 1133, 291, 4774, 257, 5308, 11, 341, 307, 577, 291, 5102, 2995, 13, 51590], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 181, "seek": 56644, "start": 592.24, "end": 594.9200000000001, "text": " Now imagine if you're developing your own protocol.", "tokens": [51654, 823, 3811, 498, 291, 434, 6416, 428, 1065, 10336, 13, 51788], "temperature": 0.0, "avg_logprob": -0.2023797149658203, "compression_ratio": 1.6942148760330578, "no_speech_prob": 0.0006165234954096377}, {"id": 182, "seek": 59492, "start": 594.92, "end": 599.9599999999999, "text": " This means that in a single line, you can basically parse the whole request that", "tokens": [50364, 639, 1355, 300, 294, 257, 2167, 1622, 11, 291, 393, 1936, 48377, 264, 1379, 5308, 300, 50616], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 183, "seek": 59492, "start": 599.9599999999999, "end": 601.68, "text": " came to your server.", "tokens": [50616, 1361, 281, 428, 7154, 13, 50702], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 184, "seek": 59492, "start": 601.68, "end": 602.24, "text": " Amazing.", "tokens": [50702, 14165, 13, 50730], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 185, "seek": 59492, "start": 602.24, "end": 605.12, "text": " To me, this was mind blowing.", "tokens": [50730, 1407, 385, 11, 341, 390, 1575, 15068, 13, 50874], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 186, "seek": 59492, "start": 605.12, "end": 606.68, "text": " I don't see too many mind blows.", "tokens": [50874, 286, 500, 380, 536, 886, 867, 1575, 18458, 13, 50952], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 187, "seek": 59492, "start": 606.68, "end": 610.12, "text": " You either know this or don't think it's that interesting.", "tokens": [50952, 509, 2139, 458, 341, 420, 500, 380, 519, 309, 311, 300, 1880, 13, 51124], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 188, "seek": 59492, "start": 610.12, "end": 610.68, "text": " But okay.", "tokens": [51124, 583, 1392, 13, 51152], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 189, "seek": 59492, "start": 612.4799999999999, "end": 618.52, "text": " So, and now we need to compile our response.", "tokens": [51242, 407, 11, 293, 586, 321, 643, 281, 31413, 527, 4134, 13, 51544], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 190, "seek": 59492, "start": 618.52, "end": 622.0, "text": " We'll come to actual Elixir code in a second, don't worry.", "tokens": [51544, 492, 603, 808, 281, 3539, 2699, 970, 347, 3089, 294, 257, 1150, 11, 500, 380, 3292, 13, 51718], "temperature": 0.0, "avg_logprob": -0.2230991033407358, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.00018521583115216345}, {"id": 191, "seek": 62200, "start": 622.96, "end": 629.12, "text": " So, as you can see, we start with the receive timestamp as is.", "tokens": [50412, 407, 11, 382, 291, 393, 536, 11, 321, 722, 365, 264, 4774, 49108, 1215, 382, 307, 13, 50720], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 192, "seek": 62200, "start": 629.12, "end": 634.08, "text": " And now I've cheated here and you will see that I replied with the same two timestamps", "tokens": [50720, 400, 586, 286, 600, 28079, 510, 293, 291, 486, 536, 300, 286, 20345, 365, 264, 912, 732, 49108, 23150, 50968], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 193, "seek": 62200, "start": 634.08, "end": 637.52, "text": " because I don't care about precision for this exercise.", "tokens": [50968, 570, 286, 500, 380, 1127, 466, 18356, 337, 341, 5380, 13, 51140], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 194, "seek": 62200, "start": 637.52, "end": 642.16, "text": " At this point, it was to me, it started becoming very obvious that whatever I returned,", "tokens": [51140, 1711, 341, 935, 11, 309, 390, 281, 385, 11, 309, 1409, 5617, 588, 6322, 300, 2035, 286, 8752, 11, 51372], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 195, "seek": 62200, "start": 642.16, "end": 645.16, "text": " the uptime is not changing.", "tokens": [51372, 264, 493, 3766, 307, 406, 4473, 13, 51522], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 196, "seek": 62200, "start": 645.16, "end": 650.76, "text": " So the level of this being fun started degrading rapidly.", "tokens": [51522, 407, 264, 1496, 295, 341, 885, 1019, 1409, 24740, 278, 12910, 13, 51802], "temperature": 0.0, "avg_logprob": -0.18175968979344223, "compression_ratio": 1.6336206896551724, "no_speech_prob": 0.0005976032698526978}, {"id": 197, "seek": 65076, "start": 650.76, "end": 656.24, "text": " The only thing that was keeping me alive and to finish this little project was maybe I", "tokens": [50364, 440, 787, 551, 300, 390, 5145, 385, 5465, 293, 281, 2413, 341, 707, 1716, 390, 1310, 286, 50638], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 198, "seek": 65076, "start": 656.24, "end": 657.84, "text": " can get a blog post out of this.", "tokens": [50638, 393, 483, 257, 6968, 2183, 484, 295, 341, 13, 50718], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 199, "seek": 65076, "start": 657.84, "end": 659.04, "text": " I don't know.", "tokens": [50718, 286, 500, 380, 458, 13, 50778], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 200, "seek": 65076, "start": 659.04, "end": 660.64, "text": " Maybe some clout.", "tokens": [50778, 2704, 512, 596, 346, 13, 50858], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 201, "seek": 65076, "start": 660.64, "end": 663.28, "text": " So I stopped kind of caring.", "tokens": [50858, 407, 286, 5936, 733, 295, 15365, 13, 50990], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 202, "seek": 65076, "start": 663.28, "end": 670.4, "text": " But yes, you should basically pull data from like a real clock source, like an atomic clock,", "tokens": [50990, 583, 2086, 11, 291, 820, 1936, 2235, 1412, 490, 411, 257, 957, 7830, 4009, 11, 411, 364, 22275, 7830, 11, 51346], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 203, "seek": 65076, "start": 670.4, "end": 675.3199999999999, "text": " a GPS clock, which is also kind of a fun thing to do because you can get an AliExpress", "tokens": [51346, 257, 19462, 7830, 11, 597, 307, 611, 733, 295, 257, 1019, 551, 281, 360, 570, 291, 393, 483, 364, 12020, 11149, 11637, 51592], "temperature": 0.0, "avg_logprob": -0.19568069382469253, "compression_ratio": 1.5450643776824033, "no_speech_prob": 0.003323118668049574}, {"id": 204, "seek": 67532, "start": 675.32, "end": 681.5600000000001, "text": " those very cheap GPS USB modules, which are very easy to talk to and you can pull actual", "tokens": [50364, 729, 588, 7084, 19462, 10109, 16679, 11, 597, 366, 588, 1858, 281, 751, 281, 293, 291, 393, 2235, 3539, 50676], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 205, "seek": 67532, "start": 681.5600000000001, "end": 682.96, "text": " time from there.", "tokens": [50676, 565, 490, 456, 13, 50746], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 206, "seek": 67532, "start": 682.96, "end": 685.1600000000001, "text": " And it gives you the clock stratum.", "tokens": [50746, 400, 309, 2709, 291, 264, 7830, 23674, 449, 13, 50856], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 207, "seek": 67532, "start": 685.1600000000001, "end": 687.6, "text": " It gives you the precision and you can just dump it into it.", "tokens": [50856, 467, 2709, 291, 264, 18356, 293, 291, 393, 445, 11430, 309, 666, 309, 13, 50978], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 208, "seek": 67532, "start": 687.6, "end": 695.84, "text": " So it is actually viable to create such a server in a language that I don't think it's", "tokens": [50978, 407, 309, 307, 767, 22024, 281, 1884, 1270, 257, 7154, 294, 257, 2856, 300, 286, 500, 380, 519, 309, 311, 51390], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 209, "seek": 67532, "start": 695.84, "end": 696.84, "text": " best used for.", "tokens": [51390, 1151, 1143, 337, 13, 51440], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 210, "seek": 67532, "start": 696.84, "end": 698.24, "text": " But there we go.", "tokens": [51440, 583, 456, 321, 352, 13, 51510], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 211, "seek": 67532, "start": 698.24, "end": 703.8000000000001, "text": " So we need to set again the reference, the origin and the receive timestamps now.", "tokens": [51510, 407, 321, 643, 281, 992, 797, 264, 6408, 11, 264, 4957, 293, 264, 4774, 49108, 23150, 586, 13, 51788], "temperature": 0.0, "avg_logprob": -0.181111327162734, "compression_ratio": 1.6184738955823292, "no_speech_prob": 0.004828938748687506}, {"id": 212, "seek": 70380, "start": 703.8, "end": 709.64, "text": " The ID you will see later is basically the ID you respond with.", "tokens": [50364, 440, 7348, 291, 486, 536, 1780, 307, 1936, 264, 7348, 291, 4196, 365, 13, 50656], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 213, "seek": 70380, "start": 709.64, "end": 718.4399999999999, "text": " Good practice started becoming just use your public IP as an ID because many NTP servers", "tokens": [50656, 2205, 3124, 1409, 5617, 445, 764, 428, 1908, 8671, 382, 364, 7348, 570, 867, 426, 16804, 15909, 51096], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 214, "seek": 70380, "start": 718.4399999999999, "end": 720.5999999999999, "text": " don't change their IPs at all.", "tokens": [51096, 500, 380, 1319, 641, 8671, 82, 412, 439, 13, 51204], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 215, "seek": 70380, "start": 720.5999999999999, "end": 723.0799999999999, "text": " So it is a good idea to use it.", "tokens": [51204, 407, 309, 307, 257, 665, 1558, 281, 764, 309, 13, 51328], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 216, "seek": 70380, "start": 723.0799999999999, "end": 724.8, "text": " It's not in the protocol, however.", "tokens": [51328, 467, 311, 406, 294, 264, 10336, 11, 4461, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 217, "seek": 70380, "start": 724.8, "end": 726.68, "text": " So you can do whatever you want.", "tokens": [51414, 407, 291, 393, 360, 2035, 291, 528, 13, 51508], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 218, "seek": 70380, "start": 726.68, "end": 730.12, "text": " You can put Andre school there.", "tokens": [51508, 509, 393, 829, 20667, 1395, 456, 13, 51680], "temperature": 0.0, "avg_logprob": -0.17412909401787652, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.05336099490523338}, {"id": 219, "seek": 73012, "start": 730.12, "end": 735.6, "text": " And now let's create the actual UDP server in Elixir.", "tokens": [50364, 400, 586, 718, 311, 1884, 264, 3539, 624, 11373, 7154, 294, 2699, 970, 347, 13, 50638], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 220, "seek": 73012, "start": 735.6, "end": 738.68, "text": " By the way, it needs to run the port 123.", "tokens": [50638, 3146, 264, 636, 11, 309, 2203, 281, 1190, 264, 2436, 34466, 13, 50792], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 221, "seek": 73012, "start": 738.68, "end": 739.88, "text": " I thought this was a joke.", "tokens": [50792, 286, 1194, 341, 390, 257, 7647, 13, 50852], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 222, "seek": 73012, "start": 739.88, "end": 741.12, "text": " No, it's not.", "tokens": [50852, 883, 11, 309, 311, 406, 13, 50914], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 223, "seek": 73012, "start": 741.12, "end": 743.08, "text": " Pretty cool.", "tokens": [50914, 10693, 1627, 13, 51012], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 224, "seek": 73012, "start": 743.08, "end": 748.24, "text": " So this can be done a lot better as I've learned later.", "tokens": [51012, 407, 341, 393, 312, 1096, 257, 688, 1101, 382, 286, 600, 3264, 1780, 13, 51270], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 225, "seek": 73012, "start": 748.24, "end": 752.2, "text": " But for posterity's sake, I decided to just continue on.", "tokens": [51270, 583, 337, 17171, 507, 311, 9717, 11, 286, 3047, 281, 445, 2354, 322, 13, 51468], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 226, "seek": 73012, "start": 752.2, "end": 756.92, "text": " If you use active false in this first line, you don't need to do a whole bunch of slides", "tokens": [51468, 759, 291, 764, 4967, 7908, 294, 341, 700, 1622, 11, 291, 500, 380, 643, 281, 360, 257, 1379, 3840, 295, 9788, 51704], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 227, "seek": 73012, "start": 756.92, "end": 757.92, "text": " after.", "tokens": [51704, 934, 13, 51754], "temperature": 0.0, "avg_logprob": -0.21534658733167147, "compression_ratio": 1.4916666666666667, "no_speech_prob": 0.008439467288553715}, {"id": 228, "seek": 75792, "start": 758.04, "end": 762.76, "text": " When I rewrote the slides after a meetup in Zagreb and I used active false, the whole", "tokens": [50370, 1133, 286, 319, 7449, 1370, 264, 9788, 934, 257, 1677, 1010, 294, 1176, 559, 22692, 293, 286, 1143, 4967, 7908, 11, 264, 1379, 50606], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 229, "seek": 75792, "start": 762.76, "end": 765.56, "text": " presentation was kind of lacking for content.", "tokens": [50606, 5860, 390, 733, 295, 20889, 337, 2701, 13, 50746], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 230, "seek": 75792, "start": 765.56, "end": 770.4399999999999, "text": " So I just left it in and decided, yes, we will do slides.", "tokens": [50746, 407, 286, 445, 1411, 309, 294, 293, 3047, 11, 2086, 11, 321, 486, 360, 9788, 13, 50990], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 231, "seek": 75792, "start": 770.4399999999999, "end": 771.4399999999999, "text": " And that's it.", "tokens": [50990, 400, 300, 311, 309, 13, 51040], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 232, "seek": 75792, "start": 771.4399999999999, "end": 773.12, "text": " So let's use it.", "tokens": [51040, 407, 718, 311, 764, 309, 13, 51124], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 233, "seek": 75792, "start": 773.12, "end": 775.52, "text": " It's extremely simple to use.", "tokens": [51124, 467, 311, 4664, 2199, 281, 764, 13, 51244], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 234, "seek": 75792, "start": 775.52, "end": 777.52, "text": " This will receive only one packet.", "tokens": [51244, 639, 486, 4774, 787, 472, 20300, 13, 51344], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 235, "seek": 75792, "start": 777.52, "end": 781.56, "text": " If you put it active false, active true, it will receive many packets, whatever.", "tokens": [51344, 759, 291, 829, 309, 4967, 7908, 11, 4967, 2074, 11, 309, 486, 4774, 867, 30364, 11, 2035, 13, 51546], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 236, "seek": 75792, "start": 781.56, "end": 786.3199999999999, "text": " So you need to open up a gen UDP server.", "tokens": [51546, 407, 291, 643, 281, 1269, 493, 257, 1049, 624, 11373, 7154, 13, 51784], "temperature": 0.0, "avg_logprob": -0.17745211867035413, "compression_ratio": 1.632, "no_speech_prob": 0.0016223890706896782}, {"id": 237, "seek": 78632, "start": 786.32, "end": 787.9200000000001, "text": " You have the socket.", "tokens": [50364, 509, 362, 264, 19741, 13, 50444], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 238, "seek": 78632, "start": 787.9200000000001, "end": 793.7600000000001, "text": " What you then do is you can just pattern match on what you receive.", "tokens": [50444, 708, 291, 550, 360, 307, 291, 393, 445, 5102, 2995, 322, 437, 291, 4774, 13, 50736], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 239, "seek": 78632, "start": 793.7600000000001, "end": 796.9200000000001, "text": " We are mostly interested in the first part, like a real developer.", "tokens": [50736, 492, 366, 5240, 3102, 294, 264, 700, 644, 11, 411, 257, 957, 10754, 13, 50894], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 240, "seek": 78632, "start": 796.9200000000001, "end": 800.0, "text": " I just ignore the errors and the closed states, whatever.", "tokens": [50894, 286, 445, 11200, 264, 13603, 293, 264, 5395, 4368, 11, 2035, 13, 51048], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 241, "seek": 78632, "start": 800.0, "end": 801.88, "text": " Nobody cares about those anyways.", "tokens": [51048, 9297, 12310, 466, 729, 13448, 13, 51142], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 242, "seek": 78632, "start": 801.88, "end": 805.84, "text": " And with the gen UDP send, you can send whatever.", "tokens": [51142, 400, 365, 264, 1049, 624, 11373, 2845, 11, 291, 393, 2845, 2035, 13, 51340], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 243, "seek": 78632, "start": 805.84, "end": 808.96, "text": " You can send strings even.", "tokens": [51340, 509, 393, 2845, 13985, 754, 13, 51496], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 244, "seek": 78632, "start": 808.96, "end": 809.96, "text": " That's it.", "tokens": [51496, 663, 311, 309, 13, 51546], "temperature": 0.0, "avg_logprob": -0.2316539108112294, "compression_ratio": 1.580188679245283, "no_speech_prob": 0.03728710114955902}, {"id": 245, "seek": 80996, "start": 810.64, "end": 814.52, "text": " This was also pretty mind blowing as an XJS developer.", "tokens": [50398, 639, 390, 611, 1238, 1575, 15068, 382, 364, 1783, 41, 50, 10754, 13, 50592], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 246, "seek": 80996, "start": 814.52, "end": 821.72, "text": " Just those condensed free lines in total is the whole UDP server.", "tokens": [50592, 1449, 729, 36398, 1737, 3876, 294, 3217, 307, 264, 1379, 624, 11373, 7154, 13, 50952], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 247, "seek": 80996, "start": 821.72, "end": 822.72, "text": " What?", "tokens": [50952, 708, 30, 51002], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 248, "seek": 80996, "start": 822.72, "end": 829.36, "text": " Just like a little side note, when I started learning Elixir, I was then, after JavaScript,", "tokens": [51002, 1449, 411, 257, 707, 1252, 3637, 11, 562, 286, 1409, 2539, 2699, 970, 347, 11, 286, 390, 550, 11, 934, 15778, 11, 51334], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 249, "seek": 80996, "start": 829.36, "end": 834.44, "text": " I was a Python developer and a friend got me into learning Elixir.", "tokens": [51334, 286, 390, 257, 15329, 10754, 293, 257, 1277, 658, 385, 666, 2539, 2699, 970, 347, 13, 51588], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 250, "seek": 80996, "start": 834.44, "end": 838.24, "text": " And one of my first revelations was, why was I writing so much code?", "tokens": [51588, 400, 472, 295, 452, 700, 15262, 763, 390, 11, 983, 390, 286, 3579, 370, 709, 3089, 30, 51778], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 251, "seek": 80996, "start": 838.24, "end": 839.84, "text": " I don't get it.", "tokens": [51778, 286, 500, 380, 483, 309, 13, 51858], "temperature": 0.0, "avg_logprob": -0.19685541908696014, "compression_ratio": 1.5289256198347108, "no_speech_prob": 0.02882186882197857}, {"id": 252, "seek": 83984, "start": 839.88, "end": 844.64, "text": " So yes, this is all that there is to it.", "tokens": [50366, 407, 2086, 11, 341, 307, 439, 300, 456, 307, 281, 309, 13, 50604], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 253, "seek": 83984, "start": 844.64, "end": 847.1600000000001, "text": " Let's create just like a simple server out of it.", "tokens": [50604, 961, 311, 1884, 445, 411, 257, 2199, 7154, 484, 295, 309, 13, 50730], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 254, "seek": 83984, "start": 847.1600000000001, "end": 851.0, "text": " The first approach is, yes, let's just imitate something.", "tokens": [50730, 440, 700, 3109, 307, 11, 2086, 11, 718, 311, 445, 35556, 746, 13, 50922], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 255, "seek": 83984, "start": 851.0, "end": 853.4, "text": " So we have the init.", "tokens": [50922, 407, 321, 362, 264, 3157, 13, 51042], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 256, "seek": 83984, "start": 853.4, "end": 856.24, "text": " And we'll just have a loop here.", "tokens": [51042, 400, 321, 603, 445, 362, 257, 6367, 510, 13, 51184], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 257, "seek": 83984, "start": 856.24, "end": 863.0, "text": " I forgot to call the actual loop, so don't forget to call the actual loop.", "tokens": [51184, 286, 5298, 281, 818, 264, 3539, 6367, 11, 370, 500, 380, 2870, 281, 818, 264, 3539, 6367, 13, 51522], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 258, "seek": 83984, "start": 863.0, "end": 868.1600000000001, "text": " So what this will do, just in a recursive fashion, every time it receives a packet, it", "tokens": [51522, 407, 437, 341, 486, 360, 11, 445, 294, 257, 20560, 488, 6700, 11, 633, 565, 309, 20717, 257, 20300, 11, 309, 51780], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 259, "seek": 83984, "start": 868.1600000000001, "end": 869.76, "text": " will call itself again.", "tokens": [51780, 486, 818, 2564, 797, 13, 51860], "temperature": 0.0, "avg_logprob": -0.218482586375454, "compression_ratio": 1.6796536796536796, "no_speech_prob": 0.0013448866084218025}, {"id": 260, "seek": 86976, "start": 869.76, "end": 870.76, "text": " That's it.", "tokens": [50364, 663, 311, 309, 13, 50414], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 261, "seek": 86976, "start": 870.76, "end": 877.6, "text": " To astound it a few here, this might look like a gen server, maybe.", "tokens": [50414, 1407, 5357, 554, 309, 257, 1326, 510, 11, 341, 1062, 574, 411, 257, 1049, 7154, 11, 1310, 13, 50756], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 262, "seek": 86976, "start": 877.6, "end": 884.48, "text": " Yes, well, like everything in my life, I reinvented hot water, how we say in Croatian.", "tokens": [50756, 1079, 11, 731, 11, 411, 1203, 294, 452, 993, 11, 286, 33477, 292, 2368, 1281, 11, 577, 321, 584, 294, 37614, 952, 13, 51100], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 263, "seek": 86976, "start": 884.48, "end": 887.72, "text": " So yes, let's make it into an actual gen server.", "tokens": [51100, 407, 2086, 11, 718, 311, 652, 309, 666, 364, 3539, 1049, 7154, 13, 51262], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 264, "seek": 86976, "start": 887.72, "end": 888.84, "text": " So it's pretty simple.", "tokens": [51262, 407, 309, 311, 1238, 2199, 13, 51318], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 265, "seek": 86976, "start": 888.84, "end": 893.52, "text": " You can just use continue loop and have a handle continue.", "tokens": [51318, 509, 393, 445, 764, 2354, 6367, 293, 362, 257, 4813, 2354, 13, 51552], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 266, "seek": 86976, "start": 893.52, "end": 894.52, "text": " That's it.", "tokens": [51552, 663, 311, 309, 13, 51602], "temperature": 0.0, "avg_logprob": -0.22775502999623617, "compression_ratio": 1.5198019801980198, "no_speech_prob": 0.0005356422043405473}, {"id": 267, "seek": 89452, "start": 894.52, "end": 900.6, "text": " And don't forget to also include this part here, so you can actually start the gen server.", "tokens": [50364, 400, 500, 380, 2870, 281, 611, 4090, 341, 644, 510, 11, 370, 291, 393, 767, 722, 264, 1049, 7154, 13, 50668], "temperature": 0.0, "avg_logprob": -0.1807666950011521, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.008057600818574429}, {"id": 268, "seek": 89452, "start": 900.6, "end": 906.84, "text": " In your supervision tree, in your application, for newbies in Elixir on the blog post, there", "tokens": [50668, 682, 428, 32675, 4230, 11, 294, 428, 3861, 11, 337, 777, 23177, 294, 2699, 970, 347, 322, 264, 6968, 2183, 11, 456, 50980], "temperature": 0.0, "avg_logprob": -0.1807666950011521, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.008057600818574429}, {"id": 269, "seek": 89452, "start": 906.84, "end": 916.0799999999999, "text": " is also a huge part how to start a new Elixir project that's not a Phoenix with the supervisor", "tokens": [50980, 307, 611, 257, 2603, 644, 577, 281, 722, 257, 777, 2699, 970, 347, 1716, 300, 311, 406, 257, 18383, 365, 264, 24610, 51442], "temperature": 0.0, "avg_logprob": -0.1807666950011521, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.008057600818574429}, {"id": 270, "seek": 89452, "start": 916.0799999999999, "end": 917.36, "text": " tree already set up.", "tokens": [51442, 4230, 1217, 992, 493, 13, 51506], "temperature": 0.0, "avg_logprob": -0.1807666950011521, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.008057600818574429}, {"id": 271, "seek": 89452, "start": 917.36, "end": 919.92, "text": " So you can go look at that.", "tokens": [51506, 407, 291, 393, 352, 574, 412, 300, 13, 51634], "temperature": 0.0, "avg_logprob": -0.1807666950011521, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.008057600818574429}, {"id": 272, "seek": 91992, "start": 919.92, "end": 924.7199999999999, "text": " But if you have it set up, all you need to do is just include this child here and it'll", "tokens": [50364, 583, 498, 291, 362, 309, 992, 493, 11, 439, 291, 643, 281, 360, 307, 445, 4090, 341, 1440, 510, 293, 309, 603, 50604], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 273, "seek": 91992, "start": 924.7199999999999, "end": 929.28, "text": " get started and start working.", "tokens": [50604, 483, 1409, 293, 722, 1364, 13, 50832], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 274, "seek": 91992, "start": 929.28, "end": 932.9599999999999, "text": " And all that is super cool and fun, but where is the actual protocol?", "tokens": [50832, 400, 439, 300, 307, 1687, 1627, 293, 1019, 11, 457, 689, 307, 264, 3539, 10336, 30, 51016], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 275, "seek": 91992, "start": 932.9599999999999, "end": 936.04, "text": " Where is the actual meat of the presentation?", "tokens": [51016, 2305, 307, 264, 3539, 4615, 295, 264, 5860, 30, 51170], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 276, "seek": 91992, "start": 936.04, "end": 942.76, "text": " Well, it's also in the spirit of Elixir extremely simple.", "tokens": [51170, 1042, 11, 309, 311, 611, 294, 264, 3797, 295, 2699, 970, 347, 4664, 2199, 13, 51506], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 277, "seek": 91992, "start": 942.76, "end": 947.92, "text": " So we have one function here called generate NTP response.", "tokens": [51506, 407, 321, 362, 472, 2445, 510, 1219, 8460, 426, 16804, 4134, 13, 51764], "temperature": 0.0, "avg_logprob": -0.21200955167729804, "compression_ratio": 1.56, "no_speech_prob": 0.0031718439422547817}, {"id": 278, "seek": 94792, "start": 947.92, "end": 951.0, "text": " And you remember that pattern matching that I was raving on about?", "tokens": [50364, 400, 291, 1604, 300, 5102, 14324, 300, 286, 390, 367, 6152, 322, 466, 30, 50518], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 279, "seek": 94792, "start": 951.0, "end": 953.1999999999999, "text": " Well, I ignore everything, basically.", "tokens": [50518, 1042, 11, 286, 11200, 1203, 11, 1936, 13, 50628], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 280, "seek": 94792, "start": 953.1999999999999, "end": 958.24, "text": " I started and I just used the origin timestamp so I can do it in the function head as simple", "tokens": [50628, 286, 1409, 293, 286, 445, 1143, 264, 4957, 49108, 1215, 370, 286, 393, 360, 309, 294, 264, 2445, 1378, 382, 2199, 50880], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 281, "seek": 94792, "start": 958.24, "end": 960.04, "text": " as this.", "tokens": [50880, 382, 341, 13, 50970], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 282, "seek": 94792, "start": 960.04, "end": 965.88, "text": " We take the system time, which is the most precise way of getting time in the world.", "tokens": [50970, 492, 747, 264, 1185, 565, 11, 597, 307, 264, 881, 13600, 636, 295, 1242, 565, 294, 264, 1002, 13, 51262], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 283, "seek": 94792, "start": 965.88, "end": 968.0, "text": " So everybody knows that.", "tokens": [51262, 407, 2201, 3255, 300, 13, 51368], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 284, "seek": 94792, "start": 968.0, "end": 971.8399999999999, "text": " We store that as a receive timestamp.", "tokens": [51368, 492, 3531, 300, 382, 257, 4774, 49108, 1215, 13, 51560], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 285, "seek": 94792, "start": 971.8399999999999, "end": 974.64, "text": " Doing a little bit of, thank you.", "tokens": [51560, 18496, 257, 707, 857, 295, 11, 1309, 291, 13, 51700], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 286, "seek": 94792, "start": 974.64, "end": 975.64, "text": " I'll speed up.", "tokens": [51700, 286, 603, 3073, 493, 13, 51750], "temperature": 0.0, "avg_logprob": -0.27639044702580545, "compression_ratio": 1.57421875, "no_speech_prob": 0.03902166709303856}, {"id": 287, "seek": 97564, "start": 975.96, "end": 981.48, "text": " So I'm doing a little bit of code here to make it a bit more easier to read.", "tokens": [50380, 407, 286, 478, 884, 257, 707, 857, 295, 3089, 510, 281, 652, 309, 257, 857, 544, 3571, 281, 1401, 13, 50656], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 288, "seek": 97564, "start": 981.48, "end": 982.48, "text": " Remember this sigil.", "tokens": [50656, 5459, 341, 4556, 388, 13, 50706], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 289, "seek": 97564, "start": 982.48, "end": 985.48, "text": " If I'll have time, I'll show you how to implement your own sigils.", "tokens": [50706, 759, 286, 603, 362, 565, 11, 286, 603, 855, 291, 577, 281, 4445, 428, 1065, 4556, 4174, 13, 50856], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 290, "seek": 97564, "start": 985.48, "end": 987.8, "text": " Never do that again as well.", "tokens": [50856, 7344, 360, 300, 797, 382, 731, 13, 50972], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 291, "seek": 97564, "start": 987.8, "end": 989.84, "text": " But yes, this is way easier to read.", "tokens": [50972, 583, 2086, 11, 341, 307, 636, 3571, 281, 1401, 13, 51074], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 292, "seek": 97564, "start": 989.84, "end": 991.88, "text": " So you just set up the header.", "tokens": [51074, 407, 291, 445, 992, 493, 264, 23117, 13, 51176], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 293, "seek": 97564, "start": 991.88, "end": 993.68, "text": " Trust me, this is how you do it.", "tokens": [51176, 11580, 385, 11, 341, 307, 577, 291, 360, 309, 13, 51266], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 294, "seek": 97564, "start": 993.68, "end": 995.48, "text": " Don't read too much into it.", "tokens": [51266, 1468, 380, 1401, 886, 709, 666, 309, 13, 51356], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 295, "seek": 97564, "start": 995.48, "end": 1000.72, "text": " The ID is the private IP of that VM.", "tokens": [51356, 440, 7348, 307, 264, 4551, 8671, 295, 300, 18038, 13, 51618], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 296, "seek": 97564, "start": 1000.72, "end": 1003.28, "text": " And now comes the fun part.", "tokens": [51618, 400, 586, 1487, 264, 1019, 644, 13, 51746], "temperature": 0.0, "avg_logprob": -0.16581259155273437, "compression_ratio": 1.603305785123967, "no_speech_prob": 0.0012842303840443492}, {"id": 297, "seek": 100328, "start": 1003.28, "end": 1007.1999999999999, "text": " You can concatenate bit strings like anything else in the lixir.", "tokens": [50364, 509, 393, 1588, 7186, 473, 857, 13985, 411, 1340, 1646, 294, 264, 287, 970, 347, 13, 50560], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 298, "seek": 100328, "start": 1007.1999999999999, "end": 1011.28, "text": " So this is how you do it.", "tokens": [50560, 407, 341, 307, 577, 291, 360, 309, 13, 50764], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 299, "seek": 100328, "start": 1011.28, "end": 1013.64, "text": " This NTP constant is really important.", "tokens": [50764, 639, 426, 16804, 5754, 307, 534, 1021, 13, 50882], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 300, "seek": 100328, "start": 1013.64, "end": 1015.1999999999999, "text": " I have no idea what it is.", "tokens": [50882, 286, 362, 572, 1558, 437, 309, 307, 13, 50960], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 301, "seek": 100328, "start": 1015.1999999999999, "end": 1016.68, "text": " I read the documentation.", "tokens": [50960, 286, 1401, 264, 14333, 13, 51034], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 302, "seek": 100328, "start": 1016.68, "end": 1020.56, "text": " This is how you convert time vice versa.", "tokens": [51034, 639, 307, 577, 291, 7620, 565, 11964, 25650, 13, 51228], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 303, "seek": 100328, "start": 1020.56, "end": 1021.56, "text": " Why they need it?", "tokens": [51228, 1545, 436, 643, 309, 30, 51278], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 304, "seek": 100328, "start": 1021.56, "end": 1022.56, "text": " I don't understand.", "tokens": [51278, 286, 500, 380, 1223, 13, 51328], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 305, "seek": 100328, "start": 1022.56, "end": 1023.56, "text": " I'm very bad at math.", "tokens": [51328, 286, 478, 588, 1578, 412, 5221, 13, 51378], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 306, "seek": 100328, "start": 1023.56, "end": 1026.3999999999999, "text": " So if somebody else knows it, please come and talk to me.", "tokens": [51378, 407, 498, 2618, 1646, 3255, 309, 11, 1767, 808, 293, 751, 281, 385, 13, 51520], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 307, "seek": 100328, "start": 1026.3999999999999, "end": 1027.8999999999999, "text": " Enlighten me.", "tokens": [51520, 46037, 268, 385, 13, 51595], "temperature": 0.0, "avg_logprob": -0.2039939576545648, "compression_ratio": 1.5106382978723405, "no_speech_prob": 0.0037062556948512793}, {"id": 308, "seek": 102790, "start": 1027.9, "end": 1033.22, "text": " And again, you just compile the end result in a bit string.", "tokens": [50364, 400, 797, 11, 291, 445, 31413, 264, 917, 1874, 294, 257, 857, 6798, 13, 50630], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 309, "seek": 102790, "start": 1033.22, "end": 1037.7800000000002, "text": " You return that instead of that hello world before that's it.", "tokens": [50630, 509, 2736, 300, 2602, 295, 300, 7751, 1002, 949, 300, 311, 309, 13, 50858], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 310, "seek": 102790, "start": 1037.7800000000002, "end": 1041.14, "text": " So you can just generate NTP response from the request.", "tokens": [50858, 407, 291, 393, 445, 8460, 426, 16804, 4134, 490, 264, 5308, 13, 51026], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 311, "seek": 102790, "start": 1041.14, "end": 1042.5400000000002, "text": " You get the packet.", "tokens": [51026, 509, 483, 264, 20300, 13, 51096], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 312, "seek": 102790, "start": 1042.5400000000002, "end": 1044.3000000000002, "text": " You reply with it.", "tokens": [51096, 509, 16972, 365, 309, 13, 51184], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 313, "seek": 102790, "start": 1044.3000000000002, "end": 1045.3000000000002, "text": " Ta-da.", "tokens": [51184, 6551, 12, 2675, 13, 51234], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 314, "seek": 102790, "start": 1045.3000000000002, "end": 1046.8600000000001, "text": " There we go.", "tokens": [51234, 821, 321, 352, 13, 51312], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 315, "seek": 102790, "start": 1046.8600000000001, "end": 1049.3000000000002, "text": " All of this code, if you want to play around.", "tokens": [51312, 1057, 295, 341, 3089, 11, 498, 291, 528, 281, 862, 926, 13, 51434], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 316, "seek": 102790, "start": 1049.3000000000002, "end": 1054.38, "text": " And if you found mistakes, then you can go there and complain and do pull requests for", "tokens": [51434, 400, 498, 291, 1352, 8038, 11, 550, 291, 393, 352, 456, 293, 11024, 293, 360, 2235, 12475, 337, 51688], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 317, "seek": 102790, "start": 1054.38, "end": 1056.22, "text": " a project that doesn't matter.", "tokens": [51688, 257, 1716, 300, 1177, 380, 1871, 13, 51780], "temperature": 0.0, "avg_logprob": -0.2311798457441659, "compression_ratio": 1.606425702811245, "no_speech_prob": 0.4286508560180664}, {"id": 318, "seek": 105622, "start": 1056.22, "end": 1061.22, "text": " But I would be more than happy to see what you guys think and what you feel about this.", "tokens": [50364, 583, 286, 576, 312, 544, 813, 2055, 281, 536, 437, 291, 1074, 519, 293, 437, 291, 841, 466, 341, 13, 50614], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 319, "seek": 105622, "start": 1061.22, "end": 1063.9, "text": " So come and see it.", "tokens": [50614, 407, 808, 293, 536, 309, 13, 50748], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 320, "seek": 105622, "start": 1063.9, "end": 1065.46, "text": " I still have a bit of more time.", "tokens": [50748, 286, 920, 362, 257, 857, 295, 544, 565, 13, 50826], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 321, "seek": 105622, "start": 1065.46, "end": 1071.9, "text": " So let's implement the custom sigil and show how, again, how I should read more documentation.", "tokens": [50826, 407, 718, 311, 4445, 264, 2375, 4556, 388, 293, 855, 577, 11, 797, 11, 577, 286, 820, 1401, 544, 14333, 13, 51148], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 322, "seek": 105622, "start": 1071.9, "end": 1079.22, "text": " So let's create the sigil with tilde b, or whatever it was, quickly line b.", "tokens": [51148, 407, 718, 311, 1884, 264, 4556, 388, 365, 45046, 272, 11, 420, 2035, 309, 390, 11, 2661, 1622, 272, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 323, "seek": 105622, "start": 1079.22, "end": 1080.94, "text": " It's pretty easy to do as well.", "tokens": [51514, 467, 311, 1238, 1858, 281, 360, 382, 731, 13, 51600], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 324, "seek": 105622, "start": 1080.94, "end": 1082.74, "text": " You just create a module.", "tokens": [51600, 509, 445, 1884, 257, 10088, 13, 51690], "temperature": 0.0, "avg_logprob": -0.17292334654620875, "compression_ratio": 1.611353711790393, "no_speech_prob": 0.007692867424339056}, {"id": 325, "seek": 108274, "start": 1082.74, "end": 1087.3, "text": " You name it sigil and underscore and whatever letter you want that there to be.", "tokens": [50364, 509, 1315, 309, 4556, 388, 293, 37556, 293, 2035, 5063, 291, 528, 300, 456, 281, 312, 13, 50592], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 326, "seek": 108274, "start": 1087.3, "end": 1091.5, "text": " Now you can even do uppercase letter sites, I think, from the newest version of Elixir.", "tokens": [50592, 823, 291, 393, 754, 360, 11775, 2869, 651, 5063, 7533, 11, 286, 519, 11, 490, 264, 17569, 3037, 295, 2699, 970, 347, 13, 50802], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 327, "seek": 108274, "start": 1091.5, "end": 1094.14, "text": " And you can do even more letters than one.", "tokens": [50802, 400, 291, 393, 360, 754, 544, 7825, 813, 472, 13, 50934], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 328, "seek": 108274, "start": 1094.14, "end": 1095.38, "text": " So that's cool.", "tokens": [50934, 407, 300, 311, 1627, 13, 50996], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 329, "seek": 108274, "start": 1095.38, "end": 1100.14, "text": " And you can just import it as is, and then it's available in that module.", "tokens": [50996, 400, 291, 393, 445, 974, 309, 382, 307, 11, 293, 550, 309, 311, 2435, 294, 300, 10088, 13, 51234], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 330, "seek": 108274, "start": 1100.14, "end": 1102.82, "text": " Now let's implement the actual parsing.", "tokens": [51234, 823, 718, 311, 4445, 264, 3539, 21156, 278, 13, 51368], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 331, "seek": 108274, "start": 1102.82, "end": 1104.5, "text": " So this is a string.", "tokens": [51368, 407, 341, 307, 257, 6798, 13, 51452], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 332, "seek": 108274, "start": 1104.5, "end": 1107.78, "text": " And now here comes the me over complicating stuff.", "tokens": [51452, 400, 586, 510, 1487, 264, 385, 670, 16060, 990, 1507, 13, 51616], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 333, "seek": 108274, "start": 1107.78, "end": 1109.26, "text": " So I uppercase everything.", "tokens": [51616, 407, 286, 11775, 2869, 651, 1203, 13, 51690], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 334, "seek": 108274, "start": 1109.26, "end": 1110.98, "text": " I split everything.", "tokens": [51690, 286, 7472, 1203, 13, 51776], "temperature": 0.0, "avg_logprob": -0.14703211639866684, "compression_ratio": 1.7255639097744362, "no_speech_prob": 0.001000437536276877}, {"id": 335, "seek": 111098, "start": 1110.98, "end": 1116.58, "text": " Then I do some mapping to get rid of multiple lines and whatever.", "tokens": [50364, 1396, 286, 360, 512, 18350, 281, 483, 3973, 295, 3866, 3876, 293, 2035, 13, 50644], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 336, "seek": 111098, "start": 1116.58, "end": 1120.38, "text": " And then reject empty spaces and then join everything.", "tokens": [50644, 400, 550, 8248, 6707, 7673, 293, 550, 3917, 1203, 13, 50834], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 337, "seek": 111098, "start": 1120.38, "end": 1122.1, "text": " And I decode it.", "tokens": [50834, 400, 286, 979, 1429, 309, 13, 50920], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 338, "seek": 111098, "start": 1122.1, "end": 1123.74, "text": " Well, I blame, blame, blame.", "tokens": [50920, 1042, 11, 286, 10127, 11, 10127, 11, 10127, 13, 51002], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 339, "seek": 111098, "start": 1123.74, "end": 1127.14, "text": " You can just replace with a reg accent.", "tokens": [51002, 509, 393, 445, 7406, 365, 257, 1121, 11982, 13, 51172], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 340, "seek": 111098, "start": 1127.14, "end": 1128.26, "text": " Just decode it.", "tokens": [51172, 1449, 979, 1429, 309, 13, 51228], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 341, "seek": 111098, "start": 1128.26, "end": 1130.3, "text": " But this looks way more fun anyways.", "tokens": [51228, 583, 341, 1542, 636, 544, 1019, 13448, 13, 51330], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 342, "seek": 111098, "start": 1130.3, "end": 1133.14, "text": " Like everybody likes complications.", "tokens": [51330, 1743, 2201, 5902, 26566, 13, 51472], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 343, "seek": 111098, "start": 1133.14, "end": 1134.94, "text": " So yes.", "tokens": [51472, 407, 2086, 13, 51562], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 344, "seek": 111098, "start": 1134.94, "end": 1136.14, "text": " That's it.", "tokens": [51562, 663, 311, 309, 13, 51622], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 345, "seek": 111098, "start": 1136.14, "end": 1140.38, "text": " A lot of the things I covered here I learned from this amazing book right over here from", "tokens": [51622, 316, 688, 295, 264, 721, 286, 5343, 510, 286, 3264, 490, 341, 2243, 1446, 558, 670, 510, 490, 51834], "temperature": 0.0, "avg_logprob": -0.2843927798063859, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.007936089299619198}, {"id": 346, "seek": 114038, "start": 1140.38, "end": 1142.18, "text": " my friend Sasha Yurich.", "tokens": [50364, 452, 1277, 29276, 398, 374, 480, 13, 50454], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 347, "seek": 114038, "start": 1142.18, "end": 1146.66, "text": " He gave us the 35% off code for the new version of the book.", "tokens": [50454, 634, 2729, 505, 264, 6976, 4, 766, 3089, 337, 264, 777, 3037, 295, 264, 1446, 13, 50678], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 348, "seek": 114038, "start": 1146.66, "end": 1147.66, "text": " Go buy it.", "tokens": [50678, 1037, 2256, 309, 13, 50728], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 349, "seek": 114038, "start": 1147.66, "end": 1149.98, "text": " Even if you have the old versions support him.", "tokens": [50728, 2754, 498, 291, 362, 264, 1331, 9606, 1406, 796, 13, 50844], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 350, "seek": 114038, "start": 1149.98, "end": 1154.6200000000001, "text": " I think he is the foundation of learning Elixir in today's world.", "tokens": [50844, 286, 519, 415, 307, 264, 7030, 295, 2539, 2699, 970, 347, 294, 965, 311, 1002, 13, 51076], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 351, "seek": 114038, "start": 1154.6200000000001, "end": 1157.1000000000001, "text": " I've had so much fun with this book.", "tokens": [51076, 286, 600, 632, 370, 709, 1019, 365, 341, 1446, 13, 51200], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 352, "seek": 114038, "start": 1157.1000000000001, "end": 1159.18, "text": " Didn't reference it at all while I was doing this.", "tokens": [51200, 11151, 380, 6408, 309, 412, 439, 1339, 286, 390, 884, 341, 13, 51304], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 353, "seek": 114038, "start": 1159.18, "end": 1161.42, "text": " I should have, but never mind.", "tokens": [51304, 286, 820, 362, 11, 457, 1128, 1575, 13, 51416], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 354, "seek": 114038, "start": 1161.42, "end": 1163.94, "text": " And also here is the coupon code 20% off.", "tokens": [51416, 400, 611, 510, 307, 264, 33390, 3089, 945, 4, 766, 13, 51542], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 355, "seek": 114038, "start": 1163.94, "end": 1170.0200000000002, "text": " Here is the coupon code for the conference where we will try to also bring everybody", "tokens": [51542, 1692, 307, 264, 33390, 3089, 337, 264, 7586, 689, 321, 486, 853, 281, 611, 1565, 2201, 51846], "temperature": 0.0, "avg_logprob": -0.17107587872129498, "compression_ratio": 1.644927536231884, "no_speech_prob": 0.03405161574482918}, {"id": 356, "seek": 117002, "start": 1170.06, "end": 1171.74, "text": " who does Elixir there.", "tokens": [50366, 567, 775, 2699, 970, 347, 456, 13, 50450], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 357, "seek": 117002, "start": 1171.74, "end": 1175.94, "text": " So if you want to do, if you want to come over and hang out, or if you have open source", "tokens": [50450, 407, 498, 291, 528, 281, 360, 11, 498, 291, 528, 281, 808, 670, 293, 3967, 484, 11, 420, 498, 291, 362, 1269, 4009, 50660], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 358, "seek": 117002, "start": 1175.94, "end": 1179.06, "text": " projects in Elixir, do come talk about it with me.", "tokens": [50660, 4455, 294, 2699, 970, 347, 11, 360, 808, 751, 466, 309, 365, 385, 13, 50816], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 359, "seek": 117002, "start": 1179.06, "end": 1180.06, "text": " I have a Gantt T-shirt.", "tokens": [50816, 286, 362, 257, 460, 394, 83, 314, 12, 15313, 13, 50866], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 360, "seek": 117002, "start": 1180.06, "end": 1181.54, "text": " I have some stickers here.", "tokens": [50866, 286, 362, 512, 21019, 510, 13, 50940], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 361, "seek": 117002, "start": 1181.54, "end": 1183.22, "text": " Call for Spickle Flyers.", "tokens": [50940, 7807, 337, 1738, 618, 306, 25294, 433, 13, 51024], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 362, "seek": 117002, "start": 1183.22, "end": 1184.22, "text": " And that's it.", "tokens": [51024, 400, 300, 311, 309, 13, 51074], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 363, "seek": 117002, "start": 1184.22, "end": 1185.22, "text": " Thank you very much.", "tokens": [51074, 1044, 291, 588, 709, 13, 51124], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 364, "seek": 117002, "start": 1185.22, "end": 1186.22, "text": " You're welcome.", "tokens": [51124, 509, 434, 2928, 13, 51174], "temperature": 0.0, "avg_logprob": -0.34324877869849113, "compression_ratio": 1.5052083333333333, "no_speech_prob": 0.1121654137969017}, {"id": 365, "seek": 118622, "start": 1186.22, "end": 1193.22, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50714], "temperature": 0.0, "avg_logprob": -0.7812641461690267, "compression_ratio": 0.7647058823529411, "no_speech_prob": 0.6898212432861328}, {"id": 366, "seek": 118622, "start": 1193.22, "end": 1194.22, "text": " You're welcome.", "tokens": [50714, 509, 434, 2928, 13, 50764], "temperature": 0.0, "avg_logprob": -0.7812641461690267, "compression_ratio": 0.7647058823529411, "no_speech_prob": 0.6898212432861328}], "language": "en"}