{"text": " All right. Hi, everyone. Today I wanted to talk about this subject that you can see on the screen. And yes, as you guessed, it's a click-back title. So sorry about that. But let me first talk to you about the origin story. So a few weeks, a few months ago, I had a chat with former coworkers, and we had to use JITC to talk. I don't know if any of you know JITC. Yeah, all right. So it's our WebRTC chat, and there's been an update a few weeks ago. I don't know the exact time frame because I'm not a JITC contributor, but basically you had to log on to create a room. And then I thought, yeah, but how do I know that the people that create the room are actually the people that pretend to be? Since, you know, right now there's a lot of AI going on, and you know, you cannot trust people on the Internet. And as you know, just our neighbor in the next room, so the RTC room are talking about Skynet and AI and all of this shit. So, I mean, we have the right to be afraid, right? So, I thought, okay, how easy would it be to create my own chat platform? So, I would want to have something that has OJO as well as video, and I don't want to have huge server requirements because I don't want to spend money on it. I also don't want to store, let's say, username and password because, I mean, it's 2024. Who uses password? I'm all right. But we still want to have a way to, you know, identify the people. So, what can we do? Just, yeah, just a few, yeah. Just a quick recap. I know the RTC room is next, so if you're not familiar with it, just go make a tour. So, I want to explain the whole principle of real-time communication, but just so you know, I take Dwayne Johnson as a reference. So, this would be our signaling server. So, what he does, he brings people together. So, you have all these people that are joined to Dwayne Johnson. So, you can, well, it's a central server. And what he does is then he stands back, and then the people just are connected together. So, you know, the first one is connected to these three others, the other one to the others, and like so. And you know you can trust Dwayne Johnson. Well, I mean the signal server because he has a TLS certificate. So, it's nice, but can you trust the peers? I mean, you don't know who they are. How does peer work? It's actually a bunch of information about the people. So, actually you would generate an object called an RTC peer connection object, which will contain information about your connection that you will stream to the other peers. So, yeah, can we trust the peers? And I thought, yeah, let's use a technique that is as old as computer science. Let's just use cryptographic keys because that's, I mean, it's easy. And for that, I decided to use the subtle crypto API, which is available both on Node.js and in the web. So, it's really great. And why did I choose keys? Because digital signatures are everywhere and pretty much foolproof. And right now we have a lot of ways to interact with keys. So, I don't know if you guys know about Fido WebOtten. So, basically like you have like those UB keys, which are external devices that you can store keys on. You also have like on your smartphone, you can just choose to use your fingerprint maybe on iPhones you can use your face recognition, I don't know. But yeah, basically you can use different stuff. You have like the cryptocurrency wallets that are basically a set of key. So, that's nice. Or if you don't have an ECDSA key per right now, you can just use a Kudo SSH key gen. I mean, it's... And yeah, for those of you who are unfamiliar with cryptography, where have you been, but let's just say that. You have basically two keys. So, you have your private key, you have your public key, you should never share your private key with anyone, even with your mother on her deathbed. It's for you, it's yours, you don't share it. And there is your public key that you will share with everybody. And so, basically what we're going to do is that we're going to send a message in ClearTech, so the end goal here is not to change the message, but to keep it as clear as possible. And to add what we call a signature. A signature is simply something that your private key will generate, so your private key is private. And it remains private. But you include a signature that is generated from the message and added to the message. And then you add your public key, which would basically will allow anyone to decrypt the signature and to say that indeed you are the one owning the private key and that message is genuine. There's a lot of math stuff behind that. Well, we are not going into the details, but it's basically prime numbers and all this kind of stuff. Okay, so as I told you, we're going to use the Sodel Crypto API, which is available both on the browser and on Node.js. And beyond signing and verifying message, you can even generate and derive new keys. So even if you don't have all the keys we talked about earlier, you can still generate keys in your browser or in Node.js, and that could be useful for things that we'll talk afterwards. And that's what this talk is all about. Okay, so here comes the plan. So basically what we're going to do is that the system we're going to create, we will create a server, so the signal-signal server I told you about, and what it will do, so the first client we connect to the server, we will call him the host, so he hosts the room. He creates a room with a unique ID, and that's done using WebSockets. I'm sure you're all familiar with WebSockets. You can talk afterwards. No problem. It's pretty basic stuff as well. The host can send a special type of message to the room to send the public keys that he wants to accept in the room. So basically I would create a room, say I would create a room for my party, and I will add all the public keys of the people that I know, and then I will send you the link to the room, and if you want to join the room, I will ask you to sign a message to prove your identity. And basically since now you can use your phone to confirm your identity, for instance with your footprint, that's pretty much how I can assume your nut and AI trying to ruin my birthday party or whatever, so it's nice. So we do that for each peer, and it's okay. Just a quick security disclaimer though. When you land on the Sodor Crypto documentation, you get that big warning. So yeah, it's a long text, but basically it can be summed up as this project we're building is for fun. There's a lot of security considerations to take into account, and basically that is how you store key and how you should manage them. And as Adi Sharmeer says, Adi Sharmeer is one of the guys that created the RSA algorithm. Sure, it's really hard to brute force cryptography and to try to guess a ciphertext by just brute forcing, but usually the mistakes come from the system and not from the algorithm. So let's dive into the code. So basically what we're going to do. Here we're going to import a key from our browser. So we're going to use the P key, the word that's written there. To as an input key, we could use, as I said, a crypto wallet, a FIDO device or whatever, but here let's use something that should be generated from the terminal. We're using, so it's an elliptic curve signature, so it's using, once again, it's an algorithm that won't go into the details, but it's just a way to generate signature. And we specify that we want to use this key for signing because you can also encrypt, you can also derive keys that's other use you can have. Once again, we can talk about that after the presentation. There's a lot of stuff to do, but yeah, that's basically the stuff. And I'm also going to give you an overview of the idea in check I was telling you about. So basically when you connect, the server will ask you to sign this stuff, which is a JSON message, so well, this is TypeScript, whatever. So this is the payload we're getting from the server. I'm also adding a property which is called issued at, so that ensures that you have to sign the message within a certain time frame, otherwise you could have what we call replay attacks where people just trying to send a signature until it works. So this allows us to mitigate some effects. And so that is what the server hands you over, and this is what you would send back, so once it's signed, so you send the payload that you just saw alongside signature and your public key to verify the signature. Okay, so this is how we sign the payload. So once again, it's a big bunch of code, but it's actually quite easy to understand. So we have the key. We have the payload. The key is strictly, so we have the type definition for the script interface. So I heard the TypeScript question in the audience, so don't worry, it's fine. All the interfaces are defined. So we have the key and we have the payload. The interface I just showed you, and this function will return signed payload. So basically what we do is that we take the payload, which is a JSON object, you will stringify it, and then convert it to bytes, because everything happens in buffer and bytes. And then we will just sign it, and you know it's a simple function, just crypto.sign. We just choose the algorithm once again, ECDSA, so elliptic curve. We want to produce a 265.56 hash. We specify the key that we want to use, and we specify the buffer we want to sign. So pretty standard stuff. And we return that signed payload. So as you can see, it's really, really, really simple. I was buffered at how easy it was. And on the server side, it's pretty much the same thing. So you want to verify the payload. So pretty much the same thing as I told you earlier. The function looks pretty much the same. So we first need to transform the payload into a JSON object, but then once again we import the key. Once again, we use the JSON Web Key Format. You may be aware of the JSON Web Tokens. It's pretty much the same spec, but there is just a key. So it's a key that's been serialized as JSON. False mean we don't want to export it, and verify means it's a public key, and it's used to verify signature. Once again, we generate a signable variable, and it basically bytes to pass to the verify function. And then once again, the algorithm, the key, the signature. See, it's very, very easy, and it works. So all right, so I'm not going to give you the whole code of the single server because, well, it's not hard, not hard at all, but it's just switch statements. And I don't think it's really interesting to talk about here. Basically what we're going to do is that we have two types of, we have several types of message we send to the socket. I told you about the one that the host sent at the beginning, so just to white list a bunch of public keys. And then here I'm going to show you two. The first one is the one I call request. So when a new guest want to come into my room, that's one of the functions, and the other one is the out, so that's the one we just saw. So it's basically verifying the signature. So yeah, when I receive an off message, I will call the connect peer function. So basically what it does, simple as that, first it looks if the public key is valid for the room ID. So if I indeed white listed that public key. The second one is the issue that timestamp, which looks if that timestamp is valid. So for instance, if my server sent that message two minutes ago, I deemed that it's still an acceptable time to have, to receive the payload back. If it dates back to one hour, I just teach the message because that's probably a curve trying to ruin my birthday party. And the last one is just the signature verification that we just talked about. And if it's all good, and that's how WebRTC works, we will give the peer information to all the other peers so that they can chat together. One thing that I didn't mention, but it's important to know, is once you're using WebRTC, everything is, every information is from peer to peer. So the server gets back and there's no information that are sent to the server, so it's really important to know. And that's actually quite a cool design. Last thing I want to say is that I didn't get into the details and specific of WebRTC, but for the sake of simplicity, I recommend to use the simple peer library. I'm not paid by this guy, but this guy does awesome stuff. So use the library. And I just want to go a bit deeper. So I talked about video and audio chat, but what more can we do? So since we have, I guess this is your call to go further down the peer to peer rabbit hole. So let's use that sort of crypto stuff. You can do a lot of stuff. WebRTC is really great. You can do a lot of really great stuff. And I want to finish by doing a quick shout out section. So all these people already trust the process. So I'm going to give you a quick overview of some project that I worked with far or less far. And yeah. So first of all, I want to shout out about WebTorrent. Anybody know about WebTorrent? Nice. So it's a Torrent client that's built in the browser. It uses WebRTC data channels to stream data. It's really nice. It means that you don't have to depend on a central server to actually stream data. IPFS, anybody knows about IPFS? Yeah. So great guys also. They were there last year at Fosdame. I don't think they're here this year, but it's basically a protocol that it tends to not replace HTTP, but be side by side with HTTP. Basically it works by creating a unique hash for files. So they're fingerprint files with just a shaft fingerprint. And basically if you know the hash of the file, you can just request the file and it will flow a DHT. It's a really complex system. It's really interesting. You can retrieve that file that is hosted somewhere on an IPFS node. And IPFS nodes are connected to each other using also WebSocket and WebRTC. So it's a really, really interesting project. You should have. It's very nice. Some of us are here, but only a few of us. IPFS? Yeah. Oh, nice. You're so great. I love you. And if you want to know more about IPFS, I'm not the one to ask, basically, as those guys. And lastly, that's the project I've also worked on last year. It's basically a project that allows computation on top of IPFS. Also a great project. I think they are trying to hire a front-end developer. So if you like stuff with crypto and just talk to these guys. All right. I don't know how much time we still have left, but I made this great slide for questions. So does anybody have a question? Any questions? A few minutes for questions. All right. Or else I have that slide with my credentials. So this is my GitHub. This is my telegram. She wanted to reach me. And this is my public key if you want to. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " All right.", "tokens": [50364, 1057, 558, 13, 50714], "temperature": 0.0, "avg_logprob": -0.43641874139959164, "compression_ratio": 1.2900763358778626, "no_speech_prob": 0.20134881138801575}, {"id": 1, "seek": 0, "start": 7.0, "end": 9.0, "text": " Hi, everyone.", "tokens": [50714, 2421, 11, 1518, 13, 50814], "temperature": 0.0, "avg_logprob": -0.43641874139959164, "compression_ratio": 1.2900763358778626, "no_speech_prob": 0.20134881138801575}, {"id": 2, "seek": 0, "start": 9.0, "end": 22.0, "text": " Today I wanted to talk about this subject that you can see on the screen.", "tokens": [50814, 2692, 286, 1415, 281, 751, 466, 341, 3983, 300, 291, 393, 536, 322, 264, 2568, 13, 51464], "temperature": 0.0, "avg_logprob": -0.43641874139959164, "compression_ratio": 1.2900763358778626, "no_speech_prob": 0.20134881138801575}, {"id": 3, "seek": 0, "start": 22.0, "end": 24.0, "text": " And yes, as you guessed, it's a click-back title.", "tokens": [51464, 400, 2086, 11, 382, 291, 21852, 11, 309, 311, 257, 2052, 12, 3207, 4876, 13, 51564], "temperature": 0.0, "avg_logprob": -0.43641874139959164, "compression_ratio": 1.2900763358778626, "no_speech_prob": 0.20134881138801575}, {"id": 4, "seek": 0, "start": 24.0, "end": 26.0, "text": " So sorry about that.", "tokens": [51564, 407, 2597, 466, 300, 13, 51664], "temperature": 0.0, "avg_logprob": -0.43641874139959164, "compression_ratio": 1.2900763358778626, "no_speech_prob": 0.20134881138801575}, {"id": 5, "seek": 2600, "start": 26.0, "end": 30.0, "text": " But let me first talk to you about the origin story.", "tokens": [50364, 583, 718, 385, 700, 751, 281, 291, 466, 264, 4957, 1657, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 6, "seek": 2600, "start": 30.0, "end": 37.0, "text": " So a few weeks, a few months ago, I had a chat with former coworkers,", "tokens": [50564, 407, 257, 1326, 3259, 11, 257, 1326, 2493, 2057, 11, 286, 632, 257, 5081, 365, 5819, 43465, 11, 50914], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 7, "seek": 2600, "start": 37.0, "end": 41.0, "text": " and we had to use JITC to talk.", "tokens": [50914, 293, 321, 632, 281, 764, 508, 3927, 34, 281, 751, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 8, "seek": 2600, "start": 41.0, "end": 44.0, "text": " I don't know if any of you know JITC.", "tokens": [51114, 286, 500, 380, 458, 498, 604, 295, 291, 458, 508, 3927, 34, 13, 51264], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 9, "seek": 2600, "start": 44.0, "end": 45.0, "text": " Yeah, all right.", "tokens": [51264, 865, 11, 439, 558, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 10, "seek": 2600, "start": 45.0, "end": 50.0, "text": " So it's our WebRTC chat, and there's been an update a few weeks ago.", "tokens": [51314, 407, 309, 311, 527, 9573, 49, 18238, 5081, 11, 293, 456, 311, 668, 364, 5623, 257, 1326, 3259, 2057, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 11, "seek": 2600, "start": 50.0, "end": 53.0, "text": " I don't know the exact time frame because I'm not a JITC contributor,", "tokens": [51564, 286, 500, 380, 458, 264, 1900, 565, 3920, 570, 286, 478, 406, 257, 508, 3927, 34, 42859, 11, 51714], "temperature": 0.0, "avg_logprob": -0.15169192626412992, "compression_ratio": 1.5535714285714286, "no_speech_prob": 0.02646484039723873}, {"id": 12, "seek": 5300, "start": 53.0, "end": 56.0, "text": " but basically you had to log on to create a room.", "tokens": [50364, 457, 1936, 291, 632, 281, 3565, 322, 281, 1884, 257, 1808, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 13, "seek": 5300, "start": 56.0, "end": 61.0, "text": " And then I thought, yeah, but how do I know that the people that create the room", "tokens": [50514, 400, 550, 286, 1194, 11, 1338, 11, 457, 577, 360, 286, 458, 300, 264, 561, 300, 1884, 264, 1808, 50764], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 14, "seek": 5300, "start": 61.0, "end": 64.0, "text": " are actually the people that pretend to be?", "tokens": [50764, 366, 767, 264, 561, 300, 11865, 281, 312, 30, 50914], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 15, "seek": 5300, "start": 64.0, "end": 67.0, "text": " Since, you know, right now there's a lot of AI going on,", "tokens": [50914, 4162, 11, 291, 458, 11, 558, 586, 456, 311, 257, 688, 295, 7318, 516, 322, 11, 51064], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 16, "seek": 5300, "start": 67.0, "end": 70.0, "text": " and you know, you cannot trust people on the Internet.", "tokens": [51064, 293, 291, 458, 11, 291, 2644, 3361, 561, 322, 264, 7703, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 17, "seek": 5300, "start": 70.0, "end": 74.0, "text": " And as you know, just our neighbor in the next room,", "tokens": [51214, 400, 382, 291, 458, 11, 445, 527, 5987, 294, 264, 958, 1808, 11, 51414], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 18, "seek": 5300, "start": 74.0, "end": 79.0, "text": " so the RTC room are talking about Skynet and AI and all of this shit.", "tokens": [51414, 370, 264, 497, 18238, 1808, 366, 1417, 466, 7324, 2534, 302, 293, 7318, 293, 439, 295, 341, 4611, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 19, "seek": 5300, "start": 79.0, "end": 82.0, "text": " So, I mean, we have the right to be afraid, right?", "tokens": [51664, 407, 11, 286, 914, 11, 321, 362, 264, 558, 281, 312, 4638, 11, 558, 30, 51814], "temperature": 0.0, "avg_logprob": -0.09784028046113208, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.2561085522174835}, {"id": 20, "seek": 8200, "start": 82.0, "end": 91.0, "text": " So, I thought, okay, how easy would it be to create my own chat platform?", "tokens": [50364, 407, 11, 286, 1194, 11, 1392, 11, 577, 1858, 576, 309, 312, 281, 1884, 452, 1065, 5081, 3663, 30, 50814], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 21, "seek": 8200, "start": 91.0, "end": 97.0, "text": " So, I would want to have something that has OJO as well as video,", "tokens": [50814, 407, 11, 286, 576, 528, 281, 362, 746, 300, 575, 422, 37523, 382, 731, 382, 960, 11, 51114], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 22, "seek": 8200, "start": 97.0, "end": 100.0, "text": " and I don't want to have huge server requirements", "tokens": [51114, 293, 286, 500, 380, 528, 281, 362, 2603, 7154, 7728, 51264], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 23, "seek": 8200, "start": 100.0, "end": 103.0, "text": " because I don't want to spend money on it.", "tokens": [51264, 570, 286, 500, 380, 528, 281, 3496, 1460, 322, 309, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 24, "seek": 8200, "start": 103.0, "end": 106.0, "text": " I also don't want to store, let's say, username and password", "tokens": [51414, 286, 611, 500, 380, 528, 281, 3531, 11, 718, 311, 584, 11, 30351, 293, 11524, 51564], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 25, "seek": 8200, "start": 106.0, "end": 108.0, "text": " because, I mean, it's 2024.", "tokens": [51564, 570, 11, 286, 914, 11, 309, 311, 45237, 13, 51664], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 26, "seek": 8200, "start": 108.0, "end": 110.0, "text": " Who uses password?", "tokens": [51664, 2102, 4960, 11524, 30, 51764], "temperature": 0.0, "avg_logprob": -0.14602858477299757, "compression_ratio": 1.6037735849056605, "no_speech_prob": 0.0045038070529699326}, {"id": 27, "seek": 11000, "start": 111.0, "end": 112.0, "text": " I'm all right.", "tokens": [50414, 286, 478, 439, 558, 13, 50464], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 28, "seek": 11000, "start": 112.0, "end": 118.0, "text": " But we still want to have a way to, you know, identify the people.", "tokens": [50464, 583, 321, 920, 528, 281, 362, 257, 636, 281, 11, 291, 458, 11, 5876, 264, 561, 13, 50764], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 29, "seek": 11000, "start": 118.0, "end": 120.0, "text": " So, what can we do?", "tokens": [50764, 407, 11, 437, 393, 321, 360, 30, 50864], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 30, "seek": 11000, "start": 121.0, "end": 124.0, "text": " Just, yeah, just a few, yeah.", "tokens": [50914, 1449, 11, 1338, 11, 445, 257, 1326, 11, 1338, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 31, "seek": 11000, "start": 124.0, "end": 125.0, "text": " Just a quick recap.", "tokens": [51064, 1449, 257, 1702, 20928, 13, 51114], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 32, "seek": 11000, "start": 125.0, "end": 127.0, "text": " I know the RTC room is next,", "tokens": [51114, 286, 458, 264, 497, 18238, 1808, 307, 958, 11, 51214], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 33, "seek": 11000, "start": 127.0, "end": 131.0, "text": " so if you're not familiar with it, just go make a tour.", "tokens": [51214, 370, 498, 291, 434, 406, 4963, 365, 309, 11, 445, 352, 652, 257, 3512, 13, 51414], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 34, "seek": 11000, "start": 131.0, "end": 135.0, "text": " So, I want to explain the whole principle of real-time communication,", "tokens": [51414, 407, 11, 286, 528, 281, 2903, 264, 1379, 8665, 295, 957, 12, 3766, 6101, 11, 51614], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 35, "seek": 11000, "start": 135.0, "end": 139.0, "text": " but just so you know, I take Dwayne Johnson as a reference.", "tokens": [51614, 457, 445, 370, 291, 458, 11, 286, 747, 413, 676, 716, 9779, 382, 257, 6408, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19334660057260208, "compression_ratio": 1.5378151260504203, "no_speech_prob": 0.008223590441048145}, {"id": 36, "seek": 13900, "start": 139.0, "end": 141.0, "text": " So, this would be our signaling server.", "tokens": [50364, 407, 11, 341, 576, 312, 527, 38639, 7154, 13, 50464], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 37, "seek": 13900, "start": 141.0, "end": 144.0, "text": " So, what he does, he brings people together.", "tokens": [50464, 407, 11, 437, 415, 775, 11, 415, 5607, 561, 1214, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 38, "seek": 13900, "start": 144.0, "end": 148.0, "text": " So, you have all these people that are joined to Dwayne Johnson.", "tokens": [50614, 407, 11, 291, 362, 439, 613, 561, 300, 366, 6869, 281, 413, 676, 716, 9779, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 39, "seek": 13900, "start": 148.0, "end": 151.0, "text": " So, you can, well, it's a central server.", "tokens": [50814, 407, 11, 291, 393, 11, 731, 11, 309, 311, 257, 5777, 7154, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 40, "seek": 13900, "start": 151.0, "end": 155.0, "text": " And what he does is then he stands back,", "tokens": [50964, 400, 437, 415, 775, 307, 550, 415, 7382, 646, 11, 51164], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 41, "seek": 13900, "start": 155.0, "end": 158.0, "text": " and then the people just are connected together.", "tokens": [51164, 293, 550, 264, 561, 445, 366, 4582, 1214, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 42, "seek": 13900, "start": 158.0, "end": 160.0, "text": " So, you know, the first one is connected to these three others,", "tokens": [51314, 407, 11, 291, 458, 11, 264, 700, 472, 307, 4582, 281, 613, 1045, 2357, 11, 51414], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 43, "seek": 13900, "start": 160.0, "end": 163.0, "text": " the other one to the others, and like so.", "tokens": [51414, 264, 661, 472, 281, 264, 2357, 11, 293, 411, 370, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 44, "seek": 13900, "start": 163.0, "end": 165.0, "text": " And you know you can trust Dwayne Johnson.", "tokens": [51564, 400, 291, 458, 291, 393, 3361, 413, 676, 716, 9779, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 45, "seek": 13900, "start": 165.0, "end": 168.0, "text": " Well, I mean the signal server because he has a TLS certificate.", "tokens": [51664, 1042, 11, 286, 914, 264, 6358, 7154, 570, 415, 575, 257, 314, 19198, 15953, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13914084098708462, "compression_ratio": 1.8893129770992367, "no_speech_prob": 0.004444962367415428}, {"id": 46, "seek": 16800, "start": 168.0, "end": 172.0, "text": " So, it's nice, but can you trust the peers?", "tokens": [50364, 407, 11, 309, 311, 1481, 11, 457, 393, 291, 3361, 264, 16739, 30, 50564], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 47, "seek": 16800, "start": 172.0, "end": 174.0, "text": " I mean, you don't know who they are.", "tokens": [50564, 286, 914, 11, 291, 500, 380, 458, 567, 436, 366, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 48, "seek": 16800, "start": 174.0, "end": 176.0, "text": " How does peer work?", "tokens": [50664, 1012, 775, 15108, 589, 30, 50764], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 49, "seek": 16800, "start": 176.0, "end": 181.0, "text": " It's actually a bunch of information about the people.", "tokens": [50764, 467, 311, 767, 257, 3840, 295, 1589, 466, 264, 561, 13, 51014], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 50, "seek": 16800, "start": 181.0, "end": 186.0, "text": " So, actually you would generate an object called an RTC peer connection object,", "tokens": [51014, 407, 11, 767, 291, 576, 8460, 364, 2657, 1219, 364, 497, 18238, 15108, 4984, 2657, 11, 51264], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 51, "seek": 16800, "start": 186.0, "end": 189.0, "text": " which will contain information about your connection", "tokens": [51264, 597, 486, 5304, 1589, 466, 428, 4984, 51414], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 52, "seek": 16800, "start": 189.0, "end": 192.0, "text": " that you will stream to the other peers.", "tokens": [51414, 300, 291, 486, 4309, 281, 264, 661, 16739, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 53, "seek": 16800, "start": 192.0, "end": 196.0, "text": " So, yeah, can we trust the peers?", "tokens": [51564, 407, 11, 1338, 11, 393, 321, 3361, 264, 16739, 30, 51764], "temperature": 0.0, "avg_logprob": -0.09190216064453124, "compression_ratio": 1.704225352112676, "no_speech_prob": 0.01068931445479393}, {"id": 54, "seek": 19600, "start": 196.0, "end": 203.0, "text": " And I thought, yeah, let's use a technique that is as old as computer science.", "tokens": [50364, 400, 286, 1194, 11, 1338, 11, 718, 311, 764, 257, 6532, 300, 307, 382, 1331, 382, 3820, 3497, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11399153965275462, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.010621150024235249}, {"id": 55, "seek": 19600, "start": 203.0, "end": 207.0, "text": " Let's just use cryptographic keys because that's, I mean, it's easy.", "tokens": [50714, 961, 311, 445, 764, 9844, 12295, 9317, 570, 300, 311, 11, 286, 914, 11, 309, 311, 1858, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11399153965275462, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.010621150024235249}, {"id": 56, "seek": 19600, "start": 207.0, "end": 217.0, "text": " And for that, I decided to use the subtle crypto API,", "tokens": [50914, 400, 337, 300, 11, 286, 3047, 281, 764, 264, 13743, 17240, 9362, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11399153965275462, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.010621150024235249}, {"id": 57, "seek": 19600, "start": 217.0, "end": 220.0, "text": " which is available both on Node.js and in the web.", "tokens": [51414, 597, 307, 2435, 1293, 322, 38640, 13, 25530, 293, 294, 264, 3670, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11399153965275462, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.010621150024235249}, {"id": 58, "seek": 19600, "start": 220.0, "end": 222.0, "text": " So, it's really great.", "tokens": [51564, 407, 11, 309, 311, 534, 869, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11399153965275462, "compression_ratio": 1.4550264550264551, "no_speech_prob": 0.010621150024235249}, {"id": 59, "seek": 22200, "start": 223.0, "end": 226.0, "text": " And why did I choose keys?", "tokens": [50414, 400, 983, 630, 286, 2826, 9317, 30, 50564], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 60, "seek": 22200, "start": 226.0, "end": 231.0, "text": " Because digital signatures are everywhere and pretty much foolproof.", "tokens": [50564, 1436, 4562, 32322, 366, 5315, 293, 1238, 709, 7979, 15690, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 61, "seek": 22200, "start": 231.0, "end": 235.0, "text": " And right now we have a lot of ways to interact with keys.", "tokens": [50814, 400, 558, 586, 321, 362, 257, 688, 295, 2098, 281, 4648, 365, 9317, 13, 51014], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 62, "seek": 22200, "start": 235.0, "end": 239.0, "text": " So, I don't know if you guys know about Fido WebOtten.", "tokens": [51014, 407, 11, 286, 500, 380, 458, 498, 291, 1074, 458, 466, 479, 2925, 9573, 46, 83, 1147, 13, 51214], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 63, "seek": 22200, "start": 239.0, "end": 242.0, "text": " So, basically like you have like those UB keys,", "tokens": [51214, 407, 11, 1936, 411, 291, 362, 411, 729, 624, 33, 9317, 11, 51364], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 64, "seek": 22200, "start": 242.0, "end": 245.0, "text": " which are external devices that you can store keys on.", "tokens": [51364, 597, 366, 8320, 5759, 300, 291, 393, 3531, 9317, 322, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 65, "seek": 22200, "start": 245.0, "end": 248.0, "text": " You also have like on your smartphone,", "tokens": [51514, 509, 611, 362, 411, 322, 428, 13307, 11, 51664], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 66, "seek": 22200, "start": 248.0, "end": 251.0, "text": " you can just choose to use your fingerprint", "tokens": [51664, 291, 393, 445, 2826, 281, 764, 428, 30715, 51814], "temperature": 0.0, "avg_logprob": -0.17058060548015844, "compression_ratio": 1.5551181102362204, "no_speech_prob": 0.030965035781264305}, {"id": 67, "seek": 25100, "start": 251.0, "end": 255.0, "text": " maybe on iPhones you can use your face recognition, I don't know.", "tokens": [50364, 1310, 322, 43793, 291, 393, 764, 428, 1851, 11150, 11, 286, 500, 380, 458, 13, 50564], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 68, "seek": 25100, "start": 255.0, "end": 257.0, "text": " But yeah, basically you can use different stuff.", "tokens": [50564, 583, 1338, 11, 1936, 291, 393, 764, 819, 1507, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 69, "seek": 25100, "start": 257.0, "end": 262.0, "text": " You have like the cryptocurrency wallets that are basically a set of key.", "tokens": [50664, 509, 362, 411, 264, 28809, 2929, 1385, 300, 366, 1936, 257, 992, 295, 2141, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 70, "seek": 25100, "start": 262.0, "end": 264.0, "text": " So, that's nice.", "tokens": [50914, 407, 11, 300, 311, 1481, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 71, "seek": 25100, "start": 264.0, "end": 268.0, "text": " Or if you don't have an ECDSA key per right now,", "tokens": [51014, 1610, 498, 291, 500, 380, 362, 364, 19081, 35, 8886, 2141, 680, 558, 586, 11, 51214], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 72, "seek": 25100, "start": 268.0, "end": 271.0, "text": " you can just use a Kudo SSH key gen.", "tokens": [51214, 291, 393, 445, 764, 257, 591, 6207, 12238, 39, 2141, 1049, 13, 51364], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 73, "seek": 25100, "start": 271.0, "end": 274.0, "text": " I mean, it's...", "tokens": [51364, 286, 914, 11, 309, 311, 485, 51514], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 74, "seek": 25100, "start": 274.0, "end": 277.0, "text": " And yeah, for those of you who are unfamiliar with cryptography,", "tokens": [51514, 400, 1338, 11, 337, 729, 295, 291, 567, 366, 29415, 365, 9844, 5820, 11, 51664], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 75, "seek": 25100, "start": 277.0, "end": 280.0, "text": " where have you been, but let's just say that.", "tokens": [51664, 689, 362, 291, 668, 11, 457, 718, 311, 445, 584, 300, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16524932861328126, "compression_ratio": 1.5893536121673004, "no_speech_prob": 0.005782853811979294}, {"id": 76, "seek": 28000, "start": 281.0, "end": 283.0, "text": " You have basically two keys.", "tokens": [50414, 509, 362, 1936, 732, 9317, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 77, "seek": 28000, "start": 283.0, "end": 285.0, "text": " So, you have your private key, you have your public key,", "tokens": [50514, 407, 11, 291, 362, 428, 4551, 2141, 11, 291, 362, 428, 1908, 2141, 11, 50614], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 78, "seek": 28000, "start": 285.0, "end": 287.0, "text": " you should never share your private key with anyone,", "tokens": [50614, 291, 820, 1128, 2073, 428, 4551, 2141, 365, 2878, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 79, "seek": 28000, "start": 287.0, "end": 290.0, "text": " even with your mother on her deathbed.", "tokens": [50714, 754, 365, 428, 2895, 322, 720, 2966, 2883, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 80, "seek": 28000, "start": 290.0, "end": 292.0, "text": " It's for you, it's yours, you don't share it.", "tokens": [50864, 467, 311, 337, 291, 11, 309, 311, 6342, 11, 291, 500, 380, 2073, 309, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 81, "seek": 28000, "start": 292.0, "end": 296.0, "text": " And there is your public key that you will share with everybody.", "tokens": [50964, 400, 456, 307, 428, 1908, 2141, 300, 291, 486, 2073, 365, 2201, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 82, "seek": 28000, "start": 296.0, "end": 302.0, "text": " And so, basically what we're going to do is that we're going to send a message", "tokens": [51164, 400, 370, 11, 1936, 437, 321, 434, 516, 281, 360, 307, 300, 321, 434, 516, 281, 2845, 257, 3636, 51464], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 83, "seek": 28000, "start": 302.0, "end": 308.0, "text": " in ClearTech, so the end goal here is not to change the message,", "tokens": [51464, 294, 14993, 36050, 11, 370, 264, 917, 3387, 510, 307, 406, 281, 1319, 264, 3636, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1298518975575765, "compression_ratio": 1.9030837004405285, "no_speech_prob": 0.004812087398022413}, {"id": 84, "seek": 30800, "start": 308.0, "end": 310.0, "text": " but to keep it as clear as possible.", "tokens": [50364, 457, 281, 1066, 309, 382, 1850, 382, 1944, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 85, "seek": 30800, "start": 310.0, "end": 312.0, "text": " And to add what we call a signature.", "tokens": [50464, 400, 281, 909, 437, 321, 818, 257, 13397, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 86, "seek": 30800, "start": 312.0, "end": 315.0, "text": " A signature is simply something that your private key will generate,", "tokens": [50564, 316, 13397, 307, 2935, 746, 300, 428, 4551, 2141, 486, 8460, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 87, "seek": 30800, "start": 315.0, "end": 317.0, "text": " so your private key is private.", "tokens": [50714, 370, 428, 4551, 2141, 307, 4551, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 88, "seek": 30800, "start": 317.0, "end": 319.0, "text": " And it remains private.", "tokens": [50814, 400, 309, 7023, 4551, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 89, "seek": 30800, "start": 319.0, "end": 323.0, "text": " But you include a signature that is generated from the message", "tokens": [50914, 583, 291, 4090, 257, 13397, 300, 307, 10833, 490, 264, 3636, 51114], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 90, "seek": 30800, "start": 323.0, "end": 326.0, "text": " and added to the message.", "tokens": [51114, 293, 3869, 281, 264, 3636, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 91, "seek": 30800, "start": 326.0, "end": 328.0, "text": " And then you add your public key,", "tokens": [51264, 400, 550, 291, 909, 428, 1908, 2141, 11, 51364], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 92, "seek": 30800, "start": 328.0, "end": 335.0, "text": " which would basically will allow anyone to decrypt the signature", "tokens": [51364, 597, 576, 1936, 486, 2089, 2878, 281, 979, 627, 662, 264, 13397, 51714], "temperature": 0.0, "avg_logprob": -0.1477154336794458, "compression_ratio": 1.838095238095238, "no_speech_prob": 0.007109197787940502}, {"id": 93, "seek": 33500, "start": 335.0, "end": 339.0, "text": " and to say that indeed you are the one owning the private key", "tokens": [50364, 293, 281, 584, 300, 6451, 291, 366, 264, 472, 29820, 264, 4551, 2141, 50564], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 94, "seek": 33500, "start": 339.0, "end": 341.0, "text": " and that message is genuine.", "tokens": [50564, 293, 300, 3636, 307, 16699, 13, 50664], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 95, "seek": 33500, "start": 341.0, "end": 344.0, "text": " There's a lot of math stuff behind that.", "tokens": [50664, 821, 311, 257, 688, 295, 5221, 1507, 2261, 300, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 96, "seek": 33500, "start": 344.0, "end": 347.0, "text": " Well, we are not going into the details,", "tokens": [50814, 1042, 11, 321, 366, 406, 516, 666, 264, 4365, 11, 50964], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 97, "seek": 33500, "start": 347.0, "end": 352.0, "text": " but it's basically prime numbers and all this kind of stuff.", "tokens": [50964, 457, 309, 311, 1936, 5835, 3547, 293, 439, 341, 733, 295, 1507, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 98, "seek": 33500, "start": 352.0, "end": 360.0, "text": " Okay, so as I told you, we're going to use the Sodel Crypto API,", "tokens": [51214, 1033, 11, 370, 382, 286, 1907, 291, 11, 321, 434, 516, 281, 764, 264, 318, 41147, 34809, 78, 9362, 11, 51614], "temperature": 0.0, "avg_logprob": -0.2161992538807004, "compression_ratio": 1.4825870646766168, "no_speech_prob": 0.004754063673317432}, {"id": 99, "seek": 36000, "start": 360.0, "end": 366.0, "text": " which is available both on the browser and on Node.js.", "tokens": [50364, 597, 307, 2435, 1293, 322, 264, 11185, 293, 322, 38640, 13, 25530, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 100, "seek": 36000, "start": 366.0, "end": 368.0, "text": " And beyond signing and verifying message,", "tokens": [50664, 400, 4399, 13393, 293, 1306, 5489, 3636, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 101, "seek": 36000, "start": 368.0, "end": 371.0, "text": " you can even generate and derive new keys.", "tokens": [50764, 291, 393, 754, 8460, 293, 28446, 777, 9317, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 102, "seek": 36000, "start": 371.0, "end": 376.0, "text": " So even if you don't have all the keys we talked about earlier,", "tokens": [50914, 407, 754, 498, 291, 500, 380, 362, 439, 264, 9317, 321, 2825, 466, 3071, 11, 51164], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 103, "seek": 36000, "start": 376.0, "end": 380.0, "text": " you can still generate keys in your browser or in Node.js,", "tokens": [51164, 291, 393, 920, 8460, 9317, 294, 428, 11185, 420, 294, 38640, 13, 25530, 11, 51364], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 104, "seek": 36000, "start": 380.0, "end": 385.0, "text": " and that could be useful for things that we'll talk afterwards.", "tokens": [51364, 293, 300, 727, 312, 4420, 337, 721, 300, 321, 603, 751, 10543, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 105, "seek": 36000, "start": 385.0, "end": 387.0, "text": " And that's what this talk is all about.", "tokens": [51614, 400, 300, 311, 437, 341, 751, 307, 439, 466, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09620999316779935, "compression_ratio": 1.6712328767123288, "no_speech_prob": 0.04223092272877693}, {"id": 106, "seek": 38700, "start": 388.0, "end": 390.0, "text": " Okay, so here comes the plan.", "tokens": [50414, 1033, 11, 370, 510, 1487, 264, 1393, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 107, "seek": 38700, "start": 390.0, "end": 395.0, "text": " So basically what we're going to do is that the system we're going to create,", "tokens": [50514, 407, 1936, 437, 321, 434, 516, 281, 360, 307, 300, 264, 1185, 321, 434, 516, 281, 1884, 11, 50764], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 108, "seek": 38700, "start": 395.0, "end": 399.0, "text": " we will create a server, so the signal-signal server I told you about,", "tokens": [50764, 321, 486, 1884, 257, 7154, 11, 370, 264, 6358, 12, 82, 788, 304, 7154, 286, 1907, 291, 466, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 109, "seek": 38700, "start": 399.0, "end": 404.0, "text": " and what it will do, so the first client we connect to the server,", "tokens": [50964, 293, 437, 309, 486, 360, 11, 370, 264, 700, 6423, 321, 1745, 281, 264, 7154, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 110, "seek": 38700, "start": 404.0, "end": 408.0, "text": " we will call him the host, so he hosts the room.", "tokens": [51214, 321, 486, 818, 796, 264, 3975, 11, 370, 415, 21573, 264, 1808, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 111, "seek": 38700, "start": 408.0, "end": 413.0, "text": " He creates a room with a unique ID, and that's done using WebSockets.", "tokens": [51414, 634, 7829, 257, 1808, 365, 257, 3845, 7348, 11, 293, 300, 311, 1096, 1228, 9573, 50, 1560, 1385, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 112, "seek": 38700, "start": 413.0, "end": 415.0, "text": " I'm sure you're all familiar with WebSockets.", "tokens": [51664, 286, 478, 988, 291, 434, 439, 4963, 365, 9573, 50, 1560, 1385, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1833141827192463, "compression_ratio": 1.7446808510638299, "no_speech_prob": 0.0016310106730088592}, {"id": 113, "seek": 41500, "start": 415.0, "end": 416.0, "text": " You can talk afterwards.", "tokens": [50364, 509, 393, 751, 10543, 13, 50414], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 114, "seek": 41500, "start": 416.0, "end": 417.0, "text": " No problem.", "tokens": [50414, 883, 1154, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 115, "seek": 41500, "start": 417.0, "end": 419.0, "text": " It's pretty basic stuff as well.", "tokens": [50464, 467, 311, 1238, 3875, 1507, 382, 731, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 116, "seek": 41500, "start": 419.0, "end": 425.0, "text": " The host can send a special type of message to the room", "tokens": [50564, 440, 3975, 393, 2845, 257, 2121, 2010, 295, 3636, 281, 264, 1808, 50864], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 117, "seek": 41500, "start": 425.0, "end": 430.0, "text": " to send the public keys that he wants to accept in the room.", "tokens": [50864, 281, 2845, 264, 1908, 9317, 300, 415, 2738, 281, 3241, 294, 264, 1808, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 118, "seek": 41500, "start": 430.0, "end": 433.0, "text": " So basically I would create a room, say I would create a room for my party,", "tokens": [51114, 407, 1936, 286, 576, 1884, 257, 1808, 11, 584, 286, 576, 1884, 257, 1808, 337, 452, 3595, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 119, "seek": 41500, "start": 433.0, "end": 436.0, "text": " and I will add all the public keys of the people that I know,", "tokens": [51264, 293, 286, 486, 909, 439, 264, 1908, 9317, 295, 264, 561, 300, 286, 458, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 120, "seek": 41500, "start": 436.0, "end": 439.0, "text": " and then I will send you the link to the room,", "tokens": [51414, 293, 550, 286, 486, 2845, 291, 264, 2113, 281, 264, 1808, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 121, "seek": 41500, "start": 439.0, "end": 441.0, "text": " and if you want to join the room,", "tokens": [51564, 293, 498, 291, 528, 281, 3917, 264, 1808, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1126476814006937, "compression_ratio": 1.7763157894736843, "no_speech_prob": 0.012547355145215988}, {"id": 122, "seek": 44100, "start": 441.0, "end": 446.0, "text": " I will ask you to sign a message to prove your identity.", "tokens": [50364, 286, 486, 1029, 291, 281, 1465, 257, 3636, 281, 7081, 428, 6575, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 123, "seek": 44100, "start": 446.0, "end": 451.0, "text": " And basically since now you can use your phone to confirm your identity,", "tokens": [50614, 400, 1936, 1670, 586, 291, 393, 764, 428, 2593, 281, 9064, 428, 6575, 11, 50864], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 124, "seek": 44100, "start": 451.0, "end": 453.0, "text": " for instance with your footprint,", "tokens": [50864, 337, 5197, 365, 428, 24222, 11, 50964], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 125, "seek": 44100, "start": 453.0, "end": 461.0, "text": " that's pretty much how I can assume your nut and AI trying to ruin my birthday party or whatever,", "tokens": [50964, 300, 311, 1238, 709, 577, 286, 393, 6552, 428, 5393, 293, 7318, 1382, 281, 15514, 452, 6154, 3595, 420, 2035, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 126, "seek": 44100, "start": 461.0, "end": 462.0, "text": " so it's nice.", "tokens": [51364, 370, 309, 311, 1481, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 127, "seek": 44100, "start": 462.0, "end": 466.0, "text": " So we do that for each peer, and it's okay.", "tokens": [51414, 407, 321, 360, 300, 337, 1184, 15108, 11, 293, 309, 311, 1392, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 128, "seek": 44100, "start": 466.0, "end": 469.0, "text": " Just a quick security disclaimer though.", "tokens": [51614, 1449, 257, 1702, 3825, 40896, 1673, 13, 51764], "temperature": 0.0, "avg_logprob": -0.14019522415964228, "compression_ratio": 1.5789473684210527, "no_speech_prob": 0.005669678095728159}, {"id": 129, "seek": 46900, "start": 470.0, "end": 475.0, "text": " When you land on the Sodor Crypto documentation,", "tokens": [50414, 1133, 291, 2117, 322, 264, 318, 34024, 34809, 78, 14333, 11, 50664], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 130, "seek": 46900, "start": 475.0, "end": 477.0, "text": " you get that big warning.", "tokens": [50664, 291, 483, 300, 955, 9164, 13, 50764], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 131, "seek": 46900, "start": 477.0, "end": 482.0, "text": " So yeah, it's a long text, but basically it can be summed up as", "tokens": [50764, 407, 1338, 11, 309, 311, 257, 938, 2487, 11, 457, 1936, 309, 393, 312, 2408, 1912, 493, 382, 51014], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 132, "seek": 46900, "start": 482.0, "end": 485.0, "text": " this project we're building is for fun.", "tokens": [51014, 341, 1716, 321, 434, 2390, 307, 337, 1019, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 133, "seek": 46900, "start": 485.0, "end": 489.0, "text": " There's a lot of security considerations to take into account,", "tokens": [51164, 821, 311, 257, 688, 295, 3825, 24070, 281, 747, 666, 2696, 11, 51364], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 134, "seek": 46900, "start": 489.0, "end": 496.0, "text": " and basically that is how you store key and how you should manage them.", "tokens": [51364, 293, 1936, 300, 307, 577, 291, 3531, 2141, 293, 577, 291, 820, 3067, 552, 13, 51714], "temperature": 0.0, "avg_logprob": -0.21942170087028953, "compression_ratio": 1.5343137254901962, "no_speech_prob": 0.0030994426924735308}, {"id": 135, "seek": 49600, "start": 496.0, "end": 503.0, "text": " And as Adi Sharmeer says, Adi Sharmeer is one of the guys that created the RSA algorithm.", "tokens": [50364, 400, 382, 1999, 72, 22030, 1398, 260, 1619, 11, 1999, 72, 22030, 1398, 260, 307, 472, 295, 264, 1074, 300, 2942, 264, 497, 8886, 9284, 13, 50714], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 136, "seek": 49600, "start": 503.0, "end": 512.0, "text": " Sure, it's really hard to brute force cryptography and to try to guess a ciphertext", "tokens": [50714, 4894, 11, 309, 311, 534, 1152, 281, 47909, 3464, 9844, 5820, 293, 281, 853, 281, 2041, 257, 269, 21240, 25111, 51164], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 137, "seek": 49600, "start": 512.0, "end": 516.0, "text": " by just brute forcing, but usually the mistakes come from the system", "tokens": [51164, 538, 445, 47909, 19030, 11, 457, 2673, 264, 8038, 808, 490, 264, 1185, 51364], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 138, "seek": 49600, "start": 516.0, "end": 518.0, "text": " and not from the algorithm.", "tokens": [51364, 293, 406, 490, 264, 9284, 13, 51464], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 139, "seek": 49600, "start": 518.0, "end": 522.0, "text": " So let's dive into the code.", "tokens": [51464, 407, 718, 311, 9192, 666, 264, 3089, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 140, "seek": 49600, "start": 522.0, "end": 525.0, "text": " So basically what we're going to do.", "tokens": [51664, 407, 1936, 437, 321, 434, 516, 281, 360, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19811779260635376, "compression_ratio": 1.6310679611650485, "no_speech_prob": 0.005450221709907055}, {"id": 141, "seek": 52500, "start": 525.0, "end": 530.0, "text": " Here we're going to import a key from our browser.", "tokens": [50364, 1692, 321, 434, 516, 281, 974, 257, 2141, 490, 527, 11185, 13, 50614], "temperature": 0.0, "avg_logprob": -0.20164436630055874, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0021434659138321877}, {"id": 142, "seek": 52500, "start": 530.0, "end": 538.0, "text": " So we're going to use the P key, the word that's written there.", "tokens": [50614, 407, 321, 434, 516, 281, 764, 264, 430, 2141, 11, 264, 1349, 300, 311, 3720, 456, 13, 51014], "temperature": 0.0, "avg_logprob": -0.20164436630055874, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0021434659138321877}, {"id": 143, "seek": 52500, "start": 538.0, "end": 547.0, "text": " To as an input key, we could use, as I said, a crypto wallet, a FIDO device or whatever,", "tokens": [51014, 1407, 382, 364, 4846, 2141, 11, 321, 727, 764, 11, 382, 286, 848, 11, 257, 17240, 16599, 11, 257, 479, 2777, 46, 4302, 420, 2035, 11, 51464], "temperature": 0.0, "avg_logprob": -0.20164436630055874, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0021434659138321877}, {"id": 144, "seek": 52500, "start": 547.0, "end": 551.0, "text": " but here let's use something that should be generated from the terminal.", "tokens": [51464, 457, 510, 718, 311, 764, 746, 300, 820, 312, 10833, 490, 264, 14709, 13, 51664], "temperature": 0.0, "avg_logprob": -0.20164436630055874, "compression_ratio": 1.491891891891892, "no_speech_prob": 0.0021434659138321877}, {"id": 145, "seek": 55100, "start": 552.0, "end": 556.0, "text": " We're using, so it's an elliptic curve signature, so it's using,", "tokens": [50414, 492, 434, 1228, 11, 370, 309, 311, 364, 8284, 22439, 299, 7605, 13397, 11, 370, 309, 311, 1228, 11, 50614], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 146, "seek": 55100, "start": 556.0, "end": 559.0, "text": " once again, it's an algorithm that won't go into the details,", "tokens": [50614, 1564, 797, 11, 309, 311, 364, 9284, 300, 1582, 380, 352, 666, 264, 4365, 11, 50764], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 147, "seek": 55100, "start": 559.0, "end": 562.0, "text": " but it's just a way to generate signature.", "tokens": [50764, 457, 309, 311, 445, 257, 636, 281, 8460, 13397, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 148, "seek": 55100, "start": 562.0, "end": 567.0, "text": " And we specify that we want to use this key for signing because you can also encrypt,", "tokens": [50914, 400, 321, 16500, 300, 321, 528, 281, 764, 341, 2141, 337, 13393, 570, 291, 393, 611, 17972, 662, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 149, "seek": 55100, "start": 567.0, "end": 571.0, "text": " you can also derive keys that's other use you can have.", "tokens": [51164, 291, 393, 611, 28446, 9317, 300, 311, 661, 764, 291, 393, 362, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 150, "seek": 55100, "start": 571.0, "end": 574.0, "text": " Once again, we can talk about that after the presentation.", "tokens": [51364, 3443, 797, 11, 321, 393, 751, 466, 300, 934, 264, 5860, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 151, "seek": 55100, "start": 574.0, "end": 580.0, "text": " There's a lot of stuff to do, but yeah, that's basically the stuff.", "tokens": [51514, 821, 311, 257, 688, 295, 1507, 281, 360, 11, 457, 1338, 11, 300, 311, 1936, 264, 1507, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12372227184108046, "compression_ratio": 1.7590361445783131, "no_speech_prob": 0.0027337183710187674}, {"id": 152, "seek": 58000, "start": 580.0, "end": 586.0, "text": " And I'm also going to give you an overview of the idea in check I was telling you about.", "tokens": [50364, 400, 286, 478, 611, 516, 281, 976, 291, 364, 12492, 295, 264, 1558, 294, 1520, 286, 390, 3585, 291, 466, 13, 50664], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 153, "seek": 58000, "start": 586.0, "end": 592.0, "text": " So basically when you connect, the server will ask you to sign this stuff,", "tokens": [50664, 407, 1936, 562, 291, 1745, 11, 264, 7154, 486, 1029, 291, 281, 1465, 341, 1507, 11, 50964], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 154, "seek": 58000, "start": 592.0, "end": 597.0, "text": " which is a JSON message, so well, this is TypeScript, whatever.", "tokens": [50964, 597, 307, 257, 31828, 3636, 11, 370, 731, 11, 341, 307, 15576, 14237, 11, 2035, 13, 51214], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 155, "seek": 58000, "start": 597.0, "end": 600.0, "text": " So this is the payload we're getting from the server.", "tokens": [51214, 407, 341, 307, 264, 30918, 321, 434, 1242, 490, 264, 7154, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 156, "seek": 58000, "start": 600.0, "end": 603.0, "text": " I'm also adding a property which is called issued at,", "tokens": [51364, 286, 478, 611, 5127, 257, 4707, 597, 307, 1219, 14379, 412, 11, 51514], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 157, "seek": 58000, "start": 603.0, "end": 608.0, "text": " so that ensures that you have to sign the message within a certain time frame,", "tokens": [51514, 370, 300, 28111, 300, 291, 362, 281, 1465, 264, 3636, 1951, 257, 1629, 565, 3920, 11, 51764], "temperature": 0.0, "avg_logprob": -0.14312311867687189, "compression_ratio": 1.656, "no_speech_prob": 0.003799993311986327}, {"id": 158, "seek": 60800, "start": 608.0, "end": 616.0, "text": " otherwise you could have what we call replay attacks where people just trying to send a signature until it works.", "tokens": [50364, 5911, 291, 727, 362, 437, 321, 818, 23836, 8122, 689, 561, 445, 1382, 281, 2845, 257, 13397, 1826, 309, 1985, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 159, "seek": 60800, "start": 616.0, "end": 622.0, "text": " So this allows us to mitigate some effects.", "tokens": [50764, 407, 341, 4045, 505, 281, 27336, 512, 5065, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 160, "seek": 60800, "start": 622.0, "end": 625.0, "text": " And so that is what the server hands you over,", "tokens": [51064, 400, 370, 300, 307, 437, 264, 7154, 2377, 291, 670, 11, 51214], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 161, "seek": 60800, "start": 625.0, "end": 629.0, "text": " and this is what you would send back, so once it's signed,", "tokens": [51214, 293, 341, 307, 437, 291, 576, 2845, 646, 11, 370, 1564, 309, 311, 8175, 11, 51414], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 162, "seek": 60800, "start": 629.0, "end": 634.0, "text": " so you send the payload that you just saw alongside signature", "tokens": [51414, 370, 291, 2845, 264, 30918, 300, 291, 445, 1866, 12385, 13397, 51664], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 163, "seek": 60800, "start": 634.0, "end": 637.0, "text": " and your public key to verify the signature.", "tokens": [51664, 293, 428, 1908, 2141, 281, 16888, 264, 13397, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15238608254326713, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.0021471171639859676}, {"id": 164, "seek": 63700, "start": 638.0, "end": 642.0, "text": " Okay, so this is how we sign the payload.", "tokens": [50414, 1033, 11, 370, 341, 307, 577, 321, 1465, 264, 30918, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 165, "seek": 63700, "start": 642.0, "end": 647.0, "text": " So once again, it's a big bunch of code, but it's actually quite easy to understand.", "tokens": [50614, 407, 1564, 797, 11, 309, 311, 257, 955, 3840, 295, 3089, 11, 457, 309, 311, 767, 1596, 1858, 281, 1223, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 166, "seek": 63700, "start": 647.0, "end": 648.0, "text": " So we have the key.", "tokens": [50864, 407, 321, 362, 264, 2141, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 167, "seek": 63700, "start": 648.0, "end": 649.0, "text": " We have the payload.", "tokens": [50914, 492, 362, 264, 30918, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 168, "seek": 63700, "start": 649.0, "end": 656.0, "text": " The key is strictly, so we have the type definition for the script interface.", "tokens": [50964, 440, 2141, 307, 20792, 11, 370, 321, 362, 264, 2010, 7123, 337, 264, 5755, 9226, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 169, "seek": 63700, "start": 656.0, "end": 660.0, "text": " So I heard the TypeScript question in the audience,", "tokens": [51314, 407, 286, 2198, 264, 15576, 14237, 1168, 294, 264, 4034, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 170, "seek": 63700, "start": 660.0, "end": 663.0, "text": " so don't worry, it's fine.", "tokens": [51514, 370, 500, 380, 3292, 11, 309, 311, 2489, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 171, "seek": 63700, "start": 663.0, "end": 665.0, "text": " All the interfaces are defined.", "tokens": [51664, 1057, 264, 28416, 366, 7642, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11303790564675933, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.0017970745684579015}, {"id": 172, "seek": 66500, "start": 665.0, "end": 668.0, "text": " So we have the key and we have the payload.", "tokens": [50364, 407, 321, 362, 264, 2141, 293, 321, 362, 264, 30918, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 173, "seek": 66500, "start": 668.0, "end": 671.0, "text": " The interface I just showed you,", "tokens": [50514, 440, 9226, 286, 445, 4712, 291, 11, 50664], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 174, "seek": 66500, "start": 671.0, "end": 675.0, "text": " and this function will return signed payload.", "tokens": [50664, 293, 341, 2445, 486, 2736, 8175, 30918, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 175, "seek": 66500, "start": 675.0, "end": 681.0, "text": " So basically what we do is that we take the payload,", "tokens": [50864, 407, 1936, 437, 321, 360, 307, 300, 321, 747, 264, 30918, 11, 51164], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 176, "seek": 66500, "start": 681.0, "end": 684.0, "text": " which is a JSON object, you will stringify it,", "tokens": [51164, 597, 307, 257, 31828, 2657, 11, 291, 486, 6798, 2505, 309, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 177, "seek": 66500, "start": 684.0, "end": 690.0, "text": " and then convert it to bytes, because everything happens in buffer and bytes.", "tokens": [51314, 293, 550, 7620, 309, 281, 36088, 11, 570, 1203, 2314, 294, 21762, 293, 36088, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 178, "seek": 66500, "start": 690.0, "end": 693.0, "text": " And then we will just sign it, and you know it's a simple function,", "tokens": [51614, 400, 550, 321, 486, 445, 1465, 309, 11, 293, 291, 458, 309, 311, 257, 2199, 2445, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1554502856974699, "compression_ratio": 1.6576576576576576, "no_speech_prob": 0.00039928164915181696}, {"id": 179, "seek": 69300, "start": 693.0, "end": 695.0, "text": " just crypto.sign.", "tokens": [50364, 445, 17240, 13, 82, 788, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 180, "seek": 69300, "start": 695.0, "end": 698.0, "text": " We just choose the algorithm once again,", "tokens": [50464, 492, 445, 2826, 264, 9284, 1564, 797, 11, 50614], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 181, "seek": 69300, "start": 698.0, "end": 700.0, "text": " ECDSA, so elliptic curve.", "tokens": [50614, 19081, 35, 8886, 11, 370, 8284, 22439, 299, 7605, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 182, "seek": 69300, "start": 700.0, "end": 708.0, "text": " We want to produce a 265.56 hash.", "tokens": [50714, 492, 528, 281, 5258, 257, 7551, 20, 13, 18317, 22019, 13, 51114], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 183, "seek": 69300, "start": 708.0, "end": 711.0, "text": " We specify the key that we want to use,", "tokens": [51114, 492, 16500, 264, 2141, 300, 321, 528, 281, 764, 11, 51264], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 184, "seek": 69300, "start": 711.0, "end": 714.0, "text": " and we specify the buffer we want to sign.", "tokens": [51264, 293, 321, 16500, 264, 21762, 321, 528, 281, 1465, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 185, "seek": 69300, "start": 714.0, "end": 715.0, "text": " So pretty standard stuff.", "tokens": [51414, 407, 1238, 3832, 1507, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 186, "seek": 69300, "start": 715.0, "end": 718.0, "text": " And we return that signed payload.", "tokens": [51464, 400, 321, 2736, 300, 8175, 30918, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 187, "seek": 69300, "start": 718.0, "end": 722.0, "text": " So as you can see, it's really, really, really simple.", "tokens": [51614, 407, 382, 291, 393, 536, 11, 309, 311, 534, 11, 534, 11, 534, 2199, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16235794740564682, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.006088685244321823}, {"id": 188, "seek": 72200, "start": 722.0, "end": 726.0, "text": " I was buffered at how easy it was.", "tokens": [50364, 286, 390, 9204, 4073, 412, 577, 1858, 309, 390, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 189, "seek": 72200, "start": 726.0, "end": 729.0, "text": " And on the server side, it's pretty much the same thing.", "tokens": [50564, 400, 322, 264, 7154, 1252, 11, 309, 311, 1238, 709, 264, 912, 551, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 190, "seek": 72200, "start": 729.0, "end": 731.0, "text": " So you want to verify the payload.", "tokens": [50714, 407, 291, 528, 281, 16888, 264, 30918, 13, 50814], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 191, "seek": 72200, "start": 731.0, "end": 735.0, "text": " So pretty much the same thing as I told you earlier.", "tokens": [50814, 407, 1238, 709, 264, 912, 551, 382, 286, 1907, 291, 3071, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 192, "seek": 72200, "start": 735.0, "end": 739.0, "text": " The function looks pretty much the same.", "tokens": [51014, 440, 2445, 1542, 1238, 709, 264, 912, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 193, "seek": 72200, "start": 739.0, "end": 747.0, "text": " So we first need to transform the payload into a JSON object,", "tokens": [51214, 407, 321, 700, 643, 281, 4088, 264, 30918, 666, 257, 31828, 2657, 11, 51614], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 194, "seek": 72200, "start": 747.0, "end": 749.0, "text": " but then once again we import the key.", "tokens": [51614, 457, 550, 1564, 797, 321, 974, 264, 2141, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11174615224202473, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.0026309562381356955}, {"id": 195, "seek": 74900, "start": 750.0, "end": 753.0, "text": " Once again, we use the JSON Web Key Format.", "tokens": [50414, 3443, 797, 11, 321, 764, 264, 31828, 9573, 12759, 10126, 267, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 196, "seek": 74900, "start": 753.0, "end": 756.0, "text": " You may be aware of the JSON Web Tokens.", "tokens": [50564, 509, 815, 312, 3650, 295, 264, 31828, 9573, 11036, 694, 13, 50714], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 197, "seek": 74900, "start": 756.0, "end": 760.0, "text": " It's pretty much the same spec, but there is just a key.", "tokens": [50714, 467, 311, 1238, 709, 264, 912, 1608, 11, 457, 456, 307, 445, 257, 2141, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 198, "seek": 74900, "start": 760.0, "end": 767.0, "text": " So it's a key that's been serialized as JSON.", "tokens": [50914, 407, 309, 311, 257, 2141, 300, 311, 668, 17436, 1602, 382, 31828, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 199, "seek": 74900, "start": 767.0, "end": 769.0, "text": " False mean we don't want to export it,", "tokens": [51264, 50040, 914, 321, 500, 380, 528, 281, 10725, 309, 11, 51364], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 200, "seek": 74900, "start": 769.0, "end": 771.0, "text": " and verify means it's a public key,", "tokens": [51364, 293, 16888, 1355, 309, 311, 257, 1908, 2141, 11, 51464], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 201, "seek": 74900, "start": 771.0, "end": 773.0, "text": " and it's used to verify signature.", "tokens": [51464, 293, 309, 311, 1143, 281, 16888, 13397, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 202, "seek": 74900, "start": 773.0, "end": 776.0, "text": " Once again, we generate a signable variable,", "tokens": [51564, 3443, 797, 11, 321, 8460, 257, 1465, 712, 7006, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12336112868111089, "compression_ratio": 1.5545454545454545, "no_speech_prob": 0.00635509891435504}, {"id": 203, "seek": 77600, "start": 776.0, "end": 782.0, "text": " and it basically bytes to pass to the verify function.", "tokens": [50364, 293, 309, 1936, 36088, 281, 1320, 281, 264, 16888, 2445, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 204, "seek": 77600, "start": 782.0, "end": 785.0, "text": " And then once again, the algorithm, the key, the signature.", "tokens": [50664, 400, 550, 1564, 797, 11, 264, 9284, 11, 264, 2141, 11, 264, 13397, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 205, "seek": 77600, "start": 785.0, "end": 790.0, "text": " See, it's very, very easy, and it works.", "tokens": [50814, 3008, 11, 309, 311, 588, 11, 588, 1858, 11, 293, 309, 1985, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 206, "seek": 77600, "start": 790.0, "end": 794.0, "text": " So all right, so I'm not going to give you the whole code", "tokens": [51064, 407, 439, 558, 11, 370, 286, 478, 406, 516, 281, 976, 291, 264, 1379, 3089, 51264], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 207, "seek": 77600, "start": 794.0, "end": 798.0, "text": " of the single server because, well, it's not hard,", "tokens": [51264, 295, 264, 2167, 7154, 570, 11, 731, 11, 309, 311, 406, 1152, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 208, "seek": 77600, "start": 798.0, "end": 801.0, "text": " not hard at all, but it's just switch statements.", "tokens": [51464, 406, 1152, 412, 439, 11, 457, 309, 311, 445, 3679, 12363, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 209, "seek": 77600, "start": 801.0, "end": 804.0, "text": " And I don't think it's really interesting to talk about here.", "tokens": [51614, 400, 286, 500, 380, 519, 309, 311, 534, 1880, 281, 751, 466, 510, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1783451680783872, "compression_ratio": 1.6277056277056277, "no_speech_prob": 0.0017387501429766417}, {"id": 210, "seek": 80400, "start": 804.0, "end": 807.0, "text": " Basically what we're going to do is that we have two types of,", "tokens": [50364, 8537, 437, 321, 434, 516, 281, 360, 307, 300, 321, 362, 732, 3467, 295, 11, 50514], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 211, "seek": 80400, "start": 807.0, "end": 812.0, "text": " we have several types of message we send to the socket.", "tokens": [50514, 321, 362, 2940, 3467, 295, 3636, 321, 2845, 281, 264, 19741, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 212, "seek": 80400, "start": 812.0, "end": 815.0, "text": " I told you about the one that the host sent at the beginning,", "tokens": [50764, 286, 1907, 291, 466, 264, 472, 300, 264, 3975, 2279, 412, 264, 2863, 11, 50914], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 213, "seek": 80400, "start": 815.0, "end": 819.0, "text": " so just to white list a bunch of public keys.", "tokens": [50914, 370, 445, 281, 2418, 1329, 257, 3840, 295, 1908, 9317, 13, 51114], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 214, "seek": 80400, "start": 819.0, "end": 822.0, "text": " And then here I'm going to show you two.", "tokens": [51114, 400, 550, 510, 286, 478, 516, 281, 855, 291, 732, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 215, "seek": 80400, "start": 822.0, "end": 825.0, "text": " The first one is the one I call request.", "tokens": [51264, 440, 700, 472, 307, 264, 472, 286, 818, 5308, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 216, "seek": 80400, "start": 825.0, "end": 830.0, "text": " So when a new guest want to come into my room,", "tokens": [51414, 407, 562, 257, 777, 8341, 528, 281, 808, 666, 452, 1808, 11, 51664], "temperature": 0.0, "avg_logprob": -0.14932990310215713, "compression_ratio": 1.6136363636363635, "no_speech_prob": 0.02256542444229126}, {"id": 217, "seek": 83000, "start": 831.0, "end": 834.0, "text": " that's one of the functions,", "tokens": [50414, 300, 311, 472, 295, 264, 6828, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 218, "seek": 83000, "start": 834.0, "end": 838.0, "text": " and the other one is the out, so that's the one we just saw.", "tokens": [50564, 293, 264, 661, 472, 307, 264, 484, 11, 370, 300, 311, 264, 472, 321, 445, 1866, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 219, "seek": 83000, "start": 838.0, "end": 841.0, "text": " So it's basically verifying the signature.", "tokens": [50764, 407, 309, 311, 1936, 1306, 5489, 264, 13397, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 220, "seek": 83000, "start": 841.0, "end": 845.0, "text": " So yeah, when I receive an off message,", "tokens": [50914, 407, 1338, 11, 562, 286, 4774, 364, 766, 3636, 11, 51114], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 221, "seek": 83000, "start": 845.0, "end": 847.0, "text": " I will call the connect peer function.", "tokens": [51114, 286, 486, 818, 264, 1745, 15108, 2445, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 222, "seek": 83000, "start": 847.0, "end": 850.0, "text": " So basically what it does, simple as that,", "tokens": [51214, 407, 1936, 437, 309, 775, 11, 2199, 382, 300, 11, 51364], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 223, "seek": 83000, "start": 850.0, "end": 853.0, "text": " first it looks if the public key is valid for the room ID.", "tokens": [51364, 700, 309, 1542, 498, 264, 1908, 2141, 307, 7363, 337, 264, 1808, 7348, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 224, "seek": 83000, "start": 853.0, "end": 856.0, "text": " So if I indeed white listed that public key.", "tokens": [51514, 407, 498, 286, 6451, 2418, 10052, 300, 1908, 2141, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1560447470655719, "compression_ratio": 1.6422018348623852, "no_speech_prob": 0.0008478997624479234}, {"id": 225, "seek": 85600, "start": 857.0, "end": 860.0, "text": " The second one is the issue that timestamp,", "tokens": [50414, 440, 1150, 472, 307, 264, 2734, 300, 49108, 1215, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 226, "seek": 85600, "start": 860.0, "end": 865.0, "text": " which looks if that timestamp is valid.", "tokens": [50564, 597, 1542, 498, 300, 49108, 1215, 307, 7363, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 227, "seek": 85600, "start": 865.0, "end": 870.0, "text": " So for instance, if my server sent that message two minutes ago,", "tokens": [50814, 407, 337, 5197, 11, 498, 452, 7154, 2279, 300, 3636, 732, 2077, 2057, 11, 51064], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 228, "seek": 85600, "start": 870.0, "end": 875.0, "text": " I deemed that it's still an acceptable time to have,", "tokens": [51064, 286, 27637, 300, 309, 311, 920, 364, 15513, 565, 281, 362, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 229, "seek": 85600, "start": 875.0, "end": 877.0, "text": " to receive the payload back.", "tokens": [51314, 281, 4774, 264, 30918, 646, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 230, "seek": 85600, "start": 877.0, "end": 879.0, "text": " If it dates back to one hour,", "tokens": [51414, 759, 309, 11691, 646, 281, 472, 1773, 11, 51514], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 231, "seek": 85600, "start": 879.0, "end": 882.0, "text": " I just teach the message because that's probably a curve", "tokens": [51514, 286, 445, 2924, 264, 3636, 570, 300, 311, 1391, 257, 7605, 51664], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 232, "seek": 85600, "start": 882.0, "end": 884.0, "text": " trying to ruin my birthday party.", "tokens": [51664, 1382, 281, 15514, 452, 6154, 3595, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1444888767443205, "compression_ratio": 1.588235294117647, "no_speech_prob": 0.0073301661759614944}, {"id": 233, "seek": 88400, "start": 884.0, "end": 890.0, "text": " And the last one is just the signature verification", "tokens": [50364, 400, 264, 1036, 472, 307, 445, 264, 13397, 30206, 50664], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 234, "seek": 88400, "start": 890.0, "end": 892.0, "text": " that we just talked about.", "tokens": [50664, 300, 321, 445, 2825, 466, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 235, "seek": 88400, "start": 892.0, "end": 896.0, "text": " And if it's all good, and that's how WebRTC works,", "tokens": [50764, 400, 498, 309, 311, 439, 665, 11, 293, 300, 311, 577, 9573, 49, 18238, 1985, 11, 50964], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 236, "seek": 88400, "start": 896.0, "end": 900.0, "text": " we will give the peer information to all the other peers", "tokens": [50964, 321, 486, 976, 264, 15108, 1589, 281, 439, 264, 661, 16739, 51164], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 237, "seek": 88400, "start": 900.0, "end": 903.0, "text": " so that they can chat together.", "tokens": [51164, 370, 300, 436, 393, 5081, 1214, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 238, "seek": 88400, "start": 903.0, "end": 906.0, "text": " One thing that I didn't mention, but it's important to know,", "tokens": [51314, 1485, 551, 300, 286, 994, 380, 2152, 11, 457, 309, 311, 1021, 281, 458, 11, 51464], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 239, "seek": 88400, "start": 906.0, "end": 909.0, "text": " is once you're using WebRTC,", "tokens": [51464, 307, 1564, 291, 434, 1228, 9573, 49, 18238, 11, 51614], "temperature": 0.0, "avg_logprob": -0.09956431656741024, "compression_ratio": 1.5247524752475248, "no_speech_prob": 0.001756593817844987}, {"id": 240, "seek": 90900, "start": 909.0, "end": 914.0, "text": " everything is, every information is from peer to peer.", "tokens": [50364, 1203, 307, 11, 633, 1589, 307, 490, 15108, 281, 15108, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 241, "seek": 90900, "start": 914.0, "end": 917.0, "text": " So the server gets back and there's no information", "tokens": [50614, 407, 264, 7154, 2170, 646, 293, 456, 311, 572, 1589, 50764], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 242, "seek": 90900, "start": 917.0, "end": 920.0, "text": " that are sent to the server, so it's really important to know.", "tokens": [50764, 300, 366, 2279, 281, 264, 7154, 11, 370, 309, 311, 534, 1021, 281, 458, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 243, "seek": 90900, "start": 920.0, "end": 923.0, "text": " And that's actually quite a cool design.", "tokens": [50914, 400, 300, 311, 767, 1596, 257, 1627, 1715, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 244, "seek": 90900, "start": 923.0, "end": 928.0, "text": " Last thing I want to say is that I didn't get into the details", "tokens": [51064, 5264, 551, 286, 528, 281, 584, 307, 300, 286, 994, 380, 483, 666, 264, 4365, 51314], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 245, "seek": 90900, "start": 928.0, "end": 932.0, "text": " and specific of WebRTC, but for the sake of simplicity,", "tokens": [51314, 293, 2685, 295, 9573, 49, 18238, 11, 457, 337, 264, 9717, 295, 25632, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 246, "seek": 90900, "start": 932.0, "end": 935.0, "text": " I recommend to use the simple peer library.", "tokens": [51514, 286, 2748, 281, 764, 264, 2199, 15108, 6405, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 247, "seek": 90900, "start": 935.0, "end": 938.0, "text": " I'm not paid by this guy, but this guy does awesome stuff.", "tokens": [51664, 286, 478, 406, 4835, 538, 341, 2146, 11, 457, 341, 2146, 775, 3476, 1507, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11186934339589086, "compression_ratio": 1.6450381679389312, "no_speech_prob": 0.007895971648395061}, {"id": 248, "seek": 93800, "start": 938.0, "end": 942.0, "text": " So use the library.", "tokens": [50364, 407, 764, 264, 6405, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 249, "seek": 93800, "start": 942.0, "end": 945.0, "text": " And I just want to go a bit deeper.", "tokens": [50564, 400, 286, 445, 528, 281, 352, 257, 857, 7731, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 250, "seek": 93800, "start": 945.0, "end": 948.0, "text": " So I talked about video and audio chat,", "tokens": [50714, 407, 286, 2825, 466, 960, 293, 6278, 5081, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 251, "seek": 93800, "start": 948.0, "end": 952.0, "text": " but what more can we do?", "tokens": [50864, 457, 437, 544, 393, 321, 360, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 252, "seek": 93800, "start": 952.0, "end": 955.0, "text": " So since we have, I guess this is your call", "tokens": [51064, 407, 1670, 321, 362, 11, 286, 2041, 341, 307, 428, 818, 51214], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 253, "seek": 93800, "start": 955.0, "end": 958.0, "text": " to go further down the peer to peer rabbit hole.", "tokens": [51214, 281, 352, 3052, 760, 264, 15108, 281, 15108, 19509, 5458, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 254, "seek": 93800, "start": 958.0, "end": 962.0, "text": " So let's use that sort of crypto stuff.", "tokens": [51364, 407, 718, 311, 764, 300, 1333, 295, 17240, 1507, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 255, "seek": 93800, "start": 962.0, "end": 963.0, "text": " You can do a lot of stuff.", "tokens": [51564, 509, 393, 360, 257, 688, 295, 1507, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 256, "seek": 93800, "start": 963.0, "end": 965.0, "text": " WebRTC is really great.", "tokens": [51614, 9573, 49, 18238, 307, 534, 869, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 257, "seek": 93800, "start": 965.0, "end": 967.0, "text": " You can do a lot of really great stuff.", "tokens": [51714, 509, 393, 360, 257, 688, 295, 534, 869, 1507, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1420383886857466, "compression_ratio": 1.6150234741784038, "no_speech_prob": 0.0028883987106382847}, {"id": 258, "seek": 96700, "start": 967.0, "end": 972.0, "text": " And I want to finish by doing a quick shout out section.", "tokens": [50364, 400, 286, 528, 281, 2413, 538, 884, 257, 1702, 8043, 484, 3541, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 259, "seek": 96700, "start": 972.0, "end": 975.0, "text": " So all these people already trust the process.", "tokens": [50614, 407, 439, 613, 561, 1217, 3361, 264, 1399, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 260, "seek": 96700, "start": 975.0, "end": 978.0, "text": " So I'm going to give you a quick overview of some project", "tokens": [50764, 407, 286, 478, 516, 281, 976, 291, 257, 1702, 12492, 295, 512, 1716, 50914], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 261, "seek": 96700, "start": 978.0, "end": 982.0, "text": " that I worked with far or less far.", "tokens": [50914, 300, 286, 2732, 365, 1400, 420, 1570, 1400, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 262, "seek": 96700, "start": 982.0, "end": 984.0, "text": " And yeah.", "tokens": [51114, 400, 1338, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 263, "seek": 96700, "start": 984.0, "end": 988.0, "text": " So first of all, I want to shout out about WebTorrent.", "tokens": [51214, 407, 700, 295, 439, 11, 286, 528, 281, 8043, 484, 466, 9573, 51, 284, 1753, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 264, "seek": 96700, "start": 988.0, "end": 990.0, "text": " Anybody know about WebTorrent?", "tokens": [51414, 19082, 458, 466, 9573, 51, 284, 1753, 30, 51514], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 265, "seek": 96700, "start": 990.0, "end": 991.0, "text": " Nice.", "tokens": [51514, 5490, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 266, "seek": 96700, "start": 991.0, "end": 994.0, "text": " So it's a Torrent client that's built in the browser.", "tokens": [51564, 407, 309, 311, 257, 7160, 1753, 6423, 300, 311, 3094, 294, 264, 11185, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11658295961183922, "compression_ratio": 1.5972850678733033, "no_speech_prob": 0.0044427067041397095}, {"id": 267, "seek": 99400, "start": 994.0, "end": 999.0, "text": " It uses WebRTC data channels to stream data.", "tokens": [50364, 467, 4960, 9573, 49, 18238, 1412, 9235, 281, 4309, 1412, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 268, "seek": 99400, "start": 999.0, "end": 1000.0, "text": " It's really nice.", "tokens": [50614, 467, 311, 534, 1481, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 269, "seek": 99400, "start": 1000.0, "end": 1002.0, "text": " It means that you don't have to depend on a central server", "tokens": [50664, 467, 1355, 300, 291, 500, 380, 362, 281, 5672, 322, 257, 5777, 7154, 50764], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 270, "seek": 99400, "start": 1002.0, "end": 1005.0, "text": " to actually stream data.", "tokens": [50764, 281, 767, 4309, 1412, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 271, "seek": 99400, "start": 1005.0, "end": 1009.0, "text": " IPFS, anybody knows about IPFS?", "tokens": [50914, 8671, 29318, 11, 4472, 3255, 466, 8671, 29318, 30, 51114], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 272, "seek": 99400, "start": 1009.0, "end": 1010.0, "text": " Yeah.", "tokens": [51114, 865, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 273, "seek": 99400, "start": 1010.0, "end": 1012.0, "text": " So great guys also.", "tokens": [51164, 407, 869, 1074, 611, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 274, "seek": 99400, "start": 1012.0, "end": 1015.0, "text": " They were there last year at Fosdame.", "tokens": [51264, 814, 645, 456, 1036, 1064, 412, 479, 329, 67, 529, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 275, "seek": 99400, "start": 1015.0, "end": 1017.0, "text": " I don't think they're here this year,", "tokens": [51414, 286, 500, 380, 519, 436, 434, 510, 341, 1064, 11, 51514], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 276, "seek": 99400, "start": 1017.0, "end": 1021.0, "text": " but it's basically a protocol that it tends to not replace HTTP,", "tokens": [51514, 457, 309, 311, 1936, 257, 10336, 300, 309, 12258, 281, 406, 7406, 33283, 11, 51714], "temperature": 0.0, "avg_logprob": -0.13595261974869488, "compression_ratio": 1.513157894736842, "no_speech_prob": 0.007497277110815048}, {"id": 277, "seek": 102100, "start": 1022.0, "end": 1025.0, "text": " but be side by side with HTTP.", "tokens": [50414, 457, 312, 1252, 538, 1252, 365, 33283, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 278, "seek": 102100, "start": 1025.0, "end": 1029.0, "text": " Basically it works by creating a unique hash for files.", "tokens": [50564, 8537, 309, 1985, 538, 4084, 257, 3845, 22019, 337, 7098, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 279, "seek": 102100, "start": 1029.0, "end": 1035.0, "text": " So they're fingerprint files with just a shaft fingerprint.", "tokens": [50764, 407, 436, 434, 30715, 7098, 365, 445, 257, 18467, 30715, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 280, "seek": 102100, "start": 1035.0, "end": 1038.0, "text": " And basically if you know the hash of the file,", "tokens": [51064, 400, 1936, 498, 291, 458, 264, 22019, 295, 264, 3991, 11, 51214], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 281, "seek": 102100, "start": 1038.0, "end": 1041.0, "text": " you can just request the file and it will flow a DHT.", "tokens": [51214, 291, 393, 445, 5308, 264, 3991, 293, 309, 486, 3095, 257, 28606, 51, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 282, "seek": 102100, "start": 1041.0, "end": 1043.0, "text": " It's a really complex system.", "tokens": [51364, 467, 311, 257, 534, 3997, 1185, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 283, "seek": 102100, "start": 1043.0, "end": 1044.0, "text": " It's really interesting.", "tokens": [51464, 467, 311, 534, 1880, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 284, "seek": 102100, "start": 1044.0, "end": 1050.0, "text": " You can retrieve that file that is hosted somewhere on an IPFS node.", "tokens": [51514, 509, 393, 30254, 300, 3991, 300, 307, 19204, 4079, 322, 364, 8671, 29318, 9984, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13615077018737792, "compression_ratio": 1.6103896103896105, "no_speech_prob": 0.006624807603657246}, {"id": 285, "seek": 105000, "start": 1050.0, "end": 1055.0, "text": " And IPFS nodes are connected to each other using also WebSocket", "tokens": [50364, 400, 8671, 29318, 13891, 366, 4582, 281, 1184, 661, 1228, 611, 9573, 50, 31380, 50614], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 286, "seek": 105000, "start": 1055.0, "end": 1056.0, "text": " and WebRTC.", "tokens": [50614, 293, 9573, 49, 18238, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 287, "seek": 105000, "start": 1056.0, "end": 1058.0, "text": " So it's a really, really interesting project.", "tokens": [50664, 407, 309, 311, 257, 534, 11, 534, 1880, 1716, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 288, "seek": 105000, "start": 1058.0, "end": 1059.0, "text": " You should have.", "tokens": [50764, 509, 820, 362, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 289, "seek": 105000, "start": 1059.0, "end": 1060.0, "text": " It's very nice.", "tokens": [50814, 467, 311, 588, 1481, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 290, "seek": 105000, "start": 1060.0, "end": 1062.0, "text": " Some of us are here, but only a few of us.", "tokens": [50864, 2188, 295, 505, 366, 510, 11, 457, 787, 257, 1326, 295, 505, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 291, "seek": 105000, "start": 1062.0, "end": 1063.0, "text": " IPFS?", "tokens": [50964, 8671, 29318, 30, 51014], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 292, "seek": 105000, "start": 1063.0, "end": 1064.0, "text": " Yeah.", "tokens": [51014, 865, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 293, "seek": 105000, "start": 1064.0, "end": 1065.0, "text": " Oh, nice.", "tokens": [51064, 876, 11, 1481, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 294, "seek": 105000, "start": 1065.0, "end": 1066.0, "text": " You're so great.", "tokens": [51114, 509, 434, 370, 869, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 295, "seek": 105000, "start": 1066.0, "end": 1067.0, "text": " I love you.", "tokens": [51164, 286, 959, 291, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 296, "seek": 105000, "start": 1067.0, "end": 1069.0, "text": " And if you want to know more about IPFS,", "tokens": [51214, 400, 498, 291, 528, 281, 458, 544, 466, 8671, 29318, 11, 51314], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 297, "seek": 105000, "start": 1069.0, "end": 1072.0, "text": " I'm not the one to ask, basically, as those guys.", "tokens": [51314, 286, 478, 406, 264, 472, 281, 1029, 11, 1936, 11, 382, 729, 1074, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 298, "seek": 105000, "start": 1072.0, "end": 1076.0, "text": " And lastly, that's the project I've also worked on last year.", "tokens": [51464, 400, 16386, 11, 300, 311, 264, 1716, 286, 600, 611, 2732, 322, 1036, 1064, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13734210995461443, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.002204670337960124}, {"id": 299, "seek": 107600, "start": 1076.0, "end": 1082.0, "text": " It's basically a project that allows computation on top of IPFS.", "tokens": [50364, 467, 311, 1936, 257, 1716, 300, 4045, 24903, 322, 1192, 295, 8671, 29318, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 300, "seek": 107600, "start": 1082.0, "end": 1084.0, "text": " Also a great project.", "tokens": [50664, 2743, 257, 869, 1716, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 301, "seek": 107600, "start": 1084.0, "end": 1088.0, "text": " I think they are trying to hire a front-end developer.", "tokens": [50764, 286, 519, 436, 366, 1382, 281, 11158, 257, 1868, 12, 521, 10754, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 302, "seek": 107600, "start": 1088.0, "end": 1094.0, "text": " So if you like stuff with crypto and just talk to these guys.", "tokens": [50964, 407, 498, 291, 411, 1507, 365, 17240, 293, 445, 751, 281, 613, 1074, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 303, "seek": 107600, "start": 1094.0, "end": 1095.0, "text": " All right.", "tokens": [51264, 1057, 558, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 304, "seek": 107600, "start": 1095.0, "end": 1098.0, "text": " I don't know how much time we still have left,", "tokens": [51314, 286, 500, 380, 458, 577, 709, 565, 321, 920, 362, 1411, 11, 51464], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 305, "seek": 107600, "start": 1098.0, "end": 1100.0, "text": " but I made this great slide for questions.", "tokens": [51464, 457, 286, 1027, 341, 869, 4137, 337, 1651, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 306, "seek": 107600, "start": 1100.0, "end": 1103.0, "text": " So does anybody have a question?", "tokens": [51564, 407, 775, 4472, 362, 257, 1168, 30, 51714], "temperature": 0.0, "avg_logprob": -0.11070663050601356, "compression_ratio": 1.4780701754385965, "no_speech_prob": 0.008488224819302559}, {"id": 307, "seek": 110300, "start": 1103.0, "end": 1105.0, "text": " Any questions?", "tokens": [50364, 2639, 1651, 30, 50464], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 308, "seek": 110300, "start": 1105.0, "end": 1112.0, "text": " A few minutes for questions.", "tokens": [50464, 316, 1326, 2077, 337, 1651, 13, 50814], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 309, "seek": 110300, "start": 1112.0, "end": 1113.0, "text": " All right.", "tokens": [50814, 1057, 558, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 310, "seek": 110300, "start": 1113.0, "end": 1115.0, "text": " Or else I have that slide with my credentials.", "tokens": [50864, 1610, 1646, 286, 362, 300, 4137, 365, 452, 27404, 13, 50964], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 311, "seek": 110300, "start": 1115.0, "end": 1116.0, "text": " So this is my GitHub.", "tokens": [50964, 407, 341, 307, 452, 23331, 13, 51014], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 312, "seek": 110300, "start": 1116.0, "end": 1117.0, "text": " This is my telegram.", "tokens": [51014, 639, 307, 452, 4304, 1342, 13, 51064], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 313, "seek": 110300, "start": 1117.0, "end": 1118.0, "text": " She wanted to reach me.", "tokens": [51064, 1240, 1415, 281, 2524, 385, 13, 51114], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 314, "seek": 110300, "start": 1118.0, "end": 1121.0, "text": " And this is my public key if you want to.", "tokens": [51114, 400, 341, 307, 452, 1908, 2141, 498, 291, 528, 281, 13, 51264], "temperature": 0.0, "avg_logprob": -0.24131669859955276, "compression_ratio": 1.4189189189189189, "no_speech_prob": 0.004488049540668726}, {"id": 315, "seek": 112100, "start": 1121.0, "end": 1122.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50414], "temperature": 0.0, "avg_logprob": -0.47785186767578125, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.9016596674919128}], "language": "en"}