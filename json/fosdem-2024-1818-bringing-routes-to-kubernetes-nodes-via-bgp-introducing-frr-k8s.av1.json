{"text": " Can you hear me? Okay. So, today I'm going to talk about a project that we started more or less this summer, which is FRR Kubernetes. Some quick words about me. I'm Federico. I work for this networking team at Red Hat, in charge of making the open-source platform suitable for telco workloads. And because of that, I managed to touch many network-related projects, the SRE operator, some C&I plugins, our primary C&I and lately MetaLEDB, which I'm currently maintaining. My handles are for the power for Mastodon, Twitter and Gmail. If you need to reach me out, ask questions, I will try to answer. So, it's funny because this talk has something to do with the talk that I gave last year here for them, where I presented how we in MetaLEDB replaced the native Go BGP implementation with FRR. And first of all, what is FRR? FRR is a Linux Internet routing protocol suite. It implements a lot of protocols. It's very stable and super-supported and supports BGP and BFD, which were a couple of protocols that we were interested into. What is MetaLEDB? Is anyone using MetaLEDB? Nice. So, I'm the one to blame if something is not working. MetaLEDB is the load balancer implementation for Kubernetes cluster using standard routing protocols, including BGP. BGP allows us to announce our load balancer services across our network. If you are using Kubernetes on bare metal and you need to expose your application, there is a good chance that you need something like MetaLEDB. It's not only alternative, but it's the one that I maintain. This is more or less the architecture. We have the Kubernetes API on one side expressed in terms of services and MetaLEDB configuration. We have some code that takes all these resources, munch them together, and produces an FRR configuration that an FRR Sidecar container processes and then handles the BGP implementation. Last year, in this very conference, I got this question. Can I run MetaLEDB together my FRR instance on the cluster nodes? This is something that I keep hearing a lot. Not only that. What I keep hearing is, hey, but now inside MetaLEDB you have FRR, so you can also do this and this and this and this. No, because MetaLEDB is about announcing services, not for example about receiving routes and injecting them to the node, which is a common request. Why is that? On the cloud, everything is easy. You have one single interface to the node, one default gateway. You get the client who wants to hit your load balancer service, get to the node, enters the CNI, goes to the pod, the pod replies, and then the reply goes to the node and then exits to the default gateway and reaches the client. All is good. But on bare metal, we have users that want to have different networks for different class of traffic, for example, and you have the clients that are not on the same subject. So what has happened in this scenario is that your client reaches your secondary network and guess what? The traffic will try to exit via the default gateway and will not reach your client, or even worse, you will be beaten by RPF and you'll have a bad time trying to debug it. I've been there a couple of times. So this was more or less the request. How can I have something that is able to configure FRR running on my node together with MetaLEDB? There are a few alternatives. The easiest one, at least the easier for me, was run to FRR instances on the node. So I don't have to do anything on MetaLEDB. The user can configure its own FRR instance, but that comes with a few issues. You have duplicate sessions, you have duplicate resources consumed on the node. You have to use custom parts to let the router know how to connect to MetaLEDB and how to connect to those custom parts, to the other FRR. The other option is using two FRR instances in Cascade. This might work, but FRR wasn't able to peer with localhost until recently. It limits the flexibility of MetaLEDB because MetaLEDB has a lot of per node configuration knob. You can say I want to peer to this BGP peer only from this subset of nodes. In this case, these will affect only this session, which is useless. And also, what about the BFD implementation in MetaLEDB? It will establish BFD only through this path. So the next one, which is the one that I'm going to talk about today, is to have a shared instance between MetaLEDB and the rest of the world. So the extra configuration can scale. We can have something that is distributed across all the nodes. We don't waste resources because across the same BGP session, towards the router, we can do what MetaLEDB needs to do, but also other stuff. The cons were this was a lot of work. And getting the right API was tricky. It wasn't clear how to handle conflicts, how to merge all this stuff together. But eventually, this became a design proposal in MetaLEDB, and it converged, and we started working on it. And this is how this new project was born. It's Kubernetes-based, the one set that exposes a very limited subset of the FRR API in a Kubernetes compliant model. I wrote this description, so it's nice. This is the new architecture of the new thing. It's basically we stole what we had in MetaLEDB. We have this new FRR configuration resource, and it does basically what I already described about MetaLEDB before. But now we have a different API and a different way to configure this thing. How to deploy it? It can be deployed as a standalone thing, and this is something that I want to stress. We can use it together with MetaLEDB, and we just released a MetaLEDB version that uses this one as a backend, but you can also deploy it as a standalone component. So you can use it for your own purposes, regardless of the fact that you are using MetaLEDB or not. Now I want to talk a bit about the API. There was a good amount of discussion on this, like we were not sure whether we should have exposed the raw FRR configuration to the external world or having something that was higher level. Because there were some issues in this. How do we merge configurations? How do we allow two configurations, produced by two different actors, to become the same FRR configuration? How to intercept the configuration conflicts? If it was the raw configuration, that would be our Royal mess. And also the way MetaLEDB configures FRR is very opinionated. It gives some certain names to route maps, it gives some certain names to prefix lists, and if we wanted to extend that with a raw configuration, that would have become part of the API, and it would have been something that we couldn't change. Eventually we ended up with something high level in terms of CRD, which is FRR configuration. And this is how a configuration looks like. It has a BGP section in the spec, because we are anticipating that we might need other protocols. We have our outer section, we support multiple routers, but they need to live in different Linux VRFs. We can configure the neighbors, and we can say what prefixes we want to advertise or to receive from those neighbors. And this is how advertising looks like. We can say, I want to advertise all the prefixes that I configured in my router, or only a subset of them. And the same is more or less for the receiving part. We can say, from this peer, I want to receive only the prefixes that are matching this selector. Or we can say, I want to receive all of them. And we have an old selector, so you can say this specific configuration applies only to a subset of the nodes, which is always useful. And of course, because we know that there will be a lot of configuration that we don't cover, we also allow for experimenting or for covering special needs, our configuration, and there is a priority field where basically this gets appended to what is rendered inside the configuration from the API. And of course, we have BFD, communities, local preferences, and all the stuff that Metal.ed is currently exposing. It's covered in this API. And now I'm going to talk a bit about how multiple configurations are merged, because this was a pain point. You have multiple actors throwing configurations at the cluster, and those needs to be merged together in order to produce one single FRR configuration. And there were some guiding principles into this. We wanted a given configuration to be self-contained, meaning that you can have prefixes on one side and saying that you want to advertise those prefixes on another resource. A configuration can only add to an existing one, meaning that you can add neighbors, but you can't say, I want to remove this neighbor, applied by this other configuration, because that would steal the work to other actors. And a more permissive configuration can override a less permissive one, meaning that if you have received none, you can have received some, or a receivable will override the received some. And this is how we can merge to different configurations. We have one neighbor on one side, we have two neighbors on the other. These two configurations are compatible, and then on one side we advertise only a set of prefixes, and on the other side we advertise all of them. And these are two compatible configurations that can be merged together. Another thing is you apply all the configuration, and nothing is working. It happens a lot. We have validation webbooks, but given that the configuration is composed by multiple configurations, we know how Kubernetes work, and some things might slip. So we are exposing the status. We have three fields. One is the last conversion result, which means that if you have multiple incompatible configurations that makes to the controller and the conversion will fail, this is where you will see the error. This is the status of FRR loading the generated configuration, and this is the configuration running inside FRR. So it's something that can be used to inspect the status of the thing. With Metal LB, again, now with this new implementation, we have the same Kubernetes API on one side. Metal LB will generate an FRR configuration. It's going to be read by this new demo, which will talk to the router. And this is how a Metal LB configuration gets translated into this new one. So we have the routers, we have the neighbors, and we have a selector. So each speaker will generate a configuration for the node where it's running on. Yeah, this is what I just said. And this is when we add the service. So we will start advertising those prefixes related to the load balancer service, and things eventually will work. And of course, this is something that can be expanded, providing your own FRR configuration that gets merged to the one generated by Metal LB. I have a very quick demo. It's my first time on a live demo, so fingers crossed. Very quickly, the demo environment is a kind cluster. We have the demo running on each node. We have an external FRR container that represents more or less the external router. And now I'm going to... Okay, so here I have the kind cluster and a bunch of configuration. We have here the external container. It's paired, or it will want to pair with each of the cluster nodes. And also, it will try to advertise a couple of prefixes. And I can go on the configuration side and look at this. This is what I just stated. We want to advertise only one prefix. I'm going to apply it. And hope. Okay, so the session is up with the whole three nodes. And we have the single prefix advertised by the three nodes. And now I can look at this other one, which says advertise all. And I can apply it directly. And it's going to be merged, hopefully, to the other one. And then now we have two prefixes advertised. So it's working. We have CI, so it shouldn't be a surprise. Now I can do something on the receiving side. Here we want only one service out of the two that the external container is publishing. And this is a session inside the node. And eventually, yeah, here we have the last one is the route that is published by the external container. Yeah, what else can I show? I have five minutes. Oh. I can do this. So this is a pod running into the node. And if I try to ping it from outside, it's not going to work. For example, what I can do is try to put that prefix. No pressure. And it pings. So again, another nice example. Thank you. Okay. So I also have other examples, but I think I stressed my luck already enough. And we have still five minutes. Okay. So what's next? There are these, I don't know what's next. FRR provides a lot of opportunities. This is more or less a subset of what Metalaby offers plus something that was asked by a lot of Metalaby users. But of course, you can come and provide feedback, suggest the new features, open issues, or even contribute to the project, hopefully. The good thing is we have a framework that we can expand and grow on implementing new FRR features. A few resources. We try to keep the documentation aligned. So we have an upstream Redmi. We have the Metalaby documentation. There is the Metalaby channel on the Kubernetes Slack, which is where I live daily. And of course, the FRR community is super vibrant, super helpful, and always open to provide feedback and give help to us. And with that, if you have any questions, I'll be happy to answer. Thank you. Why did you keep using the FRR configuration files, which are quite painful to merge, as you said, instead of using the North One APIs? Can you raise your voice a bit? Why? Is it better? Yeah. Why do you use FRR configuration files, which are, as you said, quite easy to merge, instead of using the North One APIs, which have a NetCon thing? Because at the time, that was declared as experimental. I don't know if things changed in the meantime, but like, okay. So then we can... You should. Okay. Yeah. But like, we had all this mess already in place, so it was easy at the time to recycle it. But yeah, if there is a proper API, I'd be happy to start moving to that. Thank you. Any other questions? Okay. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " Can you hear me?", "tokens": [50364, 1664, 291, 1568, 385, 30, 50714], "temperature": 0.0, "avg_logprob": -0.3083112023093484, "compression_ratio": 1.3374233128834356, "no_speech_prob": 0.14688502252101898}, {"id": 1, "seek": 0, "start": 7.0, "end": 10.0, "text": " Okay.", "tokens": [50714, 1033, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3083112023093484, "compression_ratio": 1.3374233128834356, "no_speech_prob": 0.14688502252101898}, {"id": 2, "seek": 0, "start": 10.0, "end": 16.0, "text": " So, today I'm going to talk about a project that we started more or less this summer,", "tokens": [50864, 407, 11, 965, 286, 478, 516, 281, 751, 466, 257, 1716, 300, 321, 1409, 544, 420, 1570, 341, 4266, 11, 51164], "temperature": 0.0, "avg_logprob": -0.3083112023093484, "compression_ratio": 1.3374233128834356, "no_speech_prob": 0.14688502252101898}, {"id": 3, "seek": 0, "start": 16.0, "end": 20.0, "text": " which is FRR Kubernetes.", "tokens": [51164, 597, 307, 15288, 49, 23145, 13, 51364], "temperature": 0.0, "avg_logprob": -0.3083112023093484, "compression_ratio": 1.3374233128834356, "no_speech_prob": 0.14688502252101898}, {"id": 4, "seek": 0, "start": 20.0, "end": 26.0, "text": " Some quick words about me. I'm Federico. I work for this networking team at Red Hat,", "tokens": [51364, 2188, 1702, 2283, 466, 385, 13, 286, 478, 45545, 2789, 13, 286, 589, 337, 341, 17985, 1469, 412, 4477, 15867, 11, 51664], "temperature": 0.0, "avg_logprob": -0.3083112023093484, "compression_ratio": 1.3374233128834356, "no_speech_prob": 0.14688502252101898}, {"id": 5, "seek": 2600, "start": 26.0, "end": 31.0, "text": " in charge of making the open-source platform suitable for telco workloads.", "tokens": [50364, 294, 4602, 295, 1455, 264, 1269, 12, 41676, 3663, 12873, 337, 15284, 1291, 32452, 13, 50614], "temperature": 0.0, "avg_logprob": -0.25077791323606996, "compression_ratio": 1.4227272727272726, "no_speech_prob": 0.16632772982120514}, {"id": 6, "seek": 2600, "start": 31.0, "end": 36.0, "text": " And because of that, I managed to touch many network-related projects,", "tokens": [50614, 400, 570, 295, 300, 11, 286, 6453, 281, 2557, 867, 3209, 12, 12004, 4455, 11, 50864], "temperature": 0.0, "avg_logprob": -0.25077791323606996, "compression_ratio": 1.4227272727272726, "no_speech_prob": 0.16632772982120514}, {"id": 7, "seek": 2600, "start": 36.0, "end": 43.0, "text": " the SRE operator, some C&I plugins, our primary C&I and lately MetaLEDB,", "tokens": [50864, 264, 318, 3850, 12973, 11, 512, 383, 5, 40, 33759, 11, 527, 6194, 383, 5, 40, 293, 12881, 6377, 64, 23459, 33, 11, 51214], "temperature": 0.0, "avg_logprob": -0.25077791323606996, "compression_ratio": 1.4227272727272726, "no_speech_prob": 0.16632772982120514}, {"id": 8, "seek": 2600, "start": 43.0, "end": 46.0, "text": " which I'm currently maintaining.", "tokens": [51214, 597, 286, 478, 4362, 14916, 13, 51364], "temperature": 0.0, "avg_logprob": -0.25077791323606996, "compression_ratio": 1.4227272727272726, "no_speech_prob": 0.16632772982120514}, {"id": 9, "seek": 2600, "start": 46.0, "end": 51.0, "text": " My handles are for the power for Mastodon, Twitter and Gmail.", "tokens": [51364, 1222, 18722, 366, 337, 264, 1347, 337, 376, 525, 378, 266, 11, 5794, 293, 36732, 13, 51614], "temperature": 0.0, "avg_logprob": -0.25077791323606996, "compression_ratio": 1.4227272727272726, "no_speech_prob": 0.16632772982120514}, {"id": 10, "seek": 5100, "start": 51.0, "end": 56.0, "text": " If you need to reach me out, ask questions, I will try to answer.", "tokens": [50364, 759, 291, 643, 281, 2524, 385, 484, 11, 1029, 1651, 11, 286, 486, 853, 281, 1867, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1399744597958847, "compression_ratio": 1.372340425531915, "no_speech_prob": 0.018369967117905617}, {"id": 11, "seek": 5100, "start": 56.0, "end": 65.0, "text": " So, it's funny because this talk has something to do with the talk that I gave last year here for them,", "tokens": [50614, 407, 11, 309, 311, 4074, 570, 341, 751, 575, 746, 281, 360, 365, 264, 751, 300, 286, 2729, 1036, 1064, 510, 337, 552, 11, 51064], "temperature": 0.0, "avg_logprob": -0.1399744597958847, "compression_ratio": 1.372340425531915, "no_speech_prob": 0.018369967117905617}, {"id": 12, "seek": 5100, "start": 65.0, "end": 72.0, "text": " where I presented how we in MetaLEDB replaced the native Go BGP implementation with FRR.", "tokens": [51064, 689, 286, 8212, 577, 321, 294, 6377, 64, 23459, 33, 10772, 264, 8470, 1037, 363, 38, 47, 11420, 365, 15288, 49, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1399744597958847, "compression_ratio": 1.372340425531915, "no_speech_prob": 0.018369967117905617}, {"id": 13, "seek": 7200, "start": 72.0, "end": 76.0, "text": " And first of all, what is FRR?", "tokens": [50364, 400, 700, 295, 439, 11, 437, 307, 15288, 49, 30, 50564], "temperature": 0.0, "avg_logprob": -0.12403960560643396, "compression_ratio": 1.5080213903743316, "no_speech_prob": 0.07940548658370972}, {"id": 14, "seek": 7200, "start": 76.0, "end": 81.0, "text": " FRR is a Linux Internet routing protocol suite.", "tokens": [50564, 15288, 49, 307, 257, 18734, 7703, 32722, 10336, 14205, 13, 50814], "temperature": 0.0, "avg_logprob": -0.12403960560643396, "compression_ratio": 1.5080213903743316, "no_speech_prob": 0.07940548658370972}, {"id": 15, "seek": 7200, "start": 81.0, "end": 87.0, "text": " It implements a lot of protocols. It's very stable and super-supported", "tokens": [50814, 467, 704, 17988, 257, 688, 295, 20618, 13, 467, 311, 588, 8351, 293, 1687, 12, 36622, 14813, 51114], "temperature": 0.0, "avg_logprob": -0.12403960560643396, "compression_ratio": 1.5080213903743316, "no_speech_prob": 0.07940548658370972}, {"id": 16, "seek": 7200, "start": 87.0, "end": 95.0, "text": " and supports BGP and BFD, which were a couple of protocols that we were interested into.", "tokens": [51114, 293, 9346, 363, 38, 47, 293, 363, 37, 35, 11, 597, 645, 257, 1916, 295, 20618, 300, 321, 645, 3102, 666, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12403960560643396, "compression_ratio": 1.5080213903743316, "no_speech_prob": 0.07940548658370972}, {"id": 17, "seek": 7200, "start": 95.0, "end": 99.0, "text": " What is MetaLEDB? Is anyone using MetaLEDB?", "tokens": [51514, 708, 307, 6377, 64, 23459, 33, 30, 1119, 2878, 1228, 6377, 64, 23459, 33, 30, 51714], "temperature": 0.0, "avg_logprob": -0.12403960560643396, "compression_ratio": 1.5080213903743316, "no_speech_prob": 0.07940548658370972}, {"id": 18, "seek": 9900, "start": 99.0, "end": 105.0, "text": " Nice. So, I'm the one to blame if something is not working.", "tokens": [50364, 5490, 13, 407, 11, 286, 478, 264, 472, 281, 10127, 498, 746, 307, 406, 1364, 13, 50664], "temperature": 0.0, "avg_logprob": -0.07302521686164701, "compression_ratio": 1.628099173553719, "no_speech_prob": 0.0039915707893669605}, {"id": 19, "seek": 9900, "start": 105.0, "end": 113.0, "text": " MetaLEDB is the load balancer implementation for Kubernetes cluster using standard routing protocols, including BGP.", "tokens": [50664, 6377, 64, 23459, 33, 307, 264, 3677, 3119, 28347, 11420, 337, 23145, 13630, 1228, 3832, 32722, 20618, 11, 3009, 363, 38, 47, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07302521686164701, "compression_ratio": 1.628099173553719, "no_speech_prob": 0.0039915707893669605}, {"id": 20, "seek": 9900, "start": 113.0, "end": 118.0, "text": " BGP allows us to announce our load balancer services across our network.", "tokens": [51064, 363, 38, 47, 4045, 505, 281, 7478, 527, 3677, 3119, 28347, 3328, 2108, 527, 3209, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07302521686164701, "compression_ratio": 1.628099173553719, "no_speech_prob": 0.0039915707893669605}, {"id": 21, "seek": 9900, "start": 118.0, "end": 123.0, "text": " If you are using Kubernetes on bare metal and you need to expose your application,", "tokens": [51314, 759, 291, 366, 1228, 23145, 322, 6949, 5760, 293, 291, 643, 281, 19219, 428, 3861, 11, 51564], "temperature": 0.0, "avg_logprob": -0.07302521686164701, "compression_ratio": 1.628099173553719, "no_speech_prob": 0.0039915707893669605}, {"id": 22, "seek": 9900, "start": 123.0, "end": 126.0, "text": " there is a good chance that you need something like MetaLEDB.", "tokens": [51564, 456, 307, 257, 665, 2931, 300, 291, 643, 746, 411, 6377, 64, 23459, 33, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07302521686164701, "compression_ratio": 1.628099173553719, "no_speech_prob": 0.0039915707893669605}, {"id": 23, "seek": 12600, "start": 126.0, "end": 130.0, "text": " It's not only alternative, but it's the one that I maintain.", "tokens": [50364, 467, 311, 406, 787, 8535, 11, 457, 309, 311, 264, 472, 300, 286, 6909, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11573948178972517, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.007407002151012421}, {"id": 24, "seek": 12600, "start": 130.0, "end": 133.0, "text": " This is more or less the architecture.", "tokens": [50564, 639, 307, 544, 420, 1570, 264, 9482, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11573948178972517, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.007407002151012421}, {"id": 25, "seek": 12600, "start": 133.0, "end": 142.0, "text": " We have the Kubernetes API on one side expressed in terms of services and MetaLEDB configuration.", "tokens": [50714, 492, 362, 264, 23145, 9362, 322, 472, 1252, 12675, 294, 2115, 295, 3328, 293, 6377, 64, 23459, 33, 11694, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11573948178972517, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.007407002151012421}, {"id": 26, "seek": 12600, "start": 142.0, "end": 147.0, "text": " We have some code that takes all these resources, munch them together,", "tokens": [51164, 492, 362, 512, 3089, 300, 2516, 439, 613, 3593, 11, 275, 1680, 552, 1214, 11, 51414], "temperature": 0.0, "avg_logprob": -0.11573948178972517, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.007407002151012421}, {"id": 27, "seek": 12600, "start": 147.0, "end": 154.0, "text": " and produces an FRR configuration that an FRR Sidecar container processes", "tokens": [51414, 293, 14725, 364, 15288, 49, 11694, 300, 364, 15288, 49, 19026, 6166, 10129, 7555, 51764], "temperature": 0.0, "avg_logprob": -0.11573948178972517, "compression_ratio": 1.5475113122171946, "no_speech_prob": 0.007407002151012421}, {"id": 28, "seek": 15400, "start": 154.0, "end": 158.0, "text": " and then handles the BGP implementation.", "tokens": [50364, 293, 550, 18722, 264, 363, 38, 47, 11420, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 29, "seek": 15400, "start": 158.0, "end": 163.0, "text": " Last year, in this very conference, I got this question.", "tokens": [50564, 5264, 1064, 11, 294, 341, 588, 7586, 11, 286, 658, 341, 1168, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 30, "seek": 15400, "start": 163.0, "end": 168.0, "text": " Can I run MetaLEDB together my FRR instance on the cluster nodes?", "tokens": [50814, 1664, 286, 1190, 6377, 64, 23459, 33, 1214, 452, 15288, 49, 5197, 322, 264, 13630, 13891, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 31, "seek": 15400, "start": 168.0, "end": 173.0, "text": " This is something that I keep hearing a lot.", "tokens": [51064, 639, 307, 746, 300, 286, 1066, 4763, 257, 688, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 32, "seek": 15400, "start": 173.0, "end": 179.0, "text": " Not only that. What I keep hearing is, hey, but now inside MetaLEDB you have FRR,", "tokens": [51314, 1726, 787, 300, 13, 708, 286, 1066, 4763, 307, 11, 4177, 11, 457, 586, 1854, 6377, 64, 23459, 33, 291, 362, 15288, 49, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 33, "seek": 15400, "start": 179.0, "end": 182.0, "text": " so you can also do this and this and this and this.", "tokens": [51614, 370, 291, 393, 611, 360, 341, 293, 341, 293, 341, 293, 341, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1249870491027832, "compression_ratio": 1.5906976744186045, "no_speech_prob": 0.003603793913498521}, {"id": 34, "seek": 18200, "start": 182.0, "end": 186.0, "text": " No, because MetaLEDB is about announcing services,", "tokens": [50364, 883, 11, 570, 6377, 64, 23459, 33, 307, 466, 28706, 3328, 11, 50564], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 35, "seek": 18200, "start": 186.0, "end": 190.0, "text": " not for example about receiving routes and injecting them to the node,", "tokens": [50564, 406, 337, 1365, 466, 10040, 18242, 293, 10711, 278, 552, 281, 264, 9984, 11, 50764], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 36, "seek": 18200, "start": 190.0, "end": 193.0, "text": " which is a common request.", "tokens": [50764, 597, 307, 257, 2689, 5308, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 37, "seek": 18200, "start": 193.0, "end": 197.0, "text": " Why is that? On the cloud, everything is easy.", "tokens": [50914, 1545, 307, 300, 30, 1282, 264, 4588, 11, 1203, 307, 1858, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 38, "seek": 18200, "start": 197.0, "end": 202.0, "text": " You have one single interface to the node, one default gateway.", "tokens": [51114, 509, 362, 472, 2167, 9226, 281, 264, 9984, 11, 472, 7576, 28532, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 39, "seek": 18200, "start": 202.0, "end": 206.0, "text": " You get the client who wants to hit your load balancer service,", "tokens": [51364, 509, 483, 264, 6423, 567, 2738, 281, 2045, 428, 3677, 3119, 28347, 2643, 11, 51564], "temperature": 0.0, "avg_logprob": -0.13182696174172795, "compression_ratio": 1.5454545454545454, "no_speech_prob": 0.008958021178841591}, {"id": 40, "seek": 20600, "start": 206.0, "end": 211.0, "text": " get to the node, enters the CNI, goes to the pod, the pod replies,", "tokens": [50364, 483, 281, 264, 9984, 11, 18780, 264, 14589, 40, 11, 1709, 281, 264, 2497, 11, 264, 2497, 42289, 11, 50614], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 41, "seek": 20600, "start": 211.0, "end": 216.0, "text": " and then the reply goes to the node and then exits to the default gateway", "tokens": [50614, 293, 550, 264, 16972, 1709, 281, 264, 9984, 293, 550, 44183, 281, 264, 7576, 28532, 50864], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 42, "seek": 20600, "start": 216.0, "end": 219.0, "text": " and reaches the client. All is good.", "tokens": [50864, 293, 14235, 264, 6423, 13, 1057, 307, 665, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 43, "seek": 20600, "start": 219.0, "end": 224.0, "text": " But on bare metal, we have users that want to have different networks", "tokens": [51014, 583, 322, 6949, 5760, 11, 321, 362, 5022, 300, 528, 281, 362, 819, 9590, 51264], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 44, "seek": 20600, "start": 224.0, "end": 227.0, "text": " for different class of traffic, for example,", "tokens": [51264, 337, 819, 1508, 295, 6419, 11, 337, 1365, 11, 51414], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 45, "seek": 20600, "start": 227.0, "end": 230.0, "text": " and you have the clients that are not on the same subject.", "tokens": [51414, 293, 291, 362, 264, 6982, 300, 366, 406, 322, 264, 912, 3983, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 46, "seek": 20600, "start": 230.0, "end": 235.0, "text": " So what has happened in this scenario is that your client reaches", "tokens": [51564, 407, 437, 575, 2011, 294, 341, 9005, 307, 300, 428, 6423, 14235, 51814], "temperature": 0.0, "avg_logprob": -0.13628725247962453, "compression_ratio": 1.7974137931034482, "no_speech_prob": 0.015434973873198032}, {"id": 47, "seek": 23500, "start": 235.0, "end": 238.0, "text": " your secondary network and guess what?", "tokens": [50364, 428, 11396, 3209, 293, 2041, 437, 30, 50514], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 48, "seek": 23500, "start": 238.0, "end": 241.0, "text": " The traffic will try to exit via the default gateway", "tokens": [50514, 440, 6419, 486, 853, 281, 11043, 5766, 264, 7576, 28532, 50664], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 49, "seek": 23500, "start": 241.0, "end": 246.0, "text": " and will not reach your client, or even worse, you will be beaten by RPF", "tokens": [50664, 293, 486, 406, 2524, 428, 6423, 11, 420, 754, 5324, 11, 291, 486, 312, 17909, 538, 14105, 37, 50914], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 50, "seek": 23500, "start": 246.0, "end": 249.0, "text": " and you'll have a bad time trying to debug it.", "tokens": [50914, 293, 291, 603, 362, 257, 1578, 565, 1382, 281, 24083, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 51, "seek": 23500, "start": 249.0, "end": 252.0, "text": " I've been there a couple of times.", "tokens": [51064, 286, 600, 668, 456, 257, 1916, 295, 1413, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 52, "seek": 23500, "start": 252.0, "end": 254.0, "text": " So this was more or less the request.", "tokens": [51214, 407, 341, 390, 544, 420, 1570, 264, 5308, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 53, "seek": 23500, "start": 254.0, "end": 260.0, "text": " How can I have something that is able to configure FRR running on my node", "tokens": [51314, 1012, 393, 286, 362, 746, 300, 307, 1075, 281, 22162, 15288, 49, 2614, 322, 452, 9984, 51614], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 54, "seek": 23500, "start": 260.0, "end": 262.0, "text": " together with MetaLEDB?", "tokens": [51614, 1214, 365, 6377, 64, 23459, 33, 30, 51714], "temperature": 0.0, "avg_logprob": -0.08717075383888101, "compression_ratio": 1.5098814229249011, "no_speech_prob": 0.001956566236913204}, {"id": 55, "seek": 26200, "start": 262.0, "end": 264.0, "text": " There are a few alternatives.", "tokens": [50364, 821, 366, 257, 1326, 20478, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 56, "seek": 26200, "start": 264.0, "end": 270.0, "text": " The easiest one, at least the easier for me, was run to FRR instances on the node.", "tokens": [50464, 440, 12889, 472, 11, 412, 1935, 264, 3571, 337, 385, 11, 390, 1190, 281, 15288, 49, 14519, 322, 264, 9984, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 57, "seek": 26200, "start": 270.0, "end": 273.0, "text": " So I don't have to do anything on MetaLEDB.", "tokens": [50764, 407, 286, 500, 380, 362, 281, 360, 1340, 322, 6377, 64, 23459, 33, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 58, "seek": 26200, "start": 273.0, "end": 279.0, "text": " The user can configure its own FRR instance, but that comes with a few issues.", "tokens": [50914, 440, 4195, 393, 22162, 1080, 1065, 15288, 49, 5197, 11, 457, 300, 1487, 365, 257, 1326, 2663, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 59, "seek": 26200, "start": 279.0, "end": 285.0, "text": " You have duplicate sessions, you have duplicate resources consumed on the node.", "tokens": [51214, 509, 362, 23976, 11081, 11, 291, 362, 23976, 3593, 21226, 322, 264, 9984, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 60, "seek": 26200, "start": 285.0, "end": 291.0, "text": " You have to use custom parts to let the router know how to connect to MetaLEDB", "tokens": [51514, 509, 362, 281, 764, 2375, 3166, 281, 718, 264, 22492, 458, 577, 281, 1745, 281, 6377, 64, 23459, 33, 51814], "temperature": 0.0, "avg_logprob": -0.1145286739997144, "compression_ratio": 1.676595744680851, "no_speech_prob": 0.00992476474493742}, {"id": 61, "seek": 29100, "start": 291.0, "end": 295.0, "text": " and how to connect to those custom parts, to the other FRR.", "tokens": [50364, 293, 577, 281, 1745, 281, 729, 2375, 3166, 11, 281, 264, 661, 15288, 49, 13, 50564], "temperature": 0.0, "avg_logprob": -0.12890685796737672, "compression_ratio": 1.4472361809045227, "no_speech_prob": 0.001612383988685906}, {"id": 62, "seek": 29100, "start": 295.0, "end": 301.0, "text": " The other option is using two FRR instances in Cascade.", "tokens": [50564, 440, 661, 3614, 307, 1228, 732, 15288, 49, 14519, 294, 383, 4806, 762, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12890685796737672, "compression_ratio": 1.4472361809045227, "no_speech_prob": 0.001612383988685906}, {"id": 63, "seek": 29100, "start": 304.0, "end": 311.0, "text": " This might work, but FRR wasn't able to peer with localhost until recently.", "tokens": [51014, 639, 1062, 589, 11, 457, 15288, 49, 2067, 380, 1075, 281, 15108, 365, 2654, 6037, 1826, 3938, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12890685796737672, "compression_ratio": 1.4472361809045227, "no_speech_prob": 0.001612383988685906}, {"id": 64, "seek": 29100, "start": 311.0, "end": 319.0, "text": " It limits the flexibility of MetaLEDB because MetaLEDB has a lot of per node configuration knob.", "tokens": [51364, 467, 10406, 264, 12635, 295, 6377, 64, 23459, 33, 570, 6377, 64, 23459, 33, 575, 257, 688, 295, 680, 9984, 11694, 26759, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12890685796737672, "compression_ratio": 1.4472361809045227, "no_speech_prob": 0.001612383988685906}, {"id": 65, "seek": 31900, "start": 319.0, "end": 324.0, "text": " You can say I want to peer to this BGP peer only from this subset of nodes.", "tokens": [50364, 509, 393, 584, 286, 528, 281, 15108, 281, 341, 363, 38, 47, 15108, 787, 490, 341, 25993, 295, 13891, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 66, "seek": 31900, "start": 324.0, "end": 329.0, "text": " In this case, these will affect only this session, which is useless.", "tokens": [50614, 682, 341, 1389, 11, 613, 486, 3345, 787, 341, 5481, 11, 597, 307, 14115, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 67, "seek": 31900, "start": 329.0, "end": 333.0, "text": " And also, what about the BFD implementation in MetaLEDB?", "tokens": [50864, 400, 611, 11, 437, 466, 264, 363, 37, 35, 11420, 294, 6377, 64, 23459, 33, 30, 51064], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 68, "seek": 31900, "start": 333.0, "end": 336.0, "text": " It will establish BFD only through this path.", "tokens": [51064, 467, 486, 8327, 363, 37, 35, 787, 807, 341, 3100, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 69, "seek": 31900, "start": 336.0, "end": 342.0, "text": " So the next one, which is the one that I'm going to talk about today,", "tokens": [51214, 407, 264, 958, 472, 11, 597, 307, 264, 472, 300, 286, 478, 516, 281, 751, 466, 965, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 70, "seek": 31900, "start": 342.0, "end": 346.0, "text": " is to have a shared instance between MetaLEDB and the rest of the world.", "tokens": [51514, 307, 281, 362, 257, 5507, 5197, 1296, 6377, 64, 23459, 33, 293, 264, 1472, 295, 264, 1002, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11762792723519462, "compression_ratio": 1.6049382716049383, "no_speech_prob": 0.008934788405895233}, {"id": 71, "seek": 34600, "start": 346.0, "end": 349.0, "text": " So the extra configuration can scale.", "tokens": [50364, 407, 264, 2857, 11694, 393, 4373, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 72, "seek": 34600, "start": 349.0, "end": 353.0, "text": " We can have something that is distributed across all the nodes.", "tokens": [50514, 492, 393, 362, 746, 300, 307, 12631, 2108, 439, 264, 13891, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 73, "seek": 34600, "start": 353.0, "end": 357.0, "text": " We don't waste resources because across the same BGP session,", "tokens": [50714, 492, 500, 380, 5964, 3593, 570, 2108, 264, 912, 363, 38, 47, 5481, 11, 50914], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 74, "seek": 34600, "start": 357.0, "end": 362.0, "text": " towards the router, we can do what MetaLEDB needs to do, but also other stuff.", "tokens": [50914, 3030, 264, 22492, 11, 321, 393, 360, 437, 6377, 64, 23459, 33, 2203, 281, 360, 11, 457, 611, 661, 1507, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 75, "seek": 34600, "start": 365.0, "end": 368.0, "text": " The cons were this was a lot of work.", "tokens": [51314, 440, 1014, 645, 341, 390, 257, 688, 295, 589, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 76, "seek": 34600, "start": 368.0, "end": 371.0, "text": " And getting the right API was tricky.", "tokens": [51464, 400, 1242, 264, 558, 9362, 390, 12414, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 77, "seek": 34600, "start": 371.0, "end": 375.0, "text": " It wasn't clear how to handle conflicts, how to merge all this stuff together.", "tokens": [51614, 467, 2067, 380, 1850, 577, 281, 4813, 19807, 11, 577, 281, 22183, 439, 341, 1507, 1214, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11414345332554408, "compression_ratio": 1.5691699604743083, "no_speech_prob": 0.0011450311867520213}, {"id": 78, "seek": 37500, "start": 375.0, "end": 380.0, "text": " But eventually, this became a design proposal in MetaLEDB,", "tokens": [50364, 583, 4728, 11, 341, 3062, 257, 1715, 11494, 294, 6377, 64, 23459, 33, 11, 50614], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 79, "seek": 37500, "start": 380.0, "end": 383.0, "text": " and it converged, and we started working on it.", "tokens": [50614, 293, 309, 9652, 3004, 11, 293, 321, 1409, 1364, 322, 309, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 80, "seek": 37500, "start": 383.0, "end": 386.0, "text": " And this is how this new project was born.", "tokens": [50764, 400, 341, 307, 577, 341, 777, 1716, 390, 4232, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 81, "seek": 37500, "start": 386.0, "end": 388.0, "text": " It's Kubernetes-based,", "tokens": [50914, 467, 311, 23145, 12, 6032, 11, 51014], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 82, "seek": 37500, "start": 388.0, "end": 393.0, "text": " the one set that exposes a very limited subset of the FRR API", "tokens": [51014, 264, 472, 992, 300, 1278, 4201, 257, 588, 5567, 25993, 295, 264, 15288, 49, 9362, 51264], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 83, "seek": 37500, "start": 393.0, "end": 395.0, "text": " in a Kubernetes compliant model.", "tokens": [51264, 294, 257, 23145, 36248, 2316, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 84, "seek": 37500, "start": 395.0, "end": 398.0, "text": " I wrote this description, so it's nice.", "tokens": [51364, 286, 4114, 341, 3855, 11, 370, 309, 311, 1481, 13, 51514], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 85, "seek": 37500, "start": 400.0, "end": 402.0, "text": " This is the new architecture of the new thing.", "tokens": [51614, 639, 307, 264, 777, 9482, 295, 264, 777, 551, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15904781605937693, "compression_ratio": 1.5063829787234042, "no_speech_prob": 0.0006990807014517486}, {"id": 86, "seek": 40200, "start": 402.0, "end": 405.0, "text": " It's basically we stole what we had in MetaLEDB.", "tokens": [50364, 467, 311, 1936, 321, 16326, 437, 321, 632, 294, 6377, 64, 23459, 33, 13, 50514], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 87, "seek": 40200, "start": 405.0, "end": 408.0, "text": " We have this new FRR configuration resource,", "tokens": [50514, 492, 362, 341, 777, 15288, 49, 11694, 7684, 11, 50664], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 88, "seek": 40200, "start": 408.0, "end": 414.0, "text": " and it does basically what I already described about MetaLEDB before.", "tokens": [50664, 293, 309, 775, 1936, 437, 286, 1217, 7619, 466, 6377, 64, 23459, 33, 949, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 89, "seek": 40200, "start": 414.0, "end": 421.0, "text": " But now we have a different API and a different way to configure this thing.", "tokens": [50964, 583, 586, 321, 362, 257, 819, 9362, 293, 257, 819, 636, 281, 22162, 341, 551, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 90, "seek": 40200, "start": 423.0, "end": 424.0, "text": " How to deploy it?", "tokens": [51414, 1012, 281, 7274, 309, 30, 51464], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 91, "seek": 40200, "start": 424.0, "end": 427.0, "text": " It can be deployed as a standalone thing,", "tokens": [51464, 467, 393, 312, 17826, 382, 257, 37454, 551, 11, 51614], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 92, "seek": 40200, "start": 427.0, "end": 429.0, "text": " and this is something that I want to stress.", "tokens": [51614, 293, 341, 307, 746, 300, 286, 528, 281, 4244, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08638380943460668, "compression_ratio": 1.5972222222222223, "no_speech_prob": 0.00024274273891933262}, {"id": 93, "seek": 42900, "start": 429.0, "end": 431.0, "text": " We can use it together with MetaLEDB,", "tokens": [50364, 492, 393, 764, 309, 1214, 365, 6377, 64, 23459, 33, 11, 50464], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 94, "seek": 42900, "start": 431.0, "end": 436.0, "text": " and we just released a MetaLEDB version that uses this one as a backend,", "tokens": [50464, 293, 321, 445, 4736, 257, 6377, 64, 23459, 33, 3037, 300, 4960, 341, 472, 382, 257, 38087, 11, 50714], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 95, "seek": 42900, "start": 436.0, "end": 439.0, "text": " but you can also deploy it as a standalone component.", "tokens": [50714, 457, 291, 393, 611, 7274, 309, 382, 257, 37454, 6542, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 96, "seek": 42900, "start": 439.0, "end": 442.0, "text": " So you can use it for your own purposes,", "tokens": [50864, 407, 291, 393, 764, 309, 337, 428, 1065, 9932, 11, 51014], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 97, "seek": 42900, "start": 442.0, "end": 446.0, "text": " regardless of the fact that you are using MetaLEDB or not.", "tokens": [51014, 10060, 295, 264, 1186, 300, 291, 366, 1228, 6377, 64, 23459, 33, 420, 406, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 98, "seek": 42900, "start": 448.0, "end": 451.0, "text": " Now I want to talk a bit about the API.", "tokens": [51314, 823, 286, 528, 281, 751, 257, 857, 466, 264, 9362, 13, 51464], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 99, "seek": 42900, "start": 452.0, "end": 455.0, "text": " There was a good amount of discussion on this,", "tokens": [51514, 821, 390, 257, 665, 2372, 295, 5017, 322, 341, 11, 51664], "temperature": 0.0, "avg_logprob": -0.08100130978752584, "compression_ratio": 1.5462555066079295, "no_speech_prob": 0.002041527535766363}, {"id": 100, "seek": 45500, "start": 455.0, "end": 462.0, "text": " like we were not sure whether we should have exposed the raw FRR configuration", "tokens": [50364, 411, 321, 645, 406, 988, 1968, 321, 820, 362, 9495, 264, 8936, 15288, 49, 11694, 50714], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 101, "seek": 45500, "start": 462.0, "end": 467.0, "text": " to the external world or having something that was higher level.", "tokens": [50714, 281, 264, 8320, 1002, 420, 1419, 746, 300, 390, 2946, 1496, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 102, "seek": 45500, "start": 468.0, "end": 470.0, "text": " Because there were some issues in this.", "tokens": [51014, 1436, 456, 645, 512, 2663, 294, 341, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 103, "seek": 45500, "start": 470.0, "end": 472.0, "text": " How do we merge configurations?", "tokens": [51114, 1012, 360, 321, 22183, 31493, 30, 51214], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 104, "seek": 45500, "start": 472.0, "end": 476.0, "text": " How do we allow two configurations,", "tokens": [51214, 1012, 360, 321, 2089, 732, 31493, 11, 51414], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 105, "seek": 45500, "start": 476.0, "end": 482.0, "text": " produced by two different actors, to become the same FRR configuration?", "tokens": [51414, 7126, 538, 732, 819, 10037, 11, 281, 1813, 264, 912, 15288, 49, 11694, 30, 51714], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 106, "seek": 45500, "start": 482.0, "end": 484.0, "text": " How to intercept the configuration conflicts?", "tokens": [51714, 1012, 281, 24700, 264, 11694, 19807, 30, 51814], "temperature": 0.0, "avg_logprob": -0.13801884370691636, "compression_ratio": 1.740566037735849, "no_speech_prob": 0.0022691867779940367}, {"id": 107, "seek": 48400, "start": 484.0, "end": 487.0, "text": " If it was the raw configuration, that would be our Royal mess.", "tokens": [50364, 759, 309, 390, 264, 8936, 11694, 11, 300, 576, 312, 527, 12717, 2082, 13, 50514], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 108, "seek": 48400, "start": 488.0, "end": 493.0, "text": " And also the way MetaLEDB configures FRR is very opinionated.", "tokens": [50564, 400, 611, 264, 636, 6377, 64, 23459, 33, 6662, 1303, 15288, 49, 307, 588, 4800, 770, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 109, "seek": 48400, "start": 493.0, "end": 495.0, "text": " It gives some certain names to route maps,", "tokens": [50814, 467, 2709, 512, 1629, 5288, 281, 7955, 11317, 11, 50914], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 110, "seek": 48400, "start": 495.0, "end": 499.0, "text": " it gives some certain names to prefix lists,", "tokens": [50914, 309, 2709, 512, 1629, 5288, 281, 46969, 14511, 11, 51114], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 111, "seek": 48400, "start": 499.0, "end": 502.0, "text": " and if we wanted to extend that with a raw configuration,", "tokens": [51114, 293, 498, 321, 1415, 281, 10101, 300, 365, 257, 8936, 11694, 11, 51264], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 112, "seek": 48400, "start": 502.0, "end": 505.0, "text": " that would have become part of the API,", "tokens": [51264, 300, 576, 362, 1813, 644, 295, 264, 9362, 11, 51414], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 113, "seek": 48400, "start": 505.0, "end": 508.0, "text": " and it would have been something that we couldn't change.", "tokens": [51414, 293, 309, 576, 362, 668, 746, 300, 321, 2809, 380, 1319, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15143622184286312, "compression_ratio": 1.7440758293838863, "no_speech_prob": 0.004217124544084072}, {"id": 114, "seek": 50800, "start": 509.0, "end": 514.0, "text": " Eventually we ended up with something high level in terms of CRD,", "tokens": [50414, 17586, 321, 4590, 493, 365, 746, 1090, 1496, 294, 2115, 295, 14123, 35, 11, 50664], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 115, "seek": 50800, "start": 514.0, "end": 517.0, "text": " which is FRR configuration.", "tokens": [50664, 597, 307, 15288, 49, 11694, 13, 50814], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 116, "seek": 50800, "start": 517.0, "end": 520.0, "text": " And this is how a configuration looks like.", "tokens": [50814, 400, 341, 307, 577, 257, 11694, 1542, 411, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 117, "seek": 50800, "start": 520.0, "end": 522.0, "text": " It has a BGP section in the spec,", "tokens": [50964, 467, 575, 257, 363, 38, 47, 3541, 294, 264, 1608, 11, 51064], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 118, "seek": 50800, "start": 522.0, "end": 527.0, "text": " because we are anticipating that we might need other protocols.", "tokens": [51064, 570, 321, 366, 40568, 300, 321, 1062, 643, 661, 20618, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 119, "seek": 50800, "start": 527.0, "end": 531.0, "text": " We have our outer section, we support multiple routers,", "tokens": [51314, 492, 362, 527, 10847, 3541, 11, 321, 1406, 3866, 4020, 433, 11, 51514], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 120, "seek": 50800, "start": 533.0, "end": 536.0, "text": " but they need to live in different Linux VRFs.", "tokens": [51614, 457, 436, 643, 281, 1621, 294, 819, 18734, 13722, 37, 82, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13732529734517193, "compression_ratio": 1.4759825327510918, "no_speech_prob": 0.004595903214067221}, {"id": 121, "seek": 53600, "start": 537.0, "end": 539.0, "text": " We can configure the neighbors,", "tokens": [50414, 492, 393, 22162, 264, 12512, 11, 50514], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 122, "seek": 53600, "start": 539.0, "end": 544.0, "text": " and we can say what prefixes we want to advertise or to receive from those neighbors.", "tokens": [50514, 293, 321, 393, 584, 437, 18417, 36005, 321, 528, 281, 35379, 420, 281, 4774, 490, 729, 12512, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 123, "seek": 53600, "start": 545.0, "end": 547.0, "text": " And this is how advertising looks like.", "tokens": [50814, 400, 341, 307, 577, 13097, 1542, 411, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 124, "seek": 53600, "start": 547.0, "end": 552.0, "text": " We can say, I want to advertise all the prefixes that I configured in my router,", "tokens": [50914, 492, 393, 584, 11, 286, 528, 281, 35379, 439, 264, 18417, 36005, 300, 286, 30538, 294, 452, 22492, 11, 51164], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 125, "seek": 53600, "start": 552.0, "end": 555.0, "text": " or only a subset of them.", "tokens": [51164, 420, 787, 257, 25993, 295, 552, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 126, "seek": 53600, "start": 555.0, "end": 559.0, "text": " And the same is more or less for the receiving part.", "tokens": [51314, 400, 264, 912, 307, 544, 420, 1570, 337, 264, 10040, 644, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 127, "seek": 53600, "start": 559.0, "end": 564.0, "text": " We can say, from this peer, I want to receive only the prefixes", "tokens": [51514, 492, 393, 584, 11, 490, 341, 15108, 11, 286, 528, 281, 4774, 787, 264, 18417, 36005, 51764], "temperature": 0.0, "avg_logprob": -0.11805898067997951, "compression_ratio": 1.8768472906403941, "no_speech_prob": 0.0028263030108064413}, {"id": 128, "seek": 56400, "start": 564.0, "end": 567.0, "text": " that are matching this selector.", "tokens": [50364, 300, 366, 14324, 341, 23264, 1672, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 129, "seek": 56400, "start": 567.0, "end": 570.0, "text": " Or we can say, I want to receive all of them.", "tokens": [50514, 1610, 321, 393, 584, 11, 286, 528, 281, 4774, 439, 295, 552, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 130, "seek": 56400, "start": 573.0, "end": 576.0, "text": " And we have an old selector, so you can say this specific configuration", "tokens": [50814, 400, 321, 362, 364, 1331, 23264, 1672, 11, 370, 291, 393, 584, 341, 2685, 11694, 50964], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 131, "seek": 56400, "start": 576.0, "end": 580.0, "text": " applies only to a subset of the nodes, which is always useful.", "tokens": [50964, 13165, 787, 281, 257, 25993, 295, 264, 13891, 11, 597, 307, 1009, 4420, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 132, "seek": 56400, "start": 581.0, "end": 585.0, "text": " And of course, because we know that there will be a lot of configuration", "tokens": [51214, 400, 295, 1164, 11, 570, 321, 458, 300, 456, 486, 312, 257, 688, 295, 11694, 51414], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 133, "seek": 56400, "start": 585.0, "end": 589.0, "text": " that we don't cover, we also allow for experimenting", "tokens": [51414, 300, 321, 500, 380, 2060, 11, 321, 611, 2089, 337, 29070, 51614], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 134, "seek": 56400, "start": 589.0, "end": 592.0, "text": " or for covering special needs, our configuration,", "tokens": [51614, 420, 337, 10322, 2121, 2203, 11, 527, 11694, 11, 51764], "temperature": 0.0, "avg_logprob": -0.12193163871765136, "compression_ratio": 1.6623931623931625, "no_speech_prob": 0.0007479469059035182}, {"id": 135, "seek": 59200, "start": 592.0, "end": 596.0, "text": " and there is a priority field where basically this gets appended", "tokens": [50364, 293, 456, 307, 257, 9365, 2519, 689, 1936, 341, 2170, 724, 3502, 50564], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 136, "seek": 59200, "start": 596.0, "end": 601.0, "text": " to what is rendered inside the configuration from the API.", "tokens": [50564, 281, 437, 307, 28748, 1854, 264, 11694, 490, 264, 9362, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 137, "seek": 59200, "start": 602.0, "end": 606.0, "text": " And of course, we have BFD, communities, local preferences,", "tokens": [50864, 400, 295, 1164, 11, 321, 362, 363, 37, 35, 11, 4456, 11, 2654, 21910, 11, 51064], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 138, "seek": 59200, "start": 606.0, "end": 610.0, "text": " and all the stuff that Metal.ed is currently exposing.", "tokens": [51064, 293, 439, 264, 1507, 300, 23488, 13, 292, 307, 4362, 33178, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 139, "seek": 59200, "start": 611.0, "end": 613.0, "text": " It's covered in this API.", "tokens": [51314, 467, 311, 5343, 294, 341, 9362, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 140, "seek": 59200, "start": 614.0, "end": 619.0, "text": " And now I'm going to talk a bit about how multiple configurations are merged,", "tokens": [51464, 400, 586, 286, 478, 516, 281, 751, 257, 857, 466, 577, 3866, 31493, 366, 36427, 11, 51714], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 141, "seek": 59200, "start": 619.0, "end": 621.0, "text": " because this was a pain point.", "tokens": [51714, 570, 341, 390, 257, 1822, 935, 13, 51814], "temperature": 0.0, "avg_logprob": -0.14109938343365988, "compression_ratio": 1.5541666666666667, "no_speech_prob": 0.0014986140886321664}, {"id": 142, "seek": 62100, "start": 621.0, "end": 625.0, "text": " You have multiple actors throwing configurations at the cluster,", "tokens": [50364, 509, 362, 3866, 10037, 10238, 31493, 412, 264, 13630, 11, 50564], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 143, "seek": 62100, "start": 625.0, "end": 631.0, "text": " and those needs to be merged together in order to produce one single FRR configuration.", "tokens": [50564, 293, 729, 2203, 281, 312, 36427, 1214, 294, 1668, 281, 5258, 472, 2167, 15288, 49, 11694, 13, 50864], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 144, "seek": 62100, "start": 631.0, "end": 634.0, "text": " And there were some guiding principles into this.", "tokens": [50864, 400, 456, 645, 512, 25061, 9156, 666, 341, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 145, "seek": 62100, "start": 634.0, "end": 637.0, "text": " We wanted a given configuration to be self-contained,", "tokens": [51014, 492, 1415, 257, 2212, 11694, 281, 312, 2698, 12, 9000, 3563, 11, 51164], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 146, "seek": 62100, "start": 637.0, "end": 641.0, "text": " meaning that you can have prefixes on one side", "tokens": [51164, 3620, 300, 291, 393, 362, 18417, 36005, 322, 472, 1252, 51364], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 147, "seek": 62100, "start": 641.0, "end": 646.0, "text": " and saying that you want to advertise those prefixes on another resource.", "tokens": [51364, 293, 1566, 300, 291, 528, 281, 35379, 729, 18417, 36005, 322, 1071, 7684, 13, 51614], "temperature": 0.0, "avg_logprob": -0.06571415967719499, "compression_ratio": 1.6755555555555555, "no_speech_prob": 0.00041274080285802484}, {"id": 148, "seek": 64600, "start": 646.0, "end": 650.0, "text": " A configuration can only add to an existing one,", "tokens": [50364, 316, 11694, 393, 787, 909, 281, 364, 6741, 472, 11, 50564], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 149, "seek": 64600, "start": 650.0, "end": 652.0, "text": " meaning that you can add neighbors,", "tokens": [50564, 3620, 300, 291, 393, 909, 12512, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 150, "seek": 64600, "start": 652.0, "end": 655.0, "text": " but you can't say, I want to remove this neighbor,", "tokens": [50664, 457, 291, 393, 380, 584, 11, 286, 528, 281, 4159, 341, 5987, 11, 50814], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 151, "seek": 64600, "start": 655.0, "end": 657.0, "text": " applied by this other configuration,", "tokens": [50814, 6456, 538, 341, 661, 11694, 11, 50914], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 152, "seek": 64600, "start": 657.0, "end": 661.0, "text": " because that would steal the work to other actors.", "tokens": [50914, 570, 300, 576, 11009, 264, 589, 281, 661, 10037, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 153, "seek": 64600, "start": 661.0, "end": 665.0, "text": " And a more permissive configuration can override a less permissive one,", "tokens": [51114, 400, 257, 544, 4784, 891, 488, 11694, 393, 42321, 257, 1570, 4784, 891, 488, 472, 11, 51314], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 154, "seek": 64600, "start": 665.0, "end": 668.0, "text": " meaning that if you have received none,", "tokens": [51314, 3620, 300, 498, 291, 362, 4613, 6022, 11, 51464], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 155, "seek": 64600, "start": 668.0, "end": 672.0, "text": " you can have received some, or a receivable will override the received some.", "tokens": [51464, 291, 393, 362, 4613, 512, 11, 420, 257, 2268, 34376, 486, 42321, 264, 4613, 512, 13, 51664], "temperature": 0.0, "avg_logprob": -0.12012872329125038, "compression_ratio": 1.9433962264150944, "no_speech_prob": 0.0018490776419639587}, {"id": 156, "seek": 67200, "start": 673.0, "end": 679.0, "text": " And this is how we can merge to different configurations.", "tokens": [50414, 400, 341, 307, 577, 321, 393, 22183, 281, 819, 31493, 13, 50714], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 157, "seek": 67200, "start": 679.0, "end": 683.0, "text": " We have one neighbor on one side, we have two neighbors on the other.", "tokens": [50714, 492, 362, 472, 5987, 322, 472, 1252, 11, 321, 362, 732, 12512, 322, 264, 661, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 158, "seek": 67200, "start": 683.0, "end": 686.0, "text": " These two configurations are compatible,", "tokens": [50914, 1981, 732, 31493, 366, 18218, 11, 51064], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 159, "seek": 67200, "start": 686.0, "end": 690.0, "text": " and then on one side we advertise only a set of prefixes,", "tokens": [51064, 293, 550, 322, 472, 1252, 321, 35379, 787, 257, 992, 295, 18417, 36005, 11, 51264], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 160, "seek": 67200, "start": 690.0, "end": 693.0, "text": " and on the other side we advertise all of them.", "tokens": [51264, 293, 322, 264, 661, 1252, 321, 35379, 439, 295, 552, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 161, "seek": 67200, "start": 693.0, "end": 698.0, "text": " And these are two compatible configurations that can be merged together.", "tokens": [51414, 400, 613, 366, 732, 18218, 31493, 300, 393, 312, 36427, 1214, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09392310324169341, "compression_ratio": 1.8655913978494623, "no_speech_prob": 0.0010971452575176954}, {"id": 162, "seek": 69800, "start": 699.0, "end": 703.0, "text": " Another thing is you apply all the configuration,", "tokens": [50414, 3996, 551, 307, 291, 3079, 439, 264, 11694, 11, 50614], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 163, "seek": 69800, "start": 703.0, "end": 706.0, "text": " and nothing is working. It happens a lot.", "tokens": [50614, 293, 1825, 307, 1364, 13, 467, 2314, 257, 688, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 164, "seek": 69800, "start": 706.0, "end": 709.0, "text": " We have validation webbooks,", "tokens": [50764, 492, 362, 24071, 3670, 15170, 11, 50914], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 165, "seek": 69800, "start": 709.0, "end": 713.0, "text": " but given that the configuration is composed by multiple configurations,", "tokens": [50914, 457, 2212, 300, 264, 11694, 307, 18204, 538, 3866, 31493, 11, 51114], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 166, "seek": 69800, "start": 713.0, "end": 717.0, "text": " we know how Kubernetes work, and some things might slip.", "tokens": [51114, 321, 458, 577, 23145, 589, 11, 293, 512, 721, 1062, 11140, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 167, "seek": 69800, "start": 717.0, "end": 720.0, "text": " So we are exposing the status.", "tokens": [51314, 407, 321, 366, 33178, 264, 6558, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 168, "seek": 69800, "start": 720.0, "end": 722.0, "text": " We have three fields.", "tokens": [51464, 492, 362, 1045, 7909, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 169, "seek": 69800, "start": 722.0, "end": 725.0, "text": " One is the last conversion result,", "tokens": [51564, 1485, 307, 264, 1036, 14298, 1874, 11, 51714], "temperature": 0.0, "avg_logprob": -0.15554856693043428, "compression_ratio": 1.6018957345971565, "no_speech_prob": 0.0014174269745126367}, {"id": 170, "seek": 72500, "start": 725.0, "end": 729.0, "text": " which means that if you have multiple incompatible configurations", "tokens": [50364, 597, 1355, 300, 498, 291, 362, 3866, 40393, 267, 964, 31493, 50564], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 171, "seek": 72500, "start": 729.0, "end": 733.0, "text": " that makes to the controller and the conversion will fail,", "tokens": [50564, 300, 1669, 281, 264, 10561, 293, 264, 14298, 486, 3061, 11, 50764], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 172, "seek": 72500, "start": 733.0, "end": 736.0, "text": " this is where you will see the error.", "tokens": [50764, 341, 307, 689, 291, 486, 536, 264, 6713, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 173, "seek": 72500, "start": 736.0, "end": 741.0, "text": " This is the status of FRR loading the generated configuration,", "tokens": [50914, 639, 307, 264, 6558, 295, 15288, 49, 15114, 264, 10833, 11694, 11, 51164], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 174, "seek": 72500, "start": 741.0, "end": 744.0, "text": " and this is the configuration running inside FRR.", "tokens": [51164, 293, 341, 307, 264, 11694, 2614, 1854, 15288, 49, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 175, "seek": 72500, "start": 744.0, "end": 750.0, "text": " So it's something that can be used to inspect the status of the thing.", "tokens": [51314, 407, 309, 311, 746, 300, 393, 312, 1143, 281, 15018, 264, 6558, 295, 264, 551, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 176, "seek": 72500, "start": 750.0, "end": 754.0, "text": " With Metal LB, again, now with this new implementation,", "tokens": [51614, 2022, 23488, 441, 33, 11, 797, 11, 586, 365, 341, 777, 11420, 11, 51814], "temperature": 0.0, "avg_logprob": -0.10792605730952048, "compression_ratio": 1.7179487179487178, "no_speech_prob": 0.0003451787924859673}, {"id": 177, "seek": 75400, "start": 754.0, "end": 757.0, "text": " we have the same Kubernetes API on one side.", "tokens": [50364, 321, 362, 264, 912, 23145, 9362, 322, 472, 1252, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09438117532169117, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0007812162511982024}, {"id": 178, "seek": 75400, "start": 757.0, "end": 760.0, "text": " Metal LB will generate an FRR configuration.", "tokens": [50514, 23488, 441, 33, 486, 8460, 364, 15288, 49, 11694, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09438117532169117, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0007812162511982024}, {"id": 179, "seek": 75400, "start": 760.0, "end": 765.0, "text": " It's going to be read by this new demo, which will talk to the router.", "tokens": [50664, 467, 311, 516, 281, 312, 1401, 538, 341, 777, 10723, 11, 597, 486, 751, 281, 264, 22492, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09438117532169117, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0007812162511982024}, {"id": 180, "seek": 75400, "start": 765.0, "end": 772.0, "text": " And this is how a Metal LB configuration gets translated into this new one.", "tokens": [50914, 400, 341, 307, 577, 257, 23488, 441, 33, 11694, 2170, 16805, 666, 341, 777, 472, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09438117532169117, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0007812162511982024}, {"id": 181, "seek": 75400, "start": 772.0, "end": 778.0, "text": " So we have the routers, we have the neighbors, and we have a selector.", "tokens": [51264, 407, 321, 362, 264, 4020, 433, 11, 321, 362, 264, 12512, 11, 293, 321, 362, 257, 23264, 1672, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09438117532169117, "compression_ratio": 1.5906735751295338, "no_speech_prob": 0.0007812162511982024}, {"id": 182, "seek": 77800, "start": 778.0, "end": 786.0, "text": " So each speaker will generate a configuration for the node where it's running on.", "tokens": [50364, 407, 1184, 8145, 486, 8460, 257, 11694, 337, 264, 9984, 689, 309, 311, 2614, 322, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 183, "seek": 77800, "start": 786.0, "end": 789.0, "text": " Yeah, this is what I just said.", "tokens": [50764, 865, 11, 341, 307, 437, 286, 445, 848, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 184, "seek": 77800, "start": 789.0, "end": 791.0, "text": " And this is when we add the service.", "tokens": [50914, 400, 341, 307, 562, 321, 909, 264, 2643, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 185, "seek": 77800, "start": 791.0, "end": 798.0, "text": " So we will start advertising those prefixes related to the load balancer service,", "tokens": [51014, 407, 321, 486, 722, 13097, 729, 18417, 36005, 4077, 281, 264, 3677, 3119, 28347, 2643, 11, 51364], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 186, "seek": 77800, "start": 798.0, "end": 801.0, "text": " and things eventually will work.", "tokens": [51364, 293, 721, 4728, 486, 589, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 187, "seek": 77800, "start": 801.0, "end": 805.0, "text": " And of course, this is something that can be expanded,", "tokens": [51514, 400, 295, 1164, 11, 341, 307, 746, 300, 393, 312, 14342, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12604301731760909, "compression_ratio": 1.5458937198067633, "no_speech_prob": 0.0037985234521329403}, {"id": 188, "seek": 80500, "start": 805.0, "end": 813.0, "text": " providing your own FRR configuration that gets merged to the one generated by Metal LB.", "tokens": [50364, 6530, 428, 1065, 15288, 49, 11694, 300, 2170, 36427, 281, 264, 472, 10833, 538, 23488, 441, 33, 13, 50764], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 189, "seek": 80500, "start": 813.0, "end": 817.0, "text": " I have a very quick demo.", "tokens": [50764, 286, 362, 257, 588, 1702, 10723, 13, 50964], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 190, "seek": 80500, "start": 817.0, "end": 821.0, "text": " It's my first time on a live demo, so fingers crossed.", "tokens": [50964, 467, 311, 452, 700, 565, 322, 257, 1621, 10723, 11, 370, 7350, 14622, 13, 51164], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 191, "seek": 80500, "start": 821.0, "end": 824.0, "text": " Very quickly, the demo environment is a kind cluster.", "tokens": [51164, 4372, 2661, 11, 264, 10723, 2823, 307, 257, 733, 13630, 13, 51314], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 192, "seek": 80500, "start": 824.0, "end": 826.0, "text": " We have the demo running on each node.", "tokens": [51314, 492, 362, 264, 10723, 2614, 322, 1184, 9984, 13, 51414], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 193, "seek": 80500, "start": 826.0, "end": 831.0, "text": " We have an external FRR container that represents more or less the external router.", "tokens": [51414, 492, 362, 364, 8320, 15288, 49, 10129, 300, 8855, 544, 420, 1570, 264, 8320, 22492, 13, 51664], "temperature": 0.0, "avg_logprob": -0.05524315994777036, "compression_ratio": 1.5753424657534247, "no_speech_prob": 0.006105986889451742}, {"id": 194, "seek": 83100, "start": 831.0, "end": 834.0, "text": " And now I'm going to...", "tokens": [50364, 400, 586, 286, 478, 516, 281, 485, 50514], "temperature": 0.0, "avg_logprob": -0.14543562276022776, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.003469349117949605}, {"id": 195, "seek": 83100, "start": 838.0, "end": 847.0, "text": " Okay, so here I have the kind cluster and a bunch of configuration.", "tokens": [50714, 1033, 11, 370, 510, 286, 362, 264, 733, 13630, 293, 257, 3840, 295, 11694, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14543562276022776, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.003469349117949605}, {"id": 196, "seek": 83100, "start": 847.0, "end": 851.0, "text": " We have here the external container.", "tokens": [51164, 492, 362, 510, 264, 8320, 10129, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14543562276022776, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.003469349117949605}, {"id": 197, "seek": 83100, "start": 851.0, "end": 856.0, "text": " It's paired, or it will want to pair with each of the cluster nodes.", "tokens": [51364, 467, 311, 25699, 11, 420, 309, 486, 528, 281, 6119, 365, 1184, 295, 264, 13630, 13891, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14543562276022776, "compression_ratio": 1.3680555555555556, "no_speech_prob": 0.003469349117949605}, {"id": 198, "seek": 85600, "start": 856.0, "end": 861.0, "text": " And also, it will try to advertise a couple of prefixes.", "tokens": [50364, 400, 611, 11, 309, 486, 853, 281, 35379, 257, 1916, 295, 18417, 36005, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 199, "seek": 85600, "start": 861.0, "end": 868.0, "text": " And I can go on the configuration side and look at this.", "tokens": [50614, 400, 286, 393, 352, 322, 264, 11694, 1252, 293, 574, 412, 341, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 200, "seek": 85600, "start": 868.0, "end": 871.0, "text": " This is what I just stated.", "tokens": [50964, 639, 307, 437, 286, 445, 11323, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 201, "seek": 85600, "start": 871.0, "end": 875.0, "text": " We want to advertise only one prefix.", "tokens": [51114, 492, 528, 281, 35379, 787, 472, 46969, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 202, "seek": 85600, "start": 875.0, "end": 878.0, "text": " I'm going to apply it.", "tokens": [51314, 286, 478, 516, 281, 3079, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 203, "seek": 85600, "start": 880.0, "end": 882.0, "text": " And hope.", "tokens": [51564, 400, 1454, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11771530738243689, "compression_ratio": 1.4133333333333333, "no_speech_prob": 0.004803189542144537}, {"id": 204, "seek": 88600, "start": 887.0, "end": 895.0, "text": " Okay, so the session is up with the whole three nodes.", "tokens": [50414, 1033, 11, 370, 264, 5481, 307, 493, 365, 264, 1379, 1045, 13891, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1803943912188212, "compression_ratio": 1.4206349206349207, "no_speech_prob": 0.0015283252578228712}, {"id": 205, "seek": 88600, "start": 895.0, "end": 904.0, "text": " And we have the single prefix advertised by the three nodes.", "tokens": [50814, 400, 321, 362, 264, 2167, 46969, 42310, 538, 264, 1045, 13891, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1803943912188212, "compression_ratio": 1.4206349206349207, "no_speech_prob": 0.0015283252578228712}, {"id": 206, "seek": 88600, "start": 904.0, "end": 914.0, "text": " And now I can look at this other one, which says advertise all.", "tokens": [51264, 400, 586, 286, 393, 574, 412, 341, 661, 472, 11, 597, 1619, 35379, 439, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1803943912188212, "compression_ratio": 1.4206349206349207, "no_speech_prob": 0.0015283252578228712}, {"id": 207, "seek": 91400, "start": 914.0, "end": 918.0, "text": " And I can apply it directly.", "tokens": [50364, 400, 286, 393, 3079, 309, 3838, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 208, "seek": 91400, "start": 918.0, "end": 924.0, "text": " And it's going to be merged, hopefully, to the other one.", "tokens": [50564, 400, 309, 311, 516, 281, 312, 36427, 11, 4696, 11, 281, 264, 661, 472, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 209, "seek": 91400, "start": 924.0, "end": 930.0, "text": " And then now we have two prefixes advertised.", "tokens": [50864, 400, 550, 586, 321, 362, 732, 18417, 36005, 42310, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 210, "seek": 91400, "start": 930.0, "end": 932.0, "text": " So it's working.", "tokens": [51164, 407, 309, 311, 1364, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 211, "seek": 91400, "start": 932.0, "end": 937.0, "text": " We have CI, so it shouldn't be a surprise.", "tokens": [51264, 492, 362, 37777, 11, 370, 309, 4659, 380, 312, 257, 6365, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 212, "seek": 91400, "start": 937.0, "end": 943.0, "text": " Now I can do something on the receiving side.", "tokens": [51514, 823, 286, 393, 360, 746, 322, 264, 10040, 1252, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09816104835934109, "compression_ratio": 1.391812865497076, "no_speech_prob": 0.003813904942944646}, {"id": 213, "seek": 94400, "start": 945.0, "end": 955.0, "text": " Here we want only one service out of the two that the external container is publishing.", "tokens": [50414, 1692, 321, 528, 787, 472, 2643, 484, 295, 264, 732, 300, 264, 8320, 10129, 307, 17832, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1212364775793893, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.0004022812645416707}, {"id": 214, "seek": 94400, "start": 955.0, "end": 959.0, "text": " And this is a session inside the node.", "tokens": [50914, 400, 341, 307, 257, 5481, 1854, 264, 9984, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1212364775793893, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.0004022812645416707}, {"id": 215, "seek": 94400, "start": 959.0, "end": 973.0, "text": " And eventually, yeah, here we have the last one is the route that is published by the external container.", "tokens": [51114, 400, 4728, 11, 1338, 11, 510, 321, 362, 264, 1036, 472, 307, 264, 7955, 300, 307, 6572, 538, 264, 8320, 10129, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1212364775793893, "compression_ratio": 1.6111111111111112, "no_speech_prob": 0.0004022812645416707}, {"id": 216, "seek": 97300, "start": 973.0, "end": 975.0, "text": " Yeah, what else can I show?", "tokens": [50364, 865, 11, 437, 1646, 393, 286, 855, 30, 50464], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 217, "seek": 97300, "start": 975.0, "end": 978.0, "text": " I have five minutes.", "tokens": [50464, 286, 362, 1732, 2077, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 218, "seek": 97300, "start": 978.0, "end": 980.0, "text": " Oh.", "tokens": [50614, 876, 13, 50714], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 219, "seek": 97300, "start": 985.0, "end": 991.0, "text": " I can do this.", "tokens": [50964, 286, 393, 360, 341, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 220, "seek": 97300, "start": 991.0, "end": 997.0, "text": " So this is a pod running into the node.", "tokens": [51264, 407, 341, 307, 257, 2497, 2614, 666, 264, 9984, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 221, "seek": 97300, "start": 997.0, "end": 1002.0, "text": " And if I try to ping it from outside, it's not going to work.", "tokens": [51564, 400, 498, 286, 853, 281, 26151, 309, 490, 2380, 11, 309, 311, 406, 516, 281, 589, 13, 51814], "temperature": 0.0, "avg_logprob": -0.14511419515140722, "compression_ratio": 1.3, "no_speech_prob": 0.0009307053405791521}, {"id": 222, "seek": 100200, "start": 1002.0, "end": 1021.0, "text": " For example, what I can do is try to put that prefix.", "tokens": [50364, 1171, 1365, 11, 437, 286, 393, 360, 307, 853, 281, 829, 300, 46969, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3017882056858229, "compression_ratio": 0.9565217391304348, "no_speech_prob": 0.01585400477051735}, {"id": 223, "seek": 100200, "start": 1025.0, "end": 1027.0, "text": " No pressure.", "tokens": [51514, 883, 3321, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3017882056858229, "compression_ratio": 0.9565217391304348, "no_speech_prob": 0.01585400477051735}, {"id": 224, "seek": 102700, "start": 1028.0, "end": 1033.0, "text": " And it pings.", "tokens": [50414, 400, 309, 280, 1109, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 225, "seek": 102700, "start": 1033.0, "end": 1037.0, "text": " So again, another nice example.", "tokens": [50664, 407, 797, 11, 1071, 1481, 1365, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 226, "seek": 102700, "start": 1037.0, "end": 1040.0, "text": " Thank you.", "tokens": [50864, 1044, 291, 13, 51014], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 227, "seek": 102700, "start": 1040.0, "end": 1042.0, "text": " Okay.", "tokens": [51014, 1033, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 228, "seek": 102700, "start": 1042.0, "end": 1051.0, "text": " So I also have other examples, but I think I stressed my luck already enough.", "tokens": [51114, 407, 286, 611, 362, 661, 5110, 11, 457, 286, 519, 286, 14471, 452, 3668, 1217, 1547, 13, 51564], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 229, "seek": 102700, "start": 1051.0, "end": 1055.0, "text": " And we have still five minutes.", "tokens": [51564, 400, 321, 362, 920, 1732, 2077, 13, 51764], "temperature": 0.0, "avg_logprob": -0.17350847070867365, "compression_ratio": 1.2835820895522387, "no_speech_prob": 0.005546586588025093}, {"id": 230, "seek": 105500, "start": 1055.0, "end": 1057.0, "text": " Okay.", "tokens": [50364, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.17986786365509033, "compression_ratio": 1.392156862745098, "no_speech_prob": 0.004774869419634342}, {"id": 231, "seek": 105500, "start": 1057.0, "end": 1059.0, "text": " So what's next?", "tokens": [50464, 407, 437, 311, 958, 30, 50564], "temperature": 0.0, "avg_logprob": -0.17986786365509033, "compression_ratio": 1.392156862745098, "no_speech_prob": 0.004774869419634342}, {"id": 232, "seek": 105500, "start": 1059.0, "end": 1062.0, "text": " There are these, I don't know what's next.", "tokens": [50564, 821, 366, 613, 11, 286, 500, 380, 458, 437, 311, 958, 13, 50714], "temperature": 0.0, "avg_logprob": -0.17986786365509033, "compression_ratio": 1.392156862745098, "no_speech_prob": 0.004774869419634342}, {"id": 233, "seek": 105500, "start": 1062.0, "end": 1068.0, "text": " FRR provides a lot of opportunities.", "tokens": [50714, 15288, 49, 6417, 257, 688, 295, 4786, 13, 51014], "temperature": 0.0, "avg_logprob": -0.17986786365509033, "compression_ratio": 1.392156862745098, "no_speech_prob": 0.004774869419634342}, {"id": 234, "seek": 105500, "start": 1068.0, "end": 1077.0, "text": " This is more or less a subset of what Metalaby offers plus something that was asked by a lot of Metalaby users.", "tokens": [51014, 639, 307, 544, 420, 1570, 257, 25993, 295, 437, 23488, 2509, 7736, 1804, 746, 300, 390, 2351, 538, 257, 688, 295, 23488, 2509, 5022, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17986786365509033, "compression_ratio": 1.392156862745098, "no_speech_prob": 0.004774869419634342}, {"id": 235, "seek": 107700, "start": 1077.0, "end": 1088.0, "text": " But of course, you can come and provide feedback, suggest the new features, open issues, or even contribute to the project, hopefully.", "tokens": [50364, 583, 295, 1164, 11, 291, 393, 808, 293, 2893, 5824, 11, 3402, 264, 777, 4122, 11, 1269, 2663, 11, 420, 754, 10586, 281, 264, 1716, 11, 4696, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12281854653064116, "compression_ratio": 1.5023255813953489, "no_speech_prob": 0.02193417213857174}, {"id": 236, "seek": 107700, "start": 1088.0, "end": 1098.0, "text": " The good thing is we have a framework that we can expand and grow on implementing new FRR features.", "tokens": [50914, 440, 665, 551, 307, 321, 362, 257, 8388, 300, 321, 393, 5268, 293, 1852, 322, 18114, 777, 15288, 49, 4122, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12281854653064116, "compression_ratio": 1.5023255813953489, "no_speech_prob": 0.02193417213857174}, {"id": 237, "seek": 107700, "start": 1098.0, "end": 1100.0, "text": " A few resources.", "tokens": [51414, 316, 1326, 3593, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12281854653064116, "compression_ratio": 1.5023255813953489, "no_speech_prob": 0.02193417213857174}, {"id": 238, "seek": 107700, "start": 1100.0, "end": 1103.0, "text": " We try to keep the documentation aligned.", "tokens": [51514, 492, 853, 281, 1066, 264, 14333, 17962, 13, 51664], "temperature": 0.0, "avg_logprob": -0.12281854653064116, "compression_ratio": 1.5023255813953489, "no_speech_prob": 0.02193417213857174}, {"id": 239, "seek": 107700, "start": 1103.0, "end": 1106.0, "text": " So we have an upstream Redmi.", "tokens": [51664, 407, 321, 362, 364, 33915, 4477, 3057, 13, 51814], "temperature": 0.0, "avg_logprob": -0.12281854653064116, "compression_ratio": 1.5023255813953489, "no_speech_prob": 0.02193417213857174}, {"id": 240, "seek": 110600, "start": 1106.0, "end": 1108.0, "text": " We have the Metalaby documentation.", "tokens": [50364, 492, 362, 264, 23488, 2509, 14333, 13, 50464], "temperature": 0.0, "avg_logprob": -0.11784631778032352, "compression_ratio": 1.4784688995215312, "no_speech_prob": 0.010479159653186798}, {"id": 241, "seek": 110600, "start": 1108.0, "end": 1114.0, "text": " There is the Metalaby channel on the Kubernetes Slack, which is where I live daily.", "tokens": [50464, 821, 307, 264, 23488, 2509, 2269, 322, 264, 23145, 37211, 11, 597, 307, 689, 286, 1621, 5212, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11784631778032352, "compression_ratio": 1.4784688995215312, "no_speech_prob": 0.010479159653186798}, {"id": 242, "seek": 110600, "start": 1114.0, "end": 1125.0, "text": " And of course, the FRR community is super vibrant, super helpful, and always open to provide feedback and give help to us.", "tokens": [50764, 400, 295, 1164, 11, 264, 15288, 49, 1768, 307, 1687, 21571, 11, 1687, 4961, 11, 293, 1009, 1269, 281, 2893, 5824, 293, 976, 854, 281, 505, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11784631778032352, "compression_ratio": 1.4784688995215312, "no_speech_prob": 0.010479159653186798}, {"id": 243, "seek": 110600, "start": 1125.0, "end": 1131.0, "text": " And with that, if you have any questions, I'll be happy to answer.", "tokens": [51314, 400, 365, 300, 11, 498, 291, 362, 604, 1651, 11, 286, 603, 312, 2055, 281, 1867, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11784631778032352, "compression_ratio": 1.4784688995215312, "no_speech_prob": 0.010479159653186798}, {"id": 244, "seek": 113600, "start": 1136.0, "end": 1141.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50614], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 245, "seek": 113600, "start": 1141.0, "end": 1147.0, "text": " Why did you keep using the FRR configuration files, which are quite painful to merge, as you said, instead of using the North One APIs?", "tokens": [50614, 1545, 630, 291, 1066, 1228, 264, 15288, 49, 11694, 7098, 11, 597, 366, 1596, 11697, 281, 22183, 11, 382, 291, 848, 11, 2602, 295, 1228, 264, 4067, 1485, 21445, 30, 50914], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 246, "seek": 113600, "start": 1147.0, "end": 1149.0, "text": " Can you raise your voice a bit?", "tokens": [50914, 1664, 291, 5300, 428, 3177, 257, 857, 30, 51014], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 247, "seek": 113600, "start": 1149.0, "end": 1151.0, "text": " Why? Is it better?", "tokens": [51014, 1545, 30, 1119, 309, 1101, 30, 51114], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 248, "seek": 113600, "start": 1151.0, "end": 1152.0, "text": " Yeah.", "tokens": [51114, 865, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 249, "seek": 113600, "start": 1152.0, "end": 1161.0, "text": " Why do you use FRR configuration files, which are, as you said, quite easy to merge, instead of using the North One APIs, which have a NetCon thing?", "tokens": [51164, 1545, 360, 291, 764, 15288, 49, 11694, 7098, 11, 597, 366, 11, 382, 291, 848, 11, 1596, 1858, 281, 22183, 11, 2602, 295, 1228, 264, 4067, 1485, 21445, 11, 597, 362, 257, 6188, 9838, 551, 30, 51614], "temperature": 0.0, "avg_logprob": -0.21033285121725062, "compression_ratio": 1.8238341968911918, "no_speech_prob": 0.15365070104599}, {"id": 250, "seek": 116100, "start": 1161.0, "end": 1166.0, "text": " Because at the time, that was declared as experimental.", "tokens": [50364, 1436, 412, 264, 565, 11, 300, 390, 15489, 382, 17069, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 251, "seek": 116100, "start": 1166.0, "end": 1171.0, "text": " I don't know if things changed in the meantime, but like, okay.", "tokens": [50614, 286, 500, 380, 458, 498, 721, 3105, 294, 264, 14991, 11, 457, 411, 11, 1392, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 252, "seek": 116100, "start": 1171.0, "end": 1173.0, "text": " So then we can...", "tokens": [50864, 407, 550, 321, 393, 485, 50964], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 253, "seek": 116100, "start": 1173.0, "end": 1174.0, "text": " You should.", "tokens": [50964, 509, 820, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 254, "seek": 116100, "start": 1174.0, "end": 1175.0, "text": " Okay.", "tokens": [51014, 1033, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 255, "seek": 116100, "start": 1175.0, "end": 1176.0, "text": " Yeah.", "tokens": [51064, 865, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 256, "seek": 116100, "start": 1176.0, "end": 1180.0, "text": " But like, we had all this mess already in place, so it was easy at the time to recycle it.", "tokens": [51114, 583, 411, 11, 321, 632, 439, 341, 2082, 1217, 294, 1081, 11, 370, 309, 390, 1858, 412, 264, 565, 281, 32162, 309, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 257, "seek": 116100, "start": 1180.0, "end": 1186.0, "text": " But yeah, if there is a proper API, I'd be happy to start moving to that.", "tokens": [51314, 583, 1338, 11, 498, 456, 307, 257, 2296, 9362, 11, 286, 1116, 312, 2055, 281, 722, 2684, 281, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 258, "seek": 116100, "start": 1186.0, "end": 1188.0, "text": " Thank you.", "tokens": [51614, 1044, 291, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 259, "seek": 116100, "start": 1188.0, "end": 1190.0, "text": " Any other questions?", "tokens": [51714, 2639, 661, 1651, 30, 51814], "temperature": 0.0, "avg_logprob": -0.13477559991785, "compression_ratio": 1.543103448275862, "no_speech_prob": 0.004524162970483303}, {"id": 260, "seek": 119000, "start": 1190.0, "end": 1191.0, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.0, "avg_logprob": -0.18219249248504638, "compression_ratio": 0.6666666666666666, "no_speech_prob": 0.1818813979625702}, {"id": 261, "seek": 119000, "start": 1191.0, "end": 1192.0, "text": " Thank you.", "tokens": [50414, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.18219249248504638, "compression_ratio": 0.6666666666666666, "no_speech_prob": 0.1818813979625702}], "language": "en"}