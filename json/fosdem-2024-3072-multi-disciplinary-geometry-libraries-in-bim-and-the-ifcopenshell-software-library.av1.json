{"text": " All right. Thanks so much for being here and thanks so much for having me. So this is not really a hardware topic per se yet, unless buildings qualify as hardware too. But let's talk a bit about them. So we have exchanged buildings for a long time. So these are just like sets of line drawings without really computer readable semantics associated to them. I don't know, maybe there's a parallel to how the PCB community exchange models. But I don't know, I would say for the last 10 years or so, we're more and more exchanging buildings as rich, semantic data models, where the models we exchange have also a meaning that computers can relate to. And so in 2011 I started IFC OpenShell, which is a software library for dealing with these kind of models. IFC is the open standard. It's called the industry foundation classes, which is kind of a meaningless name. But that's where the name comes from. IFC OpenShell is one of the geometrical forms you can use to exchange representations of your building elements. IFC is also very much inspired by STEP, which is probably a standard familiar to most of you. So if you're familiar with STEP, you know, OpenShell. And in IFC we just prefixed everything with IFC. And then right there is some point, you see that there is, well, I wouldn't call it a spike. It's really like, I don't know, a mountain ridge of new contributors that came on board and that's with the Blender Boom add-on. So in my work I'm mostly focused on analysis of these kind of models. And then, yeah, Dion Mold came on board and he started actually writing an authoring tool on top of IFC OpenShell that allowed people to really graphically create models. And, well, you can see the effect of that in terms of contributors. So we have quite a bit of modules, but in essence we have a parsing library, geometry, geometry interpretation, so that we use predominantly open cascade, hopefully familiar to some of the people in the room, to read these kind of geometry definitions and translate them to BRAPs and then interact with them in a bunch of ways, convert them to desolated formats or, yeah, some other things. So I started my module mostly in C++. The Python has been hovering around zero for quite some years. And it basically had to do with the ecosystem, so open cascade is C++. Because, yeah, it doesn't leave you much of a choice. But quite soon on we realized that if you really want a wider movement, a richer ecosystem connecting different modules, but also the BIM world is rather academic, so we have quite a bit of students, or software developers doing rapid prototyping. So it really made a lot of sense to have an interpreted language with a more accessible syntax. Yeah, so also quite early on we started having Python bindings. And then, yeah, you see the same spike here basically in terms of contributors. That Blender BIM add-on is built on top of Blender, you might have guessed. And Blender is also obviously a wonderful piece of software, very extensible. And also, yeah, the client-side code is mostly in Python. But it's not only that, it's also really a higher-level API that was being built on top of a low-level, let's say instance manipulation we had. So, yeah, I see it's really an extensive schema. It's roughly a thousand to a two thousand classes or data types. And if you really want to interact with that in a meaningful way, you need to operate on a bit of a higher level. And that's also where the steep increase in Python code is coming from. But what my topic for today is really the geometrical challenges that I encounter. Because our industry is really multidisciplinary. So, for example, what we exchange as building models are really detailed decompositions of the building into very specific elements. So, one wall, one ceiling plate, and all the kind of supporting structure. But if you look at the building code people, this is from the city of New York, for example, they want to ask questions on much higher abstract levels such as the facade. So, this is, well, it's New York. So, they envision there is something like a base on top of which a tower is built. And there are requirements about the proportion regarding base and tower. But none of these things exist in bin models. We don't even have a facade, we just have this bag of elements. But we have other, let's say, different perspectives on geometry. If you want to do thermal simulation. If we are here in this room generating a lot of heat and that heat dissipates to neighboring spaces. And then you're also not really interested in all the detailed elements that make up your building. You just want to have basically a graph of spaces and thermal interfaces between them. And there are ways to exchange this information as part of IFC building models. But the generation of them is still rather buggy. And that's also the challenge, of course. Does every authoring tool need to implement this kind of generation of data? Or are we going to opt for a more collaborative ecosystem of tools? Where you just generate a building model and there is other tools to enrich those models. And that is what I'm really hoping for, but it's not what we're currently seeing in the industry yet. Geospatial people, they really want to focus on the things you can see. They come from GIS, so they can only observe what is actually visible to them. So they don't really want to deal with this kind of invisible surfaces. They just want to have manifold representations of interior or exterior shells. But so this is what we have as a building model. And as a summary, what we want to generate, for example, is this representation of just a facade that joins across these walls. And it could be thousands of wall elements. The further you are in your development process of the building, the more you're going to decompose these things into the actual physical things that are going to exist in reality. But yeah, the data comes from heterogeneous sources. I really want to advocate for an ecosystem because we already have an open standard. Yeah, let's have a more collaborative ecosystem where we can augment this data. Here, the interior, where you really want to know, for example, will I bump my head here? But in normal models, these kind of representations don't exist. You don't have this higher level representation of the interior. You might have a description of the space, but it wouldn't be enriched with all the geometries that further eat out of that volume. And of course, none of this is ultimately very precise. So there is gaps either accumulated due to floating point rounding errors or manual sloppiness or also on purpose. If you're building a building, you have to accommodate for the fact that the walls, especially this metal, they are expanding and contracting depending on the temperature. So there are also actual gaps between these elements in reality in more detailed models. So maybe that representation that I just showed of the facade doesn't in reality really exist as a volume. And then, so how to solve that? Naively, you would maybe think, yeah, let's just Boolean union these things together and call it a day. But yeah, that's quite a challenge in terms of performance. But you also have to make a choice there. Are you going to rely on these kind of fuzzy Boolean operations that allow for a certain imprecision or still join these disjoint volumes, even if there is a nanometer or millimeter gap between them? Or that's the open cascade paradigm, for example. Or are you going to rely on these kind of exact Boolean operations that, for example, CGAL offers? CGAL has a very interesting number type, I think, where a number is just not just a number. It's basically a binary tree of all the operations that were used to construct a number. And as such, it is really arbitrarily precise. There is never any rounding occurring. But it obviously has a monumental performance impact. And it's also not maybe necessarily what you want, because you want to join across these kind of imprecision issues. So earlier attempts, yeah, they made the performance problem even more extreme by using a Minkowski sum. So you have kind of a padding volume that you apply to every element and enlarge it slightly, and then union them together and then shrink. But this is not really feasible on detailed models. So what I try to do for this particular problem, and I hope this is going to end up in... Yeah, I'm showing mostly experiments, but I hope that this will really at some point also be part of, let's say, the core parts of my software library. But what I'm doing here, for example, is decomposing these solid volumes into trees of half-spaces. And then the neighboring half-spaces average these out. So the two faces here, here and here, of these two disjoint walls, yeah, they are merged or aligned. And the same here and the same here. So this really allows for some sort of local adjustment, so that you're really sure that things snap into place. And also, it really causes very neat models because there is almost no intermediate vertices because all the nearly coplanar surfaces were exactly aligned. But this is still a challenge to make this work on the really detailed models. Another example where I used half-spaces is if, yeah, for example, the facility management people, they also operate on a much higher level. They don't care about every rentable unit. They want to have aggregates of those. How many square meters of rentable space do I have across these models? And these interior partitions, you don't really care about them because tenants can remove them anyway. So you include them in your square meter counts, which means that you basically need to take this volume and extend it to this volume for them to touch and then union these together. So for that, I used Sparkle, RDF Lib in Python. I built, this is what you see here, is a graph of spaces, the half-spaces bounding the spaces. These are touching the faces of the wall. And in the wall, you have an opposite. And so we really form a graph. And then I query that graph based also on sabantics. And of course, only the non-load-bearing walls that I can aggregate over. And, yeah, as such, this is this kind of patchwork blanket, is all the individual spaces that are in a model like this. And then what the facility management people want to know is this. So this is all inhabitable spaces, I think. So without utilities are these kind of things. But, yeah, there are large performance problems still with these kind of approaches. These arbitrarily precise operations in Seagull, it's really immensely robust. The first I really come from, let's say, I've 10 years of working experience with Obakas Cade. So you come to lower your expectations a bit in terms of what works, how many crashes did you encounter when you load complex models. And then in Seagull, everything just works. It's not always what you want, but that is then your own fault, typically. But, yeah, still really computationally intensive. So as a side project, I've also written my own foxalization library. Because, yeah, especially these kind of challenges, superimposing a lot of elements into the same domain, closing certain minimal gaps, yeah, that's really what foxalization is perfect for. And, yeah, this, so maybe if you would want to union all these kind of building elements in, yeah, in Obakas Cade, it just wouldn't work. It's not robust enough in Seagull. It will take a considerable amount of time. And in foxalization, it's really just, yeah, I wouldn't call it instant. You have to deal with a different set of challenges. Suddenly, the complexity is no longer based on, let's say, vertex and face counts, but it's really based on, yeah, actual, the physical dimensions of your building. So if you're building a larger building, your computation takes longer. But it's still, yeah, it does perform better than Seagull, I would say. Yeah, and then you can do topological queries on those again. So, yeah, this is a very famous testing model that we use in our industry, but I expect it's a little bit cryptic for you to read. But let's say this is exterior space, and here is a door, here is a door, here is a door, here is a door. Here you see a little bit of a stairway. So it's really three-dimensional, but I've kind of folded every 3D volume. I flatten it over the Z-axis to kind of get a 3D volumetric, a foxal grid of just, yeah, let's say, the mast that we can walk on. Yeah, and then you can just do topological queries again on those to see how long is the evacuation distance from a particular point in time. And I'm not saying it's not possible on, let's say, regular polyhedra or B-Rab's, people have been doing that. Yeah, but I came to really appreciate how trivial those kind of operations are on foxal grids. Same for the headroom, basically. It's the same kind of idea where I start from the 3D volumetric space interior that we can breathe in. I flatten that over the Z-axis to just the little surface where we can stand on. But I remember how many foxals I flattened downwards, and based on some sort of color coding or threshold, that's either sufficient or not. So, yeah, you can see here under the stair that there is obviously a little bit less space to stand. So for this, these kind of, yeah, when we started this project, we envisioned that end users would be writing their own kind of analysis scripts. So here you see visually all the operations that were involved in one of these, in one of these, I don't remember which one, but one of these computation graphs to union those foxals, subtract a bunch of things through these traversals, to really figure out the space where we can stand. We also do some sort of padding so that we don't start walking in like two centimeter areas. We kind of assume that we have a little bit of a body, so all the obstacles are dilated a bit. Some of these things are also element-specific, so we do specific things with the railings. I don't remember the details, but we really created our own little scripting library for these kind of things. I don't remember why we just didn't create Python bindings. That seems like it's easier than really creating your own language with your own interpreter, but at that time that's what I did for some reason. Obviously nobody has ever tried to create their own little analysis script to do these kind of things, but as you can imagine it also requires some documentation and stuff that we also didn't provide, but it was really fun to work on. What I see as the advantages of this kind of foxalization, you can also associate numbers to yourselves. What you see in the headroom analysis where you can stand and the evacuation analysis, you can really associate a number with every cell. It's also in a uniform way across every dimension. That's also a bit harder on poly-heat writing. Bullying operations are really just that, bullying operations. If you superimpose two cells, a one and a one becomes a one, a one and a zero becomes a one. That was really, if I can implement bullying operations, then it's trivial. It's efficient to calculate distances also, and we close these gaps. I think for our built environment sector it's really quite a good match for some analysis. I've seen OpenShell going back to where it all started for me. It's quite an extensive software library. It has all the different revisions of the IFC schema. It has these geometry mapping functions. There's about, let's say, 200 classes in IFC that somehow affect geometry or representation. They have an implication on our B-Wrap conversion to OpenFascade. They have these conversion functions. Then we rely on OpenFascade. It's gotten quite a large code base. In the new version, I have been playing, well, if it's been happening for various years now, so I shouldn't call it playing anymore, but let's say working on the idea to support multiple geometry libraries. The robustness of OpenFascade has really improved dramatically over the past 12 years. It's really a usable, very powerful software library now. But there are still cases, if there are issues being reported on my get up, where I have to say, yeah, this takes me two months of investigation. I'm sorry, I just cannot help you with this. In that sense, I have some hope. If I have a secondary geometry implementation in Seagal, that I can really provide the best of both worlds, also to people that want to do these kind of analysis that I just showed earlier, like aligning these half spaces. They have a better starting point with Seagal. But for that, I created my own taxonomy in the middle of geometrical concepts, so that this kind of implementation here is a little bit easier. Yeah, so what I've learned in all of this, so Seagal is predominantly only polyhedra. They have some sort of curved things in some packages hidden somewhere, mostly polyhedra. The exact rational number type I've talked about, they have an interval that wraps them for performance. They have good documentation, but I find their set of packages somewhat incoherent and chaotic. You don't always know where you need to look, and it's not always easy to go from one package to the other. And I think the focus is rather academic. A lot of the CAD concepts that maybe we rely on, they don't necessarily offer out of the box. And maybe you can read for yourself what I think about OpenCascade. And that's it for me today. Thank you so much. Thank you. Okay, do we have any questions? Yes. Do you see any use for the Seagal library to help with the OpenCascade geometry? Yeah, great question. So the question is, to what extent can maybe these libraries also help each other, enrich each other, and not only exist as two choices at runtime, but also how do we make sure that the library is not only available and not only exists as two choices at runtime. I haven't really explored that yet. So far I'm only at the point of, yeah, you can try one, if it fails, try the other. I think what I would at least want to do is kind of automate that process. So that the software tries the first one, and if they're precious or produce bad results, automatically try the second one. As a next step, I would envision that I'm able to rewrite the results from one library to the other. And yeah, by that time, you would maybe use, indeed, a more intelligent combination of the two. Like this Minkowski sum that I showed make an element a little bit larger and also relies on convex decomposition that you decompose your element into convex parts. Yeah, that is really quite powerful and something that I think only Seagal offers. If you can bring that maybe to OpenCascade for some reason, that's a very good use case in mind. I think that would be quite powerful. But so far no plans. It's quite slow process. Thanks for the question. Yeah, please. I had a question regarding the open spaces that you have between walls for dilutation. Exists there a class for defining the dilutation? Because then the next thing would be that you interpret it in a different way. Does it all put a flexible material in it for strength calculations? Interesting question. So the question is, I mentioned earlier that walls are not always connected to account for, yeah, dilutation that elements can grow and shrink a bit. And is there a specific class to encode that information in the models so that that can also be handled? I would say yes and no. If you would want to, I would say the standard is flexible enough to encode that information. The standard is also very asparic. There's a geometry description. There is a taxonomy of types of elements. And you can also refer to other classifications. So if you want, you can encode that information. And the problem with that is also that I've seen is used to exchange information from one person to the other. And there's a lot of inherent knowledge that we all rely on. So, yeah, if two walls don't exactly match, there is probably some textual description there that still says, well, this needs to be sealed with that and that. And that's obviously also much more efficient. It's difficult to interpret for a computer. Yeah, but people in our industry, I have to admit, don't really care about that. I mean, it is a machine interpretable standard, but people still use it predominantly only for communication and coordination. So you can, let's say, superimpose the geometries. If there is a beam going through a wall where there is no hole, yeah, you have to call each other and solve that. But actual computational analysis on these models is rather rare. Thank you. Thanks. Yeah? Two. There is a microphone on this way. Hello. When we say about IFC, we should remember about the versions of IFC. What is about the versioning with your libraries and all this stuff and how you are related to all these things? I mean, the versions of the standard because it's also going on. Yeah, and it's actually also one of the reasons why I had to create this mapping layer, because I didn't discuss it, but we indeed, for example, here, IFC 2, X3, IFC 4, we have more or less the same concepts. There are minor differences. But I haven't really found a way, for example, to account for the fact that these two classes, the polyline and 2, X3 and the polyline and IFC 4, that they are, let's say, 99% compatible. So it also really dramatically increases the compiled size of my platform, because everything is compiled multiple times with slight variations to account for the same, for the different schema versions. And yeah, there are other software libraries that maybe more start from above, have a unified schema and then allow to serialize that as version 2, X3 or version 4. But I have the more side-by-side as really computer-generated code from the schema. So yeah, we have migration scripts to go from the one to the other, but they are written by hand and probably not complete. Okay, one last question and then we're going to change over. Let's change over. Yeah, look at the render on what. So your voxelization code, how did you set the voxel size? Because I assume if you set them too small, you don't find the holes in the wall, and if you set them too big, you close up corridors. So do you have to do an optimization for the size of the voxel? And what sort of size are we talking about for a building? Yeah, great question. And the main consideration was actually performance and also memory usage, because yeah, it's really a cubic relationship. If you have the size of your voxels, your memory usage increases eightfold. So, but the good thing about the construction sector, as opposed to let's say general purpose CAD, is well, it all relates to us human bodies. So we're pretty sure about, let's say, the size of the geometries we're going to expect. And yeah, for that kind of reason, I also didn't create an optimization step to find the optimal voxel size, mostly just five centimeters. Okay, so thank you very much. We're going and that was excellent. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.0, "text": " All right. Thanks so much for being here and thanks so much for having me.", "tokens": [50364, 1057, 558, 13, 2561, 370, 709, 337, 885, 510, 293, 3231, 370, 709, 337, 1419, 385, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2667159180142986, "compression_ratio": 1.5308641975308641, "no_speech_prob": 0.21328403055667877}, {"id": 1, "seek": 0, "start": 12.0, "end": 15.5, "text": " So this is not really a hardware topic per se yet,", "tokens": [50964, 407, 341, 307, 406, 534, 257, 8837, 4829, 680, 369, 1939, 11, 51139], "temperature": 0.0, "avg_logprob": -0.2667159180142986, "compression_ratio": 1.5308641975308641, "no_speech_prob": 0.21328403055667877}, {"id": 2, "seek": 0, "start": 15.5, "end": 20.0, "text": " unless buildings qualify as hardware too.", "tokens": [51139, 5969, 7446, 20276, 382, 8837, 886, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2667159180142986, "compression_ratio": 1.5308641975308641, "no_speech_prob": 0.21328403055667877}, {"id": 3, "seek": 0, "start": 20.0, "end": 23.0, "text": " But let's talk a bit about them.", "tokens": [51364, 583, 718, 311, 751, 257, 857, 466, 552, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2667159180142986, "compression_ratio": 1.5308641975308641, "no_speech_prob": 0.21328403055667877}, {"id": 4, "seek": 0, "start": 23.0, "end": 26.0, "text": " So we have exchanged buildings for a long time.", "tokens": [51514, 407, 321, 362, 38378, 7446, 337, 257, 938, 565, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2667159180142986, "compression_ratio": 1.5308641975308641, "no_speech_prob": 0.21328403055667877}, {"id": 5, "seek": 2600, "start": 26.0, "end": 36.0, "text": " So these are just like sets of line drawings without really computer readable semantics associated to them.", "tokens": [50364, 407, 613, 366, 445, 411, 6352, 295, 1622, 18618, 1553, 534, 3820, 49857, 4361, 45298, 6615, 281, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24824055538901799, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.10238151252269745}, {"id": 6, "seek": 2600, "start": 36.0, "end": 43.0, "text": " I don't know, maybe there's a parallel to how the PCB community exchange models.", "tokens": [50864, 286, 500, 380, 458, 11, 1310, 456, 311, 257, 8952, 281, 577, 264, 42065, 1768, 7742, 5245, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24824055538901799, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.10238151252269745}, {"id": 7, "seek": 2600, "start": 43.0, "end": 47.0, "text": " But I don't know, I would say for the last 10 years or so,", "tokens": [51214, 583, 286, 500, 380, 458, 11, 286, 576, 584, 337, 264, 1036, 1266, 924, 420, 370, 11, 51414], "temperature": 0.0, "avg_logprob": -0.24824055538901799, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.10238151252269745}, {"id": 8, "seek": 2600, "start": 47.0, "end": 53.0, "text": " we're more and more exchanging buildings as rich, semantic data models,", "tokens": [51414, 321, 434, 544, 293, 544, 6210, 9741, 7446, 382, 4593, 11, 47982, 1412, 5245, 11, 51714], "temperature": 0.0, "avg_logprob": -0.24824055538901799, "compression_ratio": 1.5263157894736843, "no_speech_prob": 0.10238151252269745}, {"id": 9, "seek": 5300, "start": 53.0, "end": 61.0, "text": " where the models we exchange have also a meaning that computers can relate to.", "tokens": [50364, 689, 264, 5245, 321, 7742, 362, 611, 257, 3620, 300, 10807, 393, 10961, 281, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15758061082395788, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.01551436074078083}, {"id": 10, "seek": 5300, "start": 61.0, "end": 70.0, "text": " And so in 2011 I started IFC OpenShell, which is a software library for dealing with these kind of models.", "tokens": [50764, 400, 370, 294, 10154, 286, 1409, 286, 18671, 7238, 9526, 285, 11, 597, 307, 257, 4722, 6405, 337, 6260, 365, 613, 733, 295, 5245, 13, 51214], "temperature": 0.0, "avg_logprob": -0.15758061082395788, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.01551436074078083}, {"id": 11, "seek": 5300, "start": 70.0, "end": 72.0, "text": " IFC is the open standard.", "tokens": [51214, 286, 18671, 307, 264, 1269, 3832, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15758061082395788, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.01551436074078083}, {"id": 12, "seek": 5300, "start": 72.0, "end": 80.0, "text": " It's called the industry foundation classes, which is kind of a meaningless name.", "tokens": [51314, 467, 311, 1219, 264, 3518, 7030, 5359, 11, 597, 307, 733, 295, 257, 33232, 1315, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15758061082395788, "compression_ratio": 1.4873096446700507, "no_speech_prob": 0.01551436074078083}, {"id": 13, "seek": 8000, "start": 80.0, "end": 95.0, "text": " But that's where the name comes from. IFC OpenShell is one of the geometrical forms you can use to exchange representations of your building elements.", "tokens": [50364, 583, 300, 311, 689, 264, 1315, 1487, 490, 13, 286, 18671, 7238, 9526, 285, 307, 472, 295, 264, 12956, 15888, 6422, 291, 393, 764, 281, 7742, 33358, 295, 428, 2390, 4959, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07983151128736593, "compression_ratio": 1.3631284916201116, "no_speech_prob": 0.0074074179865419865}, {"id": 14, "seek": 8000, "start": 95.0, "end": 103.0, "text": " IFC is also very much inspired by STEP, which is probably a standard familiar to most of you.", "tokens": [51114, 286, 18671, 307, 611, 588, 709, 7547, 538, 28143, 11, 597, 307, 1391, 257, 3832, 4963, 281, 881, 295, 291, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07983151128736593, "compression_ratio": 1.3631284916201116, "no_speech_prob": 0.0074074179865419865}, {"id": 15, "seek": 10300, "start": 103.0, "end": 106.0, "text": " So if you're familiar with STEP, you know, OpenShell.", "tokens": [50364, 407, 498, 291, 434, 4963, 365, 28143, 11, 291, 458, 11, 7238, 9526, 285, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1440882074072006, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.2109466940164566}, {"id": 16, "seek": 10300, "start": 106.0, "end": 111.0, "text": " And in IFC we just prefixed everything with IFC.", "tokens": [50514, 400, 294, 286, 18671, 321, 445, 18417, 40303, 1203, 365, 286, 18671, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1440882074072006, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.2109466940164566}, {"id": 17, "seek": 10300, "start": 111.0, "end": 120.0, "text": " And then right there is some point, you see that there is, well, I wouldn't call it a spike.", "tokens": [50764, 400, 550, 558, 456, 307, 512, 935, 11, 291, 536, 300, 456, 307, 11, 731, 11, 286, 2759, 380, 818, 309, 257, 21053, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1440882074072006, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.2109466940164566}, {"id": 18, "seek": 10300, "start": 120.0, "end": 129.0, "text": " It's really like, I don't know, a mountain ridge of new contributors that came on board and that's with the Blender Boom add-on.", "tokens": [51214, 467, 311, 534, 411, 11, 286, 500, 380, 458, 11, 257, 6937, 34651, 295, 777, 45627, 300, 1361, 322, 3150, 293, 300, 311, 365, 264, 2177, 3216, 15523, 909, 12, 266, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1440882074072006, "compression_ratio": 1.4794520547945205, "no_speech_prob": 0.2109466940164566}, {"id": 19, "seek": 12900, "start": 130.0, "end": 137.0, "text": " So in my work I'm mostly focused on analysis of these kind of models.", "tokens": [50414, 407, 294, 452, 589, 286, 478, 5240, 5178, 322, 5215, 295, 613, 733, 295, 5245, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12973394393920898, "compression_ratio": 1.3953488372093024, "no_speech_prob": 0.007510441821068525}, {"id": 20, "seek": 12900, "start": 137.0, "end": 152.0, "text": " And then, yeah, Dion Mold came on board and he started actually writing an authoring tool on top of IFC OpenShell that allowed people to really graphically create models.", "tokens": [50764, 400, 550, 11, 1338, 11, 45212, 376, 2641, 1361, 322, 3150, 293, 415, 1409, 767, 3579, 364, 3793, 278, 2290, 322, 1192, 295, 286, 18671, 7238, 9526, 285, 300, 4350, 561, 281, 534, 4295, 984, 1884, 5245, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12973394393920898, "compression_ratio": 1.3953488372093024, "no_speech_prob": 0.007510441821068525}, {"id": 21, "seek": 15200, "start": 152.0, "end": 157.0, "text": " And, well, you can see the effect of that in terms of contributors.", "tokens": [50364, 400, 11, 731, 11, 291, 393, 536, 264, 1802, 295, 300, 294, 2115, 295, 45627, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13988683578815866, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.007993928156793118}, {"id": 22, "seek": 15200, "start": 157.0, "end": 166.0, "text": " So we have quite a bit of modules, but in essence we have a parsing library, geometry, geometry interpretation,", "tokens": [50614, 407, 321, 362, 1596, 257, 857, 295, 16679, 11, 457, 294, 12801, 321, 362, 257, 21156, 278, 6405, 11, 18426, 11, 18426, 14174, 11, 51064], "temperature": 0.0, "avg_logprob": -0.13988683578815866, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.007993928156793118}, {"id": 23, "seek": 15200, "start": 166.0, "end": 173.0, "text": " so that we use predominantly open cascade, hopefully familiar to some of the people in the room,", "tokens": [51064, 370, 300, 321, 764, 29893, 1269, 50080, 11, 4696, 4963, 281, 512, 295, 264, 561, 294, 264, 1808, 11, 51414], "temperature": 0.0, "avg_logprob": -0.13988683578815866, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.007993928156793118}, {"id": 24, "seek": 15200, "start": 173.0, "end": 180.0, "text": " to read these kind of geometry definitions and translate them to BRAPs and then interact with them in a bunch of ways,", "tokens": [51414, 281, 1401, 613, 733, 295, 18426, 21988, 293, 13799, 552, 281, 10262, 4715, 82, 293, 550, 4648, 365, 552, 294, 257, 3840, 295, 2098, 11, 51764], "temperature": 0.0, "avg_logprob": -0.13988683578815866, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.007993928156793118}, {"id": 25, "seek": 18000, "start": 180.0, "end": 187.0, "text": " convert them to desolated formats or, yeah, some other things.", "tokens": [50364, 7620, 552, 281, 730, 401, 770, 25879, 420, 11, 1338, 11, 512, 661, 721, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1682504564523697, "compression_ratio": 1.401197604790419, "no_speech_prob": 0.0011781208449974656}, {"id": 26, "seek": 18000, "start": 189.0, "end": 193.0, "text": " So I started my module mostly in C++.", "tokens": [50814, 407, 286, 1409, 452, 10088, 5240, 294, 383, 25472, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1682504564523697, "compression_ratio": 1.401197604790419, "no_speech_prob": 0.0011781208449974656}, {"id": 27, "seek": 18000, "start": 193.0, "end": 199.0, "text": " The Python has been hovering around zero for quite some years.", "tokens": [51014, 440, 15329, 575, 668, 44923, 926, 4018, 337, 1596, 512, 924, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1682504564523697, "compression_ratio": 1.401197604790419, "no_speech_prob": 0.0011781208449974656}, {"id": 28, "seek": 18000, "start": 201.0, "end": 206.0, "text": " And it basically had to do with the ecosystem, so open cascade is C++.", "tokens": [51414, 400, 309, 1936, 632, 281, 360, 365, 264, 11311, 11, 370, 1269, 50080, 307, 383, 25472, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1682504564523697, "compression_ratio": 1.401197604790419, "no_speech_prob": 0.0011781208449974656}, {"id": 29, "seek": 20600, "start": 206.0, "end": 211.0, "text": " Because, yeah, it doesn't leave you much of a choice.", "tokens": [50364, 1436, 11, 1338, 11, 309, 1177, 380, 1856, 291, 709, 295, 257, 3922, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15574068565891214, "compression_ratio": 1.4682926829268292, "no_speech_prob": 0.004604859743267298}, {"id": 30, "seek": 20600, "start": 211.0, "end": 221.0, "text": " But quite soon on we realized that if you really want a wider movement, a richer ecosystem connecting different modules,", "tokens": [50614, 583, 1596, 2321, 322, 321, 5334, 300, 498, 291, 534, 528, 257, 11842, 3963, 11, 257, 29021, 11311, 11015, 819, 16679, 11, 51114], "temperature": 0.0, "avg_logprob": -0.15574068565891214, "compression_ratio": 1.4682926829268292, "no_speech_prob": 0.004604859743267298}, {"id": 31, "seek": 20600, "start": 221.0, "end": 229.0, "text": " but also the BIM world is rather academic, so we have quite a bit of students,", "tokens": [51114, 457, 611, 264, 363, 6324, 1002, 307, 2831, 7778, 11, 370, 321, 362, 1596, 257, 857, 295, 1731, 11, 51514], "temperature": 0.0, "avg_logprob": -0.15574068565891214, "compression_ratio": 1.4682926829268292, "no_speech_prob": 0.004604859743267298}, {"id": 32, "seek": 20600, "start": 229.0, "end": 234.0, "text": " or software developers doing rapid prototyping.", "tokens": [51514, 420, 4722, 8849, 884, 7558, 46219, 3381, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15574068565891214, "compression_ratio": 1.4682926829268292, "no_speech_prob": 0.004604859743267298}, {"id": 33, "seek": 23400, "start": 234.0, "end": 245.0, "text": " So it really made a lot of sense to have an interpreted language with a more accessible syntax.", "tokens": [50364, 407, 309, 534, 1027, 257, 688, 295, 2020, 281, 362, 364, 26749, 2856, 365, 257, 544, 9515, 28431, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14122931710604963, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0029838785994797945}, {"id": 34, "seek": 23400, "start": 247.0, "end": 252.0, "text": " Yeah, so also quite early on we started having Python bindings.", "tokens": [51014, 865, 11, 370, 611, 1596, 2440, 322, 321, 1409, 1419, 15329, 14786, 1109, 13, 51264], "temperature": 0.0, "avg_logprob": -0.14122931710604963, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0029838785994797945}, {"id": 35, "seek": 23400, "start": 252.0, "end": 257.0, "text": " And then, yeah, you see the same spike here basically in terms of contributors.", "tokens": [51264, 400, 550, 11, 1338, 11, 291, 536, 264, 912, 21053, 510, 1936, 294, 2115, 295, 45627, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14122931710604963, "compression_ratio": 1.4142011834319526, "no_speech_prob": 0.0029838785994797945}, {"id": 36, "seek": 25700, "start": 257.0, "end": 262.0, "text": " That Blender BIM add-on is built on top of Blender, you might have guessed.", "tokens": [50364, 663, 2177, 3216, 363, 6324, 909, 12, 266, 307, 3094, 322, 1192, 295, 2177, 3216, 11, 291, 1062, 362, 21852, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11146026611328125, "compression_ratio": 1.5502183406113537, "no_speech_prob": 0.02735862508416176}, {"id": 37, "seek": 25700, "start": 262.0, "end": 267.0, "text": " And Blender is also obviously a wonderful piece of software, very extensible.", "tokens": [50614, 400, 2177, 3216, 307, 611, 2745, 257, 3715, 2522, 295, 4722, 11, 588, 1279, 30633, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11146026611328125, "compression_ratio": 1.5502183406113537, "no_speech_prob": 0.02735862508416176}, {"id": 38, "seek": 25700, "start": 267.0, "end": 273.0, "text": " And also, yeah, the client-side code is mostly in Python.", "tokens": [50864, 400, 611, 11, 1338, 11, 264, 6423, 12, 1812, 3089, 307, 5240, 294, 15329, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11146026611328125, "compression_ratio": 1.5502183406113537, "no_speech_prob": 0.02735862508416176}, {"id": 39, "seek": 25700, "start": 273.0, "end": 280.0, "text": " But it's not only that, it's also really a higher-level API that was being built on top of a low-level,", "tokens": [51164, 583, 309, 311, 406, 787, 300, 11, 309, 311, 611, 534, 257, 2946, 12, 12418, 9362, 300, 390, 885, 3094, 322, 1192, 295, 257, 2295, 12, 12418, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11146026611328125, "compression_ratio": 1.5502183406113537, "no_speech_prob": 0.02735862508416176}, {"id": 40, "seek": 25700, "start": 280.0, "end": 284.0, "text": " let's say instance manipulation we had.", "tokens": [51514, 718, 311, 584, 5197, 26475, 321, 632, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11146026611328125, "compression_ratio": 1.5502183406113537, "no_speech_prob": 0.02735862508416176}, {"id": 41, "seek": 28400, "start": 284.0, "end": 291.0, "text": " So, yeah, I see it's really an extensive schema.", "tokens": [50364, 407, 11, 1338, 11, 286, 536, 309, 311, 534, 364, 13246, 34078, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11146324108808468, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.0042860982939600945}, {"id": 42, "seek": 28400, "start": 291.0, "end": 298.0, "text": " It's roughly a thousand to a two thousand classes or data types.", "tokens": [50714, 467, 311, 9810, 257, 4714, 281, 257, 732, 4714, 5359, 420, 1412, 3467, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11146324108808468, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.0042860982939600945}, {"id": 43, "seek": 28400, "start": 298.0, "end": 304.0, "text": " And if you really want to interact with that in a meaningful way, you need to operate on a bit of a higher level.", "tokens": [51064, 400, 498, 291, 534, 528, 281, 4648, 365, 300, 294, 257, 10995, 636, 11, 291, 643, 281, 9651, 322, 257, 857, 295, 257, 2946, 1496, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11146324108808468, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.0042860982939600945}, {"id": 44, "seek": 28400, "start": 304.0, "end": 310.0, "text": " And that's also where the steep increase in Python code is coming from.", "tokens": [51364, 400, 300, 311, 611, 689, 264, 16841, 3488, 294, 15329, 3089, 307, 1348, 490, 13, 51664], "temperature": 0.0, "avg_logprob": -0.11146324108808468, "compression_ratio": 1.5333333333333334, "no_speech_prob": 0.0042860982939600945}, {"id": 45, "seek": 31000, "start": 310.0, "end": 318.0, "text": " But what my topic for today is really the geometrical challenges that I encounter.", "tokens": [50364, 583, 437, 452, 4829, 337, 965, 307, 534, 264, 12956, 15888, 4759, 300, 286, 8593, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11076391976455162, "compression_ratio": 1.5056818181818181, "no_speech_prob": 0.0031566962134093046}, {"id": 46, "seek": 31000, "start": 318.0, "end": 323.0, "text": " Because our industry is really multidisciplinary.", "tokens": [50764, 1436, 527, 3518, 307, 534, 2120, 40920, 24560, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11076391976455162, "compression_ratio": 1.5056818181818181, "no_speech_prob": 0.0031566962134093046}, {"id": 47, "seek": 31000, "start": 323.0, "end": 335.0, "text": " So, for example, what we exchange as building models are really detailed decompositions of the building into very specific elements.", "tokens": [51014, 407, 11, 337, 1365, 11, 437, 321, 7742, 382, 2390, 5245, 366, 534, 9942, 22867, 329, 2451, 295, 264, 2390, 666, 588, 2685, 4959, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11076391976455162, "compression_ratio": 1.5056818181818181, "no_speech_prob": 0.0031566962134093046}, {"id": 48, "seek": 33500, "start": 335.0, "end": 341.0, "text": " So, one wall, one ceiling plate, and all the kind of supporting structure.", "tokens": [50364, 407, 11, 472, 2929, 11, 472, 13655, 5924, 11, 293, 439, 264, 733, 295, 7231, 3877, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11084716836201776, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.08094123005867004}, {"id": 49, "seek": 33500, "start": 341.0, "end": 347.0, "text": " But if you look at the building code people, this is from the city of New York, for example,", "tokens": [50664, 583, 498, 291, 574, 412, 264, 2390, 3089, 561, 11, 341, 307, 490, 264, 2307, 295, 1873, 3609, 11, 337, 1365, 11, 50964], "temperature": 0.0, "avg_logprob": -0.11084716836201776, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.08094123005867004}, {"id": 50, "seek": 33500, "start": 347.0, "end": 354.0, "text": " they want to ask questions on much higher abstract levels such as the facade.", "tokens": [50964, 436, 528, 281, 1029, 1651, 322, 709, 2946, 12649, 4358, 1270, 382, 264, 46261, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11084716836201776, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.08094123005867004}, {"id": 51, "seek": 33500, "start": 354.0, "end": 357.0, "text": " So, this is, well, it's New York.", "tokens": [51314, 407, 11, 341, 307, 11, 731, 11, 309, 311, 1873, 3609, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11084716836201776, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.08094123005867004}, {"id": 52, "seek": 33500, "start": 357.0, "end": 363.0, "text": " So, they envision there is something like a base on top of which a tower is built.", "tokens": [51464, 407, 11, 436, 24739, 456, 307, 746, 411, 257, 3096, 322, 1192, 295, 597, 257, 10567, 307, 3094, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11084716836201776, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.08094123005867004}, {"id": 53, "seek": 36300, "start": 363.0, "end": 369.0, "text": " And there are requirements about the proportion regarding base and tower.", "tokens": [50364, 400, 456, 366, 7728, 466, 264, 16068, 8595, 3096, 293, 10567, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10109062327278985, "compression_ratio": 1.471794871794872, "no_speech_prob": 0.0030185377690941095}, {"id": 54, "seek": 36300, "start": 369.0, "end": 373.0, "text": " But none of these things exist in bin models.", "tokens": [50664, 583, 6022, 295, 613, 721, 2514, 294, 5171, 5245, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10109062327278985, "compression_ratio": 1.471794871794872, "no_speech_prob": 0.0030185377690941095}, {"id": 55, "seek": 36300, "start": 373.0, "end": 379.0, "text": " We don't even have a facade, we just have this bag of elements.", "tokens": [50864, 492, 500, 380, 754, 362, 257, 46261, 11, 321, 445, 362, 341, 3411, 295, 4959, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10109062327278985, "compression_ratio": 1.471794871794872, "no_speech_prob": 0.0030185377690941095}, {"id": 56, "seek": 36300, "start": 379.0, "end": 384.0, "text": " But we have other, let's say, different perspectives on geometry.", "tokens": [51164, 583, 321, 362, 661, 11, 718, 311, 584, 11, 819, 16766, 322, 18426, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10109062327278985, "compression_ratio": 1.471794871794872, "no_speech_prob": 0.0030185377690941095}, {"id": 57, "seek": 36300, "start": 384.0, "end": 387.0, "text": " If you want to do thermal simulation.", "tokens": [51414, 759, 291, 528, 281, 360, 15070, 16575, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10109062327278985, "compression_ratio": 1.471794871794872, "no_speech_prob": 0.0030185377690941095}, {"id": 58, "seek": 38700, "start": 387.0, "end": 397.0, "text": " If we are here in this room generating a lot of heat and that heat dissipates to neighboring spaces.", "tokens": [50364, 759, 321, 366, 510, 294, 341, 1808, 17746, 257, 688, 295, 3738, 293, 300, 3738, 29544, 1024, 281, 31521, 7673, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08929408341646194, "compression_ratio": 1.5265957446808511, "no_speech_prob": 0.032873306423425674}, {"id": 59, "seek": 38700, "start": 397.0, "end": 403.0, "text": " And then you're also not really interested in all the detailed elements that make up your building.", "tokens": [50864, 400, 550, 291, 434, 611, 406, 534, 3102, 294, 439, 264, 9942, 4959, 300, 652, 493, 428, 2390, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08929408341646194, "compression_ratio": 1.5265957446808511, "no_speech_prob": 0.032873306423425674}, {"id": 60, "seek": 38700, "start": 403.0, "end": 411.0, "text": " You just want to have basically a graph of spaces and thermal interfaces between them.", "tokens": [51164, 509, 445, 528, 281, 362, 1936, 257, 4295, 295, 7673, 293, 15070, 28416, 1296, 552, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08929408341646194, "compression_ratio": 1.5265957446808511, "no_speech_prob": 0.032873306423425674}, {"id": 61, "seek": 41100, "start": 412.0, "end": 421.0, "text": " And there are ways to exchange this information as part of IFC building models.", "tokens": [50414, 400, 456, 366, 2098, 281, 7742, 341, 1589, 382, 644, 295, 286, 18671, 2390, 5245, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08879409080896622, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.00805329903960228}, {"id": 62, "seek": 41100, "start": 421.0, "end": 426.0, "text": " But the generation of them is still rather buggy.", "tokens": [50864, 583, 264, 5125, 295, 552, 307, 920, 2831, 7426, 1480, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08879409080896622, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.00805329903960228}, {"id": 63, "seek": 41100, "start": 426.0, "end": 428.0, "text": " And that's also the challenge, of course.", "tokens": [51114, 400, 300, 311, 611, 264, 3430, 11, 295, 1164, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08879409080896622, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.00805329903960228}, {"id": 64, "seek": 41100, "start": 428.0, "end": 433.0, "text": " Does every authoring tool need to implement this kind of generation of data?", "tokens": [51214, 4402, 633, 3793, 278, 2290, 643, 281, 4445, 341, 733, 295, 5125, 295, 1412, 30, 51464], "temperature": 0.0, "avg_logprob": -0.08879409080896622, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.00805329903960228}, {"id": 65, "seek": 41100, "start": 433.0, "end": 439.0, "text": " Or are we going to opt for a more collaborative ecosystem of tools?", "tokens": [51464, 1610, 366, 321, 516, 281, 2427, 337, 257, 544, 16555, 11311, 295, 3873, 30, 51764], "temperature": 0.0, "avg_logprob": -0.08879409080896622, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.00805329903960228}, {"id": 66, "seek": 43900, "start": 439.0, "end": 446.0, "text": " Where you just generate a building model and there is other tools to enrich those models.", "tokens": [50364, 2305, 291, 445, 8460, 257, 2390, 2316, 293, 456, 307, 661, 3873, 281, 18849, 729, 5245, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08339174958162529, "compression_ratio": 1.576036866359447, "no_speech_prob": 0.005331168882548809}, {"id": 67, "seek": 43900, "start": 446.0, "end": 453.0, "text": " And that is what I'm really hoping for, but it's not what we're currently seeing in the industry yet.", "tokens": [50714, 400, 300, 307, 437, 286, 478, 534, 7159, 337, 11, 457, 309, 311, 406, 437, 321, 434, 4362, 2577, 294, 264, 3518, 1939, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08339174958162529, "compression_ratio": 1.576036866359447, "no_speech_prob": 0.005331168882548809}, {"id": 68, "seek": 43900, "start": 453.0, "end": 457.0, "text": " Geospatial people, they really want to focus on the things you can see.", "tokens": [51064, 2876, 2763, 267, 831, 561, 11, 436, 534, 528, 281, 1879, 322, 264, 721, 291, 393, 536, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08339174958162529, "compression_ratio": 1.576036866359447, "no_speech_prob": 0.005331168882548809}, {"id": 69, "seek": 43900, "start": 457.0, "end": 463.0, "text": " They come from GIS, so they can only observe what is actually visible to them.", "tokens": [51264, 814, 808, 490, 47860, 11, 370, 436, 393, 787, 11441, 437, 307, 767, 8974, 281, 552, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08339174958162529, "compression_ratio": 1.576036866359447, "no_speech_prob": 0.005331168882548809}, {"id": 70, "seek": 46300, "start": 464.0, "end": 470.0, "text": " So they don't really want to deal with this kind of invisible surfaces.", "tokens": [50414, 407, 436, 500, 380, 534, 528, 281, 2028, 365, 341, 733, 295, 14603, 16130, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11202974443311815, "compression_ratio": 1.6157635467980296, "no_speech_prob": 0.007449050433933735}, {"id": 71, "seek": 46300, "start": 470.0, "end": 477.0, "text": " They just want to have manifold representations of interior or exterior shells.", "tokens": [50714, 814, 445, 528, 281, 362, 47138, 33358, 295, 10636, 420, 20677, 22523, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11202974443311815, "compression_ratio": 1.6157635467980296, "no_speech_prob": 0.007449050433933735}, {"id": 72, "seek": 46300, "start": 477.0, "end": 481.0, "text": " But so this is what we have as a building model.", "tokens": [51064, 583, 370, 341, 307, 437, 321, 362, 382, 257, 2390, 2316, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11202974443311815, "compression_ratio": 1.6157635467980296, "no_speech_prob": 0.007449050433933735}, {"id": 73, "seek": 46300, "start": 481.0, "end": 490.0, "text": " And as a summary, what we want to generate, for example, is this representation of just a facade that joins across these walls.", "tokens": [51264, 400, 382, 257, 12691, 11, 437, 321, 528, 281, 8460, 11, 337, 1365, 11, 307, 341, 10290, 295, 445, 257, 46261, 300, 24397, 2108, 613, 7920, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11202974443311815, "compression_ratio": 1.6157635467980296, "no_speech_prob": 0.007449050433933735}, {"id": 74, "seek": 49000, "start": 490.0, "end": 494.0, "text": " And it could be thousands of wall elements.", "tokens": [50364, 400, 309, 727, 312, 5383, 295, 2929, 4959, 13, 50564], "temperature": 0.0, "avg_logprob": -0.07293249038328607, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.010083596222102642}, {"id": 75, "seek": 49000, "start": 494.0, "end": 499.0, "text": " The further you are in your development process of the building,", "tokens": [50564, 440, 3052, 291, 366, 294, 428, 3250, 1399, 295, 264, 2390, 11, 50814], "temperature": 0.0, "avg_logprob": -0.07293249038328607, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.010083596222102642}, {"id": 76, "seek": 49000, "start": 499.0, "end": 509.0, "text": " the more you're going to decompose these things into the actual physical things that are going to exist in reality.", "tokens": [50814, 264, 544, 291, 434, 516, 281, 22867, 541, 613, 721, 666, 264, 3539, 4001, 721, 300, 366, 516, 281, 2514, 294, 4103, 13, 51314], "temperature": 0.0, "avg_logprob": -0.07293249038328607, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.010083596222102642}, {"id": 77, "seek": 49000, "start": 509.0, "end": 513.0, "text": " But yeah, the data comes from heterogeneous sources.", "tokens": [51314, 583, 1338, 11, 264, 1412, 1487, 490, 20789, 31112, 7139, 13, 51514], "temperature": 0.0, "avg_logprob": -0.07293249038328607, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.010083596222102642}, {"id": 78, "seek": 49000, "start": 513.0, "end": 519.0, "text": " I really want to advocate for an ecosystem because we already have an open standard.", "tokens": [51514, 286, 534, 528, 281, 14608, 337, 364, 11311, 570, 321, 1217, 362, 364, 1269, 3832, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07293249038328607, "compression_ratio": 1.567099567099567, "no_speech_prob": 0.010083596222102642}, {"id": 79, "seek": 51900, "start": 519.0, "end": 527.0, "text": " Yeah, let's have a more collaborative ecosystem where we can augment this data.", "tokens": [50364, 865, 11, 718, 311, 362, 257, 544, 16555, 11311, 689, 321, 393, 29919, 341, 1412, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09011889157229908, "compression_ratio": 1.5255102040816326, "no_speech_prob": 0.002780847018584609}, {"id": 80, "seek": 51900, "start": 527.0, "end": 533.0, "text": " Here, the interior, where you really want to know, for example, will I bump my head here?", "tokens": [50764, 1692, 11, 264, 10636, 11, 689, 291, 534, 528, 281, 458, 11, 337, 1365, 11, 486, 286, 9961, 452, 1378, 510, 30, 51064], "temperature": 0.0, "avg_logprob": -0.09011889157229908, "compression_ratio": 1.5255102040816326, "no_speech_prob": 0.002780847018584609}, {"id": 81, "seek": 51900, "start": 533.0, "end": 538.0, "text": " But in normal models, these kind of representations don't exist.", "tokens": [51064, 583, 294, 2710, 5245, 11, 613, 733, 295, 33358, 500, 380, 2514, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09011889157229908, "compression_ratio": 1.5255102040816326, "no_speech_prob": 0.002780847018584609}, {"id": 82, "seek": 51900, "start": 538.0, "end": 544.0, "text": " You don't have this higher level representation of the interior.", "tokens": [51314, 509, 500, 380, 362, 341, 2946, 1496, 10290, 295, 264, 10636, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09011889157229908, "compression_ratio": 1.5255102040816326, "no_speech_prob": 0.002780847018584609}, {"id": 83, "seek": 54400, "start": 544.0, "end": 554.0, "text": " You might have a description of the space, but it wouldn't be enriched with all the geometries that further eat out of that volume.", "tokens": [50364, 509, 1062, 362, 257, 3855, 295, 264, 1901, 11, 457, 309, 2759, 380, 312, 48624, 365, 439, 264, 12956, 2244, 300, 3052, 1862, 484, 295, 300, 5523, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07909795897347587, "compression_ratio": 1.51, "no_speech_prob": 0.045340221375226974}, {"id": 84, "seek": 54400, "start": 554.0, "end": 559.0, "text": " And of course, none of this is ultimately very precise.", "tokens": [50864, 400, 295, 1164, 11, 6022, 295, 341, 307, 6284, 588, 13600, 13, 51114], "temperature": 0.0, "avg_logprob": -0.07909795897347587, "compression_ratio": 1.51, "no_speech_prob": 0.045340221375226974}, {"id": 85, "seek": 54400, "start": 559.0, "end": 568.0, "text": " So there is gaps either accumulated due to floating point rounding errors or manual sloppiness or also on purpose.", "tokens": [51114, 407, 456, 307, 15031, 2139, 31346, 3462, 281, 12607, 935, 48237, 13603, 420, 9688, 1061, 17158, 1324, 420, 611, 322, 4334, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07909795897347587, "compression_ratio": 1.51, "no_speech_prob": 0.045340221375226974}, {"id": 86, "seek": 56800, "start": 568.0, "end": 578.0, "text": " If you're building a building, you have to accommodate for the fact that the walls, especially this metal,", "tokens": [50364, 759, 291, 434, 2390, 257, 2390, 11, 291, 362, 281, 21410, 337, 264, 1186, 300, 264, 7920, 11, 2318, 341, 5760, 11, 50864], "temperature": 0.0, "avg_logprob": -0.07085783270340931, "compression_ratio": 1.6457399103139014, "no_speech_prob": 0.010934566147625446}, {"id": 87, "seek": 56800, "start": 578.0, "end": 582.0, "text": " they are expanding and contracting depending on the temperature.", "tokens": [50864, 436, 366, 14702, 293, 36095, 5413, 322, 264, 4292, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07085783270340931, "compression_ratio": 1.6457399103139014, "no_speech_prob": 0.010934566147625446}, {"id": 88, "seek": 56800, "start": 582.0, "end": 588.0, "text": " So there are also actual gaps between these elements in reality in more detailed models.", "tokens": [51064, 407, 456, 366, 611, 3539, 15031, 1296, 613, 4959, 294, 4103, 294, 544, 9942, 5245, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07085783270340931, "compression_ratio": 1.6457399103139014, "no_speech_prob": 0.010934566147625446}, {"id": 89, "seek": 56800, "start": 588.0, "end": 597.0, "text": " So maybe that representation that I just showed of the facade doesn't in reality really exist as a volume.", "tokens": [51364, 407, 1310, 300, 10290, 300, 286, 445, 4712, 295, 264, 46261, 1177, 380, 294, 4103, 534, 2514, 382, 257, 5523, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07085783270340931, "compression_ratio": 1.6457399103139014, "no_speech_prob": 0.010934566147625446}, {"id": 90, "seek": 59700, "start": 598.0, "end": 601.0, "text": " And then, so how to solve that?", "tokens": [50414, 400, 550, 11, 370, 577, 281, 5039, 300, 30, 50564], "temperature": 0.0, "avg_logprob": -0.11165877242586505, "compression_ratio": 1.4363636363636363, "no_speech_prob": 0.0028962588403373957}, {"id": 91, "seek": 59700, "start": 601.0, "end": 608.0, "text": " Naively, you would maybe think, yeah, let's just Boolean union these things together and call it a day.", "tokens": [50564, 6056, 3413, 11, 291, 576, 1310, 519, 11, 1338, 11, 718, 311, 445, 23351, 28499, 11671, 613, 721, 1214, 293, 818, 309, 257, 786, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11165877242586505, "compression_ratio": 1.4363636363636363, "no_speech_prob": 0.0028962588403373957}, {"id": 92, "seek": 59700, "start": 608.0, "end": 616.0, "text": " But yeah, that's quite a challenge in terms of performance.", "tokens": [50914, 583, 1338, 11, 300, 311, 1596, 257, 3430, 294, 2115, 295, 3389, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11165877242586505, "compression_ratio": 1.4363636363636363, "no_speech_prob": 0.0028962588403373957}, {"id": 93, "seek": 59700, "start": 616.0, "end": 618.0, "text": " But you also have to make a choice there.", "tokens": [51314, 583, 291, 611, 362, 281, 652, 257, 3922, 456, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11165877242586505, "compression_ratio": 1.4363636363636363, "no_speech_prob": 0.0028962588403373957}, {"id": 94, "seek": 61800, "start": 618.0, "end": 632.0, "text": " Are you going to rely on these kind of fuzzy Boolean operations that allow for a certain imprecision or still join these disjoint volumes,", "tokens": [50364, 2014, 291, 516, 281, 10687, 322, 613, 733, 295, 34710, 23351, 28499, 7705, 300, 2089, 337, 257, 1629, 704, 13867, 1991, 420, 920, 3917, 613, 717, 48613, 22219, 11, 51064], "temperature": 0.0, "avg_logprob": -0.1102268500406234, "compression_ratio": 1.4310344827586208, "no_speech_prob": 0.3578627407550812}, {"id": 95, "seek": 61800, "start": 632.0, "end": 637.0, "text": " even if there is a nanometer or millimeter gap between them?", "tokens": [51064, 754, 498, 456, 307, 257, 14067, 13606, 420, 17942, 7417, 1296, 552, 30, 51314], "temperature": 0.0, "avg_logprob": -0.1102268500406234, "compression_ratio": 1.4310344827586208, "no_speech_prob": 0.3578627407550812}, {"id": 96, "seek": 61800, "start": 637.0, "end": 642.0, "text": " Or that's the open cascade paradigm, for example.", "tokens": [51314, 1610, 300, 311, 264, 1269, 50080, 24709, 11, 337, 1365, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1102268500406234, "compression_ratio": 1.4310344827586208, "no_speech_prob": 0.3578627407550812}, {"id": 97, "seek": 64200, "start": 643.0, "end": 650.0, "text": " Or are you going to rely on these kind of exact Boolean operations that, for example, CGAL offers?", "tokens": [50414, 1610, 366, 291, 516, 281, 10687, 322, 613, 733, 295, 1900, 23351, 28499, 7705, 300, 11, 337, 1365, 11, 383, 38, 3427, 7736, 30, 50764], "temperature": 0.0, "avg_logprob": -0.1165384292602539, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.0017288705566897988}, {"id": 98, "seek": 64200, "start": 650.0, "end": 656.0, "text": " CGAL has a very interesting number type, I think, where a number is just not just a number.", "tokens": [50764, 383, 38, 3427, 575, 257, 588, 1880, 1230, 2010, 11, 286, 519, 11, 689, 257, 1230, 307, 445, 406, 445, 257, 1230, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1165384292602539, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.0017288705566897988}, {"id": 99, "seek": 64200, "start": 656.0, "end": 662.0, "text": " It's basically a binary tree of all the operations that were used to construct a number.", "tokens": [51064, 467, 311, 1936, 257, 17434, 4230, 295, 439, 264, 7705, 300, 645, 1143, 281, 7690, 257, 1230, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1165384292602539, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.0017288705566897988}, {"id": 100, "seek": 64200, "start": 662.0, "end": 667.0, "text": " And as such, it is really arbitrarily precise.", "tokens": [51364, 400, 382, 1270, 11, 309, 307, 534, 19071, 3289, 13600, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1165384292602539, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.0017288705566897988}, {"id": 101, "seek": 64200, "start": 667.0, "end": 671.0, "text": " There is never any rounding occurring.", "tokens": [51614, 821, 307, 1128, 604, 48237, 18386, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1165384292602539, "compression_ratio": 1.5869565217391304, "no_speech_prob": 0.0017288705566897988}, {"id": 102, "seek": 67100, "start": 671.0, "end": 676.0, "text": " But it obviously has a monumental performance impact.", "tokens": [50364, 583, 309, 2745, 575, 257, 43105, 3389, 2712, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08658408373594284, "compression_ratio": 1.4627659574468086, "no_speech_prob": 0.0006810337654314935}, {"id": 103, "seek": 67100, "start": 676.0, "end": 685.0, "text": " And it's also not maybe necessarily what you want, because you want to join across these kind of imprecision issues.", "tokens": [50614, 400, 309, 311, 611, 406, 1310, 4725, 437, 291, 528, 11, 570, 291, 528, 281, 3917, 2108, 613, 733, 295, 704, 13867, 1991, 2663, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08658408373594284, "compression_ratio": 1.4627659574468086, "no_speech_prob": 0.0006810337654314935}, {"id": 104, "seek": 67100, "start": 685.0, "end": 696.0, "text": " So earlier attempts, yeah, they made the performance problem even more extreme by using a Minkowski sum.", "tokens": [51064, 407, 3071, 15257, 11, 1338, 11, 436, 1027, 264, 3389, 1154, 754, 544, 8084, 538, 1228, 257, 376, 475, 21866, 2408, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08658408373594284, "compression_ratio": 1.4627659574468086, "no_speech_prob": 0.0006810337654314935}, {"id": 105, "seek": 69600, "start": 696.0, "end": 703.0, "text": " So you have kind of a padding volume that you apply to every element and enlarge it slightly,", "tokens": [50364, 407, 291, 362, 733, 295, 257, 39562, 5523, 300, 291, 3079, 281, 633, 4478, 293, 31976, 432, 309, 4748, 11, 50714], "temperature": 0.0, "avg_logprob": -0.13809650045045666, "compression_ratio": 1.518918918918919, "no_speech_prob": 0.019125383347272873}, {"id": 106, "seek": 69600, "start": 703.0, "end": 706.0, "text": " and then union them together and then shrink.", "tokens": [50714, 293, 550, 11671, 552, 1214, 293, 550, 23060, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13809650045045666, "compression_ratio": 1.518918918918919, "no_speech_prob": 0.019125383347272873}, {"id": 107, "seek": 69600, "start": 706.0, "end": 711.0, "text": " But this is not really feasible on detailed models.", "tokens": [50864, 583, 341, 307, 406, 534, 26648, 322, 9942, 5245, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13809650045045666, "compression_ratio": 1.518918918918919, "no_speech_prob": 0.019125383347272873}, {"id": 108, "seek": 69600, "start": 711.0, "end": 722.0, "text": " So what I try to do for this particular problem, and I hope this is going to end up in...", "tokens": [51114, 407, 437, 286, 853, 281, 360, 337, 341, 1729, 1154, 11, 293, 286, 1454, 341, 307, 516, 281, 917, 493, 294, 485, 51664], "temperature": 0.0, "avg_logprob": -0.13809650045045666, "compression_ratio": 1.518918918918919, "no_speech_prob": 0.019125383347272873}, {"id": 109, "seek": 72200, "start": 722.0, "end": 730.0, "text": " Yeah, I'm showing mostly experiments, but I hope that this will really at some point also be part of, let's say,", "tokens": [50364, 865, 11, 286, 478, 4099, 5240, 12050, 11, 457, 286, 1454, 300, 341, 486, 534, 412, 512, 935, 611, 312, 644, 295, 11, 718, 311, 584, 11, 50764], "temperature": 0.0, "avg_logprob": -0.08816358189523955, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.030217915773391724}, {"id": 110, "seek": 72200, "start": 730.0, "end": 733.0, "text": " the core parts of my software library.", "tokens": [50764, 264, 4965, 3166, 295, 452, 4722, 6405, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08816358189523955, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.030217915773391724}, {"id": 111, "seek": 72200, "start": 733.0, "end": 742.0, "text": " But what I'm doing here, for example, is decomposing these solid volumes into trees of half-spaces.", "tokens": [50914, 583, 437, 286, 478, 884, 510, 11, 337, 1365, 11, 307, 22867, 6110, 613, 5100, 22219, 666, 5852, 295, 1922, 12, 4952, 2116, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08816358189523955, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.030217915773391724}, {"id": 112, "seek": 72200, "start": 742.0, "end": 750.0, "text": " And then the neighboring half-spaces average these out.", "tokens": [51364, 400, 550, 264, 31521, 1922, 12, 4952, 2116, 4274, 613, 484, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08816358189523955, "compression_ratio": 1.5049019607843137, "no_speech_prob": 0.030217915773391724}, {"id": 113, "seek": 75000, "start": 750.0, "end": 760.0, "text": " So the two faces here, here and here, of these two disjoint walls, yeah, they are merged or aligned.", "tokens": [50364, 407, 264, 732, 8475, 510, 11, 510, 293, 510, 11, 295, 613, 732, 717, 48613, 7920, 11, 1338, 11, 436, 366, 36427, 420, 17962, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11346603540273813, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.009167365729808807}, {"id": 114, "seek": 75000, "start": 760.0, "end": 763.0, "text": " And the same here and the same here.", "tokens": [50864, 400, 264, 912, 510, 293, 264, 912, 510, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11346603540273813, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.009167365729808807}, {"id": 115, "seek": 75000, "start": 763.0, "end": 774.0, "text": " So this really allows for some sort of local adjustment, so that you're really sure that things snap into place.", "tokens": [51014, 407, 341, 534, 4045, 337, 512, 1333, 295, 2654, 17132, 11, 370, 300, 291, 434, 534, 988, 300, 721, 13650, 666, 1081, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11346603540273813, "compression_ratio": 1.5432098765432098, "no_speech_prob": 0.009167365729808807}, {"id": 116, "seek": 77400, "start": 774.0, "end": 783.0, "text": " And also, it really causes very neat models because there is almost no intermediate vertices", "tokens": [50364, 400, 611, 11, 309, 534, 7700, 588, 10654, 5245, 570, 456, 307, 1920, 572, 19376, 32053, 50814], "temperature": 0.0, "avg_logprob": -0.07532534232506385, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.003506565233692527}, {"id": 117, "seek": 77400, "start": 783.0, "end": 790.0, "text": " because all the nearly coplanar surfaces were exactly aligned.", "tokens": [50814, 570, 439, 264, 6217, 2971, 8658, 289, 16130, 645, 2293, 17962, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07532534232506385, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.003506565233692527}, {"id": 118, "seek": 77400, "start": 790.0, "end": 796.0, "text": " But this is still a challenge to make this work on the really detailed models.", "tokens": [51164, 583, 341, 307, 920, 257, 3430, 281, 652, 341, 589, 322, 264, 534, 9942, 5245, 13, 51464], "temperature": 0.0, "avg_logprob": -0.07532534232506385, "compression_ratio": 1.5294117647058822, "no_speech_prob": 0.003506565233692527}, {"id": 119, "seek": 79600, "start": 796.0, "end": 804.0, "text": " Another example where I used half-spaces is if, yeah, for example, the facility management people,", "tokens": [50364, 3996, 1365, 689, 286, 1143, 1922, 12, 4952, 2116, 307, 498, 11, 1338, 11, 337, 1365, 11, 264, 8973, 4592, 561, 11, 50764], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 120, "seek": 79600, "start": 804.0, "end": 808.0, "text": " they also operate on a much higher level.", "tokens": [50764, 436, 611, 9651, 322, 257, 709, 2946, 1496, 13, 50964], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 121, "seek": 79600, "start": 808.0, "end": 810.0, "text": " They don't care about every rentable unit.", "tokens": [50964, 814, 500, 380, 1127, 466, 633, 6214, 712, 4985, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 122, "seek": 79600, "start": 810.0, "end": 812.0, "text": " They want to have aggregates of those.", "tokens": [51064, 814, 528, 281, 362, 16743, 1024, 295, 729, 13, 51164], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 123, "seek": 79600, "start": 812.0, "end": 819.0, "text": " How many square meters of rentable space do I have across these models?", "tokens": [51164, 1012, 867, 3732, 8146, 295, 6214, 712, 1901, 360, 286, 362, 2108, 613, 5245, 30, 51514], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 124, "seek": 79600, "start": 819.0, "end": 825.0, "text": " And these interior partitions, you don't really care about them because tenants can remove them anyway.", "tokens": [51514, 400, 613, 10636, 644, 2451, 11, 291, 500, 380, 534, 1127, 466, 552, 570, 31216, 393, 4159, 552, 4033, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07655189494894009, "compression_ratio": 1.6244897959183673, "no_speech_prob": 0.10426066070795059}, {"id": 125, "seek": 82500, "start": 825.0, "end": 833.0, "text": " So you include them in your square meter counts, which means that you basically need to take this volume", "tokens": [50364, 407, 291, 4090, 552, 294, 428, 3732, 9255, 14893, 11, 597, 1355, 300, 291, 1936, 643, 281, 747, 341, 5523, 50764], "temperature": 0.0, "avg_logprob": -0.12487946526478913, "compression_ratio": 1.4375, "no_speech_prob": 0.008143996819853783}, {"id": 126, "seek": 82500, "start": 833.0, "end": 842.0, "text": " and extend it to this volume for them to touch and then union these together.", "tokens": [50764, 293, 10101, 309, 281, 341, 5523, 337, 552, 281, 2557, 293, 550, 11671, 613, 1214, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12487946526478913, "compression_ratio": 1.4375, "no_speech_prob": 0.008143996819853783}, {"id": 127, "seek": 82500, "start": 842.0, "end": 847.0, "text": " So for that, I used Sparkle, RDF Lib in Python.", "tokens": [51214, 407, 337, 300, 11, 286, 1143, 23424, 306, 11, 49488, 37, 15834, 294, 15329, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12487946526478913, "compression_ratio": 1.4375, "no_speech_prob": 0.008143996819853783}, {"id": 128, "seek": 84700, "start": 848.0, "end": 857.0, "text": " I built, this is what you see here, is a graph of spaces, the half-spaces bounding the spaces.", "tokens": [50414, 286, 3094, 11, 341, 307, 437, 291, 536, 510, 11, 307, 257, 4295, 295, 7673, 11, 264, 1922, 12, 4952, 2116, 5472, 278, 264, 7673, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1564472619589273, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.03643786907196045}, {"id": 129, "seek": 84700, "start": 857.0, "end": 862.0, "text": " These are touching the faces of the wall.", "tokens": [50864, 1981, 366, 11175, 264, 8475, 295, 264, 2929, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1564472619589273, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.03643786907196045}, {"id": 130, "seek": 84700, "start": 862.0, "end": 864.0, "text": " And in the wall, you have an opposite.", "tokens": [51114, 400, 294, 264, 2929, 11, 291, 362, 364, 6182, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1564472619589273, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.03643786907196045}, {"id": 131, "seek": 84700, "start": 864.0, "end": 867.0, "text": " And so we really form a graph.", "tokens": [51214, 400, 370, 321, 534, 1254, 257, 4295, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1564472619589273, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.03643786907196045}, {"id": 132, "seek": 84700, "start": 867.0, "end": 871.0, "text": " And then I query that graph based also on sabantics.", "tokens": [51364, 400, 550, 286, 14581, 300, 4295, 2361, 611, 322, 5560, 45298, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1564472619589273, "compression_ratio": 1.5889570552147239, "no_speech_prob": 0.03643786907196045}, {"id": 133, "seek": 87100, "start": 871.0, "end": 878.0, "text": " And of course, only the non-load-bearing walls that I can aggregate over.", "tokens": [50364, 400, 295, 1164, 11, 787, 264, 2107, 12, 2907, 12, 650, 1921, 7920, 300, 286, 393, 26118, 670, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 134, "seek": 87100, "start": 878.0, "end": 883.0, "text": " And, yeah, as such, this is this kind of patchwork blanket,", "tokens": [50714, 400, 11, 1338, 11, 382, 1270, 11, 341, 307, 341, 733, 295, 9972, 1902, 17907, 11, 50964], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 135, "seek": 87100, "start": 883.0, "end": 888.0, "text": " is all the individual spaces that are in a model like this.", "tokens": [50964, 307, 439, 264, 2609, 7673, 300, 366, 294, 257, 2316, 411, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 136, "seek": 87100, "start": 888.0, "end": 891.0, "text": " And then what the facility management people want to know is this.", "tokens": [51214, 400, 550, 437, 264, 8973, 4592, 561, 528, 281, 458, 307, 341, 13, 51364], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 137, "seek": 87100, "start": 891.0, "end": 894.0, "text": " So this is all inhabitable spaces, I think.", "tokens": [51364, 407, 341, 307, 439, 16934, 16772, 7673, 11, 286, 519, 13, 51514], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 138, "seek": 87100, "start": 894.0, "end": 900.0, "text": " So without utilities are these kind of things.", "tokens": [51514, 407, 1553, 30482, 366, 613, 733, 295, 721, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16002383985017476, "compression_ratio": 1.610091743119266, "no_speech_prob": 0.03010626882314682}, {"id": 139, "seek": 90000, "start": 901.0, "end": 908.0, "text": " But, yeah, there are large performance problems still with these kind of approaches.", "tokens": [50414, 583, 11, 1338, 11, 456, 366, 2416, 3389, 2740, 920, 365, 613, 733, 295, 11587, 13, 50764], "temperature": 0.0, "avg_logprob": -0.28833406888521634, "compression_ratio": 1.4021739130434783, "no_speech_prob": 0.003646646626293659}, {"id": 140, "seek": 90000, "start": 908.0, "end": 918.0, "text": " These arbitrarily precise operations in Seagull, it's really immensely robust.", "tokens": [50764, 1981, 19071, 3289, 13600, 7705, 294, 1100, 559, 858, 11, 309, 311, 534, 38674, 13956, 13, 51264], "temperature": 0.0, "avg_logprob": -0.28833406888521634, "compression_ratio": 1.4021739130434783, "no_speech_prob": 0.003646646626293659}, {"id": 141, "seek": 90000, "start": 918.0, "end": 929.0, "text": " The first I really come from, let's say, I've 10 years of working experience with Obakas Cade.", "tokens": [51264, 440, 700, 286, 534, 808, 490, 11, 718, 311, 584, 11, 286, 600, 1266, 924, 295, 1364, 1752, 365, 4075, 514, 296, 383, 762, 13, 51814], "temperature": 0.0, "avg_logprob": -0.28833406888521634, "compression_ratio": 1.4021739130434783, "no_speech_prob": 0.003646646626293659}, {"id": 142, "seek": 92900, "start": 929.0, "end": 936.0, "text": " So you come to lower your expectations a bit in terms of what works,", "tokens": [50364, 407, 291, 808, 281, 3126, 428, 9843, 257, 857, 294, 2115, 295, 437, 1985, 11, 50714], "temperature": 0.0, "avg_logprob": -0.11075551693256085, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0004394100105855614}, {"id": 143, "seek": 92900, "start": 936.0, "end": 942.0, "text": " how many crashes did you encounter when you load complex models.", "tokens": [50714, 577, 867, 28642, 630, 291, 8593, 562, 291, 3677, 3997, 5245, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11075551693256085, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0004394100105855614}, {"id": 144, "seek": 92900, "start": 942.0, "end": 945.0, "text": " And then in Seagull, everything just works.", "tokens": [51014, 400, 550, 294, 1100, 559, 858, 11, 1203, 445, 1985, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11075551693256085, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0004394100105855614}, {"id": 145, "seek": 92900, "start": 945.0, "end": 952.0, "text": " It's not always what you want, but that is then your own fault, typically.", "tokens": [51164, 467, 311, 406, 1009, 437, 291, 528, 11, 457, 300, 307, 550, 428, 1065, 7441, 11, 5850, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11075551693256085, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0004394100105855614}, {"id": 146, "seek": 92900, "start": 952.0, "end": 956.0, "text": " But, yeah, still really computationally intensive.", "tokens": [51514, 583, 11, 1338, 11, 920, 534, 24903, 379, 18957, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11075551693256085, "compression_ratio": 1.5226130653266332, "no_speech_prob": 0.0004394100105855614}, {"id": 147, "seek": 95600, "start": 956.0, "end": 963.0, "text": " So as a side project, I've also written my own foxalization library.", "tokens": [50364, 407, 382, 257, 1252, 1716, 11, 286, 600, 611, 3720, 452, 1065, 21026, 304, 2144, 6405, 13, 50714], "temperature": 0.0, "avg_logprob": -0.17399148207444412, "compression_ratio": 1.449438202247191, "no_speech_prob": 0.0017528743483126163}, {"id": 148, "seek": 95600, "start": 963.0, "end": 975.0, "text": " Because, yeah, especially these kind of challenges, superimposing a lot of elements into the same domain,", "tokens": [50714, 1436, 11, 1338, 11, 2318, 613, 733, 295, 4759, 11, 1687, 8814, 6110, 257, 688, 295, 4959, 666, 264, 912, 9274, 11, 51314], "temperature": 0.0, "avg_logprob": -0.17399148207444412, "compression_ratio": 1.449438202247191, "no_speech_prob": 0.0017528743483126163}, {"id": 149, "seek": 95600, "start": 975.0, "end": 985.0, "text": " closing certain minimal gaps, yeah, that's really what foxalization is perfect for.", "tokens": [51314, 10377, 1629, 13206, 15031, 11, 1338, 11, 300, 311, 534, 437, 21026, 304, 2144, 307, 2176, 337, 13, 51814], "temperature": 0.0, "avg_logprob": -0.17399148207444412, "compression_ratio": 1.449438202247191, "no_speech_prob": 0.0017528743483126163}, {"id": 150, "seek": 98500, "start": 986.0, "end": 993.0, "text": " And, yeah, this, so maybe if you would want to union all these kind of building elements in, yeah,", "tokens": [50414, 400, 11, 1338, 11, 341, 11, 370, 1310, 498, 291, 576, 528, 281, 11671, 439, 613, 733, 295, 2390, 4959, 294, 11, 1338, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 151, "seek": 98500, "start": 993.0, "end": 996.0, "text": " in Obakas Cade, it just wouldn't work.", "tokens": [50764, 294, 4075, 514, 296, 383, 762, 11, 309, 445, 2759, 380, 589, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 152, "seek": 98500, "start": 996.0, "end": 998.0, "text": " It's not robust enough in Seagull.", "tokens": [50914, 467, 311, 406, 13956, 1547, 294, 1100, 559, 858, 13, 51014], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 153, "seek": 98500, "start": 998.0, "end": 1002.0, "text": " It will take a considerable amount of time.", "tokens": [51014, 467, 486, 747, 257, 24167, 2372, 295, 565, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 154, "seek": 98500, "start": 1002.0, "end": 1007.0, "text": " And in foxalization, it's really just, yeah, I wouldn't call it instant.", "tokens": [51214, 400, 294, 21026, 304, 2144, 11, 309, 311, 534, 445, 11, 1338, 11, 286, 2759, 380, 818, 309, 9836, 13, 51464], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 155, "seek": 98500, "start": 1007.0, "end": 1010.0, "text": " You have to deal with a different set of challenges.", "tokens": [51464, 509, 362, 281, 2028, 365, 257, 819, 992, 295, 4759, 13, 51614], "temperature": 0.0, "avg_logprob": -0.09939572362616511, "compression_ratio": 1.5132743362831858, "no_speech_prob": 0.005015643313527107}, {"id": 156, "seek": 101000, "start": 1010.0, "end": 1016.0, "text": " Suddenly, the complexity is no longer based on, let's say, vertex and face counts,", "tokens": [50364, 21194, 11, 264, 14024, 307, 572, 2854, 2361, 322, 11, 718, 311, 584, 11, 28162, 293, 1851, 14893, 11, 50664], "temperature": 0.0, "avg_logprob": -0.08865551300990729, "compression_ratio": 1.5876288659793814, "no_speech_prob": 0.002872488461434841}, {"id": 157, "seek": 101000, "start": 1016.0, "end": 1023.0, "text": " but it's really based on, yeah, actual, the physical dimensions of your building.", "tokens": [50664, 457, 309, 311, 534, 2361, 322, 11, 1338, 11, 3539, 11, 264, 4001, 12819, 295, 428, 2390, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08865551300990729, "compression_ratio": 1.5876288659793814, "no_speech_prob": 0.002872488461434841}, {"id": 158, "seek": 101000, "start": 1023.0, "end": 1028.0, "text": " So if you're building a larger building, your computation takes longer.", "tokens": [51014, 407, 498, 291, 434, 2390, 257, 4833, 2390, 11, 428, 24903, 2516, 2854, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08865551300990729, "compression_ratio": 1.5876288659793814, "no_speech_prob": 0.002872488461434841}, {"id": 159, "seek": 101000, "start": 1028.0, "end": 1038.0, "text": " But it's still, yeah, it does perform better than Seagull, I would say.", "tokens": [51264, 583, 309, 311, 920, 11, 1338, 11, 309, 775, 2042, 1101, 813, 1100, 559, 858, 11, 286, 576, 584, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08865551300990729, "compression_ratio": 1.5876288659793814, "no_speech_prob": 0.002872488461434841}, {"id": 160, "seek": 103800, "start": 1038.0, "end": 1042.0, "text": " Yeah, and then you can do topological queries on those again.", "tokens": [50364, 865, 11, 293, 550, 291, 393, 360, 1192, 4383, 24109, 322, 729, 797, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08516432762145996, "compression_ratio": 1.7121212121212122, "no_speech_prob": 0.0032258660066872835}, {"id": 161, "seek": 103800, "start": 1042.0, "end": 1047.0, "text": " So, yeah, this is a very famous testing model that we use in our industry,", "tokens": [50564, 407, 11, 1338, 11, 341, 307, 257, 588, 4618, 4997, 2316, 300, 321, 764, 294, 527, 3518, 11, 50814], "temperature": 0.0, "avg_logprob": -0.08516432762145996, "compression_ratio": 1.7121212121212122, "no_speech_prob": 0.0032258660066872835}, {"id": 162, "seek": 103800, "start": 1047.0, "end": 1051.0, "text": " but I expect it's a little bit cryptic for you to read.", "tokens": [50814, 457, 286, 2066, 309, 311, 257, 707, 857, 9844, 299, 337, 291, 281, 1401, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08516432762145996, "compression_ratio": 1.7121212121212122, "no_speech_prob": 0.0032258660066872835}, {"id": 163, "seek": 103800, "start": 1051.0, "end": 1059.0, "text": " But let's say this is exterior space, and here is a door, here is a door, here is a door, here is a door.", "tokens": [51014, 583, 718, 311, 584, 341, 307, 20677, 1901, 11, 293, 510, 307, 257, 2853, 11, 510, 307, 257, 2853, 11, 510, 307, 257, 2853, 11, 510, 307, 257, 2853, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08516432762145996, "compression_ratio": 1.7121212121212122, "no_speech_prob": 0.0032258660066872835}, {"id": 164, "seek": 103800, "start": 1059.0, "end": 1062.0, "text": " Here you see a little bit of a stairway.", "tokens": [51414, 1692, 291, 536, 257, 707, 857, 295, 257, 22273, 676, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08516432762145996, "compression_ratio": 1.7121212121212122, "no_speech_prob": 0.0032258660066872835}, {"id": 165, "seek": 106200, "start": 1062.0, "end": 1069.0, "text": " So it's really three-dimensional, but I've kind of folded every 3D volume.", "tokens": [50364, 407, 309, 311, 534, 1045, 12, 18759, 11, 457, 286, 600, 733, 295, 23940, 633, 805, 35, 5523, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16171308310635119, "compression_ratio": 1.4438502673796791, "no_speech_prob": 0.007510597351938486}, {"id": 166, "seek": 106200, "start": 1069.0, "end": 1076.0, "text": " I flatten it over the Z-axis to kind of get a 3D volumetric,", "tokens": [50714, 286, 24183, 309, 670, 264, 1176, 12, 24633, 281, 733, 295, 483, 257, 805, 35, 1996, 449, 17475, 11, 51064], "temperature": 0.0, "avg_logprob": -0.16171308310635119, "compression_ratio": 1.4438502673796791, "no_speech_prob": 0.007510597351938486}, {"id": 167, "seek": 106200, "start": 1076.0, "end": 1083.0, "text": " a foxal grid of just, yeah, let's say, the mast that we can walk on.", "tokens": [51064, 257, 21026, 304, 10748, 295, 445, 11, 1338, 11, 718, 311, 584, 11, 264, 27055, 300, 321, 393, 1792, 322, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16171308310635119, "compression_ratio": 1.4438502673796791, "no_speech_prob": 0.007510597351938486}, {"id": 168, "seek": 106200, "start": 1083.0, "end": 1088.0, "text": " Yeah, and then you can just do topological queries again on those", "tokens": [51414, 865, 11, 293, 550, 291, 393, 445, 360, 1192, 4383, 24109, 797, 322, 729, 51664], "temperature": 0.0, "avg_logprob": -0.16171308310635119, "compression_ratio": 1.4438502673796791, "no_speech_prob": 0.007510597351938486}, {"id": 169, "seek": 108800, "start": 1088.0, "end": 1094.0, "text": " to see how long is the evacuation distance from a particular point in time.", "tokens": [50364, 281, 536, 577, 938, 307, 264, 42740, 4560, 490, 257, 1729, 935, 294, 565, 13, 50664], "temperature": 0.0, "avg_logprob": -0.15190189534967596, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.03133869916200638}, {"id": 170, "seek": 108800, "start": 1094.0, "end": 1100.0, "text": " And I'm not saying it's not possible on, let's say, regular polyhedra or B-Rab's,", "tokens": [50664, 400, 286, 478, 406, 1566, 309, 311, 406, 1944, 322, 11, 718, 311, 584, 11, 3890, 6754, 27096, 424, 420, 363, 12, 49, 455, 311, 11, 50964], "temperature": 0.0, "avg_logprob": -0.15190189534967596, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.03133869916200638}, {"id": 171, "seek": 108800, "start": 1100.0, "end": 1102.0, "text": " people have been doing that.", "tokens": [50964, 561, 362, 668, 884, 300, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15190189534967596, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.03133869916200638}, {"id": 172, "seek": 108800, "start": 1102.0, "end": 1112.0, "text": " Yeah, but I came to really appreciate how trivial those kind of operations are on foxal grids.", "tokens": [51064, 865, 11, 457, 286, 1361, 281, 534, 4449, 577, 26703, 729, 733, 295, 7705, 366, 322, 21026, 304, 677, 3742, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15190189534967596, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.03133869916200638}, {"id": 173, "seek": 108800, "start": 1112.0, "end": 1114.0, "text": " Same for the headroom, basically.", "tokens": [51564, 10635, 337, 264, 1378, 2861, 11, 1936, 13, 51664], "temperature": 0.0, "avg_logprob": -0.15190189534967596, "compression_ratio": 1.4788732394366197, "no_speech_prob": 0.03133869916200638}, {"id": 174, "seek": 111400, "start": 1114.0, "end": 1124.0, "text": " It's the same kind of idea where I start from the 3D volumetric space interior that we can breathe in.", "tokens": [50364, 467, 311, 264, 912, 733, 295, 1558, 689, 286, 722, 490, 264, 805, 35, 1996, 449, 17475, 1901, 10636, 300, 321, 393, 10192, 294, 13, 50864], "temperature": 0.0, "avg_logprob": -0.07421997047605969, "compression_ratio": 1.5235849056603774, "no_speech_prob": 0.017471356317400932}, {"id": 175, "seek": 111400, "start": 1124.0, "end": 1131.0, "text": " I flatten that over the Z-axis to just the little surface where we can stand on.", "tokens": [50864, 286, 24183, 300, 670, 264, 1176, 12, 24633, 281, 445, 264, 707, 3753, 689, 321, 393, 1463, 322, 13, 51214], "temperature": 0.0, "avg_logprob": -0.07421997047605969, "compression_ratio": 1.5235849056603774, "no_speech_prob": 0.017471356317400932}, {"id": 176, "seek": 111400, "start": 1131.0, "end": 1136.0, "text": " But I remember how many foxals I flattened downwards,", "tokens": [51214, 583, 286, 1604, 577, 867, 21026, 1124, 286, 24183, 292, 39880, 11, 51464], "temperature": 0.0, "avg_logprob": -0.07421997047605969, "compression_ratio": 1.5235849056603774, "no_speech_prob": 0.017471356317400932}, {"id": 177, "seek": 111400, "start": 1136.0, "end": 1143.0, "text": " and based on some sort of color coding or threshold, that's either sufficient or not.", "tokens": [51464, 293, 2361, 322, 512, 1333, 295, 2017, 17720, 420, 14678, 11, 300, 311, 2139, 11563, 420, 406, 13, 51814], "temperature": 0.0, "avg_logprob": -0.07421997047605969, "compression_ratio": 1.5235849056603774, "no_speech_prob": 0.017471356317400932}, {"id": 178, "seek": 114300, "start": 1144.0, "end": 1151.0, "text": " So, yeah, you can see here under the stair that there is obviously a little bit less space to stand.", "tokens": [50414, 407, 11, 1338, 11, 291, 393, 536, 510, 833, 264, 22273, 300, 456, 307, 2745, 257, 707, 857, 1570, 1901, 281, 1463, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11869955062866211, "compression_ratio": 1.5279503105590062, "no_speech_prob": 0.0013361744349822402}, {"id": 179, "seek": 114300, "start": 1153.0, "end": 1161.0, "text": " So for this, these kind of, yeah, when we started this project,", "tokens": [50864, 407, 337, 341, 11, 613, 733, 295, 11, 1338, 11, 562, 321, 1409, 341, 1716, 11, 51264], "temperature": 0.0, "avg_logprob": -0.11869955062866211, "compression_ratio": 1.5279503105590062, "no_speech_prob": 0.0013361744349822402}, {"id": 180, "seek": 114300, "start": 1161.0, "end": 1168.0, "text": " we envisioned that end users would be writing their own kind of analysis scripts.", "tokens": [51264, 321, 47733, 300, 917, 5022, 576, 312, 3579, 641, 1065, 733, 295, 5215, 23294, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11869955062866211, "compression_ratio": 1.5279503105590062, "no_speech_prob": 0.0013361744349822402}, {"id": 181, "seek": 116800, "start": 1168.0, "end": 1179.0, "text": " So here you see visually all the operations that were involved in one of these,", "tokens": [50364, 407, 510, 291, 536, 19622, 439, 264, 7705, 300, 645, 3288, 294, 472, 295, 613, 11, 50914], "temperature": 0.0, "avg_logprob": -0.18862075805664064, "compression_ratio": 1.5629139072847682, "no_speech_prob": 0.007494444493204355}, {"id": 182, "seek": 116800, "start": 1179.0, "end": 1185.0, "text": " in one of these, I don't remember which one,", "tokens": [50914, 294, 472, 295, 613, 11, 286, 500, 380, 1604, 597, 472, 11, 51214], "temperature": 0.0, "avg_logprob": -0.18862075805664064, "compression_ratio": 1.5629139072847682, "no_speech_prob": 0.007494444493204355}, {"id": 183, "seek": 116800, "start": 1185.0, "end": 1190.0, "text": " but one of these computation graphs to union those foxals,", "tokens": [51214, 457, 472, 295, 613, 24903, 24877, 281, 11671, 729, 21026, 1124, 11, 51464], "temperature": 0.0, "avg_logprob": -0.18862075805664064, "compression_ratio": 1.5629139072847682, "no_speech_prob": 0.007494444493204355}, {"id": 184, "seek": 116800, "start": 1190.0, "end": 1194.0, "text": " subtract a bunch of things through these traversals,", "tokens": [51464, 16390, 257, 3840, 295, 721, 807, 613, 23149, 1124, 11, 51664], "temperature": 0.0, "avg_logprob": -0.18862075805664064, "compression_ratio": 1.5629139072847682, "no_speech_prob": 0.007494444493204355}, {"id": 185, "seek": 119400, "start": 1195.0, "end": 1200.0, "text": " to really figure out the space where we can stand.", "tokens": [50414, 281, 534, 2573, 484, 264, 1901, 689, 321, 393, 1463, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11367940341725069, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.0014440050581470132}, {"id": 186, "seek": 119400, "start": 1200.0, "end": 1209.0, "text": " We also do some sort of padding so that we don't start walking in like two centimeter areas.", "tokens": [50664, 492, 611, 360, 512, 1333, 295, 39562, 370, 300, 321, 500, 380, 722, 4494, 294, 411, 732, 31914, 3179, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11367940341725069, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.0014440050581470132}, {"id": 187, "seek": 119400, "start": 1209.0, "end": 1216.0, "text": " We kind of assume that we have a little bit of a body, so all the obstacles are dilated a bit.", "tokens": [51114, 492, 733, 295, 6552, 300, 321, 362, 257, 707, 857, 295, 257, 1772, 11, 370, 439, 264, 17735, 366, 11504, 770, 257, 857, 13, 51464], "temperature": 0.0, "avg_logprob": -0.11367940341725069, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.0014440050581470132}, {"id": 188, "seek": 119400, "start": 1216.0, "end": 1223.0, "text": " Some of these things are also element-specific, so we do specific things with the railings.", "tokens": [51464, 2188, 295, 613, 721, 366, 611, 4478, 12, 29258, 11, 370, 321, 360, 2685, 721, 365, 264, 8765, 1109, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11367940341725069, "compression_ratio": 1.6417910447761195, "no_speech_prob": 0.0014440050581470132}, {"id": 189, "seek": 122300, "start": 1223.0, "end": 1234.0, "text": " I don't remember the details, but we really created our own little scripting library for these kind of things.", "tokens": [50364, 286, 500, 380, 1604, 264, 4365, 11, 457, 321, 534, 2942, 527, 1065, 707, 5755, 278, 6405, 337, 613, 733, 295, 721, 13, 50914], "temperature": 0.0, "avg_logprob": -0.0922053386638691, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0009031518129631877}, {"id": 190, "seek": 122300, "start": 1234.0, "end": 1237.0, "text": " I don't remember why we just didn't create Python bindings.", "tokens": [50914, 286, 500, 380, 1604, 983, 321, 445, 994, 380, 1884, 15329, 14786, 1109, 13, 51064], "temperature": 0.0, "avg_logprob": -0.0922053386638691, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0009031518129631877}, {"id": 191, "seek": 122300, "start": 1237.0, "end": 1244.0, "text": " That seems like it's easier than really creating your own language with your own interpreter,", "tokens": [51064, 663, 2544, 411, 309, 311, 3571, 813, 534, 4084, 428, 1065, 2856, 365, 428, 1065, 34132, 11, 51414], "temperature": 0.0, "avg_logprob": -0.0922053386638691, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0009031518129631877}, {"id": 192, "seek": 122300, "start": 1244.0, "end": 1248.0, "text": " but at that time that's what I did for some reason.", "tokens": [51414, 457, 412, 300, 565, 300, 311, 437, 286, 630, 337, 512, 1778, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0922053386638691, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.0009031518129631877}, {"id": 193, "seek": 124800, "start": 1249.0, "end": 1257.0, "text": " Obviously nobody has ever tried to create their own little analysis script to do these kind of things,", "tokens": [50414, 7580, 5079, 575, 1562, 3031, 281, 1884, 641, 1065, 707, 5215, 5755, 281, 360, 613, 733, 295, 721, 11, 50814], "temperature": 0.0, "avg_logprob": -0.13260009620763077, "compression_ratio": 1.555045871559633, "no_speech_prob": 0.006124019622802734}, {"id": 194, "seek": 124800, "start": 1257.0, "end": 1265.0, "text": " but as you can imagine it also requires some documentation and stuff that we also didn't provide,", "tokens": [50814, 457, 382, 291, 393, 3811, 309, 611, 7029, 512, 14333, 293, 1507, 300, 321, 611, 994, 380, 2893, 11, 51214], "temperature": 0.0, "avg_logprob": -0.13260009620763077, "compression_ratio": 1.555045871559633, "no_speech_prob": 0.006124019622802734}, {"id": 195, "seek": 124800, "start": 1265.0, "end": 1268.0, "text": " but it was really fun to work on.", "tokens": [51214, 457, 309, 390, 534, 1019, 281, 589, 322, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13260009620763077, "compression_ratio": 1.555045871559633, "no_speech_prob": 0.006124019622802734}, {"id": 196, "seek": 124800, "start": 1268.0, "end": 1276.0, "text": " What I see as the advantages of this kind of foxalization, you can also associate numbers to yourselves.", "tokens": [51364, 708, 286, 536, 382, 264, 14906, 295, 341, 733, 295, 21026, 304, 2144, 11, 291, 393, 611, 14644, 3547, 281, 14791, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13260009620763077, "compression_ratio": 1.555045871559633, "no_speech_prob": 0.006124019622802734}, {"id": 197, "seek": 127600, "start": 1276.0, "end": 1282.0, "text": " What you see in the headroom analysis where you can stand and the evacuation analysis,", "tokens": [50364, 708, 291, 536, 294, 264, 1378, 2861, 5215, 689, 291, 393, 1463, 293, 264, 42740, 5215, 11, 50664], "temperature": 0.0, "avg_logprob": -0.18489032178311735, "compression_ratio": 1.5851063829787233, "no_speech_prob": 0.036513250321149826}, {"id": 198, "seek": 127600, "start": 1282.0, "end": 1286.0, "text": " you can really associate a number with every cell.", "tokens": [50664, 291, 393, 534, 14644, 257, 1230, 365, 633, 2815, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18489032178311735, "compression_ratio": 1.5851063829787233, "no_speech_prob": 0.036513250321149826}, {"id": 199, "seek": 127600, "start": 1286.0, "end": 1292.0, "text": " It's also in a uniform way across every dimension.", "tokens": [50864, 467, 311, 611, 294, 257, 9452, 636, 2108, 633, 10139, 13, 51164], "temperature": 0.0, "avg_logprob": -0.18489032178311735, "compression_ratio": 1.5851063829787233, "no_speech_prob": 0.036513250321149826}, {"id": 200, "seek": 127600, "start": 1292.0, "end": 1295.0, "text": " That's also a bit harder on poly-heat writing.", "tokens": [51164, 663, 311, 611, 257, 857, 6081, 322, 6754, 12, 675, 267, 3579, 13, 51314], "temperature": 0.0, "avg_logprob": -0.18489032178311735, "compression_ratio": 1.5851063829787233, "no_speech_prob": 0.036513250321149826}, {"id": 201, "seek": 127600, "start": 1295.0, "end": 1300.0, "text": " Bullying operations are really just that, bullying operations.", "tokens": [51314, 14131, 1840, 7705, 366, 534, 445, 300, 11, 25633, 7705, 13, 51564], "temperature": 0.0, "avg_logprob": -0.18489032178311735, "compression_ratio": 1.5851063829787233, "no_speech_prob": 0.036513250321149826}, {"id": 202, "seek": 130000, "start": 1301.0, "end": 1307.0, "text": " If you superimpose two cells, a one and a one becomes a one, a one and a zero becomes a one.", "tokens": [50414, 759, 291, 1687, 8814, 541, 732, 5438, 11, 257, 472, 293, 257, 472, 3643, 257, 472, 11, 257, 472, 293, 257, 4018, 3643, 257, 472, 13, 50714], "temperature": 0.0, "avg_logprob": -0.17626650631427765, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.02063884772360325}, {"id": 203, "seek": 130000, "start": 1307.0, "end": 1314.0, "text": " That was really, if I can implement bullying operations, then it's trivial.", "tokens": [50714, 663, 390, 534, 11, 498, 286, 393, 4445, 25633, 7705, 11, 550, 309, 311, 26703, 13, 51064], "temperature": 0.0, "avg_logprob": -0.17626650631427765, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.02063884772360325}, {"id": 204, "seek": 130000, "start": 1314.0, "end": 1323.0, "text": " It's efficient to calculate distances also, and we close these gaps.", "tokens": [51064, 467, 311, 7148, 281, 8873, 22182, 611, 11, 293, 321, 1998, 613, 15031, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17626650631427765, "compression_ratio": 1.5192307692307692, "no_speech_prob": 0.02063884772360325}, {"id": 205, "seek": 132300, "start": 1324.0, "end": 1332.0, "text": " I think for our built environment sector it's really quite a good match for some analysis.", "tokens": [50414, 286, 519, 337, 527, 3094, 2823, 6977, 309, 311, 534, 1596, 257, 665, 2995, 337, 512, 5215, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2145074462890625, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.004080580547451973}, {"id": 206, "seek": 132300, "start": 1336.0, "end": 1341.0, "text": " I've seen OpenShell going back to where it all started for me.", "tokens": [51014, 286, 600, 1612, 7238, 9526, 285, 516, 646, 281, 689, 309, 439, 1409, 337, 385, 13, 51264], "temperature": 0.0, "avg_logprob": -0.2145074462890625, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.004080580547451973}, {"id": 207, "seek": 132300, "start": 1341.0, "end": 1344.0, "text": " It's quite an extensive software library.", "tokens": [51264, 467, 311, 1596, 364, 13246, 4722, 6405, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2145074462890625, "compression_ratio": 1.3636363636363635, "no_speech_prob": 0.004080580547451973}, {"id": 208, "seek": 134400, "start": 1345.0, "end": 1353.0, "text": " It has all the different revisions of the IFC schema.", "tokens": [50414, 467, 575, 439, 264, 819, 3698, 4252, 295, 264, 286, 18671, 34078, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15294151875510145, "compression_ratio": 1.4055555555555554, "no_speech_prob": 0.07587765157222748}, {"id": 209, "seek": 134400, "start": 1353.0, "end": 1356.0, "text": " It has these geometry mapping functions.", "tokens": [50814, 467, 575, 613, 18426, 18350, 6828, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15294151875510145, "compression_ratio": 1.4055555555555554, "no_speech_prob": 0.07587765157222748}, {"id": 210, "seek": 134400, "start": 1356.0, "end": 1365.0, "text": " There's about, let's say, 200 classes in IFC that somehow affect geometry or representation.", "tokens": [50964, 821, 311, 466, 11, 718, 311, 584, 11, 2331, 5359, 294, 286, 18671, 300, 6063, 3345, 18426, 420, 10290, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15294151875510145, "compression_ratio": 1.4055555555555554, "no_speech_prob": 0.07587765157222748}, {"id": 211, "seek": 134400, "start": 1365.0, "end": 1371.0, "text": " They have an implication on our B-Wrap conversion to OpenFascade.", "tokens": [51414, 814, 362, 364, 37814, 322, 527, 363, 12, 54, 4007, 14298, 281, 7238, 37, 4806, 762, 13, 51714], "temperature": 0.0, "avg_logprob": -0.15294151875510145, "compression_ratio": 1.4055555555555554, "no_speech_prob": 0.07587765157222748}, {"id": 212, "seek": 137100, "start": 1371.0, "end": 1375.0, "text": " They have these conversion functions.", "tokens": [50364, 814, 362, 613, 14298, 6828, 13, 50564], "temperature": 0.0, "avg_logprob": -0.26615711620875765, "compression_ratio": 1.3517241379310345, "no_speech_prob": 0.015904206782579422}, {"id": 213, "seek": 137100, "start": 1375.0, "end": 1379.0, "text": " Then we rely on OpenFascade.", "tokens": [50564, 1396, 321, 10687, 322, 7238, 37, 4806, 762, 13, 50764], "temperature": 0.0, "avg_logprob": -0.26615711620875765, "compression_ratio": 1.3517241379310345, "no_speech_prob": 0.015904206782579422}, {"id": 214, "seek": 137100, "start": 1379.0, "end": 1385.0, "text": " It's gotten quite a large code base.", "tokens": [50764, 467, 311, 5768, 1596, 257, 2416, 3089, 3096, 13, 51064], "temperature": 0.0, "avg_logprob": -0.26615711620875765, "compression_ratio": 1.3517241379310345, "no_speech_prob": 0.015904206782579422}, {"id": 215, "seek": 137100, "start": 1385.0, "end": 1397.0, "text": " In the new version, I have been playing, well, if it's been happening for various years now,", "tokens": [51064, 682, 264, 777, 3037, 11, 286, 362, 668, 2433, 11, 731, 11, 498, 309, 311, 668, 2737, 337, 3683, 924, 586, 11, 51664], "temperature": 0.0, "avg_logprob": -0.26615711620875765, "compression_ratio": 1.3517241379310345, "no_speech_prob": 0.015904206782579422}, {"id": 216, "seek": 139700, "start": 1397.0, "end": 1405.0, "text": " so I shouldn't call it playing anymore, but let's say working on the idea to support multiple geometry libraries.", "tokens": [50364, 370, 286, 4659, 380, 818, 309, 2433, 3602, 11, 457, 718, 311, 584, 1364, 322, 264, 1558, 281, 1406, 3866, 18426, 15148, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12008252143859863, "compression_ratio": 1.4910714285714286, "no_speech_prob": 0.05663861334323883}, {"id": 217, "seek": 139700, "start": 1405.0, "end": 1413.0, "text": " The robustness of OpenFascade has really improved dramatically over the past 12 years.", "tokens": [50764, 440, 13956, 1287, 295, 7238, 37, 4806, 762, 575, 534, 9689, 17548, 670, 264, 1791, 2272, 924, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12008252143859863, "compression_ratio": 1.4910714285714286, "no_speech_prob": 0.05663861334323883}, {"id": 218, "seek": 139700, "start": 1413.0, "end": 1418.0, "text": " It's really a usable, very powerful software library now.", "tokens": [51164, 467, 311, 534, 257, 29975, 11, 588, 4005, 4722, 6405, 586, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12008252143859863, "compression_ratio": 1.4910714285714286, "no_speech_prob": 0.05663861334323883}, {"id": 219, "seek": 139700, "start": 1418.0, "end": 1422.0, "text": " But there are still cases, if there are issues being reported on my get up,", "tokens": [51414, 583, 456, 366, 920, 3331, 11, 498, 456, 366, 2663, 885, 7055, 322, 452, 483, 493, 11, 51614], "temperature": 0.0, "avg_logprob": -0.12008252143859863, "compression_ratio": 1.4910714285714286, "no_speech_prob": 0.05663861334323883}, {"id": 220, "seek": 142200, "start": 1422.0, "end": 1427.0, "text": " where I have to say, yeah, this takes me two months of investigation.", "tokens": [50364, 689, 286, 362, 281, 584, 11, 1338, 11, 341, 2516, 385, 732, 2493, 295, 9627, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 221, "seek": 142200, "start": 1427.0, "end": 1430.0, "text": " I'm sorry, I just cannot help you with this.", "tokens": [50614, 286, 478, 2597, 11, 286, 445, 2644, 854, 291, 365, 341, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 222, "seek": 142200, "start": 1430.0, "end": 1433.0, "text": " In that sense, I have some hope.", "tokens": [50764, 682, 300, 2020, 11, 286, 362, 512, 1454, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 223, "seek": 142200, "start": 1433.0, "end": 1438.0, "text": " If I have a secondary geometry implementation in Seagal,", "tokens": [50914, 759, 286, 362, 257, 11396, 18426, 11420, 294, 1100, 559, 304, 11, 51164], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 224, "seek": 142200, "start": 1438.0, "end": 1441.0, "text": " that I can really provide the best of both worlds,", "tokens": [51164, 300, 286, 393, 534, 2893, 264, 1151, 295, 1293, 13401, 11, 51314], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 225, "seek": 142200, "start": 1441.0, "end": 1446.0, "text": " also to people that want to do these kind of analysis that I just showed earlier,", "tokens": [51314, 611, 281, 561, 300, 528, 281, 360, 613, 733, 295, 5215, 300, 286, 445, 4712, 3071, 11, 51564], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 226, "seek": 142200, "start": 1446.0, "end": 1448.0, "text": " like aligning these half spaces.", "tokens": [51564, 411, 419, 9676, 613, 1922, 7673, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 227, "seek": 142200, "start": 1448.0, "end": 1451.0, "text": " They have a better starting point with Seagal.", "tokens": [51664, 814, 362, 257, 1101, 2891, 935, 365, 1100, 559, 304, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10830838701366323, "compression_ratio": 1.6547619047619047, "no_speech_prob": 0.043344587087631226}, {"id": 228, "seek": 145100, "start": 1451.0, "end": 1457.0, "text": " But for that, I created my own taxonomy in the middle of geometrical concepts,", "tokens": [50364, 583, 337, 300, 11, 286, 2942, 452, 1065, 3366, 23423, 294, 264, 2808, 295, 12956, 15888, 10392, 11, 50664], "temperature": 0.0, "avg_logprob": -0.09955959078631824, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.0015220552450045943}, {"id": 229, "seek": 145100, "start": 1457.0, "end": 1465.0, "text": " so that this kind of implementation here is a little bit easier.", "tokens": [50664, 370, 300, 341, 733, 295, 11420, 510, 307, 257, 707, 857, 3571, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09955959078631824, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.0015220552450045943}, {"id": 230, "seek": 145100, "start": 1465.0, "end": 1470.0, "text": " Yeah, so what I've learned in all of this,", "tokens": [51064, 865, 11, 370, 437, 286, 600, 3264, 294, 439, 295, 341, 11, 51314], "temperature": 0.0, "avg_logprob": -0.09955959078631824, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.0015220552450045943}, {"id": 231, "seek": 145100, "start": 1470.0, "end": 1474.0, "text": " so Seagal is predominantly only polyhedra.", "tokens": [51314, 370, 1100, 559, 304, 307, 29893, 787, 6754, 27096, 424, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09955959078631824, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.0015220552450045943}, {"id": 232, "seek": 145100, "start": 1474.0, "end": 1479.0, "text": " They have some sort of curved things in some packages hidden somewhere,", "tokens": [51514, 814, 362, 512, 1333, 295, 24991, 721, 294, 512, 17401, 7633, 4079, 11, 51764], "temperature": 0.0, "avg_logprob": -0.09955959078631824, "compression_ratio": 1.49009900990099, "no_speech_prob": 0.0015220552450045943}, {"id": 233, "seek": 147900, "start": 1479.0, "end": 1482.0, "text": " mostly polyhedra.", "tokens": [50364, 5240, 6754, 27096, 424, 13, 50514], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 234, "seek": 147900, "start": 1482.0, "end": 1486.0, "text": " The exact rational number type I've talked about,", "tokens": [50514, 440, 1900, 15090, 1230, 2010, 286, 600, 2825, 466, 11, 50714], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 235, "seek": 147900, "start": 1486.0, "end": 1492.0, "text": " they have an interval that wraps them for performance.", "tokens": [50714, 436, 362, 364, 15035, 300, 25831, 552, 337, 3389, 13, 51014], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 236, "seek": 147900, "start": 1492.0, "end": 1495.0, "text": " They have good documentation,", "tokens": [51014, 814, 362, 665, 14333, 11, 51164], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 237, "seek": 147900, "start": 1495.0, "end": 1501.0, "text": " but I find their set of packages somewhat incoherent and chaotic.", "tokens": [51164, 457, 286, 915, 641, 992, 295, 17401, 8344, 834, 78, 511, 317, 293, 27013, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 238, "seek": 147900, "start": 1501.0, "end": 1503.0, "text": " You don't always know where you need to look,", "tokens": [51464, 509, 500, 380, 1009, 458, 689, 291, 643, 281, 574, 11, 51564], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 239, "seek": 147900, "start": 1503.0, "end": 1506.0, "text": " and it's not always easy to go from one package to the other.", "tokens": [51564, 293, 309, 311, 406, 1009, 1858, 281, 352, 490, 472, 7372, 281, 264, 661, 13, 51714], "temperature": 0.0, "avg_logprob": -0.06594474288238876, "compression_ratio": 1.5377358490566038, "no_speech_prob": 0.003808828303590417}, {"id": 240, "seek": 150600, "start": 1506.0, "end": 1509.0, "text": " And I think the focus is rather academic.", "tokens": [50364, 400, 286, 519, 264, 1879, 307, 2831, 7778, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 241, "seek": 150600, "start": 1509.0, "end": 1513.0, "text": " A lot of the CAD concepts that maybe we rely on,", "tokens": [50514, 316, 688, 295, 264, 41143, 10392, 300, 1310, 321, 10687, 322, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 242, "seek": 150600, "start": 1513.0, "end": 1516.0, "text": " they don't necessarily offer out of the box.", "tokens": [50714, 436, 500, 380, 4725, 2626, 484, 295, 264, 2424, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 243, "seek": 150600, "start": 1516.0, "end": 1521.0, "text": " And maybe you can read for yourself what I think about OpenCascade.", "tokens": [50864, 400, 1310, 291, 393, 1401, 337, 1803, 437, 286, 519, 466, 7238, 34, 4806, 762, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 244, "seek": 150600, "start": 1521.0, "end": 1524.0, "text": " And that's it for me today.", "tokens": [51114, 400, 300, 311, 309, 337, 385, 965, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 245, "seek": 150600, "start": 1524.0, "end": 1526.0, "text": " Thank you so much.", "tokens": [51264, 1044, 291, 370, 709, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1324731852557208, "compression_ratio": 1.4619883040935673, "no_speech_prob": 0.012999361380934715}, {"id": 246, "seek": 152600, "start": 1526.0, "end": 1529.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.30217946659434924, "compression_ratio": 1.1743119266055047, "no_speech_prob": 0.04558665305376053}, {"id": 247, "seek": 152600, "start": 1532.0, "end": 1537.0, "text": " Okay, do we have any questions?", "tokens": [50664, 1033, 11, 360, 321, 362, 604, 1651, 30, 50914], "temperature": 0.0, "avg_logprob": -0.30217946659434924, "compression_ratio": 1.1743119266055047, "no_speech_prob": 0.04558665305376053}, {"id": 248, "seek": 152600, "start": 1537.0, "end": 1538.0, "text": " Yes.", "tokens": [50914, 1079, 13, 50964], "temperature": 0.0, "avg_logprob": -0.30217946659434924, "compression_ratio": 1.1743119266055047, "no_speech_prob": 0.04558665305376053}, {"id": 249, "seek": 152600, "start": 1538.0, "end": 1546.0, "text": " Do you see any use for the Seagal library to help with the OpenCascade geometry?", "tokens": [50964, 1144, 291, 536, 604, 764, 337, 264, 1100, 559, 304, 6405, 281, 854, 365, 264, 7238, 34, 4806, 762, 18426, 30, 51364], "temperature": 0.0, "avg_logprob": -0.30217946659434924, "compression_ratio": 1.1743119266055047, "no_speech_prob": 0.04558665305376053}, {"id": 250, "seek": 154600, "start": 1546.0, "end": 1553.0, "text": " Yeah, great question.", "tokens": [50364, 865, 11, 869, 1168, 13, 50714], "temperature": 0.0, "avg_logprob": -0.6549151738484701, "compression_ratio": 1.5592105263157894, "no_speech_prob": 0.046522147953510284}, {"id": 251, "seek": 154600, "start": 1553.0, "end": 1559.0, "text": " So the question is, to what extent can maybe these libraries also help each other,", "tokens": [50714, 407, 264, 1168, 307, 11, 281, 437, 8396, 393, 1310, 613, 15148, 611, 854, 1184, 661, 11, 51014], "temperature": 0.0, "avg_logprob": -0.6549151738484701, "compression_ratio": 1.5592105263157894, "no_speech_prob": 0.046522147953510284}, {"id": 252, "seek": 154600, "start": 1559.0, "end": 1565.0, "text": " enrich each other, and not only exist as two choices at runtime,", "tokens": [51014, 18849, 1184, 661, 11, 293, 406, 787, 2514, 382, 732, 7994, 412, 34474, 11, 51314], "temperature": 0.0, "avg_logprob": -0.6549151738484701, "compression_ratio": 1.5592105263157894, "no_speech_prob": 0.046522147953510284}, {"id": 253, "seek": 154600, "start": 1565.0, "end": 1571.0, "text": " but also how do we make sure that the library is not only available", "tokens": [51314, 457, 611, 577, 360, 321, 652, 988, 300, 264, 6405, 307, 406, 787, 2435, 51614], "temperature": 0.0, "avg_logprob": -0.6549151738484701, "compression_ratio": 1.5592105263157894, "no_speech_prob": 0.046522147953510284}, {"id": 254, "seek": 157100, "start": 1571.0, "end": 1577.0, "text": " and not only exists as two choices at runtime.", "tokens": [50364, 293, 406, 787, 8198, 382, 732, 7994, 412, 34474, 13, 50664], "temperature": 0.0, "avg_logprob": -0.162578923361642, "compression_ratio": 1.4695121951219512, "no_speech_prob": 0.038925688713788986}, {"id": 255, "seek": 157100, "start": 1577.0, "end": 1582.0, "text": " I haven't really explored that yet.", "tokens": [50664, 286, 2378, 380, 534, 24016, 300, 1939, 13, 50914], "temperature": 0.0, "avg_logprob": -0.162578923361642, "compression_ratio": 1.4695121951219512, "no_speech_prob": 0.038925688713788986}, {"id": 256, "seek": 157100, "start": 1582.0, "end": 1589.0, "text": " So far I'm only at the point of, yeah, you can try one, if it fails, try the other.", "tokens": [50914, 407, 1400, 286, 478, 787, 412, 264, 935, 295, 11, 1338, 11, 291, 393, 853, 472, 11, 498, 309, 18199, 11, 853, 264, 661, 13, 51264], "temperature": 0.0, "avg_logprob": -0.162578923361642, "compression_ratio": 1.4695121951219512, "no_speech_prob": 0.038925688713788986}, {"id": 257, "seek": 157100, "start": 1589.0, "end": 1595.0, "text": " I think what I would at least want to do is kind of automate that process.", "tokens": [51264, 286, 519, 437, 286, 576, 412, 1935, 528, 281, 360, 307, 733, 295, 31605, 300, 1399, 13, 51564], "temperature": 0.0, "avg_logprob": -0.162578923361642, "compression_ratio": 1.4695121951219512, "no_speech_prob": 0.038925688713788986}, {"id": 258, "seek": 159500, "start": 1595.0, "end": 1602.0, "text": " So that the software tries the first one, and if they're precious or produce bad results,", "tokens": [50364, 407, 300, 264, 4722, 9898, 264, 700, 472, 11, 293, 498, 436, 434, 12406, 420, 5258, 1578, 3542, 11, 50714], "temperature": 0.0, "avg_logprob": -0.17899473508199057, "compression_ratio": 1.5136612021857923, "no_speech_prob": 0.012268387712538242}, {"id": 259, "seek": 159500, "start": 1602.0, "end": 1606.0, "text": " automatically try the second one.", "tokens": [50714, 6772, 853, 264, 1150, 472, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17899473508199057, "compression_ratio": 1.5136612021857923, "no_speech_prob": 0.012268387712538242}, {"id": 260, "seek": 159500, "start": 1606.0, "end": 1614.0, "text": " As a next step, I would envision that I'm able to rewrite the results from one library to the other.", "tokens": [50914, 1018, 257, 958, 1823, 11, 286, 576, 24739, 300, 286, 478, 1075, 281, 28132, 264, 3542, 490, 472, 6405, 281, 264, 661, 13, 51314], "temperature": 0.0, "avg_logprob": -0.17899473508199057, "compression_ratio": 1.5136612021857923, "no_speech_prob": 0.012268387712538242}, {"id": 261, "seek": 159500, "start": 1614.0, "end": 1621.0, "text": " And yeah, by that time, you would maybe use, indeed,", "tokens": [51314, 400, 1338, 11, 538, 300, 565, 11, 291, 576, 1310, 764, 11, 6451, 11, 51664], "temperature": 0.0, "avg_logprob": -0.17899473508199057, "compression_ratio": 1.5136612021857923, "no_speech_prob": 0.012268387712538242}, {"id": 262, "seek": 162100, "start": 1622.0, "end": 1625.0, "text": " a more intelligent combination of the two.", "tokens": [50414, 257, 544, 13232, 6562, 295, 264, 732, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10189584844252643, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.030344801023602486}, {"id": 263, "seek": 162100, "start": 1625.0, "end": 1630.0, "text": " Like this Minkowski sum that I showed make an element a little bit larger", "tokens": [50564, 1743, 341, 376, 475, 21866, 2408, 300, 286, 4712, 652, 364, 4478, 257, 707, 857, 4833, 50814], "temperature": 0.0, "avg_logprob": -0.10189584844252643, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.030344801023602486}, {"id": 264, "seek": 162100, "start": 1630.0, "end": 1638.0, "text": " and also relies on convex decomposition that you decompose your element into convex parts.", "tokens": [50814, 293, 611, 30910, 322, 42432, 48356, 300, 291, 22867, 541, 428, 4478, 666, 42432, 3166, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10189584844252643, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.030344801023602486}, {"id": 265, "seek": 162100, "start": 1638.0, "end": 1643.0, "text": " Yeah, that is really quite powerful and something that I think only Seagal offers.", "tokens": [51214, 865, 11, 300, 307, 534, 1596, 4005, 293, 746, 300, 286, 519, 787, 1100, 559, 304, 7736, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10189584844252643, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.030344801023602486}, {"id": 266, "seek": 162100, "start": 1643.0, "end": 1648.0, "text": " If you can bring that maybe to OpenCascade for some reason,", "tokens": [51464, 759, 291, 393, 1565, 300, 1310, 281, 7238, 34, 4806, 762, 337, 512, 1778, 11, 51714], "temperature": 0.0, "avg_logprob": -0.10189584844252643, "compression_ratio": 1.5695067264573992, "no_speech_prob": 0.030344801023602486}, {"id": 267, "seek": 164800, "start": 1648.0, "end": 1650.0, "text": " that's a very good use case in mind.", "tokens": [50364, 300, 311, 257, 588, 665, 764, 1389, 294, 1575, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 268, "seek": 164800, "start": 1650.0, "end": 1654.0, "text": " I think that would be quite powerful.", "tokens": [50464, 286, 519, 300, 576, 312, 1596, 4005, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 269, "seek": 164800, "start": 1654.0, "end": 1658.0, "text": " But so far no plans. It's quite slow process.", "tokens": [50664, 583, 370, 1400, 572, 5482, 13, 467, 311, 1596, 2964, 1399, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 270, "seek": 164800, "start": 1658.0, "end": 1660.0, "text": " Thanks for the question.", "tokens": [50864, 2561, 337, 264, 1168, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 271, "seek": 164800, "start": 1660.0, "end": 1662.0, "text": " Yeah, please.", "tokens": [50964, 865, 11, 1767, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 272, "seek": 164800, "start": 1662.0, "end": 1667.0, "text": " I had a question regarding the open spaces that you have between walls for dilutation.", "tokens": [51064, 286, 632, 257, 1168, 8595, 264, 1269, 7673, 300, 291, 362, 1296, 7920, 337, 11504, 11380, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 273, "seek": 164800, "start": 1667.0, "end": 1672.0, "text": " Exists there a class for defining the dilutation?", "tokens": [51314, 2111, 1751, 456, 257, 1508, 337, 17827, 264, 11504, 11380, 30, 51564], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 274, "seek": 164800, "start": 1672.0, "end": 1676.0, "text": " Because then the next thing would be that you interpret it in a different way.", "tokens": [51564, 1436, 550, 264, 958, 551, 576, 312, 300, 291, 7302, 309, 294, 257, 819, 636, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1990448224662554, "compression_ratio": 1.6233766233766234, "no_speech_prob": 0.016091033816337585}, {"id": 275, "seek": 167600, "start": 1676.0, "end": 1681.0, "text": " Does it all put a flexible material in it for strength calculations?", "tokens": [50364, 4402, 309, 439, 829, 257, 11358, 2527, 294, 309, 337, 3800, 20448, 30, 50614], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 276, "seek": 167600, "start": 1681.0, "end": 1683.0, "text": " Interesting question.", "tokens": [50614, 14711, 1168, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 277, "seek": 167600, "start": 1683.0, "end": 1689.0, "text": " So the question is, I mentioned earlier that walls are not always connected to account for, yeah,", "tokens": [50714, 407, 264, 1168, 307, 11, 286, 2835, 3071, 300, 7920, 366, 406, 1009, 4582, 281, 2696, 337, 11, 1338, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 278, "seek": 167600, "start": 1689.0, "end": 1692.0, "text": " dilutation that elements can grow and shrink a bit.", "tokens": [51014, 11504, 11380, 300, 4959, 393, 1852, 293, 23060, 257, 857, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 279, "seek": 167600, "start": 1692.0, "end": 1700.0, "text": " And is there a specific class to encode that information in the models so that that can also be handled?", "tokens": [51164, 400, 307, 456, 257, 2685, 1508, 281, 2058, 1429, 300, 1589, 294, 264, 5245, 370, 300, 300, 393, 611, 312, 18033, 30, 51564], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 280, "seek": 167600, "start": 1700.0, "end": 1705.0, "text": " I would say yes and no.", "tokens": [51564, 286, 576, 584, 2086, 293, 572, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1513218773735894, "compression_ratio": 1.5905172413793103, "no_speech_prob": 0.005081039387732744}, {"id": 281, "seek": 170500, "start": 1705.0, "end": 1715.0, "text": " If you would want to, I would say the standard is flexible enough to encode that information.", "tokens": [50364, 759, 291, 576, 528, 281, 11, 286, 576, 584, 264, 3832, 307, 11358, 1547, 281, 2058, 1429, 300, 1589, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 282, "seek": 170500, "start": 1715.0, "end": 1717.0, "text": " The standard is also very asparic.", "tokens": [50864, 440, 3832, 307, 611, 588, 382, 2181, 299, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 283, "seek": 170500, "start": 1717.0, "end": 1719.0, "text": " There's a geometry description.", "tokens": [50964, 821, 311, 257, 18426, 3855, 13, 51064], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 284, "seek": 170500, "start": 1719.0, "end": 1721.0, "text": " There is a taxonomy of types of elements.", "tokens": [51064, 821, 307, 257, 3366, 23423, 295, 3467, 295, 4959, 13, 51164], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 285, "seek": 170500, "start": 1721.0, "end": 1726.0, "text": " And you can also refer to other classifications.", "tokens": [51164, 400, 291, 393, 611, 2864, 281, 661, 1508, 7833, 13, 51414], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 286, "seek": 170500, "start": 1726.0, "end": 1730.0, "text": " So if you want, you can encode that information.", "tokens": [51414, 407, 498, 291, 528, 11, 291, 393, 2058, 1429, 300, 1589, 13, 51614], "temperature": 0.0, "avg_logprob": -0.17079814863793644, "compression_ratio": 1.6574585635359116, "no_speech_prob": 0.0043381620198488235}, {"id": 287, "seek": 173000, "start": 1730.0, "end": 1737.0, "text": " And the problem with that is also that I've seen is used to exchange information from one person to the other.", "tokens": [50364, 400, 264, 1154, 365, 300, 307, 611, 300, 286, 600, 1612, 307, 1143, 281, 7742, 1589, 490, 472, 954, 281, 264, 661, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10643253935144302, "compression_ratio": 1.6016949152542372, "no_speech_prob": 0.019590580835938454}, {"id": 288, "seek": 173000, "start": 1737.0, "end": 1741.0, "text": " And there's a lot of inherent knowledge that we all rely on.", "tokens": [50714, 400, 456, 311, 257, 688, 295, 26387, 3601, 300, 321, 439, 10687, 322, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10643253935144302, "compression_ratio": 1.6016949152542372, "no_speech_prob": 0.019590580835938454}, {"id": 289, "seek": 173000, "start": 1741.0, "end": 1752.0, "text": " So, yeah, if two walls don't exactly match, there is probably some textual description there that still says,", "tokens": [50914, 407, 11, 1338, 11, 498, 732, 7920, 500, 380, 2293, 2995, 11, 456, 307, 1391, 512, 2487, 901, 3855, 456, 300, 920, 1619, 11, 51464], "temperature": 0.0, "avg_logprob": -0.10643253935144302, "compression_ratio": 1.6016949152542372, "no_speech_prob": 0.019590580835938454}, {"id": 290, "seek": 173000, "start": 1752.0, "end": 1755.0, "text": " well, this needs to be sealed with that and that.", "tokens": [51464, 731, 11, 341, 2203, 281, 312, 21514, 365, 300, 293, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10643253935144302, "compression_ratio": 1.6016949152542372, "no_speech_prob": 0.019590580835938454}, {"id": 291, "seek": 173000, "start": 1755.0, "end": 1759.0, "text": " And that's obviously also much more efficient.", "tokens": [51614, 400, 300, 311, 2745, 611, 709, 544, 7148, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10643253935144302, "compression_ratio": 1.6016949152542372, "no_speech_prob": 0.019590580835938454}, {"id": 292, "seek": 175900, "start": 1759.0, "end": 1761.0, "text": " It's difficult to interpret for a computer.", "tokens": [50364, 467, 311, 2252, 281, 7302, 337, 257, 3820, 13, 50464], "temperature": 0.0, "avg_logprob": -0.20727806586723824, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.006295392289757729}, {"id": 293, "seek": 175900, "start": 1761.0, "end": 1768.0, "text": " Yeah, but people in our industry, I have to admit, don't really care about that.", "tokens": [50464, 865, 11, 457, 561, 294, 527, 3518, 11, 286, 362, 281, 9796, 11, 500, 380, 534, 1127, 466, 300, 13, 50814], "temperature": 0.0, "avg_logprob": -0.20727806586723824, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.006295392289757729}, {"id": 294, "seek": 175900, "start": 1768.0, "end": 1781.0, "text": " I mean, it is a machine interpretable standard, but people still use it predominantly only for communication and coordination.", "tokens": [50814, 286, 914, 11, 309, 307, 257, 3479, 7302, 712, 3832, 11, 457, 561, 920, 764, 309, 29893, 787, 337, 6101, 293, 21252, 13, 51464], "temperature": 0.0, "avg_logprob": -0.20727806586723824, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.006295392289757729}, {"id": 295, "seek": 175900, "start": 1781.0, "end": 1784.0, "text": " So you can, let's say, superimpose the geometries.", "tokens": [51464, 407, 291, 393, 11, 718, 311, 584, 11, 1687, 8814, 541, 264, 12956, 2244, 13, 51614], "temperature": 0.0, "avg_logprob": -0.20727806586723824, "compression_ratio": 1.5175879396984924, "no_speech_prob": 0.006295392289757729}, {"id": 296, "seek": 178400, "start": 1784.0, "end": 1791.0, "text": " If there is a beam going through a wall where there is no hole, yeah, you have to call each other and solve that.", "tokens": [50364, 759, 456, 307, 257, 14269, 516, 807, 257, 2929, 689, 456, 307, 572, 5458, 11, 1338, 11, 291, 362, 281, 818, 1184, 661, 293, 5039, 300, 13, 50714], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 297, "seek": 178400, "start": 1791.0, "end": 1796.0, "text": " But actual computational analysis on these models is rather rare.", "tokens": [50714, 583, 3539, 28270, 5215, 322, 613, 5245, 307, 2831, 5892, 13, 50964], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 298, "seek": 178400, "start": 1796.0, "end": 1797.0, "text": " Thank you.", "tokens": [50964, 1044, 291, 13, 51014], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 299, "seek": 178400, "start": 1797.0, "end": 1799.0, "text": " Thanks.", "tokens": [51014, 2561, 13, 51114], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 300, "seek": 178400, "start": 1799.0, "end": 1800.0, "text": " Yeah?", "tokens": [51114, 865, 30, 51164], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 301, "seek": 178400, "start": 1800.0, "end": 1801.0, "text": " Two.", "tokens": [51164, 4453, 13, 51214], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 302, "seek": 178400, "start": 1801.0, "end": 1804.0, "text": " There is a microphone on this way.", "tokens": [51214, 821, 307, 257, 10952, 322, 341, 636, 13, 51364], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 303, "seek": 178400, "start": 1804.0, "end": 1805.0, "text": " Hello.", "tokens": [51364, 2425, 13, 51414], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 304, "seek": 178400, "start": 1805.0, "end": 1810.0, "text": " When we say about IFC, we should remember about the versions of IFC.", "tokens": [51414, 1133, 321, 584, 466, 286, 18671, 11, 321, 820, 1604, 466, 264, 9606, 295, 286, 18671, 13, 51664], "temperature": 0.0, "avg_logprob": -0.149624986851469, "compression_ratio": 1.5384615384615385, "no_speech_prob": 0.013713918626308441}, {"id": 305, "seek": 181000, "start": 1810.0, "end": 1816.0, "text": " What is about the versioning with your libraries and all this stuff and how you are related to all these things?", "tokens": [50364, 708, 307, 466, 264, 3037, 278, 365, 428, 15148, 293, 439, 341, 1507, 293, 577, 291, 366, 4077, 281, 439, 613, 721, 30, 50664], "temperature": 0.0, "avg_logprob": -0.16176028685136276, "compression_ratio": 1.5406976744186047, "no_speech_prob": 0.037294432520866394}, {"id": 306, "seek": 181000, "start": 1816.0, "end": 1821.0, "text": " I mean, the versions of the standard because it's also going on.", "tokens": [50664, 286, 914, 11, 264, 9606, 295, 264, 3832, 570, 309, 311, 611, 516, 322, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16176028685136276, "compression_ratio": 1.5406976744186047, "no_speech_prob": 0.037294432520866394}, {"id": 307, "seek": 181000, "start": 1821.0, "end": 1831.0, "text": " Yeah, and it's actually also one of the reasons why I had to create this mapping layer,", "tokens": [50914, 865, 11, 293, 309, 311, 767, 611, 472, 295, 264, 4112, 983, 286, 632, 281, 1884, 341, 18350, 4583, 11, 51414], "temperature": 0.0, "avg_logprob": -0.16176028685136276, "compression_ratio": 1.5406976744186047, "no_speech_prob": 0.037294432520866394}, {"id": 308, "seek": 183100, "start": 1831.0, "end": 1843.0, "text": " because I didn't discuss it, but we indeed, for example, here, IFC 2, X3, IFC 4, we have more or less the same concepts.", "tokens": [50364, 570, 286, 994, 380, 2248, 309, 11, 457, 321, 6451, 11, 337, 1365, 11, 510, 11, 286, 18671, 568, 11, 1783, 18, 11, 286, 18671, 1017, 11, 321, 362, 544, 420, 1570, 264, 912, 10392, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15523466196927158, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.34923091530799866}, {"id": 309, "seek": 183100, "start": 1843.0, "end": 1847.0, "text": " There are minor differences.", "tokens": [50964, 821, 366, 6696, 7300, 13, 51164], "temperature": 0.0, "avg_logprob": -0.15523466196927158, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.34923091530799866}, {"id": 310, "seek": 183100, "start": 1847.0, "end": 1859.0, "text": " But I haven't really found a way, for example, to account for the fact that these two classes, the polyline and 2, X3 and the polyline and IFC 4,", "tokens": [51164, 583, 286, 2378, 380, 534, 1352, 257, 636, 11, 337, 1365, 11, 281, 2696, 337, 264, 1186, 300, 613, 732, 5359, 11, 264, 6754, 1889, 293, 568, 11, 1783, 18, 293, 264, 6754, 1889, 293, 286, 18671, 1017, 11, 51764], "temperature": 0.0, "avg_logprob": -0.15523466196927158, "compression_ratio": 1.560846560846561, "no_speech_prob": 0.34923091530799866}, {"id": 311, "seek": 185900, "start": 1859.0, "end": 1864.0, "text": " that they are, let's say, 99% compatible.", "tokens": [50364, 300, 436, 366, 11, 718, 311, 584, 11, 11803, 4, 18218, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1315114321532073, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.03782216086983681}, {"id": 312, "seek": 185900, "start": 1864.0, "end": 1871.0, "text": " So it also really dramatically increases the compiled size of my platform,", "tokens": [50614, 407, 309, 611, 534, 17548, 8637, 264, 36548, 2744, 295, 452, 3663, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1315114321532073, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.03782216086983681}, {"id": 313, "seek": 185900, "start": 1871.0, "end": 1883.0, "text": " because everything is compiled multiple times with slight variations to account for the same, for the different schema versions.", "tokens": [50964, 570, 1203, 307, 36548, 3866, 1413, 365, 4036, 17840, 281, 2696, 337, 264, 912, 11, 337, 264, 819, 34078, 9606, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1315114321532073, "compression_ratio": 1.4583333333333333, "no_speech_prob": 0.03782216086983681}, {"id": 314, "seek": 188300, "start": 1883.0, "end": 1897.0, "text": " And yeah, there are other software libraries that maybe more start from above, have a unified schema and then allow to serialize that as version 2, X3 or version 4.", "tokens": [50364, 400, 1338, 11, 456, 366, 661, 4722, 15148, 300, 1310, 544, 722, 490, 3673, 11, 362, 257, 26787, 34078, 293, 550, 2089, 281, 17436, 1125, 300, 382, 3037, 568, 11, 1783, 18, 420, 3037, 1017, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1447309312366304, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.01754171960055828}, {"id": 315, "seek": 188300, "start": 1897.0, "end": 1904.0, "text": " But I have the more side-by-side as really computer-generated code from the schema.", "tokens": [51064, 583, 286, 362, 264, 544, 1252, 12, 2322, 12, 1812, 382, 534, 3820, 12, 21848, 770, 3089, 490, 264, 34078, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1447309312366304, "compression_ratio": 1.4588235294117646, "no_speech_prob": 0.01754171960055828}, {"id": 316, "seek": 190400, "start": 1904.0, "end": 1915.0, "text": " So yeah, we have migration scripts to go from the one to the other, but they are written by hand and probably not complete.", "tokens": [50364, 407, 1338, 11, 321, 362, 17011, 23294, 281, 352, 490, 264, 472, 281, 264, 661, 11, 457, 436, 366, 3720, 538, 1011, 293, 1391, 406, 3566, 13, 50914], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 317, "seek": 190400, "start": 1915.0, "end": 1919.0, "text": " Okay, one last question and then we're going to change over.", "tokens": [50914, 1033, 11, 472, 1036, 1168, 293, 550, 321, 434, 516, 281, 1319, 670, 13, 51114], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 318, "seek": 190400, "start": 1919.0, "end": 1920.0, "text": " Let's change over.", "tokens": [51114, 961, 311, 1319, 670, 13, 51164], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 319, "seek": 190400, "start": 1920.0, "end": 1923.0, "text": " Yeah, look at the render on what.", "tokens": [51164, 865, 11, 574, 412, 264, 15529, 322, 437, 13, 51314], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 320, "seek": 190400, "start": 1923.0, "end": 1927.0, "text": " So your voxelization code, how did you set the voxel size?", "tokens": [51314, 407, 428, 1650, 87, 338, 2144, 3089, 11, 577, 630, 291, 992, 264, 1650, 87, 338, 2744, 30, 51514], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 321, "seek": 190400, "start": 1927.0, "end": 1930.0, "text": " Because I assume if you set them too small, you don't find the holes in the wall,", "tokens": [51514, 1436, 286, 6552, 498, 291, 992, 552, 886, 1359, 11, 291, 500, 380, 915, 264, 8118, 294, 264, 2929, 11, 51664], "temperature": 0.0, "avg_logprob": -0.22050404771466123, "compression_ratio": 1.5815899581589958, "no_speech_prob": 0.2914475202560425}, {"id": 322, "seek": 193000, "start": 1930.0, "end": 1932.0, "text": " and if you set them too big, you close up corridors.", "tokens": [50364, 293, 498, 291, 992, 552, 886, 955, 11, 291, 1998, 493, 46920, 13, 50464], "temperature": 0.0, "avg_logprob": -0.13607589403788248, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.09712901711463928}, {"id": 323, "seek": 193000, "start": 1932.0, "end": 1935.0, "text": " So do you have to do an optimization for the size of the voxel?", "tokens": [50464, 407, 360, 291, 362, 281, 360, 364, 19618, 337, 264, 2744, 295, 264, 1650, 87, 338, 30, 50614], "temperature": 0.0, "avg_logprob": -0.13607589403788248, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.09712901711463928}, {"id": 324, "seek": 193000, "start": 1935.0, "end": 1939.0, "text": " And what sort of size are we talking about for a building?", "tokens": [50614, 400, 437, 1333, 295, 2744, 366, 321, 1417, 466, 337, 257, 2390, 30, 50814], "temperature": 0.0, "avg_logprob": -0.13607589403788248, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.09712901711463928}, {"id": 325, "seek": 193000, "start": 1939.0, "end": 1941.0, "text": " Yeah, great question.", "tokens": [50814, 865, 11, 869, 1168, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13607589403788248, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.09712901711463928}, {"id": 326, "seek": 193000, "start": 1941.0, "end": 1951.0, "text": " And the main consideration was actually performance and also memory usage,", "tokens": [50914, 400, 264, 2135, 12381, 390, 767, 3389, 293, 611, 4675, 14924, 11, 51414], "temperature": 0.0, "avg_logprob": -0.13607589403788248, "compression_ratio": 1.4623655913978495, "no_speech_prob": 0.09712901711463928}, {"id": 327, "seek": 195100, "start": 1951.0, "end": 1956.0, "text": " because yeah, it's really a cubic relationship.", "tokens": [50364, 570, 1338, 11, 309, 311, 534, 257, 28733, 2480, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1606227057320731, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.29526665806770325}, {"id": 328, "seek": 195100, "start": 1956.0, "end": 1964.0, "text": " If you have the size of your voxels, your memory usage increases eightfold.", "tokens": [50614, 759, 291, 362, 264, 2744, 295, 428, 1650, 87, 1625, 11, 428, 4675, 14924, 8637, 3180, 18353, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1606227057320731, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.29526665806770325}, {"id": 329, "seek": 195100, "start": 1964.0, "end": 1972.0, "text": " So, but the good thing about the construction sector, as opposed to let's say general purpose CAD,", "tokens": [51014, 407, 11, 457, 264, 665, 551, 466, 264, 6435, 6977, 11, 382, 8851, 281, 718, 311, 584, 2674, 4334, 41143, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1606227057320731, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.29526665806770325}, {"id": 330, "seek": 195100, "start": 1972.0, "end": 1976.0, "text": " is well, it all relates to us human bodies.", "tokens": [51414, 307, 731, 11, 309, 439, 16155, 281, 505, 1952, 7510, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1606227057320731, "compression_ratio": 1.4378378378378378, "no_speech_prob": 0.29526665806770325}, {"id": 331, "seek": 197600, "start": 1976.0, "end": 1982.0, "text": " So we're pretty sure about, let's say, the size of the geometries we're going to expect.", "tokens": [50364, 407, 321, 434, 1238, 988, 466, 11, 718, 311, 584, 11, 264, 2744, 295, 264, 12956, 2244, 321, 434, 516, 281, 2066, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12171074196144387, "compression_ratio": 1.47979797979798, "no_speech_prob": 0.011020475067198277}, {"id": 332, "seek": 197600, "start": 1982.0, "end": 1992.0, "text": " And yeah, for that kind of reason, I also didn't create an optimization step to find the optimal voxel size,", "tokens": [50664, 400, 1338, 11, 337, 300, 733, 295, 1778, 11, 286, 611, 994, 380, 1884, 364, 19618, 1823, 281, 915, 264, 16252, 1650, 87, 338, 2744, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12171074196144387, "compression_ratio": 1.47979797979798, "no_speech_prob": 0.011020475067198277}, {"id": 333, "seek": 197600, "start": 1992.0, "end": 1995.0, "text": " mostly just five centimeters.", "tokens": [51164, 5240, 445, 1732, 23300, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12171074196144387, "compression_ratio": 1.47979797979798, "no_speech_prob": 0.011020475067198277}, {"id": 334, "seek": 197600, "start": 1995.0, "end": 1998.0, "text": " Okay, so thank you very much.", "tokens": [51314, 1033, 11, 370, 1309, 291, 588, 709, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12171074196144387, "compression_ratio": 1.47979797979798, "no_speech_prob": 0.011020475067198277}, {"id": 335, "seek": 197600, "start": 1998.0, "end": 2001.0, "text": " We're going and that was excellent.", "tokens": [51464, 492, 434, 516, 293, 300, 390, 7103, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12171074196144387, "compression_ratio": 1.47979797979798, "no_speech_prob": 0.011020475067198277}, {"id": 336, "seek": 200600, "start": 2006.0, "end": 2008.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.542109489440918, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.9931252002716064}], "language": "en"}