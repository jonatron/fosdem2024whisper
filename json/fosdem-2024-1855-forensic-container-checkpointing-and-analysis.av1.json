{"text": " Thank you. Yeah, thank you. So welcome to my session for forensic container, check pointing and analysis. So my name is Adran Reber. I worked at Red Hat since 2015. I'm involved in process migration. What's the basis for container check pointing now? I guess now 13 years now. Everything I'm talking about today is about CreeW, Checkpoint Restore and User Space, a low level tool. I'm involved there for a long time. And I'm focusing on container migration since 2015 and forensic container analysis is one use case of the overall container migration topic. So this talk will look something like this. I will give a bit of background about the tools, who uses Checkpoint Restore currently, who uses CreeW, how is it used, the use cases. I will go through a couple of them. Then I will talk about the title of the talk, forensic container analysis. This is basically just a demo. So maybe it fails. And then I will talk a bit about the future of Checkpoint Restore, especially with focus on Kubernetes today. Okay, so Checkpoint Restore and User Space CreeW, that's the tool we're using today to do the check pointing and create the images for the analysis. And the reason why it's called Checkpoint Restore and User Space is because Checkpoint Restore is a technology which exists on operating system and Linux for a long time. And previous approaches were either in the kernel, that's why this one is called in User Space, or they required some preloading. So you would do an LD preload and then some library would intercept everything you do. And then later the Restore, something would try to create the steps you did before. CreeW is different. CreeW is something what you would call a completely transparent Checkpoint Restore utility. It doesn't require any preparation of the tool. You can just point it at any process and you can checkpoint it if the process is not using any resources CreeW cannot handle. And then you can restore it on the same or on another machine. CreeW was developed with the goal to use existing kernel interfaces as much as possible. Over the years there were additional kernel interfaces introduced to support CreeW. None of these interfaces are specific to Checkpoint Restore, so there are always multiple different users using those new interfaces. So the most changes CreeW did to the kernel are not Checkpoint Restore specific. Most of the time it's just how to get more information about the running process out of the kernel. There are multiple integrations of Checkpoint Restore in different projects, container run times, container engines, container orchestrations. And the first I have to mention here is OpenVz. It's something I never used personally, but that's the group behind CreeW, so they developed CreeW to be able to live migrate their containers. They were doing containers before it was container, so it's something which existed for a very long time. And at some point I'm not sure about the history exactly, but they came up with CreeW to have a Linux tool which works for everybody and not just for them. Another interesting integration of CreeW is in-bored. This is Google's container engine, what they use in-house to run all their tasks. And although the upstream CreeW developers don't have direct contact with Google, we know from conferences how Google uses it, so basically what they do, they can migrate containers and they mostly do low priority containers. So if you have a node, there's something running on it. It needs more resources than before CreeW. They just killed the low priority container and restarted the work somewhere else from the beginning. And with the integration of CreeW, now they can just move it from one host to another host. So this is... And as far as we know, they're using it at least since 2017. I think that's when we saw the first presentations from Google how they use CreeW. Then there's an integration for a long time in CXT, and I probably have to mention in just today. It's also integrated there. Also for a very long time, it's integrated in Dockoff 4. Also, I don't know, maybe also 2016, something like this. I've worked for a couple of years to integrate checkpoint restore support in Portman, so you can also, using Portman, checkpoint restore containers migrate them from one host to another host. And the thing which I'm currently working on, which I started around, people talk to me about how they think to use container migration, container checkpointing, and the simplest one is maybe reboot in safe state. So you have your system running with a container on it, and you have a blue kernel there, and it has some problem, and you want to update the kernel. But your container takes a long time to start. You're not really happy doing a reboot because your application is down for a long time. So with GRI, you can update the kernel, then you can create a checkpoint, basically an image, a stateful image of your container, write it to disk, reboot your host, and then it comes up with a new kernel. This time it's green. You restore the container, and it's running pretty fast, much faster than waiting for all the initialization. So you can quickly do reboot of your systems using checkpoint restore. Another one, it's similar to the first one. And also people have been talking to me about this. So this is also used in production. You have a container which takes a long time to start, the one I've been told about. It takes like 10 minutes until everything is initialized. So, and they have a service which they want to sell to customers, and they want to have the customers fast access to the containers. They don't want them to wait for 10 minutes. So what they do is they initialize the container once, create a checkpoint, write it to disk, and then they can immediately start in matter of seconds services from this pre-initialized container, and their customers don't have to wait 10 minutes. It's just in 10, 20 seconds, something like this. The combination of those two use cases is the container live migration. So we have two hosts. We have the container on one host. And it's hopefully stateful because if the container is not stateful, the whole migration thing of container doesn't make much sense in the end. For the forensic use case, it can be a stateless container as well because you can still analyze it. So what is the same again? We create a copy of the container, write it to disk, and then we can create one or multiple copies on the destination system. And the original container can keep on running or not. So this is really up to you how you want to use checkpoint restore today. Another interesting thing people are talking about are spot instances. Spot instances are usually something which is cheap, but they go away. Those VMs, like, I don't know, you have two minutes warning, and people are using checkpoint restore there in combination with pre-use. So you get a signal that your VM is going down. You create a checkpoint, write it somewhere, and then you can continue to run your workload on another system without losing any work or without having to do any restart or long down times or whatever you would like to avoid. And something which came up recently is people are interested to use it for AI training. So you have your AI training running somewhere with a GPU, and for some reason it's aborted, or you have to make space on the node, and with a combination of checkpoint restore you can create a checkpoint of your container. In this case it's less about migration. It's just creating a copy of your state somewhere so you can continue to run it later, or even migrate. It really depends on what you want to do there. The interesting thing here is I mentioned previously that the CRIU cannot handle all resources, and GPUs are kind of the resources which CRIU cannot always handle. We are lucky that AMD came up to us and they actually implemented support to migrate or checkpoint restore applications which are running on the host CPU and at the same time on the AMD GPU. For NVIDIA, we don't know if that exists. We have heard people talking about it. I think Microsoft mentioned it at some point that they might have been using CRIU in combination with NVIDIA, but nobody talked to the CRIU Upscreen Project at least. So we are not aware that people are doing, but we kind of expect that people are using CRIU in combination with NVIDIA GPUs. So the next one is then forensic container analysis and my demo. So my demo is based on a container. I am using OpenHPC as a base. So the container is a stateful container. It is calculating pi and memory which we can hopefully later find in the container. So to create a checkpoint, there is a complicated way to do it. So currently checkpoint restoring Kubernetes is only a Q-Bled interface. Officially, the reason is because checkpoint restore writes your container, every memory page to disk. There is the potential, the risk that you now have private keys, random numbers, passwords, now all written on disk. The checkpoint is only readable by root. So the situation doesn't really change because if you root on a machine, you could also extract the memory, but for now, because it's not clear how to handle this or how we want to continue in the Kubernetes community. With this feature, it's just a Q-Bled only interface and it looks like this. I've also written a QCTL interface. It looks like this. It creates also the checkpoint archive. It's basically doing the same. It's just wiring all the calls completely to QCTL instead just a Q-Bled. So now we have a checkpoint and there's a tool called checkpoint control, which was mainly developed by Google Summer of Code students this year. So we're very happy for this help, which they did. And in its simplest form, checkpoint control will give you, I'm just going to make the font a little bit smaller for a short time here, and it gives me just some basic information about the container. I see it's the container's name counter. It's based on that image, ID, runtime, when it was created, the engine cryo. Checkpoint size is basically the size of all memory pages, and root fsdif size is the size of all files which have changed compared to the base image. So let's unpack the checkpoint archive to see some details. And it's just a car archive, so it's easy to unpack. I'm just going to move this to the top again. And there are a couple of files which now were created by the container engine. And so we have bind mounts. This is just some information that is necessary for restore, because we need to restore all the mounts from the outside of the container to the inside, and we need to know if it's a file or a directory, because the container engine doesn't want to remember if it's a container or if it's a directory or a file, but we need it for the restore. Configdump has some information. dump.loc has what cryo tells us. In this case, it doesn't matter because it works. Then we have the root fsdif file. This is all the files which have changed compared to the base image we saw previously. In the checkpoint directory is the one created by cryo. So that has the actual process information. So if we go there, this is the normal thing which cryo does is all, most of them are protobuf files generated by cryo here. And cryo comes with a tool called crit, crit, cryo image tool, and it has a parameter show, and we can have a look at one of those files. Let's look at UTS namespace information here. It basically just tells us the namespace, the UTS namespace has hostname counters, but we can also look at a file called pstree. This is the process tree. This one, so it starts to get difficult to understand what's going on. I have a couple of commands prepared. So I see with this one, we have four PIDs running in our container, 140, 40, 142. It's important to know this is the view from inside of the PID namespace, so cryo always remembers the PIDs from within the PID namespace and tries to recreate those PIDs later. If I looked at my process, which is maybe still running, it should, I can see here, basically, it's not hard to read, but those are the four, where's my mouse? I don't know. Oh, there it is. You see, so this is the PID one of the container, and this is probably 41, 42, 43, I guess, and you can see here it has other PIDs on the outside, because that's the view from the outside of the PID namespace. So it's important if you ever do an analysis of your checkpoint, it's always the PIDs from within the PID namespace. There's also for each process, we have a file called core, with the core information about the process. Let's have a quick look at this one, and it basically has the registers, the value of all the registers, floating point and much more stuff, and the end you see, the policies and the name of the process, and using the name of the process, I think I can get a list of what processes are running inside of my container and what they do, and you see the first one is called bash login wrapper, bash, pi and t, and if I compare this again with what's currently, I don't know, it's the wrong command, with here, again, I see it's again, bash login wrapper, bash, the Python code and the t command. So looking at these files, I can find out everything about the processes here, so there's a lot of information in here, and if you're looking for something specific, it might be difficult, but the information is here. There are additional files, for example, the tempfs.dev files, those are maybe also interesting files. Those are basically, let's have a look at those. Something like this is probably the right one. And you see, this is the content of a tempfs, so every tempfs which is not bind-mounted from the host, which is native to the container, KreeU kind of puts it into the image, it's basically just a tar, so every tempfs which was in your container is now also here, you can find all the information here. This looks like this was slash dev. What else do we have here? Let's have a look. Yeah, I think that's okay. And previously, I also wrote some, my secret data into the memory pages, and I can actually find this memory again here, this information again in the pages files. The pages images are, those are not, protobuf files are raw dumps of the memory, this is all the memory which was written to disk, and I can again find the information I've written to memory here. So if I know what I'm looking for, it's easy, if I'm looking for a password, then I have to pause it all through and maybe find a useful string in there, but this is just to show you, you have access to all memory pages, and they are now all on disk, and it can be easily analyzed, or at least look at. So if, okay, let's, I also wrote a couple of files to my container, I mentioned this here, the root of sdif tar, let's unpack that one. And so now this contains three files, so these are all files which have changed compared to the base image of the container, and this is just really simple, a file which is created, it just has the, it just contains the name of the file itself, but it's just to show you, if you want to look at content which has changed in the container, you will find it here in this root of sdif tar, which contains all the changed files. And if you think this is all too much work, then I already mentioned checkpoint control before, and it's even, has even more possibilities than what I've shown you, most of the things I've done here manually, the tool, thanks to our Google Summer of Code students, can at this point do. So let's have a look at checkpoint control inspect of the, and the $CP variable is basically pointing to the tar archive, so the tool is now unpacking the tar archive and giving us all the information. And what we see here now is this information we saw before, so it's just some basic information about the image, where it was, how big the checkpoint size is, then we see CreeO dump statistics, this is basically the time CreeO needs to write the checkpoint to this. You see how many memory pages were scanned, if they should be written to this, how many memory pages were actually written to this, and then we see the full process command line. We see all the environments variables of all processes running in our container, and next one even more variables, and more and more, and at some point there's, I think it even contains the open files, too many variables here. You see, now we see the open files, you see the one has open def null, and then two pipes, and then the working directory, and open sockets, you even see that that's the socket I've been talking to, and then we go to the process here, and then we see all the mounts we need, this is also important for restoring the process later. So I guess that's the end of my demo, so checkpoint control was the tool I was using, I was using CreeO image tool to have a look at the content of the images, and then I was using grep to find my secret key from the memory pages. So one thing I didn't show, you can use, there's a tool in CreeO which converts the checkpoint images to core dump files, and then you can use gdb to look at them, it's basically the same, you see the registers and the call stack and things like this, might also be interesting for a couple of people, to what's next, especially with focus on Kubernetes, so I've shown that I have a kubectl checkpoint kind of working, that's an open pull request, it's not being actively discussed at this point, but it's there so if somebody needs it, it can be easily used, maybe the next step would be to integrate checkpoint for complete parts, I've implemented this a couple of years ago, it's pretty simple, we just do a loop over all containers in a pod, we just create some metadata for the pod and then we can recreate it, so this is not a technical challenge, it's just most things at this point are how to get it in a way into Kubernetes which is sustainable and makes sense, and then maybe we have something like kubectl migrate, so we don't have to do it manually, maybe at some point the scheduler will decide, let's move this pod somewhere else, and one thing, so the image format I'm using is currently just a tar file, I came up with, but it's not a standard, so container D uses something else, I looked at the container D format, it's applicable for what I was looking at, but the problem was they were using internal protobuf structures, I didn't thought make sense to have in a public checkpoint, in theory, checkpointing on container D and restoring in cryo should not be a problem, but at this point we don't have a common image standard, I tried to start a discussion here, but it also didn't continue unfortunately, so with this I'm at the end, so I showed you that cryo can checkpoint containers, I haven't shown the restore part, but it works, it integrated in different container run times, it's used in production by different companies at this point, use cases are things like reboot into new kernel and save states, multiple copies, container migration, spot instances, AI learning support for GPUs there, and this is all available in Kubernetes under the forensic container checkpoint in cap 2008. So, I'm at the end, thank you, any questions? Thank you. Oh, sorry. Sorry, please be quiet, we cannot hear the questions. You mentioned GPUs are something you can't handle, what are the other big resources that... So basically cryo cannot handle anything that's external to the kernel, so InfiniBand is one which comes up in high performance computing always, so everything where you have a state in additional hardware, you need some way to extract it, you need to extract the state so you can later restore it, so... And just create a text in the process, is that stuff that fails? Exactly, it fails, Daniel. So currently the people I've talked to today, they are just interested in finding out if there has been an attack or if there is an attack ongoing, things like this, and then maybe at some point, maybe if you can have a couple of checkpoints and figure out, okay, this looks like an attack pattern, maybe detect it automatically using check pointing, this would be maybe something in the future, but finding a possible attack is one of the main motivations for people for the forensic use case. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50714], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 1, "seek": 0, "start": 7.0, "end": 9.0, "text": " Yeah, thank you.", "tokens": [50714, 865, 11, 1309, 291, 13, 50814], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 2, "seek": 0, "start": 9.0, "end": 12.0, "text": " So welcome to my session for forensic container,", "tokens": [50814, 407, 2928, 281, 452, 5481, 337, 39084, 10129, 11, 50964], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 3, "seek": 0, "start": 12.0, "end": 15.0, "text": " check pointing and analysis.", "tokens": [50964, 1520, 12166, 293, 5215, 13, 51114], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 4, "seek": 0, "start": 15.0, "end": 17.0, "text": " So my name is Adran Reber.", "tokens": [51114, 407, 452, 1315, 307, 1999, 4257, 1300, 607, 13, 51214], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 5, "seek": 0, "start": 17.0, "end": 19.0, "text": " I worked at Red Hat since 2015.", "tokens": [51214, 286, 2732, 412, 4477, 15867, 1670, 7546, 13, 51314], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 6, "seek": 0, "start": 19.0, "end": 22.0, "text": " I'm involved in process migration.", "tokens": [51314, 286, 478, 3288, 294, 1399, 17011, 13, 51464], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 7, "seek": 0, "start": 22.0, "end": 26.0, "text": " What's the basis for container check pointing now?", "tokens": [51464, 708, 311, 264, 5143, 337, 10129, 1520, 12166, 586, 30, 51664], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 8, "seek": 0, "start": 26.0, "end": 28.0, "text": " I guess now 13 years now.", "tokens": [51664, 286, 2041, 586, 3705, 924, 586, 13, 51764], "temperature": 0.0, "avg_logprob": -0.35260402725403567, "compression_ratio": 1.4526315789473685, "no_speech_prob": 0.24737125635147095}, {"id": 9, "seek": 2800, "start": 28.0, "end": 31.0, "text": " Everything I'm talking about today is about CreeW,", "tokens": [50364, 5471, 286, 478, 1417, 466, 965, 307, 466, 383, 701, 54, 11, 50514], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 10, "seek": 2800, "start": 31.0, "end": 34.0, "text": " Checkpoint Restore and User Space, a low level tool.", "tokens": [50514, 6881, 6053, 13094, 418, 293, 32127, 8705, 11, 257, 2295, 1496, 2290, 13, 50664], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 11, "seek": 2800, "start": 34.0, "end": 37.0, "text": " I'm involved there for a long time.", "tokens": [50664, 286, 478, 3288, 456, 337, 257, 938, 565, 13, 50814], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 12, "seek": 2800, "start": 37.0, "end": 42.0, "text": " And I'm focusing on container migration since 2015", "tokens": [50814, 400, 286, 478, 8416, 322, 10129, 17011, 1670, 7546, 51064], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 13, "seek": 2800, "start": 42.0, "end": 47.0, "text": " and forensic container analysis is one use case", "tokens": [51064, 293, 39084, 10129, 5215, 307, 472, 764, 1389, 51314], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 14, "seek": 2800, "start": 47.0, "end": 54.0, "text": " of the overall container migration topic.", "tokens": [51314, 295, 264, 4787, 10129, 17011, 4829, 13, 51664], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 15, "seek": 2800, "start": 54.0, "end": 56.0, "text": " So this talk will look something like this.", "tokens": [51664, 407, 341, 751, 486, 574, 746, 411, 341, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19187136730515814, "compression_ratio": 1.514018691588785, "no_speech_prob": 0.003110480960458517}, {"id": 16, "seek": 5600, "start": 56.0, "end": 60.0, "text": " I will give a bit of background about the tools,", "tokens": [50364, 286, 486, 976, 257, 857, 295, 3678, 466, 264, 3873, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 17, "seek": 5600, "start": 60.0, "end": 63.0, "text": " who uses Checkpoint Restore currently, who uses CreeW,", "tokens": [50564, 567, 4960, 6881, 6053, 13094, 418, 4362, 11, 567, 4960, 383, 701, 54, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 18, "seek": 5600, "start": 63.0, "end": 66.0, "text": " how is it used, the use cases.", "tokens": [50714, 577, 307, 309, 1143, 11, 264, 764, 3331, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 19, "seek": 5600, "start": 66.0, "end": 68.0, "text": " I will go through a couple of them.", "tokens": [50864, 286, 486, 352, 807, 257, 1916, 295, 552, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 20, "seek": 5600, "start": 68.0, "end": 71.0, "text": " Then I will talk about the title of the talk,", "tokens": [50964, 1396, 286, 486, 751, 466, 264, 4876, 295, 264, 751, 11, 51114], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 21, "seek": 5600, "start": 71.0, "end": 72.0, "text": " forensic container analysis.", "tokens": [51114, 39084, 10129, 5215, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 22, "seek": 5600, "start": 72.0, "end": 75.0, "text": " This is basically just a demo.", "tokens": [51164, 639, 307, 1936, 445, 257, 10723, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 23, "seek": 5600, "start": 75.0, "end": 77.0, "text": " So maybe it fails.", "tokens": [51314, 407, 1310, 309, 18199, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 24, "seek": 5600, "start": 77.0, "end": 81.0, "text": " And then I will talk a bit about the future of Checkpoint Restore,", "tokens": [51414, 400, 550, 286, 486, 751, 257, 857, 466, 264, 2027, 295, 6881, 6053, 13094, 418, 11, 51614], "temperature": 0.0, "avg_logprob": -0.09949889273013708, "compression_ratio": 1.699530516431925, "no_speech_prob": 0.025460312142968178}, {"id": 25, "seek": 8100, "start": 81.0, "end": 85.0, "text": " especially with focus on Kubernetes today.", "tokens": [50364, 2318, 365, 1879, 322, 23145, 965, 13, 50564], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 26, "seek": 8100, "start": 85.0, "end": 90.0, "text": " Okay, so Checkpoint Restore and User Space CreeW,", "tokens": [50564, 1033, 11, 370, 6881, 6053, 13094, 418, 293, 32127, 8705, 383, 701, 54, 11, 50814], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 27, "seek": 8100, "start": 90.0, "end": 95.0, "text": " that's the tool we're using today to do the check pointing", "tokens": [50814, 300, 311, 264, 2290, 321, 434, 1228, 965, 281, 360, 264, 1520, 12166, 51064], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 28, "seek": 8100, "start": 95.0, "end": 99.0, "text": " and create the images for the analysis.", "tokens": [51064, 293, 1884, 264, 5267, 337, 264, 5215, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 29, "seek": 8100, "start": 99.0, "end": 103.0, "text": " And the reason why it's called Checkpoint Restore and User Space", "tokens": [51264, 400, 264, 1778, 983, 309, 311, 1219, 6881, 6053, 13094, 418, 293, 32127, 8705, 51464], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 30, "seek": 8100, "start": 103.0, "end": 106.0, "text": " is because Checkpoint Restore is a technology", "tokens": [51464, 307, 570, 6881, 6053, 13094, 418, 307, 257, 2899, 51614], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 31, "seek": 8100, "start": 106.0, "end": 110.0, "text": " which exists on operating system and Linux for a long time.", "tokens": [51614, 597, 8198, 322, 7447, 1185, 293, 18734, 337, 257, 938, 565, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10984303874354209, "compression_ratio": 1.6682027649769586, "no_speech_prob": 0.013797278515994549}, {"id": 32, "seek": 11000, "start": 110.0, "end": 114.0, "text": " And previous approaches were either in the kernel,", "tokens": [50364, 400, 3894, 11587, 645, 2139, 294, 264, 28256, 11, 50564], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 33, "seek": 11000, "start": 114.0, "end": 117.0, "text": " that's why this one is called in User Space,", "tokens": [50564, 300, 311, 983, 341, 472, 307, 1219, 294, 32127, 8705, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 34, "seek": 11000, "start": 117.0, "end": 120.0, "text": " or they required some preloading.", "tokens": [50714, 420, 436, 4739, 512, 659, 2907, 278, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 35, "seek": 11000, "start": 120.0, "end": 123.0, "text": " So you would do an LD preload and then some library", "tokens": [50864, 407, 291, 576, 360, 364, 33936, 659, 2907, 293, 550, 512, 6405, 51014], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 36, "seek": 11000, "start": 123.0, "end": 125.0, "text": " would intercept everything you do.", "tokens": [51014, 576, 24700, 1203, 291, 360, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 37, "seek": 11000, "start": 125.0, "end": 127.0, "text": " And then later the Restore,", "tokens": [51114, 400, 550, 1780, 264, 13094, 418, 11, 51214], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 38, "seek": 11000, "start": 127.0, "end": 131.0, "text": " something would try to create the steps you did before.", "tokens": [51214, 746, 576, 853, 281, 1884, 264, 4439, 291, 630, 949, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 39, "seek": 11000, "start": 131.0, "end": 133.0, "text": " CreeW is different.", "tokens": [51414, 383, 701, 54, 307, 819, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 40, "seek": 11000, "start": 133.0, "end": 135.0, "text": " CreeW is something what you would call", "tokens": [51514, 383, 701, 54, 307, 746, 437, 291, 576, 818, 51614], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 41, "seek": 11000, "start": 135.0, "end": 138.0, "text": " a completely transparent Checkpoint Restore utility.", "tokens": [51614, 257, 2584, 12737, 6881, 6053, 13094, 418, 14877, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09306763735684481, "compression_ratio": 1.6747967479674797, "no_speech_prob": 0.00553506426513195}, {"id": 42, "seek": 13800, "start": 139.0, "end": 142.0, "text": " It doesn't require any preparation of the tool.", "tokens": [50414, 467, 1177, 380, 3651, 604, 13081, 295, 264, 2290, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 43, "seek": 13800, "start": 142.0, "end": 146.0, "text": " You can just point it at any process and you can checkpoint it", "tokens": [50564, 509, 393, 445, 935, 309, 412, 604, 1399, 293, 291, 393, 1520, 6053, 309, 50764], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 44, "seek": 13800, "start": 146.0, "end": 150.0, "text": " if the process is not using any resources CreeW cannot handle.", "tokens": [50764, 498, 264, 1399, 307, 406, 1228, 604, 3593, 383, 701, 54, 2644, 4813, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 45, "seek": 13800, "start": 150.0, "end": 156.0, "text": " And then you can restore it on the same or on another machine.", "tokens": [50964, 400, 550, 291, 393, 15227, 309, 322, 264, 912, 420, 322, 1071, 3479, 13, 51264], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 46, "seek": 13800, "start": 156.0, "end": 163.0, "text": " CreeW was developed with the goal to use existing kernel interfaces", "tokens": [51264, 383, 701, 54, 390, 4743, 365, 264, 3387, 281, 764, 6741, 28256, 28416, 51614], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 47, "seek": 13800, "start": 163.0, "end": 165.0, "text": " as much as possible.", "tokens": [51614, 382, 709, 382, 1944, 13, 51714], "temperature": 0.0, "avg_logprob": -0.08827518281482515, "compression_ratio": 1.608910891089109, "no_speech_prob": 0.0028373030945658684}, {"id": 48, "seek": 16500, "start": 165.0, "end": 168.0, "text": " Over the years there were additional kernel interfaces introduced", "tokens": [50364, 4886, 264, 924, 456, 645, 4497, 28256, 28416, 7268, 50514], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 49, "seek": 16500, "start": 168.0, "end": 170.0, "text": " to support CreeW.", "tokens": [50514, 281, 1406, 383, 701, 54, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 50, "seek": 16500, "start": 170.0, "end": 173.0, "text": " None of these interfaces are specific to Checkpoint Restore,", "tokens": [50614, 14492, 295, 613, 28416, 366, 2685, 281, 6881, 6053, 13094, 418, 11, 50764], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 51, "seek": 16500, "start": 173.0, "end": 179.0, "text": " so there are always multiple different users using those new interfaces.", "tokens": [50764, 370, 456, 366, 1009, 3866, 819, 5022, 1228, 729, 777, 28416, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 52, "seek": 16500, "start": 179.0, "end": 182.0, "text": " So the most changes CreeW did to the kernel", "tokens": [51064, 407, 264, 881, 2962, 383, 701, 54, 630, 281, 264, 28256, 51214], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 53, "seek": 16500, "start": 182.0, "end": 184.0, "text": " are not Checkpoint Restore specific.", "tokens": [51214, 366, 406, 6881, 6053, 13094, 418, 2685, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 54, "seek": 16500, "start": 184.0, "end": 188.0, "text": " Most of the time it's just how to get more information", "tokens": [51314, 4534, 295, 264, 565, 309, 311, 445, 577, 281, 483, 544, 1589, 51514], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 55, "seek": 16500, "start": 188.0, "end": 191.0, "text": " about the running process out of the kernel.", "tokens": [51514, 466, 264, 2614, 1399, 484, 295, 264, 28256, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10350684529727268, "compression_ratio": 1.7081545064377683, "no_speech_prob": 0.036058273166418076}, {"id": 56, "seek": 19100, "start": 192.0, "end": 195.0, "text": " There are multiple integrations of Checkpoint Restore", "tokens": [50414, 821, 366, 3866, 3572, 763, 295, 6881, 6053, 13094, 418, 50564], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 57, "seek": 19100, "start": 195.0, "end": 201.0, "text": " in different projects, container run times, container engines,", "tokens": [50564, 294, 819, 4455, 11, 10129, 1190, 1413, 11, 10129, 12982, 11, 50864], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 58, "seek": 19100, "start": 201.0, "end": 203.0, "text": " container orchestrations.", "tokens": [50864, 10129, 14161, 12154, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 59, "seek": 19100, "start": 203.0, "end": 206.0, "text": " And the first I have to mention here is OpenVz.", "tokens": [50964, 400, 264, 700, 286, 362, 281, 2152, 510, 307, 7238, 53, 89, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 60, "seek": 19100, "start": 206.0, "end": 208.0, "text": " It's something I never used personally,", "tokens": [51114, 467, 311, 746, 286, 1128, 1143, 5665, 11, 51214], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 61, "seek": 19100, "start": 208.0, "end": 210.0, "text": " but that's the group behind CreeW,", "tokens": [51214, 457, 300, 311, 264, 1594, 2261, 383, 701, 54, 11, 51314], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 62, "seek": 19100, "start": 210.0, "end": 216.0, "text": " so they developed CreeW to be able to live migrate their containers.", "tokens": [51314, 370, 436, 4743, 383, 701, 54, 281, 312, 1075, 281, 1621, 31821, 641, 17089, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 63, "seek": 19100, "start": 216.0, "end": 218.0, "text": " They were doing containers before it was container,", "tokens": [51614, 814, 645, 884, 17089, 949, 309, 390, 10129, 11, 51714], "temperature": 0.0, "avg_logprob": -0.08214437718294104, "compression_ratio": 1.6355932203389831, "no_speech_prob": 0.0018937193090096116}, {"id": 64, "seek": 21800, "start": 218.0, "end": 221.0, "text": " so it's something which existed for a very long time.", "tokens": [50364, 370, 309, 311, 746, 597, 13135, 337, 257, 588, 938, 565, 13, 50514], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 65, "seek": 21800, "start": 221.0, "end": 225.0, "text": " And at some point I'm not sure about the history exactly,", "tokens": [50514, 400, 412, 512, 935, 286, 478, 406, 988, 466, 264, 2503, 2293, 11, 50714], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 66, "seek": 21800, "start": 225.0, "end": 228.0, "text": " but they came up with CreeW to have a Linux tool", "tokens": [50714, 457, 436, 1361, 493, 365, 383, 701, 54, 281, 362, 257, 18734, 2290, 50864], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 67, "seek": 21800, "start": 228.0, "end": 232.0, "text": " which works for everybody and not just for them.", "tokens": [50864, 597, 1985, 337, 2201, 293, 406, 445, 337, 552, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 68, "seek": 21800, "start": 232.0, "end": 237.0, "text": " Another interesting integration of CreeW is in-bored.", "tokens": [51064, 3996, 1880, 10980, 295, 383, 701, 54, 307, 294, 12, 65, 2769, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 69, "seek": 21800, "start": 237.0, "end": 242.0, "text": " This is Google's container engine, what they use in-house", "tokens": [51314, 639, 307, 3329, 311, 10129, 2848, 11, 437, 436, 764, 294, 12, 6410, 51564], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 70, "seek": 21800, "start": 242.0, "end": 244.0, "text": " to run all their tasks.", "tokens": [51564, 281, 1190, 439, 641, 9608, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09835251172383626, "compression_ratio": 1.5265486725663717, "no_speech_prob": 0.005044877994805574}, {"id": 71, "seek": 24400, "start": 245.0, "end": 250.0, "text": " And although the upstream CreeW developers", "tokens": [50414, 400, 4878, 264, 33915, 383, 701, 54, 8849, 50664], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 72, "seek": 24400, "start": 250.0, "end": 252.0, "text": " don't have direct contact with Google,", "tokens": [50664, 500, 380, 362, 2047, 3385, 365, 3329, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 73, "seek": 24400, "start": 252.0, "end": 255.0, "text": " we know from conferences how Google uses it,", "tokens": [50764, 321, 458, 490, 22032, 577, 3329, 4960, 309, 11, 50914], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 74, "seek": 24400, "start": 255.0, "end": 260.0, "text": " so basically what they do, they can migrate containers", "tokens": [50914, 370, 1936, 437, 436, 360, 11, 436, 393, 31821, 17089, 51164], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 75, "seek": 24400, "start": 260.0, "end": 265.0, "text": " and they mostly do low priority containers.", "tokens": [51164, 293, 436, 5240, 360, 2295, 9365, 17089, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 76, "seek": 24400, "start": 265.0, "end": 267.0, "text": " So if you have a node, there's something running on it.", "tokens": [51414, 407, 498, 291, 362, 257, 9984, 11, 456, 311, 746, 2614, 322, 309, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 77, "seek": 24400, "start": 267.0, "end": 270.0, "text": " It needs more resources than before CreeW.", "tokens": [51514, 467, 2203, 544, 3593, 813, 949, 383, 701, 54, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09570215983563159, "compression_ratio": 1.528301886792453, "no_speech_prob": 0.0031676124781370163}, {"id": 78, "seek": 27000, "start": 270.0, "end": 273.0, "text": " They just killed the low priority container", "tokens": [50364, 814, 445, 4652, 264, 2295, 9365, 10129, 50514], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 79, "seek": 27000, "start": 273.0, "end": 276.0, "text": " and restarted the work somewhere else from the beginning.", "tokens": [50514, 293, 21022, 292, 264, 589, 4079, 1646, 490, 264, 2863, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 80, "seek": 27000, "start": 276.0, "end": 278.0, "text": " And with the integration of CreeW,", "tokens": [50664, 400, 365, 264, 10980, 295, 383, 701, 54, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 81, "seek": 27000, "start": 278.0, "end": 281.0, "text": " now they can just move it from one host to another host.", "tokens": [50764, 586, 436, 393, 445, 1286, 309, 490, 472, 3975, 281, 1071, 3975, 13, 50914], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 82, "seek": 27000, "start": 281.0, "end": 282.0, "text": " So this is...", "tokens": [50914, 407, 341, 307, 485, 50964], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 83, "seek": 27000, "start": 282.0, "end": 286.0, "text": " And as far as we know, they're using it at least since 2017.", "tokens": [50964, 400, 382, 1400, 382, 321, 458, 11, 436, 434, 1228, 309, 412, 1935, 1670, 6591, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 84, "seek": 27000, "start": 286.0, "end": 291.0, "text": " I think that's when we saw the first presentations from Google", "tokens": [51164, 286, 519, 300, 311, 562, 321, 1866, 264, 700, 18964, 490, 3329, 51414], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 85, "seek": 27000, "start": 291.0, "end": 293.0, "text": " how they use CreeW.", "tokens": [51414, 577, 436, 764, 383, 701, 54, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 86, "seek": 27000, "start": 293.0, "end": 298.0, "text": " Then there's an integration for a long time in CXT,", "tokens": [51514, 1396, 456, 311, 364, 10980, 337, 257, 938, 565, 294, 383, 55, 51, 11, 51764], "temperature": 0.0, "avg_logprob": -0.09762634851236258, "compression_ratio": 1.580392156862745, "no_speech_prob": 0.020251736044883728}, {"id": 87, "seek": 29800, "start": 298.0, "end": 301.0, "text": " and I probably have to mention in just today.", "tokens": [50364, 293, 286, 1391, 362, 281, 2152, 294, 445, 965, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 88, "seek": 29800, "start": 301.0, "end": 304.0, "text": " It's also integrated there.", "tokens": [50514, 467, 311, 611, 10919, 456, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 89, "seek": 29800, "start": 304.0, "end": 310.0, "text": " Also for a very long time, it's integrated in Dockoff 4.", "tokens": [50664, 2743, 337, 257, 588, 938, 565, 11, 309, 311, 10919, 294, 1144, 547, 4506, 1017, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 90, "seek": 29800, "start": 310.0, "end": 315.0, "text": " Also, I don't know, maybe also 2016, something like this.", "tokens": [50964, 2743, 11, 286, 500, 380, 458, 11, 1310, 611, 6549, 11, 746, 411, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 91, "seek": 29800, "start": 315.0, "end": 317.0, "text": " I've worked for a couple of years", "tokens": [51214, 286, 600, 2732, 337, 257, 1916, 295, 924, 51314], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 92, "seek": 29800, "start": 317.0, "end": 320.0, "text": " to integrate checkpoint restore support in Portman,", "tokens": [51314, 281, 13365, 42269, 15227, 1406, 294, 6733, 1601, 11, 51464], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 93, "seek": 29800, "start": 320.0, "end": 322.0, "text": " so you can also, using Portman,", "tokens": [51464, 370, 291, 393, 611, 11, 1228, 6733, 1601, 11, 51564], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 94, "seek": 29800, "start": 322.0, "end": 325.0, "text": " checkpoint restore containers migrate them from one host", "tokens": [51564, 42269, 15227, 17089, 31821, 552, 490, 472, 3975, 51714], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 95, "seek": 29800, "start": 325.0, "end": 327.0, "text": " to another host.", "tokens": [51714, 281, 1071, 3975, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16564806983584449, "compression_ratio": 1.6033755274261603, "no_speech_prob": 0.006978404708206654}, {"id": 96, "seek": 32700, "start": 327.0, "end": 330.0, "text": " And the thing which I'm currently working on,", "tokens": [50364, 400, 264, 551, 597, 286, 478, 4362, 1364, 322, 11, 50514], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 97, "seek": 32700, "start": 330.0, "end": 332.0, "text": " which I started around,", "tokens": [50514, 597, 286, 1409, 926, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 98, "seek": 32700, "start": 332.0, "end": 336.0, "text": " people talk to me about how they think to use container migration,", "tokens": [50614, 561, 751, 281, 385, 466, 577, 436, 519, 281, 764, 10129, 17011, 11, 50814], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 99, "seek": 32700, "start": 336.0, "end": 338.0, "text": " container checkpointing,", "tokens": [50814, 10129, 42269, 278, 11, 50914], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 100, "seek": 32700, "start": 338.0, "end": 341.0, "text": " and the simplest one is maybe reboot in safe state.", "tokens": [50914, 293, 264, 22811, 472, 307, 1310, 33818, 294, 3273, 1785, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 101, "seek": 32700, "start": 341.0, "end": 345.0, "text": " So you have your system running with a container on it,", "tokens": [51064, 407, 291, 362, 428, 1185, 2614, 365, 257, 10129, 322, 309, 11, 51264], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 102, "seek": 32700, "start": 345.0, "end": 347.0, "text": " and you have a blue kernel there,", "tokens": [51264, 293, 291, 362, 257, 3344, 28256, 456, 11, 51364], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 103, "seek": 32700, "start": 347.0, "end": 350.0, "text": " and it has some problem, and you want to update the kernel.", "tokens": [51364, 293, 309, 575, 512, 1154, 11, 293, 291, 528, 281, 5623, 264, 28256, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 104, "seek": 32700, "start": 350.0, "end": 352.0, "text": " But your container takes a long time to start.", "tokens": [51514, 583, 428, 10129, 2516, 257, 938, 565, 281, 722, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 105, "seek": 32700, "start": 352.0, "end": 354.0, "text": " You're not really happy doing a reboot", "tokens": [51614, 509, 434, 406, 534, 2055, 884, 257, 33818, 51714], "temperature": 0.0, "avg_logprob": -0.08313446370964377, "compression_ratio": 1.713740458015267, "no_speech_prob": 0.004122531972825527}, {"id": 106, "seek": 35400, "start": 354.0, "end": 358.0, "text": " because your application is down for a long time.", "tokens": [50364, 570, 428, 3861, 307, 760, 337, 257, 938, 565, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 107, "seek": 35400, "start": 358.0, "end": 360.0, "text": " So with GRI, you can update the kernel,", "tokens": [50564, 407, 365, 460, 5577, 11, 291, 393, 5623, 264, 28256, 11, 50664], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 108, "seek": 35400, "start": 360.0, "end": 363.0, "text": " then you can create a checkpoint,", "tokens": [50664, 550, 291, 393, 1884, 257, 42269, 11, 50814], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 109, "seek": 35400, "start": 363.0, "end": 366.0, "text": " basically an image, a stateful image of your container,", "tokens": [50814, 1936, 364, 3256, 11, 257, 1785, 906, 3256, 295, 428, 10129, 11, 50964], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 110, "seek": 35400, "start": 366.0, "end": 369.0, "text": " write it to disk, reboot your host,", "tokens": [50964, 2464, 309, 281, 12355, 11, 33818, 428, 3975, 11, 51114], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 111, "seek": 35400, "start": 369.0, "end": 371.0, "text": " and then it comes up with a new kernel.", "tokens": [51114, 293, 550, 309, 1487, 493, 365, 257, 777, 28256, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 112, "seek": 35400, "start": 371.0, "end": 372.0, "text": " This time it's green.", "tokens": [51214, 639, 565, 309, 311, 3092, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 113, "seek": 35400, "start": 372.0, "end": 373.0, "text": " You restore the container,", "tokens": [51264, 509, 15227, 264, 10129, 11, 51314], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 114, "seek": 35400, "start": 373.0, "end": 377.0, "text": " and it's running pretty fast,", "tokens": [51314, 293, 309, 311, 2614, 1238, 2370, 11, 51514], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 115, "seek": 35400, "start": 377.0, "end": 380.0, "text": " much faster than waiting for all the initialization.", "tokens": [51514, 709, 4663, 813, 3806, 337, 439, 264, 5883, 2144, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13160498207862223, "compression_ratio": 1.6329113924050633, "no_speech_prob": 0.0028819607105106115}, {"id": 116, "seek": 38000, "start": 380.0, "end": 384.0, "text": " So you can quickly do reboot of your systems", "tokens": [50364, 407, 291, 393, 2661, 360, 33818, 295, 428, 3652, 50564], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 117, "seek": 38000, "start": 384.0, "end": 385.0, "text": " using checkpoint restore.", "tokens": [50564, 1228, 42269, 15227, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 118, "seek": 38000, "start": 385.0, "end": 388.0, "text": " Another one, it's similar to the first one.", "tokens": [50614, 3996, 472, 11, 309, 311, 2531, 281, 264, 700, 472, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 119, "seek": 38000, "start": 388.0, "end": 391.0, "text": " And also people have been talking to me about this.", "tokens": [50764, 400, 611, 561, 362, 668, 1417, 281, 385, 466, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 120, "seek": 38000, "start": 391.0, "end": 393.0, "text": " So this is also used in production.", "tokens": [50914, 407, 341, 307, 611, 1143, 294, 4265, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 121, "seek": 38000, "start": 393.0, "end": 395.0, "text": " You have a container which takes a long time to start,", "tokens": [51014, 509, 362, 257, 10129, 597, 2516, 257, 938, 565, 281, 722, 11, 51114], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 122, "seek": 38000, "start": 395.0, "end": 397.0, "text": " the one I've been told about.", "tokens": [51114, 264, 472, 286, 600, 668, 1907, 466, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 123, "seek": 38000, "start": 397.0, "end": 400.0, "text": " It takes like 10 minutes until everything is initialized.", "tokens": [51214, 467, 2516, 411, 1266, 2077, 1826, 1203, 307, 5883, 1602, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 124, "seek": 38000, "start": 400.0, "end": 404.0, "text": " So, and they have a service which they want to sell to customers,", "tokens": [51364, 407, 11, 293, 436, 362, 257, 2643, 597, 436, 528, 281, 3607, 281, 4581, 11, 51564], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 125, "seek": 38000, "start": 404.0, "end": 407.0, "text": " and they want to have the customers fast access to the containers.", "tokens": [51564, 293, 436, 528, 281, 362, 264, 4581, 2370, 2105, 281, 264, 17089, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10517783318796466, "compression_ratio": 1.701067615658363, "no_speech_prob": 0.00489443726837635}, {"id": 126, "seek": 40700, "start": 407.0, "end": 409.0, "text": " They don't want them to wait for 10 minutes.", "tokens": [50364, 814, 500, 380, 528, 552, 281, 1699, 337, 1266, 2077, 13, 50464], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 127, "seek": 40700, "start": 409.0, "end": 412.0, "text": " So what they do is they initialize the container once,", "tokens": [50464, 407, 437, 436, 360, 307, 436, 5883, 1125, 264, 10129, 1564, 11, 50614], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 128, "seek": 40700, "start": 412.0, "end": 415.0, "text": " create a checkpoint, write it to disk,", "tokens": [50614, 1884, 257, 42269, 11, 2464, 309, 281, 12355, 11, 50764], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 129, "seek": 40700, "start": 415.0, "end": 419.0, "text": " and then they can immediately start in matter of seconds services", "tokens": [50764, 293, 550, 436, 393, 4258, 722, 294, 1871, 295, 3949, 3328, 50964], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 130, "seek": 40700, "start": 419.0, "end": 421.0, "text": " from this pre-initialized container,", "tokens": [50964, 490, 341, 659, 12, 259, 270, 831, 1602, 10129, 11, 51064], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 131, "seek": 40700, "start": 421.0, "end": 424.0, "text": " and their customers don't have to wait 10 minutes.", "tokens": [51064, 293, 641, 4581, 500, 380, 362, 281, 1699, 1266, 2077, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 132, "seek": 40700, "start": 424.0, "end": 428.0, "text": " It's just in 10, 20 seconds, something like this.", "tokens": [51214, 467, 311, 445, 294, 1266, 11, 945, 3949, 11, 746, 411, 341, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 133, "seek": 40700, "start": 428.0, "end": 433.0, "text": " The combination of those two use cases is the container live migration.", "tokens": [51414, 440, 6562, 295, 729, 732, 764, 3331, 307, 264, 10129, 1621, 17011, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 134, "seek": 40700, "start": 433.0, "end": 435.0, "text": " So we have two hosts.", "tokens": [51664, 407, 321, 362, 732, 21573, 13, 51764], "temperature": 0.0, "avg_logprob": -0.09939104935218548, "compression_ratio": 1.7301587301587302, "no_speech_prob": 0.006776203401386738}, {"id": 135, "seek": 43500, "start": 435.0, "end": 437.0, "text": " We have the container on one host.", "tokens": [50364, 492, 362, 264, 10129, 322, 472, 3975, 13, 50464], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 136, "seek": 43500, "start": 437.0, "end": 441.0, "text": " And it's hopefully stateful because if the container is not stateful,", "tokens": [50464, 400, 309, 311, 4696, 1785, 906, 570, 498, 264, 10129, 307, 406, 1785, 906, 11, 50664], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 137, "seek": 43500, "start": 441.0, "end": 446.0, "text": " the whole migration thing of container doesn't make much sense in the end.", "tokens": [50664, 264, 1379, 17011, 551, 295, 10129, 1177, 380, 652, 709, 2020, 294, 264, 917, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 138, "seek": 43500, "start": 446.0, "end": 450.0, "text": " For the forensic use case, it can be a stateless container as well", "tokens": [50914, 1171, 264, 39084, 764, 1389, 11, 309, 393, 312, 257, 2219, 4272, 10129, 382, 731, 51114], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 139, "seek": 43500, "start": 450.0, "end": 452.0, "text": " because you can still analyze it.", "tokens": [51114, 570, 291, 393, 920, 12477, 309, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 140, "seek": 43500, "start": 452.0, "end": 455.0, "text": " So what is the same again?", "tokens": [51214, 407, 437, 307, 264, 912, 797, 30, 51364], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 141, "seek": 43500, "start": 455.0, "end": 458.0, "text": " We create a copy of the container, write it to disk,", "tokens": [51364, 492, 1884, 257, 5055, 295, 264, 10129, 11, 2464, 309, 281, 12355, 11, 51514], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 142, "seek": 43500, "start": 458.0, "end": 462.0, "text": " and then we can create one or multiple copies on the destination system.", "tokens": [51514, 293, 550, 321, 393, 1884, 472, 420, 3866, 14341, 322, 264, 12236, 1185, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10029117550168719, "compression_ratio": 1.732, "no_speech_prob": 0.0032662097364664078}, {"id": 143, "seek": 46200, "start": 462.0, "end": 465.0, "text": " And the original container can keep on running or not.", "tokens": [50364, 400, 264, 3380, 10129, 393, 1066, 322, 2614, 420, 406, 13, 50514], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 144, "seek": 46200, "start": 465.0, "end": 470.0, "text": " So this is really up to you how you want to use checkpoint restore today.", "tokens": [50514, 407, 341, 307, 534, 493, 281, 291, 577, 291, 528, 281, 764, 42269, 15227, 965, 13, 50764], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 145, "seek": 46200, "start": 470.0, "end": 475.0, "text": " Another interesting thing people are talking about are spot instances.", "tokens": [50764, 3996, 1880, 551, 561, 366, 1417, 466, 366, 4008, 14519, 13, 51014], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 146, "seek": 46200, "start": 475.0, "end": 478.0, "text": " Spot instances are usually something which is cheap,", "tokens": [51014, 19102, 14519, 366, 2673, 746, 597, 307, 7084, 11, 51164], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 147, "seek": 46200, "start": 478.0, "end": 480.0, "text": " but they go away.", "tokens": [51164, 457, 436, 352, 1314, 13, 51264], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 148, "seek": 46200, "start": 480.0, "end": 483.0, "text": " Those VMs, like, I don't know, you have two minutes warning,", "tokens": [51264, 3950, 18038, 82, 11, 411, 11, 286, 500, 380, 458, 11, 291, 362, 732, 2077, 9164, 11, 51414], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 149, "seek": 46200, "start": 483.0, "end": 488.0, "text": " and people are using checkpoint restore there in combination with pre-use.", "tokens": [51414, 293, 561, 366, 1228, 42269, 15227, 456, 294, 6562, 365, 659, 12, 438, 13, 51664], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 150, "seek": 46200, "start": 488.0, "end": 490.0, "text": " So you get a signal that your VM is going down.", "tokens": [51664, 407, 291, 483, 257, 6358, 300, 428, 18038, 307, 516, 760, 13, 51764], "temperature": 0.0, "avg_logprob": -0.110496090576712, "compression_ratio": 1.6752767527675276, "no_speech_prob": 0.005717236083000898}, {"id": 151, "seek": 49000, "start": 490.0, "end": 492.0, "text": " You create a checkpoint, write it somewhere,", "tokens": [50364, 509, 1884, 257, 42269, 11, 2464, 309, 4079, 11, 50464], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 152, "seek": 49000, "start": 492.0, "end": 495.0, "text": " and then you can continue to run your workload on another system", "tokens": [50464, 293, 550, 291, 393, 2354, 281, 1190, 428, 20139, 322, 1071, 1185, 50614], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 153, "seek": 49000, "start": 495.0, "end": 501.0, "text": " without losing any work or without having to do any restart", "tokens": [50614, 1553, 7027, 604, 589, 420, 1553, 1419, 281, 360, 604, 21022, 50914], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 154, "seek": 49000, "start": 501.0, "end": 506.0, "text": " or long down times or whatever you would like to avoid.", "tokens": [50914, 420, 938, 760, 1413, 420, 2035, 291, 576, 411, 281, 5042, 13, 51164], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 155, "seek": 49000, "start": 506.0, "end": 513.0, "text": " And something which came up recently is people are interested to use it for AI training.", "tokens": [51164, 400, 746, 597, 1361, 493, 3938, 307, 561, 366, 3102, 281, 764, 309, 337, 7318, 3097, 13, 51514], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 156, "seek": 49000, "start": 513.0, "end": 518.0, "text": " So you have your AI training running somewhere with a GPU,", "tokens": [51514, 407, 291, 362, 428, 7318, 3097, 2614, 4079, 365, 257, 18407, 11, 51764], "temperature": 0.0, "avg_logprob": -0.083021547602511, "compression_ratio": 1.6288209606986899, "no_speech_prob": 0.005898502189666033}, {"id": 157, "seek": 51800, "start": 518.0, "end": 523.0, "text": " and for some reason it's aborted, or you have to make space on the node,", "tokens": [50364, 293, 337, 512, 1778, 309, 311, 410, 14813, 11, 420, 291, 362, 281, 652, 1901, 322, 264, 9984, 11, 50614], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 158, "seek": 51800, "start": 523.0, "end": 529.0, "text": " and with a combination of checkpoint restore you can create a checkpoint of your container.", "tokens": [50614, 293, 365, 257, 6562, 295, 42269, 15227, 291, 393, 1884, 257, 42269, 295, 428, 10129, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 159, "seek": 51800, "start": 529.0, "end": 531.0, "text": " In this case it's less about migration.", "tokens": [50914, 682, 341, 1389, 309, 311, 1570, 466, 17011, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 160, "seek": 51800, "start": 531.0, "end": 537.0, "text": " It's just creating a copy of your state somewhere so you can continue to run it later,", "tokens": [51014, 467, 311, 445, 4084, 257, 5055, 295, 428, 1785, 4079, 370, 291, 393, 2354, 281, 1190, 309, 1780, 11, 51314], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 161, "seek": 51800, "start": 537.0, "end": 539.0, "text": " or even migrate.", "tokens": [51314, 420, 754, 31821, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 162, "seek": 51800, "start": 539.0, "end": 541.0, "text": " It really depends on what you want to do there.", "tokens": [51414, 467, 534, 5946, 322, 437, 291, 528, 281, 360, 456, 13, 51514], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 163, "seek": 51800, "start": 541.0, "end": 547.0, "text": " The interesting thing here is I mentioned previously that the CRIU cannot handle all resources,", "tokens": [51514, 440, 1880, 551, 510, 307, 286, 2835, 8046, 300, 264, 383, 5577, 52, 2644, 4813, 439, 3593, 11, 51814], "temperature": 0.0, "avg_logprob": -0.14093042271477835, "compression_ratio": 1.692883895131086, "no_speech_prob": 0.0014254633570089936}, {"id": 164, "seek": 54700, "start": 547.0, "end": 551.0, "text": " and GPUs are kind of the resources which CRIU cannot always handle.", "tokens": [50364, 293, 18407, 82, 366, 733, 295, 264, 3593, 597, 383, 5577, 52, 2644, 1009, 4813, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 165, "seek": 54700, "start": 551.0, "end": 559.0, "text": " We are lucky that AMD came up to us and they actually implemented support to migrate", "tokens": [50564, 492, 366, 6356, 300, 34808, 1361, 493, 281, 505, 293, 436, 767, 12270, 1406, 281, 31821, 50964], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 166, "seek": 54700, "start": 559.0, "end": 563.0, "text": " or checkpoint restore applications which are running on the host CPU", "tokens": [50964, 420, 42269, 15227, 5821, 597, 366, 2614, 322, 264, 3975, 13199, 51164], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 167, "seek": 54700, "start": 563.0, "end": 566.0, "text": " and at the same time on the AMD GPU.", "tokens": [51164, 293, 412, 264, 912, 565, 322, 264, 34808, 18407, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 168, "seek": 54700, "start": 566.0, "end": 570.0, "text": " For NVIDIA, we don't know if that exists.", "tokens": [51314, 1171, 426, 3958, 6914, 11, 321, 500, 380, 458, 498, 300, 8198, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 169, "seek": 54700, "start": 570.0, "end": 574.0, "text": " We have heard people talking about it.", "tokens": [51514, 492, 362, 2198, 561, 1417, 466, 309, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09558638659390536, "compression_ratio": 1.4549356223175967, "no_speech_prob": 0.008146815001964569}, {"id": 170, "seek": 57400, "start": 574.0, "end": 580.0, "text": " I think Microsoft mentioned it at some point that they might have been using CRIU", "tokens": [50364, 286, 519, 8116, 2835, 309, 412, 512, 935, 300, 436, 1062, 362, 668, 1228, 383, 5577, 52, 50664], "temperature": 0.0, "avg_logprob": -0.13153419088810048, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.001149452175013721}, {"id": 171, "seek": 57400, "start": 580.0, "end": 585.0, "text": " in combination with NVIDIA, but nobody talked to the CRIU Upscreen Project at least.", "tokens": [50664, 294, 6562, 365, 426, 3958, 6914, 11, 457, 5079, 2825, 281, 264, 383, 5577, 52, 5858, 12439, 9849, 412, 1935, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13153419088810048, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.001149452175013721}, {"id": 172, "seek": 57400, "start": 585.0, "end": 590.0, "text": " So we are not aware that people are doing, but we kind of expect that people are using CRIU", "tokens": [50914, 407, 321, 366, 406, 3650, 300, 561, 366, 884, 11, 457, 321, 733, 295, 2066, 300, 561, 366, 1228, 383, 5577, 52, 51164], "temperature": 0.0, "avg_logprob": -0.13153419088810048, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.001149452175013721}, {"id": 173, "seek": 57400, "start": 590.0, "end": 595.0, "text": " in combination with NVIDIA GPUs.", "tokens": [51164, 294, 6562, 365, 426, 3958, 6914, 18407, 82, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13153419088810048, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.001149452175013721}, {"id": 174, "seek": 57400, "start": 595.0, "end": 601.0, "text": " So the next one is then forensic container analysis and my demo.", "tokens": [51414, 407, 264, 958, 472, 307, 550, 39084, 10129, 5215, 293, 452, 10723, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13153419088810048, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.001149452175013721}, {"id": 175, "seek": 60100, "start": 601.0, "end": 604.0, "text": " So my demo is based on a container.", "tokens": [50364, 407, 452, 10723, 307, 2361, 322, 257, 10129, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 176, "seek": 60100, "start": 604.0, "end": 606.0, "text": " I am using OpenHPC as a base.", "tokens": [50514, 286, 669, 1228, 7238, 39, 12986, 382, 257, 3096, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 177, "seek": 60100, "start": 606.0, "end": 608.0, "text": " So the container is a stateful container.", "tokens": [50614, 407, 264, 10129, 307, 257, 1785, 906, 10129, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 178, "seek": 60100, "start": 608.0, "end": 615.0, "text": " It is calculating pi and memory which we can hopefully later find in the container.", "tokens": [50714, 467, 307, 28258, 3895, 293, 4675, 597, 321, 393, 4696, 1780, 915, 294, 264, 10129, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 179, "seek": 60100, "start": 615.0, "end": 619.0, "text": " So to create a checkpoint, there is a complicated way to do it.", "tokens": [51064, 407, 281, 1884, 257, 42269, 11, 456, 307, 257, 6179, 636, 281, 360, 309, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 180, "seek": 60100, "start": 619.0, "end": 624.0, "text": " So currently checkpoint restoring Kubernetes is only a Q-Bled interface.", "tokens": [51264, 407, 4362, 42269, 36349, 23145, 307, 787, 257, 1249, 12, 33, 1493, 9226, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1603184294426578, "compression_ratio": 1.6318407960199004, "no_speech_prob": 0.005537775810807943}, {"id": 181, "seek": 62400, "start": 625.0, "end": 631.0, "text": " Officially, the reason is because checkpoint restore writes your container,", "tokens": [50414, 11511, 2270, 11, 264, 1778, 307, 570, 42269, 15227, 13657, 428, 10129, 11, 50714], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 182, "seek": 62400, "start": 631.0, "end": 634.0, "text": " every memory page to disk.", "tokens": [50714, 633, 4675, 3028, 281, 12355, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 183, "seek": 62400, "start": 634.0, "end": 641.0, "text": " There is the potential, the risk that you now have private keys, random numbers, passwords,", "tokens": [50864, 821, 307, 264, 3995, 11, 264, 3148, 300, 291, 586, 362, 4551, 9317, 11, 4974, 3547, 11, 33149, 11, 51214], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 184, "seek": 62400, "start": 641.0, "end": 643.0, "text": " now all written on disk.", "tokens": [51214, 586, 439, 3720, 322, 12355, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 185, "seek": 62400, "start": 643.0, "end": 645.0, "text": " The checkpoint is only readable by root.", "tokens": [51314, 440, 42269, 307, 787, 49857, 538, 5593, 13, 51414], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 186, "seek": 62400, "start": 645.0, "end": 648.0, "text": " So the situation doesn't really change because if you root on a machine,", "tokens": [51414, 407, 264, 2590, 1177, 380, 534, 1319, 570, 498, 291, 5593, 322, 257, 3479, 11, 51564], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 187, "seek": 62400, "start": 648.0, "end": 651.0, "text": " you could also extract the memory, but for now,", "tokens": [51564, 291, 727, 611, 8947, 264, 4675, 11, 457, 337, 586, 11, 51714], "temperature": 0.0, "avg_logprob": -0.15695567841225483, "compression_ratio": 1.6351931330472103, "no_speech_prob": 0.1416507214307785}, {"id": 188, "seek": 65100, "start": 651.0, "end": 656.0, "text": " because it's not clear how to handle this or how we want to continue in the Kubernetes community.", "tokens": [50364, 570, 309, 311, 406, 1850, 577, 281, 4813, 341, 420, 577, 321, 528, 281, 2354, 294, 264, 23145, 1768, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 189, "seek": 65100, "start": 656.0, "end": 662.0, "text": " With this feature, it's just a Q-Bled only interface and it looks like this.", "tokens": [50614, 2022, 341, 4111, 11, 309, 311, 445, 257, 1249, 12, 33, 1493, 787, 9226, 293, 309, 1542, 411, 341, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 190, "seek": 65100, "start": 662.0, "end": 667.0, "text": " I've also written a QCTL interface.", "tokens": [50914, 286, 600, 611, 3720, 257, 1249, 10259, 43, 9226, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 191, "seek": 65100, "start": 667.0, "end": 668.0, "text": " It looks like this.", "tokens": [51164, 467, 1542, 411, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 192, "seek": 65100, "start": 668.0, "end": 670.0, "text": " It creates also the checkpoint archive.", "tokens": [51214, 467, 7829, 611, 264, 42269, 23507, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 193, "seek": 65100, "start": 670.0, "end": 672.0, "text": " It's basically doing the same.", "tokens": [51314, 467, 311, 1936, 884, 264, 912, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 194, "seek": 65100, "start": 672.0, "end": 679.0, "text": " It's just wiring all the calls completely to QCTL instead just a Q-Bled.", "tokens": [51414, 467, 311, 445, 27520, 439, 264, 5498, 2584, 281, 1249, 10259, 43, 2602, 445, 257, 1249, 12, 33, 1493, 13, 51764], "temperature": 0.0, "avg_logprob": -0.1211290268670945, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.00647560553625226}, {"id": 195, "seek": 67900, "start": 679.0, "end": 685.0, "text": " So now we have a checkpoint and there's a tool called checkpoint control,", "tokens": [50364, 407, 586, 321, 362, 257, 42269, 293, 456, 311, 257, 2290, 1219, 42269, 1969, 11, 50664], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 196, "seek": 67900, "start": 685.0, "end": 690.0, "text": " which was mainly developed by Google Summer of Code students this year.", "tokens": [50664, 597, 390, 8704, 4743, 538, 3329, 16161, 295, 15549, 1731, 341, 1064, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 197, "seek": 67900, "start": 690.0, "end": 696.0, "text": " So we're very happy for this help, which they did.", "tokens": [50914, 407, 321, 434, 588, 2055, 337, 341, 854, 11, 597, 436, 630, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 198, "seek": 67900, "start": 696.0, "end": 701.0, "text": " And in its simplest form, checkpoint control will give you,", "tokens": [51214, 400, 294, 1080, 22811, 1254, 11, 42269, 1969, 486, 976, 291, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 199, "seek": 67900, "start": 701.0, "end": 705.0, "text": " I'm just going to make the font a little bit smaller for a short time here,", "tokens": [51464, 286, 478, 445, 516, 281, 652, 264, 10703, 257, 707, 857, 4356, 337, 257, 2099, 565, 510, 11, 51664], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 200, "seek": 67900, "start": 705.0, "end": 708.0, "text": " and it gives me just some basic information about the container.", "tokens": [51664, 293, 309, 2709, 385, 445, 512, 3875, 1589, 466, 264, 10129, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1442277554384212, "compression_ratio": 1.588, "no_speech_prob": 0.003015968482941389}, {"id": 201, "seek": 70800, "start": 708.0, "end": 712.0, "text": " I see it's the container's name counter.", "tokens": [50364, 286, 536, 309, 311, 264, 10129, 311, 1315, 5682, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1571239725748698, "compression_ratio": 1.5402298850574712, "no_speech_prob": 0.0015237098559737206}, {"id": 202, "seek": 70800, "start": 712.0, "end": 718.0, "text": " It's based on that image, ID, runtime, when it was created, the engine cryo.", "tokens": [50564, 467, 311, 2361, 322, 300, 3256, 11, 7348, 11, 34474, 11, 562, 309, 390, 2942, 11, 264, 2848, 3305, 78, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1571239725748698, "compression_ratio": 1.5402298850574712, "no_speech_prob": 0.0015237098559737206}, {"id": 203, "seek": 70800, "start": 718.0, "end": 722.0, "text": " Checkpoint size is basically the size of all memory pages,", "tokens": [50864, 6881, 6053, 2744, 307, 1936, 264, 2744, 295, 439, 4675, 7183, 11, 51064], "temperature": 0.0, "avg_logprob": -0.1571239725748698, "compression_ratio": 1.5402298850574712, "no_speech_prob": 0.0015237098559737206}, {"id": 204, "seek": 70800, "start": 722.0, "end": 729.0, "text": " and root fsdif size is the size of all files which have changed compared to the base image.", "tokens": [51064, 293, 5593, 283, 82, 67, 351, 2744, 307, 264, 2744, 295, 439, 7098, 597, 362, 3105, 5347, 281, 264, 3096, 3256, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1571239725748698, "compression_ratio": 1.5402298850574712, "no_speech_prob": 0.0015237098559737206}, {"id": 205, "seek": 72900, "start": 730.0, "end": 741.0, "text": " So let's unpack the checkpoint archive to see some details.", "tokens": [50414, 407, 718, 311, 26699, 264, 42269, 23507, 281, 536, 512, 4365, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 206, "seek": 72900, "start": 741.0, "end": 746.0, "text": " And it's just a car archive, so it's easy to unpack.", "tokens": [50964, 400, 309, 311, 445, 257, 1032, 23507, 11, 370, 309, 311, 1858, 281, 26699, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 207, "seek": 72900, "start": 746.0, "end": 748.0, "text": " I'm just going to move this to the top again.", "tokens": [51214, 286, 478, 445, 516, 281, 1286, 341, 281, 264, 1192, 797, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 208, "seek": 72900, "start": 748.0, "end": 752.0, "text": " And there are a couple of files which now were created by the container engine.", "tokens": [51314, 400, 456, 366, 257, 1916, 295, 7098, 597, 586, 645, 2942, 538, 264, 10129, 2848, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 209, "seek": 72900, "start": 752.0, "end": 754.0, "text": " And so we have bind mounts.", "tokens": [51514, 400, 370, 321, 362, 14786, 40982, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 210, "seek": 72900, "start": 754.0, "end": 757.0, "text": " This is just some information that is necessary for restore,", "tokens": [51614, 639, 307, 445, 512, 1589, 300, 307, 4818, 337, 15227, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1201272613700779, "compression_ratio": 1.6029411764705883, "no_speech_prob": 0.0006562173366546631}, {"id": 211, "seek": 75700, "start": 757.0, "end": 763.0, "text": " because we need to restore all the mounts from the outside of the container to the inside,", "tokens": [50364, 570, 321, 643, 281, 15227, 439, 264, 40982, 490, 264, 2380, 295, 264, 10129, 281, 264, 1854, 11, 50664], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 212, "seek": 75700, "start": 763.0, "end": 766.0, "text": " and we need to know if it's a file or a directory,", "tokens": [50664, 293, 321, 643, 281, 458, 498, 309, 311, 257, 3991, 420, 257, 21120, 11, 50814], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 213, "seek": 75700, "start": 766.0, "end": 774.0, "text": " because the container engine doesn't want to remember if it's a container or if it's a directory or a file,", "tokens": [50814, 570, 264, 10129, 2848, 1177, 380, 528, 281, 1604, 498, 309, 311, 257, 10129, 420, 498, 309, 311, 257, 21120, 420, 257, 3991, 11, 51214], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 214, "seek": 75700, "start": 774.0, "end": 776.0, "text": " but we need it for the restore.", "tokens": [51214, 457, 321, 643, 309, 337, 264, 15227, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 215, "seek": 75700, "start": 776.0, "end": 778.0, "text": " Configdump has some information.", "tokens": [51314, 44151, 67, 1420, 575, 512, 1589, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 216, "seek": 75700, "start": 778.0, "end": 781.0, "text": " dump.loc has what cryo tells us.", "tokens": [51414, 11430, 13, 5842, 575, 437, 3305, 78, 5112, 505, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 217, "seek": 75700, "start": 781.0, "end": 784.0, "text": " In this case, it doesn't matter because it works.", "tokens": [51564, 682, 341, 1389, 11, 309, 1177, 380, 1871, 570, 309, 1985, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10839984613821046, "compression_ratio": 1.837962962962963, "no_speech_prob": 0.004532301798462868}, {"id": 218, "seek": 78400, "start": 784.0, "end": 786.0, "text": " Then we have the root fsdif file.", "tokens": [50364, 1396, 321, 362, 264, 5593, 283, 82, 67, 351, 3991, 13, 50464], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 219, "seek": 78400, "start": 786.0, "end": 791.0, "text": " This is all the files which have changed compared to the base image we saw previously.", "tokens": [50464, 639, 307, 439, 264, 7098, 597, 362, 3105, 5347, 281, 264, 3096, 3256, 321, 1866, 8046, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 220, "seek": 78400, "start": 791.0, "end": 794.0, "text": " In the checkpoint directory is the one created by cryo.", "tokens": [50714, 682, 264, 42269, 21120, 307, 264, 472, 2942, 538, 3305, 78, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 221, "seek": 78400, "start": 794.0, "end": 799.0, "text": " So that has the actual process information.", "tokens": [50864, 407, 300, 575, 264, 3539, 1399, 1589, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 222, "seek": 78400, "start": 799.0, "end": 803.0, "text": " So if we go there, this is the normal thing which cryo does is all,", "tokens": [51114, 407, 498, 321, 352, 456, 11, 341, 307, 264, 2710, 551, 597, 3305, 78, 775, 307, 439, 11, 51314], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 223, "seek": 78400, "start": 803.0, "end": 808.0, "text": " most of them are protobuf files generated by cryo here.", "tokens": [51314, 881, 295, 552, 366, 1742, 996, 2947, 7098, 10833, 538, 3305, 78, 510, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08004636967435796, "compression_ratio": 1.638095238095238, "no_speech_prob": 0.004002993460744619}, {"id": 224, "seek": 80800, "start": 809.0, "end": 812.0, "text": " And cryo comes with a tool called crit,", "tokens": [50414, 400, 3305, 78, 1487, 365, 257, 2290, 1219, 3113, 11, 50564], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 225, "seek": 80800, "start": 812.0, "end": 816.0, "text": " crit, cryo image tool, and it has a parameter show,", "tokens": [50564, 3113, 11, 3305, 78, 3256, 2290, 11, 293, 309, 575, 257, 13075, 855, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 226, "seek": 80800, "start": 816.0, "end": 819.0, "text": " and we can have a look at one of those files.", "tokens": [50764, 293, 321, 393, 362, 257, 574, 412, 472, 295, 729, 7098, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 227, "seek": 80800, "start": 819.0, "end": 822.0, "text": " Let's look at UTS namespace information here.", "tokens": [50914, 961, 311, 574, 412, 624, 7327, 5288, 17940, 1589, 510, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 228, "seek": 80800, "start": 822.0, "end": 825.0, "text": " It basically just tells us the namespace,", "tokens": [51064, 467, 1936, 445, 5112, 505, 264, 5288, 17940, 11, 51214], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 229, "seek": 80800, "start": 825.0, "end": 829.0, "text": " the UTS namespace has hostname counters,", "tokens": [51214, 264, 624, 7327, 5288, 17940, 575, 3975, 16344, 39338, 11, 51414], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 230, "seek": 80800, "start": 829.0, "end": 833.0, "text": " but we can also look at a file called pstree.", "tokens": [51414, 457, 321, 393, 611, 574, 412, 257, 3991, 1219, 18815, 83, 701, 13, 51614], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 231, "seek": 80800, "start": 833.0, "end": 835.0, "text": " This is the process tree.", "tokens": [51614, 639, 307, 264, 1399, 4230, 13, 51714], "temperature": 0.0, "avg_logprob": -0.14516611932550819, "compression_ratio": 1.6568627450980393, "no_speech_prob": 0.006787991151213646}, {"id": 232, "seek": 83500, "start": 835.0, "end": 839.0, "text": " This one, so it starts to get difficult to understand what's going on.", "tokens": [50364, 639, 472, 11, 370, 309, 3719, 281, 483, 2252, 281, 1223, 437, 311, 516, 322, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 233, "seek": 83500, "start": 839.0, "end": 842.0, "text": " I have a couple of commands prepared.", "tokens": [50564, 286, 362, 257, 1916, 295, 16901, 4927, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 234, "seek": 83500, "start": 842.0, "end": 847.0, "text": " So I see with this one, we have four PIDs running in our container,", "tokens": [50714, 407, 286, 536, 365, 341, 472, 11, 321, 362, 1451, 430, 2777, 82, 2614, 294, 527, 10129, 11, 50964], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 235, "seek": 83500, "start": 847.0, "end": 849.0, "text": " 140, 40, 142.", "tokens": [50964, 21548, 11, 3356, 11, 3499, 17, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 236, "seek": 83500, "start": 849.0, "end": 853.0, "text": " It's important to know this is the view from inside of the PID namespace,", "tokens": [51064, 467, 311, 1021, 281, 458, 341, 307, 264, 1910, 490, 1854, 295, 264, 430, 2777, 5288, 17940, 11, 51264], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 237, "seek": 83500, "start": 853.0, "end": 858.0, "text": " so cryo always remembers the PIDs from within the PID namespace", "tokens": [51264, 370, 3305, 78, 1009, 26228, 264, 430, 2777, 82, 490, 1951, 264, 430, 2777, 5288, 17940, 51514], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 238, "seek": 83500, "start": 858.0, "end": 861.0, "text": " and tries to recreate those PIDs later.", "tokens": [51514, 293, 9898, 281, 25833, 729, 430, 2777, 82, 1780, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1091088198740548, "compression_ratio": 1.5862068965517242, "no_speech_prob": 0.0296810120344162}, {"id": 239, "seek": 86100, "start": 861.0, "end": 868.0, "text": " If I looked at my process, which is maybe still running,", "tokens": [50364, 759, 286, 2956, 412, 452, 1399, 11, 597, 307, 1310, 920, 2614, 11, 50714], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 240, "seek": 86100, "start": 868.0, "end": 873.0, "text": " it should, I can see here, basically, it's not hard to read,", "tokens": [50714, 309, 820, 11, 286, 393, 536, 510, 11, 1936, 11, 309, 311, 406, 1152, 281, 1401, 11, 50964], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 241, "seek": 86100, "start": 873.0, "end": 877.0, "text": " but those are the four, where's my mouse?", "tokens": [50964, 457, 729, 366, 264, 1451, 11, 689, 311, 452, 9719, 30, 51164], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 242, "seek": 86100, "start": 877.0, "end": 878.0, "text": " I don't know.", "tokens": [51164, 286, 500, 380, 458, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 243, "seek": 86100, "start": 878.0, "end": 879.0, "text": " Oh, there it is.", "tokens": [51214, 876, 11, 456, 309, 307, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 244, "seek": 86100, "start": 879.0, "end": 883.0, "text": " You see, so this is the PID one of the container,", "tokens": [51264, 509, 536, 11, 370, 341, 307, 264, 430, 2777, 472, 295, 264, 10129, 11, 51464], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 245, "seek": 86100, "start": 883.0, "end": 887.0, "text": " and this is probably 41, 42, 43, I guess,", "tokens": [51464, 293, 341, 307, 1391, 18173, 11, 14034, 11, 17914, 11, 286, 2041, 11, 51664], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 246, "seek": 86100, "start": 887.0, "end": 890.0, "text": " and you can see here it has other PIDs on the outside,", "tokens": [51664, 293, 291, 393, 536, 510, 309, 575, 661, 430, 2777, 82, 322, 264, 2380, 11, 51814], "temperature": 0.0, "avg_logprob": -0.12552577257156372, "compression_ratio": 1.5112107623318385, "no_speech_prob": 0.013416274450719357}, {"id": 247, "seek": 89000, "start": 890.0, "end": 893.0, "text": " because that's the view from the outside of the PID namespace.", "tokens": [50364, 570, 300, 311, 264, 1910, 490, 264, 2380, 295, 264, 430, 2777, 5288, 17940, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 248, "seek": 89000, "start": 893.0, "end": 896.0, "text": " So it's important if you ever do an analysis of your checkpoint,", "tokens": [50514, 407, 309, 311, 1021, 498, 291, 1562, 360, 364, 5215, 295, 428, 42269, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 249, "seek": 89000, "start": 896.0, "end": 899.0, "text": " it's always the PIDs from within the PID namespace.", "tokens": [50664, 309, 311, 1009, 264, 430, 2777, 82, 490, 1951, 264, 430, 2777, 5288, 17940, 13, 50814], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 250, "seek": 89000, "start": 899.0, "end": 904.0, "text": " There's also for each process, we have a file called core,", "tokens": [50814, 821, 311, 611, 337, 1184, 1399, 11, 321, 362, 257, 3991, 1219, 4965, 11, 51064], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 251, "seek": 89000, "start": 904.0, "end": 908.0, "text": " with the core information about the process.", "tokens": [51064, 365, 264, 4965, 1589, 466, 264, 1399, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 252, "seek": 89000, "start": 908.0, "end": 910.0, "text": " Let's have a quick look at this one,", "tokens": [51264, 961, 311, 362, 257, 1702, 574, 412, 341, 472, 11, 51364], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 253, "seek": 89000, "start": 910.0, "end": 914.0, "text": " and it basically has the registers, the value of all the registers,", "tokens": [51364, 293, 309, 1936, 575, 264, 38351, 11, 264, 2158, 295, 439, 264, 38351, 11, 51564], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 254, "seek": 89000, "start": 914.0, "end": 918.0, "text": " floating point and much more stuff, and the end you see,", "tokens": [51564, 12607, 935, 293, 709, 544, 1507, 11, 293, 264, 917, 291, 536, 11, 51764], "temperature": 0.0, "avg_logprob": -0.12621458699880553, "compression_ratio": 1.7450980392156863, "no_speech_prob": 0.001343530137091875}, {"id": 255, "seek": 91800, "start": 918.0, "end": 921.0, "text": " the policies and the name of the process,", "tokens": [50364, 264, 7657, 293, 264, 1315, 295, 264, 1399, 11, 50514], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 256, "seek": 91800, "start": 921.0, "end": 924.0, "text": " and using the name of the process,", "tokens": [50514, 293, 1228, 264, 1315, 295, 264, 1399, 11, 50664], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 257, "seek": 91800, "start": 924.0, "end": 930.0, "text": " I think I can get a list of what processes are running inside of my container", "tokens": [50664, 286, 519, 286, 393, 483, 257, 1329, 295, 437, 7555, 366, 2614, 1854, 295, 452, 10129, 50964], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 258, "seek": 91800, "start": 930.0, "end": 934.0, "text": " and what they do, and you see the first one is called bash login wrapper,", "tokens": [50964, 293, 437, 436, 360, 11, 293, 291, 536, 264, 700, 472, 307, 1219, 46183, 24276, 46906, 11, 51164], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 259, "seek": 91800, "start": 934.0, "end": 939.0, "text": " bash, pi and t, and if I compare this again with what's currently,", "tokens": [51164, 46183, 11, 3895, 293, 256, 11, 293, 498, 286, 6794, 341, 797, 365, 437, 311, 4362, 11, 51414], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 260, "seek": 91800, "start": 939.0, "end": 945.0, "text": " I don't know, it's the wrong command, with here, again, I see it's again,", "tokens": [51414, 286, 500, 380, 458, 11, 309, 311, 264, 2085, 5622, 11, 365, 510, 11, 797, 11, 286, 536, 309, 311, 797, 11, 51714], "temperature": 0.0, "avg_logprob": -0.21262492948365444, "compression_ratio": 1.8, "no_speech_prob": 0.05019865557551384}, {"id": 261, "seek": 94500, "start": 945.0, "end": 951.0, "text": " bash login wrapper, bash, the Python code and the t command.", "tokens": [50364, 46183, 24276, 46906, 11, 46183, 11, 264, 15329, 3089, 293, 264, 256, 5622, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 262, "seek": 94500, "start": 951.0, "end": 956.0, "text": " So looking at these files, I can find out everything about the processes here,", "tokens": [50664, 407, 1237, 412, 613, 7098, 11, 286, 393, 915, 484, 1203, 466, 264, 7555, 510, 11, 50914], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 263, "seek": 94500, "start": 956.0, "end": 959.0, "text": " so there's a lot of information in here,", "tokens": [50914, 370, 456, 311, 257, 688, 295, 1589, 294, 510, 11, 51064], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 264, "seek": 94500, "start": 959.0, "end": 963.0, "text": " and if you're looking for something specific, it might be difficult,", "tokens": [51064, 293, 498, 291, 434, 1237, 337, 746, 2685, 11, 309, 1062, 312, 2252, 11, 51264], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 265, "seek": 94500, "start": 963.0, "end": 966.0, "text": " but the information is here.", "tokens": [51264, 457, 264, 1589, 307, 510, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 266, "seek": 94500, "start": 966.0, "end": 970.0, "text": " There are additional files, for example, the tempfs.dev files,", "tokens": [51414, 821, 366, 4497, 7098, 11, 337, 1365, 11, 264, 18274, 16883, 13, 40343, 7098, 11, 51614], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 267, "seek": 94500, "start": 970.0, "end": 972.0, "text": " those are maybe also interesting files.", "tokens": [51614, 729, 366, 1310, 611, 1880, 7098, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11958243895550164, "compression_ratio": 1.6637554585152838, "no_speech_prob": 0.0026663036551326513}, {"id": 268, "seek": 97200, "start": 972.0, "end": 977.0, "text": " Those are basically, let's have a look at those.", "tokens": [50364, 3950, 366, 1936, 11, 718, 311, 362, 257, 574, 412, 729, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 269, "seek": 97200, "start": 977.0, "end": 981.0, "text": " Something like this is probably the right one.", "tokens": [50614, 6595, 411, 341, 307, 1391, 264, 558, 472, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 270, "seek": 97200, "start": 981.0, "end": 985.0, "text": " And you see, this is the content of a tempfs,", "tokens": [50814, 400, 291, 536, 11, 341, 307, 264, 2701, 295, 257, 18274, 16883, 11, 51014], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 271, "seek": 97200, "start": 985.0, "end": 988.0, "text": " so every tempfs which is not bind-mounted from the host,", "tokens": [51014, 370, 633, 18274, 16883, 597, 307, 406, 14786, 12, 45275, 292, 490, 264, 3975, 11, 51164], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 272, "seek": 97200, "start": 988.0, "end": 990.0, "text": " which is native to the container,", "tokens": [51164, 597, 307, 8470, 281, 264, 10129, 11, 51264], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 273, "seek": 97200, "start": 990.0, "end": 995.0, "text": " KreeU kind of puts it into the image, it's basically just a tar,", "tokens": [51264, 591, 701, 52, 733, 295, 8137, 309, 666, 264, 3256, 11, 309, 311, 1936, 445, 257, 3112, 11, 51514], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 274, "seek": 97200, "start": 995.0, "end": 998.0, "text": " so every tempfs which was in your container is now also here,", "tokens": [51514, 370, 633, 18274, 16883, 597, 390, 294, 428, 10129, 307, 586, 611, 510, 11, 51664], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 275, "seek": 97200, "start": 998.0, "end": 1001.0, "text": " you can find all the information here.", "tokens": [51664, 291, 393, 915, 439, 264, 1589, 510, 13, 51814], "temperature": 0.0, "avg_logprob": -0.14914141203227796, "compression_ratio": 1.722943722943723, "no_speech_prob": 0.0018084344919770956}, {"id": 276, "seek": 100100, "start": 1001.0, "end": 1004.0, "text": " This looks like this was slash dev.", "tokens": [50364, 639, 1542, 411, 341, 390, 17330, 1905, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 277, "seek": 100100, "start": 1004.0, "end": 1009.0, "text": " What else do we have here? Let's have a look.", "tokens": [50514, 708, 1646, 360, 321, 362, 510, 30, 961, 311, 362, 257, 574, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 278, "seek": 100100, "start": 1013.0, "end": 1015.0, "text": " Yeah, I think that's okay.", "tokens": [50964, 865, 11, 286, 519, 300, 311, 1392, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 279, "seek": 100100, "start": 1015.0, "end": 1022.0, "text": " And previously, I also wrote some, my secret data into the memory pages,", "tokens": [51064, 400, 8046, 11, 286, 611, 4114, 512, 11, 452, 4054, 1412, 666, 264, 4675, 7183, 11, 51414], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 280, "seek": 100100, "start": 1022.0, "end": 1025.0, "text": " and I can actually find this memory again here,", "tokens": [51414, 293, 286, 393, 767, 915, 341, 4675, 797, 510, 11, 51564], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 281, "seek": 100100, "start": 1025.0, "end": 1028.0, "text": " this information again in the pages files.", "tokens": [51564, 341, 1589, 797, 294, 264, 7183, 7098, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1888762882777623, "compression_ratio": 1.4863387978142077, "no_speech_prob": 0.009990240447223186}, {"id": 282, "seek": 102800, "start": 1028.0, "end": 1031.0, "text": " The pages images are, those are not,", "tokens": [50364, 440, 7183, 5267, 366, 11, 729, 366, 406, 11, 50514], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 283, "seek": 102800, "start": 1031.0, "end": 1034.0, "text": " protobuf files are raw dumps of the memory,", "tokens": [50514, 1742, 996, 2947, 7098, 366, 8936, 11430, 82, 295, 264, 4675, 11, 50664], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 284, "seek": 102800, "start": 1034.0, "end": 1036.0, "text": " this is all the memory which was written to disk,", "tokens": [50664, 341, 307, 439, 264, 4675, 597, 390, 3720, 281, 12355, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 285, "seek": 102800, "start": 1036.0, "end": 1040.0, "text": " and I can again find the information I've written to memory here.", "tokens": [50764, 293, 286, 393, 797, 915, 264, 1589, 286, 600, 3720, 281, 4675, 510, 13, 50964], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 286, "seek": 102800, "start": 1040.0, "end": 1042.0, "text": " So if I know what I'm looking for, it's easy,", "tokens": [50964, 407, 498, 286, 458, 437, 286, 478, 1237, 337, 11, 309, 311, 1858, 11, 51064], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 287, "seek": 102800, "start": 1042.0, "end": 1045.0, "text": " if I'm looking for a password, then I have to pause it all through", "tokens": [51064, 498, 286, 478, 1237, 337, 257, 11524, 11, 550, 286, 362, 281, 10465, 309, 439, 807, 51214], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 288, "seek": 102800, "start": 1045.0, "end": 1048.0, "text": " and maybe find a useful string in there,", "tokens": [51214, 293, 1310, 915, 257, 4420, 6798, 294, 456, 11, 51364], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 289, "seek": 102800, "start": 1048.0, "end": 1053.0, "text": " but this is just to show you, you have access to all memory pages,", "tokens": [51364, 457, 341, 307, 445, 281, 855, 291, 11, 291, 362, 2105, 281, 439, 4675, 7183, 11, 51614], "temperature": 0.0, "avg_logprob": -0.14345369419129958, "compression_ratio": 1.709016393442623, "no_speech_prob": 0.010145354084670544}, {"id": 290, "seek": 105300, "start": 1053.0, "end": 1055.0, "text": " and they are now all on disk,", "tokens": [50364, 293, 436, 366, 586, 439, 322, 12355, 11, 50464], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 291, "seek": 105300, "start": 1055.0, "end": 1061.0, "text": " and it can be easily analyzed, or at least look at.", "tokens": [50464, 293, 309, 393, 312, 3612, 28181, 11, 420, 412, 1935, 574, 412, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 292, "seek": 105300, "start": 1061.0, "end": 1066.0, "text": " So if, okay, let's, I also wrote a couple of files to my container,", "tokens": [50764, 407, 498, 11, 1392, 11, 718, 311, 11, 286, 611, 4114, 257, 1916, 295, 7098, 281, 452, 10129, 11, 51014], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 293, "seek": 105300, "start": 1066.0, "end": 1069.0, "text": " I mentioned this here, the root of sdif tar,", "tokens": [51014, 286, 2835, 341, 510, 11, 264, 5593, 295, 262, 67, 351, 3112, 11, 51164], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 294, "seek": 105300, "start": 1069.0, "end": 1071.0, "text": " let's unpack that one.", "tokens": [51164, 718, 311, 26699, 300, 472, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 295, "seek": 105300, "start": 1073.0, "end": 1076.0, "text": " And so now this contains three files,", "tokens": [51364, 400, 370, 586, 341, 8306, 1045, 7098, 11, 51514], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 296, "seek": 105300, "start": 1076.0, "end": 1078.0, "text": " so these are all files which have changed", "tokens": [51514, 370, 613, 366, 439, 7098, 597, 362, 3105, 51614], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 297, "seek": 105300, "start": 1078.0, "end": 1081.0, "text": " compared to the base image of the container,", "tokens": [51614, 5347, 281, 264, 3096, 3256, 295, 264, 10129, 11, 51764], "temperature": 0.0, "avg_logprob": -0.16003808788224763, "compression_ratio": 1.5833333333333333, "no_speech_prob": 0.0022499843034893274}, {"id": 298, "seek": 108100, "start": 1081.0, "end": 1084.0, "text": " and this is just really simple, a file which is created,", "tokens": [50364, 293, 341, 307, 445, 534, 2199, 11, 257, 3991, 597, 307, 2942, 11, 50514], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 299, "seek": 108100, "start": 1084.0, "end": 1088.0, "text": " it just has the, it just contains the name of the file itself,", "tokens": [50514, 309, 445, 575, 264, 11, 309, 445, 8306, 264, 1315, 295, 264, 3991, 2564, 11, 50714], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 300, "seek": 108100, "start": 1088.0, "end": 1092.0, "text": " but it's just to show you, if you want to look at content", "tokens": [50714, 457, 309, 311, 445, 281, 855, 291, 11, 498, 291, 528, 281, 574, 412, 2701, 50914], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 301, "seek": 108100, "start": 1092.0, "end": 1094.0, "text": " which has changed in the container,", "tokens": [50914, 597, 575, 3105, 294, 264, 10129, 11, 51014], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 302, "seek": 108100, "start": 1094.0, "end": 1098.0, "text": " you will find it here in this root of sdif tar,", "tokens": [51014, 291, 486, 915, 309, 510, 294, 341, 5593, 295, 262, 67, 351, 3112, 11, 51214], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 303, "seek": 108100, "start": 1098.0, "end": 1100.0, "text": " which contains all the changed files.", "tokens": [51214, 597, 8306, 439, 264, 3105, 7098, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 304, "seek": 108100, "start": 1100.0, "end": 1102.0, "text": " And if you think this is all too much work,", "tokens": [51314, 400, 498, 291, 519, 341, 307, 439, 886, 709, 589, 11, 51414], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 305, "seek": 108100, "start": 1102.0, "end": 1105.0, "text": " then I already mentioned checkpoint control before,", "tokens": [51414, 550, 286, 1217, 2835, 42269, 1969, 949, 11, 51564], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 306, "seek": 108100, "start": 1105.0, "end": 1109.0, "text": " and it's even, has even more possibilities", "tokens": [51564, 293, 309, 311, 754, 11, 575, 754, 544, 12178, 51764], "temperature": 0.0, "avg_logprob": -0.08652077202035599, "compression_ratio": 1.7877551020408162, "no_speech_prob": 0.0011675519635900855}, {"id": 307, "seek": 110900, "start": 1109.0, "end": 1112.0, "text": " than what I've shown you, most of the things I've done here manually,", "tokens": [50364, 813, 437, 286, 600, 4898, 291, 11, 881, 295, 264, 721, 286, 600, 1096, 510, 16945, 11, 50514], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 308, "seek": 110900, "start": 1112.0, "end": 1115.0, "text": " the tool, thanks to our Google Summer of Code students,", "tokens": [50514, 264, 2290, 11, 3231, 281, 527, 3329, 16161, 295, 15549, 1731, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 309, "seek": 110900, "start": 1115.0, "end": 1117.0, "text": " can at this point do.", "tokens": [50664, 393, 412, 341, 935, 360, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 310, "seek": 110900, "start": 1117.0, "end": 1120.0, "text": " So let's have a look at checkpoint control inspect of the,", "tokens": [50764, 407, 718, 311, 362, 257, 574, 412, 42269, 1969, 15018, 295, 264, 11, 50914], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 311, "seek": 110900, "start": 1120.0, "end": 1125.0, "text": " and the $CP variable is basically pointing to the tar archive,", "tokens": [50914, 293, 264, 1848, 20049, 7006, 307, 1936, 12166, 281, 264, 3112, 23507, 11, 51164], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 312, "seek": 110900, "start": 1125.0, "end": 1128.0, "text": " so the tool is now unpacking the tar archive", "tokens": [51164, 370, 264, 2290, 307, 586, 26699, 278, 264, 3112, 23507, 51314], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 313, "seek": 110900, "start": 1128.0, "end": 1130.0, "text": " and giving us all the information.", "tokens": [51314, 293, 2902, 505, 439, 264, 1589, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 314, "seek": 110900, "start": 1130.0, "end": 1133.0, "text": " And what we see here now is this information we saw before,", "tokens": [51414, 400, 437, 321, 536, 510, 586, 307, 341, 1589, 321, 1866, 949, 11, 51564], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 315, "seek": 110900, "start": 1133.0, "end": 1136.0, "text": " so it's just some basic information about the image, where it was,", "tokens": [51564, 370, 309, 311, 445, 512, 3875, 1589, 466, 264, 3256, 11, 689, 309, 390, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12534389041718982, "compression_ratio": 1.7246376811594204, "no_speech_prob": 0.0033184869680553675}, {"id": 316, "seek": 113600, "start": 1136.0, "end": 1140.0, "text": " how big the checkpoint size is, then we see CreeO dump statistics,", "tokens": [50364, 577, 955, 264, 42269, 2744, 307, 11, 550, 321, 536, 383, 701, 46, 11430, 12523, 11, 50564], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 317, "seek": 113600, "start": 1140.0, "end": 1144.0, "text": " this is basically the time CreeO needs to write the checkpoint to this.", "tokens": [50564, 341, 307, 1936, 264, 565, 383, 701, 46, 2203, 281, 2464, 264, 42269, 281, 341, 13, 50764], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 318, "seek": 113600, "start": 1144.0, "end": 1146.0, "text": " You see how many memory pages were scanned,", "tokens": [50764, 509, 536, 577, 867, 4675, 7183, 645, 45089, 11, 50864], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 319, "seek": 113600, "start": 1146.0, "end": 1148.0, "text": " if they should be written to this,", "tokens": [50864, 498, 436, 820, 312, 3720, 281, 341, 11, 50964], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 320, "seek": 113600, "start": 1148.0, "end": 1150.0, "text": " how many memory pages were actually written to this,", "tokens": [50964, 577, 867, 4675, 7183, 645, 767, 3720, 281, 341, 11, 51064], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 321, "seek": 113600, "start": 1150.0, "end": 1155.0, "text": " and then we see the full process command line.", "tokens": [51064, 293, 550, 321, 536, 264, 1577, 1399, 5622, 1622, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 322, "seek": 113600, "start": 1155.0, "end": 1161.0, "text": " We see all the environments variables of all processes running in our container,", "tokens": [51314, 492, 536, 439, 264, 12388, 9102, 295, 439, 7555, 2614, 294, 527, 10129, 11, 51614], "temperature": 0.0, "avg_logprob": -0.15933543503886521, "compression_ratio": 1.817351598173516, "no_speech_prob": 0.022931629791855812}, {"id": 323, "seek": 116100, "start": 1161.0, "end": 1167.0, "text": " and next one even more variables, and more and more,", "tokens": [50364, 293, 958, 472, 754, 544, 9102, 11, 293, 544, 293, 544, 11, 50664], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 324, "seek": 116100, "start": 1167.0, "end": 1176.0, "text": " and at some point there's, I think it even contains the open files,", "tokens": [50664, 293, 412, 512, 935, 456, 311, 11, 286, 519, 309, 754, 8306, 264, 1269, 7098, 11, 51114], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 325, "seek": 116100, "start": 1176.0, "end": 1178.0, "text": " too many variables here.", "tokens": [51114, 886, 867, 9102, 510, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 326, "seek": 116100, "start": 1178.0, "end": 1181.0, "text": " You see, now we see the open files, you see the one has open def null,", "tokens": [51214, 509, 536, 11, 586, 321, 536, 264, 1269, 7098, 11, 291, 536, 264, 472, 575, 1269, 1060, 18184, 11, 51364], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 327, "seek": 116100, "start": 1181.0, "end": 1185.0, "text": " and then two pipes, and then the working directory,", "tokens": [51364, 293, 550, 732, 21882, 11, 293, 550, 264, 1364, 21120, 11, 51564], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 328, "seek": 116100, "start": 1185.0, "end": 1189.0, "text": " and open sockets, you even see that that's the socket I've been talking to,", "tokens": [51564, 293, 1269, 370, 11984, 11, 291, 754, 536, 300, 300, 311, 264, 19741, 286, 600, 668, 1417, 281, 11, 51764], "temperature": 0.0, "avg_logprob": -0.2015904188156128, "compression_ratio": 1.839572192513369, "no_speech_prob": 0.008046613074839115}, {"id": 329, "seek": 118900, "start": 1189.0, "end": 1192.0, "text": " and then we go to the process here,", "tokens": [50364, 293, 550, 321, 352, 281, 264, 1399, 510, 11, 50514], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 330, "seek": 118900, "start": 1192.0, "end": 1197.0, "text": " and then we see all the mounts we need,", "tokens": [50514, 293, 550, 321, 536, 439, 264, 40982, 321, 643, 11, 50764], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 331, "seek": 118900, "start": 1197.0, "end": 1200.0, "text": " this is also important for restoring the process later.", "tokens": [50764, 341, 307, 611, 1021, 337, 36349, 264, 1399, 1780, 13, 50914], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 332, "seek": 118900, "start": 1200.0, "end": 1203.0, "text": " So I guess that's the end of my demo,", "tokens": [50914, 407, 286, 2041, 300, 311, 264, 917, 295, 452, 10723, 11, 51064], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 333, "seek": 118900, "start": 1203.0, "end": 1207.0, "text": " so checkpoint control was the tool I was using,", "tokens": [51064, 370, 42269, 1969, 390, 264, 2290, 286, 390, 1228, 11, 51264], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 334, "seek": 118900, "start": 1207.0, "end": 1213.0, "text": " I was using CreeO image tool to have a look at the content of the images,", "tokens": [51264, 286, 390, 1228, 383, 701, 46, 3256, 2290, 281, 362, 257, 574, 412, 264, 2701, 295, 264, 5267, 11, 51564], "temperature": 0.0, "avg_logprob": -0.14743424610919262, "compression_ratio": 1.6348314606741574, "no_speech_prob": 0.012607943266630173}, {"id": 335, "seek": 121300, "start": 1213.0, "end": 1220.0, "text": " and then I was using grep to find my secret key from the memory pages.", "tokens": [50364, 293, 550, 286, 390, 1228, 6066, 79, 281, 915, 452, 4054, 2141, 490, 264, 4675, 7183, 13, 50714], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 336, "seek": 121300, "start": 1220.0, "end": 1225.0, "text": " So one thing I didn't show, you can use, there's a tool in CreeO", "tokens": [50714, 407, 472, 551, 286, 994, 380, 855, 11, 291, 393, 764, 11, 456, 311, 257, 2290, 294, 383, 701, 46, 50964], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 337, "seek": 121300, "start": 1225.0, "end": 1229.0, "text": " which converts the checkpoint images to core dump files,", "tokens": [50964, 597, 38874, 264, 42269, 5267, 281, 4965, 11430, 7098, 11, 51164], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 338, "seek": 121300, "start": 1229.0, "end": 1233.0, "text": " and then you can use gdb to look at them,", "tokens": [51164, 293, 550, 291, 393, 764, 290, 67, 65, 281, 574, 412, 552, 11, 51364], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 339, "seek": 121300, "start": 1233.0, "end": 1237.0, "text": " it's basically the same, you see the registers and the call stack and things like this,", "tokens": [51364, 309, 311, 1936, 264, 912, 11, 291, 536, 264, 38351, 293, 264, 818, 8630, 293, 721, 411, 341, 11, 51564], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 340, "seek": 121300, "start": 1237.0, "end": 1240.0, "text": " might also be interesting for a couple of people,", "tokens": [51564, 1062, 611, 312, 1880, 337, 257, 1916, 295, 561, 11, 51714], "temperature": 0.0, "avg_logprob": -0.17404869227733427, "compression_ratio": 1.5965665236051503, "no_speech_prob": 0.1121615469455719}, {"id": 341, "seek": 124000, "start": 1240.0, "end": 1244.0, "text": " to what's next, especially with focus on Kubernetes,", "tokens": [50364, 281, 437, 311, 958, 11, 2318, 365, 1879, 322, 23145, 11, 50564], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 342, "seek": 124000, "start": 1244.0, "end": 1248.0, "text": " so I've shown that I have a kubectl checkpoint kind of working,", "tokens": [50564, 370, 286, 600, 4898, 300, 286, 362, 257, 350, 836, 557, 75, 42269, 733, 295, 1364, 11, 50764], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 343, "seek": 124000, "start": 1248.0, "end": 1253.0, "text": " that's an open pull request, it's not being actively discussed at this point,", "tokens": [50764, 300, 311, 364, 1269, 2235, 5308, 11, 309, 311, 406, 885, 13022, 7152, 412, 341, 935, 11, 51014], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 344, "seek": 124000, "start": 1253.0, "end": 1257.0, "text": " but it's there so if somebody needs it, it can be easily used,", "tokens": [51014, 457, 309, 311, 456, 370, 498, 2618, 2203, 309, 11, 309, 393, 312, 3612, 1143, 11, 51214], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 345, "seek": 124000, "start": 1257.0, "end": 1263.0, "text": " maybe the next step would be to integrate checkpoint for complete parts,", "tokens": [51214, 1310, 264, 958, 1823, 576, 312, 281, 13365, 42269, 337, 3566, 3166, 11, 51514], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 346, "seek": 124000, "start": 1263.0, "end": 1266.0, "text": " I've implemented this a couple of years ago, it's pretty simple,", "tokens": [51514, 286, 600, 12270, 341, 257, 1916, 295, 924, 2057, 11, 309, 311, 1238, 2199, 11, 51664], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 347, "seek": 124000, "start": 1266.0, "end": 1269.0, "text": " we just do a loop over all containers in a pod,", "tokens": [51664, 321, 445, 360, 257, 6367, 670, 439, 17089, 294, 257, 2497, 11, 51814], "temperature": 0.0, "avg_logprob": -0.11111482799562633, "compression_ratio": 1.6407407407407408, "no_speech_prob": 0.013169114477932453}, {"id": 348, "seek": 126900, "start": 1269.0, "end": 1272.0, "text": " we just create some metadata for the pod and then we can recreate it,", "tokens": [50364, 321, 445, 1884, 512, 26603, 337, 264, 2497, 293, 550, 321, 393, 25833, 309, 11, 50514], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 349, "seek": 126900, "start": 1272.0, "end": 1274.0, "text": " so this is not a technical challenge,", "tokens": [50514, 370, 341, 307, 406, 257, 6191, 3430, 11, 50614], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 350, "seek": 126900, "start": 1274.0, "end": 1279.0, "text": " it's just most things at this point are how to get it in a way into Kubernetes", "tokens": [50614, 309, 311, 445, 881, 721, 412, 341, 935, 366, 577, 281, 483, 309, 294, 257, 636, 666, 23145, 50864], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 351, "seek": 126900, "start": 1279.0, "end": 1283.0, "text": " which is sustainable and makes sense,", "tokens": [50864, 597, 307, 11235, 293, 1669, 2020, 11, 51064], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 352, "seek": 126900, "start": 1283.0, "end": 1286.0, "text": " and then maybe we have something like kubectl migrate,", "tokens": [51064, 293, 550, 1310, 321, 362, 746, 411, 350, 836, 557, 75, 31821, 11, 51214], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 353, "seek": 126900, "start": 1286.0, "end": 1288.0, "text": " so we don't have to do it manually,", "tokens": [51214, 370, 321, 500, 380, 362, 281, 360, 309, 16945, 11, 51314], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 354, "seek": 126900, "start": 1288.0, "end": 1291.0, "text": " maybe at some point the scheduler will decide,", "tokens": [51314, 1310, 412, 512, 935, 264, 12000, 260, 486, 4536, 11, 51464], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 355, "seek": 126900, "start": 1291.0, "end": 1293.0, "text": " let's move this pod somewhere else,", "tokens": [51464, 718, 311, 1286, 341, 2497, 4079, 1646, 11, 51564], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 356, "seek": 126900, "start": 1293.0, "end": 1298.0, "text": " and one thing, so the image format I'm using is currently just a tar file,", "tokens": [51564, 293, 472, 551, 11, 370, 264, 3256, 7877, 286, 478, 1228, 307, 4362, 445, 257, 3112, 3991, 11, 51814], "temperature": 0.0, "avg_logprob": -0.13790668277289925, "compression_ratio": 1.7389705882352942, "no_speech_prob": 0.0028413955587893724}, {"id": 357, "seek": 129800, "start": 1298.0, "end": 1301.0, "text": " I came up with, but it's not a standard,", "tokens": [50364, 286, 1361, 493, 365, 11, 457, 309, 311, 406, 257, 3832, 11, 50514], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 358, "seek": 129800, "start": 1301.0, "end": 1304.0, "text": " so container D uses something else,", "tokens": [50514, 370, 10129, 413, 4960, 746, 1646, 11, 50664], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 359, "seek": 129800, "start": 1304.0, "end": 1306.0, "text": " I looked at the container D format,", "tokens": [50664, 286, 2956, 412, 264, 10129, 413, 7877, 11, 50764], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 360, "seek": 129800, "start": 1306.0, "end": 1312.0, "text": " it's applicable for what I was looking at,", "tokens": [50764, 309, 311, 21142, 337, 437, 286, 390, 1237, 412, 11, 51064], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 361, "seek": 129800, "start": 1312.0, "end": 1315.0, "text": " but the problem was they were using internal protobuf structures,", "tokens": [51064, 457, 264, 1154, 390, 436, 645, 1228, 6920, 1742, 996, 2947, 9227, 11, 51214], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 362, "seek": 129800, "start": 1315.0, "end": 1319.0, "text": " I didn't thought make sense to have in a public checkpoint,", "tokens": [51214, 286, 994, 380, 1194, 652, 2020, 281, 362, 294, 257, 1908, 42269, 11, 51414], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 363, "seek": 129800, "start": 1319.0, "end": 1325.0, "text": " in theory, checkpointing on container D and restoring in cryo should not be a problem,", "tokens": [51414, 294, 5261, 11, 42269, 278, 322, 10129, 413, 293, 36349, 294, 3305, 78, 820, 406, 312, 257, 1154, 11, 51714], "temperature": 0.0, "avg_logprob": -0.12823802597668707, "compression_ratio": 1.6803652968036529, "no_speech_prob": 0.002627531997859478}, {"id": 364, "seek": 132500, "start": 1325.0, "end": 1329.0, "text": " but at this point we don't have a common image standard,", "tokens": [50364, 457, 412, 341, 935, 321, 500, 380, 362, 257, 2689, 3256, 3832, 11, 50564], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 365, "seek": 132500, "start": 1329.0, "end": 1332.0, "text": " I tried to start a discussion here,", "tokens": [50564, 286, 3031, 281, 722, 257, 5017, 510, 11, 50714], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 366, "seek": 132500, "start": 1332.0, "end": 1335.0, "text": " but it also didn't continue unfortunately,", "tokens": [50714, 457, 309, 611, 994, 380, 2354, 7015, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 367, "seek": 132500, "start": 1335.0, "end": 1338.0, "text": " so with this I'm at the end,", "tokens": [50864, 370, 365, 341, 286, 478, 412, 264, 917, 11, 51014], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 368, "seek": 132500, "start": 1338.0, "end": 1342.0, "text": " so I showed you that cryo can checkpoint containers,", "tokens": [51014, 370, 286, 4712, 291, 300, 3305, 78, 393, 42269, 17089, 11, 51214], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 369, "seek": 132500, "start": 1342.0, "end": 1344.0, "text": " I haven't shown the restore part, but it works,", "tokens": [51214, 286, 2378, 380, 4898, 264, 15227, 644, 11, 457, 309, 1985, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 370, "seek": 132500, "start": 1344.0, "end": 1347.0, "text": " it integrated in different container run times,", "tokens": [51314, 309, 10919, 294, 819, 10129, 1190, 1413, 11, 51464], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 371, "seek": 132500, "start": 1347.0, "end": 1350.0, "text": " it's used in production by different companies at this point,", "tokens": [51464, 309, 311, 1143, 294, 4265, 538, 819, 3431, 412, 341, 935, 11, 51614], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 372, "seek": 132500, "start": 1350.0, "end": 1354.0, "text": " use cases are things like reboot into new kernel and save states,", "tokens": [51614, 764, 3331, 366, 721, 411, 33818, 666, 777, 28256, 293, 3155, 4368, 11, 51814], "temperature": 0.0, "avg_logprob": -0.1287569665072257, "compression_ratio": 1.7569721115537849, "no_speech_prob": 0.004743525758385658}, {"id": 373, "seek": 135400, "start": 1354.0, "end": 1356.0, "text": " multiple copies, container migration,", "tokens": [50364, 3866, 14341, 11, 10129, 17011, 11, 50464], "temperature": 0.0, "avg_logprob": -0.23320239886902927, "compression_ratio": 1.349112426035503, "no_speech_prob": 0.03378535434603691}, {"id": 374, "seek": 135400, "start": 1356.0, "end": 1361.0, "text": " spot instances, AI learning support for GPUs there,", "tokens": [50464, 4008, 14519, 11, 7318, 2539, 1406, 337, 18407, 82, 456, 11, 50714], "temperature": 0.0, "avg_logprob": -0.23320239886902927, "compression_ratio": 1.349112426035503, "no_speech_prob": 0.03378535434603691}, {"id": 375, "seek": 135400, "start": 1361.0, "end": 1367.0, "text": " and this is all available in Kubernetes under the forensic container checkpoint in cap 2008.", "tokens": [50714, 293, 341, 307, 439, 2435, 294, 23145, 833, 264, 39084, 10129, 42269, 294, 1410, 10389, 13, 51014], "temperature": 0.0, "avg_logprob": -0.23320239886902927, "compression_ratio": 1.349112426035503, "no_speech_prob": 0.03378535434603691}, {"id": 376, "seek": 135400, "start": 1367.0, "end": 1371.0, "text": " So, I'm at the end, thank you, any questions?", "tokens": [51014, 407, 11, 286, 478, 412, 264, 917, 11, 1309, 291, 11, 604, 1651, 30, 51214], "temperature": 0.0, "avg_logprob": -0.23320239886902927, "compression_ratio": 1.349112426035503, "no_speech_prob": 0.03378535434603691}, {"id": 377, "seek": 137100, "start": 1371.0, "end": 1373.0, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.46097677725332753, "compression_ratio": 1.0, "no_speech_prob": 0.2040427029132843}, {"id": 378, "seek": 137100, "start": 1381.0, "end": 1383.0, "text": " Oh, sorry.", "tokens": [50864, 876, 11, 2597, 13, 50964], "temperature": 0.0, "avg_logprob": -0.46097677725332753, "compression_ratio": 1.0, "no_speech_prob": 0.2040427029132843}, {"id": 379, "seek": 137100, "start": 1391.0, "end": 1395.0, "text": " Sorry, please be quiet, we cannot hear the questions.", "tokens": [51364, 4919, 11, 1767, 312, 5677, 11, 321, 2644, 1568, 264, 1651, 13, 51564], "temperature": 0.0, "avg_logprob": -0.46097677725332753, "compression_ratio": 1.0, "no_speech_prob": 0.2040427029132843}, {"id": 380, "seek": 139500, "start": 1395.0, "end": 1397.0, "text": " You mentioned GPUs are something you can't handle,", "tokens": [50364, 509, 2835, 18407, 82, 366, 746, 291, 393, 380, 4813, 11, 50464], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 381, "seek": 139500, "start": 1397.0, "end": 1400.0, "text": " what are the other big resources that...", "tokens": [50464, 437, 366, 264, 661, 955, 3593, 300, 485, 50614], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 382, "seek": 139500, "start": 1400.0, "end": 1404.0, "text": " So basically cryo cannot handle anything that's external to the kernel,", "tokens": [50614, 407, 1936, 3305, 78, 2644, 4813, 1340, 300, 311, 8320, 281, 264, 28256, 11, 50814], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 383, "seek": 139500, "start": 1404.0, "end": 1408.0, "text": " so InfiniBand is one which comes up in high performance computing always,", "tokens": [50814, 370, 11537, 3812, 33, 474, 307, 472, 597, 1487, 493, 294, 1090, 3389, 15866, 1009, 11, 51014], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 384, "seek": 139500, "start": 1408.0, "end": 1412.0, "text": " so everything where you have a state in additional hardware,", "tokens": [51014, 370, 1203, 689, 291, 362, 257, 1785, 294, 4497, 8837, 11, 51214], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 385, "seek": 139500, "start": 1412.0, "end": 1414.0, "text": " you need some way to extract it,", "tokens": [51214, 291, 643, 512, 636, 281, 8947, 309, 11, 51314], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 386, "seek": 139500, "start": 1414.0, "end": 1418.0, "text": " you need to extract the state so you can later restore it, so...", "tokens": [51314, 291, 643, 281, 8947, 264, 1785, 370, 291, 393, 1780, 15227, 309, 11, 370, 485, 51514], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 387, "seek": 139500, "start": 1418.0, "end": 1420.0, "text": " And just create a text in the process,", "tokens": [51514, 400, 445, 1884, 257, 2487, 294, 264, 1399, 11, 51614], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 388, "seek": 139500, "start": 1420.0, "end": 1422.0, "text": " is that stuff that fails?", "tokens": [51614, 307, 300, 1507, 300, 18199, 30, 51714], "temperature": 0.0, "avg_logprob": -0.2212858846632101, "compression_ratio": 1.6464285714285714, "no_speech_prob": 0.029637278988957405}, {"id": 389, "seek": 142200, "start": 1422.0, "end": 1424.0, "text": " Exactly, it fails, Daniel.", "tokens": [50364, 7587, 11, 309, 18199, 11, 8033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.23675223400718287, "compression_ratio": 1.2280701754385965, "no_speech_prob": 0.02624233439564705}, {"id": 390, "seek": 142200, "start": 1445.0, "end": 1448.0, "text": " So currently the people I've talked to today,", "tokens": [51514, 407, 4362, 264, 561, 286, 600, 2825, 281, 965, 11, 51664], "temperature": 0.0, "avg_logprob": -0.23675223400718287, "compression_ratio": 1.2280701754385965, "no_speech_prob": 0.02624233439564705}, {"id": 391, "seek": 142200, "start": 1448.0, "end": 1451.0, "text": " they are just interested in finding out if there has been an attack", "tokens": [51664, 436, 366, 445, 3102, 294, 5006, 484, 498, 456, 575, 668, 364, 2690, 51814], "temperature": 0.0, "avg_logprob": -0.23675223400718287, "compression_ratio": 1.2280701754385965, "no_speech_prob": 0.02624233439564705}, {"id": 392, "seek": 145100, "start": 1451.0, "end": 1455.0, "text": " or if there is an attack ongoing, things like this,", "tokens": [50364, 420, 498, 456, 307, 364, 2690, 10452, 11, 721, 411, 341, 11, 50564], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 393, "seek": 145100, "start": 1455.0, "end": 1460.0, "text": " and then maybe at some point, maybe if you can have a couple of checkpoints", "tokens": [50564, 293, 550, 1310, 412, 512, 935, 11, 1310, 498, 291, 393, 362, 257, 1916, 295, 1520, 20552, 50814], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 394, "seek": 145100, "start": 1460.0, "end": 1463.0, "text": " and figure out, okay, this looks like an attack pattern,", "tokens": [50814, 293, 2573, 484, 11, 1392, 11, 341, 1542, 411, 364, 2690, 5102, 11, 50964], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 395, "seek": 145100, "start": 1463.0, "end": 1466.0, "text": " maybe detect it automatically using check pointing,", "tokens": [50964, 1310, 5531, 309, 6772, 1228, 1520, 12166, 11, 51114], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 396, "seek": 145100, "start": 1466.0, "end": 1468.0, "text": " this would be maybe something in the future,", "tokens": [51114, 341, 576, 312, 1310, 746, 294, 264, 2027, 11, 51214], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 397, "seek": 145100, "start": 1468.0, "end": 1472.0, "text": " but finding a possible attack is one of the main motivations", "tokens": [51214, 457, 5006, 257, 1944, 2690, 307, 472, 295, 264, 2135, 39034, 51414], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 398, "seek": 145100, "start": 1472.0, "end": 1475.0, "text": " for people for the forensic use case.", "tokens": [51414, 337, 561, 337, 264, 39084, 764, 1389, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15462252914264638, "compression_ratio": 1.7431192660550459, "no_speech_prob": 0.0788758173584938}, {"id": 399, "seek": 148100, "start": 1481.0, "end": 1484.0, "text": " Thank you.", "tokens": [50414, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.6639510790506998, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.990135133266449}], "language": "en"}