{"text": " I can try this with high school, because of why? Not to anything? Are you press a five? Second screen? No, it doesn't work on my laptop. I don't know why. This is not on the screen, you say? You are looping it? Yes, so it's better when I use your laptop for presenting the slides. And then switch when I'm at the end. Because I want to start now. So in the last few years I have been working on the Libre Sock FPGA prototype. Using the orange crap and what I did is porting the existing LS2 to the orange crap and began investigating why DRAM doesn't work. Both the ECP5 and the IS-40 FPGAs have Libre toolshelves and I have various FPGA ports including the orange crap which I use for Libre Sock prototyping. And there is also a micro-word which already supports the Libre Sock. So at the end of my presentations I might be able to do a live demo. And like DRAM that uses the original mig but we have switched to N-mig. So the next generation of the Milky Misc generator in that one doesn't fit into LS2. So I was unable to rebuild the original from the micro-word and decided that I would continue working on N-mig based DRAM. And I found some very good bugs here. ECP5 is big enough for prototyping the Libre Sock core and when I started I was already able to run cold boot but there was no DRAM so I began modifying N-mig boards and the clerser pins needed to connect. And the reason why I am doing this is I wanted to design a GPU that is even ready for VR. That is my motivation I have with LS2 and its current GPU needs non-free firmware and on the long term I wanted to avoid this. And I also mentioned that the i40 FPGA is used by Valve and Bitgrace for example in the Valve Index. Now the question is why do we use N-mig in DRAM? What we are using with DRAM itself is an N-mig port of Lambda Sock and N-mig is already used by Libre Sock project and we don't want to have multiple toolkits so everything gets ported to N-mig and we took parts of micro-word and ported them to N-mig and the same goes for most of the other things that we want to port them to N-mig. And the old mig which had some design weaknesses we want to avoid and we also want to avoid LightX which provides a huge collection of libraries and even software. And in N-mig we don't have all those features at the moment. N-mig is much more powerful than Varylock and VHDL. Actually it is a Varylock generator and it is much easier to use for anyone who knows Python so you don't have to learn another VHDL if you want to contribute to Libre Sock. And N-mig of course it works nice with Yosos, Next, PNR and GCC and all those things. And it is also used by DRAM. DRAM is a simplified RAM controller. It currently only supports ECP-5 but in the future we might want to support I-40 and those heavier Xilinx models which provide even more cells so you can design more complex designs. And I wanted to learn how to use a DRAM file that comes with the ECP-5. I found that there was already some software hardware designs, MicroVot that support booting Linux using the MicroVot and I wanted to do the same with the Libre Sock Core but I didn't get there because the DRAM isn't currently working. There are multiple generations of DRAM, for example DDR. As DRAM interfaces DDR4 for the Power 9, DDR5 for the Power 10 and on the OrangeCrab we only have DDR3 and it is small but large enough to boot Linux. And for the OrangeCrab pins we have Migen boards. I made the changes myself. And the controllers that we can use are found in both DRAM and in LiteDRAM so I have compared those controllers. They are very similar but there are changes that might be important. And I also compared software that comes with both. And if it does not work debugging is hard so I am going to look for ways to connect this to a host computer and for example run software from an external emulated memory. And here we have the ECP-5 DRAM controller. It has high speed I.O. interfaces with many built-in blocks and one of them is the data Q-throop. Buffer manager is a very complex module and it handles all the timings that you need for DRAM and those modules are FPGA specific. And we have Python implementations of both files so for DRAM and for DDR and those modules are very similar. Here is a typical module so you have to connect data lines, address lines and few address lines and clocks. And then we have a burst-dead signal that is used for read leveling so our software checks whether this burst-dead signal is asserted. And the data valid signal controls the DFI phases. And on the input size we have a pause signal which we have to assert if we change the delay. And then we use the read clock cell to set up the delay. So only with a certain kind of delay we can get everything working properly and we have to brute force which delay is the best one. Then we have a library called libgiram which we use to initialize this DRAM. And here we have to provide a context and we give it some base addresses and the profile for example includes the delays. And first we set the FITO software control then perform some init sequence. I think that it hasn't changed. Then we load the calibration and then we turn it back again and ideally it should work but I found out that it doesn't work that way. The MAM test doesn't pass or it sometimes only passes for some addresses and for some addresses it doesn't pass. So it seems that the data that I read back is corrupted. And that is a problem related to read leveling only. Read leveling on the ECP5 we only use read leveling and that has to be done for each file module. And there is an inner loop for the bitflip so we do tests for different combinations. We do a test for each read window and then try and use that returns a score and then we try to find the minimum and maximum delays. And then we take the bitflip with the best score and in this example only one of the bitflip values works. And the whole bitflip thing that isn't currently implemented in DRAM only in lite DRAM. And here we can see the read leveling for both files and we see that only the first bitflip works that we have the same settings for each file and that there are three working delays. And then we use the delay that is in the middle and once the delay is set we do a speed test that is currently not implemented but I'm going to implement that zone and then it copies the Linux kernel to the flash and then it puts into Linux. That takes longer time because it has to be decompressed. And then everything Linux kernel in a DRAM FS comes from the flash module that also holds the bit string for the FPGAs. First of all the FPGAs configured. Then I log in as root of course we don't have network that's one of the things I plan to share the BeagleBone Blacks network and then theoretically being able to SCP files to the orange grab. But I think that will be much more work but I have a Beagle wire, a small FPGAs so one of them will be used as a debugging aid and the other one will run Leprechaun. And I think it might be a good idea combining those because I have both boards and if I can use both for my work that seems to be a better option. And of course if I enter arch it shows that it is a power PC architecture and so now.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 16.0, "text": " I can try this with high school, because of why?", "tokens": [50364, 286, 393, 853, 341, 365, 1090, 1395, 11, 570, 295, 983, 30, 51164], "temperature": 0.0, "avg_logprob": -0.864273395944149, "compression_ratio": 1.182608695652174, "no_speech_prob": 0.5678591728210449}, {"id": 1, "seek": 0, "start": 16.0, "end": 18.0, "text": " Not to anything?", "tokens": [51164, 1726, 281, 1340, 30, 51264], "temperature": 0.0, "avg_logprob": -0.864273395944149, "compression_ratio": 1.182608695652174, "no_speech_prob": 0.5678591728210449}, {"id": 2, "seek": 0, "start": 18.0, "end": 21.0, "text": " Are you press a five?", "tokens": [51264, 2014, 291, 1886, 257, 1732, 30, 51414], "temperature": 0.0, "avg_logprob": -0.864273395944149, "compression_ratio": 1.182608695652174, "no_speech_prob": 0.5678591728210449}, {"id": 3, "seek": 0, "start": 21.0, "end": 23.0, "text": " Second screen?", "tokens": [51414, 5736, 2568, 30, 51514], "temperature": 0.0, "avg_logprob": -0.864273395944149, "compression_ratio": 1.182608695652174, "no_speech_prob": 0.5678591728210449}, {"id": 4, "seek": 0, "start": 23.0, "end": 27.0, "text": " No, it doesn't work on my laptop.", "tokens": [51514, 883, 11, 309, 1177, 380, 589, 322, 452, 10732, 13, 51714], "temperature": 0.0, "avg_logprob": -0.864273395944149, "compression_ratio": 1.182608695652174, "no_speech_prob": 0.5678591728210449}, {"id": 5, "seek": 2700, "start": 27.0, "end": 29.0, "text": " I don't know why.", "tokens": [50364, 286, 500, 380, 458, 983, 13, 50464], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 6, "seek": 2700, "start": 29.0, "end": 33.0, "text": " This is not on the screen, you say?", "tokens": [50464, 639, 307, 406, 322, 264, 2568, 11, 291, 584, 30, 50664], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 7, "seek": 2700, "start": 33.0, "end": 38.0, "text": " You are looping it?", "tokens": [50664, 509, 366, 6367, 278, 309, 30, 50914], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 8, "seek": 2700, "start": 38.0, "end": 44.0, "text": " Yes, so it's better when I use your laptop for presenting the slides.", "tokens": [50914, 1079, 11, 370, 309, 311, 1101, 562, 286, 764, 428, 10732, 337, 15578, 264, 9788, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 9, "seek": 2700, "start": 44.0, "end": 47.0, "text": " And then switch when I'm at the end.", "tokens": [51214, 400, 550, 3679, 562, 286, 478, 412, 264, 917, 13, 51364], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 10, "seek": 2700, "start": 47.0, "end": 51.0, "text": " Because I want to start now.", "tokens": [51364, 1436, 286, 528, 281, 722, 586, 13, 51564], "temperature": 0.0, "avg_logprob": -0.24349151832469995, "compression_ratio": 1.3660130718954249, "no_speech_prob": 0.23065166175365448}, {"id": 11, "seek": 5100, "start": 51.0, "end": 62.0, "text": " So in the last few years I have been working on the Libre Sock FPGA prototype.", "tokens": [50364, 407, 294, 264, 1036, 1326, 924, 286, 362, 668, 1364, 322, 264, 15834, 265, 407, 547, 36655, 12570, 19475, 13, 50914], "temperature": 0.0, "avg_logprob": -0.270899908883231, "compression_ratio": 1.4026845637583893, "no_speech_prob": 0.23770862817764282}, {"id": 12, "seek": 5100, "start": 62.0, "end": 74.0, "text": " Using the orange crap and what I did is porting the existing LS2 to the orange crap", "tokens": [50914, 11142, 264, 7671, 12426, 293, 437, 286, 630, 307, 2436, 278, 264, 6741, 36657, 17, 281, 264, 7671, 12426, 51514], "temperature": 0.0, "avg_logprob": -0.270899908883231, "compression_ratio": 1.4026845637583893, "no_speech_prob": 0.23770862817764282}, {"id": 13, "seek": 5100, "start": 74.0, "end": 79.0, "text": " and began investigating why DRAM doesn't work.", "tokens": [51514, 293, 4283, 22858, 983, 12118, 2865, 1177, 380, 589, 13, 51764], "temperature": 0.0, "avg_logprob": -0.270899908883231, "compression_ratio": 1.4026845637583893, "no_speech_prob": 0.23770862817764282}, {"id": 14, "seek": 8100, "start": 82.0, "end": 91.0, "text": " Both the ECP5 and the IS-40 FPGAs have Libre toolshelves", "tokens": [50414, 6767, 264, 19081, 47, 20, 293, 264, 6205, 12, 5254, 36655, 38, 10884, 362, 15834, 265, 2290, 2716, 338, 977, 50864], "temperature": 0.0, "avg_logprob": -0.24950613578160605, "compression_ratio": 1.2063492063492063, "no_speech_prob": 0.04736600071191788}, {"id": 15, "seek": 8100, "start": 91.0, "end": 101.0, "text": " and I have various FPGA ports including the orange crap which I use for Libre Sock prototyping.", "tokens": [50864, 293, 286, 362, 3683, 36655, 12570, 18160, 3009, 264, 7671, 12426, 597, 286, 764, 337, 15834, 265, 407, 547, 46219, 3381, 13, 51364], "temperature": 0.0, "avg_logprob": -0.24950613578160605, "compression_ratio": 1.2063492063492063, "no_speech_prob": 0.04736600071191788}, {"id": 16, "seek": 10100, "start": 102.0, "end": 111.0, "text": " And there is also a micro-word which already supports the Libre Sock.", "tokens": [50414, 400, 456, 307, 611, 257, 4532, 12, 7462, 597, 1217, 9346, 264, 15834, 265, 407, 547, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3161098718643188, "compression_ratio": 1.2, "no_speech_prob": 0.175985187292099}, {"id": 17, "seek": 10100, "start": 111.0, "end": 121.0, "text": " So at the end of my presentations I might be able to do a live demo.", "tokens": [50864, 407, 412, 264, 917, 295, 452, 18964, 286, 1062, 312, 1075, 281, 360, 257, 1621, 10723, 13, 51364], "temperature": 0.0, "avg_logprob": -0.3161098718643188, "compression_ratio": 1.2, "no_speech_prob": 0.175985187292099}, {"id": 18, "seek": 12100, "start": 121.0, "end": 132.0, "text": " And like DRAM that uses the original mig but we have switched to N-mig.", "tokens": [50364, 400, 411, 12118, 2865, 300, 4960, 264, 3380, 6186, 457, 321, 362, 16858, 281, 426, 12, 76, 328, 13, 50914], "temperature": 0.0, "avg_logprob": -0.33103514777289494, "compression_ratio": 1.2283464566929134, "no_speech_prob": 0.09249494969844818}, {"id": 19, "seek": 12100, "start": 132.0, "end": 141.0, "text": " So the next generation of the Milky Misc generator in that one doesn't fit into LS2.", "tokens": [50914, 407, 264, 958, 5125, 295, 264, 38465, 376, 5606, 19265, 294, 300, 472, 1177, 380, 3318, 666, 36657, 17, 13, 51364], "temperature": 0.0, "avg_logprob": -0.33103514777289494, "compression_ratio": 1.2283464566929134, "no_speech_prob": 0.09249494969844818}, {"id": 20, "seek": 14100, "start": 141.0, "end": 151.0, "text": " So I was unable to rebuild the original from the micro-word", "tokens": [50364, 407, 286, 390, 11299, 281, 16877, 264, 3380, 490, 264, 4532, 12, 7462, 50864], "temperature": 0.0, "avg_logprob": -0.2507735116141183, "compression_ratio": 1.1401869158878504, "no_speech_prob": 0.09775330871343613}, {"id": 21, "seek": 14100, "start": 151.0, "end": 159.0, "text": " and decided that I would continue working on N-mig based DRAM.", "tokens": [50864, 293, 3047, 300, 286, 576, 2354, 1364, 322, 426, 12, 76, 328, 2361, 12118, 2865, 13, 51264], "temperature": 0.0, "avg_logprob": -0.2507735116141183, "compression_ratio": 1.1401869158878504, "no_speech_prob": 0.09775330871343613}, {"id": 22, "seek": 15900, "start": 159.0, "end": 172.0, "text": " And I found some very good bugs here.", "tokens": [50364, 400, 286, 1352, 512, 588, 665, 15120, 510, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15549054145812988, "compression_ratio": 1.2335766423357664, "no_speech_prob": 0.08904451876878738}, {"id": 23, "seek": 15900, "start": 172.0, "end": 179.0, "text": " ECP5 is big enough for prototyping the Libre Sock core", "tokens": [51014, 19081, 47, 20, 307, 955, 1547, 337, 46219, 3381, 264, 15834, 265, 407, 547, 4965, 51364], "temperature": 0.0, "avg_logprob": -0.15549054145812988, "compression_ratio": 1.2335766423357664, "no_speech_prob": 0.08904451876878738}, {"id": 24, "seek": 15900, "start": 179.0, "end": 186.0, "text": " and when I started I was already able to run cold boot but there was no DRAM", "tokens": [51364, 293, 562, 286, 1409, 286, 390, 1217, 1075, 281, 1190, 3554, 11450, 457, 456, 390, 572, 12118, 2865, 51714], "temperature": 0.0, "avg_logprob": -0.15549054145812988, "compression_ratio": 1.2335766423357664, "no_speech_prob": 0.08904451876878738}, {"id": 25, "seek": 18600, "start": 186.0, "end": 195.0, "text": " so I began modifying N-mig boards and the clerser pins needed to connect.", "tokens": [50364, 370, 286, 4283, 42626, 426, 12, 76, 328, 13293, 293, 264, 596, 433, 260, 16392, 2978, 281, 1745, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2510764278582673, "compression_ratio": 1.384180790960452, "no_speech_prob": 0.04188518598675728}, {"id": 26, "seek": 18600, "start": 195.0, "end": 206.0, "text": " And the reason why I am doing this is I wanted to design a GPU that is even ready for VR.", "tokens": [50814, 400, 264, 1778, 983, 286, 669, 884, 341, 307, 286, 1415, 281, 1715, 257, 18407, 300, 307, 754, 1919, 337, 13722, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2510764278582673, "compression_ratio": 1.384180790960452, "no_speech_prob": 0.04188518598675728}, {"id": 27, "seek": 18600, "start": 206.0, "end": 215.0, "text": " That is my motivation I have with LS2 and its current GPU needs non-free firmware", "tokens": [51364, 663, 307, 452, 12335, 286, 362, 365, 36657, 17, 293, 1080, 2190, 18407, 2203, 2107, 12, 10792, 30289, 51814], "temperature": 0.0, "avg_logprob": -0.2510764278582673, "compression_ratio": 1.384180790960452, "no_speech_prob": 0.04188518598675728}, {"id": 28, "seek": 21500, "start": 215.0, "end": 219.0, "text": " and on the long term I wanted to avoid this.", "tokens": [50364, 293, 322, 264, 938, 1433, 286, 1415, 281, 5042, 341, 13, 50564], "temperature": 0.0, "avg_logprob": -0.22141955693562826, "compression_ratio": 1.2847682119205297, "no_speech_prob": 0.031978487968444824}, {"id": 29, "seek": 21500, "start": 219.0, "end": 233.0, "text": " And I also mentioned that the i40 FPGA is used by Valve and Bitgrace for example in the Valve Index.", "tokens": [50564, 400, 286, 611, 2835, 300, 264, 741, 5254, 36655, 12570, 307, 1143, 538, 41369, 293, 9101, 861, 617, 337, 1365, 294, 264, 41369, 33552, 13, 51264], "temperature": 0.0, "avg_logprob": -0.22141955693562826, "compression_ratio": 1.2847682119205297, "no_speech_prob": 0.031978487968444824}, {"id": 30, "seek": 21500, "start": 233.0, "end": 241.0, "text": " Now the question is why do we use N-mig in DRAM?", "tokens": [51264, 823, 264, 1168, 307, 983, 360, 321, 764, 426, 12, 76, 328, 294, 12118, 2865, 30, 51664], "temperature": 0.0, "avg_logprob": -0.22141955693562826, "compression_ratio": 1.2847682119205297, "no_speech_prob": 0.031978487968444824}, {"id": 31, "seek": 24100, "start": 241.0, "end": 249.0, "text": " What we are using with DRAM itself is an N-mig port of Lambda Sock", "tokens": [50364, 708, 321, 366, 1228, 365, 12118, 2865, 2564, 307, 364, 426, 12, 76, 328, 2436, 295, 45691, 407, 547, 50764], "temperature": 0.0, "avg_logprob": -0.14253902435302734, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.05976491421461105}, {"id": 32, "seek": 24100, "start": 249.0, "end": 257.0, "text": " and N-mig is already used by Libre Sock project and we don't want to have multiple toolkits", "tokens": [50764, 293, 426, 12, 76, 328, 307, 1217, 1143, 538, 15834, 265, 407, 547, 1716, 293, 321, 500, 380, 528, 281, 362, 3866, 2290, 74, 1208, 51164], "temperature": 0.0, "avg_logprob": -0.14253902435302734, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.05976491421461105}, {"id": 33, "seek": 24100, "start": 257.0, "end": 265.0, "text": " so everything gets ported to N-mig and we took parts of micro-word and ported them to N-mig", "tokens": [51164, 370, 1203, 2170, 2436, 292, 281, 426, 12, 76, 328, 293, 321, 1890, 3166, 295, 4532, 12, 7462, 293, 2436, 292, 552, 281, 426, 12, 76, 328, 51564], "temperature": 0.0, "avg_logprob": -0.14253902435302734, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.05976491421461105}, {"id": 34, "seek": 26500, "start": 265.0, "end": 275.0, "text": " and the same goes for most of the other things that we want to port them to N-mig.", "tokens": [50364, 293, 264, 912, 1709, 337, 881, 295, 264, 661, 721, 300, 321, 528, 281, 2436, 552, 281, 426, 12, 76, 328, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15033100872505, "compression_ratio": 1.3454545454545455, "no_speech_prob": 0.08781735599040985}, {"id": 35, "seek": 26500, "start": 275.0, "end": 284.0, "text": " And the old mig which had some design weaknesses we want to avoid", "tokens": [50864, 400, 264, 1331, 6186, 597, 632, 512, 1715, 24381, 321, 528, 281, 5042, 51314], "temperature": 0.0, "avg_logprob": -0.15033100872505, "compression_ratio": 1.3454545454545455, "no_speech_prob": 0.08781735599040985}, {"id": 36, "seek": 28400, "start": 284.0, "end": 300.0, "text": " and we also want to avoid LightX which provides a huge collection of libraries and even software.", "tokens": [50364, 293, 321, 611, 528, 281, 5042, 8279, 55, 597, 6417, 257, 2603, 5765, 295, 15148, 293, 754, 4722, 13, 51164], "temperature": 0.0, "avg_logprob": -0.17043771062578475, "compression_ratio": 1.2741935483870968, "no_speech_prob": 0.1117384135723114}, {"id": 37, "seek": 28400, "start": 300.0, "end": 308.0, "text": " And in N-mig we don't have all those features at the moment.", "tokens": [51164, 400, 294, 426, 12, 76, 328, 321, 500, 380, 362, 439, 729, 4122, 412, 264, 1623, 13, 51564], "temperature": 0.0, "avg_logprob": -0.17043771062578475, "compression_ratio": 1.2741935483870968, "no_speech_prob": 0.1117384135723114}, {"id": 38, "seek": 30800, "start": 309.0, "end": 318.0, "text": " N-mig is much more powerful than Varylock and VHDL. Actually it is a Varylock generator", "tokens": [50414, 426, 12, 76, 328, 307, 709, 544, 4005, 813, 691, 822, 4102, 293, 691, 22859, 43, 13, 5135, 309, 307, 257, 691, 822, 4102, 19265, 50864], "temperature": 0.0, "avg_logprob": -0.13985783306520377, "compression_ratio": 1.3975155279503106, "no_speech_prob": 0.030287183821201324}, {"id": 39, "seek": 30800, "start": 318.0, "end": 330.0, "text": " and it is much easier to use for anyone who knows Python so you don't have to learn another VHDL", "tokens": [50864, 293, 309, 307, 709, 3571, 281, 764, 337, 2878, 567, 3255, 15329, 370, 291, 500, 380, 362, 281, 1466, 1071, 691, 22859, 43, 51464], "temperature": 0.0, "avg_logprob": -0.13985783306520377, "compression_ratio": 1.3975155279503106, "no_speech_prob": 0.030287183821201324}, {"id": 40, "seek": 30800, "start": 330.0, "end": 335.0, "text": " if you want to contribute to Libre Sock.", "tokens": [51464, 498, 291, 528, 281, 10586, 281, 15834, 265, 407, 547, 13, 51714], "temperature": 0.0, "avg_logprob": -0.13985783306520377, "compression_ratio": 1.3975155279503106, "no_speech_prob": 0.030287183821201324}, {"id": 41, "seek": 33500, "start": 335.0, "end": 344.0, "text": " And N-mig of course it works nice with Yosos, Next, PNR and GCC and all those things.", "tokens": [50364, 400, 426, 12, 76, 328, 295, 1164, 309, 1985, 1481, 365, 398, 329, 329, 11, 3087, 11, 430, 45, 49, 293, 460, 11717, 293, 439, 729, 721, 13, 50814], "temperature": 0.0, "avg_logprob": -0.27185746735217525, "compression_ratio": 1.1984126984126984, "no_speech_prob": 0.019098592922091484}, {"id": 42, "seek": 33500, "start": 344.0, "end": 355.0, "text": " And it is also used by DRAM. DRAM is a simplified RAM controller.", "tokens": [50814, 400, 309, 307, 611, 1143, 538, 12118, 2865, 13, 12118, 2865, 307, 257, 26335, 14561, 10561, 13, 51364], "temperature": 0.0, "avg_logprob": -0.27185746735217525, "compression_ratio": 1.1984126984126984, "no_speech_prob": 0.019098592922091484}, {"id": 43, "seek": 35500, "start": 355.0, "end": 369.0, "text": " It currently only supports ECP-5 but in the future we might want to support I-40 and those heavier Xilinx models", "tokens": [50364, 467, 4362, 787, 9346, 19081, 47, 12, 20, 457, 294, 264, 2027, 321, 1062, 528, 281, 1406, 286, 12, 5254, 293, 729, 18279, 1783, 388, 259, 87, 5245, 51064], "temperature": 0.0, "avg_logprob": -0.21151244386713555, "compression_ratio": 1.3093525179856116, "no_speech_prob": 0.23738843202590942}, {"id": 44, "seek": 35500, "start": 369.0, "end": 378.0, "text": " which provide even more cells so you can design more complex designs.", "tokens": [51064, 597, 2893, 754, 544, 5438, 370, 291, 393, 1715, 544, 3997, 11347, 13, 51514], "temperature": 0.0, "avg_logprob": -0.21151244386713555, "compression_ratio": 1.3093525179856116, "no_speech_prob": 0.23738843202590942}, {"id": 45, "seek": 37800, "start": 378.0, "end": 388.0, "text": " And I wanted to learn how to use a DRAM file that comes with the ECP-5.", "tokens": [50364, 400, 286, 1415, 281, 1466, 577, 281, 764, 257, 12118, 2865, 3991, 300, 1487, 365, 264, 19081, 47, 12, 20, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18913000021407853, "compression_ratio": 1.4404761904761905, "no_speech_prob": 0.2638537585735321}, {"id": 46, "seek": 37800, "start": 388.0, "end": 397.0, "text": " I found that there was already some software hardware designs,", "tokens": [50864, 286, 1352, 300, 456, 390, 1217, 512, 4722, 8837, 11347, 11, 51314], "temperature": 0.0, "avg_logprob": -0.18913000021407853, "compression_ratio": 1.4404761904761905, "no_speech_prob": 0.2638537585735321}, {"id": 47, "seek": 37800, "start": 397.0, "end": 407.0, "text": " MicroVot that support booting Linux using the MicroVot and I wanted to do the same with the Libre Sock Core", "tokens": [51314, 25642, 53, 310, 300, 1406, 11450, 278, 18734, 1228, 264, 25642, 53, 310, 293, 286, 1415, 281, 360, 264, 912, 365, 264, 15834, 265, 407, 547, 14798, 51814], "temperature": 0.0, "avg_logprob": -0.18913000021407853, "compression_ratio": 1.4404761904761905, "no_speech_prob": 0.2638537585735321}, {"id": 48, "seek": 40700, "start": 407.0, "end": 412.0, "text": " but I didn't get there because the DRAM isn't currently working.", "tokens": [50364, 457, 286, 994, 380, 483, 456, 570, 264, 12118, 2865, 1943, 380, 4362, 1364, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15542250413161057, "compression_ratio": 1.3049645390070923, "no_speech_prob": 0.09978973865509033}, {"id": 49, "seek": 40700, "start": 412.0, "end": 419.0, "text": " There are multiple generations of DRAM, for example DDR.", "tokens": [50614, 821, 366, 3866, 10593, 295, 12118, 2865, 11, 337, 1365, 49272, 13, 50964], "temperature": 0.0, "avg_logprob": -0.15542250413161057, "compression_ratio": 1.3049645390070923, "no_speech_prob": 0.09978973865509033}, {"id": 50, "seek": 40700, "start": 419.0, "end": 429.0, "text": " As DRAM interfaces DDR4 for the Power 9, DDR5 for the Power 10", "tokens": [50964, 1018, 12118, 2865, 28416, 49272, 19, 337, 264, 7086, 1722, 11, 49272, 20, 337, 264, 7086, 1266, 51464], "temperature": 0.0, "avg_logprob": -0.15542250413161057, "compression_ratio": 1.3049645390070923, "no_speech_prob": 0.09978973865509033}, {"id": 51, "seek": 42900, "start": 429.0, "end": 444.0, "text": " and on the OrangeCrab we only have DDR3 and it is small but large enough to boot Linux.", "tokens": [50364, 293, 322, 264, 17106, 34, 5305, 321, 787, 362, 49272, 18, 293, 309, 307, 1359, 457, 2416, 1547, 281, 11450, 18734, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2828630285060152, "compression_ratio": 1.3015873015873016, "no_speech_prob": 0.12029242515563965}, {"id": 52, "seek": 42900, "start": 444.0, "end": 453.0, "text": " And for the OrangeCrab pins we have Migen boards. I made the changes myself.", "tokens": [51114, 400, 337, 264, 17106, 34, 5305, 16392, 321, 362, 376, 3213, 13293, 13, 286, 1027, 264, 2962, 2059, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2828630285060152, "compression_ratio": 1.3015873015873016, "no_speech_prob": 0.12029242515563965}, {"id": 53, "seek": 45300, "start": 453.0, "end": 465.0, "text": " And the controllers that we can use are found in both DRAM and in LiteDRAM so I have compared those controllers.", "tokens": [50364, 400, 264, 26903, 300, 321, 393, 764, 366, 1352, 294, 1293, 12118, 2865, 293, 294, 32986, 9301, 2865, 370, 286, 362, 5347, 729, 26903, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1677809628573331, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0827023983001709}, {"id": 54, "seek": 45300, "start": 465.0, "end": 475.0, "text": " They are very similar but there are changes that might be important.", "tokens": [50964, 814, 366, 588, 2531, 457, 456, 366, 2962, 300, 1062, 312, 1021, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1677809628573331, "compression_ratio": 1.371212121212121, "no_speech_prob": 0.0827023983001709}, {"id": 55, "seek": 47500, "start": 475.0, "end": 480.0, "text": " And I also compared software that comes with both.", "tokens": [50364, 400, 286, 611, 5347, 4722, 300, 1487, 365, 1293, 13, 50614], "temperature": 0.0, "avg_logprob": -0.18853079080581664, "compression_ratio": 1.3504273504273505, "no_speech_prob": 0.3111494481563568}, {"id": 56, "seek": 47500, "start": 486.0, "end": 498.0, "text": " And if it does not work debugging is hard so I am going to look for ways to connect this to a host computer", "tokens": [50914, 400, 498, 309, 775, 406, 589, 45592, 307, 1152, 370, 286, 669, 516, 281, 574, 337, 2098, 281, 1745, 341, 281, 257, 3975, 3820, 51514], "temperature": 0.0, "avg_logprob": -0.18853079080581664, "compression_ratio": 1.3504273504273505, "no_speech_prob": 0.3111494481563568}, {"id": 57, "seek": 49800, "start": 498.0, "end": 511.0, "text": " and for example run software from an external emulated memory.", "tokens": [50364, 293, 337, 1365, 1190, 4722, 490, 364, 8320, 846, 6987, 4675, 13, 51014], "temperature": 0.0, "avg_logprob": -0.24205540829017513, "compression_ratio": 1.2830188679245282, "no_speech_prob": 0.08981948345899582}, {"id": 58, "seek": 49800, "start": 511.0, "end": 516.0, "text": " And here we have the ECP-5 DRAM controller.", "tokens": [51014, 400, 510, 321, 362, 264, 19081, 47, 12, 20, 12118, 2865, 10561, 13, 51264], "temperature": 0.0, "avg_logprob": -0.24205540829017513, "compression_ratio": 1.2830188679245282, "no_speech_prob": 0.08981948345899582}, {"id": 59, "seek": 49800, "start": 516.0, "end": 527.0, "text": " It has high speed I.O. interfaces with many built-in blocks and one of them is the data Q-throop.", "tokens": [51264, 467, 575, 1090, 3073, 286, 13, 46, 13, 28416, 365, 867, 3094, 12, 259, 8474, 293, 472, 295, 552, 307, 264, 1412, 1249, 12, 392, 340, 404, 13, 51814], "temperature": 0.0, "avg_logprob": -0.24205540829017513, "compression_ratio": 1.2830188679245282, "no_speech_prob": 0.08981948345899582}, {"id": 60, "seek": 52700, "start": 527.0, "end": 543.0, "text": " Buffer manager is a very complex module and it handles all the timings that you need for DRAM and those modules are FPGA specific.", "tokens": [50364, 20254, 260, 6598, 307, 257, 588, 3997, 10088, 293, 309, 18722, 439, 264, 524, 1109, 300, 291, 643, 337, 12118, 2865, 293, 729, 16679, 366, 36655, 12570, 2685, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21351106239087653, "compression_ratio": 1.1711711711711712, "no_speech_prob": 0.023470833897590637}, {"id": 61, "seek": 54300, "start": 543.0, "end": 562.0, "text": " And we have Python implementations of both files so for DRAM and for DDR and those modules are very similar.", "tokens": [50364, 400, 321, 362, 15329, 4445, 763, 295, 1293, 7098, 370, 337, 12118, 2865, 293, 337, 49272, 293, 729, 16679, 366, 588, 2531, 13, 51314], "temperature": 0.0, "avg_logprob": -0.15787871678670248, "compression_ratio": 1.148936170212766, "no_speech_prob": 0.13709577918052673}, {"id": 62, "seek": 56200, "start": 563.0, "end": 578.0, "text": " Here is a typical module so you have to connect data lines, address lines and few address lines and clocks.", "tokens": [50414, 1692, 307, 257, 7476, 10088, 370, 291, 362, 281, 1745, 1412, 3876, 11, 2985, 3876, 293, 1326, 2985, 3876, 293, 41528, 13, 51164], "temperature": 0.0, "avg_logprob": -0.19467639923095703, "compression_ratio": 1.5921052631578947, "no_speech_prob": 0.029868120327591896}, {"id": 63, "seek": 56200, "start": 578.0, "end": 591.0, "text": " And then we have a burst-dead signal that is used for read leveling so our software checks whether this burst-dead signal is asserted.", "tokens": [51164, 400, 550, 321, 362, 257, 12712, 12, 1479, 345, 6358, 300, 307, 1143, 337, 1401, 40617, 370, 527, 4722, 13834, 1968, 341, 12712, 12, 1479, 345, 6358, 307, 19810, 292, 13, 51814], "temperature": 0.0, "avg_logprob": -0.19467639923095703, "compression_ratio": 1.5921052631578947, "no_speech_prob": 0.029868120327591896}, {"id": 64, "seek": 59100, "start": 591.0, "end": 599.0, "text": " And the data valid signal controls the DFI phases.", "tokens": [50364, 400, 264, 1412, 7363, 6358, 9003, 264, 413, 38568, 18764, 13, 50764], "temperature": 0.0, "avg_logprob": -0.2022172400825902, "compression_ratio": 1.311926605504587, "no_speech_prob": 0.01565302535891533}, {"id": 65, "seek": 59100, "start": 599.0, "end": 611.0, "text": " And on the input size we have a pause signal which we have to assert if we change the delay.", "tokens": [50764, 400, 322, 264, 4846, 2744, 321, 362, 257, 10465, 6358, 597, 321, 362, 281, 19810, 498, 321, 1319, 264, 8577, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2022172400825902, "compression_ratio": 1.311926605504587, "no_speech_prob": 0.01565302535891533}, {"id": 66, "seek": 61100, "start": 611.0, "end": 619.0, "text": " And then we use the read clock cell to set up the delay.", "tokens": [50364, 400, 550, 321, 764, 264, 1401, 7830, 2815, 281, 992, 493, 264, 8577, 13, 50764], "temperature": 0.0, "avg_logprob": -0.14128759059500187, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.18364466726779938}, {"id": 67, "seek": 61100, "start": 619.0, "end": 635.0, "text": " So only with a certain kind of delay we can get everything working properly and we have to brute force which delay is the best one.", "tokens": [50764, 407, 787, 365, 257, 1629, 733, 295, 8577, 321, 393, 483, 1203, 1364, 6108, 293, 321, 362, 281, 47909, 3464, 597, 8577, 307, 264, 1151, 472, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14128759059500187, "compression_ratio": 1.3925925925925926, "no_speech_prob": 0.18364466726779938}, {"id": 68, "seek": 63500, "start": 635.0, "end": 644.0, "text": " Then we have a library called libgiram which we use to initialize this DRAM.", "tokens": [50364, 1396, 321, 362, 257, 6405, 1219, 22854, 70, 40359, 597, 321, 764, 281, 5883, 1125, 341, 12118, 2865, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2488783038392359, "compression_ratio": 1.375, "no_speech_prob": 0.05478996783494949}, {"id": 69, "seek": 63500, "start": 644.0, "end": 659.0, "text": " And here we have to provide a context and we give it some base addresses and the profile for example includes the delays.", "tokens": [50814, 400, 510, 321, 362, 281, 2893, 257, 4319, 293, 321, 976, 309, 512, 3096, 16862, 293, 264, 7964, 337, 1365, 5974, 264, 28610, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2488783038392359, "compression_ratio": 1.375, "no_speech_prob": 0.05478996783494949}, {"id": 70, "seek": 65900, "start": 659.0, "end": 665.0, "text": " And first we set the FITO software control then perform some init sequence.", "tokens": [50364, 400, 700, 321, 992, 264, 479, 3927, 46, 4722, 1969, 550, 2042, 512, 3157, 8310, 13, 50664], "temperature": 0.0, "avg_logprob": -0.23569224310702966, "compression_ratio": 1.4606060606060607, "no_speech_prob": 0.1818617731332779}, {"id": 71, "seek": 65900, "start": 665.0, "end": 668.0, "text": " I think that it hasn't changed.", "tokens": [50664, 286, 519, 300, 309, 6132, 380, 3105, 13, 50814], "temperature": 0.0, "avg_logprob": -0.23569224310702966, "compression_ratio": 1.4606060606060607, "no_speech_prob": 0.1818617731332779}, {"id": 72, "seek": 65900, "start": 668.0, "end": 679.0, "text": " Then we load the calibration and then we turn it back again and ideally it should work but I found out that it doesn't work that way.", "tokens": [50814, 1396, 321, 3677, 264, 38732, 293, 550, 321, 1261, 309, 646, 797, 293, 22915, 309, 820, 589, 457, 286, 1352, 484, 300, 309, 1177, 380, 589, 300, 636, 13, 51364], "temperature": 0.0, "avg_logprob": -0.23569224310702966, "compression_ratio": 1.4606060606060607, "no_speech_prob": 0.1818617731332779}, {"id": 73, "seek": 67900, "start": 679.0, "end": 692.0, "text": " The MAM test doesn't pass or it sometimes only passes for some addresses and for some addresses it doesn't pass.", "tokens": [50364, 440, 376, 2865, 1500, 1177, 380, 1320, 420, 309, 2171, 787, 11335, 337, 512, 16862, 293, 337, 512, 16862, 309, 1177, 380, 1320, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16216451068257176, "compression_ratio": 1.4824561403508771, "no_speech_prob": 0.213498055934906}, {"id": 74, "seek": 67900, "start": 692.0, "end": 700.0, "text": " So it seems that the data that I read back is corrupted.", "tokens": [51014, 407, 309, 2544, 300, 264, 1412, 300, 286, 1401, 646, 307, 39480, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16216451068257176, "compression_ratio": 1.4824561403508771, "no_speech_prob": 0.213498055934906}, {"id": 75, "seek": 70000, "start": 700.0, "end": 707.0, "text": " And that is a problem related to read leveling only.", "tokens": [50364, 400, 300, 307, 257, 1154, 4077, 281, 1401, 40617, 787, 13, 50714], "temperature": 0.0, "avg_logprob": -0.20398710594802608, "compression_ratio": 1.5526315789473684, "no_speech_prob": 0.2393738329410553}, {"id": 76, "seek": 70000, "start": 707.0, "end": 716.0, "text": " Read leveling on the ECP5 we only use read leveling and that has to be done for each file module.", "tokens": [50714, 17604, 40617, 322, 264, 19081, 47, 20, 321, 787, 764, 1401, 40617, 293, 300, 575, 281, 312, 1096, 337, 1184, 3991, 10088, 13, 51164], "temperature": 0.0, "avg_logprob": -0.20398710594802608, "compression_ratio": 1.5526315789473684, "no_speech_prob": 0.2393738329410553}, {"id": 77, "seek": 70000, "start": 716.0, "end": 727.0, "text": " And there is an inner loop for the bitflip so we do tests for different combinations.", "tokens": [51164, 400, 456, 307, 364, 7284, 6367, 337, 264, 857, 3423, 647, 370, 321, 360, 6921, 337, 819, 21267, 13, 51714], "temperature": 0.0, "avg_logprob": -0.20398710594802608, "compression_ratio": 1.5526315789473684, "no_speech_prob": 0.2393738329410553}, {"id": 78, "seek": 72700, "start": 727.0, "end": 742.0, "text": " We do a test for each read window and then try and use that returns a score and then we try to find the minimum and maximum delays.", "tokens": [50364, 492, 360, 257, 1500, 337, 1184, 1401, 4910, 293, 550, 853, 293, 764, 300, 11247, 257, 6175, 293, 550, 321, 853, 281, 915, 264, 7285, 293, 6674, 28610, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15734484938324475, "compression_ratio": 1.63013698630137, "no_speech_prob": 0.02918788604438305}, {"id": 79, "seek": 72700, "start": 742.0, "end": 752.0, "text": " And then we take the bitflip with the best score and in this example only one of the bitflip values works.", "tokens": [51114, 400, 550, 321, 747, 264, 857, 3423, 647, 365, 264, 1151, 6175, 293, 294, 341, 1365, 787, 472, 295, 264, 857, 3423, 647, 4190, 1985, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15734484938324475, "compression_ratio": 1.63013698630137, "no_speech_prob": 0.02918788604438305}, {"id": 80, "seek": 75200, "start": 752.0, "end": 776.0, "text": " And the whole bitflip thing that isn't currently implemented in DRAM only in lite DRAM.", "tokens": [50364, 400, 264, 1379, 857, 3423, 647, 551, 300, 1943, 380, 4362, 12270, 294, 12118, 2865, 787, 294, 15100, 12118, 2865, 13, 51564], "temperature": 0.0, "avg_logprob": -0.241748046875, "compression_ratio": 1.0481927710843373, "no_speech_prob": 0.3932900130748749}, {"id": 81, "seek": 77600, "start": 776.0, "end": 795.0, "text": " And here we can see the read leveling for both files and we see that only the first bitflip works that we have the same settings for each file and that there are three working delays.", "tokens": [50364, 400, 510, 321, 393, 536, 264, 1401, 40617, 337, 1293, 7098, 293, 321, 536, 300, 787, 264, 700, 857, 3423, 647, 1985, 300, 321, 362, 264, 912, 6257, 337, 1184, 3991, 293, 300, 456, 366, 1045, 1364, 28610, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10964268307353175, "compression_ratio": 1.525, "no_speech_prob": 0.4732707142829895}, {"id": 82, "seek": 79500, "start": 795.0, "end": 824.0, "text": " And then we use the delay that is in the middle and once the delay is set we do a speed test that is currently not implemented but I'm going to implement that zone and then it copies the Linux kernel to the flash and then it puts into Linux.", "tokens": [50364, 400, 550, 321, 764, 264, 8577, 300, 307, 294, 264, 2808, 293, 1564, 264, 8577, 307, 992, 321, 360, 257, 3073, 1500, 300, 307, 4362, 406, 12270, 457, 286, 478, 516, 281, 4445, 300, 6668, 293, 550, 309, 14341, 264, 18734, 28256, 281, 264, 7319, 293, 550, 309, 8137, 666, 18734, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11266430074518377, "compression_ratio": 1.6174496644295302, "no_speech_prob": 0.4296369254589081}, {"id": 83, "seek": 82500, "start": 825.0, "end": 835.0, "text": " That takes longer time because it has to be decompressed.", "tokens": [50364, 663, 2516, 2854, 565, 570, 309, 575, 281, 312, 22867, 3805, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2680739760398865, "compression_ratio": 0.9344262295081968, "no_speech_prob": 0.18442676961421967}, {"id": 84, "seek": 83500, "start": 835.0, "end": 847.0, "text": " And then everything Linux kernel in a DRAM FS comes from the flash module that also holds the bit string for the FPGAs.", "tokens": [50364, 400, 550, 1203, 18734, 28256, 294, 257, 12118, 2865, 41138, 1487, 490, 264, 7319, 10088, 300, 611, 9190, 264, 857, 6798, 337, 264, 36655, 38, 10884, 13, 50964], "temperature": 0.0, "avg_logprob": -0.25013491415208383, "compression_ratio": 1.1226415094339623, "no_speech_prob": 0.20878562331199646}, {"id": 85, "seek": 84700, "start": 847.0, "end": 858.0, "text": " First of all the FPGAs configured.", "tokens": [50364, 2386, 295, 439, 264, 36655, 38, 10884, 30538, 13, 50914], "temperature": 0.0, "avg_logprob": -0.28972508357121396, "compression_ratio": 0.8095238095238095, "no_speech_prob": 0.5693217515945435}, {"id": 86, "seek": 85800, "start": 858.0, "end": 880.0, "text": " Then I log in as root of course we don't have network that's one of the things I plan to share the BeagleBone Blacks network and then theoretically being able to SCP files to the orange grab.", "tokens": [50364, 1396, 286, 3565, 294, 382, 5593, 295, 1164, 321, 500, 380, 362, 3209, 300, 311, 472, 295, 264, 721, 286, 1393, 281, 2073, 264, 879, 15088, 33, 546, 4076, 82, 3209, 293, 550, 29400, 885, 1075, 281, 18489, 7098, 281, 264, 7671, 4444, 13, 51464], "temperature": 0.0, "avg_logprob": -0.24945310751597086, "compression_ratio": 1.3642857142857143, "no_speech_prob": 0.8067467212677002}, {"id": 87, "seek": 88000, "start": 880.0, "end": 897.0, "text": " But I think that will be much more work but I have a Beagle wire, a small FPGAs so one of them will be used as a debugging aid and the other one will run Leprechaun.", "tokens": [50364, 583, 286, 519, 300, 486, 312, 709, 544, 589, 457, 286, 362, 257, 879, 15088, 6234, 11, 257, 1359, 36655, 38, 10884, 370, 472, 295, 552, 486, 312, 1143, 382, 257, 45592, 9418, 293, 264, 661, 472, 486, 1190, 1456, 3712, 4413, 409, 13, 51214], "temperature": 0.0, "avg_logprob": -0.28813523054122925, "compression_ratio": 1.2992125984251968, "no_speech_prob": 0.6951987147331238}, {"id": 88, "seek": 89700, "start": 897.0, "end": 917.0, "text": " And I think it might be a good idea combining those because I have both boards and if I can use both for my work that seems to be a better option.", "tokens": [50364, 400, 286, 519, 309, 1062, 312, 257, 665, 1558, 21928, 729, 570, 286, 362, 1293, 13293, 293, 498, 286, 393, 764, 1293, 337, 452, 589, 300, 2544, 281, 312, 257, 1101, 3614, 13, 51364], "temperature": 0.0, "avg_logprob": -0.09570634042894519, "compression_ratio": 1.2920353982300885, "no_speech_prob": 0.3971831500530243}, {"id": 89, "seek": 91700, "start": 917.0, "end": 932.0, "text": " And of course if I enter arch it shows that it is a power PC architecture and so now.", "tokens": [50364, 400, 295, 1164, 498, 286, 3242, 3912, 309, 3110, 300, 309, 307, 257, 1347, 6465, 9482, 293, 370, 586, 13, 51114], "temperature": 0.0, "avg_logprob": -0.26604422279026196, "compression_ratio": 1.0625, "no_speech_prob": 0.4704991579055786}], "language": "en"}