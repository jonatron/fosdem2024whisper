{"text": " So, it's my pleasure to introduce Rishi Rai. He's one of the GSOC students from last year and worked on GCC LTO. Welcome here. He actually came here and got some travel funding from the new toolchain fund. So, that's also a thing the community can offer to students. Not all times and so on, there's conditions but it worked in this time. Okay. Hello everyone. I am Rishi Raj and today I'll be presenting my GSOC work on GCC's LTO and along with I will share my experience with first time contribution to GCC. So, basically this is little about me. I am under garaged to end from India and I love terminal. Because I am lazy and it helps me to automate a lot of tasks. And also I keep changing my distro about each two, three months and this I think this is very problematic because a lot I spent a lot of time in that. Apart from that in my free time I love to read fiction, travel and I play badminton a lot. So, moving on. So, before discussing my project, let's discuss some of the things related to my project. So, first let's discuss about the LTO. So, traditionally what compiler used to do is like to for optimization it is done at the compile time. So, each of the compile compilation unit is optimized independent of other compilation unit. But when we think about a real world project we are missing a lot of context because in real world project there are several of there are several compilation unit which are related to each other. And if we can like and if we can find some context between these compilation unit then we can optimize more. So, in LTO what we do is instead of optimizing along with optimizing at compile time we also compile at linking time. So, linker is aware of all the translation unit so there is obviously more optimization. Only downside being a longer compile time and more usage of memory during compilation. In GCC to enable LTO you can either use minus FLTO flag or minus FAT LTO objects flag. So, basically the second flag is to save GIMPAL bytecode along with LTO IL in the LTO object file. Now, let's discuss the basic structure of a ELF file. ELF file is basically used for storing binary libraries and executables on Linux and Unix based system. So, here you can see that there is a ELF header. ELF header basically contains the metadata about the ELF file to identify the ELF file on which system it was produced etc. Apart from this there is a program header table which is not relevant to my talk because it's used for executable and I am going to talk about the object files. So, our main interest is section header table. Basically it contains the different information about different section along with their names. So, in LTO this is the typical structure of ELF files. So, you can see these sections prefixed with .gnu.ltu prefix. So, these sections are produced by LTO streamer. So, now let's discuss the role of an assembler in producing LTO object file. So, right now we discussed that these all section with .gnu.ltu prefix are produced by LTO streamer. And these all are already in the binary format. So, assembler doesn't touch this like basically the assembler take this as an input and output it the object file. The only thing which assembler does is it produces .sim tab which contains the symbols .strtab which contains the string representation of section names and .strtab which contains the symbol name in the string representation. Apart from that if you are compiling with debugging flag then it also produce various debug symbols along with their relocations. So, assembler basically performs two functions. First is to generate this three section .sim tab .strtab .strtab and if debugging option is enabled then it produces these debug sections. So, now my project was to bypass assembler. So, first let's discuss why we wanted to bypass assembler. So, we already talked about like what was the function of a assembler in producing LTO object file. It was basically two things and those two things were not very complicated it can be actually done by compiler. So, what benefit we will get if we produce that from compiler. So, like we already noted the fact that a lot of sections with the GNU LTO prefix were produced by the LTO streamer. And compiler just have to scramble through that take that input and produce as output in the object file. So, there was a lot of I over it. So, here you can see the result. So, with bypass we are taking like 14 seconds to compile a single compilation unit file and with default part it was taking 21 seconds. So, only for a single compilation unit there was a difference of 7 seconds. So, if we like we are currently testing it on the real world project like Firefox and all and we will publish the result. And we hope to see a drastic improvements. So, to implement the project we along with my mentor divided into two parts. The first part was to extend the libivirty. Basically libivirty is a helper module which have various function to write and read from an object file. So, we extended the libivirty to output symbol table and a string table. So, the first task which a similar was performing was done by this. The second task was to output various debug sections and symbols along with their relocation directly. So, this was little bit complicated for me. The first thing was that GCC there was not sufficient documentation of GCC LTO debug architecture on the GCC website. So, I got in contact with Richard who is the who have implemented the GCC debug architecture and he helped me through it. And also the documentation of Dwarf debugging format was a little bit intimidating as a beginner, but as we proceeded further with help of my mentor I was successfully able to navigate that. And as of now we have like I have successfully implemented the support for ELF file format and it can be found in the devil by bypass ASM branch of the GCC repository. So, you can go there and see that and if you have some comments you can reach back to me. For now we are only supporting x86 target for relocations and we are generally we are eventually planning to roll out to other architectures too. And we will also provide support for other object files other than ELF too. So, now let's talk a little bit about how I got this opportunity to work in open source with GCC. So, basically I tried getting into open source before a few times but it was a bit intimidating for me because due to the large code base and all those things. So, when I like one of my friend recommended me to try for G-SOC and when I was going through various projects then this project interested me and thanks to DOH his newbies guide was very helpful me to introducing to GCC. And then I applied and eventually got selected. So, basically G-SOC is an opportunity for first new contributors to get started with open source and applications for this year is opening on 18 March. If any if anyone of you are interested then you can sure apply. I sought out the people who made it possible for my contribution first Google for organizing G-SOC which provided me a good platform to launch me to the open source world. My mentors Jan and Martin for helping and guiding throughout the summers to complete the project. Thomas and Dev for securing the sponsorship and also for my visa process. Thanks a lot. Or also to the GNU tool transfer which sponsored these attendance. Thanks for your attention. These are my socials. If you want you can connect me here. Any plans for the non-LTO case? So, you put in a regular assembly like machine called. But it will be repetition of a similar only right in non-LTO case. So, the question is repeat the question that we have on the video. So, he is asking if we have any plans to extend it for non-LTO case. So, in non-LTO case one need to be simply repetition like we will be building another assembler right. We will have to anyways like assemble all of those stuff. Can you please repeat? It is actually not done. So, we should be extend as we need it for the forward. Any more questions? Yeah, you said that you need more relocation right for the fire business. Is it just like relocation for the port? Or do you really need all kinds of relocation? So, he is asking that we like I was telling that we need more relocation. So, is it like relocation for pointers or relocation we need more relocation. So, basically for every architecture the relocation structure is different right. So, for each debug section we need to output a corresponding relocation so that during the late debug phase the linker could identify that debug section and link it. So, for each architecture we need to change that structure and output corresponding relocation. Basically the address and the add-in will be different in the different format. Thank you. How about this work in case other debugging formats get sad that they need to be in LTO. Because I see that you did some of the stuff in talk to us right. Yeah. Can you please repeat like I was? Well, I think that the LTO streamer part of the stuff that it dumps, UY pass, right, directly is basically how I mean how attached you work to the door for. Oh, okay.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 19.48, "text": " So, it's my pleasure to introduce Rishi Rai.", "tokens": [50364, 407, 11, 309, 311, 452, 6834, 281, 5366, 497, 27537, 497, 1301, 13, 51338], "temperature": 0.0, "avg_logprob": -0.39970899239564556, "compression_ratio": 1.0769230769230769, "no_speech_prob": 0.48729053139686584}, {"id": 1, "seek": 0, "start": 19.48, "end": 27.0, "text": " He's one of the GSOC students from last year and worked on GCC LTO.", "tokens": [51338, 634, 311, 472, 295, 264, 460, 17188, 34, 1731, 490, 1036, 1064, 293, 2732, 322, 460, 11717, 441, 15427, 13, 51714], "temperature": 0.0, "avg_logprob": -0.39970899239564556, "compression_ratio": 1.0769230769230769, "no_speech_prob": 0.48729053139686584}, {"id": 2, "seek": 2700, "start": 27.0, "end": 36.0, "text": " Welcome here. He actually came here and got some travel funding from the new toolchain fund.", "tokens": [50364, 4027, 510, 13, 634, 767, 1361, 510, 293, 658, 512, 3147, 6137, 490, 264, 777, 2290, 11509, 2374, 13, 50814], "temperature": 0.0, "avg_logprob": -0.35348412086223735, "compression_ratio": 1.4423076923076923, "no_speech_prob": 0.7451722621917725}, {"id": 3, "seek": 2700, "start": 36.0, "end": 41.0, "text": " So, that's also a thing the community can offer to students.", "tokens": [50814, 407, 11, 300, 311, 611, 257, 551, 264, 1768, 393, 2626, 281, 1731, 13, 51064], "temperature": 0.0, "avg_logprob": -0.35348412086223735, "compression_ratio": 1.4423076923076923, "no_speech_prob": 0.7451722621917725}, {"id": 4, "seek": 2700, "start": 41.0, "end": 45.0, "text": " Not all times and so on, there's conditions but it worked in this time.", "tokens": [51064, 1726, 439, 1413, 293, 370, 322, 11, 456, 311, 4487, 457, 309, 2732, 294, 341, 565, 13, 51264], "temperature": 0.0, "avg_logprob": -0.35348412086223735, "compression_ratio": 1.4423076923076923, "no_speech_prob": 0.7451722621917725}, {"id": 5, "seek": 4500, "start": 45.0, "end": 67.0, "text": " Okay.", "tokens": [50364, 1033, 13, 51464], "temperature": 0.0, "avg_logprob": -0.44396968682607013, "compression_ratio": 0.38461538461538464, "no_speech_prob": 0.37409576773643494}, {"id": 6, "seek": 6700, "start": 67.0, "end": 80.0, "text": " Hello everyone. I am Rishi Raj and today I'll be presenting my GSOC work on GCC's LTO and along with I will share my experience with first time contribution to GCC.", "tokens": [50364, 2425, 1518, 13, 286, 669, 497, 27537, 16745, 293, 965, 286, 603, 312, 15578, 452, 460, 17188, 34, 589, 322, 460, 11717, 311, 441, 15427, 293, 2051, 365, 286, 486, 2073, 452, 1752, 365, 700, 565, 13150, 281, 460, 11717, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2304732186453683, "compression_ratio": 1.3736842105263158, "no_speech_prob": 0.6686018705368042}, {"id": 7, "seek": 6700, "start": 80.0, "end": 93.0, "text": " So, basically this is little about me. I am under garaged to end from India and I love terminal.", "tokens": [51014, 407, 11, 1936, 341, 307, 707, 466, 385, 13, 286, 669, 833, 3691, 2980, 281, 917, 490, 5282, 293, 286, 959, 14709, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2304732186453683, "compression_ratio": 1.3736842105263158, "no_speech_prob": 0.6686018705368042}, {"id": 8, "seek": 9300, "start": 93.0, "end": 98.0, "text": " Because I am lazy and it helps me to automate a lot of tasks.", "tokens": [50364, 1436, 286, 669, 14847, 293, 309, 3665, 385, 281, 31605, 257, 688, 295, 9608, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1447745809015238, "compression_ratio": 1.6518218623481782, "no_speech_prob": 0.4514106214046478}, {"id": 9, "seek": 9300, "start": 98.0, "end": 109.0, "text": " And also I keep changing my distro about each two, three months and this I think this is very problematic because a lot I spent a lot of time in that.", "tokens": [50614, 400, 611, 286, 1066, 4473, 452, 1483, 340, 466, 1184, 732, 11, 1045, 2493, 293, 341, 286, 519, 341, 307, 588, 19011, 570, 257, 688, 286, 4418, 257, 688, 295, 565, 294, 300, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1447745809015238, "compression_ratio": 1.6518218623481782, "no_speech_prob": 0.4514106214046478}, {"id": 10, "seek": 9300, "start": 109.0, "end": 115.0, "text": " Apart from that in my free time I love to read fiction, travel and I play badminton a lot.", "tokens": [51164, 24111, 490, 300, 294, 452, 1737, 565, 286, 959, 281, 1401, 13266, 11, 3147, 293, 286, 862, 1578, 76, 12442, 257, 688, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1447745809015238, "compression_ratio": 1.6518218623481782, "no_speech_prob": 0.4514106214046478}, {"id": 11, "seek": 9300, "start": 115.0, "end": 122.0, "text": " So, moving on. So, before discussing my project, let's discuss some of the things related to my project.", "tokens": [51464, 407, 11, 2684, 322, 13, 407, 11, 949, 10850, 452, 1716, 11, 718, 311, 2248, 512, 295, 264, 721, 4077, 281, 452, 1716, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1447745809015238, "compression_ratio": 1.6518218623481782, "no_speech_prob": 0.4514106214046478}, {"id": 12, "seek": 12200, "start": 122.0, "end": 125.0, "text": " So, first let's discuss about the LTO.", "tokens": [50364, 407, 11, 700, 718, 311, 2248, 466, 264, 441, 15427, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16234448977879115, "compression_ratio": 1.6027397260273972, "no_speech_prob": 0.0907898023724556}, {"id": 13, "seek": 12200, "start": 125.0, "end": 136.0, "text": " So, traditionally what compiler used to do is like to for optimization it is done at the compile time.", "tokens": [50514, 407, 11, 19067, 437, 31958, 1143, 281, 360, 307, 411, 281, 337, 19618, 309, 307, 1096, 412, 264, 31413, 565, 13, 51064], "temperature": 0.0, "avg_logprob": -0.16234448977879115, "compression_ratio": 1.6027397260273972, "no_speech_prob": 0.0907898023724556}, {"id": 14, "seek": 12200, "start": 136.0, "end": 143.0, "text": " So, each of the compile compilation unit is optimized independent of other compilation unit.", "tokens": [51064, 407, 11, 1184, 295, 264, 31413, 40261, 4985, 307, 26941, 6695, 295, 661, 40261, 4985, 13, 51414], "temperature": 0.0, "avg_logprob": -0.16234448977879115, "compression_ratio": 1.6027397260273972, "no_speech_prob": 0.0907898023724556}, {"id": 15, "seek": 14300, "start": 143.0, "end": 154.0, "text": " But when we think about a real world project we are missing a lot of context because in real world project there are several of there are several compilation unit which are related to each other.", "tokens": [50364, 583, 562, 321, 519, 466, 257, 957, 1002, 1716, 321, 366, 5361, 257, 688, 295, 4319, 570, 294, 957, 1002, 1716, 456, 366, 2940, 295, 456, 366, 2940, 40261, 4985, 597, 366, 4077, 281, 1184, 661, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12368709857647235, "compression_ratio": 1.8203592814371257, "no_speech_prob": 0.11368478089570999}, {"id": 16, "seek": 14300, "start": 154.0, "end": 165.0, "text": " And if we can like and if we can find some context between these compilation unit then we can optimize more.", "tokens": [50914, 400, 498, 321, 393, 411, 293, 498, 321, 393, 915, 512, 4319, 1296, 613, 40261, 4985, 550, 321, 393, 19719, 544, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12368709857647235, "compression_ratio": 1.8203592814371257, "no_speech_prob": 0.11368478089570999}, {"id": 17, "seek": 16500, "start": 165.0, "end": 173.0, "text": " So, in LTO what we do is instead of optimizing along with optimizing at compile time we also compile at linking time.", "tokens": [50364, 407, 11, 294, 441, 15427, 437, 321, 360, 307, 2602, 295, 40425, 2051, 365, 40425, 412, 31413, 565, 321, 611, 31413, 412, 25775, 565, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09694834678403792, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13910478353500366}, {"id": 18, "seek": 16500, "start": 173.0, "end": 179.0, "text": " So, linker is aware of all the translation unit so there is obviously more optimization.", "tokens": [50764, 407, 11, 2113, 260, 307, 3650, 295, 439, 264, 12853, 4985, 370, 456, 307, 2745, 544, 19618, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09694834678403792, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13910478353500366}, {"id": 19, "seek": 16500, "start": 179.0, "end": 184.0, "text": " Only downside being a longer compile time and more usage of memory during compilation.", "tokens": [51064, 5686, 25060, 885, 257, 2854, 31413, 565, 293, 544, 14924, 295, 4675, 1830, 40261, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09694834678403792, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13910478353500366}, {"id": 20, "seek": 16500, "start": 184.0, "end": 191.0, "text": " In GCC to enable LTO you can either use minus FLTO flag or minus FAT LTO objects flag.", "tokens": [51314, 682, 460, 11717, 281, 9528, 441, 15427, 291, 393, 2139, 764, 3175, 479, 43, 15427, 7166, 420, 3175, 479, 2218, 441, 15427, 6565, 7166, 13, 51664], "temperature": 0.0, "avg_logprob": -0.09694834678403792, "compression_ratio": 1.6666666666666667, "no_speech_prob": 0.13910478353500366}, {"id": 21, "seek": 19100, "start": 191.0, "end": 202.0, "text": " So, basically the second flag is to save GIMPAL bytecode along with LTO IL in the LTO object file.", "tokens": [50364, 407, 11, 1936, 264, 1150, 7166, 307, 281, 3155, 460, 6324, 47, 3427, 40846, 22332, 2051, 365, 441, 15427, 40413, 294, 264, 441, 15427, 2657, 3991, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17223768234252929, "compression_ratio": 1.3989071038251366, "no_speech_prob": 0.02690064162015915}, {"id": 22, "seek": 19100, "start": 202.0, "end": 207.0, "text": " Now, let's discuss the basic structure of a ELF file.", "tokens": [50914, 823, 11, 718, 311, 2248, 264, 3875, 3877, 295, 257, 14426, 37, 3991, 13, 51164], "temperature": 0.0, "avg_logprob": -0.17223768234252929, "compression_ratio": 1.3989071038251366, "no_speech_prob": 0.02690064162015915}, {"id": 23, "seek": 19100, "start": 207.0, "end": 213.0, "text": " ELF file is basically used for storing binary libraries and executables on Linux and Unix based system.", "tokens": [51164, 14426, 37, 3991, 307, 1936, 1143, 337, 26085, 17434, 15148, 293, 7568, 2965, 322, 18734, 293, 1156, 970, 2361, 1185, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17223768234252929, "compression_ratio": 1.3989071038251366, "no_speech_prob": 0.02690064162015915}, {"id": 24, "seek": 21300, "start": 213.0, "end": 217.0, "text": " So, here you can see that there is a ELF header.", "tokens": [50364, 407, 11, 510, 291, 393, 536, 300, 456, 307, 257, 14426, 37, 23117, 13, 50564], "temperature": 0.0, "avg_logprob": -0.07765517583707483, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.08630950003862381}, {"id": 25, "seek": 21300, "start": 217.0, "end": 224.0, "text": " ELF header basically contains the metadata about the ELF file to identify the ELF file on which system it was produced etc.", "tokens": [50564, 14426, 37, 23117, 1936, 8306, 264, 26603, 466, 264, 14426, 37, 3991, 281, 5876, 264, 14426, 37, 3991, 322, 597, 1185, 309, 390, 7126, 5183, 13, 50914], "temperature": 0.0, "avg_logprob": -0.07765517583707483, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.08630950003862381}, {"id": 26, "seek": 21300, "start": 224.0, "end": 233.0, "text": " Apart from this there is a program header table which is not relevant to my talk because it's used for executable and I am going to talk about the object files.", "tokens": [50914, 24111, 490, 341, 456, 307, 257, 1461, 23117, 3199, 597, 307, 406, 7340, 281, 452, 751, 570, 309, 311, 1143, 337, 7568, 712, 293, 286, 669, 516, 281, 751, 466, 264, 2657, 7098, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07765517583707483, "compression_ratio": 1.6243902439024391, "no_speech_prob": 0.08630950003862381}, {"id": 27, "seek": 23300, "start": 233.0, "end": 239.0, "text": " So, our main interest is section header table.", "tokens": [50364, 407, 11, 527, 2135, 1179, 307, 3541, 23117, 3199, 13, 50664], "temperature": 0.0, "avg_logprob": -0.16039930884517842, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.08776223659515381}, {"id": 28, "seek": 23300, "start": 239.0, "end": 245.0, "text": " Basically it contains the different information about different section along with their names.", "tokens": [50664, 8537, 309, 8306, 264, 819, 1589, 466, 819, 3541, 2051, 365, 641, 5288, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16039930884517842, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.08776223659515381}, {"id": 29, "seek": 23300, "start": 245.0, "end": 251.0, "text": " So, in LTO this is the typical structure of ELF files.", "tokens": [50964, 407, 11, 294, 441, 15427, 341, 307, 264, 7476, 3877, 295, 14426, 37, 7098, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16039930884517842, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.08776223659515381}, {"id": 30, "seek": 23300, "start": 251.0, "end": 258.0, "text": " So, you can see these sections prefixed with .gnu.ltu prefix.", "tokens": [51264, 407, 11, 291, 393, 536, 613, 10863, 18417, 40303, 365, 2411, 4568, 84, 13, 2282, 84, 46969, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16039930884517842, "compression_ratio": 1.505813953488372, "no_speech_prob": 0.08776223659515381}, {"id": 31, "seek": 25800, "start": 258.0, "end": 266.0, "text": " So, these sections are produced by LTO streamer.", "tokens": [50364, 407, 11, 613, 10863, 366, 7126, 538, 441, 15427, 4309, 260, 13, 50764], "temperature": 0.0, "avg_logprob": -0.09174079161423904, "compression_ratio": 1.591549295774648, "no_speech_prob": 0.023686392232775688}, {"id": 32, "seek": 25800, "start": 266.0, "end": 272.0, "text": " So, now let's discuss the role of an assembler in producing LTO object file.", "tokens": [50764, 407, 11, 586, 718, 311, 2248, 264, 3090, 295, 364, 8438, 1918, 294, 10501, 441, 15427, 2657, 3991, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09174079161423904, "compression_ratio": 1.591549295774648, "no_speech_prob": 0.023686392232775688}, {"id": 33, "seek": 25800, "start": 272.0, "end": 282.0, "text": " So, right now we discussed that these all section with .gnu.ltu prefix are produced by LTO streamer.", "tokens": [51064, 407, 11, 558, 586, 321, 7152, 300, 613, 439, 3541, 365, 2411, 4568, 84, 13, 2282, 84, 46969, 366, 7126, 538, 441, 15427, 4309, 260, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09174079161423904, "compression_ratio": 1.591549295774648, "no_speech_prob": 0.023686392232775688}, {"id": 34, "seek": 28200, "start": 282.0, "end": 286.0, "text": " And these all are already in the binary format.", "tokens": [50364, 400, 613, 439, 366, 1217, 294, 264, 17434, 7877, 13, 50564], "temperature": 0.0, "avg_logprob": -0.18915092811155854, "compression_ratio": 1.9207920792079207, "no_speech_prob": 0.09004410356283188}, {"id": 35, "seek": 28200, "start": 286.0, "end": 292.0, "text": " So, assembler doesn't touch this like basically the assembler take this as an input and output it the object file.", "tokens": [50564, 407, 11, 8438, 1918, 1177, 380, 2557, 341, 411, 1936, 264, 8438, 1918, 747, 341, 382, 364, 4846, 293, 5598, 309, 264, 2657, 3991, 13, 50864], "temperature": 0.0, "avg_logprob": -0.18915092811155854, "compression_ratio": 1.9207920792079207, "no_speech_prob": 0.09004410356283188}, {"id": 36, "seek": 28200, "start": 292.0, "end": 301.0, "text": " The only thing which assembler does is it produces .sim tab which contains the symbols .strtab which contains the string representation of section names", "tokens": [50864, 440, 787, 551, 597, 8438, 1918, 775, 307, 309, 14725, 2411, 30937, 4421, 597, 8306, 264, 16944, 2411, 372, 17721, 455, 597, 8306, 264, 6798, 10290, 295, 3541, 5288, 51314], "temperature": 0.0, "avg_logprob": -0.18915092811155854, "compression_ratio": 1.9207920792079207, "no_speech_prob": 0.09004410356283188}, {"id": 37, "seek": 28200, "start": 301.0, "end": 308.0, "text": " and .strtab which contains the symbol name in the string representation.", "tokens": [51314, 293, 2411, 372, 17721, 455, 597, 8306, 264, 5986, 1315, 294, 264, 6798, 10290, 13, 51664], "temperature": 0.0, "avg_logprob": -0.18915092811155854, "compression_ratio": 1.9207920792079207, "no_speech_prob": 0.09004410356283188}, {"id": 38, "seek": 30800, "start": 308.0, "end": 316.0, "text": " Apart from that if you are compiling with debugging flag then it also produce various debug symbols along with their relocations.", "tokens": [50364, 24111, 490, 300, 498, 291, 366, 715, 4883, 365, 45592, 7166, 550, 309, 611, 5258, 3683, 24083, 16944, 2051, 365, 641, 26981, 763, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12050840589735243, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.06369948387145996}, {"id": 39, "seek": 30800, "start": 316.0, "end": 320.0, "text": " So, assembler basically performs two functions.", "tokens": [50764, 407, 11, 8438, 1918, 1936, 26213, 732, 6828, 13, 50964], "temperature": 0.0, "avg_logprob": -0.12050840589735243, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.06369948387145996}, {"id": 40, "seek": 30800, "start": 320.0, "end": 332.0, "text": " First is to generate this three section .sim tab .strtab .strtab and if debugging option is enabled then it produces these debug sections.", "tokens": [50964, 2386, 307, 281, 8460, 341, 1045, 3541, 2411, 30937, 4421, 2411, 372, 17721, 455, 2411, 372, 17721, 455, 293, 498, 45592, 3614, 307, 15172, 550, 309, 14725, 613, 24083, 10863, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12050840589735243, "compression_ratio": 1.6458333333333333, "no_speech_prob": 0.06369948387145996}, {"id": 41, "seek": 33200, "start": 333.0, "end": 336.0, "text": " So, now my project was to bypass assembler.", "tokens": [50414, 407, 11, 586, 452, 1716, 390, 281, 24996, 8438, 1918, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08771621420028362, "compression_ratio": 1.6981981981981982, "no_speech_prob": 0.042348235845565796}, {"id": 42, "seek": 33200, "start": 336.0, "end": 340.0, "text": " So, first let's discuss why we wanted to bypass assembler.", "tokens": [50564, 407, 11, 700, 718, 311, 2248, 983, 321, 1415, 281, 24996, 8438, 1918, 13, 50764], "temperature": 0.0, "avg_logprob": -0.08771621420028362, "compression_ratio": 1.6981981981981982, "no_speech_prob": 0.042348235845565796}, {"id": 43, "seek": 33200, "start": 340.0, "end": 348.0, "text": " So, we already talked about like what was the function of a assembler in producing LTO object file.", "tokens": [50764, 407, 11, 321, 1217, 2825, 466, 411, 437, 390, 264, 2445, 295, 257, 8438, 1918, 294, 10501, 441, 15427, 2657, 3991, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08771621420028362, "compression_ratio": 1.6981981981981982, "no_speech_prob": 0.042348235845565796}, {"id": 44, "seek": 33200, "start": 348.0, "end": 356.0, "text": " It was basically two things and those two things were not very complicated it can be actually done by compiler.", "tokens": [51164, 467, 390, 1936, 732, 721, 293, 729, 732, 721, 645, 406, 588, 6179, 309, 393, 312, 767, 1096, 538, 31958, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08771621420028362, "compression_ratio": 1.6981981981981982, "no_speech_prob": 0.042348235845565796}, {"id": 45, "seek": 33200, "start": 356.0, "end": 360.0, "text": " So, what benefit we will get if we produce that from compiler.", "tokens": [51564, 407, 11, 437, 5121, 321, 486, 483, 498, 321, 5258, 300, 490, 31958, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08771621420028362, "compression_ratio": 1.6981981981981982, "no_speech_prob": 0.042348235845565796}, {"id": 46, "seek": 36000, "start": 360.0, "end": 369.0, "text": " So, like we already noted the fact that a lot of sections with the GNU LTO prefix were produced by the LTO streamer.", "tokens": [50364, 407, 11, 411, 321, 1217, 12964, 264, 1186, 300, 257, 688, 295, 10863, 365, 264, 46411, 52, 441, 15427, 46969, 645, 7126, 538, 264, 441, 15427, 4309, 260, 13, 50814], "temperature": 0.0, "avg_logprob": -0.12311737537384033, "compression_ratio": 1.4896907216494846, "no_speech_prob": 0.021258242428302765}, {"id": 47, "seek": 36000, "start": 369.0, "end": 378.0, "text": " And compiler just have to scramble through that take that input and produce as output in the object file.", "tokens": [50814, 400, 31958, 445, 362, 281, 795, 48382, 807, 300, 747, 300, 4846, 293, 5258, 382, 5598, 294, 264, 2657, 3991, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12311737537384033, "compression_ratio": 1.4896907216494846, "no_speech_prob": 0.021258242428302765}, {"id": 48, "seek": 36000, "start": 378.0, "end": 380.0, "text": " So, there was a lot of I over it.", "tokens": [51264, 407, 11, 456, 390, 257, 688, 295, 286, 670, 309, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12311737537384033, "compression_ratio": 1.4896907216494846, "no_speech_prob": 0.021258242428302765}, {"id": 49, "seek": 36000, "start": 380.0, "end": 383.0, "text": " So, here you can see the result.", "tokens": [51364, 407, 11, 510, 291, 393, 536, 264, 1874, 13, 51514], "temperature": 0.0, "avg_logprob": -0.12311737537384033, "compression_ratio": 1.4896907216494846, "no_speech_prob": 0.021258242428302765}, {"id": 50, "seek": 38300, "start": 383.0, "end": 393.0, "text": " So, with bypass we are taking like 14 seconds to compile a single compilation unit file and with default part it was taking 21 seconds.", "tokens": [50364, 407, 11, 365, 24996, 321, 366, 1940, 411, 3499, 3949, 281, 31413, 257, 2167, 40261, 4985, 3991, 293, 365, 7576, 644, 309, 390, 1940, 5080, 3949, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09447499838742343, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.025679370388388634}, {"id": 51, "seek": 38300, "start": 393.0, "end": 398.0, "text": " So, only for a single compilation unit there was a difference of 7 seconds.", "tokens": [50864, 407, 11, 787, 337, 257, 2167, 40261, 4985, 456, 390, 257, 2649, 295, 1614, 3949, 13, 51114], "temperature": 0.0, "avg_logprob": -0.09447499838742343, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.025679370388388634}, {"id": 52, "seek": 38300, "start": 398.0, "end": 406.0, "text": " So, if we like we are currently testing it on the real world project like Firefox and all and we will publish the result.", "tokens": [51114, 407, 11, 498, 321, 411, 321, 366, 4362, 4997, 309, 322, 264, 957, 1002, 1716, 411, 46613, 293, 439, 293, 321, 486, 11374, 264, 1874, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09447499838742343, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.025679370388388634}, {"id": 53, "seek": 38300, "start": 406.0, "end": 410.0, "text": " And we hope to see a drastic improvements.", "tokens": [51514, 400, 321, 1454, 281, 536, 257, 36821, 13797, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09447499838742343, "compression_ratio": 1.6936936936936937, "no_speech_prob": 0.025679370388388634}, {"id": 54, "seek": 41000, "start": 411.0, "end": 417.0, "text": " So, to implement the project we along with my mentor divided into two parts.", "tokens": [50414, 407, 11, 281, 4445, 264, 1716, 321, 2051, 365, 452, 14478, 6666, 666, 732, 3166, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1587487614673117, "compression_ratio": 1.660633484162896, "no_speech_prob": 0.018247760832309723}, {"id": 55, "seek": 41000, "start": 417.0, "end": 421.0, "text": " The first part was to extend the libivirty.", "tokens": [50714, 440, 700, 644, 390, 281, 10101, 264, 22854, 592, 9340, 13, 50914], "temperature": 0.0, "avg_logprob": -0.1587487614673117, "compression_ratio": 1.660633484162896, "no_speech_prob": 0.018247760832309723}, {"id": 56, "seek": 41000, "start": 421.0, "end": 429.0, "text": " Basically libivirty is a helper module which have various function to write and read from an object file.", "tokens": [50914, 8537, 22854, 592, 9340, 307, 257, 36133, 10088, 597, 362, 3683, 2445, 281, 2464, 293, 1401, 490, 364, 2657, 3991, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1587487614673117, "compression_ratio": 1.660633484162896, "no_speech_prob": 0.018247760832309723}, {"id": 57, "seek": 41000, "start": 429.0, "end": 434.0, "text": " So, we extended the libivirty to output symbol table and a string table.", "tokens": [51314, 407, 11, 321, 10913, 264, 22854, 592, 9340, 281, 5598, 5986, 3199, 293, 257, 6798, 3199, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1587487614673117, "compression_ratio": 1.660633484162896, "no_speech_prob": 0.018247760832309723}, {"id": 58, "seek": 41000, "start": 434.0, "end": 439.0, "text": " So, the first task which a similar was performing was done by this.", "tokens": [51564, 407, 11, 264, 700, 5633, 597, 257, 2531, 390, 10205, 390, 1096, 538, 341, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1587487614673117, "compression_ratio": 1.660633484162896, "no_speech_prob": 0.018247760832309723}, {"id": 59, "seek": 43900, "start": 439.0, "end": 446.0, "text": " The second task was to output various debug sections and symbols along with their relocation directly.", "tokens": [50364, 440, 1150, 5633, 390, 281, 5598, 3683, 24083, 10863, 293, 16944, 2051, 365, 641, 26981, 399, 3838, 13, 50714], "temperature": 0.0, "avg_logprob": -0.06708141233100266, "compression_ratio": 1.4585635359116023, "no_speech_prob": 0.018436625599861145}, {"id": 60, "seek": 43900, "start": 446.0, "end": 450.0, "text": " So, this was little bit complicated for me.", "tokens": [50714, 407, 11, 341, 390, 707, 857, 6179, 337, 385, 13, 50914], "temperature": 0.0, "avg_logprob": -0.06708141233100266, "compression_ratio": 1.4585635359116023, "no_speech_prob": 0.018436625599861145}, {"id": 61, "seek": 43900, "start": 450.0, "end": 462.0, "text": " The first thing was that GCC there was not sufficient documentation of GCC LTO debug architecture on the GCC website.", "tokens": [50914, 440, 700, 551, 390, 300, 460, 11717, 456, 390, 406, 11563, 14333, 295, 460, 11717, 441, 15427, 24083, 9482, 322, 264, 460, 11717, 3144, 13, 51514], "temperature": 0.0, "avg_logprob": -0.06708141233100266, "compression_ratio": 1.4585635359116023, "no_speech_prob": 0.018436625599861145}, {"id": 62, "seek": 46200, "start": 462.0, "end": 472.0, "text": " So, I got in contact with Richard who is the who have implemented the GCC debug architecture and he helped me through it.", "tokens": [50364, 407, 11, 286, 658, 294, 3385, 365, 9809, 567, 307, 264, 567, 362, 12270, 264, 460, 11717, 24083, 9482, 293, 415, 4254, 385, 807, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.09396760564454844, "compression_ratio": 1.492822966507177, "no_speech_prob": 0.05193183571100235}, {"id": 63, "seek": 46200, "start": 472.0, "end": 479.0, "text": " And also the documentation of Dwarf debugging format was a little bit intimidating as a beginner,", "tokens": [50864, 400, 611, 264, 14333, 295, 413, 6925, 69, 45592, 7877, 390, 257, 707, 857, 29714, 382, 257, 22080, 11, 51214], "temperature": 0.0, "avg_logprob": -0.09396760564454844, "compression_ratio": 1.492822966507177, "no_speech_prob": 0.05193183571100235}, {"id": 64, "seek": 46200, "start": 479.0, "end": 485.0, "text": " but as we proceeded further with help of my mentor I was successfully able to navigate that.", "tokens": [51214, 457, 382, 321, 39053, 3052, 365, 854, 295, 452, 14478, 286, 390, 10727, 1075, 281, 12350, 300, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09396760564454844, "compression_ratio": 1.492822966507177, "no_speech_prob": 0.05193183571100235}, {"id": 65, "seek": 48500, "start": 485.0, "end": 498.0, "text": " And as of now we have like I have successfully implemented the support for ELF file format and it can be found in the devil by bypass ASM branch of the GCC repository.", "tokens": [50364, 400, 382, 295, 586, 321, 362, 411, 286, 362, 10727, 12270, 264, 1406, 337, 14426, 37, 3991, 7877, 293, 309, 393, 312, 1352, 294, 264, 13297, 538, 24996, 7469, 44, 9819, 295, 264, 460, 11717, 25841, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16390889974740835, "compression_ratio": 1.4855491329479769, "no_speech_prob": 0.07393071800470352}, {"id": 66, "seek": 48500, "start": 498.0, "end": 504.0, "text": " So, you can go there and see that and if you have some comments you can reach back to me.", "tokens": [51014, 407, 11, 291, 393, 352, 456, 293, 536, 300, 293, 498, 291, 362, 512, 3053, 291, 393, 2524, 646, 281, 385, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16390889974740835, "compression_ratio": 1.4855491329479769, "no_speech_prob": 0.07393071800470352}, {"id": 67, "seek": 50400, "start": 505.0, "end": 517.0, "text": " For now we are only supporting x86 target for relocations and we are generally we are eventually planning to roll out to other architectures too.", "tokens": [50414, 1171, 586, 321, 366, 787, 7231, 2031, 22193, 3779, 337, 26981, 763, 293, 321, 366, 5101, 321, 366, 4728, 5038, 281, 3373, 484, 281, 661, 6331, 1303, 886, 13, 51014], "temperature": 0.0, "avg_logprob": -0.11509006054370434, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.18688775599002838}, {"id": 68, "seek": 50400, "start": 517.0, "end": 523.0, "text": " And we will also provide support for other object files other than ELF too.", "tokens": [51014, 400, 321, 486, 611, 2893, 1406, 337, 661, 2657, 7098, 661, 813, 14426, 37, 886, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11509006054370434, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.18688775599002838}, {"id": 69, "seek": 50400, "start": 523.0, "end": 531.0, "text": " So, now let's talk a little bit about how I got this opportunity to work in open source with GCC.", "tokens": [51314, 407, 11, 586, 718, 311, 751, 257, 707, 857, 466, 577, 286, 658, 341, 2650, 281, 589, 294, 1269, 4009, 365, 460, 11717, 13, 51714], "temperature": 0.0, "avg_logprob": -0.11509006054370434, "compression_ratio": 1.5336538461538463, "no_speech_prob": 0.18688775599002838}, {"id": 70, "seek": 53100, "start": 531.0, "end": 542.0, "text": " So, basically I tried getting into open source before a few times but it was a bit intimidating for me because due to the large code base and all those things.", "tokens": [50364, 407, 11, 1936, 286, 3031, 1242, 666, 1269, 4009, 949, 257, 1326, 1413, 457, 309, 390, 257, 857, 29714, 337, 385, 570, 3462, 281, 264, 2416, 3089, 3096, 293, 439, 729, 721, 13, 50914], "temperature": 0.0, "avg_logprob": -0.20000425617346604, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.13580001890659332}, {"id": 71, "seek": 53100, "start": 542.0, "end": 559.0, "text": " So, when I like one of my friend recommended me to try for G-SOC and when I was going through various projects then this project interested me and thanks to DOH his newbies guide was very helpful me to introducing to GCC.", "tokens": [50914, 407, 11, 562, 286, 411, 472, 295, 452, 1277, 9628, 385, 281, 853, 337, 460, 12, 17188, 34, 293, 562, 286, 390, 516, 807, 3683, 4455, 550, 341, 1716, 3102, 385, 293, 3231, 281, 10699, 39, 702, 777, 23177, 5934, 390, 588, 4961, 385, 281, 15424, 281, 460, 11717, 13, 51764], "temperature": 0.0, "avg_logprob": -0.20000425617346604, "compression_ratio": 1.5614754098360655, "no_speech_prob": 0.13580001890659332}, {"id": 72, "seek": 55900, "start": 559.0, "end": 563.0, "text": " And then I applied and eventually got selected.", "tokens": [50364, 400, 550, 286, 6456, 293, 4728, 658, 8209, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13166104593584615, "compression_ratio": 1.413978494623656, "no_speech_prob": 0.08095917105674744}, {"id": 73, "seek": 55900, "start": 563.0, "end": 573.0, "text": " So, basically G-SOC is an opportunity for first new contributors to get started with open source and applications for this year is opening on 18 March.", "tokens": [50564, 407, 11, 1936, 460, 12, 17188, 34, 307, 364, 2650, 337, 700, 777, 45627, 281, 483, 1409, 365, 1269, 4009, 293, 5821, 337, 341, 1064, 307, 5193, 322, 2443, 6129, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13166104593584615, "compression_ratio": 1.413978494623656, "no_speech_prob": 0.08095917105674744}, {"id": 74, "seek": 55900, "start": 573.0, "end": 578.0, "text": " If any if anyone of you are interested then you can sure apply.", "tokens": [51064, 759, 604, 498, 2878, 295, 291, 366, 3102, 550, 291, 393, 988, 3079, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13166104593584615, "compression_ratio": 1.413978494623656, "no_speech_prob": 0.08095917105674744}, {"id": 75, "seek": 57800, "start": 579.0, "end": 590.0, "text": " I sought out the people who made it possible for my contribution first Google for organizing G-SOC which provided me a good platform to launch me to the open source world.", "tokens": [50414, 286, 17532, 484, 264, 561, 567, 1027, 309, 1944, 337, 452, 13150, 700, 3329, 337, 17608, 460, 12, 17188, 34, 597, 5649, 385, 257, 665, 3663, 281, 4025, 385, 281, 264, 1269, 4009, 1002, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13675505406147725, "compression_ratio": 1.5176991150442478, "no_speech_prob": 0.3622894585132599}, {"id": 76, "seek": 57800, "start": 590.0, "end": 595.0, "text": " My mentors Jan and Martin for helping and guiding throughout the summers to complete the project.", "tokens": [50964, 1222, 21798, 4956, 293, 9184, 337, 4315, 293, 25061, 3710, 264, 46474, 281, 3566, 264, 1716, 13, 51214], "temperature": 0.0, "avg_logprob": -0.13675505406147725, "compression_ratio": 1.5176991150442478, "no_speech_prob": 0.3622894585132599}, {"id": 77, "seek": 57800, "start": 595.0, "end": 601.0, "text": " Thomas and Dev for securing the sponsorship and also for my visa process.", "tokens": [51214, 8500, 293, 9096, 337, 33640, 264, 42922, 293, 611, 337, 452, 18589, 1399, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13675505406147725, "compression_ratio": 1.5176991150442478, "no_speech_prob": 0.3622894585132599}, {"id": 78, "seek": 60100, "start": 601.0, "end": 602.0, "text": " Thanks a lot.", "tokens": [50364, 2561, 257, 688, 13, 50414], "temperature": 0.0, "avg_logprob": -0.27638645966847736, "compression_ratio": 1.3387096774193548, "no_speech_prob": 0.42425429821014404}, {"id": 79, "seek": 60100, "start": 602.0, "end": 609.0, "text": " Or also to the GNU tool transfer which sponsored these attendance.", "tokens": [50414, 1610, 611, 281, 264, 46411, 52, 2290, 5003, 597, 16621, 613, 24337, 13, 50764], "temperature": 0.0, "avg_logprob": -0.27638645966847736, "compression_ratio": 1.3387096774193548, "no_speech_prob": 0.42425429821014404}, {"id": 80, "seek": 60100, "start": 609.0, "end": 613.0, "text": " Thanks for your attention.", "tokens": [50764, 2561, 337, 428, 3202, 13, 50964], "temperature": 0.0, "avg_logprob": -0.27638645966847736, "compression_ratio": 1.3387096774193548, "no_speech_prob": 0.42425429821014404}, {"id": 81, "seek": 60100, "start": 613.0, "end": 614.0, "text": " These are my socials.", "tokens": [50964, 1981, 366, 452, 2093, 82, 13, 51014], "temperature": 0.0, "avg_logprob": -0.27638645966847736, "compression_ratio": 1.3387096774193548, "no_speech_prob": 0.42425429821014404}, {"id": 82, "seek": 60100, "start": 614.0, "end": 617.0, "text": " If you want you can connect me here.", "tokens": [51014, 759, 291, 528, 291, 393, 1745, 385, 510, 13, 51164], "temperature": 0.0, "avg_logprob": -0.27638645966847736, "compression_ratio": 1.3387096774193548, "no_speech_prob": 0.42425429821014404}, {"id": 83, "seek": 63100, "start": 632.0, "end": 638.0, "text": " Any plans for the non-LTO case?", "tokens": [50414, 2639, 5482, 337, 264, 2107, 12, 43, 15427, 1389, 30, 50714], "temperature": 0.0, "avg_logprob": -0.49677959084510803, "compression_ratio": 1.4569536423841059, "no_speech_prob": 0.17632827162742615}, {"id": 84, "seek": 63100, "start": 638.0, "end": 643.0, "text": " So, you put in a regular assembly like machine called.", "tokens": [50714, 407, 11, 291, 829, 294, 257, 3890, 12103, 411, 3479, 1219, 13, 50964], "temperature": 0.0, "avg_logprob": -0.49677959084510803, "compression_ratio": 1.4569536423841059, "no_speech_prob": 0.17632827162742615}, {"id": 85, "seek": 63100, "start": 643.0, "end": 648.0, "text": " But it will be repetition of a similar only right in non-LTO case.", "tokens": [50964, 583, 309, 486, 312, 30432, 295, 257, 2531, 787, 558, 294, 2107, 12, 43, 15427, 1389, 13, 51214], "temperature": 0.0, "avg_logprob": -0.49677959084510803, "compression_ratio": 1.4569536423841059, "no_speech_prob": 0.17632827162742615}, {"id": 86, "seek": 63100, "start": 648.0, "end": 656.0, "text": " So, the question is repeat the question that we have on the video.", "tokens": [51214, 407, 11, 264, 1168, 307, 7149, 264, 1168, 300, 321, 362, 322, 264, 960, 13, 51614], "temperature": 0.0, "avg_logprob": -0.49677959084510803, "compression_ratio": 1.4569536423841059, "no_speech_prob": 0.17632827162742615}, {"id": 87, "seek": 65600, "start": 657.0, "end": 664.0, "text": " So, he is asking if we have any plans to extend it for non-LTO case.", "tokens": [50414, 407, 11, 415, 307, 3365, 498, 321, 362, 604, 5482, 281, 10101, 309, 337, 2107, 12, 43, 15427, 1389, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24593009948730468, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.13824370503425598}, {"id": 88, "seek": 65600, "start": 664.0, "end": 670.0, "text": " So, in non-LTO case one need to be simply repetition like we will be building another assembler right.", "tokens": [50764, 407, 11, 294, 2107, 12, 43, 15427, 1389, 472, 643, 281, 312, 2935, 30432, 411, 321, 486, 312, 2390, 1071, 8438, 1918, 558, 13, 51064], "temperature": 0.0, "avg_logprob": -0.24593009948730468, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.13824370503425598}, {"id": 89, "seek": 65600, "start": 670.0, "end": 675.0, "text": " We will have to anyways like assemble all of those stuff.", "tokens": [51064, 492, 486, 362, 281, 13448, 411, 22364, 439, 295, 729, 1507, 13, 51314], "temperature": 0.0, "avg_logprob": -0.24593009948730468, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.13824370503425598}, {"id": 90, "seek": 65600, "start": 683.0, "end": 684.0, "text": " Can you please repeat?", "tokens": [51714, 1664, 291, 1767, 7149, 30, 51764], "temperature": 0.0, "avg_logprob": -0.24593009948730468, "compression_ratio": 1.4566473988439306, "no_speech_prob": 0.13824370503425598}, {"id": 91, "seek": 68600, "start": 686.0, "end": 688.0, "text": " It is actually not done.", "tokens": [50364, 467, 307, 767, 406, 1096, 13, 50464], "temperature": 0.0, "avg_logprob": -0.6933099365234375, "compression_ratio": 1.3515625, "no_speech_prob": 0.2552681863307953}, {"id": 92, "seek": 68600, "start": 688.0, "end": 694.0, "text": " So, we should be extend as we need it for the forward.", "tokens": [50464, 407, 11, 321, 820, 312, 10101, 382, 321, 643, 309, 337, 264, 2128, 13, 50764], "temperature": 0.0, "avg_logprob": -0.6933099365234375, "compression_ratio": 1.3515625, "no_speech_prob": 0.2552681863307953}, {"id": 93, "seek": 68600, "start": 701.0, "end": 703.0, "text": " Any more questions?", "tokens": [51114, 2639, 544, 1651, 30, 51214], "temperature": 0.0, "avg_logprob": -0.6933099365234375, "compression_ratio": 1.3515625, "no_speech_prob": 0.2552681863307953}, {"id": 94, "seek": 68600, "start": 703.0, "end": 710.0, "text": " Yeah, you said that you need more relocation right for the fire business.", "tokens": [51214, 865, 11, 291, 848, 300, 291, 643, 544, 26981, 399, 558, 337, 264, 2610, 1606, 13, 51564], "temperature": 0.0, "avg_logprob": -0.6933099365234375, "compression_ratio": 1.3515625, "no_speech_prob": 0.2552681863307953}, {"id": 95, "seek": 71000, "start": 710.0, "end": 715.0, "text": " Is it just like relocation for the port?", "tokens": [50364, 1119, 309, 445, 411, 26981, 399, 337, 264, 2436, 30, 50614], "temperature": 0.0, "avg_logprob": -0.22645656172051487, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.052470527589321136}, {"id": 96, "seek": 71000, "start": 715.0, "end": 719.0, "text": " Or do you really need all kinds of relocation?", "tokens": [50614, 1610, 360, 291, 534, 643, 439, 3685, 295, 26981, 399, 30, 50814], "temperature": 0.0, "avg_logprob": -0.22645656172051487, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.052470527589321136}, {"id": 97, "seek": 71000, "start": 719.0, "end": 726.0, "text": " So, he is asking that we like I was telling that we need more relocation.", "tokens": [50814, 407, 11, 415, 307, 3365, 300, 321, 411, 286, 390, 3585, 300, 321, 643, 544, 26981, 399, 13, 51164], "temperature": 0.0, "avg_logprob": -0.22645656172051487, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.052470527589321136}, {"id": 98, "seek": 71000, "start": 726.0, "end": 733.0, "text": " So, is it like relocation for pointers or relocation we need more relocation.", "tokens": [51164, 407, 11, 307, 309, 411, 26981, 399, 337, 44548, 420, 26981, 399, 321, 643, 544, 26981, 399, 13, 51514], "temperature": 0.0, "avg_logprob": -0.22645656172051487, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.052470527589321136}, {"id": 99, "seek": 71000, "start": 733.0, "end": 739.0, "text": " So, basically for every architecture the relocation structure is different right.", "tokens": [51514, 407, 11, 1936, 337, 633, 9482, 264, 26981, 399, 3877, 307, 819, 558, 13, 51814], "temperature": 0.0, "avg_logprob": -0.22645656172051487, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.052470527589321136}, {"id": 100, "seek": 73900, "start": 739.0, "end": 754.0, "text": " So, for each debug section we need to output a corresponding relocation so that during the late debug phase the linker could identify that debug section and link it.", "tokens": [50364, 407, 11, 337, 1184, 24083, 3541, 321, 643, 281, 5598, 257, 11760, 26981, 399, 370, 300, 1830, 264, 3469, 24083, 5574, 264, 2113, 260, 727, 5876, 300, 24083, 3541, 293, 2113, 309, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13315638450727071, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.023774025961756706}, {"id": 101, "seek": 73900, "start": 754.0, "end": 760.0, "text": " So, for each architecture we need to change that structure and output corresponding relocation.", "tokens": [51114, 407, 11, 337, 1184, 9482, 321, 643, 281, 1319, 300, 3877, 293, 5598, 11760, 26981, 399, 13, 51414], "temperature": 0.0, "avg_logprob": -0.13315638450727071, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.023774025961756706}, {"id": 102, "seek": 73900, "start": 760.0, "end": 765.0, "text": " Basically the address and the add-in will be different in the different format.", "tokens": [51414, 8537, 264, 2985, 293, 264, 909, 12, 259, 486, 312, 819, 294, 264, 819, 7877, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13315638450727071, "compression_ratio": 1.8235294117647058, "no_speech_prob": 0.023774025961756706}, {"id": 103, "seek": 76900, "start": 770.0, "end": 772.0, "text": " Thank you.", "tokens": [50414, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.4313925133376825, "compression_ratio": 1.3398692810457515, "no_speech_prob": 0.1188211739063263}, {"id": 104, "seek": 76900, "start": 773.0, "end": 783.0, "text": " How about this work in case other debugging formats get sad that they need to be in LTO.", "tokens": [50564, 1012, 466, 341, 589, 294, 1389, 661, 45592, 25879, 483, 4227, 300, 436, 643, 281, 312, 294, 441, 15427, 13, 51064], "temperature": 0.0, "avg_logprob": -0.4313925133376825, "compression_ratio": 1.3398692810457515, "no_speech_prob": 0.1188211739063263}, {"id": 105, "seek": 76900, "start": 783.0, "end": 786.0, "text": " Because I see that you did some of the stuff in talk to us right.", "tokens": [51064, 1436, 286, 536, 300, 291, 630, 512, 295, 264, 1507, 294, 751, 281, 505, 558, 13, 51214], "temperature": 0.0, "avg_logprob": -0.4313925133376825, "compression_ratio": 1.3398692810457515, "no_speech_prob": 0.1188211739063263}, {"id": 106, "seek": 76900, "start": 786.0, "end": 787.0, "text": " Yeah.", "tokens": [51214, 865, 13, 51264], "temperature": 0.0, "avg_logprob": -0.4313925133376825, "compression_ratio": 1.3398692810457515, "no_speech_prob": 0.1188211739063263}, {"id": 107, "seek": 76900, "start": 787.0, "end": 790.0, "text": " Can you please repeat like I was?", "tokens": [51264, 1664, 291, 1767, 7149, 411, 286, 390, 30, 51414], "temperature": 0.0, "avg_logprob": -0.4313925133376825, "compression_ratio": 1.3398692810457515, "no_speech_prob": 0.1188211739063263}, {"id": 108, "seek": 79000, "start": 790.0, "end": 804.0, "text": " Well, I think that the LTO streamer part of the stuff that it dumps, UY pass, right, directly is basically how I mean how attached you work to the door for.", "tokens": [50364, 1042, 11, 286, 519, 300, 264, 441, 15427, 4309, 260, 644, 295, 264, 1507, 300, 309, 11430, 82, 11, 624, 56, 1320, 11, 558, 11, 3838, 307, 1936, 577, 286, 914, 577, 8570, 291, 589, 281, 264, 2853, 337, 13, 51064], "temperature": 0.0, "avg_logprob": -0.48485078617018096, "compression_ratio": 1.2671755725190839, "no_speech_prob": 0.5261157155036926}, {"id": 109, "seek": 79000, "start": 804.0, "end": 806.0, "text": " Oh, okay.", "tokens": [51064, 876, 11, 1392, 13, 51164], "temperature": 0.0, "avg_logprob": -0.48485078617018096, "compression_ratio": 1.2671755725190839, "no_speech_prob": 0.5261157155036926}], "language": "en"}