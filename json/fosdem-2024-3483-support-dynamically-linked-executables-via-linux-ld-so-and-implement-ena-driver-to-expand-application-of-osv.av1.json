{"text": " Hello, everybody. Can you guys hear me? Hello. Cool. My name is Valde Kozachuk. I'm one of the few OSV committers and I'm here to tell you about the latest enhancements made to OSV since my last presentation at Fosada a year ago. So, first off, I want to apologize for this very long title. Actually, most of my talk is really going to be focused on the first part, but I'll also try to mention a little bit about the other things. So, in today's presentation, I will talk about the enhancements to support statically linked executables and dynamically linked executables launched by a Linux dynamic linker. I will also briefly describe the implementation of the inner driver to support AWS Nitro. In addition, I will preview the new Xconfig-based mechanism to allow further customization of OSV. Finally, I will talk about upcoming one, zero release and beyond. Most applications do not make system calls into Linux currently, as we know. Instead, they do it indirectly by way of calling Lipsy functions that delegate to Cisco or SDC instruction on ARM. On Linux, for example, the dynamically linked executables are launched by Program Interpreter LD, which memory maps the executable else along with other else files. It depends on, like, Lipsy SO, Lipthread SO, and so on. Then, resolves undefined symbols like puts or pthread create and finally involves the main function. On OSV, the built-in to kernel dynamic linker plays the role of the Program Interpreter that performs similar steps as on Linux. But instead of loading the aforementioned libraries, it resolves the undefined symbols by pointing them to OSV implementations of those. The OSV linker supports both shared libraries and dynamically linked executables that are either position-dependent or non-position-dependent. The benefit is that programs interact with the OSV kernel using the fast local function calls without the overhead of Cisco instruction. On the negative side, the Linux compatibility is a moving target because Lipsy keeps adding new functions and on the OSV side, we have to keep implementing them. This slide here illustrates how dynamically linked programs would traditionally interact with OSV kernel. The drawing shows an executable procedure linkage table, PLT, on the left side. The dynamic linker and Lipsy implementation that are part of OSV kernel on the right side. In this example, after the dynamic linker memory maps the program into the memory, actually, more specifically, the self-segment, it then sets up the PLT to later resolve and replace the put function call placeholder with the address of its implementation in OSV kernel, which typically happens upon the very first call. Now, the statically linked executables interact with Linux kernel by directly making system calls and reading from pseudo file systems like ProgFS and SysFS. Initially, OSV implemented a fairly small number of system calls around 70 to support running going programs that were interesting because they would call Lipsy functions to create threads, for example, and execute system calls to do other things like, for example, Socket API. But this was not enough to support statically linked executables. To make this possible, we had to implement some key new system calls like BRK and clone and add substantial number of other ones to bring the total to 137 at this point. However, the most tricky part was adding support for the application fed local storage so-called TLS. The dynamic-linked programs that run on OSV, in a traditional way, would share the thread local storage with kernel and allow OSV to fully control setup of TLS. The statically linked executables, on other hand, want to allocate their own TLS and set the FS register on X64 or TPIDREO0 on ARM and to the thread control address for each thread. On X64, the solution was basically to utilize the GS register to point to the Persepio structure with a copy of that application, TCP, and basically update it on every context switch. On AHR64, we did similar thing. Now, the point of this enhancement is that we basically improved the Linux compatibility because now we don't have to worry about these cases, where, for example, application tries to call functions in Lipsy that OSV doesn't implement. But the drawback, obviously, of the system calls interface is that, obviously, we pay overhead of Cisco instruction every time, which on average I measured this around 110 nanoseconds on X64. This picture actually illustrates what happens behind the scenes. So on the right side, actually, OSV dynamic linker still plays some small role. It still memory maps the segments of the elf. It reads the headers, obviously. But then, really, it just jumps to the start of the elf. And from this point on, the interactions basically between the program and the OSV happens simply through Cisco instruction. The exciting side effect, actually, of enhancing OSV to support Staticly Link executable is basically capability to run dynamically linked executables via Linux dynamic linker instead of basically the OSV built-in one. The Linux dynamic linker, LD, is Staticly Linux, a tightly linked position independent shared object that is loaded and processed by OSV kernel in an exact same way as Static executable is. In Linux, the dynamic linker would be launched implicitly, right? And by simply introspecting the inter-program header. In OSV, we have to launch the LD, the Linux LD executable explicitly and pass its path along with the arguments as you can actually see in RO. And actually, as you can see in this script, runpy example. So we're passing actually the absolute path to the Linux dynamic linker and then we're actually adding all the path of executable and any arguments. So obviously, just like with Staticly Link executables, there is the same benefit that we are now much more compatible with Linux because one can take any application that works on Linux with G-Lipsy and it should work on OSV just because when we build the image, OSV is going to run, it's going to actually load the G-Lipsy, and we can't use it as any other library that given application needs. The drawback is the same because we are again paying 110 nanoseconds for every Cisco instruction. And this slide again tries to illustrate the interactions between the OSV and the application. It's, as you can see on the right, you have the OSV kernel. On the left, the application, the news dynamic linker, that is executed just like with static executables. And then it loads the application LLF into memory by using M-MAP system call. And then also executes the application itself, loads any libraries. And from this point on, all the interactions happen with Cisco instructions. Now to help analyze and troubleshoot static link executables, or dynamic link launch basically in this new way, we have added a new diagnostic tool that called S-Trace, which is obviously similar to what one can do on Linux. In essence, one can specify all interesting trace points using a regular expressions. In this example, to monitor system calls, you just add a Cisco star, and you enable S-Trace system thread that basically would print all the trace point calls to the standard output. And as the application basically gets hit, while program runs. How many minutes do I have left? Seven minutes. So to recap what I have talked about in previous six slides, in the first two I described the traditional way of running dynamic link programs on SV, which benefit from fast local function calls, but may suffer from compatibility issues. In the next two slides, I explained the new enhancements to allow running static link executables. And finally in the last two slides, I covered a new alternative way of running dynamic link programs launched by Linux dynamic linker on SV, which again may suffer from a tiny overhead of handling system calls, but benefit from much better compatibility with Linux. In essence, these new enhancements greatly improve the OSV application and should make possible to run more programs on it. In addition to what I have talked so far, we have also implemented a better version of the AWS elastic network adapter. In essence, we basically took the 3DSD implementation by AWS and made it work on OSV, and we tried to minimize all that. So basically, minimize the changes so that we can backport any possible future, for example, fixes. And disable a lot of stuff that simply does not apply to OSV. The resulting driver costs us around 7,000 lines of, sorry, yeah, 7,000 lines of mostly C code, and 56 kilobytes of larger kernel size. The challenge obviously was testing that because it can only be done on the running Nitro instance in AWS. And so far, the driver seems to be pretty stable. I've tested using, and seems to yield decent performance. I've tested that using IPerf3, NetPerf, and some simple HTTP server app application. As you may have guessed, actually, the ENA driver implementation is enough to run OSV on with RAMFS on Nitro EC2 instance. And so there's actually a script that I wrote to simplify the upload of the OSV image, creating a snapshot and basically creating AMI. And one thing, obviously, to run OSV on a Nitro instance with non-volatile file system like ZFS, or hopefully EXT in the future, we need to have NVME driver implementation, which is actually two pull requests from community at this point, but they haven't been merged yet. They need some love. In my previous presentation at FOSDM, I talked about kernel modularization and driver profiles. This year on it briefly describe a new feature that takes modularization to the next level, and which has been greatly inspired by Unicraft. In essence, the goal is to use the Linux kernel build configuration tool, Xconfig, to let the user select OSV components to be included or excluded, and various parameters to configure it. The make file would then simply act on a generated config file, exclude relevant object files, and pass any configuration parameters to the source files. And this is obviously very much work in progress. And obviously, unlike Unicraft, where all the elements are effectively Lego blocks, with OSV we pretty much have to do the opposite. We have to put sprinkle basically the source code with all these if-deaths. And this is just example of what kind of modules or parameters can be modified. And basically as an example of what can be accomplished with that new feature is that by hiding basically all the symbols, but those used by application, excluding all necessary components, and changing values of various configurable parameters as listed on the slide, one can build a kernel image of 788 kilobytes in size, and running a low-world app using 1.2 megabytes of memory. So it is, when I started optimizing OSV kernel like five years ago, it was like, the kernel itself was like 10 megabytes at least, and it required a minimum of 30 megabytes of memory. So it is almost 10-fold improvement. Well, I'm sure not as close as Unicraft, but we are, maybe we can squeeze to be at half megabyte. So we are, as I am moving toward the end of my presentation, I just wanted to mention that we are also planning to cut a new release of OSV10, which should include all the features that I've talked about. And I hope that we're gonna be able to implement the EXT file system, merge the IPv6 implementation branch, and potentially implement NVMe driver. I'm especially excited about the EXT file system support because I think it will make it easier to build damages on Linux, and then introspect, for example, if something happens afterwards. So beyond the upcoming release, we're planning to revamp Capstan. Capstan is like effectively like a craft kit. It just, but it hasn't been really enhanced in any way, or even to take advantage of any recent features of OSV. So we're planning to basically revamp it, and make it really easy to use, basically to help application developers to use OSV. And then in addition, we're planning to work on some of the security, so like ASLR, and that requires making kernel relocatable, and some optimizations. Eventually, and also finally, we are planning to make OSV to run on AWS Graviton, but that requires UEFI and some other things. And with that, I would like to thank the organizers for inviting me to this conference, and tell you about OSV. I would also like to thank SyllaDB for sponsoring my OSV work, and Dorbola Orr for words of encouragement, and Nadav Haral for being my mentor, and reviewing hundreds of patches, and implementing other enhancements. And finally, I would like to also thank all the community contributors to the project. And this slide, you can find some links about OSV, and thank you for your attention. And I'm not sure if you have any questions. Time for questions. We have time for one burning question, if there is. You wanted? Yeah, go ahead. This is your work on Linux compatibility. How are you handling new APIs, such as the IO U-ring and similar applications? Are you using? Your question was how do you add new applications to? No, no, so with the Linux API, that you are right for, I believe, for, how are you handling IO U-ring and similar APIs? So how am I consuming new APIs, Linux APIs? I don't know how are you handling applications, which do make use of those? So basically, this happens as the way I describe, typically, if the application is launched in the traditional way, OSV simply, resolves all the application symbols, like Lipsy symbols, and simply redirects them to OSV implementation of Lipsy functions. If I have an answer to your question, then we can meet afterwards and I can address better. Thanks again for the talk. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.0, "text": " Hello, everybody. Can you guys hear me?", "tokens": [50364, 2425, 11, 2201, 13, 1664, 291, 1074, 1568, 385, 30, 50714], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 1, "seek": 0, "start": 8.4, "end": 11.4, "text": " Hello.", "tokens": [50784, 2425, 13, 50934], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 2, "seek": 0, "start": 11.4, "end": 14.84, "text": " Cool. My name is Valde Kozachuk.", "tokens": [50934, 8561, 13, 1222, 1315, 307, 7188, 1479, 10509, 89, 608, 2034, 13, 51106], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 3, "seek": 0, "start": 14.84, "end": 19.080000000000002, "text": " I'm one of the few OSV committers and I'm here to tell you", "tokens": [51106, 286, 478, 472, 295, 264, 1326, 12731, 53, 5599, 1559, 293, 286, 478, 510, 281, 980, 291, 51318], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 4, "seek": 0, "start": 19.080000000000002, "end": 22.8, "text": " about the latest enhancements made to OSV", "tokens": [51318, 466, 264, 6792, 11985, 1117, 1027, 281, 12731, 53, 51504], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 5, "seek": 0, "start": 22.8, "end": 25.68, "text": " since my last presentation at Fosada a year ago.", "tokens": [51504, 1670, 452, 1036, 5860, 412, 479, 329, 1538, 257, 1064, 2057, 13, 51648], "temperature": 0.0, "avg_logprob": -0.4578759544774106, "compression_ratio": 1.3630952380952381, "no_speech_prob": 0.46939197182655334}, {"id": 6, "seek": 2568, "start": 26.64, "end": 30.64, "text": " So, first off, I want to apologize for this very long title.", "tokens": [50412, 407, 11, 700, 766, 11, 286, 528, 281, 12328, 337, 341, 588, 938, 4876, 13, 50612], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 7, "seek": 2568, "start": 30.64, "end": 35.64, "text": " Actually, most of my talk is really going to be focused on the first part,", "tokens": [50612, 5135, 11, 881, 295, 452, 751, 307, 534, 516, 281, 312, 5178, 322, 264, 700, 644, 11, 50862], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 8, "seek": 2568, "start": 35.64, "end": 39.64, "text": " but I'll also try to mention a little bit about the other things.", "tokens": [50862, 457, 286, 603, 611, 853, 281, 2152, 257, 707, 857, 466, 264, 661, 721, 13, 51062], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 9, "seek": 2568, "start": 39.64, "end": 45.64, "text": " So, in today's presentation, I will talk about the enhancements", "tokens": [51062, 407, 11, 294, 965, 311, 5860, 11, 286, 486, 751, 466, 264, 11985, 1117, 51362], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 10, "seek": 2568, "start": 45.64, "end": 50.64, "text": " to support statically linked executables and dynamically linked executables", "tokens": [51362, 281, 1406, 2219, 984, 9408, 7568, 2965, 293, 43492, 9408, 7568, 2965, 51612], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 11, "seek": 2568, "start": 50.64, "end": 53.64, "text": " launched by a Linux dynamic linker.", "tokens": [51612, 8730, 538, 257, 18734, 8546, 2113, 260, 13, 51762], "temperature": 0.0, "avg_logprob": -0.257264548853824, "compression_ratio": 1.6462882096069869, "no_speech_prob": 0.011080893687903881}, {"id": 12, "seek": 5364, "start": 54.6, "end": 58.6, "text": " I will also briefly describe the implementation of the inner driver", "tokens": [50412, 286, 486, 611, 10515, 6786, 264, 11420, 295, 264, 7284, 6787, 50612], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 13, "seek": 5364, "start": 58.6, "end": 60.6, "text": " to support AWS Nitro.", "tokens": [50612, 281, 1406, 17650, 37942, 340, 13, 50712], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 14, "seek": 5364, "start": 60.6, "end": 64.6, "text": " In addition, I will preview the new Xconfig-based mechanism", "tokens": [50712, 682, 4500, 11, 286, 486, 14281, 264, 777, 1783, 1671, 20646, 12, 6032, 7513, 50912], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 15, "seek": 5364, "start": 64.6, "end": 68.6, "text": " to allow further customization of OSV.", "tokens": [50912, 281, 2089, 3052, 39387, 295, 12731, 53, 13, 51112], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 16, "seek": 5364, "start": 68.6, "end": 73.6, "text": " Finally, I will talk about upcoming one, zero release and beyond.", "tokens": [51112, 6288, 11, 286, 486, 751, 466, 11500, 472, 11, 4018, 4374, 293, 4399, 13, 51362], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 17, "seek": 5364, "start": 76.6, "end": 81.6, "text": " Most applications do not make system calls into Linux currently, as we know.", "tokens": [51512, 4534, 5821, 360, 406, 652, 1185, 5498, 666, 18734, 4362, 11, 382, 321, 458, 13, 51762], "temperature": 0.0, "avg_logprob": -0.18385071870757314, "compression_ratio": 1.445414847161572, "no_speech_prob": 0.004467973485589027}, {"id": 18, "seek": 8160, "start": 82.55999999999999, "end": 86.55999999999999, "text": " Instead, they do it indirectly by way of calling Lipsy functions", "tokens": [50412, 7156, 11, 436, 360, 309, 37779, 538, 636, 295, 5141, 441, 2600, 88, 6828, 50612], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 19, "seek": 8160, "start": 86.55999999999999, "end": 90.56, "text": " that delegate to Cisco or SDC instruction on ARM.", "tokens": [50612, 300, 40999, 281, 38528, 420, 14638, 34, 10951, 322, 45209, 13, 50812], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 20, "seek": 8160, "start": 90.56, "end": 93.56, "text": " On Linux, for example, the dynamically linked executables", "tokens": [50812, 1282, 18734, 11, 337, 1365, 11, 264, 43492, 9408, 7568, 2965, 50962], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 21, "seek": 8160, "start": 93.56, "end": 96.56, "text": " are launched by Program Interpreter LD,", "tokens": [50962, 366, 8730, 538, 8338, 5751, 3712, 391, 33936, 11, 51112], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 22, "seek": 8160, "start": 96.56, "end": 100.56, "text": " which memory maps the executable else along with other else files.", "tokens": [51112, 597, 4675, 11317, 264, 7568, 712, 1646, 2051, 365, 661, 1646, 7098, 13, 51312], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 23, "seek": 8160, "start": 100.56, "end": 105.56, "text": " It depends on, like, Lipsy SO, Lipthread SO, and so on.", "tokens": [51312, 467, 5946, 322, 11, 411, 11, 441, 2600, 88, 10621, 11, 27475, 392, 2538, 10621, 11, 293, 370, 322, 13, 51562], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 24, "seek": 8160, "start": 105.56, "end": 110.56, "text": " Then, resolves undefined symbols like puts or pthread create", "tokens": [51562, 1396, 11, 7923, 977, 674, 5666, 2001, 16944, 411, 8137, 420, 280, 392, 2538, 1884, 51812], "temperature": 0.0, "avg_logprob": -0.24263786175929078, "compression_ratio": 1.5172413793103448, "no_speech_prob": 0.011922450736165047}, {"id": 25, "seek": 11056, "start": 110.56, "end": 113.56, "text": " and finally involves the main function.", "tokens": [50364, 293, 2721, 11626, 264, 2135, 2445, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 26, "seek": 11056, "start": 113.56, "end": 117.56, "text": " On OSV, the built-in to kernel dynamic linker", "tokens": [50514, 1282, 12731, 53, 11, 264, 3094, 12, 259, 281, 28256, 8546, 2113, 260, 50714], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 27, "seek": 11056, "start": 117.56, "end": 122.56, "text": " plays the role of the Program Interpreter that performs similar steps as on Linux.", "tokens": [50714, 5749, 264, 3090, 295, 264, 8338, 5751, 3712, 391, 300, 26213, 2531, 4439, 382, 322, 18734, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 28, "seek": 11056, "start": 122.56, "end": 126.56, "text": " But instead of loading the aforementioned libraries,", "tokens": [50964, 583, 2602, 295, 15114, 264, 48927, 46842, 15148, 11, 51164], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 29, "seek": 11056, "start": 126.56, "end": 132.56, "text": " it resolves the undefined symbols by pointing them to OSV implementations of those.", "tokens": [51164, 309, 7923, 977, 264, 674, 5666, 2001, 16944, 538, 12166, 552, 281, 12731, 53, 4445, 763, 295, 729, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 30, "seek": 11056, "start": 132.56, "end": 136.56, "text": " The OSV linker supports both shared libraries", "tokens": [51464, 440, 12731, 53, 2113, 260, 9346, 1293, 5507, 15148, 51664], "temperature": 0.0, "avg_logprob": -0.10379022901708429, "compression_ratio": 1.5669642857142858, "no_speech_prob": 0.004547875374555588}, {"id": 31, "seek": 13656, "start": 136.56, "end": 142.56, "text": " and dynamically linked executables that are either position-dependent", "tokens": [50364, 293, 43492, 9408, 7568, 2965, 300, 366, 2139, 2535, 12, 36763, 317, 50664], "temperature": 0.0, "avg_logprob": -0.12017049508936264, "compression_ratio": 1.544041450777202, "no_speech_prob": 0.006427104584872723}, {"id": 32, "seek": 13656, "start": 142.56, "end": 144.56, "text": " or non-position-dependent.", "tokens": [50664, 420, 2107, 12, 38078, 12, 36763, 317, 13, 50764], "temperature": 0.0, "avg_logprob": -0.12017049508936264, "compression_ratio": 1.544041450777202, "no_speech_prob": 0.006427104584872723}, {"id": 33, "seek": 13656, "start": 144.56, "end": 152.56, "text": " The benefit is that programs interact with the OSV kernel", "tokens": [50764, 440, 5121, 307, 300, 4268, 4648, 365, 264, 12731, 53, 28256, 51164], "temperature": 0.0, "avg_logprob": -0.12017049508936264, "compression_ratio": 1.544041450777202, "no_speech_prob": 0.006427104584872723}, {"id": 34, "seek": 13656, "start": 152.56, "end": 157.56, "text": " using the fast local function calls without the overhead of Cisco instruction.", "tokens": [51164, 1228, 264, 2370, 2654, 2445, 5498, 1553, 264, 19922, 295, 38528, 10951, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12017049508936264, "compression_ratio": 1.544041450777202, "no_speech_prob": 0.006427104584872723}, {"id": 35, "seek": 13656, "start": 157.56, "end": 162.56, "text": " On the negative side, the Linux compatibility is a moving target", "tokens": [51414, 1282, 264, 3671, 1252, 11, 264, 18734, 34237, 307, 257, 2684, 3779, 51664], "temperature": 0.0, "avg_logprob": -0.12017049508936264, "compression_ratio": 1.544041450777202, "no_speech_prob": 0.006427104584872723}, {"id": 36, "seek": 16256, "start": 162.56, "end": 166.56, "text": " because Lipsy keeps adding new functions", "tokens": [50364, 570, 441, 2600, 88, 5965, 5127, 777, 6828, 50564], "temperature": 0.0, "avg_logprob": -0.13471210704130285, "compression_ratio": 1.46875, "no_speech_prob": 0.008598363026976585}, {"id": 37, "seek": 16256, "start": 166.56, "end": 172.56, "text": " and on the OSV side, we have to keep implementing them.", "tokens": [50564, 293, 322, 264, 12731, 53, 1252, 11, 321, 362, 281, 1066, 18114, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13471210704130285, "compression_ratio": 1.46875, "no_speech_prob": 0.008598363026976585}, {"id": 38, "seek": 16256, "start": 172.56, "end": 177.56, "text": " This slide here illustrates how dynamically linked programs", "tokens": [50864, 639, 4137, 510, 41718, 577, 43492, 9408, 4268, 51114], "temperature": 0.0, "avg_logprob": -0.13471210704130285, "compression_ratio": 1.46875, "no_speech_prob": 0.008598363026976585}, {"id": 39, "seek": 16256, "start": 177.56, "end": 180.56, "text": " would traditionally interact with OSV kernel.", "tokens": [51114, 576, 19067, 4648, 365, 12731, 53, 28256, 13, 51264], "temperature": 0.0, "avg_logprob": -0.13471210704130285, "compression_ratio": 1.46875, "no_speech_prob": 0.008598363026976585}, {"id": 40, "seek": 16256, "start": 180.56, "end": 186.56, "text": " The drawing shows an executable procedure linkage table, PLT, on the left side.", "tokens": [51264, 440, 6316, 3110, 364, 7568, 712, 10747, 49118, 3199, 11, 6999, 51, 11, 322, 264, 1411, 1252, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13471210704130285, "compression_ratio": 1.46875, "no_speech_prob": 0.008598363026976585}, {"id": 41, "seek": 18656, "start": 187.56, "end": 192.56, "text": " The dynamic linker and Lipsy implementation", "tokens": [50414, 440, 8546, 2113, 260, 293, 441, 2600, 88, 11420, 50664], "temperature": 0.0, "avg_logprob": -0.22208630836616128, "compression_ratio": 1.476510067114094, "no_speech_prob": 0.007663777098059654}, {"id": 42, "seek": 18656, "start": 192.56, "end": 196.56, "text": " that are part of OSV kernel on the right side.", "tokens": [50664, 300, 366, 644, 295, 12731, 53, 28256, 322, 264, 558, 1252, 13, 50864], "temperature": 0.0, "avg_logprob": -0.22208630836616128, "compression_ratio": 1.476510067114094, "no_speech_prob": 0.007663777098059654}, {"id": 43, "seek": 18656, "start": 199.56, "end": 208.56, "text": " In this example, after the dynamic linker memory maps the program into the memory,", "tokens": [51014, 682, 341, 1365, 11, 934, 264, 8546, 2113, 260, 4675, 11317, 264, 1461, 666, 264, 4675, 11, 51464], "temperature": 0.0, "avg_logprob": -0.22208630836616128, "compression_ratio": 1.476510067114094, "no_speech_prob": 0.007663777098059654}, {"id": 44, "seek": 18656, "start": 208.56, "end": 212.56, "text": " actually, more specifically, the self-segment,", "tokens": [51464, 767, 11, 544, 4682, 11, 264, 2698, 12, 405, 10433, 11, 51664], "temperature": 0.0, "avg_logprob": -0.22208630836616128, "compression_ratio": 1.476510067114094, "no_speech_prob": 0.007663777098059654}, {"id": 45, "seek": 21256, "start": 212.56, "end": 218.56, "text": " it then sets up the PLT to later resolve and replace the put function call", "tokens": [50364, 309, 550, 6352, 493, 264, 6999, 51, 281, 1780, 14151, 293, 7406, 264, 829, 2445, 818, 50664], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 46, "seek": 21256, "start": 218.56, "end": 222.56, "text": " placeholder with the address of its implementation in OSV kernel,", "tokens": [50664, 1081, 20480, 365, 264, 2985, 295, 1080, 11420, 294, 12731, 53, 28256, 11, 50864], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 47, "seek": 21256, "start": 222.56, "end": 226.56, "text": " which typically happens upon the very first call.", "tokens": [50864, 597, 5850, 2314, 3564, 264, 588, 700, 818, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 48, "seek": 21256, "start": 228.56, "end": 231.56, "text": " Now, the statically linked executables interact with Linux kernel", "tokens": [51164, 823, 11, 264, 2219, 984, 9408, 7568, 2965, 4648, 365, 18734, 28256, 51314], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 49, "seek": 21256, "start": 231.56, "end": 235.56, "text": " by directly making system calls and reading from pseudo file systems", "tokens": [51314, 538, 3838, 1455, 1185, 5498, 293, 3760, 490, 35899, 3991, 3652, 51514], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 50, "seek": 21256, "start": 235.56, "end": 237.56, "text": " like ProgFS and SysFS.", "tokens": [51514, 411, 1705, 70, 29318, 293, 318, 749, 29318, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1781891527630034, "compression_ratio": 1.5466666666666666, "no_speech_prob": 0.006483637262135744}, {"id": 51, "seek": 23756, "start": 237.56, "end": 242.56, "text": " Initially, OSV implemented a fairly small number of system calls", "tokens": [50364, 29446, 11, 12731, 53, 12270, 257, 6457, 1359, 1230, 295, 1185, 5498, 50614], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 52, "seek": 23756, "start": 242.56, "end": 247.56, "text": " around 70 to support running going programs that were interesting", "tokens": [50614, 926, 5285, 281, 1406, 2614, 516, 4268, 300, 645, 1880, 50864], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 53, "seek": 23756, "start": 247.56, "end": 252.56, "text": " because they would call Lipsy functions to create threads, for example,", "tokens": [50864, 570, 436, 576, 818, 441, 2600, 88, 6828, 281, 1884, 19314, 11, 337, 1365, 11, 51114], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 54, "seek": 23756, "start": 252.56, "end": 257.56, "text": " and execute system calls to do other things like, for example, Socket API.", "tokens": [51114, 293, 14483, 1185, 5498, 281, 360, 661, 721, 411, 11, 337, 1365, 11, 407, 4737, 9362, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 55, "seek": 23756, "start": 257.56, "end": 261.56, "text": " But this was not enough to support statically linked executables.", "tokens": [51364, 583, 341, 390, 406, 1547, 281, 1406, 2219, 984, 9408, 7568, 2965, 13, 51564], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 56, "seek": 23756, "start": 261.56, "end": 266.56, "text": " To make this possible, we had to implement some key new system calls", "tokens": [51564, 1407, 652, 341, 1944, 11, 321, 632, 281, 4445, 512, 2141, 777, 1185, 5498, 51814], "temperature": 0.0, "avg_logprob": -0.07828828912032278, "compression_ratio": 1.6349206349206349, "no_speech_prob": 0.001996069448068738}, {"id": 57, "seek": 26656, "start": 266.56, "end": 271.56, "text": " like BRK and clone and add substantial number of other ones", "tokens": [50364, 411, 10262, 42, 293, 26506, 293, 909, 16726, 1230, 295, 661, 2306, 50614], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 58, "seek": 26656, "start": 271.56, "end": 274.56, "text": " to bring the total to 137 at this point.", "tokens": [50614, 281, 1565, 264, 3217, 281, 3705, 22, 412, 341, 935, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 59, "seek": 26656, "start": 274.56, "end": 279.56, "text": " However, the most tricky part was adding support for the application", "tokens": [50764, 2908, 11, 264, 881, 12414, 644, 390, 5127, 1406, 337, 264, 3861, 51014], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 60, "seek": 26656, "start": 279.56, "end": 281.56, "text": " fed local storage so-called TLS.", "tokens": [51014, 4636, 2654, 6725, 370, 12, 11880, 314, 19198, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 61, "seek": 26656, "start": 281.56, "end": 285.56, "text": " The dynamic-linked programs that run on OSV, in a traditional way,", "tokens": [51114, 440, 8546, 12, 22473, 292, 4268, 300, 1190, 322, 12731, 53, 11, 294, 257, 5164, 636, 11, 51314], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 62, "seek": 26656, "start": 285.56, "end": 290.56, "text": " would share the thread local storage with kernel", "tokens": [51314, 576, 2073, 264, 7207, 2654, 6725, 365, 28256, 51564], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 63, "seek": 26656, "start": 290.56, "end": 295.56, "text": " and allow OSV to fully control setup of TLS.", "tokens": [51564, 293, 2089, 12731, 53, 281, 4498, 1969, 8657, 295, 314, 19198, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1341900383074259, "compression_ratio": 1.5062240663900415, "no_speech_prob": 0.0016949893906712532}, {"id": 64, "seek": 29556, "start": 295.56, "end": 298.56, "text": " The statically linked executables, on other hand,", "tokens": [50364, 440, 2219, 984, 9408, 7568, 2965, 11, 322, 661, 1011, 11, 50514], "temperature": 0.0, "avg_logprob": -0.17455116670523116, "compression_ratio": 1.3885714285714286, "no_speech_prob": 0.004016558174043894}, {"id": 65, "seek": 29556, "start": 298.56, "end": 304.56, "text": " want to allocate their own TLS and set the FS register on X64", "tokens": [50514, 528, 281, 35713, 641, 1065, 314, 19198, 293, 992, 264, 41138, 7280, 322, 1783, 19395, 50814], "temperature": 0.0, "avg_logprob": -0.17455116670523116, "compression_ratio": 1.3885714285714286, "no_speech_prob": 0.004016558174043894}, {"id": 66, "seek": 29556, "start": 304.56, "end": 312.56, "text": " or TPIDREO0 on ARM and to the thread control address for each thread.", "tokens": [50814, 420, 44462, 2777, 3850, 46, 15, 322, 45209, 293, 281, 264, 7207, 1969, 2985, 337, 1184, 7207, 13, 51214], "temperature": 0.0, "avg_logprob": -0.17455116670523116, "compression_ratio": 1.3885714285714286, "no_speech_prob": 0.004016558174043894}, {"id": 67, "seek": 29556, "start": 312.56, "end": 319.56, "text": " On X64, the solution was basically to utilize the GS register", "tokens": [51214, 1282, 1783, 19395, 11, 264, 3827, 390, 1936, 281, 16117, 264, 32047, 7280, 51564], "temperature": 0.0, "avg_logprob": -0.17455116670523116, "compression_ratio": 1.3885714285714286, "no_speech_prob": 0.004016558174043894}, {"id": 68, "seek": 31956, "start": 319.56, "end": 325.56, "text": " to point to the Persepio structure with a copy of that application,", "tokens": [50364, 281, 935, 281, 264, 3026, 405, 79, 1004, 3877, 365, 257, 5055, 295, 300, 3861, 11, 50664], "temperature": 0.0, "avg_logprob": -0.23641802135266757, "compression_ratio": 1.429951690821256, "no_speech_prob": 0.021376295015215874}, {"id": 69, "seek": 31956, "start": 325.56, "end": 329.56, "text": " TCP, and basically update it on every context switch.", "tokens": [50664, 48965, 11, 293, 1936, 5623, 309, 322, 633, 4319, 3679, 13, 50864], "temperature": 0.0, "avg_logprob": -0.23641802135266757, "compression_ratio": 1.429951690821256, "no_speech_prob": 0.021376295015215874}, {"id": 70, "seek": 31956, "start": 329.56, "end": 333.56, "text": " On AHR64, we did similar thing.", "tokens": [50864, 1282, 25888, 49, 19395, 11, 321, 630, 2531, 551, 13, 51064], "temperature": 0.0, "avg_logprob": -0.23641802135266757, "compression_ratio": 1.429951690821256, "no_speech_prob": 0.021376295015215874}, {"id": 71, "seek": 31956, "start": 333.56, "end": 339.56, "text": " Now, the point of this enhancement is that we basically improved", "tokens": [51064, 823, 11, 264, 935, 295, 341, 40776, 307, 300, 321, 1936, 9689, 51364], "temperature": 0.0, "avg_logprob": -0.23641802135266757, "compression_ratio": 1.429951690821256, "no_speech_prob": 0.021376295015215874}, {"id": 72, "seek": 31956, "start": 339.56, "end": 345.56, "text": " the Linux compatibility because now we don't have to worry about these cases,", "tokens": [51364, 264, 18734, 34237, 570, 586, 321, 500, 380, 362, 281, 3292, 466, 613, 3331, 11, 51664], "temperature": 0.0, "avg_logprob": -0.23641802135266757, "compression_ratio": 1.429951690821256, "no_speech_prob": 0.021376295015215874}, {"id": 73, "seek": 34556, "start": 345.56, "end": 350.56, "text": " where, for example, application tries to call functions in Lipsy", "tokens": [50364, 689, 11, 337, 1365, 11, 3861, 9898, 281, 818, 6828, 294, 441, 2600, 88, 50614], "temperature": 0.0, "avg_logprob": -0.16716520206348315, "compression_ratio": 1.4059405940594059, "no_speech_prob": 0.02739441581070423}, {"id": 74, "seek": 34556, "start": 350.56, "end": 352.56, "text": " that OSV doesn't implement.", "tokens": [50614, 300, 12731, 53, 1177, 380, 4445, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16716520206348315, "compression_ratio": 1.4059405940594059, "no_speech_prob": 0.02739441581070423}, {"id": 75, "seek": 34556, "start": 352.56, "end": 358.56, "text": " But the drawback, obviously, of the system calls interface", "tokens": [50714, 583, 264, 2642, 3207, 11, 2745, 11, 295, 264, 1185, 5498, 9226, 51014], "temperature": 0.0, "avg_logprob": -0.16716520206348315, "compression_ratio": 1.4059405940594059, "no_speech_prob": 0.02739441581070423}, {"id": 76, "seek": 34556, "start": 358.56, "end": 362.56, "text": " is that, obviously, we pay overhead of Cisco instruction every time,", "tokens": [51014, 307, 300, 11, 2745, 11, 321, 1689, 19922, 295, 38528, 10951, 633, 565, 11, 51214], "temperature": 0.0, "avg_logprob": -0.16716520206348315, "compression_ratio": 1.4059405940594059, "no_speech_prob": 0.02739441581070423}, {"id": 77, "seek": 34556, "start": 362.56, "end": 371.56, "text": " which on average I measured this around 110 nanoseconds on X64.", "tokens": [51214, 597, 322, 4274, 286, 12690, 341, 926, 20154, 14067, 541, 28750, 322, 1783, 19395, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16716520206348315, "compression_ratio": 1.4059405940594059, "no_speech_prob": 0.02739441581070423}, {"id": 78, "seek": 37156, "start": 371.56, "end": 375.56, "text": " This picture actually illustrates what happens behind the scenes.", "tokens": [50364, 639, 3036, 767, 41718, 437, 2314, 2261, 264, 8026, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 79, "seek": 37156, "start": 375.56, "end": 381.56, "text": " So on the right side, actually, OSV dynamic linker still plays some small role.", "tokens": [50564, 407, 322, 264, 558, 1252, 11, 767, 11, 12731, 53, 8546, 2113, 260, 920, 5749, 512, 1359, 3090, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 80, "seek": 37156, "start": 381.56, "end": 385.56, "text": " It still memory maps the segments of the elf.", "tokens": [50864, 467, 920, 4675, 11317, 264, 19904, 295, 264, 35565, 13, 51064], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 81, "seek": 37156, "start": 385.56, "end": 387.56, "text": " It reads the headers, obviously.", "tokens": [51064, 467, 15700, 264, 45101, 11, 2745, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 82, "seek": 37156, "start": 387.56, "end": 392.56, "text": " But then, really, it just jumps to the start of the elf.", "tokens": [51164, 583, 550, 11, 534, 11, 309, 445, 16704, 281, 264, 722, 295, 264, 35565, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 83, "seek": 37156, "start": 392.56, "end": 396.56, "text": " And from this point on, the interactions basically between the program", "tokens": [51414, 400, 490, 341, 935, 322, 11, 264, 13280, 1936, 1296, 264, 1461, 51614], "temperature": 0.0, "avg_logprob": -0.11607767521649942, "compression_ratio": 1.5784753363228698, "no_speech_prob": 0.013526949100196362}, {"id": 84, "seek": 39656, "start": 396.56, "end": 403.56, "text": " and the OSV happens simply through Cisco instruction.", "tokens": [50364, 293, 264, 12731, 53, 2314, 2935, 807, 38528, 10951, 13, 50714], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 85, "seek": 39656, "start": 403.56, "end": 408.56, "text": " The exciting side effect, actually, of enhancing OSV to support", "tokens": [50714, 440, 4670, 1252, 1802, 11, 767, 11, 295, 36579, 12731, 53, 281, 1406, 50964], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 86, "seek": 39656, "start": 408.56, "end": 412.56, "text": " Staticly Link executable is basically capability to run", "tokens": [50964, 745, 2399, 356, 8466, 7568, 712, 307, 1936, 13759, 281, 1190, 51164], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 87, "seek": 39656, "start": 412.56, "end": 417.56, "text": " dynamically linked executables via Linux dynamic linker", "tokens": [51164, 43492, 9408, 7568, 2965, 5766, 18734, 8546, 2113, 260, 51414], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 88, "seek": 39656, "start": 417.56, "end": 420.56, "text": " instead of basically the OSV built-in one.", "tokens": [51414, 2602, 295, 1936, 264, 12731, 53, 3094, 12, 259, 472, 13, 51564], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 89, "seek": 39656, "start": 420.56, "end": 424.56, "text": " The Linux dynamic linker, LD, is Staticly Linux,", "tokens": [51564, 440, 18734, 8546, 2113, 260, 11, 33936, 11, 307, 745, 2399, 356, 18734, 11, 51764], "temperature": 0.0, "avg_logprob": -0.18669609907196788, "compression_ratio": 1.646153846153846, "no_speech_prob": 0.015657993033528328}, {"id": 90, "seek": 42456, "start": 424.56, "end": 427.56, "text": " a tightly linked position independent shared object", "tokens": [50364, 257, 21952, 9408, 2535, 6695, 5507, 2657, 50514], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 91, "seek": 42456, "start": 427.56, "end": 431.56, "text": " that is loaded and processed by OSV kernel in an exact same way", "tokens": [50514, 300, 307, 13210, 293, 18846, 538, 12731, 53, 28256, 294, 364, 1900, 912, 636, 50714], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 92, "seek": 42456, "start": 431.56, "end": 434.56, "text": " as Static executable is.", "tokens": [50714, 382, 745, 2399, 7568, 712, 307, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 93, "seek": 42456, "start": 434.56, "end": 439.56, "text": " In Linux, the dynamic linker would be launched implicitly, right?", "tokens": [50864, 682, 18734, 11, 264, 8546, 2113, 260, 576, 312, 8730, 26947, 356, 11, 558, 30, 51114], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 94, "seek": 42456, "start": 439.56, "end": 444.56, "text": " And by simply introspecting the inter-program header.", "tokens": [51114, 400, 538, 2935, 560, 28713, 278, 264, 728, 12, 32726, 23117, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 95, "seek": 42456, "start": 444.56, "end": 450.56, "text": " In OSV, we have to launch the LD, the Linux LD executable explicitly", "tokens": [51364, 682, 12731, 53, 11, 321, 362, 281, 4025, 264, 33936, 11, 264, 18734, 33936, 7568, 712, 20803, 51664], "temperature": 0.0, "avg_logprob": -0.14123885576115097, "compression_ratio": 1.5161290322580645, "no_speech_prob": 0.014743433333933353}, {"id": 96, "seek": 45056, "start": 450.56, "end": 457.56, "text": " and pass its path along with the arguments as you can actually see in RO.", "tokens": [50364, 293, 1320, 1080, 3100, 2051, 365, 264, 12869, 382, 291, 393, 767, 536, 294, 9025, 13, 50714], "temperature": 0.0, "avg_logprob": -0.2021662215111961, "compression_ratio": 1.630057803468208, "no_speech_prob": 0.02764035388827324}, {"id": 97, "seek": 45056, "start": 463.56, "end": 467.56, "text": " And actually, as you can see in this script, runpy example.", "tokens": [51014, 400, 767, 11, 382, 291, 393, 536, 294, 341, 5755, 11, 1190, 8200, 1365, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2021662215111961, "compression_ratio": 1.630057803468208, "no_speech_prob": 0.02764035388827324}, {"id": 98, "seek": 45056, "start": 467.56, "end": 474.56, "text": " So we're passing actually the absolute path to the Linux dynamic linker", "tokens": [51214, 407, 321, 434, 8437, 767, 264, 8236, 3100, 281, 264, 18734, 8546, 2113, 260, 51564], "temperature": 0.0, "avg_logprob": -0.2021662215111961, "compression_ratio": 1.630057803468208, "no_speech_prob": 0.02764035388827324}, {"id": 99, "seek": 45056, "start": 474.56, "end": 479.56, "text": " and then we're actually adding all the path of executable and any arguments.", "tokens": [51564, 293, 550, 321, 434, 767, 5127, 439, 264, 3100, 295, 7568, 712, 293, 604, 12869, 13, 51814], "temperature": 0.0, "avg_logprob": -0.2021662215111961, "compression_ratio": 1.630057803468208, "no_speech_prob": 0.02764035388827324}, {"id": 100, "seek": 47956, "start": 480.56, "end": 485.56, "text": " So obviously, just like with Staticly Link executables,", "tokens": [50414, 407, 2745, 11, 445, 411, 365, 745, 2399, 356, 8466, 7568, 2965, 11, 50664], "temperature": 0.0, "avg_logprob": -0.18388981289333767, "compression_ratio": 1.555023923444976, "no_speech_prob": 0.004556248430162668}, {"id": 101, "seek": 47956, "start": 485.56, "end": 491.56, "text": " there is the same benefit that we are now much more compatible with Linux", "tokens": [50664, 456, 307, 264, 912, 5121, 300, 321, 366, 586, 709, 544, 18218, 365, 18734, 50964], "temperature": 0.0, "avg_logprob": -0.18388981289333767, "compression_ratio": 1.555023923444976, "no_speech_prob": 0.004556248430162668}, {"id": 102, "seek": 47956, "start": 491.56, "end": 497.56, "text": " because one can take any application that works on Linux with G-Lipsy", "tokens": [50964, 570, 472, 393, 747, 604, 3861, 300, 1985, 322, 18734, 365, 460, 12, 43, 2600, 88, 51264], "temperature": 0.0, "avg_logprob": -0.18388981289333767, "compression_ratio": 1.555023923444976, "no_speech_prob": 0.004556248430162668}, {"id": 103, "seek": 47956, "start": 497.56, "end": 502.56, "text": " and it should work on OSV just because when we build the image,", "tokens": [51264, 293, 309, 820, 589, 322, 12731, 53, 445, 570, 562, 321, 1322, 264, 3256, 11, 51514], "temperature": 0.0, "avg_logprob": -0.18388981289333767, "compression_ratio": 1.555023923444976, "no_speech_prob": 0.004556248430162668}, {"id": 104, "seek": 47956, "start": 502.56, "end": 506.56, "text": " OSV is going to run, it's going to actually load the G-Lipsy,", "tokens": [51514, 12731, 53, 307, 516, 281, 1190, 11, 309, 311, 516, 281, 767, 3677, 264, 460, 12, 43, 2600, 88, 11, 51714], "temperature": 0.0, "avg_logprob": -0.18388981289333767, "compression_ratio": 1.555023923444976, "no_speech_prob": 0.004556248430162668}, {"id": 105, "seek": 50656, "start": 506.56, "end": 512.56, "text": " and we can't use it as any other library that given application needs.", "tokens": [50364, 293, 321, 393, 380, 764, 309, 382, 604, 661, 6405, 300, 2212, 3861, 2203, 13, 50664], "temperature": 0.6, "avg_logprob": -0.466322124004364, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0038277525454759598}, {"id": 106, "seek": 50656, "start": 512.56, "end": 519.56, "text": " The drawback is the same because we are again paying 110 nanoseconds", "tokens": [50664, 440, 2642, 3207, 307, 264, 912, 570, 321, 366, 797, 6229, 20154, 14067, 541, 28750, 51014], "temperature": 0.6, "avg_logprob": -0.466322124004364, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0038277525454759598}, {"id": 107, "seek": 50656, "start": 519.56, "end": 523.56, "text": " for every Cisco instruction.", "tokens": [51014, 337, 633, 38528, 10951, 13, 51214], "temperature": 0.6, "avg_logprob": -0.466322124004364, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0038277525454759598}, {"id": 108, "seek": 50656, "start": 523.56, "end": 527.56, "text": " And this slide again tries to illustrate the interactions", "tokens": [51214, 400, 341, 4137, 797, 9898, 281, 23221, 264, 13280, 51414], "temperature": 0.6, "avg_logprob": -0.466322124004364, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0038277525454759598}, {"id": 109, "seek": 50656, "start": 527.56, "end": 531.56, "text": " between the OSV and the application.", "tokens": [51414, 1296, 264, 12731, 53, 293, 264, 3861, 13, 51614], "temperature": 0.6, "avg_logprob": -0.466322124004364, "compression_ratio": 1.4371584699453552, "no_speech_prob": 0.0038277525454759598}, {"id": 110, "seek": 53156, "start": 531.56, "end": 533.9399999999999, "text": " It's, as you can see on the right,", "tokens": [50364, 467, 311, 11, 382, 291, 393, 536, 322, 264, 558, 11, 50483], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 111, "seek": 53156, "start": 533.9399999999999, "end": 535.02, "text": " you have the OSV kernel.", "tokens": [50483, 291, 362, 264, 12731, 53, 28256, 13, 50537], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 112, "seek": 53156, "start": 535.02, "end": 536.26, "text": " On the left, the application,", "tokens": [50537, 1282, 264, 1411, 11, 264, 3861, 11, 50599], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 113, "seek": 53156, "start": 536.26, "end": 539.06, "text": " the news dynamic linker,", "tokens": [50599, 264, 2583, 8546, 2113, 260, 11, 50739], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 114, "seek": 53156, "start": 539.06, "end": 543.66, "text": " that is executed just like with static executables.", "tokens": [50739, 300, 307, 17577, 445, 411, 365, 13437, 7568, 2965, 13, 50969], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 115, "seek": 53156, "start": 544.8199999999999, "end": 547.3, "text": " And then it loads the application", "tokens": [51027, 400, 550, 309, 12668, 264, 3861, 51151], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 116, "seek": 53156, "start": 547.3, "end": 551.9, "text": " LLF into memory by using M-MAP system call.", "tokens": [51151, 441, 43, 37, 666, 4675, 538, 1228, 376, 12, 44, 4715, 1185, 818, 13, 51381], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 117, "seek": 53156, "start": 551.9, "end": 555.9, "text": " And then also executes the application itself,", "tokens": [51381, 400, 550, 611, 4454, 1819, 264, 3861, 2564, 11, 51581], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 118, "seek": 53156, "start": 555.9, "end": 556.9, "text": " loads any libraries.", "tokens": [51581, 12668, 604, 15148, 13, 51631], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 119, "seek": 53156, "start": 556.9, "end": 558.18, "text": " And from this point on,", "tokens": [51631, 400, 490, 341, 935, 322, 11, 51695], "temperature": 0.0, "avg_logprob": -0.3580294964360256, "compression_ratio": 1.6076555023923444, "no_speech_prob": 0.04850011318922043}, {"id": 120, "seek": 55818, "start": 558.18, "end": 561.9, "text": " all the interactions happen with Cisco instructions.", "tokens": [50364, 439, 264, 13280, 1051, 365, 38528, 9415, 13, 50550], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 121, "seek": 55818, "start": 568.04, "end": 570.5, "text": " Now to help analyze and troubleshoot", "tokens": [50857, 823, 281, 854, 12477, 293, 15379, 24467, 50980], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 122, "seek": 55818, "start": 570.5, "end": 572.2199999999999, "text": " static link executables,", "tokens": [50980, 13437, 2113, 7568, 2965, 11, 51066], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 123, "seek": 55818, "start": 573.38, "end": 577.1999999999999, "text": " or dynamic link launch basically in this new way,", "tokens": [51124, 420, 8546, 2113, 4025, 1936, 294, 341, 777, 636, 11, 51315], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 124, "seek": 55818, "start": 577.1999999999999, "end": 579.2199999999999, "text": " we have added a new diagnostic tool", "tokens": [51315, 321, 362, 3869, 257, 777, 27897, 2290, 51416], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 125, "seek": 55818, "start": 580.42, "end": 582.02, "text": " that called S-Trace,", "tokens": [51476, 300, 1219, 318, 12, 14252, 617, 11, 51556], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 126, "seek": 55818, "start": 582.02, "end": 586.26, "text": " which is obviously similar to what one can do on Linux.", "tokens": [51556, 597, 307, 2745, 2531, 281, 437, 472, 393, 360, 322, 18734, 13, 51768], "temperature": 0.0, "avg_logprob": -0.31991320186191136, "compression_ratio": 1.4578947368421054, "no_speech_prob": 0.008872873149812222}, {"id": 127, "seek": 58626, "start": 586.26, "end": 589.62, "text": " In essence, one can specify all interesting trace points", "tokens": [50364, 682, 12801, 11, 472, 393, 16500, 439, 1880, 13508, 2793, 50532], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 128, "seek": 58626, "start": 589.62, "end": 591.9, "text": " using a regular expressions.", "tokens": [50532, 1228, 257, 3890, 15277, 13, 50646], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 129, "seek": 58626, "start": 591.9, "end": 595.38, "text": " In this example, to monitor system calls,", "tokens": [50646, 682, 341, 1365, 11, 281, 6002, 1185, 5498, 11, 50820], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 130, "seek": 58626, "start": 595.38, "end": 597.62, "text": " you just add a Cisco star,", "tokens": [50820, 291, 445, 909, 257, 38528, 3543, 11, 50932], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 131, "seek": 58626, "start": 597.62, "end": 600.66, "text": " and you enable S-Trace system thread", "tokens": [50932, 293, 291, 9528, 318, 12, 14252, 617, 1185, 7207, 51084], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 132, "seek": 58626, "start": 600.66, "end": 604.42, "text": " that basically would print all the trace point calls", "tokens": [51084, 300, 1936, 576, 4482, 439, 264, 13508, 935, 5498, 51272], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 133, "seek": 58626, "start": 604.42, "end": 605.78, "text": " to the standard output.", "tokens": [51272, 281, 264, 3832, 5598, 13, 51340], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 134, "seek": 58626, "start": 605.78, "end": 607.9399999999999, "text": " And as the application basically gets hit,", "tokens": [51340, 400, 382, 264, 3861, 1936, 2170, 2045, 11, 51448], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 135, "seek": 58626, "start": 607.9399999999999, "end": 609.1, "text": " while program runs.", "tokens": [51448, 1339, 1461, 6676, 13, 51506], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 136, "seek": 58626, "start": 610.3, "end": 612.38, "text": " How many minutes do I have left?", "tokens": [51566, 1012, 867, 2077, 360, 286, 362, 1411, 30, 51670], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 137, "seek": 58626, "start": 612.38, "end": 613.5, "text": " Seven minutes.", "tokens": [51670, 14868, 2077, 13, 51726], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 138, "seek": 58626, "start": 613.5, "end": 615.9, "text": " So to recap what I have talked about", "tokens": [51726, 407, 281, 20928, 437, 286, 362, 2825, 466, 51846], "temperature": 0.0, "avg_logprob": -0.17839770274119335, "compression_ratio": 1.6124031007751938, "no_speech_prob": 0.00499379076063633}, {"id": 139, "seek": 61590, "start": 615.9, "end": 617.66, "text": " in previous six slides,", "tokens": [50364, 294, 3894, 2309, 9788, 11, 50452], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 140, "seek": 61590, "start": 617.66, "end": 619.98, "text": " in the first two I described the traditional way", "tokens": [50452, 294, 264, 700, 732, 286, 7619, 264, 5164, 636, 50568], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 141, "seek": 61590, "start": 619.98, "end": 623.14, "text": " of running dynamic link programs on SV,", "tokens": [50568, 295, 2614, 8546, 2113, 4268, 322, 31910, 11, 50726], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 142, "seek": 61590, "start": 623.14, "end": 626.3, "text": " which benefit from fast local function calls,", "tokens": [50726, 597, 5121, 490, 2370, 2654, 2445, 5498, 11, 50884], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 143, "seek": 61590, "start": 627.18, "end": 629.98, "text": " but may suffer from compatibility issues.", "tokens": [50928, 457, 815, 9753, 490, 34237, 2663, 13, 51068], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 144, "seek": 61590, "start": 629.98, "end": 631.1, "text": " In the next two slides,", "tokens": [51068, 682, 264, 958, 732, 9788, 11, 51124], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 145, "seek": 61590, "start": 631.1, "end": 632.66, "text": " I explained the new enhancements", "tokens": [51124, 286, 8825, 264, 777, 11985, 1117, 51202], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 146, "seek": 61590, "start": 632.66, "end": 635.18, "text": " to allow running static link executables.", "tokens": [51202, 281, 2089, 2614, 13437, 2113, 7568, 2965, 13, 51328], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 147, "seek": 61590, "start": 635.18, "end": 637.42, "text": " And finally in the last two slides,", "tokens": [51328, 400, 2721, 294, 264, 1036, 732, 9788, 11, 51440], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 148, "seek": 61590, "start": 637.42, "end": 639.86, "text": " I covered a new alternative way", "tokens": [51440, 286, 5343, 257, 777, 8535, 636, 51562], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 149, "seek": 61590, "start": 639.86, "end": 641.74, "text": " of running dynamic link programs", "tokens": [51562, 295, 2614, 8546, 2113, 4268, 51656], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 150, "seek": 61590, "start": 641.74, "end": 644.9, "text": " launched by Linux dynamic linker on SV,", "tokens": [51656, 8730, 538, 18734, 8546, 2113, 260, 322, 31910, 11, 51814], "temperature": 0.0, "avg_logprob": -0.17310166573739266, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.0026094296481460333}, {"id": 151, "seek": 64490, "start": 644.9, "end": 648.34, "text": " which again may suffer from a tiny overhead", "tokens": [50364, 597, 797, 815, 9753, 490, 257, 5870, 19922, 50536], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 152, "seek": 64490, "start": 648.34, "end": 649.66, "text": " of handling system calls,", "tokens": [50536, 295, 13175, 1185, 5498, 11, 50602], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 153, "seek": 64490, "start": 649.66, "end": 654.26, "text": " but benefit from much better compatibility with Linux.", "tokens": [50602, 457, 5121, 490, 709, 1101, 34237, 365, 18734, 13, 50832], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 154, "seek": 64490, "start": 654.26, "end": 656.74, "text": " In essence, these new enhancements", "tokens": [50832, 682, 12801, 11, 613, 777, 11985, 1117, 50956], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 155, "seek": 64490, "start": 656.74, "end": 658.54, "text": " greatly improve the OSV application", "tokens": [50956, 14147, 3470, 264, 12731, 53, 3861, 51046], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 156, "seek": 64490, "start": 658.54, "end": 661.88, "text": " and should make possible to run more programs on it.", "tokens": [51046, 293, 820, 652, 1944, 281, 1190, 544, 4268, 322, 309, 13, 51213], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 157, "seek": 64490, "start": 664.9, "end": 666.98, "text": " In addition to what I have talked so far,", "tokens": [51364, 682, 4500, 281, 437, 286, 362, 2825, 370, 1400, 11, 51468], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 158, "seek": 64490, "start": 666.98, "end": 668.86, "text": " we have also implemented a better version", "tokens": [51468, 321, 362, 611, 12270, 257, 1101, 3037, 51562], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 159, "seek": 64490, "start": 668.86, "end": 671.6999999999999, "text": " of the AWS elastic network adapter.", "tokens": [51562, 295, 264, 17650, 17115, 3209, 22860, 13, 51704], "temperature": 0.0, "avg_logprob": -0.14001532660590277, "compression_ratio": 1.5081967213114753, "no_speech_prob": 0.0017159978160634637}, {"id": 160, "seek": 67170, "start": 671.7, "end": 675.1800000000001, "text": " In essence, we basically took the 3DSD implementation", "tokens": [50364, 682, 12801, 11, 321, 1936, 1890, 264, 805, 11844, 35, 11420, 50538], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 161, "seek": 67170, "start": 675.1800000000001, "end": 678.22, "text": " by AWS and made it work on OSV,", "tokens": [50538, 538, 17650, 293, 1027, 309, 589, 322, 12731, 53, 11, 50690], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 162, "seek": 67170, "start": 678.22, "end": 679.94, "text": " and we tried to minimize all that.", "tokens": [50690, 293, 321, 3031, 281, 17522, 439, 300, 13, 50776], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 163, "seek": 67170, "start": 679.94, "end": 683.1400000000001, "text": " So basically, minimize the changes", "tokens": [50776, 407, 1936, 11, 17522, 264, 2962, 50936], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 164, "seek": 67170, "start": 683.1400000000001, "end": 685.94, "text": " so that we can backport any possible future,", "tokens": [50936, 370, 300, 321, 393, 646, 2707, 604, 1944, 2027, 11, 51076], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 165, "seek": 67170, "start": 685.94, "end": 687.46, "text": " for example, fixes.", "tokens": [51076, 337, 1365, 11, 32539, 13, 51152], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 166, "seek": 67170, "start": 687.46, "end": 689.1400000000001, "text": " And disable a lot of stuff", "tokens": [51152, 400, 28362, 257, 688, 295, 1507, 51236], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 167, "seek": 67170, "start": 689.1400000000001, "end": 692.0200000000001, "text": " that simply does not apply to OSV.", "tokens": [51236, 300, 2935, 775, 406, 3079, 281, 12731, 53, 13, 51380], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 168, "seek": 67170, "start": 692.0200000000001, "end": 695.82, "text": " The resulting driver costs us around 7,000 lines of,", "tokens": [51380, 440, 16505, 6787, 5497, 505, 926, 1614, 11, 1360, 3876, 295, 11, 51570], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 169, "seek": 67170, "start": 695.82, "end": 699.1800000000001, "text": " sorry, yeah, 7,000 lines of mostly C code,", "tokens": [51570, 2597, 11, 1338, 11, 1614, 11, 1360, 3876, 295, 5240, 383, 3089, 11, 51738], "temperature": 0.0, "avg_logprob": -0.2070434604372297, "compression_ratio": 1.5303643724696356, "no_speech_prob": 0.003281660145148635}, {"id": 170, "seek": 69918, "start": 699.18, "end": 702.9399999999999, "text": " and 56 kilobytes of larger kernel size.", "tokens": [50364, 293, 19687, 5128, 996, 43673, 295, 4833, 28256, 2744, 13, 50552], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 171, "seek": 69918, "start": 702.9399999999999, "end": 704.7399999999999, "text": " The challenge obviously was testing that", "tokens": [50552, 440, 3430, 2745, 390, 4997, 300, 50642], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 172, "seek": 69918, "start": 704.7399999999999, "end": 706.8599999999999, "text": " because it can only be done", "tokens": [50642, 570, 309, 393, 787, 312, 1096, 50748], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 173, "seek": 69918, "start": 706.8599999999999, "end": 710.18, "text": " on the running Nitro instance in AWS.", "tokens": [50748, 322, 264, 2614, 37942, 340, 5197, 294, 17650, 13, 50914], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 174, "seek": 69918, "start": 711.3399999999999, "end": 714.18, "text": " And so far, the driver seems to be pretty stable.", "tokens": [50972, 400, 370, 1400, 11, 264, 6787, 2544, 281, 312, 1238, 8351, 13, 51114], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 175, "seek": 69918, "start": 714.18, "end": 717.62, "text": " I've tested using, and seems to yield decent performance.", "tokens": [51114, 286, 600, 8246, 1228, 11, 293, 2544, 281, 11257, 8681, 3389, 13, 51286], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 176, "seek": 69918, "start": 717.62, "end": 720.54, "text": " I've tested that using IPerf3, NetPerf,", "tokens": [51286, 286, 600, 8246, 300, 1228, 8671, 260, 69, 18, 11, 6188, 47, 260, 69, 11, 51432], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 177, "seek": 69918, "start": 720.54, "end": 723.78, "text": " and some simple HTTP server app application.", "tokens": [51432, 293, 512, 2199, 33283, 7154, 724, 3861, 13, 51594], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 178, "seek": 69918, "start": 725.02, "end": 726.6999999999999, "text": " As you may have guessed, actually,", "tokens": [51656, 1018, 291, 815, 362, 21852, 11, 767, 11, 51740], "temperature": 0.0, "avg_logprob": -0.24738345955902674, "compression_ratio": 1.5080645161290323, "no_speech_prob": 0.0024505900219082832}, {"id": 179, "seek": 72670, "start": 726.7, "end": 731.38, "text": " the ENA driver implementation is enough to run OSV", "tokens": [50364, 264, 462, 5321, 6787, 11420, 307, 1547, 281, 1190, 12731, 53, 50598], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 180, "seek": 72670, "start": 731.38, "end": 735.4200000000001, "text": " on with RAMFS on Nitro EC2 instance.", "tokens": [50598, 322, 365, 14561, 29318, 322, 37942, 340, 19081, 17, 5197, 13, 50800], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 181, "seek": 72670, "start": 735.4200000000001, "end": 737.7800000000001, "text": " And so there's actually a script that I wrote", "tokens": [50800, 400, 370, 456, 311, 767, 257, 5755, 300, 286, 4114, 50918], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 182, "seek": 72670, "start": 737.7800000000001, "end": 742.6600000000001, "text": " to simplify the upload of the OSV image,", "tokens": [50918, 281, 20460, 264, 6580, 295, 264, 12731, 53, 3256, 11, 51162], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 183, "seek": 72670, "start": 742.6600000000001, "end": 746.0600000000001, "text": " creating a snapshot and basically creating AMI.", "tokens": [51162, 4084, 257, 30163, 293, 1936, 4084, 6475, 40, 13, 51332], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 184, "seek": 72670, "start": 746.0600000000001, "end": 750.38, "text": " And one thing, obviously, to run OSV on a Nitro instance", "tokens": [51332, 400, 472, 551, 11, 2745, 11, 281, 1190, 12731, 53, 322, 257, 37942, 340, 5197, 51548], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 185, "seek": 72670, "start": 750.38, "end": 753.74, "text": " with non-volatile file system like ZFS,", "tokens": [51548, 365, 2107, 12, 9646, 17445, 3991, 1185, 411, 1176, 29318, 11, 51716], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 186, "seek": 72670, "start": 753.74, "end": 756.26, "text": " or hopefully EXT in the future,", "tokens": [51716, 420, 4696, 16385, 51, 294, 264, 2027, 11, 51842], "temperature": 0.0, "avg_logprob": -0.20592252490589918, "compression_ratio": 1.481012658227848, "no_speech_prob": 0.0019621592946350574}, {"id": 187, "seek": 75626, "start": 756.26, "end": 759.14, "text": " we need to have NVME driver implementation,", "tokens": [50364, 321, 643, 281, 362, 46512, 15454, 6787, 11420, 11, 50508], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 188, "seek": 75626, "start": 759.14, "end": 761.86, "text": " which is actually two pull requests", "tokens": [50508, 597, 307, 767, 732, 2235, 12475, 50644], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 189, "seek": 75626, "start": 761.86, "end": 763.18, "text": " from community at this point,", "tokens": [50644, 490, 1768, 412, 341, 935, 11, 50710], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 190, "seek": 75626, "start": 763.18, "end": 765.5, "text": " but they haven't been merged yet.", "tokens": [50710, 457, 436, 2378, 380, 668, 36427, 1939, 13, 50826], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 191, "seek": 75626, "start": 765.5, "end": 766.54, "text": " They need some love.", "tokens": [50826, 814, 643, 512, 959, 13, 50878], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 192, "seek": 75626, "start": 767.98, "end": 770.06, "text": " In my previous presentation at FOSDM,", "tokens": [50950, 682, 452, 3894, 5860, 412, 479, 4367, 35, 44, 11, 51054], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 193, "seek": 75626, "start": 770.06, "end": 773.3, "text": " I talked about kernel modularization and driver profiles.", "tokens": [51054, 286, 2825, 466, 28256, 31111, 2144, 293, 6787, 23693, 13, 51216], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 194, "seek": 75626, "start": 773.3, "end": 777.38, "text": " This year on it briefly describe a new feature", "tokens": [51216, 639, 1064, 322, 309, 10515, 6786, 257, 777, 4111, 51420], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 195, "seek": 75626, "start": 777.38, "end": 780.78, "text": " that takes modularization to the next level,", "tokens": [51420, 300, 2516, 31111, 2144, 281, 264, 958, 1496, 11, 51590], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 196, "seek": 75626, "start": 780.78, "end": 784.3, "text": " and which has been greatly inspired by Unicraft.", "tokens": [51590, 293, 597, 575, 668, 14147, 7547, 538, 1156, 299, 4469, 13, 51766], "temperature": 0.0, "avg_logprob": -0.20749815078008743, "compression_ratio": 1.5423076923076924, "no_speech_prob": 0.0028115888126194477}, {"id": 197, "seek": 78430, "start": 785.3, "end": 787.74, "text": " In essence, the goal is to use the Linux", "tokens": [50414, 682, 12801, 11, 264, 3387, 307, 281, 764, 264, 18734, 50536], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 198, "seek": 78430, "start": 787.74, "end": 790.62, "text": " kernel build configuration tool, Xconfig,", "tokens": [50536, 28256, 1322, 11694, 2290, 11, 1783, 1671, 20646, 11, 50680], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 199, "seek": 78430, "start": 790.62, "end": 792.6999999999999, "text": " to let the user select OSV components", "tokens": [50680, 281, 718, 264, 4195, 3048, 12731, 53, 6677, 50784], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 200, "seek": 78430, "start": 792.6999999999999, "end": 795.06, "text": " to be included or excluded,", "tokens": [50784, 281, 312, 5556, 420, 29486, 11, 50902], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 201, "seek": 78430, "start": 795.06, "end": 797.4599999999999, "text": " and various parameters to configure it.", "tokens": [50902, 293, 3683, 9834, 281, 22162, 309, 13, 51022], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 202, "seek": 78430, "start": 797.4599999999999, "end": 799.18, "text": " The make file would then simply act", "tokens": [51022, 440, 652, 3991, 576, 550, 2935, 605, 51108], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 203, "seek": 78430, "start": 799.18, "end": 800.78, "text": " on a generated config file,", "tokens": [51108, 322, 257, 10833, 6662, 3991, 11, 51188], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 204, "seek": 78430, "start": 800.78, "end": 802.3399999999999, "text": " exclude relevant object files,", "tokens": [51188, 33536, 7340, 2657, 7098, 11, 51266], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 205, "seek": 78430, "start": 802.3399999999999, "end": 806.8599999999999, "text": " and pass any configuration parameters to the source files.", "tokens": [51266, 293, 1320, 604, 11694, 9834, 281, 264, 4009, 7098, 13, 51492], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 206, "seek": 78430, "start": 806.8599999999999, "end": 811.26, "text": " And this is obviously very much work in progress.", "tokens": [51492, 400, 341, 307, 2745, 588, 709, 589, 294, 4205, 13, 51712], "temperature": 0.0, "avg_logprob": -0.22304897308349608, "compression_ratio": 1.6401673640167365, "no_speech_prob": 0.0009692575549706817}, {"id": 207, "seek": 81126, "start": 811.66, "end": 815.98, "text": " And obviously, unlike Unicraft,", "tokens": [50384, 400, 2745, 11, 8343, 1156, 299, 4469, 11, 50600], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 208, "seek": 81126, "start": 815.98, "end": 819.98, "text": " where all the elements are effectively Lego blocks,", "tokens": [50600, 689, 439, 264, 4959, 366, 8659, 28761, 8474, 11, 50800], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 209, "seek": 81126, "start": 819.98, "end": 822.86, "text": " with OSV we pretty much have to do the opposite.", "tokens": [50800, 365, 12731, 53, 321, 1238, 709, 362, 281, 360, 264, 6182, 13, 50944], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 210, "seek": 81126, "start": 822.86, "end": 826.22, "text": " We have to put sprinkle basically the source code", "tokens": [50944, 492, 362, 281, 829, 24745, 1936, 264, 4009, 3089, 51112], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 211, "seek": 81126, "start": 826.22, "end": 829.42, "text": " with all these if-deaths.", "tokens": [51112, 365, 439, 613, 498, 12, 50000, 82, 13, 51272], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 212, "seek": 81126, "start": 829.42, "end": 834.1, "text": " And this is just example of what kind of modules", "tokens": [51272, 400, 341, 307, 445, 1365, 295, 437, 733, 295, 16679, 51506], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 213, "seek": 81126, "start": 834.1, "end": 837.18, "text": " or parameters can be modified.", "tokens": [51506, 420, 9834, 393, 312, 15873, 13, 51660], "temperature": 0.0, "avg_logprob": -0.2742077265030298, "compression_ratio": 1.4328358208955223, "no_speech_prob": 0.005397213622927666}, {"id": 214, "seek": 83718, "start": 838.18, "end": 841.3, "text": " And basically as an example of what can be accomplished", "tokens": [50414, 400, 1936, 382, 364, 1365, 295, 437, 393, 312, 15419, 50570], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 215, "seek": 83718, "start": 841.3, "end": 845.18, "text": " with that new feature is that by hiding basically", "tokens": [50570, 365, 300, 777, 4111, 307, 300, 538, 10596, 1936, 50764], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 216, "seek": 83718, "start": 845.18, "end": 848.14, "text": " all the symbols, but those used by application,", "tokens": [50764, 439, 264, 16944, 11, 457, 729, 1143, 538, 3861, 11, 50912], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 217, "seek": 83718, "start": 848.14, "end": 850.5, "text": " excluding all necessary components,", "tokens": [50912, 49999, 439, 4818, 6677, 11, 51030], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 218, "seek": 83718, "start": 850.5, "end": 853.6999999999999, "text": " and changing values of various configurable parameters", "tokens": [51030, 293, 4473, 4190, 295, 3683, 22192, 712, 9834, 51190], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 219, "seek": 83718, "start": 853.6999999999999, "end": 855.9, "text": " as listed on the slide,", "tokens": [51190, 382, 10052, 322, 264, 4137, 11, 51300], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 220, "seek": 83718, "start": 855.9, "end": 860.9, "text": " one can build a kernel image of 788 kilobytes in size,", "tokens": [51300, 472, 393, 1322, 257, 28256, 3256, 295, 1614, 16919, 5128, 996, 43673, 294, 2744, 11, 51550], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 221, "seek": 83718, "start": 861.0999999999999, "end": 864.62, "text": " and running a low-world app using 1.2 megabytes of memory.", "tokens": [51560, 293, 2614, 257, 2295, 12, 13217, 724, 1228, 502, 13, 17, 10816, 24538, 295, 4675, 13, 51736], "temperature": 0.0, "avg_logprob": -0.27393240781174494, "compression_ratio": 1.578512396694215, "no_speech_prob": 0.0024395512882620096}, {"id": 222, "seek": 86462, "start": 865.0600000000001, "end": 868.94, "text": " So it is, when I started optimizing", "tokens": [50386, 407, 309, 307, 11, 562, 286, 1409, 40425, 50580], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 223, "seek": 86462, "start": 868.94, "end": 870.98, "text": " OSV kernel like five years ago,", "tokens": [50580, 12731, 53, 28256, 411, 1732, 924, 2057, 11, 50682], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 224, "seek": 86462, "start": 870.98, "end": 874.3, "text": " it was like, the kernel itself was like 10 megabytes at least,", "tokens": [50682, 309, 390, 411, 11, 264, 28256, 2564, 390, 411, 1266, 10816, 24538, 412, 1935, 11, 50848], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 225, "seek": 86462, "start": 874.3, "end": 877.34, "text": " and it required a minimum of 30 megabytes of memory.", "tokens": [50848, 293, 309, 4739, 257, 7285, 295, 2217, 10816, 24538, 295, 4675, 13, 51000], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 226, "seek": 86462, "start": 877.34, "end": 881.78, "text": " So it is almost 10-fold improvement.", "tokens": [51000, 407, 309, 307, 1920, 1266, 12, 18353, 10444, 13, 51222], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 227, "seek": 86462, "start": 881.78, "end": 884.34, "text": " Well, I'm sure not as close as Unicraft,", "tokens": [51222, 1042, 11, 286, 478, 988, 406, 382, 1998, 382, 1156, 299, 4469, 11, 51350], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 228, "seek": 86462, "start": 884.34, "end": 888.94, "text": " but we are, maybe we can squeeze to be at half megabyte.", "tokens": [51350, 457, 321, 366, 11, 1310, 321, 393, 13578, 281, 312, 412, 1922, 10816, 34529, 13, 51580], "temperature": 0.0, "avg_logprob": -0.1699853539466858, "compression_ratio": 1.4929577464788732, "no_speech_prob": 0.004780997056514025}, {"id": 229, "seek": 88894, "start": 889.58, "end": 894.58, "text": " So we are, as I am moving toward the end of my presentation,", "tokens": [50396, 407, 321, 366, 11, 382, 286, 669, 2684, 7361, 264, 917, 295, 452, 5860, 11, 50646], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 230, "seek": 88894, "start": 896.1, "end": 898.4200000000001, "text": " I just wanted to mention that we are also planning", "tokens": [50722, 286, 445, 1415, 281, 2152, 300, 321, 366, 611, 5038, 50838], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 231, "seek": 88894, "start": 898.4200000000001, "end": 901.5, "text": " to cut a new release of OSV10,", "tokens": [50838, 281, 1723, 257, 777, 4374, 295, 12731, 53, 3279, 11, 50992], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 232, "seek": 88894, "start": 901.5, "end": 902.7800000000001, "text": " which should include all the features", "tokens": [50992, 597, 820, 4090, 439, 264, 4122, 51056], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 233, "seek": 88894, "start": 902.7800000000001, "end": 904.1, "text": " that I've talked about.", "tokens": [51056, 300, 286, 600, 2825, 466, 13, 51122], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 234, "seek": 88894, "start": 904.1, "end": 906.6600000000001, "text": " And I hope that we're gonna be able to implement", "tokens": [51122, 400, 286, 1454, 300, 321, 434, 799, 312, 1075, 281, 4445, 51250], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 235, "seek": 88894, "start": 906.6600000000001, "end": 911.4200000000001, "text": " the EXT file system, merge the IPv6 implementation branch,", "tokens": [51250, 264, 16385, 51, 3991, 1185, 11, 22183, 264, 8671, 85, 21, 11420, 9819, 11, 51488], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 236, "seek": 88894, "start": 911.4200000000001, "end": 914.34, "text": " and potentially implement NVMe driver.", "tokens": [51488, 293, 7263, 4445, 46512, 12671, 6787, 13, 51634], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 237, "seek": 88894, "start": 914.34, "end": 917.5, "text": " I'm especially excited about the EXT file system support", "tokens": [51634, 286, 478, 2318, 2919, 466, 264, 16385, 51, 3991, 1185, 1406, 51792], "temperature": 0.0, "avg_logprob": -0.18288118189031427, "compression_ratio": 1.6, "no_speech_prob": 0.0034824612084776163}, {"id": 238, "seek": 91750, "start": 917.5, "end": 919.98, "text": " because I think it will make it easier", "tokens": [50364, 570, 286, 519, 309, 486, 652, 309, 3571, 50488], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 239, "seek": 91750, "start": 919.98, "end": 921.78, "text": " to build damages on Linux,", "tokens": [50488, 281, 1322, 28536, 322, 18734, 11, 50578], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 240, "seek": 91750, "start": 921.78, "end": 924.94, "text": " and then introspect, for example,", "tokens": [50578, 293, 550, 560, 28713, 11, 337, 1365, 11, 50736], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 241, "seek": 91750, "start": 924.94, "end": 927.46, "text": " if something happens afterwards.", "tokens": [50736, 498, 746, 2314, 10543, 13, 50862], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 242, "seek": 91750, "start": 927.46, "end": 929.62, "text": " So beyond the upcoming release,", "tokens": [50862, 407, 4399, 264, 11500, 4374, 11, 50970], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 243, "seek": 91750, "start": 929.62, "end": 931.34, "text": " we're planning to revamp Capstan.", "tokens": [50970, 321, 434, 5038, 281, 3698, 1215, 8363, 18758, 13, 51056], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 244, "seek": 91750, "start": 931.34, "end": 933.86, "text": " Capstan is like effectively like a craft kit.", "tokens": [51056, 8363, 18758, 307, 411, 8659, 411, 257, 8448, 8260, 13, 51182], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 245, "seek": 91750, "start": 933.86, "end": 937.86, "text": " It just, but it hasn't been really enhanced in any way,", "tokens": [51182, 467, 445, 11, 457, 309, 6132, 380, 668, 534, 21191, 294, 604, 636, 11, 51382], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 246, "seek": 91750, "start": 937.86, "end": 941.86, "text": " or even to take advantage of any recent features of OSV.", "tokens": [51382, 420, 754, 281, 747, 5002, 295, 604, 5162, 4122, 295, 12731, 53, 13, 51582], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 247, "seek": 91750, "start": 941.86, "end": 944.78, "text": " So we're planning to basically revamp it,", "tokens": [51582, 407, 321, 434, 5038, 281, 1936, 3698, 1215, 309, 11, 51728], "temperature": 0.0, "avg_logprob": -0.21452513686171523, "compression_ratio": 1.5647058823529412, "no_speech_prob": 0.0024733091704547405}, {"id": 248, "seek": 94478, "start": 944.78, "end": 946.4599999999999, "text": " and make it really easy to use,", "tokens": [50364, 293, 652, 309, 534, 1858, 281, 764, 11, 50448], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 249, "seek": 94478, "start": 946.4599999999999, "end": 951.4599999999999, "text": " basically to help application developers to use OSV.", "tokens": [50448, 1936, 281, 854, 3861, 8849, 281, 764, 12731, 53, 13, 50698], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 250, "seek": 94478, "start": 951.9399999999999, "end": 952.9, "text": " And then in addition,", "tokens": [50722, 400, 550, 294, 4500, 11, 50770], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 251, "seek": 94478, "start": 952.9, "end": 955.66, "text": " we're planning to work on some of the security,", "tokens": [50770, 321, 434, 5038, 281, 589, 322, 512, 295, 264, 3825, 11, 50908], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 252, "seek": 94478, "start": 955.66, "end": 957.3399999999999, "text": " so like ASLR,", "tokens": [50908, 370, 411, 7469, 31722, 11, 50992], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 253, "seek": 94478, "start": 957.3399999999999, "end": 959.78, "text": " and that requires making kernel relocatable,", "tokens": [50992, 293, 300, 7029, 1455, 28256, 26981, 31415, 11, 51114], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 254, "seek": 94478, "start": 959.78, "end": 961.9399999999999, "text": " and some optimizations.", "tokens": [51114, 293, 512, 5028, 14455, 13, 51222], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 255, "seek": 94478, "start": 961.9399999999999, "end": 963.4399999999999, "text": " Eventually, and also finally,", "tokens": [51222, 17586, 11, 293, 611, 2721, 11, 51297], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 256, "seek": 94478, "start": 963.4399999999999, "end": 967.18, "text": " we are planning to make OSV to run on AWS Graviton,", "tokens": [51297, 321, 366, 5038, 281, 652, 12731, 53, 281, 1190, 322, 17650, 8985, 10398, 266, 11, 51484], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 257, "seek": 94478, "start": 967.18, "end": 971.62, "text": " but that requires UEFI and some other things.", "tokens": [51484, 457, 300, 7029, 42260, 38568, 293, 512, 661, 721, 13, 51706], "temperature": 0.0, "avg_logprob": -0.197604733421689, "compression_ratio": 1.6008771929824561, "no_speech_prob": 0.002823515795171261}, {"id": 258, "seek": 97162, "start": 972.62, "end": 975.66, "text": " And with that, I would like to thank the organizers", "tokens": [50414, 400, 365, 300, 11, 286, 576, 411, 281, 1309, 264, 35071, 50566], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 259, "seek": 97162, "start": 975.66, "end": 978.14, "text": " for inviting me to this conference,", "tokens": [50566, 337, 18202, 385, 281, 341, 7586, 11, 50690], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 260, "seek": 97162, "start": 978.14, "end": 979.9, "text": " and tell you about OSV.", "tokens": [50690, 293, 980, 291, 466, 12731, 53, 13, 50778], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 261, "seek": 97162, "start": 979.9, "end": 982.74, "text": " I would also like to thank SyllaDB", "tokens": [50778, 286, 576, 611, 411, 281, 1309, 3902, 3505, 27735, 50920], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 262, "seek": 97162, "start": 982.74, "end": 985.02, "text": " for sponsoring my OSV work,", "tokens": [50920, 337, 30311, 452, 12731, 53, 589, 11, 51034], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 263, "seek": 97162, "start": 985.02, "end": 987.98, "text": " and Dorbola Orr for words of encouragement,", "tokens": [51034, 293, 13643, 65, 4711, 1610, 81, 337, 2283, 295, 25683, 11, 51182], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 264, "seek": 97162, "start": 987.98, "end": 990.34, "text": " and Nadav Haral for being my mentor,", "tokens": [51182, 293, 23269, 706, 3653, 304, 337, 885, 452, 14478, 11, 51300], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 265, "seek": 97162, "start": 990.34, "end": 992.58, "text": " and reviewing hundreds of patches,", "tokens": [51300, 293, 19576, 6779, 295, 26531, 11, 51412], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 266, "seek": 97162, "start": 992.58, "end": 995.54, "text": " and implementing other enhancements.", "tokens": [51412, 293, 18114, 661, 11985, 1117, 13, 51560], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 267, "seek": 97162, "start": 995.54, "end": 998.54, "text": " And finally, I would like to also thank", "tokens": [51560, 400, 2721, 11, 286, 576, 411, 281, 611, 1309, 51710], "temperature": 0.0, "avg_logprob": -0.2618871416364397, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.004192426335066557}, {"id": 268, "seek": 99854, "start": 998.54, "end": 1001.14, "text": " all the community contributors to the project.", "tokens": [50364, 439, 264, 1768, 45627, 281, 264, 1716, 13, 50494], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 269, "seek": 99854, "start": 1003.02, "end": 1007.06, "text": " And this slide, you can find some links about OSV,", "tokens": [50588, 400, 341, 4137, 11, 291, 393, 915, 512, 6123, 466, 12731, 53, 11, 50790], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 270, "seek": 99854, "start": 1007.06, "end": 1009.66, "text": " and thank you for your attention.", "tokens": [50790, 293, 1309, 291, 337, 428, 3202, 13, 50920], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 271, "seek": 99854, "start": 1009.66, "end": 1011.78, "text": " And I'm not sure if you have any questions.", "tokens": [50920, 400, 286, 478, 406, 988, 498, 291, 362, 604, 1651, 13, 51026], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 272, "seek": 99854, "start": 1011.78, "end": 1013.0999999999999, "text": " Time for questions.", "tokens": [51026, 6161, 337, 1651, 13, 51092], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 273, "seek": 99854, "start": 1013.0999999999999, "end": 1018.0999999999999, "text": " We have time for one burning question, if there is.", "tokens": [51092, 492, 362, 565, 337, 472, 9488, 1168, 11, 498, 456, 307, 13, 51342], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 274, "seek": 99854, "start": 1023.42, "end": 1024.26, "text": " You wanted?", "tokens": [51608, 509, 1415, 30, 51650], "temperature": 0.0, "avg_logprob": -0.36388373701539756, "compression_ratio": 1.4885057471264367, "no_speech_prob": 0.0076989769004285336}, {"id": 275, "seek": 102854, "start": 1028.54, "end": 1029.3799999999999, "text": " Yeah, go ahead.", "tokens": [50364, 865, 11, 352, 2286, 13, 50406], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 276, "seek": 102854, "start": 1031.5, "end": 1033.3799999999999, "text": " This is your work on Linux compatibility.", "tokens": [50512, 639, 307, 428, 589, 322, 18734, 34237, 13, 50606], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 277, "seek": 102854, "start": 1033.3799999999999, "end": 1035.18, "text": " How are you handling new APIs,", "tokens": [50606, 1012, 366, 291, 13175, 777, 21445, 11, 50696], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 278, "seek": 102854, "start": 1035.18, "end": 1038.02, "text": " such as the IO U-ring and similar applications?", "tokens": [50696, 1270, 382, 264, 39839, 624, 12, 2937, 293, 2531, 5821, 30, 50838], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 279, "seek": 102854, "start": 1038.02, "end": 1039.26, "text": " Are you using?", "tokens": [50838, 2014, 291, 1228, 30, 50900], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 280, "seek": 102854, "start": 1040.3799999999999, "end": 1043.42, "text": " Your question was how do you add new applications to?", "tokens": [50956, 2260, 1168, 390, 577, 360, 291, 909, 777, 5821, 281, 30, 51108], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 281, "seek": 102854, "start": 1043.42, "end": 1046.34, "text": " No, no, so with the Linux API,", "tokens": [51108, 883, 11, 572, 11, 370, 365, 264, 18734, 9362, 11, 51254], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 282, "seek": 102854, "start": 1046.34, "end": 1048.98, "text": " that you are right for, I believe, for,", "tokens": [51254, 300, 291, 366, 558, 337, 11, 286, 1697, 11, 337, 11, 51386], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 283, "seek": 102854, "start": 1048.98, "end": 1052.54, "text": " how are you handling IO U-ring and similar APIs?", "tokens": [51386, 577, 366, 291, 13175, 39839, 624, 12, 2937, 293, 2531, 21445, 30, 51564], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 284, "seek": 102854, "start": 1053.58, "end": 1057.94, "text": " So how am I consuming new APIs, Linux APIs?", "tokens": [51616, 407, 577, 669, 286, 19867, 777, 21445, 11, 18734, 21445, 30, 51834], "temperature": 0.0, "avg_logprob": -0.473595210484096, "compression_ratio": 1.6849315068493151, "no_speech_prob": 0.014730594120919704}, {"id": 285, "seek": 105794, "start": 1057.94, "end": 1059.7, "text": " I don't know how are you handling applications,", "tokens": [50364, 286, 500, 380, 458, 577, 366, 291, 13175, 5821, 11, 50452], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 286, "seek": 105794, "start": 1059.7, "end": 1061.7, "text": " which do make use of those?", "tokens": [50452, 597, 360, 652, 764, 295, 729, 30, 50552], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 287, "seek": 105794, "start": 1061.7, "end": 1065.74, "text": " So basically, this happens as the way I describe,", "tokens": [50552, 407, 1936, 11, 341, 2314, 382, 264, 636, 286, 6786, 11, 50754], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 288, "seek": 105794, "start": 1065.74, "end": 1068.46, "text": " typically, if the application is launched", "tokens": [50754, 5850, 11, 498, 264, 3861, 307, 8730, 50890], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 289, "seek": 105794, "start": 1068.46, "end": 1072.3, "text": " in the traditional way, OSV simply,", "tokens": [50890, 294, 264, 5164, 636, 11, 12731, 53, 2935, 11, 51082], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 290, "seek": 105794, "start": 1073.94, "end": 1076.18, "text": " resolves all the application symbols,", "tokens": [51164, 7923, 977, 439, 264, 3861, 16944, 11, 51276], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 291, "seek": 105794, "start": 1076.18, "end": 1079.78, "text": " like Lipsy symbols, and simply redirects them", "tokens": [51276, 411, 441, 2600, 88, 16944, 11, 293, 2935, 29066, 82, 552, 51456], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 292, "seek": 105794, "start": 1079.78, "end": 1082.74, "text": " to OSV implementation of Lipsy functions.", "tokens": [51456, 281, 12731, 53, 11420, 295, 441, 2600, 88, 6828, 13, 51604], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 293, "seek": 105794, "start": 1086.18, "end": 1087.38, "text": " If I have an answer to your question,", "tokens": [51776, 759, 286, 362, 364, 1867, 281, 428, 1168, 11, 51836], "temperature": 0.0, "avg_logprob": -0.27493123724909113, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.005464809015393257}, {"id": 294, "seek": 108738, "start": 1087.38, "end": 1091.5400000000002, "text": " then we can meet afterwards and I can address better.", "tokens": [50364, 550, 321, 393, 1677, 10543, 293, 286, 393, 2985, 1101, 13, 50572], "temperature": 0.0, "avg_logprob": -0.5395150714450412, "compression_ratio": 1.1375, "no_speech_prob": 0.023261403664946556}, {"id": 295, "seek": 108738, "start": 1091.5400000000002, "end": 1093.8200000000002, "text": " Thanks again for the talk.", "tokens": [50572, 2561, 797, 337, 264, 751, 13, 50686], "temperature": 0.0, "avg_logprob": -0.5395150714450412, "compression_ratio": 1.1375, "no_speech_prob": 0.023261403664946556}, {"id": 296, "seek": 108738, "start": 1093.8200000000002, "end": 1094.66, "text": " Thank you.", "tokens": [50686, 1044, 291, 13, 50728], "temperature": 0.0, "avg_logprob": -0.5395150714450412, "compression_ratio": 1.1375, "no_speech_prob": 0.023261403664946556}], "language": "en"}