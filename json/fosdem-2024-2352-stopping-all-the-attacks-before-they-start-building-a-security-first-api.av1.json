{"text": " Welcome, Warren, and first yours. Thank you. That's not necessary. Sorry for starting a little bit late. This is building a security first API. I'm Warren Parade and I'm the CTO at Authress, which is a widely used authentication authorization API. That means we get a lot of requests, API requests, that is. So let's talk about that a little bit. Today in the world, there's about one trillion requests per second. Get on the slide. This is public internet and from recent research published by Akamai, about 83% of these requests are purely API related, machine clients, services, IoT devices. From our own research, 4.9% of these requests are malicious in nature. That means for every 20 requests your service gets, one of them is from a malicious attacker that's attempting to compromise your service. That's a lot. And I think we're all in this room right now because we know we have to do something about it. But there's a lot that we could be doing. So many things, in fact, that if I were to stand up here and talk through each and every one of these, we'd be here long after the conference was over. Luckily, I'm not going to do that. But also, doing that may not actually have the impact that you wish it to. That's because some of these may not be relevant to the service that you're building, functionality that actually is in your API. To figure that out, we actually need to do and build a threat model. A threat model is intentionally deciding what a malicious threat actor could potentially do to compromise your service. This is going to be unique based off of the data that you're saving, the way you've built your service, the infrastructure, and also your cloud provider of choice. However, I'm going to say that some threats are ubiquitous across many, if not all, APIs that we're building. So what I'm hoping to do is build up a common threat model that we can utilize to actually target solutions to these issues. So let's start. The first one is injection attacks. These come in many forms, where a malicious attacker attempts to construct a custom request into your service to cause it to execute unexpected code paths or flows. Common example are SQL or database injection attacks. These attempt to execute an unexpected SQL command against your database, such as drop all tables if we're lucky. Another type is host command injection. So executing a privileged action against our host operating system or virtualization layer. And the last kind is server side request forgeries. That's just a convoluted way of saying that your service has credentials that are used to interact with a third party integration, and an attack may attempt to utilize those credentials on its behalf. So let's add all of these to our common threat model. But we can go further. The application security program, OWASP, has listed the top two most concerning things. Number two is broken authentication. We don't have any authentication on our API whatsoever, or what we have added isn't sufficient to actually identify malicious attackers. And this is number two. That should be telling us something. Number one is actually broken object level authorization. This lack of authentication, but lack of authorization to validate whether or not the request that's coming in actually should be allowed to execute. Usually it's due to a lack of granular access control. And we can go further. These are only the one directly at our API, but we have infrastructure to consider as well. An malicious attacker could attempt to utilize our API indirectly to affect our infrastructure via a DDoS attack. Or it could attempt to inject a malicious code into one of our dependencies through a supply chain injection attack, software or otherwise. And lastly, they could attempt a physical intrusion into our data center if we have something on prem or a virtualization later or a cloud provider or the cloud provider itself. And the attacks aren't just specific or non-specific to services in general. You have to think about how the functionality of your service is relevant, what you're currently building. A malicious attacker may attempt to utilize how your resources are built, how your end points are functioned specifically in your case. In AuthWrist, we offer multi-tenant security capabilities that allow our tenants, our customers, to create customized identity providers, custom user logic, even give us custom URLs. They can attempt and have attempted to utilize that configurability to compromise adjacent tenants at customers across our whole product. Okay, that's I think enough for a threat model that we can all agree are problems across the board. Now I want to jump to actual solutions. First up is input validation. To deal with the threat of injection attacks, we can add input validation. And I honestly, I feel kind of silly putting this slide up here because I feel like most of us know about this problem. But I feel like every single day, every week, I hear about some problem with some public company who had an issue that could have been resolved by verifying that the request they are getting matched their expectations. Well, we already thought about our expectations a little bit. And if you were listening in the last talk, we learned about the open API specification, which documents our API in a programmatic way. Well, we could potentially take that programmatic documentation and utilize it to verify those same expectations on the request we're getting into our service. Here's an example from Authris where we have group management. This actually creates user groups. And on the left, you can actually see the schema for this endpoint. It's fairly bare here and uses a common component groups. On the right, you can see the example of an open API Explorer tool automatically rendering it. So we can take the schema and what I want to do is build up a place where we can store the validation of all of our endpoints. So when we add additional endpoints to our service, they will automatically get the security of input validation. So let's create a security middleware. And I've got one here in JavaScript. But you can be using, of course, any language. There are open API specification-based tools that work in whatever framework you're using. And I'm loading the spec up here and passing in the method, the path, the body, the headers. And this will get executed on every single request that we get to our service, irrelevant of the endpoints that we have. And just like that, hopefully we've eliminated injection attacks. But why stop there? Now that we're opening up the request to do validation, we can start thinking about authentication. And authentication is required because if we don't know who the user is, we don't know if they're a potential malicious attacker. We have no way of identifying them across requests. And while we could be using something like IP addresses or some fingerprinting that's blocked by most browsers today, none of them are as effective as just using user identification through authentication. And like this, we can hopefully close out the broken authentication threat that we have in our threat model. And usually entails having a trusted identity provider. Someone that can generate access tokens on behalf of our clients, who may be machines, IoT devices, even end users, those tokens usually look like JWTs. And they'll pass us those JWTs into our API through the authorization header. From there, we'll grab some data from the identity provider that allows us to verify those tokens. So let's just see what JWT actually looks like. And I'm sure someone's going to call me out and say it's pronounced jot according to the RFC. So I'm just going to say I absolutely know that. But not everyone knows what a JWT is. And so it's easy to remember by the letters rather than how to pronounce it. So I'm just going to keep saying that a JWT has properties that can be completely configured, but at least it contains ones that have the identity provider where the token came from. User ID that the token represents. Usually there are short lived token that expires. I created this one and it's actually going to expire soon during the conference. And signature that allows us to verify it. So now let's extend our security middleware to close out the broken authentication. We can just add another method in here that allows us to extract those important fields out of the JWT and then verify them. And maybe we're done. Now I think we got to be careful not to fall into a trap here. All of our endpoints need the same sort of authentication. All the services in our system may have a similar concern, right? We want to verify on every endpoint. We may be tempted to delegate that security to another team in our company or a single component where all the requests pass through. However, fundamentally every single one of your endpoints is at stake and you're likely on the team accountable for the security of those endpoints. So when we add another component such as an API gateway into our system, we're really left with two options. The first one is to completely ignore that component, get the tokens into our service and verify them. The alternative is to not trust that identity provider that's giving us the tokens and somehow trust the API gateway instead. If you're doing that, you may think, well, our identity provider isn't necessarily providing us what it needs to do. Maybe think about changing it. And like this, we can eliminate broken authentication. But it's important to remember that identity is not security by itself. Just because we know who the user is doesn't mean that they're actually allowed to perform the action on our API that they're attempting to request. To do that, we need to introduce authorization. Admission is verifying that the machine, service, or user actually has permission to call the endpoint that they're calling. And to stop the broken object authorization, BOLA, for every endpoint, we need to consciously decide what is the purpose of this endpoint for the product, what permissions make sense to actually check, and who should have access. The simplest thing we can do is add permissions to our JWT. Users get blanket permissions to everything basically via a property in the JWT. And you'll notice that there are no resources listed here. It's just a list of permissions. And this is the bare minimum to provide authorization in your API. And it only works really in simple cases that where most of your data is public, users don't really have that many roles, or the users don't really interact with each other. However, in all but the simplest cases, it's likely not sufficient because it doesn't provide granular enough control. You can't specify the resources here. And in order to stop the broken object authorization, we need to achieve granular access control. So we need a different access control strategy. And like that, we'll introduce resource-based. In resource-based, individual users get assigned specific permissions to resources. And with that, we can actually verify that they are authorized to call our endpoints, or the specific endpoint. Okay, let's extend our security middleware and close out the Bola threat. And we'll do that by just adding another line of code to our security middleware. And here I have an example from the author's SDK, but of course you can use any SDK, any product that allows you to do this verification. Or if you're feeling adventurous in the land of security, you can try to do it yourself, not something I normally recommend. And with granular access control, you can actually scope down the permissions of each of your endpoints to only what is absolutely required. And this is known as the principle of least privilege. Now it should be self-evident that the more granular our permissions are, the more secure our API is. Because if we don't have granularity, then users likely probably have access to do too much in our service. And a malicious attacker that gains access to or impersonates one of our users while having access to potentially all of their data. The only way to prevent Bola is have a granular access control strategy and implore the principle of least privilege. Don't be this company that asks to delete all of my emails and all of my calendars. It's just totally unnecessary. Also don't be that company that lets people do this. I should at least be able to uncheck just the delete part. Yeah, sure, maybe I trust you to read and compose some emails. Read just some, not all of them. And this is actually about as far as we can get with static code in a middleware that's running. If we want to deal with some of the threats around our infrastructure, we need to take it to the next level and add some monitoring and logging. We've taken care of most of the threats at this point, but there are still some left, right? Now if we take a look at how the DDoS text works, taking the next step is potentially throwing some sort of additional component into our architecture that allows us to detect when there's a problem. And we can do that by adding what's usually known as an API firewall or a web application firewall. We'll attempt to dynamically block attacks as they happen. It can contain dynamic rules that look for suspicious activity and are executed based off of multiple request patterns. Some requests we'll get through and we'll end up logging them. We have to make sure we're logging them. And then we can process that and potentially look for patterns within our service, maybe a couple of 200 in a particular way. And we can use that to dynamically update our rules. And if we identify something that the firewall isn't blocking at that moment, well, we can actually update those rules and stop an attack as it happens. And those updated rules will continue to live on into the future. So you throw in some monitoring and logging and you notice something, a spike that looks like this. Is this a problem? Does it look like an attack? Who thinks this is an attack? No one. Everyone thinks that this is totally normal behavior. I mean, users change things all the time. So your customer causes this to happen in your service and you're like, whatever, it's not a big deal. And it may not be anything. Realistically, spikes like this don't mean that much. What's important is what's relevant for your product. For us, we monitor and validate what we call the authorization ratio. That's successful, authorized request to ones that are actually blocked, where the permissions don't match or something fundamentally changed about how it's being used. Even though this came up as one spike, the truth is that this was actually two individual problems that are API firewall, caught, and our anomaly detection, which this is actually ran to grab and pull out. This is actually from Grafana. Depending on the severity of the attack, the rules may completely shut out all requests from a particular customer or a specific service client, depending on what's actually going on. OK. I said a lot of things, so I would like to summarize. The most important thing we can do is identify our threat model. We built one here and it includes injection attacks, broken user authentication, Bola, and DDS attacks amongst some other ones. Then we created custom solutions specifically to deal with our threats, validating our inputs, having user identity, granular access control, and then adding dynamic rules. This is great when everything goes to plan, but sometimes it doesn't. And when it does, we need to really understand what we're doing. So let's take a look at some things not to do. The first one is missing our threat model. I think I've said this enough. If we don't have a threat model, then we don't know what we're building is sufficient, useful, or even relevant. It's probably even harmful. Throwing security over the wall. It's nice to be able to utilize components from another team to help us build up a more secure API. But fundamentally, your APIs are your responsibility. If something happens, who is held accountable for the lack of security there? It isn't a replacement to use another team. Internal services. There's no such thing as an internal service. There's just services that don't have any external requests yet. Lateral attacks from other services from malicious threat actors may still end up in your API, utilizing a proxy, a gateway, or another service that could be one of your only customers inside your company. At some point, your service is going to become public or have public callers, potentially. And if you haven't built your service with security in mind, then you likely have some of the threats that we've actually added into our threat model already today. So treat all your callers as externals and that your API could be considered public. Building monoliths. I think at this point by 2024, we should know that microservices are more secure than monoliths. Sources have dedicated boundaries of which we've implemented authentication and authorization at those boundary layers. If something were to happen in one of our services and it becomes compromised, there's a bulkhead door that's closed by default. Whereas in a monolithic system, if any component becomes compromised, then our whole system becomes compromised. And the last one is building it yourself. Try to build or maintain a component that isn't your core competency. And while it may seem like a clever way to get around a supply chain attack, in reality, it means you're just volunteering to take full responsibility for whatever that component is and all the vulnerabilities that show up there. You and your team are probably not going to be able to beat out a team of experts who manage some open source component out there that is being checked continuously. Now the counter example argument to this is, well, what if it's a critical component? Well, the truth is everything in our service is a critical component in some way or else we probably wouldn't have included it. You're not going to get very far with the resources you have attempting to build and maintain literally everything in your stack, including making your own electricity. Okay. So hopefully at this point, you know exactly what you need to do to add some additional security to your service. I have a quick link to the presentation if anyone actually wants it. I see too many people getting on phones. It's going to be available online, so you don't necessarily have to, but if you really want to. Okay. One more. Five, four. Okay. Okay. And thank you. Okay. And thank you. Okay. Now we have some time for some questions. Yeah. Perfect. Five minutes for questions. Go ahead. I'm not sure are you operating in the Europe company? Our company is global. So yes, Europe is included. Oh, yes. Sorry. It's our company operating in Europe. Yes, for sure. It's operating in Europe. The reason I ask is that we have some new regulations according to data protection. Yeah, for sure. And the IP address is considered to be one identifying characteristic for a person. Yes. Yeah. How do you deal with the GDPR or whatever local regulation is for identifying information such as IP addresses? I mean, the sad story about IP addresses is like forget about it honestly. Because with IPv6, which is going to be here pretty soon, you're not going to be able to do anything remotely reasonable with IP addresses in the first place. So stop logging them. For us, what we actually do is edge computing for those customers. So wherever they're coming from, most of their data stays at the edge as much as possible. So if you do have those regulations, try to keep it there and don't send it other places. All the logs are resident to that data center or those databases in that location. It still allows you to perform security on the edge. And wherever you're running your stack, whether it's on-prem data centers, hopefully not in every single country or some cloud provider, they're usually following those regulations as well. So as long as you keep the data as close to that region as possible, you're abiding by the law as best in your ability as you possibly can. Go ahead. Yeah. We do validate all incoming requests against the schema, but that doesn't necessarily mean you're safe. So two easy examples could be a build just really, really long that leads to a DDoS. Or they could be some SQL in there and a laser developer stripping it before it goes into the database. So is there a way to add that kind of validation to the OpenAPI schema or would you have that as a separate set? Can you add extra validation to the OpenAPI schema? You absolutely can. There are even vendor extensions. I mean, if you want to put your whole everything in your OpenAPI schema, you can have, there are tools out there to dynamically generate the whole service if you want to. I don't know if I'd recommend going that far, but you absolutely can. Just to be clear, you can't block everything because you don't even know if you are blocking everything realistically, right? Something that undiscovered zero-day that's sitting out there could still be waiting and happening. So there is no full guarantee that you've actually even blocked everything. Go ahead. What are your pro tips regarding the use of refresh tokens? My pro tips for using refresh tokens. You probably don't need refresh tokens ever, and if you're using them and you believe this is standard or common, you probably don't fully understand the use case for them. Unless you're dealing with a third-party technology or interface integration, you don't need refresh tokens. Just forget they even exist. So it was just within your own system. There's no need for refresh tokens. There's plenty of alternatives that are more secure. I have a whole talk on that, I guess. Does that answer your question? Okay. Anyone else? I still have a couple minutes. Don't be shy. Yeah? Go ahead. Why? Why what? About the tokens. Why? Refresh tokens allow you to impersonate in your own service one of your users to access their resources. So Google Drive, for instance, a refresh token allows you to access Google Drive as your user. If you don't have integrations with third parties, then there's no reason to have refresh tokens. There's no third-party system where you need to impersonate a user. Your own users don't need to be impersonated. You already can perform every action within your service that you want. There's a lot? Yeah, okay. Thank you. That's...", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.0, "text": " Welcome, Warren, and first yours.", "tokens": [50364, 4027, 11, 20538, 11, 293, 700, 6342, 13, 50914], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 1, "seek": 0, "start": 11.0, "end": 12.0, "text": " Thank you.", "tokens": [50914, 1044, 291, 13, 50964], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 2, "seek": 0, "start": 12.0, "end": 13.0, "text": " That's not necessary.", "tokens": [50964, 663, 311, 406, 4818, 13, 51014], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 3, "seek": 0, "start": 13.0, "end": 17.84, "text": " Sorry for starting a little bit late.", "tokens": [51014, 4919, 337, 2891, 257, 707, 857, 3469, 13, 51256], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 4, "seek": 0, "start": 17.84, "end": 20.2, "text": " This is building a security first API.", "tokens": [51256, 639, 307, 2390, 257, 3825, 700, 9362, 13, 51374], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 5, "seek": 0, "start": 20.2, "end": 26.16, "text": " I'm Warren Parade and I'm the CTO at Authress, which is a widely used authentication authorization", "tokens": [51374, 286, 478, 20538, 3457, 762, 293, 286, 478, 264, 383, 15427, 412, 40231, 735, 11, 597, 307, 257, 13371, 1143, 26643, 33697, 51672], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 6, "seek": 0, "start": 26.16, "end": 27.16, "text": " API.", "tokens": [51672, 9362, 13, 51722], "temperature": 0.0, "avg_logprob": -0.43094603220621747, "compression_ratio": 1.436046511627907, "no_speech_prob": 0.12676793336868286}, {"id": 7, "seek": 2716, "start": 27.16, "end": 30.56, "text": " That means we get a lot of requests, API requests, that is.", "tokens": [50364, 663, 1355, 321, 483, 257, 688, 295, 12475, 11, 9362, 12475, 11, 300, 307, 13, 50534], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 8, "seek": 2716, "start": 30.56, "end": 32.92, "text": " So let's talk about that a little bit.", "tokens": [50534, 407, 718, 311, 751, 466, 300, 257, 707, 857, 13, 50652], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 9, "seek": 2716, "start": 32.92, "end": 36.68, "text": " Today in the world, there's about one trillion requests per second.", "tokens": [50652, 2692, 294, 264, 1002, 11, 456, 311, 466, 472, 18723, 12475, 680, 1150, 13, 50840], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 10, "seek": 2716, "start": 36.68, "end": 39.08, "text": " Get on the slide.", "tokens": [50840, 3240, 322, 264, 4137, 13, 50960], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 11, "seek": 2716, "start": 39.08, "end": 46.72, "text": " This is public internet and from recent research published by Akamai, about 83% of these requests", "tokens": [50960, 639, 307, 1908, 4705, 293, 490, 5162, 2132, 6572, 538, 9629, 335, 1301, 11, 466, 30997, 4, 295, 613, 12475, 51342], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 12, "seek": 2716, "start": 46.72, "end": 53.32, "text": " are purely API related, machine clients, services, IoT devices.", "tokens": [51342, 366, 17491, 9362, 4077, 11, 3479, 6982, 11, 3328, 11, 30112, 5759, 13, 51672], "temperature": 0.0, "avg_logprob": -0.2531726543719952, "compression_ratio": 1.5515695067264574, "no_speech_prob": 0.020304447039961815}, {"id": 13, "seek": 5332, "start": 53.32, "end": 58.16, "text": " From our own research, 4.9% of these requests are malicious in nature.", "tokens": [50364, 3358, 527, 1065, 2132, 11, 1017, 13, 24, 4, 295, 613, 12475, 366, 33496, 294, 3687, 13, 50606], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 14, "seek": 5332, "start": 58.16, "end": 63.96, "text": " That means for every 20 requests your service gets, one of them is from a malicious attacker", "tokens": [50606, 663, 1355, 337, 633, 945, 12475, 428, 2643, 2170, 11, 472, 295, 552, 307, 490, 257, 33496, 35871, 50896], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 15, "seek": 5332, "start": 63.96, "end": 66.44, "text": " that's attempting to compromise your service.", "tokens": [50896, 300, 311, 22001, 281, 18577, 428, 2643, 13, 51020], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 16, "seek": 5332, "start": 66.44, "end": 67.44, "text": " That's a lot.", "tokens": [51020, 663, 311, 257, 688, 13, 51070], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 17, "seek": 5332, "start": 67.44, "end": 71.68, "text": " And I think we're all in this room right now because we know we have to do something about", "tokens": [51070, 400, 286, 519, 321, 434, 439, 294, 341, 1808, 558, 586, 570, 321, 458, 321, 362, 281, 360, 746, 466, 51282], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 18, "seek": 5332, "start": 71.68, "end": 72.8, "text": " it.", "tokens": [51282, 309, 13, 51338], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 19, "seek": 5332, "start": 72.8, "end": 74.96000000000001, "text": " But there's a lot that we could be doing.", "tokens": [51338, 583, 456, 311, 257, 688, 300, 321, 727, 312, 884, 13, 51446], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 20, "seek": 5332, "start": 74.96000000000001, "end": 78.88, "text": " So many things, in fact, that if I were to stand up here and talk through each and every", "tokens": [51446, 407, 867, 721, 11, 294, 1186, 11, 300, 498, 286, 645, 281, 1463, 493, 510, 293, 751, 807, 1184, 293, 633, 51642], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 21, "seek": 5332, "start": 78.88, "end": 82.03999999999999, "text": " one of these, we'd be here long after the conference was over.", "tokens": [51642, 472, 295, 613, 11, 321, 1116, 312, 510, 938, 934, 264, 7586, 390, 670, 13, 51800], "temperature": 0.0, "avg_logprob": -0.12531092567165403, "compression_ratio": 1.695364238410596, "no_speech_prob": 0.00734395906329155}, {"id": 22, "seek": 8204, "start": 82.48, "end": 83.92, "text": " Luckily, I'm not going to do that.", "tokens": [50386, 19726, 11, 286, 478, 406, 516, 281, 360, 300, 13, 50458], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 23, "seek": 8204, "start": 83.92, "end": 88.2, "text": " But also, doing that may not actually have the impact that you wish it to.", "tokens": [50458, 583, 611, 11, 884, 300, 815, 406, 767, 362, 264, 2712, 300, 291, 3172, 309, 281, 13, 50672], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 24, "seek": 8204, "start": 88.2, "end": 92.92, "text": " That's because some of these may not be relevant to the service that you're building, functionality", "tokens": [50672, 663, 311, 570, 512, 295, 613, 815, 406, 312, 7340, 281, 264, 2643, 300, 291, 434, 2390, 11, 14980, 50908], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 25, "seek": 8204, "start": 92.92, "end": 95.88000000000001, "text": " that actually is in your API.", "tokens": [50908, 300, 767, 307, 294, 428, 9362, 13, 51056], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 26, "seek": 8204, "start": 95.88000000000001, "end": 100.44000000000001, "text": " To figure that out, we actually need to do and build a threat model.", "tokens": [51056, 1407, 2573, 300, 484, 11, 321, 767, 643, 281, 360, 293, 1322, 257, 4734, 2316, 13, 51284], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 27, "seek": 8204, "start": 100.44000000000001, "end": 106.68, "text": " A threat model is intentionally deciding what a malicious threat actor could potentially", "tokens": [51284, 316, 4734, 2316, 307, 22062, 17990, 437, 257, 33496, 4734, 8747, 727, 7263, 51596], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 28, "seek": 8204, "start": 106.68, "end": 110.36000000000001, "text": " do to compromise your service.", "tokens": [51596, 360, 281, 18577, 428, 2643, 13, 51780], "temperature": 0.0, "avg_logprob": -0.13480002146500808, "compression_ratio": 1.7613168724279835, "no_speech_prob": 0.0020503157284110785}, {"id": 29, "seek": 11036, "start": 110.36, "end": 114.2, "text": " This is going to be unique based off of the data that you're saving, the way you've built", "tokens": [50364, 639, 307, 516, 281, 312, 3845, 2361, 766, 295, 264, 1412, 300, 291, 434, 6816, 11, 264, 636, 291, 600, 3094, 50556], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 30, "seek": 11036, "start": 114.2, "end": 121.92, "text": " your service, the infrastructure, and also your cloud provider of choice.", "tokens": [50556, 428, 2643, 11, 264, 6896, 11, 293, 611, 428, 4588, 12398, 295, 3922, 13, 50942], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 31, "seek": 11036, "start": 121.92, "end": 128.4, "text": " However, I'm going to say that some threats are ubiquitous across many, if not all, APIs", "tokens": [50942, 2908, 11, 286, 478, 516, 281, 584, 300, 512, 14909, 366, 43868, 39831, 2108, 867, 11, 498, 406, 439, 11, 21445, 51266], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 32, "seek": 11036, "start": 128.4, "end": 129.4, "text": " that we're building.", "tokens": [51266, 300, 321, 434, 2390, 13, 51316], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 33, "seek": 11036, "start": 129.4, "end": 133.56, "text": " So what I'm hoping to do is build up a common threat model that we can utilize to actually", "tokens": [51316, 407, 437, 286, 478, 7159, 281, 360, 307, 1322, 493, 257, 2689, 4734, 2316, 300, 321, 393, 16117, 281, 767, 51524], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 34, "seek": 11036, "start": 133.56, "end": 137.28, "text": " target solutions to these issues.", "tokens": [51524, 3779, 6547, 281, 613, 2663, 13, 51710], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 35, "seek": 11036, "start": 137.28, "end": 138.36, "text": " So let's start.", "tokens": [51710, 407, 718, 311, 722, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10256734600773564, "compression_ratio": 1.6171875, "no_speech_prob": 0.0010321424342691898}, {"id": 36, "seek": 13836, "start": 138.36, "end": 141.0, "text": " The first one is injection attacks.", "tokens": [50364, 440, 700, 472, 307, 22873, 8122, 13, 50496], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 37, "seek": 13836, "start": 141.0, "end": 146.64000000000001, "text": " These come in many forms, where a malicious attacker attempts to construct a custom request", "tokens": [50496, 1981, 808, 294, 867, 6422, 11, 689, 257, 33496, 35871, 15257, 281, 7690, 257, 2375, 5308, 50778], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 38, "seek": 13836, "start": 146.64000000000001, "end": 153.44000000000003, "text": " into your service to cause it to execute unexpected code paths or flows.", "tokens": [50778, 666, 428, 2643, 281, 3082, 309, 281, 14483, 13106, 3089, 14518, 420, 12867, 13, 51118], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 39, "seek": 13836, "start": 153.44000000000003, "end": 156.4, "text": " Common example are SQL or database injection attacks.", "tokens": [51118, 18235, 1365, 366, 19200, 420, 8149, 22873, 8122, 13, 51266], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 40, "seek": 13836, "start": 156.4, "end": 161.0, "text": " These attempt to execute an unexpected SQL command against your database, such as drop", "tokens": [51266, 1981, 5217, 281, 14483, 364, 13106, 19200, 5622, 1970, 428, 8149, 11, 1270, 382, 3270, 51496], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 41, "seek": 13836, "start": 161.0, "end": 164.64000000000001, "text": " all tables if we're lucky.", "tokens": [51496, 439, 8020, 498, 321, 434, 6356, 13, 51678], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 42, "seek": 13836, "start": 164.64000000000001, "end": 167.08, "text": " Another type is host command injection.", "tokens": [51678, 3996, 2010, 307, 3975, 5622, 22873, 13, 51800], "temperature": 0.0, "avg_logprob": -0.10735612387185568, "compression_ratio": 1.6859504132231404, "no_speech_prob": 0.0013249522307887673}, {"id": 43, "seek": 16708, "start": 167.08, "end": 174.4, "text": " So executing a privileged action against our host operating system or virtualization", "tokens": [50364, 407, 32368, 257, 25293, 3069, 1970, 527, 3975, 7447, 1185, 420, 6374, 2144, 50730], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 44, "seek": 16708, "start": 174.4, "end": 175.4, "text": " layer.", "tokens": [50730, 4583, 13, 50780], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 45, "seek": 16708, "start": 175.4, "end": 179.84, "text": " And the last kind is server side request forgeries.", "tokens": [50780, 400, 264, 1036, 733, 307, 7154, 1252, 5308, 337, 32217, 13, 51002], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 46, "seek": 16708, "start": 179.84, "end": 186.08, "text": " That's just a convoluted way of saying that your service has credentials that are used", "tokens": [51002, 663, 311, 445, 257, 3754, 2308, 292, 636, 295, 1566, 300, 428, 2643, 575, 27404, 300, 366, 1143, 51314], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 47, "seek": 16708, "start": 186.08, "end": 191.68, "text": " to interact with a third party integration, and an attack may attempt to utilize those", "tokens": [51314, 281, 4648, 365, 257, 2636, 3595, 10980, 11, 293, 364, 2690, 815, 5217, 281, 16117, 729, 51594], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 48, "seek": 16708, "start": 191.68, "end": 194.36, "text": " credentials on its behalf.", "tokens": [51594, 27404, 322, 1080, 9490, 13, 51728], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 49, "seek": 16708, "start": 194.36, "end": 197.0, "text": " So let's add all of these to our common threat model.", "tokens": [51728, 407, 718, 311, 909, 439, 295, 613, 281, 527, 2689, 4734, 2316, 13, 51860], "temperature": 0.0, "avg_logprob": -0.14489016634352664, "compression_ratio": 1.5856573705179282, "no_speech_prob": 0.00012730721209663898}, {"id": 50, "seek": 19700, "start": 197.0, "end": 198.48, "text": " But we can go further.", "tokens": [50364, 583, 321, 393, 352, 3052, 13, 50438], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 51, "seek": 19700, "start": 198.48, "end": 206.28, "text": " The application security program, OWASP, has listed the top two most concerning things.", "tokens": [50438, 440, 3861, 3825, 1461, 11, 38329, 3160, 47, 11, 575, 10052, 264, 1192, 732, 881, 18087, 721, 13, 50828], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 52, "seek": 19700, "start": 206.28, "end": 208.6, "text": " Number two is broken authentication.", "tokens": [50828, 5118, 732, 307, 5463, 26643, 13, 50944], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 53, "seek": 19700, "start": 208.6, "end": 213.28, "text": " We don't have any authentication on our API whatsoever, or what we have added isn't", "tokens": [50944, 492, 500, 380, 362, 604, 26643, 322, 527, 9362, 17076, 11, 420, 437, 321, 362, 3869, 1943, 380, 51178], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 54, "seek": 19700, "start": 213.28, "end": 216.16, "text": " sufficient to actually identify malicious attackers.", "tokens": [51178, 11563, 281, 767, 5876, 33496, 45129, 13, 51322], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 55, "seek": 19700, "start": 216.16, "end": 217.16, "text": " And this is number two.", "tokens": [51322, 400, 341, 307, 1230, 732, 13, 51372], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 56, "seek": 19700, "start": 217.16, "end": 219.04, "text": " That should be telling us something.", "tokens": [51372, 663, 820, 312, 3585, 505, 746, 13, 51466], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 57, "seek": 19700, "start": 219.04, "end": 223.04, "text": " Number one is actually broken object level authorization.", "tokens": [51466, 5118, 472, 307, 767, 5463, 2657, 1496, 33697, 13, 51666], "temperature": 0.0, "avg_logprob": -0.15552276812101665, "compression_ratio": 1.5992063492063493, "no_speech_prob": 0.011685547418892384}, {"id": 58, "seek": 22304, "start": 223.04, "end": 231.32, "text": " This lack of authentication, but lack of authorization to validate whether or not the request that's", "tokens": [50364, 639, 5011, 295, 26643, 11, 457, 5011, 295, 33697, 281, 29562, 1968, 420, 406, 264, 5308, 300, 311, 50778], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 59, "seek": 22304, "start": 231.32, "end": 236.64, "text": " coming in actually should be allowed to execute.", "tokens": [50778, 1348, 294, 767, 820, 312, 4350, 281, 14483, 13, 51044], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 60, "seek": 22304, "start": 236.64, "end": 240.23999999999998, "text": " Usually it's due to a lack of granular access control.", "tokens": [51044, 11419, 309, 311, 3462, 281, 257, 5011, 295, 39962, 2105, 1969, 13, 51224], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 61, "seek": 22304, "start": 240.23999999999998, "end": 242.51999999999998, "text": " And we can go further.", "tokens": [51224, 400, 321, 393, 352, 3052, 13, 51338], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 62, "seek": 22304, "start": 242.51999999999998, "end": 247.28, "text": " These are only the one directly at our API, but we have infrastructure to consider as", "tokens": [51338, 1981, 366, 787, 264, 472, 3838, 412, 527, 9362, 11, 457, 321, 362, 6896, 281, 1949, 382, 51576], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 63, "seek": 22304, "start": 247.28, "end": 248.28, "text": " well.", "tokens": [51576, 731, 13, 51626], "temperature": 0.0, "avg_logprob": -0.13412803258651343, "compression_ratio": 1.541062801932367, "no_speech_prob": 0.004069862887263298}, {"id": 64, "seek": 24828, "start": 248.28, "end": 253.28, "text": " An malicious attacker could attempt to utilize our API indirectly to affect our infrastructure", "tokens": [50364, 1107, 33496, 35871, 727, 5217, 281, 16117, 527, 9362, 37779, 281, 3345, 527, 6896, 50614], "temperature": 0.0, "avg_logprob": -0.2144872792561849, "compression_ratio": 1.61244019138756, "no_speech_prob": 0.023686036467552185}, {"id": 65, "seek": 24828, "start": 253.28, "end": 257.32, "text": " via a DDoS attack.", "tokens": [50614, 5766, 257, 413, 7653, 50, 2690, 13, 50816], "temperature": 0.0, "avg_logprob": -0.2144872792561849, "compression_ratio": 1.61244019138756, "no_speech_prob": 0.023686036467552185}, {"id": 66, "seek": 24828, "start": 257.32, "end": 265.72, "text": " Or it could attempt to inject a malicious code into one of our dependencies through", "tokens": [50816, 1610, 309, 727, 5217, 281, 10711, 257, 33496, 3089, 666, 472, 295, 527, 36606, 807, 51236], "temperature": 0.0, "avg_logprob": -0.2144872792561849, "compression_ratio": 1.61244019138756, "no_speech_prob": 0.023686036467552185}, {"id": 67, "seek": 24828, "start": 265.72, "end": 269.84, "text": " a supply chain injection attack, software or otherwise.", "tokens": [51236, 257, 5847, 5021, 22873, 2690, 11, 4722, 420, 5911, 13, 51442], "temperature": 0.0, "avg_logprob": -0.2144872792561849, "compression_ratio": 1.61244019138756, "no_speech_prob": 0.023686036467552185}, {"id": 68, "seek": 24828, "start": 269.84, "end": 274.12, "text": " And lastly, they could attempt a physical intrusion into our data center if we have", "tokens": [51442, 400, 16386, 11, 436, 727, 5217, 257, 4001, 17467, 5704, 666, 527, 1412, 3056, 498, 321, 362, 51656], "temperature": 0.0, "avg_logprob": -0.2144872792561849, "compression_ratio": 1.61244019138756, "no_speech_prob": 0.023686036467552185}, {"id": 69, "seek": 27412, "start": 274.12, "end": 278.28000000000003, "text": " something on prem or a virtualization later or a cloud provider or the cloud provider", "tokens": [50364, 746, 322, 5624, 420, 257, 6374, 2144, 1780, 420, 257, 4588, 12398, 420, 264, 4588, 12398, 50572], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 70, "seek": 27412, "start": 278.28000000000003, "end": 282.28000000000003, "text": " itself.", "tokens": [50572, 2564, 13, 50772], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 71, "seek": 27412, "start": 282.28000000000003, "end": 287.4, "text": " And the attacks aren't just specific or non-specific to services in general.", "tokens": [50772, 400, 264, 8122, 3212, 380, 445, 2685, 420, 2107, 12, 29258, 281, 3328, 294, 2674, 13, 51028], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 72, "seek": 27412, "start": 287.4, "end": 290.68, "text": " You have to think about how the functionality of your service is relevant, what you're currently", "tokens": [51028, 509, 362, 281, 519, 466, 577, 264, 14980, 295, 428, 2643, 307, 7340, 11, 437, 291, 434, 4362, 51192], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 73, "seek": 27412, "start": 290.68, "end": 291.68, "text": " building.", "tokens": [51192, 2390, 13, 51242], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 74, "seek": 27412, "start": 291.68, "end": 296.4, "text": " A malicious attacker may attempt to utilize how your resources are built, how your end", "tokens": [51242, 316, 33496, 35871, 815, 5217, 281, 16117, 577, 428, 3593, 366, 3094, 11, 577, 428, 917, 51478], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 75, "seek": 27412, "start": 296.4, "end": 300.4, "text": " points are functioned specifically in your case.", "tokens": [51478, 2793, 366, 2445, 292, 4682, 294, 428, 1389, 13, 51678], "temperature": 0.0, "avg_logprob": -0.17635154724121094, "compression_ratio": 1.7208333333333334, "no_speech_prob": 0.035136155784130096}, {"id": 76, "seek": 30040, "start": 300.4, "end": 308.4, "text": " In AuthWrist, we offer multi-tenant security capabilities that allow our tenants, our customers,", "tokens": [50364, 682, 40231, 54, 81, 468, 11, 321, 2626, 4825, 12, 1147, 394, 3825, 10862, 300, 2089, 527, 31216, 11, 527, 4581, 11, 50764], "temperature": 0.0, "avg_logprob": -0.2011422974722726, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.027576912194490433}, {"id": 77, "seek": 30040, "start": 308.4, "end": 315.96, "text": " to create customized identity providers, custom user logic, even give us custom URLs.", "tokens": [50764, 281, 1884, 30581, 6575, 11330, 11, 2375, 4195, 9952, 11, 754, 976, 505, 2375, 43267, 13, 51142], "temperature": 0.0, "avg_logprob": -0.2011422974722726, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.027576912194490433}, {"id": 78, "seek": 30040, "start": 315.96, "end": 321.59999999999997, "text": " They can attempt and have attempted to utilize that configurability to compromise adjacent", "tokens": [51142, 814, 393, 5217, 293, 362, 18997, 281, 16117, 300, 22192, 2310, 281, 18577, 24441, 51424], "temperature": 0.0, "avg_logprob": -0.2011422974722726, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.027576912194490433}, {"id": 79, "seek": 30040, "start": 321.59999999999997, "end": 326.59999999999997, "text": " tenants at customers across our whole product.", "tokens": [51424, 31216, 412, 4581, 2108, 527, 1379, 1674, 13, 51674], "temperature": 0.0, "avg_logprob": -0.2011422974722726, "compression_ratio": 1.5686274509803921, "no_speech_prob": 0.027576912194490433}, {"id": 80, "seek": 32660, "start": 326.6, "end": 331.16, "text": " Okay, that's I think enough for a threat model that we can all agree are problems across", "tokens": [50364, 1033, 11, 300, 311, 286, 519, 1547, 337, 257, 4734, 2316, 300, 321, 393, 439, 3986, 366, 2740, 2108, 50592], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 81, "seek": 32660, "start": 331.16, "end": 332.16, "text": " the board.", "tokens": [50592, 264, 3150, 13, 50642], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 82, "seek": 32660, "start": 332.16, "end": 335.76000000000005, "text": " Now I want to jump to actual solutions.", "tokens": [50642, 823, 286, 528, 281, 3012, 281, 3539, 6547, 13, 50822], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 83, "seek": 32660, "start": 335.76000000000005, "end": 337.96000000000004, "text": " First up is input validation.", "tokens": [50822, 2386, 493, 307, 4846, 24071, 13, 50932], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 84, "seek": 32660, "start": 337.96000000000004, "end": 341.76000000000005, "text": " To deal with the threat of injection attacks, we can add input validation.", "tokens": [50932, 1407, 2028, 365, 264, 4734, 295, 22873, 8122, 11, 321, 393, 909, 4846, 24071, 13, 51122], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 85, "seek": 32660, "start": 341.76000000000005, "end": 346.96000000000004, "text": " And I honestly, I feel kind of silly putting this slide up here because I feel like most", "tokens": [51122, 400, 286, 6095, 11, 286, 841, 733, 295, 11774, 3372, 341, 4137, 493, 510, 570, 286, 841, 411, 881, 51382], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 86, "seek": 32660, "start": 346.96000000000004, "end": 349.6, "text": " of us know about this problem.", "tokens": [51382, 295, 505, 458, 466, 341, 1154, 13, 51514], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 87, "seek": 32660, "start": 349.6, "end": 354.16, "text": " But I feel like every single day, every week, I hear about some problem with some public", "tokens": [51514, 583, 286, 841, 411, 633, 2167, 786, 11, 633, 1243, 11, 286, 1568, 466, 512, 1154, 365, 512, 1908, 51742], "temperature": 0.0, "avg_logprob": -0.13290633325991424, "compression_ratio": 1.6840148698884758, "no_speech_prob": 0.0850486233830452}, {"id": 88, "seek": 35416, "start": 354.16, "end": 360.32000000000005, "text": " company who had an issue that could have been resolved by verifying that the request", "tokens": [50364, 2237, 567, 632, 364, 2734, 300, 727, 362, 668, 20772, 538, 1306, 5489, 300, 264, 5308, 50672], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 89, "seek": 35416, "start": 360.32000000000005, "end": 364.04, "text": " they are getting matched their expectations.", "tokens": [50672, 436, 366, 1242, 21447, 641, 9843, 13, 50858], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 90, "seek": 35416, "start": 364.04, "end": 368.28000000000003, "text": " Well, we already thought about our expectations a little bit.", "tokens": [50858, 1042, 11, 321, 1217, 1194, 466, 527, 9843, 257, 707, 857, 13, 51070], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 91, "seek": 35416, "start": 368.28000000000003, "end": 371.92, "text": " And if you were listening in the last talk, we learned about the open API specification,", "tokens": [51070, 400, 498, 291, 645, 4764, 294, 264, 1036, 751, 11, 321, 3264, 466, 264, 1269, 9362, 31256, 11, 51252], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 92, "seek": 35416, "start": 371.92, "end": 376.08000000000004, "text": " which documents our API in a programmatic way.", "tokens": [51252, 597, 8512, 527, 9362, 294, 257, 1461, 25915, 636, 13, 51460], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 93, "seek": 35416, "start": 376.08000000000004, "end": 382.44000000000005, "text": " Well, we could potentially take that programmatic documentation and utilize it to verify those", "tokens": [51460, 1042, 11, 321, 727, 7263, 747, 300, 1461, 25915, 14333, 293, 16117, 309, 281, 16888, 729, 51778], "temperature": 0.0, "avg_logprob": -0.17217765315886466, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.022970477119088173}, {"id": 94, "seek": 38244, "start": 382.44, "end": 387.08, "text": " same expectations on the request we're getting into our service.", "tokens": [50364, 912, 9843, 322, 264, 5308, 321, 434, 1242, 666, 527, 2643, 13, 50596], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 95, "seek": 38244, "start": 387.08, "end": 392.44, "text": " Here's an example from Authris where we have group management.", "tokens": [50596, 1692, 311, 364, 1365, 490, 6049, 1703, 271, 689, 321, 362, 1594, 4592, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 96, "seek": 38244, "start": 392.44, "end": 394.84, "text": " This actually creates user groups.", "tokens": [50864, 639, 767, 7829, 4195, 3935, 13, 50984], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 97, "seek": 38244, "start": 394.84, "end": 397.76, "text": " And on the left, you can actually see the schema for this endpoint.", "tokens": [50984, 400, 322, 264, 1411, 11, 291, 393, 767, 536, 264, 34078, 337, 341, 35795, 13, 51130], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 98, "seek": 38244, "start": 397.76, "end": 401.56, "text": " It's fairly bare here and uses a common component groups.", "tokens": [51130, 467, 311, 6457, 6949, 510, 293, 4960, 257, 2689, 6542, 3935, 13, 51320], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 99, "seek": 38244, "start": 401.56, "end": 407.84, "text": " On the right, you can see the example of an open API Explorer tool automatically rendering", "tokens": [51320, 1282, 264, 558, 11, 291, 393, 536, 264, 1365, 295, 364, 1269, 9362, 31895, 2290, 6772, 22407, 51634], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 100, "seek": 38244, "start": 407.84, "end": 410.88, "text": " it.", "tokens": [51634, 309, 13, 51786], "temperature": 0.0, "avg_logprob": -0.1924239016593771, "compression_ratio": 1.602510460251046, "no_speech_prob": 0.013220894150435925}, {"id": 101, "seek": 41088, "start": 410.88, "end": 417.15999999999997, "text": " So we can take the schema and what I want to do is build up a place where we can store", "tokens": [50364, 407, 321, 393, 747, 264, 34078, 293, 437, 286, 528, 281, 360, 307, 1322, 493, 257, 1081, 689, 321, 393, 3531, 50678], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 102, "seek": 41088, "start": 417.15999999999997, "end": 419.52, "text": " the validation of all of our endpoints.", "tokens": [50678, 264, 24071, 295, 439, 295, 527, 917, 20552, 13, 50796], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 103, "seek": 41088, "start": 419.52, "end": 424.12, "text": " So when we add additional endpoints to our service, they will automatically get the security", "tokens": [50796, 407, 562, 321, 909, 4497, 917, 20552, 281, 527, 2643, 11, 436, 486, 6772, 483, 264, 3825, 51026], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 104, "seek": 41088, "start": 424.12, "end": 425.44, "text": " of input validation.", "tokens": [51026, 295, 4846, 24071, 13, 51092], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 105, "seek": 41088, "start": 425.44, "end": 427.6, "text": " So let's create a security middleware.", "tokens": [51092, 407, 718, 311, 1884, 257, 3825, 2808, 3039, 13, 51200], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 106, "seek": 41088, "start": 427.6, "end": 430.12, "text": " And I've got one here in JavaScript.", "tokens": [51200, 400, 286, 600, 658, 472, 510, 294, 15778, 13, 51326], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 107, "seek": 41088, "start": 430.12, "end": 432.32, "text": " But you can be using, of course, any language.", "tokens": [51326, 583, 291, 393, 312, 1228, 11, 295, 1164, 11, 604, 2856, 13, 51436], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 108, "seek": 41088, "start": 432.32, "end": 438.36, "text": " There are open API specification-based tools that work in whatever framework you're using.", "tokens": [51436, 821, 366, 1269, 9362, 31256, 12, 6032, 3873, 300, 589, 294, 2035, 8388, 291, 434, 1228, 13, 51738], "temperature": 0.0, "avg_logprob": -0.1216412248282597, "compression_ratio": 1.6330935251798562, "no_speech_prob": 0.012816781178116798}, {"id": 109, "seek": 43836, "start": 438.36, "end": 443.16, "text": " And I'm loading the spec up here and passing in the method, the path, the body, the headers.", "tokens": [50364, 400, 286, 478, 15114, 264, 1608, 493, 510, 293, 8437, 294, 264, 3170, 11, 264, 3100, 11, 264, 1772, 11, 264, 45101, 13, 50604], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 110, "seek": 43836, "start": 443.16, "end": 446.72, "text": " And this will get executed on every single request that we get to our service, irrelevant", "tokens": [50604, 400, 341, 486, 483, 17577, 322, 633, 2167, 5308, 300, 321, 483, 281, 527, 2643, 11, 28682, 50782], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 111, "seek": 43836, "start": 446.72, "end": 450.84000000000003, "text": " of the endpoints that we have.", "tokens": [50782, 295, 264, 917, 20552, 300, 321, 362, 13, 50988], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 112, "seek": 43836, "start": 450.84000000000003, "end": 455.24, "text": " And just like that, hopefully we've eliminated injection attacks.", "tokens": [50988, 400, 445, 411, 300, 11, 4696, 321, 600, 20308, 22873, 8122, 13, 51208], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 113, "seek": 43836, "start": 455.24, "end": 456.52000000000004, "text": " But why stop there?", "tokens": [51208, 583, 983, 1590, 456, 30, 51272], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 114, "seek": 43836, "start": 456.52000000000004, "end": 462.44, "text": " Now that we're opening up the request to do validation, we can start thinking about authentication.", "tokens": [51272, 823, 300, 321, 434, 5193, 493, 264, 5308, 281, 360, 24071, 11, 321, 393, 722, 1953, 466, 26643, 13, 51568], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 115, "seek": 43836, "start": 462.44, "end": 466.48, "text": " And authentication is required because if we don't know who the user is, we don't know", "tokens": [51568, 400, 26643, 307, 4739, 570, 498, 321, 500, 380, 458, 567, 264, 4195, 307, 11, 321, 500, 380, 458, 51770], "temperature": 0.0, "avg_logprob": -0.11857548080572561, "compression_ratio": 1.7234042553191489, "no_speech_prob": 0.0017006213311105967}, {"id": 116, "seek": 46648, "start": 466.48, "end": 468.36, "text": " if they're a potential malicious attacker.", "tokens": [50364, 498, 436, 434, 257, 3995, 33496, 35871, 13, 50458], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 117, "seek": 46648, "start": 468.36, "end": 470.72, "text": " We have no way of identifying them across requests.", "tokens": [50458, 492, 362, 572, 636, 295, 16696, 552, 2108, 12475, 13, 50576], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 118, "seek": 46648, "start": 470.72, "end": 474.04, "text": " And while we could be using something like IP addresses or some fingerprinting that's", "tokens": [50576, 400, 1339, 321, 727, 312, 1228, 746, 411, 8671, 16862, 420, 512, 30715, 278, 300, 311, 50742], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 119, "seek": 46648, "start": 474.04, "end": 483.64000000000004, "text": " blocked by most browsers today, none of them are as effective as just using user identification", "tokens": [50742, 15470, 538, 881, 36069, 965, 11, 6022, 295, 552, 366, 382, 4942, 382, 445, 1228, 4195, 22065, 51222], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 120, "seek": 46648, "start": 483.64000000000004, "end": 485.92, "text": " through authentication.", "tokens": [51222, 807, 26643, 13, 51336], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 121, "seek": 46648, "start": 485.92, "end": 490.36, "text": " And like this, we can hopefully close out the broken authentication threat that we have", "tokens": [51336, 400, 411, 341, 11, 321, 393, 4696, 1998, 484, 264, 5463, 26643, 4734, 300, 321, 362, 51558], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 122, "seek": 46648, "start": 490.36, "end": 493.12, "text": " in our threat model.", "tokens": [51558, 294, 527, 4734, 2316, 13, 51696], "temperature": 0.0, "avg_logprob": -0.11510458097353087, "compression_ratio": 1.6558704453441295, "no_speech_prob": 0.001867469516582787}, {"id": 123, "seek": 49312, "start": 493.12, "end": 496.64, "text": " And usually entails having a trusted identity provider.", "tokens": [50364, 400, 2673, 50133, 1419, 257, 16034, 6575, 12398, 13, 50540], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 124, "seek": 49312, "start": 496.64, "end": 502.96, "text": " Someone that can generate access tokens on behalf of our clients, who may be machines,", "tokens": [50540, 8734, 300, 393, 8460, 2105, 22667, 322, 9490, 295, 527, 6982, 11, 567, 815, 312, 8379, 11, 50856], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 125, "seek": 49312, "start": 502.96, "end": 508.5, "text": " IoT devices, even end users, those tokens usually look like JWTs.", "tokens": [50856, 30112, 5759, 11, 754, 917, 5022, 11, 729, 22667, 2673, 574, 411, 49885, 33424, 13, 51133], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 126, "seek": 49312, "start": 508.5, "end": 514.76, "text": " And they'll pass us those JWTs into our API through the authorization header.", "tokens": [51133, 400, 436, 603, 1320, 505, 729, 49885, 33424, 666, 527, 9362, 807, 264, 33697, 23117, 13, 51446], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 127, "seek": 49312, "start": 514.76, "end": 518.5600000000001, "text": " From there, we'll grab some data from the identity provider that allows us to verify", "tokens": [51446, 3358, 456, 11, 321, 603, 4444, 512, 1412, 490, 264, 6575, 12398, 300, 4045, 505, 281, 16888, 51636], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 128, "seek": 49312, "start": 518.5600000000001, "end": 520.76, "text": " those tokens.", "tokens": [51636, 729, 22667, 13, 51746], "temperature": 0.4, "avg_logprob": -0.18470728528368605, "compression_ratio": 1.610878661087866, "no_speech_prob": 0.06951909512281418}, {"id": 129, "seek": 52076, "start": 520.76, "end": 523.48, "text": " So let's just see what JWT actually looks like.", "tokens": [50364, 407, 718, 311, 445, 536, 437, 49885, 51, 767, 1542, 411, 13, 50500], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 130, "seek": 52076, "start": 523.48, "end": 526.28, "text": " And I'm sure someone's going to call me out and say it's pronounced jot according to", "tokens": [50500, 400, 286, 478, 988, 1580, 311, 516, 281, 818, 385, 484, 293, 584, 309, 311, 23155, 27873, 4650, 281, 50640], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 131, "seek": 52076, "start": 526.28, "end": 527.28, "text": " the RFC.", "tokens": [50640, 264, 497, 18671, 13, 50690], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 132, "seek": 52076, "start": 527.28, "end": 529.2, "text": " So I'm just going to say I absolutely know that.", "tokens": [50690, 407, 286, 478, 445, 516, 281, 584, 286, 3122, 458, 300, 13, 50786], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 133, "seek": 52076, "start": 529.2, "end": 531.3199999999999, "text": " But not everyone knows what a JWT is.", "tokens": [50786, 583, 406, 1518, 3255, 437, 257, 49885, 51, 307, 13, 50892], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 134, "seek": 52076, "start": 531.3199999999999, "end": 535.8, "text": " And so it's easy to remember by the letters rather than how to pronounce it.", "tokens": [50892, 400, 370, 309, 311, 1858, 281, 1604, 538, 264, 7825, 2831, 813, 577, 281, 19567, 309, 13, 51116], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 135, "seek": 52076, "start": 535.8, "end": 541.88, "text": " So I'm just going to keep saying that a JWT has properties that can be completely configured,", "tokens": [51116, 407, 286, 478, 445, 516, 281, 1066, 1566, 300, 257, 49885, 51, 575, 7221, 300, 393, 312, 2584, 30538, 11, 51420], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 136, "seek": 52076, "start": 541.88, "end": 546.8, "text": " but at least it contains ones that have the identity provider where the token came from.", "tokens": [51420, 457, 412, 1935, 309, 8306, 2306, 300, 362, 264, 6575, 12398, 689, 264, 14862, 1361, 490, 13, 51666], "temperature": 0.0, "avg_logprob": -0.13286309648853864, "compression_ratio": 1.7304964539007093, "no_speech_prob": 0.014058882370591164}, {"id": 137, "seek": 54680, "start": 547.64, "end": 550.92, "text": " User ID that the token represents.", "tokens": [50406, 32127, 7348, 300, 264, 14862, 8855, 13, 50570], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 138, "seek": 54680, "start": 550.92, "end": 553.3199999999999, "text": " Usually there are short lived token that expires.", "tokens": [50570, 11419, 456, 366, 2099, 5152, 14862, 300, 1278, 3145, 13, 50690], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 139, "seek": 54680, "start": 553.3199999999999, "end": 557.8, "text": " I created this one and it's actually going to expire soon during the conference.", "tokens": [50690, 286, 2942, 341, 472, 293, 309, 311, 767, 516, 281, 45447, 2321, 1830, 264, 7586, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 140, "seek": 54680, "start": 557.8, "end": 561.24, "text": " And signature that allows us to verify it.", "tokens": [50914, 400, 13397, 300, 4045, 505, 281, 16888, 309, 13, 51086], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 141, "seek": 54680, "start": 561.24, "end": 565.4799999999999, "text": " So now let's extend our security middleware to close out the broken authentication.", "tokens": [51086, 407, 586, 718, 311, 10101, 527, 3825, 2808, 3039, 281, 1998, 484, 264, 5463, 26643, 13, 51298], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 142, "seek": 54680, "start": 565.4799999999999, "end": 570.4799999999999, "text": " We can just add another method in here that allows us to extract those important fields", "tokens": [51298, 492, 393, 445, 909, 1071, 3170, 294, 510, 300, 4045, 505, 281, 8947, 729, 1021, 7909, 51548], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 143, "seek": 54680, "start": 570.4799999999999, "end": 574.4799999999999, "text": " out of the JWT and then verify them.", "tokens": [51548, 484, 295, 264, 49885, 51, 293, 550, 16888, 552, 13, 51748], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 144, "seek": 54680, "start": 574.4799999999999, "end": 576.5999999999999, "text": " And maybe we're done.", "tokens": [51748, 400, 1310, 321, 434, 1096, 13, 51854], "temperature": 0.0, "avg_logprob": -0.16227347762496383, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.046023499220609665}, {"id": 145, "seek": 57660, "start": 576.6, "end": 580.84, "text": " Now I think we got to be careful not to fall into a trap here.", "tokens": [50364, 823, 286, 519, 321, 658, 281, 312, 5026, 406, 281, 2100, 666, 257, 11487, 510, 13, 50576], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 146, "seek": 57660, "start": 580.84, "end": 583.96, "text": " All of our endpoints need the same sort of authentication.", "tokens": [50576, 1057, 295, 527, 917, 20552, 643, 264, 912, 1333, 295, 26643, 13, 50732], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 147, "seek": 57660, "start": 583.96, "end": 587.48, "text": " All the services in our system may have a similar concern, right?", "tokens": [50732, 1057, 264, 3328, 294, 527, 1185, 815, 362, 257, 2531, 3136, 11, 558, 30, 50908], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 148, "seek": 57660, "start": 587.48, "end": 589.0, "text": " We want to verify on every endpoint.", "tokens": [50908, 492, 528, 281, 16888, 322, 633, 35795, 13, 50984], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 149, "seek": 57660, "start": 589.0, "end": 594.72, "text": " We may be tempted to delegate that security to another team in our company or a single", "tokens": [50984, 492, 815, 312, 29941, 281, 40999, 300, 3825, 281, 1071, 1469, 294, 527, 2237, 420, 257, 2167, 51270], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 150, "seek": 57660, "start": 594.72, "end": 597.32, "text": " component where all the requests pass through.", "tokens": [51270, 6542, 689, 439, 264, 12475, 1320, 807, 13, 51400], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 151, "seek": 57660, "start": 597.32, "end": 602.48, "text": " However, fundamentally every single one of your endpoints is at stake and you're likely", "tokens": [51400, 2908, 11, 17879, 633, 2167, 472, 295, 428, 917, 20552, 307, 412, 10407, 293, 291, 434, 3700, 51658], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 152, "seek": 57660, "start": 602.48, "end": 605.96, "text": " on the team accountable for the security of those endpoints.", "tokens": [51658, 322, 264, 1469, 18024, 337, 264, 3825, 295, 729, 917, 20552, 13, 51832], "temperature": 0.0, "avg_logprob": -0.12782296978059363, "compression_ratio": 1.7186440677966102, "no_speech_prob": 0.00015354217612184584}, {"id": 153, "seek": 60596, "start": 605.96, "end": 610.6800000000001, "text": " So when we add another component such as an API gateway into our system, we're really", "tokens": [50364, 407, 562, 321, 909, 1071, 6542, 1270, 382, 364, 9362, 28532, 666, 527, 1185, 11, 321, 434, 534, 50600], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 154, "seek": 60596, "start": 610.6800000000001, "end": 612.36, "text": " left with two options.", "tokens": [50600, 1411, 365, 732, 3956, 13, 50684], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 155, "seek": 60596, "start": 612.36, "end": 617.1600000000001, "text": " The first one is to completely ignore that component, get the tokens into our service", "tokens": [50684, 440, 700, 472, 307, 281, 2584, 11200, 300, 6542, 11, 483, 264, 22667, 666, 527, 2643, 50924], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 156, "seek": 60596, "start": 617.1600000000001, "end": 619.12, "text": " and verify them.", "tokens": [50924, 293, 16888, 552, 13, 51022], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 157, "seek": 60596, "start": 619.12, "end": 626.08, "text": " The alternative is to not trust that identity provider that's giving us the tokens and somehow", "tokens": [51022, 440, 8535, 307, 281, 406, 3361, 300, 6575, 12398, 300, 311, 2902, 505, 264, 22667, 293, 6063, 51370], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 158, "seek": 60596, "start": 626.08, "end": 629.9200000000001, "text": " trust the API gateway instead.", "tokens": [51370, 3361, 264, 9362, 28532, 2602, 13, 51562], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 159, "seek": 60596, "start": 629.9200000000001, "end": 633.52, "text": " If you're doing that, you may think, well, our identity provider isn't necessarily providing", "tokens": [51562, 759, 291, 434, 884, 300, 11, 291, 815, 519, 11, 731, 11, 527, 6575, 12398, 1943, 380, 4725, 6530, 51742], "temperature": 0.0, "avg_logprob": -0.10861927447932782, "compression_ratio": 1.7479674796747968, "no_speech_prob": 0.0007553023169748485}, {"id": 160, "seek": 63352, "start": 633.52, "end": 636.0799999999999, "text": " us what it needs to do.", "tokens": [50364, 505, 437, 309, 2203, 281, 360, 13, 50492], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 161, "seek": 63352, "start": 636.0799999999999, "end": 639.4, "text": " Maybe think about changing it.", "tokens": [50492, 2704, 519, 466, 4473, 309, 13, 50658], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 162, "seek": 63352, "start": 639.4, "end": 641.84, "text": " And like this, we can eliminate broken authentication.", "tokens": [50658, 400, 411, 341, 11, 321, 393, 13819, 5463, 26643, 13, 50780], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 163, "seek": 63352, "start": 641.84, "end": 645.84, "text": " But it's important to remember that identity is not security by itself.", "tokens": [50780, 583, 309, 311, 1021, 281, 1604, 300, 6575, 307, 406, 3825, 538, 2564, 13, 50980], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 164, "seek": 63352, "start": 645.84, "end": 649.48, "text": " Just because we know who the user is doesn't mean that they're actually allowed to perform", "tokens": [50980, 1449, 570, 321, 458, 567, 264, 4195, 307, 1177, 380, 914, 300, 436, 434, 767, 4350, 281, 2042, 51162], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 165, "seek": 63352, "start": 649.48, "end": 654.04, "text": " the action on our API that they're attempting to request.", "tokens": [51162, 264, 3069, 322, 527, 9362, 300, 436, 434, 22001, 281, 5308, 13, 51390], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 166, "seek": 63352, "start": 654.04, "end": 659.3199999999999, "text": " To do that, we need to introduce authorization.", "tokens": [51390, 1407, 360, 300, 11, 321, 643, 281, 5366, 33697, 13, 51654], "temperature": 0.0, "avg_logprob": -0.12331043776645455, "compression_ratio": 1.56198347107438, "no_speech_prob": 0.008846021257340908}, {"id": 167, "seek": 65932, "start": 659.32, "end": 665.0400000000001, "text": " Admission is verifying that the machine, service, or user actually has permission to call the", "tokens": [50364, 1999, 29797, 307, 1306, 5489, 300, 264, 3479, 11, 2643, 11, 420, 4195, 767, 575, 11226, 281, 818, 264, 50650], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 168, "seek": 65932, "start": 665.0400000000001, "end": 667.0, "text": " endpoint that they're calling.", "tokens": [50650, 35795, 300, 436, 434, 5141, 13, 50748], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 169, "seek": 65932, "start": 667.0, "end": 672.84, "text": " And to stop the broken object authorization, BOLA, for every endpoint, we need to consciously", "tokens": [50748, 400, 281, 1590, 264, 5463, 2657, 33697, 11, 363, 5046, 32, 11, 337, 633, 35795, 11, 321, 643, 281, 32538, 51040], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 170, "seek": 65932, "start": 672.84, "end": 678.6, "text": " decide what is the purpose of this endpoint for the product, what permissions make sense", "tokens": [51040, 4536, 437, 307, 264, 4334, 295, 341, 35795, 337, 264, 1674, 11, 437, 32723, 652, 2020, 51328], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 171, "seek": 65932, "start": 678.6, "end": 682.0400000000001, "text": " to actually check, and who should have access.", "tokens": [51328, 281, 767, 1520, 11, 293, 567, 820, 362, 2105, 13, 51500], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 172, "seek": 65932, "start": 682.0400000000001, "end": 687.4000000000001, "text": " The simplest thing we can do is add permissions to our JWT.", "tokens": [51500, 440, 22811, 551, 321, 393, 360, 307, 909, 32723, 281, 527, 49885, 51, 13, 51768], "temperature": 0.0, "avg_logprob": -0.18030052955704506, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.25365254282951355}, {"id": 173, "seek": 68740, "start": 687.4, "end": 693.1999999999999, "text": " Users get blanket permissions to everything basically via a property in the JWT.", "tokens": [50364, 47092, 483, 17907, 32723, 281, 1203, 1936, 5766, 257, 4707, 294, 264, 49885, 51, 13, 50654], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 174, "seek": 68740, "start": 693.1999999999999, "end": 696.6, "text": " And you'll notice that there are no resources listed here.", "tokens": [50654, 400, 291, 603, 3449, 300, 456, 366, 572, 3593, 10052, 510, 13, 50824], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 175, "seek": 68740, "start": 696.6, "end": 697.6, "text": " It's just a list of permissions.", "tokens": [50824, 467, 311, 445, 257, 1329, 295, 32723, 13, 50874], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 176, "seek": 68740, "start": 697.6, "end": 702.12, "text": " And this is the bare minimum to provide authorization in your API.", "tokens": [50874, 400, 341, 307, 264, 6949, 7285, 281, 2893, 33697, 294, 428, 9362, 13, 51100], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 177, "seek": 68740, "start": 702.12, "end": 707.84, "text": " And it only works really in simple cases that where most of your data is public, users don't", "tokens": [51100, 400, 309, 787, 1985, 534, 294, 2199, 3331, 300, 689, 881, 295, 428, 1412, 307, 1908, 11, 5022, 500, 380, 51386], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 178, "seek": 68740, "start": 707.84, "end": 712.0799999999999, "text": " really have that many roles, or the users don't really interact with each other.", "tokens": [51386, 534, 362, 300, 867, 9604, 11, 420, 264, 5022, 500, 380, 534, 4648, 365, 1184, 661, 13, 51598], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 179, "seek": 68740, "start": 712.0799999999999, "end": 717.04, "text": " However, in all but the simplest cases, it's likely not sufficient because it doesn't", "tokens": [51598, 2908, 11, 294, 439, 457, 264, 22811, 3331, 11, 309, 311, 3700, 406, 11563, 570, 309, 1177, 380, 51846], "temperature": 0.0, "avg_logprob": -0.21596858882102646, "compression_ratio": 1.6801346801346801, "no_speech_prob": 0.01001221314072609}, {"id": 180, "seek": 71704, "start": 717.04, "end": 719.4, "text": " provide granular enough control.", "tokens": [50364, 2893, 39962, 1547, 1969, 13, 50482], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 181, "seek": 71704, "start": 719.4, "end": 721.16, "text": " You can't specify the resources here.", "tokens": [50482, 509, 393, 380, 16500, 264, 3593, 510, 13, 50570], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 182, "seek": 71704, "start": 721.16, "end": 727.88, "text": " And in order to stop the broken object authorization, we need to achieve granular access control.", "tokens": [50570, 400, 294, 1668, 281, 1590, 264, 5463, 2657, 33697, 11, 321, 643, 281, 4584, 39962, 2105, 1969, 13, 50906], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 183, "seek": 71704, "start": 727.88, "end": 730.3199999999999, "text": " So we need a different access control strategy.", "tokens": [50906, 407, 321, 643, 257, 819, 2105, 1969, 5206, 13, 51028], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 184, "seek": 71704, "start": 730.3199999999999, "end": 733.0799999999999, "text": " And like that, we'll introduce resource-based.", "tokens": [51028, 400, 411, 300, 11, 321, 603, 5366, 7684, 12, 6032, 13, 51166], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 185, "seek": 71704, "start": 733.0799999999999, "end": 741.0, "text": " In resource-based, individual users get assigned specific permissions to resources.", "tokens": [51166, 682, 7684, 12, 6032, 11, 2609, 5022, 483, 13279, 2685, 32723, 281, 3593, 13, 51562], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 186, "seek": 71704, "start": 741.0, "end": 745.8, "text": " And with that, we can actually verify that they are authorized to call our endpoints,", "tokens": [51562, 400, 365, 300, 11, 321, 393, 767, 16888, 300, 436, 366, 28312, 281, 818, 527, 917, 20552, 11, 51802], "temperature": 0.0, "avg_logprob": -0.15156040769634824, "compression_ratio": 1.7601626016260163, "no_speech_prob": 0.0021825702860951424}, {"id": 187, "seek": 74580, "start": 745.8, "end": 747.0799999999999, "text": " or the specific endpoint.", "tokens": [50364, 420, 264, 2685, 35795, 13, 50428], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 188, "seek": 74580, "start": 747.0799999999999, "end": 751.28, "text": " Okay, let's extend our security middleware and close out the Bola threat.", "tokens": [50428, 1033, 11, 718, 311, 10101, 527, 3825, 2808, 3039, 293, 1998, 484, 264, 363, 4711, 4734, 13, 50638], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 189, "seek": 74580, "start": 751.28, "end": 756.0, "text": " And we'll do that by just adding another line of code to our security middleware.", "tokens": [50638, 400, 321, 603, 360, 300, 538, 445, 5127, 1071, 1622, 295, 3089, 281, 527, 3825, 2808, 3039, 13, 50874], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 190, "seek": 74580, "start": 756.0, "end": 760.92, "text": " And here I have an example from the author's SDK, but of course you can use any SDK, any", "tokens": [50874, 400, 510, 286, 362, 364, 1365, 490, 264, 3793, 311, 37135, 11, 457, 295, 1164, 291, 393, 764, 604, 37135, 11, 604, 51120], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 191, "seek": 74580, "start": 760.92, "end": 763.68, "text": " product that allows you to do this verification.", "tokens": [51120, 1674, 300, 4045, 291, 281, 360, 341, 30206, 13, 51258], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 192, "seek": 74580, "start": 763.68, "end": 768.24, "text": " Or if you're feeling adventurous in the land of security, you can try to do it yourself,", "tokens": [51258, 1610, 498, 291, 434, 2633, 46163, 294, 264, 2117, 295, 3825, 11, 291, 393, 853, 281, 360, 309, 1803, 11, 51486], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 193, "seek": 74580, "start": 768.24, "end": 772.76, "text": " not something I normally recommend.", "tokens": [51486, 406, 746, 286, 5646, 2748, 13, 51712], "temperature": 0.0, "avg_logprob": -0.1913725084963098, "compression_ratio": 1.6629213483146068, "no_speech_prob": 0.06558047235012054}, {"id": 194, "seek": 77276, "start": 772.76, "end": 775.88, "text": " And with granular access control, you can actually scope down the permissions of each", "tokens": [50364, 400, 365, 39962, 2105, 1969, 11, 291, 393, 767, 11923, 760, 264, 32723, 295, 1184, 50520], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 195, "seek": 77276, "start": 775.88, "end": 779.96, "text": " of your endpoints to only what is absolutely required.", "tokens": [50520, 295, 428, 917, 20552, 281, 787, 437, 307, 3122, 4739, 13, 50724], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 196, "seek": 77276, "start": 779.96, "end": 784.8, "text": " And this is known as the principle of least privilege.", "tokens": [50724, 400, 341, 307, 2570, 382, 264, 8665, 295, 1935, 12122, 13, 50966], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 197, "seek": 77276, "start": 784.8, "end": 789.6, "text": " Now it should be self-evident that the more granular our permissions are, the more secure", "tokens": [50966, 823, 309, 820, 312, 2698, 12, 13379, 1078, 300, 264, 544, 39962, 527, 32723, 366, 11, 264, 544, 7144, 51206], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 198, "seek": 77276, "start": 789.6, "end": 791.4, "text": " our API is.", "tokens": [51206, 527, 9362, 307, 13, 51296], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 199, "seek": 77276, "start": 791.4, "end": 796.36, "text": " Because if we don't have granularity, then users likely probably have access to do too", "tokens": [51296, 1436, 498, 321, 500, 380, 362, 39962, 507, 11, 550, 5022, 3700, 1391, 362, 2105, 281, 360, 886, 51544], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 200, "seek": 77276, "start": 796.36, "end": 797.64, "text": " much in our service.", "tokens": [51544, 709, 294, 527, 2643, 13, 51608], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 201, "seek": 77276, "start": 797.64, "end": 802.36, "text": " And a malicious attacker that gains access to or impersonates one of our users while", "tokens": [51608, 400, 257, 33496, 35871, 300, 16823, 2105, 281, 420, 38147, 1024, 472, 295, 527, 5022, 1339, 51844], "temperature": 0.0, "avg_logprob": -0.13232280861618173, "compression_ratio": 1.6955017301038062, "no_speech_prob": 0.006096749100834131}, {"id": 202, "seek": 80236, "start": 802.36, "end": 805.4, "text": " having access to potentially all of their data.", "tokens": [50364, 1419, 2105, 281, 7263, 439, 295, 641, 1412, 13, 50516], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 203, "seek": 80236, "start": 805.4, "end": 809.8000000000001, "text": " The only way to prevent Bola is have a granular access control strategy and implore the principle", "tokens": [50516, 440, 787, 636, 281, 4871, 363, 4711, 307, 362, 257, 39962, 2105, 1969, 5206, 293, 8484, 418, 264, 8665, 50736], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 204, "seek": 80236, "start": 809.8000000000001, "end": 811.3000000000001, "text": " of least privilege.", "tokens": [50736, 295, 1935, 12122, 13, 50811], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 205, "seek": 80236, "start": 811.3000000000001, "end": 817.64, "text": " Don't be this company that asks to delete all of my emails and all of my calendars.", "tokens": [50811, 1468, 380, 312, 341, 2237, 300, 8962, 281, 12097, 439, 295, 452, 12524, 293, 439, 295, 452, 37022, 685, 13, 51128], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 206, "seek": 80236, "start": 817.64, "end": 820.0, "text": " It's just totally unnecessary.", "tokens": [51128, 467, 311, 445, 3879, 19350, 13, 51246], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 207, "seek": 80236, "start": 820.0, "end": 825.2, "text": " Also don't be that company that lets people do this.", "tokens": [51246, 2743, 500, 380, 312, 300, 2237, 300, 6653, 561, 360, 341, 13, 51506], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 208, "seek": 80236, "start": 825.2, "end": 827.76, "text": " I should at least be able to uncheck just the delete part.", "tokens": [51506, 286, 820, 412, 1935, 312, 1075, 281, 46672, 445, 264, 12097, 644, 13, 51634], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 209, "seek": 80236, "start": 827.76, "end": 831.2, "text": " Yeah, sure, maybe I trust you to read and compose some emails.", "tokens": [51634, 865, 11, 988, 11, 1310, 286, 3361, 291, 281, 1401, 293, 35925, 512, 12524, 13, 51806], "temperature": 0.0, "avg_logprob": -0.16905916148218617, "compression_ratio": 1.7105263157894737, "no_speech_prob": 0.021609805524349213}, {"id": 210, "seek": 83120, "start": 831.2, "end": 835.44, "text": " Read just some, not all of them.", "tokens": [50364, 17604, 445, 512, 11, 406, 439, 295, 552, 13, 50576], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 211, "seek": 83120, "start": 835.44, "end": 842.4000000000001, "text": " And this is actually about as far as we can get with static code in a middleware that's", "tokens": [50576, 400, 341, 307, 767, 466, 382, 1400, 382, 321, 393, 483, 365, 13437, 3089, 294, 257, 2808, 3039, 300, 311, 50924], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 212, "seek": 83120, "start": 842.4000000000001, "end": 844.32, "text": " running.", "tokens": [50924, 2614, 13, 51020], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 213, "seek": 83120, "start": 844.32, "end": 848.12, "text": " If we want to deal with some of the threats around our infrastructure, we need to take", "tokens": [51020, 759, 321, 528, 281, 2028, 365, 512, 295, 264, 14909, 926, 527, 6896, 11, 321, 643, 281, 747, 51210], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 214, "seek": 83120, "start": 848.12, "end": 853.6800000000001, "text": " it to the next level and add some monitoring and logging.", "tokens": [51210, 309, 281, 264, 958, 1496, 293, 909, 512, 11028, 293, 27991, 13, 51488], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 215, "seek": 83120, "start": 853.6800000000001, "end": 859.48, "text": " We've taken care of most of the threats at this point, but there are still some left,", "tokens": [51488, 492, 600, 2726, 1127, 295, 881, 295, 264, 14909, 412, 341, 935, 11, 457, 456, 366, 920, 512, 1411, 11, 51778], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 216, "seek": 83120, "start": 859.48, "end": 861.12, "text": " right?", "tokens": [51778, 558, 30, 51860], "temperature": 0.0, "avg_logprob": -0.16738013065222537, "compression_ratio": 1.6096491228070176, "no_speech_prob": 0.014502019621431828}, {"id": 217, "seek": 86112, "start": 861.12, "end": 870.72, "text": " Now if we take a look at how the DDoS text works, taking the next step is potentially", "tokens": [50364, 823, 498, 321, 747, 257, 574, 412, 577, 264, 413, 7653, 50, 2487, 1985, 11, 1940, 264, 958, 1823, 307, 7263, 50844], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 218, "seek": 86112, "start": 870.72, "end": 876.16, "text": " throwing some sort of additional component into our architecture that allows us to detect", "tokens": [50844, 10238, 512, 1333, 295, 4497, 6542, 666, 527, 9482, 300, 4045, 505, 281, 5531, 51116], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 219, "seek": 86112, "start": 876.16, "end": 877.16, "text": " when there's a problem.", "tokens": [51116, 562, 456, 311, 257, 1154, 13, 51166], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 220, "seek": 86112, "start": 877.16, "end": 881.32, "text": " And we can do that by adding what's usually known as an API firewall or a web application", "tokens": [51166, 400, 321, 393, 360, 300, 538, 5127, 437, 311, 2673, 2570, 382, 364, 9362, 36109, 420, 257, 3670, 3861, 51374], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 221, "seek": 86112, "start": 881.32, "end": 882.32, "text": " firewall.", "tokens": [51374, 36109, 13, 51424], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 222, "seek": 86112, "start": 882.32, "end": 887.12, "text": " We'll attempt to dynamically block attacks as they happen.", "tokens": [51424, 492, 603, 5217, 281, 43492, 3461, 8122, 382, 436, 1051, 13, 51664], "temperature": 0.0, "avg_logprob": -0.16885256493228606, "compression_ratio": 1.5299145299145298, "no_speech_prob": 0.0003250140871386975}, {"id": 223, "seek": 88712, "start": 888.12, "end": 894.08, "text": " It can contain dynamic rules that look for suspicious activity and are executed based", "tokens": [50414, 467, 393, 5304, 8546, 4474, 300, 574, 337, 17931, 5191, 293, 366, 17577, 2361, 50712], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 224, "seek": 88712, "start": 894.08, "end": 901.68, "text": " off of multiple request patterns.", "tokens": [50712, 766, 295, 3866, 5308, 8294, 13, 51092], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 225, "seek": 88712, "start": 901.68, "end": 905.8, "text": " Some requests we'll get through and we'll end up logging them.", "tokens": [51092, 2188, 12475, 321, 603, 483, 807, 293, 321, 603, 917, 493, 27991, 552, 13, 51298], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 226, "seek": 88712, "start": 905.8, "end": 907.2, "text": " We have to make sure we're logging them.", "tokens": [51298, 492, 362, 281, 652, 988, 321, 434, 27991, 552, 13, 51368], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 227, "seek": 88712, "start": 907.2, "end": 911.5600000000001, "text": " And then we can process that and potentially look for patterns within our service, maybe", "tokens": [51368, 400, 550, 321, 393, 1399, 300, 293, 7263, 574, 337, 8294, 1951, 527, 2643, 11, 1310, 51586], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 228, "seek": 88712, "start": 911.5600000000001, "end": 913.8, "text": " a couple of 200 in a particular way.", "tokens": [51586, 257, 1916, 295, 2331, 294, 257, 1729, 636, 13, 51698], "temperature": 0.0, "avg_logprob": -0.20351393826036568, "compression_ratio": 1.551111111111111, "no_speech_prob": 0.014061618596315384}, {"id": 229, "seek": 91380, "start": 913.8, "end": 916.8399999999999, "text": " And we can use that to dynamically update our rules.", "tokens": [50364, 400, 321, 393, 764, 300, 281, 43492, 5623, 527, 4474, 13, 50516], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 230, "seek": 91380, "start": 916.8399999999999, "end": 921.52, "text": " And if we identify something that the firewall isn't blocking at that moment, well, we can", "tokens": [50516, 400, 498, 321, 5876, 746, 300, 264, 36109, 1943, 380, 17776, 412, 300, 1623, 11, 731, 11, 321, 393, 50750], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 231, "seek": 91380, "start": 921.52, "end": 925.16, "text": " actually update those rules and stop an attack as it happens.", "tokens": [50750, 767, 5623, 729, 4474, 293, 1590, 364, 2690, 382, 309, 2314, 13, 50932], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 232, "seek": 91380, "start": 925.16, "end": 930.1999999999999, "text": " And those updated rules will continue to live on into the future.", "tokens": [50932, 400, 729, 10588, 4474, 486, 2354, 281, 1621, 322, 666, 264, 2027, 13, 51184], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 233, "seek": 91380, "start": 930.1999999999999, "end": 937.56, "text": " So you throw in some monitoring and logging and you notice something, a spike that looks", "tokens": [51184, 407, 291, 3507, 294, 512, 11028, 293, 27991, 293, 291, 3449, 746, 11, 257, 21053, 300, 1542, 51552], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 234, "seek": 91380, "start": 937.56, "end": 938.56, "text": " like this.", "tokens": [51552, 411, 341, 13, 51602], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 235, "seek": 91380, "start": 938.56, "end": 939.56, "text": " Is this a problem?", "tokens": [51602, 1119, 341, 257, 1154, 30, 51652], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 236, "seek": 91380, "start": 939.56, "end": 941.0799999999999, "text": " Does it look like an attack?", "tokens": [51652, 4402, 309, 574, 411, 364, 2690, 30, 51728], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 237, "seek": 91380, "start": 941.0799999999999, "end": 943.0799999999999, "text": " Who thinks this is an attack?", "tokens": [51728, 2102, 7309, 341, 307, 364, 2690, 30, 51828], "temperature": 0.0, "avg_logprob": -0.12259812940630996, "compression_ratio": 1.75390625, "no_speech_prob": 0.001867407001554966}, {"id": 238, "seek": 94308, "start": 943.36, "end": 944.36, "text": " No one.", "tokens": [50378, 883, 472, 13, 50428], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 239, "seek": 94308, "start": 944.36, "end": 947.5600000000001, "text": " Everyone thinks that this is totally normal behavior.", "tokens": [50428, 5198, 7309, 300, 341, 307, 3879, 2710, 5223, 13, 50588], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 240, "seek": 94308, "start": 947.5600000000001, "end": 951.0, "text": " I mean, users change things all the time.", "tokens": [50588, 286, 914, 11, 5022, 1319, 721, 439, 264, 565, 13, 50760], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 241, "seek": 94308, "start": 951.0, "end": 955.72, "text": " So your customer causes this to happen in your service and you're like, whatever, it's not", "tokens": [50760, 407, 428, 5474, 7700, 341, 281, 1051, 294, 428, 2643, 293, 291, 434, 411, 11, 2035, 11, 309, 311, 406, 50996], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 242, "seek": 94308, "start": 955.72, "end": 957.0, "text": " a big deal.", "tokens": [50996, 257, 955, 2028, 13, 51060], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 243, "seek": 94308, "start": 957.0, "end": 961.5600000000001, "text": " And it may not be anything.", "tokens": [51060, 400, 309, 815, 406, 312, 1340, 13, 51288], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 244, "seek": 94308, "start": 961.5600000000001, "end": 964.72, "text": " Realistically, spikes like this don't mean that much.", "tokens": [51288, 8467, 20458, 11, 28997, 411, 341, 500, 380, 914, 300, 709, 13, 51446], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 245, "seek": 94308, "start": 964.72, "end": 966.36, "text": " What's important is what's relevant for your product.", "tokens": [51446, 708, 311, 1021, 307, 437, 311, 7340, 337, 428, 1674, 13, 51528], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 246, "seek": 94308, "start": 966.36, "end": 970.88, "text": " For us, we monitor and validate what we call the authorization ratio.", "tokens": [51528, 1171, 505, 11, 321, 6002, 293, 29562, 437, 321, 818, 264, 33697, 8509, 13, 51754], "temperature": 0.0, "avg_logprob": -0.219938139481978, "compression_ratio": 1.5968992248062015, "no_speech_prob": 0.026744069531559944}, {"id": 247, "seek": 97088, "start": 970.88, "end": 975.8, "text": " That's successful, authorized request to ones that are actually blocked, where the permissions", "tokens": [50364, 663, 311, 4406, 11, 28312, 5308, 281, 2306, 300, 366, 767, 15470, 11, 689, 264, 32723, 50610], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 248, "seek": 97088, "start": 975.8, "end": 979.76, "text": " don't match or something fundamentally changed about how it's being used.", "tokens": [50610, 500, 380, 2995, 420, 746, 17879, 3105, 466, 577, 309, 311, 885, 1143, 13, 50808], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 249, "seek": 97088, "start": 979.76, "end": 983.4399999999999, "text": " Even though this came up as one spike, the truth is that this was actually two individual", "tokens": [50808, 2754, 1673, 341, 1361, 493, 382, 472, 21053, 11, 264, 3494, 307, 300, 341, 390, 767, 732, 2609, 50992], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 250, "seek": 97088, "start": 983.4399999999999, "end": 989.56, "text": " problems that are API firewall, caught, and our anomaly detection, which this is actually", "tokens": [50992, 2740, 300, 366, 9362, 36109, 11, 5415, 11, 293, 527, 42737, 17784, 11, 597, 341, 307, 767, 51298], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 251, "seek": 97088, "start": 989.56, "end": 991.52, "text": " ran to grab and pull out.", "tokens": [51298, 5872, 281, 4444, 293, 2235, 484, 13, 51396], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 252, "seek": 97088, "start": 991.52, "end": 997.08, "text": " This is actually from Grafana.", "tokens": [51396, 639, 307, 767, 490, 8985, 69, 2095, 13, 51674], "temperature": 0.0, "avg_logprob": -0.17404148426461727, "compression_ratio": 1.6007905138339922, "no_speech_prob": 0.022971920669078827}, {"id": 253, "seek": 99708, "start": 997.08, "end": 1001.32, "text": " Depending on the severity of the attack, the rules may completely shut out all requests", "tokens": [50364, 22539, 322, 264, 35179, 295, 264, 2690, 11, 264, 4474, 815, 2584, 5309, 484, 439, 12475, 50576], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 254, "seek": 99708, "start": 1001.32, "end": 1005.0400000000001, "text": " from a particular customer or a specific service client, depending on what's actually going", "tokens": [50576, 490, 257, 1729, 5474, 420, 257, 2685, 2643, 6423, 11, 5413, 322, 437, 311, 767, 516, 50762], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 255, "seek": 99708, "start": 1005.0400000000001, "end": 1006.0400000000001, "text": " on.", "tokens": [50762, 322, 13, 50812], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 256, "seek": 99708, "start": 1006.0400000000001, "end": 1007.0400000000001, "text": " OK.", "tokens": [50812, 2264, 13, 50862], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 257, "seek": 99708, "start": 1007.0400000000001, "end": 1012.32, "text": " I said a lot of things, so I would like to summarize.", "tokens": [50862, 286, 848, 257, 688, 295, 721, 11, 370, 286, 576, 411, 281, 20858, 13, 51126], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 258, "seek": 99708, "start": 1012.32, "end": 1018.5200000000001, "text": " The most important thing we can do is identify our threat model.", "tokens": [51126, 440, 881, 1021, 551, 321, 393, 360, 307, 5876, 527, 4734, 2316, 13, 51436], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 259, "seek": 99708, "start": 1018.5200000000001, "end": 1024.1200000000001, "text": " We built one here and it includes injection attacks, broken user authentication, Bola,", "tokens": [51436, 492, 3094, 472, 510, 293, 309, 5974, 22873, 8122, 11, 5463, 4195, 26643, 11, 363, 4711, 11, 51716], "temperature": 0.0, "avg_logprob": -0.12592555085817972, "compression_ratio": 1.5232558139534884, "no_speech_prob": 0.012052200734615326}, {"id": 260, "seek": 102412, "start": 1024.12, "end": 1027.7199999999998, "text": " and DDS attacks amongst some other ones.", "tokens": [50364, 293, 413, 11844, 8122, 12918, 512, 661, 2306, 13, 50544], "temperature": 0.0, "avg_logprob": -0.16901193765493538, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0008830040460452437}, {"id": 261, "seek": 102412, "start": 1027.7199999999998, "end": 1035.2399999999998, "text": " Then we created custom solutions specifically to deal with our threats, validating our inputs,", "tokens": [50544, 1396, 321, 2942, 2375, 6547, 4682, 281, 2028, 365, 527, 14909, 11, 7363, 990, 527, 15743, 11, 50920], "temperature": 0.0, "avg_logprob": -0.16901193765493538, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0008830040460452437}, {"id": 262, "seek": 102412, "start": 1035.2399999999998, "end": 1042.2399999999998, "text": " having user identity, granular access control, and then adding dynamic rules.", "tokens": [50920, 1419, 4195, 6575, 11, 39962, 2105, 1969, 11, 293, 550, 5127, 8546, 4474, 13, 51270], "temperature": 0.0, "avg_logprob": -0.16901193765493538, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0008830040460452437}, {"id": 263, "seek": 102412, "start": 1042.2399999999998, "end": 1047.52, "text": " This is great when everything goes to plan, but sometimes it doesn't.", "tokens": [51270, 639, 307, 869, 562, 1203, 1709, 281, 1393, 11, 457, 2171, 309, 1177, 380, 13, 51534], "temperature": 0.0, "avg_logprob": -0.16901193765493538, "compression_ratio": 1.4816753926701571, "no_speech_prob": 0.0008830040460452437}, {"id": 264, "seek": 104752, "start": 1047.68, "end": 1053.96, "text": " And when it does, we need to really understand what we're doing.", "tokens": [50372, 400, 562, 309, 775, 11, 321, 643, 281, 534, 1223, 437, 321, 434, 884, 13, 50686], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 265, "seek": 104752, "start": 1053.96, "end": 1056.32, "text": " So let's take a look at some things not to do.", "tokens": [50686, 407, 718, 311, 747, 257, 574, 412, 512, 721, 406, 281, 360, 13, 50804], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 266, "seek": 104752, "start": 1056.32, "end": 1057.52, "text": " The first one is missing our threat model.", "tokens": [50804, 440, 700, 472, 307, 5361, 527, 4734, 2316, 13, 50864], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 267, "seek": 104752, "start": 1057.52, "end": 1058.96, "text": " I think I've said this enough.", "tokens": [50864, 286, 519, 286, 600, 848, 341, 1547, 13, 50936], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 268, "seek": 104752, "start": 1058.96, "end": 1064.44, "text": " If we don't have a threat model, then we don't know what we're building is sufficient, useful,", "tokens": [50936, 759, 321, 500, 380, 362, 257, 4734, 2316, 11, 550, 321, 500, 380, 458, 437, 321, 434, 2390, 307, 11563, 11, 4420, 11, 51210], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 269, "seek": 104752, "start": 1064.44, "end": 1065.6, "text": " or even relevant.", "tokens": [51210, 420, 754, 7340, 13, 51268], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 270, "seek": 104752, "start": 1065.6, "end": 1070.44, "text": " It's probably even harmful.", "tokens": [51268, 467, 311, 1391, 754, 19727, 13, 51510], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 271, "seek": 104752, "start": 1070.44, "end": 1074.96, "text": " Throwing security over the wall.", "tokens": [51510, 22228, 278, 3825, 670, 264, 2929, 13, 51736], "temperature": 0.0, "avg_logprob": -0.17288602440102588, "compression_ratio": 1.6026785714285714, "no_speech_prob": 0.007576794363558292}, {"id": 272, "seek": 107496, "start": 1074.96, "end": 1079.48, "text": " It's nice to be able to utilize components from another team to help us build up a more", "tokens": [50364, 467, 311, 1481, 281, 312, 1075, 281, 16117, 6677, 490, 1071, 1469, 281, 854, 505, 1322, 493, 257, 544, 50590], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 273, "seek": 107496, "start": 1079.48, "end": 1080.48, "text": " secure API.", "tokens": [50590, 7144, 9362, 13, 50640], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 274, "seek": 107496, "start": 1080.48, "end": 1085.0, "text": " But fundamentally, your APIs are your responsibility.", "tokens": [50640, 583, 17879, 11, 428, 21445, 366, 428, 6357, 13, 50866], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 275, "seek": 107496, "start": 1085.0, "end": 1089.92, "text": " If something happens, who is held accountable for the lack of security there?", "tokens": [50866, 759, 746, 2314, 11, 567, 307, 5167, 18024, 337, 264, 5011, 295, 3825, 456, 30, 51112], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 276, "seek": 107496, "start": 1089.92, "end": 1097.44, "text": " It isn't a replacement to use another team.", "tokens": [51112, 467, 1943, 380, 257, 14419, 281, 764, 1071, 1469, 13, 51488], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 277, "seek": 107496, "start": 1097.44, "end": 1099.08, "text": " Internal services.", "tokens": [51488, 47836, 3328, 13, 51570], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 278, "seek": 107496, "start": 1099.08, "end": 1101.3600000000001, "text": " There's no such thing as an internal service.", "tokens": [51570, 821, 311, 572, 1270, 551, 382, 364, 6920, 2643, 13, 51684], "temperature": 0.0, "avg_logprob": -0.17089610380284925, "compression_ratio": 1.5596330275229358, "no_speech_prob": 0.01132878102362156}, {"id": 279, "seek": 110136, "start": 1102.36, "end": 1106.6799999999998, "text": " There's just services that don't have any external requests yet.", "tokens": [50414, 821, 311, 445, 3328, 300, 500, 380, 362, 604, 8320, 12475, 1939, 13, 50630], "temperature": 0.0, "avg_logprob": -0.19251421519688197, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.003944522235542536}, {"id": 280, "seek": 110136, "start": 1106.6799999999998, "end": 1111.6, "text": " Lateral attacks from other services from malicious threat actors may still end up in your API,", "tokens": [50630, 11965, 304, 8122, 490, 661, 3328, 490, 33496, 4734, 10037, 815, 920, 917, 493, 294, 428, 9362, 11, 50876], "temperature": 0.0, "avg_logprob": -0.19251421519688197, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.003944522235542536}, {"id": 281, "seek": 110136, "start": 1111.6, "end": 1118.24, "text": " utilizing a proxy, a gateway, or another service that could be one of your only customers", "tokens": [50876, 26775, 257, 29690, 11, 257, 28532, 11, 420, 1071, 2643, 300, 727, 312, 472, 295, 428, 787, 4581, 51208], "temperature": 0.0, "avg_logprob": -0.19251421519688197, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.003944522235542536}, {"id": 282, "seek": 110136, "start": 1118.24, "end": 1124.9199999999998, "text": " inside your company.", "tokens": [51208, 1854, 428, 2237, 13, 51542], "temperature": 0.0, "avg_logprob": -0.19251421519688197, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.003944522235542536}, {"id": 283, "seek": 110136, "start": 1124.9199999999998, "end": 1129.36, "text": " At some point, your service is going to become public or have public callers, potentially.", "tokens": [51542, 1711, 512, 935, 11, 428, 2643, 307, 516, 281, 1813, 1908, 420, 362, 1908, 818, 433, 11, 7263, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19251421519688197, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.003944522235542536}, {"id": 284, "seek": 112936, "start": 1129.36, "end": 1132.9599999999998, "text": " And if you haven't built your service with security in mind, then you likely have some", "tokens": [50364, 400, 498, 291, 2378, 380, 3094, 428, 2643, 365, 3825, 294, 1575, 11, 550, 291, 3700, 362, 512, 50544], "temperature": 0.0, "avg_logprob": -0.10109274122450086, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001064868993125856}, {"id": 285, "seek": 112936, "start": 1132.9599999999998, "end": 1139.9599999999998, "text": " of the threats that we've actually added into our threat model already today.", "tokens": [50544, 295, 264, 14909, 300, 321, 600, 767, 3869, 666, 527, 4734, 2316, 1217, 965, 13, 50894], "temperature": 0.0, "avg_logprob": -0.10109274122450086, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001064868993125856}, {"id": 286, "seek": 112936, "start": 1139.9599999999998, "end": 1147.04, "text": " So treat all your callers as externals and that your API could be considered public.", "tokens": [50894, 407, 2387, 439, 428, 818, 433, 382, 30360, 1124, 293, 300, 428, 9362, 727, 312, 4888, 1908, 13, 51248], "temperature": 0.0, "avg_logprob": -0.10109274122450086, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001064868993125856}, {"id": 287, "seek": 112936, "start": 1147.04, "end": 1148.28, "text": " Building monoliths.", "tokens": [51248, 18974, 1108, 29131, 82, 13, 51310], "temperature": 0.0, "avg_logprob": -0.10109274122450086, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001064868993125856}, {"id": 288, "seek": 112936, "start": 1148.28, "end": 1154.6, "text": " I think at this point by 2024, we should know that microservices are more secure than monoliths.", "tokens": [51310, 286, 519, 412, 341, 935, 538, 45237, 11, 321, 820, 458, 300, 15547, 47480, 366, 544, 7144, 813, 1108, 29131, 82, 13, 51626], "temperature": 0.0, "avg_logprob": -0.10109274122450086, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.001064868993125856}, {"id": 289, "seek": 115460, "start": 1154.6, "end": 1159.84, "text": " Sources have dedicated boundaries of which we've implemented authentication and authorization", "tokens": [50364, 318, 2749, 362, 8374, 13180, 295, 597, 321, 600, 12270, 26643, 293, 33697, 50626], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 290, "seek": 115460, "start": 1159.84, "end": 1162.08, "text": " at those boundary layers.", "tokens": [50626, 412, 729, 12866, 7914, 13, 50738], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 291, "seek": 115460, "start": 1162.08, "end": 1165.9199999999998, "text": " If something were to happen in one of our services and it becomes compromised, there's", "tokens": [50738, 759, 746, 645, 281, 1051, 294, 472, 295, 527, 3328, 293, 309, 3643, 32463, 11, 456, 311, 50930], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 292, "seek": 115460, "start": 1165.9199999999998, "end": 1168.7199999999998, "text": " a bulkhead door that's closed by default.", "tokens": [50930, 257, 16139, 1934, 2853, 300, 311, 5395, 538, 7576, 13, 51070], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 293, "seek": 115460, "start": 1168.7199999999998, "end": 1173.8799999999999, "text": " Whereas in a monolithic system, if any component becomes compromised, then our whole system", "tokens": [51070, 13813, 294, 257, 1108, 42878, 1185, 11, 498, 604, 6542, 3643, 32463, 11, 550, 527, 1379, 1185, 51328], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 294, "seek": 115460, "start": 1173.8799999999999, "end": 1176.0, "text": " becomes compromised.", "tokens": [51328, 3643, 32463, 13, 51434], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 295, "seek": 115460, "start": 1176.0, "end": 1179.8799999999999, "text": " And the last one is building it yourself.", "tokens": [51434, 400, 264, 1036, 472, 307, 2390, 309, 1803, 13, 51628], "temperature": 0.0, "avg_logprob": -0.15568515989515516, "compression_ratio": 1.7004219409282701, "no_speech_prob": 0.1365126669406891}, {"id": 296, "seek": 117988, "start": 1179.88, "end": 1185.1200000000001, "text": " Try to build or maintain a component that isn't your core competency.", "tokens": [50364, 6526, 281, 1322, 420, 6909, 257, 6542, 300, 1943, 380, 428, 4965, 50097, 13, 50626], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 297, "seek": 117988, "start": 1185.1200000000001, "end": 1190.16, "text": " And while it may seem like a clever way to get around a supply chain attack, in reality,", "tokens": [50626, 400, 1339, 309, 815, 1643, 411, 257, 13494, 636, 281, 483, 926, 257, 5847, 5021, 2690, 11, 294, 4103, 11, 50878], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 298, "seek": 117988, "start": 1190.16, "end": 1194.8000000000002, "text": " it means you're just volunteering to take full responsibility for whatever that component", "tokens": [50878, 309, 1355, 291, 434, 445, 33237, 281, 747, 1577, 6357, 337, 2035, 300, 6542, 51110], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 299, "seek": 117988, "start": 1194.8000000000002, "end": 1197.96, "text": " is and all the vulnerabilities that show up there.", "tokens": [51110, 307, 293, 439, 264, 37633, 300, 855, 493, 456, 13, 51268], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 300, "seek": 117988, "start": 1197.96, "end": 1202.2800000000002, "text": " You and your team are probably not going to be able to beat out a team of experts who", "tokens": [51268, 509, 293, 428, 1469, 366, 1391, 406, 516, 281, 312, 1075, 281, 4224, 484, 257, 1469, 295, 8572, 567, 51484], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 301, "seek": 117988, "start": 1202.2800000000002, "end": 1207.5200000000002, "text": " manage some open source component out there that is being checked continuously.", "tokens": [51484, 3067, 512, 1269, 4009, 6542, 484, 456, 300, 307, 885, 10033, 15684, 13, 51746], "temperature": 0.0, "avg_logprob": -0.12283124373509334, "compression_ratio": 1.6726618705035972, "no_speech_prob": 0.48382052779197693}, {"id": 302, "seek": 120752, "start": 1207.52, "end": 1212.36, "text": " Now the counter example argument to this is, well, what if it's a critical component?", "tokens": [50364, 823, 264, 5682, 1365, 6770, 281, 341, 307, 11, 731, 11, 437, 498, 309, 311, 257, 4924, 6542, 30, 50606], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 303, "seek": 120752, "start": 1212.36, "end": 1216.2, "text": " Well, the truth is everything in our service is a critical component in some way or else", "tokens": [50606, 1042, 11, 264, 3494, 307, 1203, 294, 527, 2643, 307, 257, 4924, 6542, 294, 512, 636, 420, 1646, 50798], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 304, "seek": 120752, "start": 1216.2, "end": 1219.16, "text": " we probably wouldn't have included it.", "tokens": [50798, 321, 1391, 2759, 380, 362, 5556, 309, 13, 50946], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 305, "seek": 120752, "start": 1219.16, "end": 1222.96, "text": " You're not going to get very far with the resources you have attempting to build and", "tokens": [50946, 509, 434, 406, 516, 281, 483, 588, 1400, 365, 264, 3593, 291, 362, 22001, 281, 1322, 293, 51136], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 306, "seek": 120752, "start": 1222.96, "end": 1228.44, "text": " maintain literally everything in your stack, including making your own electricity.", "tokens": [51136, 6909, 3736, 1203, 294, 428, 8630, 11, 3009, 1455, 428, 1065, 10356, 13, 51410], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 307, "seek": 120752, "start": 1228.44, "end": 1229.6399999999999, "text": " Okay.", "tokens": [51410, 1033, 13, 51470], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 308, "seek": 120752, "start": 1229.6399999999999, "end": 1234.24, "text": " So hopefully at this point, you know exactly what you need to do to add some additional", "tokens": [51470, 407, 4696, 412, 341, 935, 11, 291, 458, 2293, 437, 291, 643, 281, 360, 281, 909, 512, 4497, 51700], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 309, "seek": 120752, "start": 1234.24, "end": 1236.92, "text": " security to your service.", "tokens": [51700, 3825, 281, 428, 2643, 13, 51834], "temperature": 0.0, "avg_logprob": -0.1675015950607041, "compression_ratio": 1.6845637583892616, "no_speech_prob": 0.004754694178700447}, {"id": 310, "seek": 123692, "start": 1236.92, "end": 1242.72, "text": " I have a quick link to the presentation if anyone actually wants it.", "tokens": [50364, 286, 362, 257, 1702, 2113, 281, 264, 5860, 498, 2878, 767, 2738, 309, 13, 50654], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 311, "seek": 123692, "start": 1242.72, "end": 1245.48, "text": " I see too many people getting on phones.", "tokens": [50654, 286, 536, 886, 867, 561, 1242, 322, 10216, 13, 50792], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 312, "seek": 123692, "start": 1245.48, "end": 1250.0, "text": " It's going to be available online, so you don't necessarily have to, but if you really want", "tokens": [50792, 467, 311, 516, 281, 312, 2435, 2950, 11, 370, 291, 500, 380, 4725, 362, 281, 11, 457, 498, 291, 534, 528, 51018], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 313, "seek": 123692, "start": 1250.0, "end": 1251.0, "text": " to.", "tokens": [51018, 281, 13, 51068], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 314, "seek": 123692, "start": 1251.0, "end": 1252.0, "text": " Okay.", "tokens": [51068, 1033, 13, 51118], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 315, "seek": 123692, "start": 1252.0, "end": 1253.0, "text": " One more.", "tokens": [51118, 1485, 544, 13, 51168], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 316, "seek": 123692, "start": 1253.0, "end": 1254.0, "text": " Five, four.", "tokens": [51168, 9436, 11, 1451, 13, 51218], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 317, "seek": 123692, "start": 1254.0, "end": 1255.0, "text": " Okay.", "tokens": [51218, 1033, 13, 51268], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 318, "seek": 123692, "start": 1255.0, "end": 1256.0, "text": " Okay.", "tokens": [51268, 1033, 13, 51318], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 319, "seek": 123692, "start": 1256.0, "end": 1257.0, "text": " And thank you.", "tokens": [51318, 400, 1309, 291, 13, 51368], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 320, "seek": 123692, "start": 1257.0, "end": 1258.0, "text": " Okay.", "tokens": [51368, 1033, 13, 51418], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 321, "seek": 123692, "start": 1258.0, "end": 1259.0, "text": " And thank you.", "tokens": [51418, 400, 1309, 291, 13, 51468], "temperature": 0.0, "avg_logprob": -0.2939845637271279, "compression_ratio": 1.5524861878453038, "no_speech_prob": 0.025937732309103012}, {"id": 322, "seek": 125900, "start": 1259.0, "end": 1260.0, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 323, "seek": 125900, "start": 1260.0, "end": 1270.0, "text": " Now we have some time for some questions.", "tokens": [50414, 823, 321, 362, 512, 565, 337, 512, 1651, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 324, "seek": 125900, "start": 1270.0, "end": 1271.0, "text": " Yeah.", "tokens": [50914, 865, 13, 50964], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 325, "seek": 125900, "start": 1271.0, "end": 1272.0, "text": " Perfect.", "tokens": [50964, 10246, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 326, "seek": 125900, "start": 1272.0, "end": 1276.12, "text": " Five minutes for questions.", "tokens": [51014, 9436, 2077, 337, 1651, 13, 51220], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 327, "seek": 125900, "start": 1276.12, "end": 1277.12, "text": " Go ahead.", "tokens": [51220, 1037, 2286, 13, 51270], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 328, "seek": 125900, "start": 1277.12, "end": 1283.36, "text": " I'm not sure are you operating in the Europe company?", "tokens": [51270, 286, 478, 406, 988, 366, 291, 7447, 294, 264, 3315, 2237, 30, 51582], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 329, "seek": 125900, "start": 1283.36, "end": 1285.0, "text": " Our company is global.", "tokens": [51582, 2621, 2237, 307, 4338, 13, 51664], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 330, "seek": 125900, "start": 1285.0, "end": 1287.0, "text": " So yes, Europe is included.", "tokens": [51664, 407, 2086, 11, 3315, 307, 5556, 13, 51764], "temperature": 0.0, "avg_logprob": -0.3223929334042677, "compression_ratio": 1.3666666666666667, "no_speech_prob": 0.0022868893574923277}, {"id": 331, "seek": 128700, "start": 1288.0, "end": 1289.0, "text": " Oh, yes.", "tokens": [50414, 876, 11, 2086, 13, 50464], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 332, "seek": 128700, "start": 1289.0, "end": 1290.0, "text": " Sorry.", "tokens": [50464, 4919, 13, 50514], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 333, "seek": 128700, "start": 1290.0, "end": 1292.0, "text": " It's our company operating in Europe.", "tokens": [50514, 467, 311, 527, 2237, 7447, 294, 3315, 13, 50614], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 334, "seek": 128700, "start": 1292.0, "end": 1293.0, "text": " Yes, for sure.", "tokens": [50614, 1079, 11, 337, 988, 13, 50664], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 335, "seek": 128700, "start": 1293.0, "end": 1294.0, "text": " It's operating in Europe.", "tokens": [50664, 467, 311, 7447, 294, 3315, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 336, "seek": 128700, "start": 1294.0, "end": 1300.0, "text": " The reason I ask is that we have some new regulations according to data protection.", "tokens": [50714, 440, 1778, 286, 1029, 307, 300, 321, 362, 512, 777, 12563, 4650, 281, 1412, 6334, 13, 51014], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 337, "seek": 128700, "start": 1300.0, "end": 1302.0, "text": " Yeah, for sure.", "tokens": [51014, 865, 11, 337, 988, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 338, "seek": 128700, "start": 1302.0, "end": 1308.0, "text": " And the IP address is considered to be one identifying characteristic for a person.", "tokens": [51114, 400, 264, 8671, 2985, 307, 4888, 281, 312, 472, 16696, 16282, 337, 257, 954, 13, 51414], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 339, "seek": 128700, "start": 1308.0, "end": 1309.0, "text": " Yes.", "tokens": [51414, 1079, 13, 51464], "temperature": 0.0, "avg_logprob": -0.21823763560099774, "compression_ratio": 1.546448087431694, "no_speech_prob": 0.06364283710718155}, {"id": 340, "seek": 130900, "start": 1309.0, "end": 1310.0, "text": " Yeah.", "tokens": [50364, 865, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2861970395457988, "compression_ratio": 1.3617021276595744, "no_speech_prob": 0.023678109049797058}, {"id": 341, "seek": 130900, "start": 1310.0, "end": 1329.0, "text": " How do you deal with the GDPR or whatever local regulation is for identifying information", "tokens": [50414, 1012, 360, 291, 2028, 365, 264, 19599, 49, 420, 2035, 2654, 15062, 307, 337, 16696, 1589, 51364], "temperature": 0.0, "avg_logprob": -0.2861970395457988, "compression_ratio": 1.3617021276595744, "no_speech_prob": 0.023678109049797058}, {"id": 342, "seek": 130900, "start": 1329.0, "end": 1330.0, "text": " such as IP addresses?", "tokens": [51364, 1270, 382, 8671, 16862, 30, 51414], "temperature": 0.0, "avg_logprob": -0.2861970395457988, "compression_ratio": 1.3617021276595744, "no_speech_prob": 0.023678109049797058}, {"id": 343, "seek": 130900, "start": 1330.0, "end": 1334.0, "text": " I mean, the sad story about IP addresses is like forget about it honestly.", "tokens": [51414, 286, 914, 11, 264, 4227, 1657, 466, 8671, 16862, 307, 411, 2870, 466, 309, 6095, 13, 51614], "temperature": 0.0, "avg_logprob": -0.2861970395457988, "compression_ratio": 1.3617021276595744, "no_speech_prob": 0.023678109049797058}, {"id": 344, "seek": 133400, "start": 1334.0, "end": 1339.0, "text": " Because with IPv6, which is going to be here pretty soon, you're not going to be able to", "tokens": [50364, 1436, 365, 8671, 85, 21, 11, 597, 307, 516, 281, 312, 510, 1238, 2321, 11, 291, 434, 406, 516, 281, 312, 1075, 281, 50614], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 345, "seek": 133400, "start": 1339.0, "end": 1342.0, "text": " do anything remotely reasonable with IP addresses in the first place.", "tokens": [50614, 360, 1340, 20824, 10585, 365, 8671, 16862, 294, 264, 700, 1081, 13, 50764], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 346, "seek": 133400, "start": 1342.0, "end": 1344.0, "text": " So stop logging them.", "tokens": [50764, 407, 1590, 27991, 552, 13, 50864], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 347, "seek": 133400, "start": 1344.0, "end": 1348.0, "text": " For us, what we actually do is edge computing for those customers.", "tokens": [50864, 1171, 505, 11, 437, 321, 767, 360, 307, 4691, 15866, 337, 729, 4581, 13, 51064], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 348, "seek": 133400, "start": 1348.0, "end": 1353.0, "text": " So wherever they're coming from, most of their data stays at the edge as much as possible.", "tokens": [51064, 407, 8660, 436, 434, 1348, 490, 11, 881, 295, 641, 1412, 10834, 412, 264, 4691, 382, 709, 382, 1944, 13, 51314], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 349, "seek": 133400, "start": 1353.0, "end": 1357.0, "text": " So if you do have those regulations, try to keep it there and don't send it other places.", "tokens": [51314, 407, 498, 291, 360, 362, 729, 12563, 11, 853, 281, 1066, 309, 456, 293, 500, 380, 2845, 309, 661, 3190, 13, 51514], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 350, "seek": 133400, "start": 1357.0, "end": 1361.0, "text": " All the logs are resident to that data center or those databases in that location.", "tokens": [51514, 1057, 264, 20820, 366, 10832, 281, 300, 1412, 3056, 420, 729, 22380, 294, 300, 4914, 13, 51714], "temperature": 0.0, "avg_logprob": -0.059507906906248076, "compression_ratio": 1.697674418604651, "no_speech_prob": 0.32714611291885376}, {"id": 351, "seek": 136100, "start": 1361.0, "end": 1364.0, "text": " It still allows you to perform security on the edge.", "tokens": [50364, 467, 920, 4045, 291, 281, 2042, 3825, 322, 264, 4691, 13, 50514], "temperature": 0.0, "avg_logprob": -0.12222773830095927, "compression_ratio": 1.5934959349593496, "no_speech_prob": 0.022623777389526367}, {"id": 352, "seek": 136100, "start": 1364.0, "end": 1369.0, "text": " And wherever you're running your stack, whether it's on-prem data centers, hopefully not in", "tokens": [50514, 400, 8660, 291, 434, 2614, 428, 8630, 11, 1968, 309, 311, 322, 12, 29403, 1412, 10898, 11, 4696, 406, 294, 50764], "temperature": 0.0, "avg_logprob": -0.12222773830095927, "compression_ratio": 1.5934959349593496, "no_speech_prob": 0.022623777389526367}, {"id": 353, "seek": 136100, "start": 1369.0, "end": 1374.0, "text": " every single country or some cloud provider, they're usually following those regulations as well.", "tokens": [50764, 633, 2167, 1941, 420, 512, 4588, 12398, 11, 436, 434, 2673, 3480, 729, 12563, 382, 731, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12222773830095927, "compression_ratio": 1.5934959349593496, "no_speech_prob": 0.022623777389526367}, {"id": 354, "seek": 136100, "start": 1374.0, "end": 1381.0, "text": " So as long as you keep the data as close to that region as possible, you're abiding by the law as best in your ability as you possibly can.", "tokens": [51014, 407, 382, 938, 382, 291, 1066, 264, 1412, 382, 1998, 281, 300, 4458, 382, 1944, 11, 291, 434, 410, 2819, 538, 264, 2101, 382, 1151, 294, 428, 3485, 382, 291, 6264, 393, 13, 51364], "temperature": 0.0, "avg_logprob": -0.12222773830095927, "compression_ratio": 1.5934959349593496, "no_speech_prob": 0.022623777389526367}, {"id": 355, "seek": 136100, "start": 1381.0, "end": 1386.0, "text": " Go ahead.", "tokens": [51364, 1037, 2286, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12222773830095927, "compression_ratio": 1.5934959349593496, "no_speech_prob": 0.022623777389526367}, {"id": 356, "seek": 138600, "start": 1386.0, "end": 1393.0, "text": " Yeah. We do validate all incoming requests against the schema, but that doesn't necessarily mean you're safe.", "tokens": [50364, 865, 13, 492, 360, 29562, 439, 22341, 12475, 1970, 264, 34078, 11, 457, 300, 1177, 380, 4725, 914, 291, 434, 3273, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 357, "seek": 138600, "start": 1393.0, "end": 1398.0, "text": " So two easy examples could be a build just really, really long that leads to a DDoS.", "tokens": [50714, 407, 732, 1858, 5110, 727, 312, 257, 1322, 445, 534, 11, 534, 938, 300, 6689, 281, 257, 413, 7653, 50, 13, 50964], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 358, "seek": 138600, "start": 1398.0, "end": 1404.0, "text": " Or they could be some SQL in there and a laser developer stripping it before it goes into the database.", "tokens": [50964, 1610, 436, 727, 312, 512, 19200, 294, 456, 293, 257, 12530, 10754, 3575, 3759, 309, 949, 309, 1709, 666, 264, 8149, 13, 51264], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 359, "seek": 138600, "start": 1404.0, "end": 1411.0, "text": " So is there a way to add that kind of validation to the OpenAPI schema or would you have that as a separate set?", "tokens": [51264, 407, 307, 456, 257, 636, 281, 909, 300, 733, 295, 24071, 281, 264, 7238, 4715, 40, 34078, 420, 576, 291, 362, 300, 382, 257, 4994, 992, 30, 51614], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 360, "seek": 138600, "start": 1411.0, "end": 1413.0, "text": " Can you add extra validation to the OpenAPI schema?", "tokens": [51614, 1664, 291, 909, 2857, 24071, 281, 264, 7238, 4715, 40, 34078, 30, 51714], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 361, "seek": 138600, "start": 1413.0, "end": 1415.0, "text": " You absolutely can.", "tokens": [51714, 509, 3122, 393, 13, 51814], "temperature": 0.0, "avg_logprob": -0.21060022760610111, "compression_ratio": 1.6829268292682926, "no_speech_prob": 0.04019904136657715}, {"id": 362, "seek": 141500, "start": 1415.0, "end": 1417.0, "text": " There are even vendor extensions.", "tokens": [50364, 821, 366, 754, 24321, 25129, 13, 50464], "temperature": 0.0, "avg_logprob": -0.10373314356399795, "compression_ratio": 1.7543859649122806, "no_speech_prob": 0.010325849056243896}, {"id": 363, "seek": 141500, "start": 1417.0, "end": 1426.0, "text": " I mean, if you want to put your whole everything in your OpenAPI schema, you can have, there are tools out there to dynamically generate the whole service if you want to.", "tokens": [50464, 286, 914, 11, 498, 291, 528, 281, 829, 428, 1379, 1203, 294, 428, 7238, 4715, 40, 34078, 11, 291, 393, 362, 11, 456, 366, 3873, 484, 456, 281, 43492, 8460, 264, 1379, 2643, 498, 291, 528, 281, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10373314356399795, "compression_ratio": 1.7543859649122806, "no_speech_prob": 0.010325849056243896}, {"id": 364, "seek": 141500, "start": 1426.0, "end": 1431.0, "text": " I don't know if I'd recommend going that far, but you absolutely can.", "tokens": [50914, 286, 500, 380, 458, 498, 286, 1116, 2748, 516, 300, 1400, 11, 457, 291, 3122, 393, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10373314356399795, "compression_ratio": 1.7543859649122806, "no_speech_prob": 0.010325849056243896}, {"id": 365, "seek": 141500, "start": 1431.0, "end": 1439.0, "text": " Just to be clear, you can't block everything because you don't even know if you are blocking everything realistically, right?", "tokens": [51164, 1449, 281, 312, 1850, 11, 291, 393, 380, 3461, 1203, 570, 291, 500, 380, 754, 458, 498, 291, 366, 17776, 1203, 40734, 11, 558, 30, 51564], "temperature": 0.0, "avg_logprob": -0.10373314356399795, "compression_ratio": 1.7543859649122806, "no_speech_prob": 0.010325849056243896}, {"id": 366, "seek": 141500, "start": 1439.0, "end": 1444.0, "text": " Something that undiscovered zero-day that's sitting out there could still be waiting and happening.", "tokens": [51564, 6595, 300, 674, 40080, 292, 4018, 12, 810, 300, 311, 3798, 484, 456, 727, 920, 312, 3806, 293, 2737, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10373314356399795, "compression_ratio": 1.7543859649122806, "no_speech_prob": 0.010325849056243896}, {"id": 367, "seek": 144400, "start": 1444.0, "end": 1449.0, "text": " So there is no full guarantee that you've actually even blocked everything.", "tokens": [50364, 407, 456, 307, 572, 1577, 10815, 300, 291, 600, 767, 754, 15470, 1203, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08862255881814396, "compression_ratio": 1.6713615023474178, "no_speech_prob": 0.004828847013413906}, {"id": 368, "seek": 144400, "start": 1449.0, "end": 1450.0, "text": " Go ahead.", "tokens": [50614, 1037, 2286, 13, 50664], "temperature": 0.0, "avg_logprob": -0.08862255881814396, "compression_ratio": 1.6713615023474178, "no_speech_prob": 0.004828847013413906}, {"id": 369, "seek": 144400, "start": 1450.0, "end": 1453.0, "text": " What are your pro tips regarding the use of refresh tokens?", "tokens": [50664, 708, 366, 428, 447, 6082, 8595, 264, 764, 295, 15134, 22667, 30, 50814], "temperature": 0.0, "avg_logprob": -0.08862255881814396, "compression_ratio": 1.6713615023474178, "no_speech_prob": 0.004828847013413906}, {"id": 370, "seek": 144400, "start": 1453.0, "end": 1457.0, "text": " My pro tips for using refresh tokens.", "tokens": [50814, 1222, 447, 6082, 337, 1228, 15134, 22667, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08862255881814396, "compression_ratio": 1.6713615023474178, "no_speech_prob": 0.004828847013413906}, {"id": 371, "seek": 144400, "start": 1457.0, "end": 1468.0, "text": " You probably don't need refresh tokens ever, and if you're using them and you believe this is standard or common, you probably don't fully understand the use case for them.", "tokens": [51014, 509, 1391, 500, 380, 643, 15134, 22667, 1562, 11, 293, 498, 291, 434, 1228, 552, 293, 291, 1697, 341, 307, 3832, 420, 2689, 11, 291, 1391, 500, 380, 4498, 1223, 264, 764, 1389, 337, 552, 13, 51564], "temperature": 0.0, "avg_logprob": -0.08862255881814396, "compression_ratio": 1.6713615023474178, "no_speech_prob": 0.004828847013413906}, {"id": 372, "seek": 146800, "start": 1468.0, "end": 1475.0, "text": " Unless you're dealing with a third-party technology or interface integration, you don't need refresh tokens.", "tokens": [50364, 16581, 291, 434, 6260, 365, 257, 2636, 12, 23409, 2899, 420, 9226, 10980, 11, 291, 500, 380, 643, 15134, 22667, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 373, "seek": 146800, "start": 1475.0, "end": 1477.0, "text": " Just forget they even exist.", "tokens": [50714, 1449, 2870, 436, 754, 2514, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 374, "seek": 146800, "start": 1477.0, "end": 1479.0, "text": " So it was just within your own system.", "tokens": [50814, 407, 309, 390, 445, 1951, 428, 1065, 1185, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 375, "seek": 146800, "start": 1479.0, "end": 1481.0, "text": " There's no need for refresh tokens.", "tokens": [50914, 821, 311, 572, 643, 337, 15134, 22667, 13, 51014], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 376, "seek": 146800, "start": 1481.0, "end": 1484.0, "text": " There's plenty of alternatives that are more secure.", "tokens": [51014, 821, 311, 7140, 295, 20478, 300, 366, 544, 7144, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 377, "seek": 146800, "start": 1484.0, "end": 1487.0, "text": " I have a whole talk on that, I guess.", "tokens": [51164, 286, 362, 257, 1379, 751, 322, 300, 11, 286, 2041, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 378, "seek": 146800, "start": 1487.0, "end": 1489.0, "text": " Does that answer your question?", "tokens": [51314, 4402, 300, 1867, 428, 1168, 30, 51414], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 379, "seek": 146800, "start": 1489.0, "end": 1491.0, "text": " Okay.", "tokens": [51414, 1033, 13, 51514], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 380, "seek": 146800, "start": 1491.0, "end": 1493.0, "text": " Anyone else?", "tokens": [51514, 14643, 1646, 30, 51614], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 381, "seek": 146800, "start": 1493.0, "end": 1496.0, "text": " I still have a couple minutes.", "tokens": [51614, 286, 920, 362, 257, 1916, 2077, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10646385919480096, "compression_ratio": 1.5524193548387097, "no_speech_prob": 0.06556892395019531}, {"id": 382, "seek": 149600, "start": 1496.0, "end": 1498.0, "text": " Don't be shy.", "tokens": [50364, 1468, 380, 312, 12685, 13, 50464], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 383, "seek": 149600, "start": 1498.0, "end": 1499.0, "text": " Yeah?", "tokens": [50464, 865, 30, 50514], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 384, "seek": 149600, "start": 1499.0, "end": 1500.0, "text": " Go ahead.", "tokens": [50514, 1037, 2286, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 385, "seek": 149600, "start": 1500.0, "end": 1501.0, "text": " Why?", "tokens": [50564, 1545, 30, 50614], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 386, "seek": 149600, "start": 1501.0, "end": 1502.0, "text": " Why what?", "tokens": [50614, 1545, 437, 30, 50664], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 387, "seek": 149600, "start": 1502.0, "end": 1503.0, "text": " About the tokens.", "tokens": [50664, 7769, 264, 22667, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 388, "seek": 149600, "start": 1503.0, "end": 1504.0, "text": " Why?", "tokens": [50714, 1545, 30, 50764], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 389, "seek": 149600, "start": 1504.0, "end": 1513.0, "text": " Refresh tokens allow you to impersonate in your own service one of your users to access their resources.", "tokens": [50764, 16957, 3644, 22667, 2089, 291, 281, 38147, 473, 294, 428, 1065, 2643, 472, 295, 428, 5022, 281, 2105, 641, 3593, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 390, "seek": 149600, "start": 1513.0, "end": 1519.0, "text": " So Google Drive, for instance, a refresh token allows you to access Google Drive as your user.", "tokens": [51214, 407, 3329, 15622, 11, 337, 5197, 11, 257, 15134, 14862, 4045, 291, 281, 2105, 3329, 15622, 382, 428, 4195, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 391, "seek": 149600, "start": 1519.0, "end": 1524.0, "text": " If you don't have integrations with third parties, then there's no reason to have refresh tokens.", "tokens": [51514, 759, 291, 500, 380, 362, 3572, 763, 365, 2636, 8265, 11, 550, 456, 311, 572, 1778, 281, 362, 15134, 22667, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11108691805884952, "compression_ratio": 1.6590909090909092, "no_speech_prob": 0.00432969955727458}, {"id": 392, "seek": 152400, "start": 1524.0, "end": 1527.0, "text": " There's no third-party system where you need to impersonate a user.", "tokens": [50364, 821, 311, 572, 2636, 12, 23409, 1185, 689, 291, 643, 281, 38147, 473, 257, 4195, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 393, "seek": 152400, "start": 1527.0, "end": 1529.0, "text": " Your own users don't need to be impersonated.", "tokens": [50514, 2260, 1065, 5022, 500, 380, 643, 281, 312, 38147, 770, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 394, "seek": 152400, "start": 1529.0, "end": 1533.0, "text": " You already can perform every action within your service that you want.", "tokens": [50614, 509, 1217, 393, 2042, 633, 3069, 1951, 428, 2643, 300, 291, 528, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 395, "seek": 152400, "start": 1543.0, "end": 1544.0, "text": " There's a lot?", "tokens": [51314, 821, 311, 257, 688, 30, 51364], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 396, "seek": 152400, "start": 1544.0, "end": 1545.0, "text": " Yeah, okay.", "tokens": [51364, 865, 11, 1392, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 397, "seek": 152400, "start": 1545.0, "end": 1546.0, "text": " Thank you.", "tokens": [51414, 1044, 291, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}, {"id": 398, "seek": 152400, "start": 1546.0, "end": 1547.0, "text": " That's...", "tokens": [51464, 663, 311, 485, 51514], "temperature": 0.0, "avg_logprob": -0.1338564464024135, "compression_ratio": 1.4935897435897436, "no_speech_prob": 0.0378706194460392}], "language": "en"}