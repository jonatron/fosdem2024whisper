{"text": " Mark was a wrench and his talk is about a lazy developers approach to building real-time web applications. Give him a warm welcome and applause. Thank you and it's your state. So good morning. Today I want to tell you about my two hobbies. First I'm a musician. I play the bass guitar and my other hobby is a cloud solution architect. That's my money making hobby. And the project I want to talk about today gave me the opportunity to combine these two hobbies into one little project and I want to share the learnings from it with you. Okay, so the challenge. The picture above you see Ralph. He is a friend of mine and he plays along. He plays songs, people sing along. But we had one problem when we play somewhere with WENUs from 100 to 1000 people. Songbooks don't scale. We had songbooks but they got damaged. The WENUs were dark. People couldn't read. Songbooks even were stolen. One fact that was beneficial for the project, we have music stand software on our tablets. They are networked to each other and this music stand software has an API. Terrible software, proprietary stuff. I don't want to talk about this software today. But what we made from it so that you are able to use it in your own projects. How to get lyrics to the people with minimum effort. That was our task. We had to solve. And so that it doesn't get boring, I want to start with a demo so that you see the result and later on I will show you how we accomplished that. So please use your mobile phones and with it decide or your computers will work both. If you call this web page, you will see. Let me show it here. This side, the other side. There it is. You will see exactly that page which I have loaded here. It's waiting for lyrics. So the communication is established and when I now start sending the lyrics, imagine somebody on the stage would change to the next song in the music stand software. Okay, let's do it. I had an AI friend of mine write a few songs about open source and the like. So if my talk is boring, just look at the songs and I'm also open for collaborations in getting music to them. Okay, let's go on. What do we see here? The songs get updated like I just said before. And we even have confetti when there's a new song. So the title of the talk was the lazy developer. Why does being lazy matter? If you are too eager, it can happen that you think of a structure, how to implement something and that you stick to this structure, that you don't have this gut feeling that's too complicated, has to be easier. You create code duplicates and the like. If you're too lazy on the other hand, you get nothing done. So you have to find the sweet spot. Being lazy enough and being eager enough to get things done. And because I did this in my spare time, that was the only approach which could work. So I had to have something easy which allows me to get this job done but also allows to scale to a venue of a thousand people, to a thousand people requesting this resource at the same time. And here's my technical approach to that. We have the people who want to sing along. We have the musician with the music stand with the let me call it rest-ish API, what I saw wasn't so good. A small VM at the cloud provider. Everything should start with something like this. A host name which I said on it. After installed, then I used catty as a static web server for static pages. Great project makes it easy to host things with the same default TLS configuration without any effort. So it was just spinning up the container and it's immediately served the web pages like I wanted to have them. So now we need a component which does the heavy load which transports the data to the devices of the people. There are many solutions around and since I'm working as a cloud solution architect with Kubernetes, you always look at the CNCF landscape. And as well in my company, as for this project, I saw NETS as the solution. We use it for micro service interaction in our projects but NETS also has a web sockets interface which make it possible that the people which are getting the web page through the static web page on the browser, the JavaScript part connects through web sockets to the NETS server. And then the musician needs to have a computer which pulse the API and as soon as there is a new song, the lyrics get sent to the message broker and when we talk about message brokers, there are a few patterns around how messages are being distributed. We have a classical fan out pattern here. The message comes in, the message broker distributes it among all of the subscribed devices and what's really nice about the approach, it's just a few lines of code in the end. So let me show you. We have the project here. You will get access to the GitLab repository at the end of the talk and also linked online. Okay, so we have the NETS server. The ports, the 8443 is the web sockets port over TLS. 3 times 2 is the NETS native port mapped to the outside. Then we tell NETS the host name so that for the TLS mapping and since Katie takes care of the certificates, we map the certificates from the Katie directory as we only file mount which we can access in this Docker compose repository I have set up here. And Katie, the easiest thing, just the regular web server ports mapped to the outside. Katie took care of getting the Lats and crypt certificates automatically. I only had to set the HSTS headers and had an A plus on Wallace SSL check. It's something I always want to try. Okay, and look at the application itself. This div does everything so it's more meta text than real payload on the page. There's the div with the id lyrics and as soon as something new comes in, its content is replaced and the JavaScript part is also something very simple. You see that's everything I did, basically developer. The communications magic is here. We include the NETS web sockets library and then we connect to the NETS server. We subscribe to the subject lyrics and as soon as something drops in as we receive new lyrics, we handle them over to handle lyrics which form its first line in bold and shows the rest just like we received it from the NETS server. If you want to have a look at the NETS configuration, it's also not much. I have defined two permission sets. One default permission so any user of the system has the set of permissions and it's just subscribed to lyrics and we have the lyrics publish security profile for the authenticated publisher. I defined the user with the hash password, assigned the permission and down below here you can see the web socket definition where I also use the TLS certificate, caddy gets me from let's encrypt. Next line I assign anonymous access to the user that it works with the login. No, not login. Okay, that's it in a nutshell. If you are interested about the topic of message brokers, I can highly recommend the book enterprise integration patterns. It's a book from 2003. I'm showing an IT book from 2003 but the principles are still the same. Of course, there are a few new. If you go to the website, they also have listed new principles but I wish I had new in the book 20 years earlier. Now I have it on my desk. My GitHub repo, check out Nats, check out caddy server and it's absolutely possible. You don't have to use Nats for this. You can use an MQTT server. I did the same example with EMQX. Rapid MQ should work. Also with Redis, it also has web sockets integration so you could also use that. My example was in Nats. If you are interested in Nats, I asked the guys of the project if they could send me some. On this corner of the desk, if you leave the room here, you can grab a sticker. After all, we are on conferences for the stickers, isn't it? That way. Okay. That's about it. What did we learn? Let others do the heavy lifting though. Just be lazy enough to find the right ways and get things done and concentrate on the things that really matters. Reach out to me if you have questions. I will be around. Don't forget the stickers. Have a great Svastim Sunday and a safe trip home. I'm Markus R\u00f6ntschler. Thank you. Okay. Thank you for your talk.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 11.34, "text": " Mark was a wrench and his talk is about a lazy developers approach to building real-time", "tokens": [50364, 3934, 390, 257, 25406, 293, 702, 751, 307, 466, 257, 14847, 8849, 3109, 281, 2390, 957, 12, 3766, 50931], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 1, "seek": 0, "start": 11.34, "end": 12.84, "text": " web applications.", "tokens": [50931, 3670, 5821, 13, 51006], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 2, "seek": 0, "start": 12.84, "end": 17.32, "text": " Give him a warm welcome and applause.", "tokens": [51006, 5303, 796, 257, 4561, 2928, 293, 9969, 13, 51230], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 3, "seek": 0, "start": 17.32, "end": 21.52, "text": " Thank you and it's your state.", "tokens": [51230, 1044, 291, 293, 309, 311, 428, 1785, 13, 51440], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 4, "seek": 0, "start": 21.52, "end": 23.32, "text": " So good morning.", "tokens": [51440, 407, 665, 2446, 13, 51530], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 5, "seek": 0, "start": 23.32, "end": 27.68, "text": " Today I want to tell you about my two hobbies.", "tokens": [51530, 2692, 286, 528, 281, 980, 291, 466, 452, 732, 35750, 13, 51748], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 6, "seek": 0, "start": 27.68, "end": 28.68, "text": " First I'm a musician.", "tokens": [51748, 2386, 286, 478, 257, 19570, 13, 51798], "temperature": 0.0, "avg_logprob": -0.40089127824113174, "compression_ratio": 1.4108108108108108, "no_speech_prob": 0.45832622051239014}, {"id": 7, "seek": 2868, "start": 28.68, "end": 36.24, "text": " I play the bass guitar and my other hobby is a cloud solution architect.", "tokens": [50364, 286, 862, 264, 10136, 7531, 293, 452, 661, 18240, 307, 257, 4588, 3827, 6331, 13, 50742], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 8, "seek": 2868, "start": 36.24, "end": 38.28, "text": " That's my money making hobby.", "tokens": [50742, 663, 311, 452, 1460, 1455, 18240, 13, 50844], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 9, "seek": 2868, "start": 38.28, "end": 43.44, "text": " And the project I want to talk about today gave me the opportunity to combine these two", "tokens": [50844, 400, 264, 1716, 286, 528, 281, 751, 466, 965, 2729, 385, 264, 2650, 281, 10432, 613, 732, 51102], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 10, "seek": 2868, "start": 43.44, "end": 52.16, "text": " hobbies into one little project and I want to share the learnings from it with you.", "tokens": [51102, 35750, 666, 472, 707, 1716, 293, 286, 528, 281, 2073, 264, 2539, 82, 490, 309, 365, 291, 13, 51538], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 11, "seek": 2868, "start": 52.16, "end": 55.36, "text": " Okay, so the challenge.", "tokens": [51538, 1033, 11, 370, 264, 3430, 13, 51698], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 12, "seek": 2868, "start": 55.36, "end": 56.8, "text": " The picture above you see Ralph.", "tokens": [51698, 440, 3036, 3673, 291, 536, 28131, 13, 51770], "temperature": 0.0, "avg_logprob": -0.2227052961077009, "compression_ratio": 1.5467289719626167, "no_speech_prob": 0.04732959344983101}, {"id": 13, "seek": 5680, "start": 56.8, "end": 60.599999999999994, "text": " He is a friend of mine and he plays along.", "tokens": [50364, 634, 307, 257, 1277, 295, 3892, 293, 415, 5749, 2051, 13, 50554], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 14, "seek": 5680, "start": 60.599999999999994, "end": 63.36, "text": " He plays songs, people sing along.", "tokens": [50554, 634, 5749, 5781, 11, 561, 1522, 2051, 13, 50692], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 15, "seek": 5680, "start": 63.36, "end": 71.03999999999999, "text": " But we had one problem when we play somewhere with WENUs from 100 to 1000 people.", "tokens": [50692, 583, 321, 632, 472, 1154, 562, 321, 862, 4079, 365, 343, 2195, 29211, 490, 2319, 281, 9714, 561, 13, 51076], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 16, "seek": 5680, "start": 71.03999999999999, "end": 73.52, "text": " Songbooks don't scale.", "tokens": [51076, 11862, 15170, 500, 380, 4373, 13, 51200], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 17, "seek": 5680, "start": 73.52, "end": 77.6, "text": " We had songbooks but they got damaged.", "tokens": [51200, 492, 632, 2153, 15170, 457, 436, 658, 14080, 13, 51404], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 18, "seek": 5680, "start": 77.6, "end": 78.88, "text": " The WENUs were dark.", "tokens": [51404, 440, 343, 2195, 29211, 645, 2877, 13, 51468], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 19, "seek": 5680, "start": 78.88, "end": 81.12, "text": " People couldn't read.", "tokens": [51468, 3432, 2809, 380, 1401, 13, 51580], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 20, "seek": 5680, "start": 81.12, "end": 83.4, "text": " Songbooks even were stolen.", "tokens": [51580, 11862, 15170, 754, 645, 15900, 13, 51694], "temperature": 0.0, "avg_logprob": -0.25639379694220726, "compression_ratio": 1.5129533678756477, "no_speech_prob": 0.06262814998626709}, {"id": 21, "seek": 8340, "start": 83.4, "end": 89.80000000000001, "text": " One fact that was beneficial for the project, we have music stand software on our tablets.", "tokens": [50364, 1485, 1186, 300, 390, 14072, 337, 264, 1716, 11, 321, 362, 1318, 1463, 4722, 322, 527, 27622, 13, 50684], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 22, "seek": 8340, "start": 89.80000000000001, "end": 95.32000000000001, "text": " They are networked to each other and this music stand software has an API.", "tokens": [50684, 814, 366, 3209, 292, 281, 1184, 661, 293, 341, 1318, 1463, 4722, 575, 364, 9362, 13, 50960], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 23, "seek": 8340, "start": 95.32000000000001, "end": 97.08000000000001, "text": " Terrible software, proprietary stuff.", "tokens": [50960, 6564, 4457, 4722, 11, 38992, 1507, 13, 51048], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 24, "seek": 8340, "start": 97.08000000000001, "end": 100.2, "text": " I don't want to talk about this software today.", "tokens": [51048, 286, 500, 380, 528, 281, 751, 466, 341, 4722, 965, 13, 51204], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 25, "seek": 8340, "start": 100.2, "end": 108.12, "text": " But what we made from it so that you are able to use it in your own projects.", "tokens": [51204, 583, 437, 321, 1027, 490, 309, 370, 300, 291, 366, 1075, 281, 764, 309, 294, 428, 1065, 4455, 13, 51600], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 26, "seek": 8340, "start": 108.12, "end": 111.4, "text": " How to get lyrics to the people with minimum effort.", "tokens": [51600, 1012, 281, 483, 12189, 281, 264, 561, 365, 7285, 4630, 13, 51764], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 27, "seek": 8340, "start": 111.4, "end": 112.68, "text": " That was our task.", "tokens": [51764, 663, 390, 527, 5633, 13, 51828], "temperature": 0.0, "avg_logprob": -0.19937722659805446, "compression_ratio": 1.6639004149377594, "no_speech_prob": 0.22449705004692078}, {"id": 28, "seek": 11268, "start": 112.68, "end": 114.48, "text": " We had to solve.", "tokens": [50364, 492, 632, 281, 5039, 13, 50454], "temperature": 0.0, "avg_logprob": -0.30900841725023487, "compression_ratio": 1.5401069518716577, "no_speech_prob": 0.13252118229866028}, {"id": 29, "seek": 11268, "start": 114.48, "end": 120.04, "text": " And so that it doesn't get boring, I want to start with a demo so that you see the result", "tokens": [50454, 400, 370, 300, 309, 1177, 380, 483, 9989, 11, 286, 528, 281, 722, 365, 257, 10723, 370, 300, 291, 536, 264, 1874, 50732], "temperature": 0.0, "avg_logprob": -0.30900841725023487, "compression_ratio": 1.5401069518716577, "no_speech_prob": 0.13252118229866028}, {"id": 30, "seek": 11268, "start": 120.04, "end": 124.16000000000001, "text": " and later on I will show you how we accomplished that.", "tokens": [50732, 293, 1780, 322, 286, 486, 855, 291, 577, 321, 15419, 300, 13, 50938], "temperature": 0.0, "avg_logprob": -0.30900841725023487, "compression_ratio": 1.5401069518716577, "no_speech_prob": 0.13252118229866028}, {"id": 31, "seek": 11268, "start": 124.16000000000001, "end": 131.76000000000002, "text": " So please use your mobile phones and with it decide or your computers will work both.", "tokens": [50938, 407, 1767, 764, 428, 6013, 10216, 293, 365, 309, 4536, 420, 428, 10807, 486, 589, 1293, 13, 51318], "temperature": 0.0, "avg_logprob": -0.30900841725023487, "compression_ratio": 1.5401069518716577, "no_speech_prob": 0.13252118229866028}, {"id": 32, "seek": 11268, "start": 131.76000000000002, "end": 136.92000000000002, "text": " If you call this web page, you will see.", "tokens": [51318, 759, 291, 818, 341, 3670, 3028, 11, 291, 486, 536, 13, 51576], "temperature": 0.0, "avg_logprob": -0.30900841725023487, "compression_ratio": 1.5401069518716577, "no_speech_prob": 0.13252118229866028}, {"id": 33, "seek": 13692, "start": 136.92, "end": 142.6, "text": " Let me show it here.", "tokens": [50364, 961, 385, 855, 309, 510, 13, 50648], "temperature": 0.0, "avg_logprob": -0.36604982741335607, "compression_ratio": 1.2347826086956522, "no_speech_prob": 0.13374781608581543}, {"id": 34, "seek": 13692, "start": 142.6, "end": 144.51999999999998, "text": " This side, the other side.", "tokens": [50648, 639, 1252, 11, 264, 661, 1252, 13, 50744], "temperature": 0.0, "avg_logprob": -0.36604982741335607, "compression_ratio": 1.2347826086956522, "no_speech_prob": 0.13374781608581543}, {"id": 35, "seek": 13692, "start": 144.51999999999998, "end": 150.04, "text": " There it is.", "tokens": [50744, 821, 309, 307, 13, 51020], "temperature": 0.0, "avg_logprob": -0.36604982741335607, "compression_ratio": 1.2347826086956522, "no_speech_prob": 0.13374781608581543}, {"id": 36, "seek": 13692, "start": 150.04, "end": 157.32, "text": " You will see exactly that page which I have loaded here.", "tokens": [51020, 509, 486, 536, 2293, 300, 3028, 597, 286, 362, 13210, 510, 13, 51384], "temperature": 0.0, "avg_logprob": -0.36604982741335607, "compression_ratio": 1.2347826086956522, "no_speech_prob": 0.13374781608581543}, {"id": 37, "seek": 13692, "start": 157.32, "end": 160.16, "text": " It's waiting for lyrics.", "tokens": [51384, 467, 311, 3806, 337, 12189, 13, 51526], "temperature": 0.0, "avg_logprob": -0.36604982741335607, "compression_ratio": 1.2347826086956522, "no_speech_prob": 0.13374781608581543}, {"id": 38, "seek": 16016, "start": 160.16, "end": 168.56, "text": " So the communication is established and when I now start sending the lyrics, imagine somebody", "tokens": [50364, 407, 264, 6101, 307, 7545, 293, 562, 286, 586, 722, 7750, 264, 12189, 11, 3811, 2618, 50784], "temperature": 0.0, "avg_logprob": -0.2642141977945964, "compression_ratio": 1.441988950276243, "no_speech_prob": 0.7561851143836975}, {"id": 39, "seek": 16016, "start": 168.56, "end": 173.48, "text": " on the stage would change to the next song in the music stand software.", "tokens": [50784, 322, 264, 3233, 576, 1319, 281, 264, 958, 2153, 294, 264, 1318, 1463, 4722, 13, 51030], "temperature": 0.0, "avg_logprob": -0.2642141977945964, "compression_ratio": 1.441988950276243, "no_speech_prob": 0.7561851143836975}, {"id": 40, "seek": 16016, "start": 173.48, "end": 175.6, "text": " Okay, let's do it.", "tokens": [51030, 1033, 11, 718, 311, 360, 309, 13, 51136], "temperature": 0.0, "avg_logprob": -0.2642141977945964, "compression_ratio": 1.441988950276243, "no_speech_prob": 0.7561851143836975}, {"id": 41, "seek": 16016, "start": 175.6, "end": 182.24, "text": " I had an AI friend of mine write a few songs about open source and the like.", "tokens": [51136, 286, 632, 364, 7318, 1277, 295, 3892, 2464, 257, 1326, 5781, 466, 1269, 4009, 293, 264, 411, 13, 51468], "temperature": 0.0, "avg_logprob": -0.2642141977945964, "compression_ratio": 1.441988950276243, "no_speech_prob": 0.7561851143836975}, {"id": 42, "seek": 18224, "start": 182.24, "end": 189.32000000000002, "text": " So if my talk is boring, just look at the songs and I'm also open for collaborations", "tokens": [50364, 407, 498, 452, 751, 307, 9989, 11, 445, 574, 412, 264, 5781, 293, 286, 478, 611, 1269, 337, 36908, 50718], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 43, "seek": 18224, "start": 189.32000000000002, "end": 191.68, "text": " in getting music to them.", "tokens": [50718, 294, 1242, 1318, 281, 552, 13, 50836], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 44, "seek": 18224, "start": 191.68, "end": 194.12, "text": " Okay, let's go on.", "tokens": [50836, 1033, 11, 718, 311, 352, 322, 13, 50958], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 45, "seek": 18224, "start": 194.12, "end": 198.36, "text": " What do we see here?", "tokens": [50958, 708, 360, 321, 536, 510, 30, 51170], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 46, "seek": 18224, "start": 198.36, "end": 203.88, "text": " The songs get updated like I just said before.", "tokens": [51170, 440, 5781, 483, 10588, 411, 286, 445, 848, 949, 13, 51446], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 47, "seek": 18224, "start": 203.88, "end": 207.76000000000002, "text": " And we even have confetti when there's a new song.", "tokens": [51446, 400, 321, 754, 362, 1497, 12495, 562, 456, 311, 257, 777, 2153, 13, 51640], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 48, "seek": 18224, "start": 207.76000000000002, "end": 211.64000000000001, "text": " So the title of the talk was the lazy developer.", "tokens": [51640, 407, 264, 4876, 295, 264, 751, 390, 264, 14847, 10754, 13, 51834], "temperature": 0.0, "avg_logprob": -0.2055513642051003, "compression_ratio": 1.4630541871921183, "no_speech_prob": 0.1860916167497635}, {"id": 49, "seek": 21164, "start": 211.64, "end": 214.6, "text": " Why does being lazy matter?", "tokens": [50364, 1545, 775, 885, 14847, 1871, 30, 50512], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 50, "seek": 21164, "start": 214.6, "end": 223.95999999999998, "text": " If you are too eager, it can happen that you think of a structure, how to implement something", "tokens": [50512, 759, 291, 366, 886, 18259, 11, 309, 393, 1051, 300, 291, 519, 295, 257, 3877, 11, 577, 281, 4445, 746, 50980], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 51, "seek": 21164, "start": 223.95999999999998, "end": 228.76, "text": " and that you stick to this structure, that you don't have this gut feeling that's too", "tokens": [50980, 293, 300, 291, 2897, 281, 341, 3877, 11, 300, 291, 500, 380, 362, 341, 5228, 2633, 300, 311, 886, 51220], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 52, "seek": 21164, "start": 228.76, "end": 231.76, "text": " complicated, has to be easier.", "tokens": [51220, 6179, 11, 575, 281, 312, 3571, 13, 51370], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 53, "seek": 21164, "start": 231.76, "end": 235.51999999999998, "text": " You create code duplicates and the like.", "tokens": [51370, 509, 1884, 3089, 17154, 1024, 293, 264, 411, 13, 51558], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 54, "seek": 21164, "start": 235.51999999999998, "end": 239.67999999999998, "text": " If you're too lazy on the other hand, you get nothing done.", "tokens": [51558, 759, 291, 434, 886, 14847, 322, 264, 661, 1011, 11, 291, 483, 1825, 1096, 13, 51766], "temperature": 0.0, "avg_logprob": -0.172578493754069, "compression_ratio": 1.645631067961165, "no_speech_prob": 0.26647746562957764}, {"id": 55, "seek": 23968, "start": 239.68, "end": 242.56, "text": " So you have to find the sweet spot.", "tokens": [50364, 407, 291, 362, 281, 915, 264, 3844, 4008, 13, 50508], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 56, "seek": 23968, "start": 242.56, "end": 246.72, "text": " Being lazy enough and being eager enough to get things done.", "tokens": [50508, 8891, 14847, 1547, 293, 885, 18259, 1547, 281, 483, 721, 1096, 13, 50716], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 57, "seek": 23968, "start": 246.72, "end": 251.20000000000002, "text": " And because I did this in my spare time, that was the only approach which could work.", "tokens": [50716, 400, 570, 286, 630, 341, 294, 452, 13798, 565, 11, 300, 390, 264, 787, 3109, 597, 727, 589, 13, 50940], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 58, "seek": 23968, "start": 251.20000000000002, "end": 259.44, "text": " So I had to have something easy which allows me to get this job done but also allows to", "tokens": [50940, 407, 286, 632, 281, 362, 746, 1858, 597, 4045, 385, 281, 483, 341, 1691, 1096, 457, 611, 4045, 281, 51352], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 59, "seek": 23968, "start": 259.44, "end": 265.64, "text": " scale to a venue of a thousand people, to a thousand people requesting this resource", "tokens": [51352, 4373, 281, 257, 21645, 295, 257, 4714, 561, 11, 281, 257, 4714, 561, 31937, 341, 7684, 51662], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 60, "seek": 23968, "start": 265.64, "end": 267.84000000000003, "text": " at the same time.", "tokens": [51662, 412, 264, 912, 565, 13, 51772], "temperature": 0.0, "avg_logprob": -0.16708973620800263, "compression_ratio": 1.6651785714285714, "no_speech_prob": 0.047987256199121475}, {"id": 61, "seek": 26784, "start": 267.84, "end": 272.2, "text": " And here's my technical approach to that.", "tokens": [50364, 400, 510, 311, 452, 6191, 3109, 281, 300, 13, 50582], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 62, "seek": 26784, "start": 272.2, "end": 275.91999999999996, "text": " We have the people who want to sing along.", "tokens": [50582, 492, 362, 264, 561, 567, 528, 281, 1522, 2051, 13, 50768], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 63, "seek": 26784, "start": 275.91999999999996, "end": 282.0, "text": " We have the musician with the music stand with the let me call it rest-ish API, what", "tokens": [50768, 492, 362, 264, 19570, 365, 264, 1318, 1463, 365, 264, 718, 385, 818, 309, 1472, 12, 742, 9362, 11, 437, 51072], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 64, "seek": 26784, "start": 282.0, "end": 285.55999999999995, "text": " I saw wasn't so good.", "tokens": [51072, 286, 1866, 2067, 380, 370, 665, 13, 51250], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 65, "seek": 26784, "start": 285.55999999999995, "end": 288.2, "text": " A small VM at the cloud provider.", "tokens": [51250, 316, 1359, 18038, 412, 264, 4588, 12398, 13, 51382], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 66, "seek": 26784, "start": 288.2, "end": 291.28, "text": " Everything should start with something like this.", "tokens": [51382, 5471, 820, 722, 365, 746, 411, 341, 13, 51536], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 67, "seek": 26784, "start": 291.28, "end": 293.59999999999997, "text": " A host name which I said on it.", "tokens": [51536, 316, 3975, 1315, 597, 286, 848, 322, 309, 13, 51652], "temperature": 0.0, "avg_logprob": -0.282132050086712, "compression_ratio": 1.535, "no_speech_prob": 0.10022497177124023}, {"id": 68, "seek": 29360, "start": 293.6, "end": 305.08000000000004, "text": " After installed, then I used catty as a static web server for static pages.", "tokens": [50364, 2381, 8899, 11, 550, 286, 1143, 3857, 874, 382, 257, 13437, 3670, 7154, 337, 13437, 7183, 13, 50938], "temperature": 0.0, "avg_logprob": -0.2122404205967003, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.13543404638767242}, {"id": 69, "seek": 29360, "start": 305.08000000000004, "end": 311.20000000000005, "text": " Great project makes it easy to host things with the same default TLS configuration without", "tokens": [50938, 3769, 1716, 1669, 309, 1858, 281, 3975, 721, 365, 264, 912, 7576, 314, 19198, 11694, 1553, 51244], "temperature": 0.0, "avg_logprob": -0.2122404205967003, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.13543404638767242}, {"id": 70, "seek": 29360, "start": 311.20000000000005, "end": 312.20000000000005, "text": " any effort.", "tokens": [51244, 604, 4630, 13, 51294], "temperature": 0.0, "avg_logprob": -0.2122404205967003, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.13543404638767242}, {"id": 71, "seek": 29360, "start": 312.20000000000005, "end": 318.52000000000004, "text": " So it was just spinning up the container and it's immediately served the web pages like", "tokens": [51294, 407, 309, 390, 445, 15640, 493, 264, 10129, 293, 309, 311, 4258, 7584, 264, 3670, 7183, 411, 51610], "temperature": 0.0, "avg_logprob": -0.2122404205967003, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.13543404638767242}, {"id": 72, "seek": 29360, "start": 318.52000000000004, "end": 320.88, "text": " I wanted to have them.", "tokens": [51610, 286, 1415, 281, 362, 552, 13, 51728], "temperature": 0.0, "avg_logprob": -0.2122404205967003, "compression_ratio": 1.467005076142132, "no_speech_prob": 0.13543404638767242}, {"id": 73, "seek": 32088, "start": 320.88, "end": 329.0, "text": " So now we need a component which does the heavy load which transports the data to the", "tokens": [50364, 407, 586, 321, 643, 257, 6542, 597, 775, 264, 4676, 3677, 597, 5495, 82, 264, 1412, 281, 264, 50770], "temperature": 0.0, "avg_logprob": -0.19801277712167029, "compression_ratio": 1.4862385321100917, "no_speech_prob": 0.016329625621438026}, {"id": 74, "seek": 32088, "start": 329.0, "end": 331.36, "text": " devices of the people.", "tokens": [50770, 5759, 295, 264, 561, 13, 50888], "temperature": 0.0, "avg_logprob": -0.19801277712167029, "compression_ratio": 1.4862385321100917, "no_speech_prob": 0.016329625621438026}, {"id": 75, "seek": 32088, "start": 331.36, "end": 335.56, "text": " There are many solutions around and since I'm working as a cloud solution architect", "tokens": [50888, 821, 366, 867, 6547, 926, 293, 1670, 286, 478, 1364, 382, 257, 4588, 3827, 6331, 51098], "temperature": 0.0, "avg_logprob": -0.19801277712167029, "compression_ratio": 1.4862385321100917, "no_speech_prob": 0.016329625621438026}, {"id": 76, "seek": 32088, "start": 335.56, "end": 341.15999999999997, "text": " with Kubernetes, you always look at the CNCF landscape.", "tokens": [51098, 365, 23145, 11, 291, 1009, 574, 412, 264, 48714, 37, 9661, 13, 51378], "temperature": 0.0, "avg_logprob": -0.19801277712167029, "compression_ratio": 1.4862385321100917, "no_speech_prob": 0.016329625621438026}, {"id": 77, "seek": 32088, "start": 341.15999999999997, "end": 349.56, "text": " And as well in my company, as for this project, I saw NETS as the solution.", "tokens": [51378, 400, 382, 731, 294, 452, 2237, 11, 382, 337, 341, 1716, 11, 286, 1866, 426, 4850, 50, 382, 264, 3827, 13, 51798], "temperature": 0.0, "avg_logprob": -0.19801277712167029, "compression_ratio": 1.4862385321100917, "no_speech_prob": 0.016329625621438026}, {"id": 78, "seek": 34956, "start": 349.56, "end": 355.68, "text": " We use it for micro service interaction in our projects but NETS also has a web sockets", "tokens": [50364, 492, 764, 309, 337, 4532, 2643, 9285, 294, 527, 4455, 457, 426, 4850, 50, 611, 575, 257, 3670, 370, 11984, 50670], "temperature": 0.0, "avg_logprob": -0.26860130534452553, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.20202551782131195}, {"id": 79, "seek": 34956, "start": 355.68, "end": 364.04, "text": " interface which make it possible that the people which are getting the web page through", "tokens": [50670, 9226, 597, 652, 309, 1944, 300, 264, 561, 597, 366, 1242, 264, 3670, 3028, 807, 51088], "temperature": 0.0, "avg_logprob": -0.26860130534452553, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.20202551782131195}, {"id": 80, "seek": 34956, "start": 364.04, "end": 373.32, "text": " the static web page on the browser, the JavaScript part connects through web sockets to the NETS", "tokens": [51088, 264, 13437, 3670, 3028, 322, 264, 11185, 11, 264, 15778, 644, 16967, 807, 3670, 370, 11984, 281, 264, 426, 4850, 50, 51552], "temperature": 0.0, "avg_logprob": -0.26860130534452553, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.20202551782131195}, {"id": 81, "seek": 34956, "start": 373.32, "end": 374.6, "text": " server.", "tokens": [51552, 7154, 13, 51616], "temperature": 0.0, "avg_logprob": -0.26860130534452553, "compression_ratio": 1.5819209039548023, "no_speech_prob": 0.20202551782131195}, {"id": 82, "seek": 37460, "start": 374.6, "end": 380.64000000000004, "text": " And then the musician needs to have a computer which pulse the API and as soon as there is", "tokens": [50364, 400, 550, 264, 19570, 2203, 281, 362, 257, 3820, 597, 17709, 264, 9362, 293, 382, 2321, 382, 456, 307, 50666], "temperature": 0.0, "avg_logprob": -0.15202648980276925, "compression_ratio": 1.5978260869565217, "no_speech_prob": 0.2763504981994629}, {"id": 83, "seek": 37460, "start": 380.64000000000004, "end": 388.96000000000004, "text": " a new song, the lyrics get sent to the message broker and when we talk about message brokers,", "tokens": [50666, 257, 777, 2153, 11, 264, 12189, 483, 2279, 281, 264, 3636, 26502, 293, 562, 321, 751, 466, 3636, 47549, 11, 51082], "temperature": 0.0, "avg_logprob": -0.15202648980276925, "compression_ratio": 1.5978260869565217, "no_speech_prob": 0.2763504981994629}, {"id": 84, "seek": 37460, "start": 388.96000000000004, "end": 394.16, "text": " there are a few patterns around how messages are being distributed.", "tokens": [51082, 456, 366, 257, 1326, 8294, 926, 577, 7897, 366, 885, 12631, 13, 51342], "temperature": 0.0, "avg_logprob": -0.15202648980276925, "compression_ratio": 1.5978260869565217, "no_speech_prob": 0.2763504981994629}, {"id": 85, "seek": 37460, "start": 394.16, "end": 398.32000000000005, "text": " We have a classical fan out pattern here.", "tokens": [51342, 492, 362, 257, 13735, 3429, 484, 5102, 510, 13, 51550], "temperature": 0.0, "avg_logprob": -0.15202648980276925, "compression_ratio": 1.5978260869565217, "no_speech_prob": 0.2763504981994629}, {"id": 86, "seek": 39832, "start": 398.32, "end": 406.48, "text": " The message comes in, the message broker distributes it among all of the subscribed devices and", "tokens": [50364, 440, 3636, 1487, 294, 11, 264, 3636, 26502, 4400, 1819, 309, 3654, 439, 295, 264, 16665, 5759, 293, 50772], "temperature": 0.0, "avg_logprob": -0.185655233336658, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.06211404129862785}, {"id": 87, "seek": 39832, "start": 406.48, "end": 414.15999999999997, "text": " what's really nice about the approach, it's just a few lines of code in the end.", "tokens": [50772, 437, 311, 534, 1481, 466, 264, 3109, 11, 309, 311, 445, 257, 1326, 3876, 295, 3089, 294, 264, 917, 13, 51156], "temperature": 0.0, "avg_logprob": -0.185655233336658, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.06211404129862785}, {"id": 88, "seek": 39832, "start": 414.15999999999997, "end": 416.52, "text": " So let me show you.", "tokens": [51156, 407, 718, 385, 855, 291, 13, 51274], "temperature": 0.0, "avg_logprob": -0.185655233336658, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.06211404129862785}, {"id": 89, "seek": 39832, "start": 416.52, "end": 417.68, "text": " We have the project here.", "tokens": [51274, 492, 362, 264, 1716, 510, 13, 51332], "temperature": 0.0, "avg_logprob": -0.185655233336658, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.06211404129862785}, {"id": 90, "seek": 39832, "start": 417.68, "end": 425.15999999999997, "text": " You will get access to the GitLab repository at the end of the talk and also linked online.", "tokens": [51332, 509, 486, 483, 2105, 281, 264, 16939, 37880, 25841, 412, 264, 917, 295, 264, 751, 293, 611, 9408, 2950, 13, 51706], "temperature": 0.0, "avg_logprob": -0.185655233336658, "compression_ratio": 1.5317073170731708, "no_speech_prob": 0.06211404129862785}, {"id": 91, "seek": 42516, "start": 425.16, "end": 428.16, "text": " Okay, so we have the NETS server.", "tokens": [50364, 1033, 11, 370, 321, 362, 264, 426, 4850, 50, 7154, 13, 50514], "temperature": 0.0, "avg_logprob": -0.2878063047254408, "compression_ratio": 1.44375, "no_speech_prob": 0.09547988325357437}, {"id": 92, "seek": 42516, "start": 428.16, "end": 433.0, "text": " The ports, the 8443 is the web sockets port over TLS.", "tokens": [50514, 440, 18160, 11, 264, 1649, 13912, 18, 307, 264, 3670, 370, 11984, 2436, 670, 314, 19198, 13, 50756], "temperature": 0.0, "avg_logprob": -0.2878063047254408, "compression_ratio": 1.44375, "no_speech_prob": 0.09547988325357437}, {"id": 93, "seek": 42516, "start": 433.0, "end": 440.6, "text": " 3 times 2 is the NETS native port mapped to the outside.", "tokens": [50756, 805, 1413, 568, 307, 264, 426, 4850, 50, 8470, 2436, 33318, 281, 264, 2380, 13, 51136], "temperature": 0.0, "avg_logprob": -0.2878063047254408, "compression_ratio": 1.44375, "no_speech_prob": 0.09547988325357437}, {"id": 94, "seek": 42516, "start": 440.6, "end": 449.88, "text": " Then we tell NETS the host name so that for the TLS mapping and since Katie takes care", "tokens": [51136, 1396, 321, 980, 426, 4850, 50, 264, 3975, 1315, 370, 300, 337, 264, 314, 19198, 18350, 293, 1670, 19602, 2516, 1127, 51600], "temperature": 0.0, "avg_logprob": -0.2878063047254408, "compression_ratio": 1.44375, "no_speech_prob": 0.09547988325357437}, {"id": 95, "seek": 44988, "start": 449.88, "end": 460.32, "text": " of the certificates, we map the certificates from the Katie directory as we only file mount", "tokens": [50364, 295, 264, 32941, 11, 321, 4471, 264, 32941, 490, 264, 19602, 21120, 382, 321, 787, 3991, 3746, 50886], "temperature": 0.0, "avg_logprob": -0.33417343766721963, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.06933845579624176}, {"id": 96, "seek": 44988, "start": 460.32, "end": 466.96, "text": " which we can access in this Docker compose repository I have set up here.", "tokens": [50886, 597, 321, 393, 2105, 294, 341, 33772, 35925, 25841, 286, 362, 992, 493, 510, 13, 51218], "temperature": 0.0, "avg_logprob": -0.33417343766721963, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.06933845579624176}, {"id": 97, "seek": 44988, "start": 466.96, "end": 473.88, "text": " And Katie, the easiest thing, just the regular web server ports mapped to the outside.", "tokens": [51218, 400, 19602, 11, 264, 12889, 551, 11, 445, 264, 3890, 3670, 7154, 18160, 33318, 281, 264, 2380, 13, 51564], "temperature": 0.0, "avg_logprob": -0.33417343766721963, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.06933845579624176}, {"id": 98, "seek": 44988, "start": 473.88, "end": 477.52, "text": " Katie took care of getting the Lats and crypt certificates automatically.", "tokens": [51564, 19602, 1890, 1127, 295, 1242, 264, 441, 1720, 293, 9844, 32941, 6772, 13, 51746], "temperature": 0.0, "avg_logprob": -0.33417343766721963, "compression_ratio": 1.5980392156862746, "no_speech_prob": 0.06933845579624176}, {"id": 99, "seek": 47752, "start": 477.52, "end": 482.59999999999997, "text": " I only had to set the HSTS headers and had an A plus on Wallace SSL check.", "tokens": [50364, 286, 787, 632, 281, 992, 264, 389, 6840, 50, 45101, 293, 632, 364, 316, 1804, 322, 32626, 12238, 43, 1520, 13, 50618], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 100, "seek": 47752, "start": 482.59999999999997, "end": 486.2, "text": " It's something I always want to try.", "tokens": [50618, 467, 311, 746, 286, 1009, 528, 281, 853, 13, 50798], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 101, "seek": 47752, "start": 486.2, "end": 488.88, "text": " Okay, and look at the application itself.", "tokens": [50798, 1033, 11, 293, 574, 412, 264, 3861, 2564, 13, 50932], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 102, "seek": 47752, "start": 488.88, "end": 496.32, "text": " This div does everything so it's more meta text than real payload on the page.", "tokens": [50932, 639, 3414, 775, 1203, 370, 309, 311, 544, 19616, 2487, 813, 957, 30918, 322, 264, 3028, 13, 51304], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 103, "seek": 47752, "start": 496.32, "end": 501.79999999999995, "text": " There's the div with the id lyrics and as soon as something new comes in, its content is", "tokens": [51304, 821, 311, 264, 3414, 365, 264, 4496, 12189, 293, 382, 2321, 382, 746, 777, 1487, 294, 11, 1080, 2701, 307, 51578], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 104, "seek": 47752, "start": 501.79999999999995, "end": 507.08, "text": " replaced and the JavaScript part is also something very simple.", "tokens": [51578, 10772, 293, 264, 15778, 644, 307, 611, 746, 588, 2199, 13, 51842], "temperature": 0.0, "avg_logprob": -0.26151103784542273, "compression_ratio": 1.5909090909090908, "no_speech_prob": 0.1438460350036621}, {"id": 105, "seek": 50708, "start": 507.08, "end": 512.24, "text": " You see that's everything I did, basically developer.", "tokens": [50364, 509, 536, 300, 311, 1203, 286, 630, 11, 1936, 10754, 13, 50622], "temperature": 0.0, "avg_logprob": -0.22600858351763556, "compression_ratio": 1.5662100456621004, "no_speech_prob": 0.07229912281036377}, {"id": 106, "seek": 50708, "start": 512.24, "end": 514.28, "text": " The communications magic is here.", "tokens": [50622, 440, 15163, 5585, 307, 510, 13, 50724], "temperature": 0.0, "avg_logprob": -0.22600858351763556, "compression_ratio": 1.5662100456621004, "no_speech_prob": 0.07229912281036377}, {"id": 107, "seek": 50708, "start": 514.28, "end": 520.96, "text": " We include the NETS web sockets library and then we connect to the NETS server.", "tokens": [50724, 492, 4090, 264, 426, 4850, 50, 3670, 370, 11984, 6405, 293, 550, 321, 1745, 281, 264, 426, 4850, 50, 7154, 13, 51058], "temperature": 0.0, "avg_logprob": -0.22600858351763556, "compression_ratio": 1.5662100456621004, "no_speech_prob": 0.07229912281036377}, {"id": 108, "seek": 50708, "start": 520.96, "end": 527.6, "text": " We subscribe to the subject lyrics and as soon as something drops in as we receive new", "tokens": [51058, 492, 3022, 281, 264, 3983, 12189, 293, 382, 2321, 382, 746, 11438, 294, 382, 321, 4774, 777, 51390], "temperature": 0.0, "avg_logprob": -0.22600858351763556, "compression_ratio": 1.5662100456621004, "no_speech_prob": 0.07229912281036377}, {"id": 109, "seek": 50708, "start": 527.6, "end": 536.36, "text": " lyrics, we handle them over to handle lyrics which form its first line in bold and shows", "tokens": [51390, 12189, 11, 321, 4813, 552, 670, 281, 4813, 12189, 597, 1254, 1080, 700, 1622, 294, 11928, 293, 3110, 51828], "temperature": 0.0, "avg_logprob": -0.22600858351763556, "compression_ratio": 1.5662100456621004, "no_speech_prob": 0.07229912281036377}, {"id": 110, "seek": 53636, "start": 536.44, "end": 540.84, "text": " the rest just like we received it from the NETS server.", "tokens": [50368, 264, 1472, 445, 411, 321, 4613, 309, 490, 264, 426, 4850, 50, 7154, 13, 50588], "temperature": 0.0, "avg_logprob": -0.17378550906514012, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.0464310385286808}, {"id": 111, "seek": 53636, "start": 540.84, "end": 547.5600000000001, "text": " If you want to have a look at the NETS configuration, it's also not much.", "tokens": [50588, 759, 291, 528, 281, 362, 257, 574, 412, 264, 426, 4850, 50, 11694, 11, 309, 311, 611, 406, 709, 13, 50924], "temperature": 0.0, "avg_logprob": -0.17378550906514012, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.0464310385286808}, {"id": 112, "seek": 53636, "start": 547.5600000000001, "end": 550.96, "text": " I have defined two permission sets.", "tokens": [50924, 286, 362, 7642, 732, 11226, 6352, 13, 51094], "temperature": 0.0, "avg_logprob": -0.17378550906514012, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.0464310385286808}, {"id": 113, "seek": 53636, "start": 550.96, "end": 556.16, "text": " One default permission so any user of the system has the set of permissions and it's", "tokens": [51094, 1485, 7576, 11226, 370, 604, 4195, 295, 264, 1185, 575, 264, 992, 295, 32723, 293, 309, 311, 51354], "temperature": 0.0, "avg_logprob": -0.17378550906514012, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.0464310385286808}, {"id": 114, "seek": 53636, "start": 556.16, "end": 565.84, "text": " just subscribed to lyrics and we have the lyrics publish security profile for the authenticated", "tokens": [51354, 445, 16665, 281, 12189, 293, 321, 362, 264, 12189, 11374, 3825, 7964, 337, 264, 9214, 3587, 51838], "temperature": 0.0, "avg_logprob": -0.17378550906514012, "compression_ratio": 1.624413145539906, "no_speech_prob": 0.0464310385286808}, {"id": 115, "seek": 56584, "start": 565.84, "end": 566.84, "text": " publisher.", "tokens": [50364, 25088, 13, 50414], "temperature": 0.0, "avg_logprob": -0.357542320534035, "compression_ratio": 1.3986486486486487, "no_speech_prob": 0.02138834074139595}, {"id": 116, "seek": 56584, "start": 566.84, "end": 573.2800000000001, "text": " I defined the user with the hash password, assigned the permission and down below here", "tokens": [50414, 286, 7642, 264, 4195, 365, 264, 22019, 11524, 11, 13279, 264, 11226, 293, 760, 2507, 510, 50736], "temperature": 0.0, "avg_logprob": -0.357542320534035, "compression_ratio": 1.3986486486486487, "no_speech_prob": 0.02138834074139595}, {"id": 117, "seek": 56584, "start": 573.2800000000001, "end": 584.0, "text": " you can see the web socket definition where I also use the TLS certificate, caddy gets", "tokens": [50736, 291, 393, 536, 264, 3670, 19741, 7123, 689, 286, 611, 764, 264, 314, 19198, 15953, 11, 12209, 3173, 2170, 51272], "temperature": 0.0, "avg_logprob": -0.357542320534035, "compression_ratio": 1.3986486486486487, "no_speech_prob": 0.02138834074139595}, {"id": 118, "seek": 56584, "start": 584.0, "end": 586.8000000000001, "text": " me from let's encrypt.", "tokens": [51272, 385, 490, 718, 311, 17972, 662, 13, 51412], "temperature": 0.0, "avg_logprob": -0.357542320534035, "compression_ratio": 1.3986486486486487, "no_speech_prob": 0.02138834074139595}, {"id": 119, "seek": 58680, "start": 586.8, "end": 597.9599999999999, "text": " Next line I assign anonymous access to the user that it works with the login.", "tokens": [50364, 3087, 1622, 286, 6269, 24932, 2105, 281, 264, 4195, 300, 309, 1985, 365, 264, 24276, 13, 50922], "temperature": 0.0, "avg_logprob": -0.3489052303253658, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.06773779541254044}, {"id": 120, "seek": 58680, "start": 597.9599999999999, "end": 599.9599999999999, "text": " No, not login.", "tokens": [50922, 883, 11, 406, 24276, 13, 51022], "temperature": 0.0, "avg_logprob": -0.3489052303253658, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.06773779541254044}, {"id": 121, "seek": 58680, "start": 599.9599999999999, "end": 603.8, "text": " Okay, that's it in a nutshell.", "tokens": [51022, 1033, 11, 300, 311, 309, 294, 257, 37711, 13, 51214], "temperature": 0.0, "avg_logprob": -0.3489052303253658, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.06773779541254044}, {"id": 122, "seek": 58680, "start": 603.8, "end": 612.3599999999999, "text": " If you are interested about the topic of message brokers, I can highly recommend the book enterprise", "tokens": [51214, 759, 291, 366, 3102, 466, 264, 4829, 295, 3636, 47549, 11, 286, 393, 5405, 2748, 264, 1446, 14132, 51642], "temperature": 0.0, "avg_logprob": -0.3489052303253658, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.06773779541254044}, {"id": 123, "seek": 58680, "start": 612.3599999999999, "end": 615.3199999999999, "text": " integration patterns.", "tokens": [51642, 10980, 8294, 13, 51790], "temperature": 0.0, "avg_logprob": -0.3489052303253658, "compression_ratio": 1.455621301775148, "no_speech_prob": 0.06773779541254044}, {"id": 124, "seek": 61532, "start": 615.32, "end": 617.32, "text": " It's a book from 2003.", "tokens": [50364, 467, 311, 257, 1446, 490, 16416, 13, 50464], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 125, "seek": 61532, "start": 617.32, "end": 625.32, "text": " I'm showing an IT book from 2003 but the principles are still the same.", "tokens": [50464, 286, 478, 4099, 364, 6783, 1446, 490, 16416, 457, 264, 9156, 366, 920, 264, 912, 13, 50864], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 126, "seek": 61532, "start": 625.32, "end": 627.24, "text": " Of course, there are a few new.", "tokens": [50864, 2720, 1164, 11, 456, 366, 257, 1326, 777, 13, 50960], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 127, "seek": 61532, "start": 627.24, "end": 633.88, "text": " If you go to the website, they also have listed new principles but I wish I had new in the", "tokens": [50960, 759, 291, 352, 281, 264, 3144, 11, 436, 611, 362, 10052, 777, 9156, 457, 286, 3172, 286, 632, 777, 294, 264, 51292], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 128, "seek": 61532, "start": 633.88, "end": 637.12, "text": " book 20 years earlier.", "tokens": [51292, 1446, 945, 924, 3071, 13, 51454], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 129, "seek": 61532, "start": 637.12, "end": 639.7600000000001, "text": " Now I have it on my desk.", "tokens": [51454, 823, 286, 362, 309, 322, 452, 10026, 13, 51586], "temperature": 0.0, "avg_logprob": -0.27898211479187013, "compression_ratio": 1.52, "no_speech_prob": 0.06718620657920837}, {"id": 130, "seek": 63976, "start": 639.76, "end": 647.4399999999999, "text": " My GitHub repo, check out Nats, check out caddy server and it's absolutely possible.", "tokens": [50364, 1222, 23331, 49040, 11, 1520, 484, 426, 1720, 11, 1520, 484, 12209, 3173, 7154, 293, 309, 311, 3122, 1944, 13, 50748], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 131, "seek": 63976, "start": 647.4399999999999, "end": 649.96, "text": " You don't have to use Nats for this.", "tokens": [50748, 509, 500, 380, 362, 281, 764, 426, 1720, 337, 341, 13, 50874], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 132, "seek": 63976, "start": 649.96, "end": 651.88, "text": " You can use an MQTT server.", "tokens": [50874, 509, 393, 764, 364, 376, 48, 28178, 7154, 13, 50970], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 133, "seek": 63976, "start": 651.88, "end": 656.04, "text": " I did the same example with EMQX.", "tokens": [50970, 286, 630, 264, 912, 1365, 365, 16237, 48, 55, 13, 51178], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 134, "seek": 63976, "start": 656.04, "end": 659.72, "text": " Rapid MQ should work.", "tokens": [51178, 44580, 376, 48, 820, 589, 13, 51362], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 135, "seek": 63976, "start": 659.72, "end": 669.4, "text": " Also with Redis, it also has web sockets integration so you could also use that.", "tokens": [51362, 2743, 365, 4477, 271, 11, 309, 611, 575, 3670, 370, 11984, 10980, 370, 291, 727, 611, 764, 300, 13, 51846], "temperature": 0.0, "avg_logprob": -0.2608832884370611, "compression_ratio": 1.43, "no_speech_prob": 0.03810892626643181}, {"id": 136, "seek": 66940, "start": 669.4, "end": 670.76, "text": " My example was in Nats.", "tokens": [50364, 1222, 1365, 390, 294, 426, 1720, 13, 50432], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 137, "seek": 66940, "start": 670.76, "end": 675.64, "text": " If you are interested in Nats, I asked the guys of the project if they could send me some.", "tokens": [50432, 759, 291, 366, 3102, 294, 426, 1720, 11, 286, 2351, 264, 1074, 295, 264, 1716, 498, 436, 727, 2845, 385, 512, 13, 50676], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 138, "seek": 66940, "start": 675.64, "end": 679.52, "text": " On this corner of the desk, if you leave the room here, you can grab a sticker.", "tokens": [50676, 1282, 341, 4538, 295, 264, 10026, 11, 498, 291, 1856, 264, 1808, 510, 11, 291, 393, 4444, 257, 20400, 13, 50870], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 139, "seek": 66940, "start": 679.52, "end": 683.52, "text": " After all, we are on conferences for the stickers, isn't it?", "tokens": [50870, 2381, 439, 11, 321, 366, 322, 22032, 337, 264, 21019, 11, 1943, 380, 309, 30, 51070], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 140, "seek": 66940, "start": 683.52, "end": 686.76, "text": " That way.", "tokens": [51070, 663, 636, 13, 51232], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 141, "seek": 66940, "start": 686.76, "end": 690.3199999999999, "text": " Okay.", "tokens": [51232, 1033, 13, 51410], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 142, "seek": 66940, "start": 690.3199999999999, "end": 691.52, "text": " That's about it.", "tokens": [51410, 663, 311, 466, 309, 13, 51470], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 143, "seek": 66940, "start": 691.52, "end": 692.52, "text": " What did we learn?", "tokens": [51470, 708, 630, 321, 1466, 30, 51520], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 144, "seek": 66940, "start": 692.52, "end": 698.24, "text": " Let others do the heavy lifting though.", "tokens": [51520, 961, 2357, 360, 264, 4676, 15798, 1673, 13, 51806], "temperature": 0.0, "avg_logprob": -0.3438654391565055, "compression_ratio": 1.52863436123348, "no_speech_prob": 0.04210370033979416}, {"id": 145, "seek": 69824, "start": 698.24, "end": 706.76, "text": " Just be lazy enough to find the right ways and get things done and concentrate on the", "tokens": [50364, 1449, 312, 14847, 1547, 281, 915, 264, 558, 2098, 293, 483, 721, 1096, 293, 18089, 322, 264, 50790], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 146, "seek": 69824, "start": 706.76, "end": 708.6800000000001, "text": " things that really matters.", "tokens": [50790, 721, 300, 534, 7001, 13, 50886], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 147, "seek": 69824, "start": 708.6800000000001, "end": 709.96, "text": " Reach out to me if you have questions.", "tokens": [50886, 35904, 484, 281, 385, 498, 291, 362, 1651, 13, 50950], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 148, "seek": 69824, "start": 709.96, "end": 711.6, "text": " I will be around.", "tokens": [50950, 286, 486, 312, 926, 13, 51032], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 149, "seek": 69824, "start": 711.6, "end": 713.0, "text": " Don't forget the stickers.", "tokens": [51032, 1468, 380, 2870, 264, 21019, 13, 51102], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 150, "seek": 69824, "start": 713.0, "end": 715.6800000000001, "text": " Have a great Svastim Sunday and a safe trip home.", "tokens": [51102, 3560, 257, 869, 318, 85, 525, 332, 7776, 293, 257, 3273, 4931, 1280, 13, 51236], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 151, "seek": 69824, "start": 715.6800000000001, "end": 716.88, "text": " I'm Markus R\u00f6ntschler.", "tokens": [51236, 286, 478, 45041, 497, 973, 580, 6145, 1918, 13, 51296], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 152, "seek": 69824, "start": 716.88, "end": 723.4, "text": " Thank you.", "tokens": [51296, 1044, 291, 13, 51622], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 153, "seek": 69824, "start": 723.4, "end": 724.4, "text": " Okay.", "tokens": [51622, 1033, 13, 51672], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}, {"id": 154, "seek": 69824, "start": 724.4, "end": 724.44, "text": " Thank you for your talk.", "tokens": [51672, 1044, 291, 337, 428, 751, 13, 51674], "temperature": 0.0, "avg_logprob": -0.3327054682466173, "compression_ratio": 1.4626168224299065, "no_speech_prob": 0.12771590054035187}], "language": "en"}