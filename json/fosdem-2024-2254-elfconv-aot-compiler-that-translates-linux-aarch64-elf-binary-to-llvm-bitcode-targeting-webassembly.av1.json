{"text": " that transits Reax-664L binary to LNBM bit code targeting web assembly. So first, I will explain what is web assembly or wasn't for short and why we use wasn't. And wasn't with a virtual machine instruction set and currently this is used on servers or as well as browsers in production environments. And compared to existing applications, there are mainly two features, portability and security. And portability wasn't enabled us to run applications on both browsers and servers without modification. And of course, wasn't dependent on CPU architecture so that we can run wasn't applications on computers with various CPU architectures without modification. And in security, in the case of outside browsers, wasn't is highly isolated from the host kernel by Washi. And Washi is an API that provides access to similar OSR like features. For example, for systems so gets and so on. Yes, yes, and, yes, and Washi is implemented by Washi at times. For example, wasn't time and wasn't H and so on. And was was was Harvard, Harvard architecture designs and so the memory of the wasn't was wasn't instance is which clearly separated into right now data memory and memory and code of was can access only right now. Data memory and which include increases security. However, there are some limitations in the capability of applications. And first, wasn't can, wasn't can jump to only the course that are determined at compare time and in other words, it is impossible to indirectly jump to the code generated in the data memory. And second, was she implementation doesn't cover all projects API, for example, folk and exec and so on. So when you develop wasn't applications, you should consider the limitations. And now, many programming languages support was, for example, C C plus plus plus and go and so on. And however, it it isn't easy to build was in some cases as follows. And mainly there are three cases for us the programming language that you want to use doesn't completely support wasn't. And, and currently many major languages have begun to support wasn't, but only limited number of languages are available in production environments now. Second, binary is available, but source codes of the binaries are not available. And recently the number of op source, op source programs has increased, but several, several programs are still not published. And third, the case of time consuming to building the environment. And if the dependent libraries of the target program are not maintained, you might be not able to build the libraries. And in such a case, it might take much time to build. So next, I show existing projects that run in X binary on wasn't. And the first, and the first project is tiny mu. And this is the X86 and describe emulator available on the browser. And, and the next kernel can run on the browser. And so, and the second project is counter to wasn't. And this enables us to run the X kernel and counter, run time with emulators compared to wasn't. For example, tiny mu. And, and, and this can, can run, well, counter us without modification, but it can run with the same amount of time. And, and, and this can, can run, well, counter us with modification both on the browsers and wash-around times. And, but, however, these projects, these, these projects use PM on emulator that compiles a, a, relax, describe 32 L binary to a, a, several binary formats. So next, I will show the demo of L, L comp. Can you see? Watch. Okay. Okay. Thank you. So, and, well, well, I have prepared the counter image for the L comp project. And, and, and now in, in this terminal, the container of L comp has already started. And the target sample L binary to be converted is examples, L-sensitive, L-thousand. And, and this program outputs 100, 100 prime numbers in ascending order. And, okay. So we, we try to compare this L binary to was with L comp. And in the directory, there's a one file L comp.sh and L comp.sh is used to try to L comp to compile. So, and, okay. Okay. So, and target this was browser and L comp. And target this was browser and L comp. And target this L-sensitive L-thousand. Now L comp comp. Okay. Great. And, and serial files are generated and we can execute the was application with MS Gryffin. So, run. The browser. Okay. So the cyber was the was application has started now. And, okay. Wait. You can see the, I'll put this correct in the browser. Okay. So, okay. So now let's return to the presentation. So, so, so in compiling L binary to L and B and B code two, two modules are used. Okay. First is L comp lifter. This process L binary and maps every section and operates the next module. And, and is a library for lifting machine code to L and B and B code. And, as this figure shows L comp comp, L binary to L and B, L and B code with these two modules. And next, I will explain how L comp comp, L binary to L and B code and was binary. And, and ramming converter function to one L, B, M, I, R function. For example, as you can see, the, the, the, the, the, the square function one of the machine code is combative to the underscore function one and the square lift function is a L, M, B, M, I, R. Yeah. So, and also one CPU instruction is combative to one L, B, M, I, R block. And as you can see, the machine, the instruction of move X to X zero of the machine code is combative to one underscore move. Yeah. Okay. Okay. So next, I will explain the details of the combative, combative L, B, M, I, R block from CPU instruction. And there are three steps in the combative L, B, M, I, R block. And the first step is the program counter calculation. And this here shows percent 29 is a program counter of this instruction. And the next piece is updated to the next program counter. Yeah. And the second step is open calculation. And in this here, this, this instruction uses X seven and X three, X seven and X three registers. And in the open calculation, the X seven and X three is loaded. Okay. So, and the third step is calling the, calling the function of the instruction-specific operation. For each CPU instruction, RAMU generates a function that performs the instruction-specific operation. And the corresponding function is called at the end of the LM, I, R block. At this end. So next, as I explained in the beginning, the code of the quantum can indirectly jump to only the code that is determinable at compare time. And this figure shows how to deal with indirect jump VR instruction. So in this figure with VR X seven, indirectly jump to the instruction of move X eight and X nine. And in the error, the VR instruction. And the address to jump is 30% IDR and jumps the block of percent error on the square IDR. This is the VR instruction. Okay. So, and after jumping, R on the square IDR, we get the target rubber by calling the getR function and, and, and start to pass the VR. And after that, with the VR instruction, we jump to the target block. And also in that VR instruction, it requires all candidate labels as the argument. And this is, yeah, and this array consists of all labels in this function. And, well, but in the current design, the array of candidate labels includes only the labels within this function. So, and, and Elf Comp doesn't, doesn't support the jump and long jump now. And that is a future task. And next in converting the LNB bit code to a wasn't statically links the LNB bit code and Elf Comp runtime. And Elf Comp runtime includes the mapped, mapped memory of the original error binary. And that is stuck in the heap area of the error binary. So, and also Elf Comp runtime includes the program of the system called the emulation. And existing compiler, for example, M script and Washi CK compiles these two modules to wasn't. Okay. So, and in the React system called emulation, there are two ways of implementing the emulation. And the way of implementing depends on the RibBushy implementation. And in case one, if the RibBushy implements the tag system call, Elf Comp just uses the RibBushy function as shown in this figure of the right system call. Okay. And in case two, if the RibBushy doesn't implements the target, target system call, Elf Comp should implements the system call. And as shown in this figure of the not used PRK function in this code. So, it implements the system call. Just watch out. Okay. So, next, I will show the parameters of the generated binary, parameters evaluation. Okay. So, and the target sample F binary is a simple prime number calculator. And this program computes all prime numbers, lessens the input to integer. So, and one thing to notice here is that in this program, the evaluation are using X H6 under square 64 binary instead of the wasn't binary. Because in the current implementation, the system call emulation for wash-down time is insufficient. So, we use X H6 under square 64 as the output binary for benchmark test. I'm sorry. So, and the comparison method is QM emulation X64 to X H6 and square 64. So, we compare QM emulation with binary LD compilation. So, and I measure the power months in two cases. In the first case, the input integer is 10 million. And the second case is 15 million. So, and the power month evaluation is as follows. So, and as you can see, in both cases, one and the case two, LD compiling by LFCOM is 4,000 QM emulation. And therefore, we can say that LD compiling is 4,000 QM emulation, at least in some cases. So, okay, so last, I will show future works. And first, we will support the output of other binary formats. And currently, LFCOM supports the output binary of only Wazm and LFX H664 binary now. So, we will support the output of other binary as output of mine. So, second, we will never as compiles LF binary of other CPU architectures. Now, LFCOM can compile H664 LF binary. Yeah, so, yes. In the future, we will support other input binary. Okay, so, and third, we will, we will, we will append system calls emulation. And now LFCOM implements a part of system calls and a lot of system calls are not implemented. So, and specifically, when targeting Wazm as the output binary formats, some system calls are difficult to implement. For example, for exec and so on. Yeah, so, so, so, I think that implementing that system calls is very variable. So, and fourth, supporting dynamic linking. And now LFCOM can compile the static, static, link, LFU binary. So, and that's where that dynamic linking is an important function and will support in the future. Yeah. Okay, so, and fifth is the promise analysis of the Wazm targets. Yeah. Now, I measure the promise evaluation under the H664. So, I shoot promise at the binary of the Wazm targets. Okay. Okay, so, and the sixth is making LNB bit calls generated more efficient. Yeah, and, and so, yeah, okay. So, in the current implemented. I translate that to Wazm 32. Sorry, well, I, sorry. I, the 32 bit x86 platform. So, I think that the H664 L binary is mainly used in the world. So, I think the support of the L binary H664 is a big influence. I think that's. Yeah. I take the top. And you consider using it instead of Remila revenge, if you know revenge. I'm a core developer of revenge, disclaimer. So, I'm sorry. Could you, could you, if you have a question, more sorry. Yeah. Remila is a tool to leave from executable code to bit code. Yeah. There's another tool which we developed, which is called revenge that does something similar. Maybe have you considered that? Are you interested in that? I don't know. Sorry, I could use a more, sorry, sorry, sorry. Yeah. Is it an alternative to, revenge is an alternative library to, Remila. Have you, have you heard of that? Well, have you heard of the revenge library? Sorry. It was just saying, if you'd heard of the revenge library, does something similar to Remila. It sounds like you haven't heard of it. That was, that was my interpretation of the question. I think that will fly. I'm sorry. Yeah. When you measured, you did a performance between Kwemu and Elfkong. Yeah. Was that like the, what did you measure there? I didn't understand was it the compilation or running? What did you measure in that performance? Well, comparison performance. Yes. So, and, okay. Yes. Basically the, component performance is of Elfkong. It's very long. But in this project, in this program of the sample, sample F binary, about, about it takes one minute for the compiling. Oh, yes. It's the compilation that is faster. Or is it the running of the thing that is faster? Is it like, I don't, I don't understand. We're measuring the, the running, like the produced results for the compilation. Like which? Like which, I'm sorry. And, I guess that is for like running. That, yes. So, by Kwemu, it runs, it runs like the, it has the, the G that turns into the native code. Like it has the, ahead of time, or you have ahead of time compilation for that, what, what, what's that you run on a browser, right? Later. So, are you looking at the performance running on the browser here and comparing that to Kwemu? Or are we looking at that, like some compilation item, just understand like what are we comparing? Sorry, so, could you ask after the presentation again? Sorry. I'm sorry. Thank you. Yeah. So, you compare the performance with like emulated ARH 64 versus a X86 binary, binary. Have you also tried, like after converting this with, it was Alphcon to convert it back to ARH 64 and benchmark that against the original source? So, like what is the overhead of one, like lifting it and? So, the question is overhead of the lifting, binary lifting. Oh, yeah. So, yeah, so, and in the program of this performance evaluation, the performance overhead of the lifting is very small. And maybe it takes maybe three or four seconds to compare the lift, the binary to L and B bitcalls. Yeah, but what I meant is like, if you combine the big bitcalls back to the original architecture, so how is the performance of that binary compared to the original binary? So, you say that from L binary to the target architecture binary, the performance overhead in the LB bitcalls to target binary. Oh, sorry. I just follow up on that. So, if you just, I will just drop in directly, but from experience.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 12.68, "text": " that transits Reax-664L binary to LNBM bit code targeting web assembly.", "tokens": [50364, 300, 1145, 1208, 1300, 2797, 12, 21, 19395, 43, 17434, 281, 441, 45, 18345, 857, 3089, 17918, 3670, 12103, 13, 50998], "temperature": 0.0, "avg_logprob": -0.7347579463835685, "compression_ratio": 1.3717948717948718, "no_speech_prob": 0.07403203845024109}, {"id": 1, "seek": 0, "start": 12.68, "end": 19.96, "text": " So first, I will explain what is web assembly or", "tokens": [50998, 407, 700, 11, 286, 486, 2903, 437, 307, 3670, 12103, 420, 51362], "temperature": 0.0, "avg_logprob": -0.7347579463835685, "compression_ratio": 1.3717948717948718, "no_speech_prob": 0.07403203845024109}, {"id": 2, "seek": 0, "start": 19.96, "end": 24.04, "text": " wasn't for short and why we use wasn't.", "tokens": [51362, 2067, 380, 337, 2099, 293, 983, 321, 764, 2067, 380, 13, 51566], "temperature": 0.0, "avg_logprob": -0.7347579463835685, "compression_ratio": 1.3717948717948718, "no_speech_prob": 0.07403203845024109}, {"id": 3, "seek": 0, "start": 24.04, "end": 27.6, "text": " And wasn't with a virtual machine instruction set and", "tokens": [51566, 400, 2067, 380, 365, 257, 6374, 3479, 10951, 992, 293, 51744], "temperature": 0.0, "avg_logprob": -0.7347579463835685, "compression_ratio": 1.3717948717948718, "no_speech_prob": 0.07403203845024109}, {"id": 4, "seek": 2760, "start": 27.6, "end": 34.08, "text": " currently this is used on servers or", "tokens": [50364, 4362, 341, 307, 1143, 322, 15909, 420, 50688], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 5, "seek": 2760, "start": 34.08, "end": 36.84, "text": " as well as browsers in production environments.", "tokens": [50688, 382, 731, 382, 36069, 294, 4265, 12388, 13, 50826], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 6, "seek": 2760, "start": 39.480000000000004, "end": 42.480000000000004, "text": " And compared to existing applications,", "tokens": [50958, 400, 5347, 281, 6741, 5821, 11, 51108], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 7, "seek": 2760, "start": 42.480000000000004, "end": 45.52, "text": " there are mainly two features, portability and security.", "tokens": [51108, 456, 366, 8704, 732, 4122, 11, 2436, 2310, 293, 3825, 13, 51260], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 8, "seek": 2760, "start": 46.68000000000001, "end": 51.52, "text": " And portability wasn't enabled us to run applications on both", "tokens": [51318, 400, 2436, 2310, 2067, 380, 15172, 505, 281, 1190, 5821, 322, 1293, 51560], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 9, "seek": 2760, "start": 51.52, "end": 55.84, "text": " browsers and servers without modification.", "tokens": [51560, 36069, 293, 15909, 1553, 26747, 13, 51776], "temperature": 0.0, "avg_logprob": -0.4225415289402008, "compression_ratio": 1.6193181818181819, "no_speech_prob": 0.059647757560014725}, {"id": 10, "seek": 5584, "start": 55.84, "end": 61.28, "text": " And of course, wasn't dependent on CPU architecture so", "tokens": [50364, 400, 295, 1164, 11, 2067, 380, 12334, 322, 13199, 9482, 370, 50636], "temperature": 0.0, "avg_logprob": -0.3444419503211975, "compression_ratio": 1.502857142857143, "no_speech_prob": 0.00821437407284975}, {"id": 11, "seek": 5584, "start": 61.28, "end": 65.84, "text": " that we can run wasn't applications on computers with various", "tokens": [50636, 300, 321, 393, 1190, 2067, 380, 5821, 322, 10807, 365, 3683, 50864], "temperature": 0.0, "avg_logprob": -0.3444419503211975, "compression_ratio": 1.502857142857143, "no_speech_prob": 0.00821437407284975}, {"id": 12, "seek": 5584, "start": 65.84, "end": 67.72, "text": " CPU architectures without modification.", "tokens": [50864, 13199, 6331, 1303, 1553, 26747, 13, 50958], "temperature": 0.0, "avg_logprob": -0.3444419503211975, "compression_ratio": 1.502857142857143, "no_speech_prob": 0.00821437407284975}, {"id": 13, "seek": 5584, "start": 71.28, "end": 76.36, "text": " And in security, in the case of outside browsers,", "tokens": [51136, 400, 294, 3825, 11, 294, 264, 1389, 295, 2380, 36069, 11, 51390], "temperature": 0.0, "avg_logprob": -0.3444419503211975, "compression_ratio": 1.502857142857143, "no_speech_prob": 0.00821437407284975}, {"id": 14, "seek": 5584, "start": 76.36, "end": 81.52000000000001, "text": " wasn't is highly isolated from the host kernel by Washi.", "tokens": [51390, 2067, 380, 307, 5405, 14621, 490, 264, 3975, 28256, 538, 3027, 4954, 13, 51648], "temperature": 0.0, "avg_logprob": -0.3444419503211975, "compression_ratio": 1.502857142857143, "no_speech_prob": 0.00821437407284975}, {"id": 15, "seek": 8152, "start": 81.52, "end": 87.67999999999999, "text": " And Washi is an API that provides access to", "tokens": [50364, 400, 3027, 4954, 307, 364, 9362, 300, 6417, 2105, 281, 50672], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 16, "seek": 8152, "start": 87.67999999999999, "end": 89.6, "text": " similar OSR like features.", "tokens": [50672, 2531, 12731, 49, 411, 4122, 13, 50768], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 17, "seek": 8152, "start": 90.88, "end": 93.52, "text": " For example, for systems so gets and so on.", "tokens": [50832, 1171, 1365, 11, 337, 3652, 370, 2170, 293, 370, 322, 13, 50964], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 18, "seek": 8152, "start": 101.52, "end": 105.52, "text": " Yes, yes, and, yes, and", "tokens": [51364, 1079, 11, 2086, 11, 293, 11, 2086, 11, 293, 51564], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 19, "seek": 8152, "start": 105.52, "end": 108.03999999999999, "text": " Washi is implemented by Washi at times.", "tokens": [51564, 3027, 4954, 307, 12270, 538, 3027, 4954, 412, 1413, 13, 51690], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 20, "seek": 8152, "start": 108.03999999999999, "end": 110.52, "text": " For example, wasn't time and wasn't H and so on.", "tokens": [51690, 1171, 1365, 11, 2067, 380, 565, 293, 2067, 380, 389, 293, 370, 322, 13, 51814], "temperature": 0.0, "avg_logprob": -0.6135420603294895, "compression_ratio": 1.523489932885906, "no_speech_prob": 0.017945794388651848}, {"id": 21, "seek": 11152, "start": 111.8, "end": 117.6, "text": " And was was was Harvard, Harvard architecture designs and", "tokens": [50378, 400, 390, 390, 390, 13378, 11, 13378, 9482, 11347, 293, 50668], "temperature": 0.0, "avg_logprob": -0.6698434275965537, "compression_ratio": 1.6645569620253164, "no_speech_prob": 0.013582346960902214}, {"id": 22, "seek": 11152, "start": 117.6, "end": 121.64, "text": " so the memory of the wasn't was wasn't instance is", "tokens": [50668, 370, 264, 4675, 295, 264, 2067, 380, 390, 2067, 380, 5197, 307, 50870], "temperature": 0.0, "avg_logprob": -0.6698434275965537, "compression_ratio": 1.6645569620253164, "no_speech_prob": 0.013582346960902214}, {"id": 23, "seek": 11152, "start": 121.64, "end": 126.56, "text": " which clearly separated into right now data memory and", "tokens": [50870, 597, 4448, 12005, 666, 558, 586, 1412, 4675, 293, 51116], "temperature": 0.0, "avg_logprob": -0.6698434275965537, "compression_ratio": 1.6645569620253164, "no_speech_prob": 0.013582346960902214}, {"id": 24, "seek": 11152, "start": 126.56, "end": 132.72, "text": " memory and code of was can access only right now.", "tokens": [51116, 4675, 293, 3089, 295, 390, 393, 2105, 787, 558, 586, 13, 51424], "temperature": 0.0, "avg_logprob": -0.6698434275965537, "compression_ratio": 1.6645569620253164, "no_speech_prob": 0.013582346960902214}, {"id": 25, "seek": 11152, "start": 132.72, "end": 137.32, "text": " Data memory and which include increases security.", "tokens": [51424, 11888, 4675, 293, 597, 4090, 8637, 3825, 13, 51654], "temperature": 0.0, "avg_logprob": -0.6698434275965537, "compression_ratio": 1.6645569620253164, "no_speech_prob": 0.013582346960902214}, {"id": 26, "seek": 13732, "start": 138.32, "end": 144.23999999999998, "text": " However, there are some limitations in the capability of", "tokens": [50414, 2908, 11, 456, 366, 512, 15705, 294, 264, 13759, 295, 50710], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 27, "seek": 13732, "start": 144.23999999999998, "end": 147.04, "text": " applications.", "tokens": [50710, 5821, 13, 50850], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 28, "seek": 13732, "start": 147.04, "end": 152.28, "text": " And first, wasn't can, wasn't can jump to only the course that", "tokens": [50850, 400, 700, 11, 2067, 380, 393, 11, 2067, 380, 393, 3012, 281, 787, 264, 1164, 300, 51112], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 29, "seek": 13732, "start": 152.28, "end": 155.64, "text": " are determined at compare time and", "tokens": [51112, 366, 9540, 412, 6794, 565, 293, 51280], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 30, "seek": 13732, "start": 155.64, "end": 160.56, "text": " in other words, it is impossible to indirectly jump to the code", "tokens": [51280, 294, 661, 2283, 11, 309, 307, 6243, 281, 37779, 3012, 281, 264, 3089, 51526], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 31, "seek": 13732, "start": 160.56, "end": 162.56, "text": " generated in the data memory.", "tokens": [51526, 10833, 294, 264, 1412, 4675, 13, 51626], "temperature": 0.0, "avg_logprob": -0.5740284136871794, "compression_ratio": 1.5411764705882354, "no_speech_prob": 0.0005968103068880737}, {"id": 32, "seek": 16256, "start": 163.56, "end": 169.2, "text": " And second, was she implementation doesn't cover all", "tokens": [50414, 400, 1150, 11, 390, 750, 11420, 1177, 380, 2060, 439, 50696], "temperature": 0.0, "avg_logprob": -0.4810867638423525, "compression_ratio": 1.375, "no_speech_prob": 0.005777167621999979}, {"id": 33, "seek": 16256, "start": 169.2, "end": 173.68, "text": " projects API, for example, folk and exec and so on.", "tokens": [50696, 4455, 9362, 11, 337, 1365, 11, 15748, 293, 4454, 293, 370, 322, 13, 50920], "temperature": 0.0, "avg_logprob": -0.4810867638423525, "compression_ratio": 1.375, "no_speech_prob": 0.005777167621999979}, {"id": 34, "seek": 16256, "start": 173.68, "end": 177.6, "text": " So when you develop wasn't applications,", "tokens": [50920, 407, 562, 291, 1499, 2067, 380, 5821, 11, 51116], "temperature": 0.0, "avg_logprob": -0.4810867638423525, "compression_ratio": 1.375, "no_speech_prob": 0.005777167621999979}, {"id": 35, "seek": 16256, "start": 177.6, "end": 180.48000000000002, "text": " you should consider the limitations.", "tokens": [51116, 291, 820, 1949, 264, 15705, 13, 51260], "temperature": 0.0, "avg_logprob": -0.4810867638423525, "compression_ratio": 1.375, "no_speech_prob": 0.005777167621999979}, {"id": 36, "seek": 16256, "start": 184.0, "end": 189.48000000000002, "text": " And now, many programming languages support was,", "tokens": [51436, 400, 586, 11, 867, 9410, 8650, 1406, 390, 11, 51710], "temperature": 0.0, "avg_logprob": -0.4810867638423525, "compression_ratio": 1.375, "no_speech_prob": 0.005777167621999979}, {"id": 37, "seek": 18948, "start": 189.48, "end": 193.0, "text": " for example, C C plus plus plus and go and so on.", "tokens": [50364, 337, 1365, 11, 383, 383, 1804, 1804, 1804, 293, 352, 293, 370, 322, 13, 50540], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 38, "seek": 18948, "start": 193.0, "end": 198.79999999999998, "text": " And however, it it isn't easy to build was in some cases as", "tokens": [50540, 400, 4461, 11, 309, 309, 1943, 380, 1858, 281, 1322, 390, 294, 512, 3331, 382, 50830], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 39, "seek": 18948, "start": 198.79999999999998, "end": 199.79999999999998, "text": " follows.", "tokens": [50830, 10002, 13, 50880], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 40, "seek": 18948, "start": 201.79999999999998, "end": 207.95999999999998, "text": " And mainly there are three cases for us the programming", "tokens": [50980, 400, 8704, 456, 366, 1045, 3331, 337, 505, 264, 9410, 51288], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 41, "seek": 18948, "start": 207.95999999999998, "end": 211.12, "text": " language that you want to use doesn't completely support", "tokens": [51288, 2856, 300, 291, 528, 281, 764, 1177, 380, 2584, 1406, 51446], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 42, "seek": 18948, "start": 211.12, "end": 212.12, "text": " wasn't.", "tokens": [51446, 2067, 380, 13, 51496], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 43, "seek": 18948, "start": 214.35999999999999, "end": 219.44, "text": " And, and currently many major languages have begun to", "tokens": [51608, 400, 11, 293, 4362, 867, 2563, 8650, 362, 16009, 281, 51862], "temperature": 0.0, "avg_logprob": -0.4339345932006836, "compression_ratio": 1.575268817204301, "no_speech_prob": 0.01657753624022007}, {"id": 44, "seek": 21944, "start": 219.44, "end": 223.6, "text": " support wasn't, but only limited number of languages", "tokens": [50364, 1406, 2067, 380, 11, 457, 787, 5567, 1230, 295, 8650, 50572], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 45, "seek": 21944, "start": 223.6, "end": 226.52, "text": " are available in production environments now.", "tokens": [50572, 366, 2435, 294, 4265, 12388, 586, 13, 50718], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 46, "seek": 21944, "start": 229.07999999999998, "end": 232.8, "text": " Second, binary is available, but source codes of the", "tokens": [50846, 5736, 11, 17434, 307, 2435, 11, 457, 4009, 14211, 295, 264, 51032], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 47, "seek": 21944, "start": 232.8, "end": 234.2, "text": " binaries are not available.", "tokens": [51032, 5171, 4889, 366, 406, 2435, 13, 51102], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 48, "seek": 21944, "start": 235.56, "end": 240.96, "text": " And recently the number of op source, op source", "tokens": [51170, 400, 3938, 264, 1230, 295, 999, 4009, 11, 999, 4009, 51440], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 49, "seek": 21944, "start": 240.96, "end": 246.6, "text": " programs has increased, but several, several programs are", "tokens": [51440, 4268, 575, 6505, 11, 457, 2940, 11, 2940, 4268, 366, 51722], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 50, "seek": 21944, "start": 246.6, "end": 247.72, "text": " still not published.", "tokens": [51722, 920, 406, 6572, 13, 51778], "temperature": 0.0, "avg_logprob": -0.5196008551610659, "compression_ratio": 1.6906077348066297, "no_speech_prob": 0.0035677531268447638}, {"id": 51, "seek": 24944, "start": 250.44, "end": 255.07999999999998, "text": " And third, the case of time consuming to building the", "tokens": [50414, 400, 2636, 11, 264, 1389, 295, 565, 19867, 281, 2390, 264, 50646], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 52, "seek": 24944, "start": 255.07999999999998, "end": 256.28, "text": " environment.", "tokens": [50646, 2823, 13, 50706], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 53, "seek": 24944, "start": 256.28, "end": 261.76, "text": " And if the dependent libraries of the target program are not", "tokens": [50706, 400, 498, 264, 12334, 15148, 295, 264, 3779, 1461, 366, 406, 50980], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 54, "seek": 24944, "start": 261.76, "end": 268.4, "text": " maintained, you might be not able to build the", "tokens": [50980, 17578, 11, 291, 1062, 312, 406, 1075, 281, 1322, 264, 51312], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 55, "seek": 24944, "start": 268.4, "end": 270.0, "text": " libraries.", "tokens": [51312, 15148, 13, 51392], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 56, "seek": 24944, "start": 270.0, "end": 273.56, "text": " And in such a case, it might take much time to build.", "tokens": [51392, 400, 294, 1270, 257, 1389, 11, 309, 1062, 747, 709, 565, 281, 1322, 13, 51570], "temperature": 0.0, "avg_logprob": -0.3542537987232208, "compression_ratio": 1.604026845637584, "no_speech_prob": 0.00853241141885519}, {"id": 57, "seek": 27356, "start": 274.56, "end": 280.56, "text": " So next, I show existing projects that run in X binary", "tokens": [50414, 407, 958, 11, 286, 855, 6741, 4455, 300, 1190, 294, 1783, 17434, 50714], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 58, "seek": 27356, "start": 280.56, "end": 281.56, "text": " on wasn't.", "tokens": [50714, 322, 2067, 380, 13, 50764], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 59, "seek": 27356, "start": 281.56, "end": 288.56, "text": " And the first, and the first project is tiny mu.", "tokens": [50764, 400, 264, 700, 11, 293, 264, 700, 1716, 307, 5870, 2992, 13, 51114], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 60, "seek": 27356, "start": 288.56, "end": 294.56, "text": " And this is the X86 and describe emulator available on", "tokens": [51114, 400, 341, 307, 264, 1783, 22193, 293, 6786, 846, 16381, 2435, 322, 51414], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 61, "seek": 27356, "start": 294.56, "end": 295.56, "text": " the browser.", "tokens": [51414, 264, 11185, 13, 51464], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 62, "seek": 27356, "start": 297.56, "end": 302.56, "text": " And, and the next kernel can run on the browser.", "tokens": [51564, 400, 11, 293, 264, 958, 28256, 393, 1190, 322, 264, 11185, 13, 51814], "temperature": 0.0, "avg_logprob": -0.6825311633123867, "compression_ratio": 1.54, "no_speech_prob": 0.010572613216936588}, {"id": 63, "seek": 30256, "start": 303.56, "end": 308.56, "text": " And so, and the second project is counter to wasn't.", "tokens": [50414, 400, 370, 11, 293, 264, 1150, 1716, 307, 5682, 281, 2067, 380, 13, 50664], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 64, "seek": 30256, "start": 308.56, "end": 312.56, "text": " And this enables us to run the X kernel and counter,", "tokens": [50664, 400, 341, 17077, 505, 281, 1190, 264, 1783, 28256, 293, 5682, 11, 50864], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 65, "seek": 30256, "start": 312.56, "end": 315.56, "text": " run time with emulators compared to wasn't.", "tokens": [50864, 1190, 565, 365, 846, 39265, 5347, 281, 2067, 380, 13, 51014], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 66, "seek": 30256, "start": 315.56, "end": 316.56, "text": " For example, tiny mu.", "tokens": [51014, 1171, 1365, 11, 5870, 2992, 13, 51064], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 67, "seek": 30256, "start": 316.56, "end": 320.56, "text": " And, and, and this can, can run, well,", "tokens": [51064, 400, 11, 293, 11, 293, 341, 393, 11, 393, 1190, 11, 731, 11, 51264], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 68, "seek": 30256, "start": 320.56, "end": 324.56, "text": " counter us without modification, but it can run", "tokens": [51264, 5682, 505, 1553, 26747, 11, 457, 309, 393, 1190, 51464], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 69, "seek": 30256, "start": 324.56, "end": 326.56, "text": " with the same amount of time.", "tokens": [51464, 365, 264, 912, 2372, 295, 565, 13, 51564], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 70, "seek": 30256, "start": 326.56, "end": 330.56, "text": " And, and, and this can, can run, well, counter us", "tokens": [51564, 400, 11, 293, 11, 293, 341, 393, 11, 393, 1190, 11, 731, 11, 5682, 505, 51764], "temperature": 0.0, "avg_logprob": -0.593141537268185, "compression_ratio": 1.888268156424581, "no_speech_prob": 0.011578734032809734}, {"id": 71, "seek": 33056, "start": 331.56, "end": 334.56, "text": " with modification both on the browsers and wash-around", "tokens": [50414, 365, 26747, 1293, 322, 264, 36069, 293, 5675, 12, 25762, 50564], "temperature": 0.0, "avg_logprob": -0.5010353512234158, "compression_ratio": 1.3162393162393162, "no_speech_prob": 0.04474131390452385}, {"id": 72, "seek": 33056, "start": 334.56, "end": 335.56, "text": " times.", "tokens": [50564, 1413, 13, 50614], "temperature": 0.0, "avg_logprob": -0.5010353512234158, "compression_ratio": 1.3162393162393162, "no_speech_prob": 0.04474131390452385}, {"id": 73, "seek": 33056, "start": 336.56, "end": 341.56, "text": " And, but, however, these projects, these, these", "tokens": [50664, 400, 11, 457, 11, 4461, 11, 613, 4455, 11, 613, 11, 613, 50914], "temperature": 0.0, "avg_logprob": -0.5010353512234158, "compression_ratio": 1.3162393162393162, "no_speech_prob": 0.04474131390452385}, {"id": 74, "seek": 33056, "start": 348.56, "end": 355.56, "text": " projects use PM on emulator that compiles a,", "tokens": [51264, 4455, 764, 12499, 322, 846, 16381, 300, 715, 4680, 257, 11, 51614], "temperature": 0.0, "avg_logprob": -0.5010353512234158, "compression_ratio": 1.3162393162393162, "no_speech_prob": 0.04474131390452385}, {"id": 75, "seek": 35556, "start": 355.56, "end": 360.56, "text": " a, relax, describe 32 L binary to a,", "tokens": [50364, 257, 11, 5789, 11, 6786, 8858, 441, 17434, 281, 257, 11, 50614], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 76, "seek": 35556, "start": 360.56, "end": 361.56, "text": " a, several binary formats.", "tokens": [50614, 257, 11, 2940, 17434, 25879, 13, 50664], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 77, "seek": 35556, "start": 364.56, "end": 368.56, "text": " So next, I will show the demo of L, L comp.", "tokens": [50814, 407, 958, 11, 286, 486, 855, 264, 10723, 295, 441, 11, 441, 715, 13, 51014], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 78, "seek": 35556, "start": 381.56, "end": 382.56, "text": " Can you see? Watch.", "tokens": [51664, 1664, 291, 536, 30, 7277, 13, 51714], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 79, "seek": 35556, "start": 382.56, "end": 383.56, "text": " Okay.", "tokens": [51714, 1033, 13, 51764], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 80, "seek": 35556, "start": 383.56, "end": 384.56, "text": " Okay. Thank you.", "tokens": [51764, 1033, 13, 1044, 291, 13, 51814], "temperature": 0.0, "avg_logprob": -0.45168381406549823, "compression_ratio": 1.1811023622047243, "no_speech_prob": 0.10937535762786865}, {"id": 81, "seek": 38556, "start": 386.56, "end": 391.56, "text": " So, and, well, well, I have prepared the", "tokens": [50414, 407, 11, 293, 11, 731, 11, 731, 11, 286, 362, 4927, 264, 50664], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 82, "seek": 38556, "start": 392.56, "end": 395.56, "text": " counter image for the L comp project.", "tokens": [50714, 5682, 3256, 337, 264, 441, 715, 1716, 13, 50864], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 83, "seek": 38556, "start": 395.56, "end": 400.56, "text": " And, and, and now in, in this terminal, the container", "tokens": [50864, 400, 11, 293, 11, 293, 586, 294, 11, 294, 341, 14709, 11, 264, 10129, 51114], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 84, "seek": 38556, "start": 400.56, "end": 403.56, "text": " of L comp has already started.", "tokens": [51114, 295, 441, 715, 575, 1217, 1409, 13, 51264], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 85, "seek": 38556, "start": 403.56, "end": 407.56, "text": " And the target sample L binary to be converted is", "tokens": [51264, 400, 264, 3779, 6889, 441, 17434, 281, 312, 16424, 307, 51464], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 86, "seek": 38556, "start": 409.56, "end": 413.56, "text": " examples, L-sensitive, L-thousand.", "tokens": [51564, 5110, 11, 441, 12, 82, 34465, 11, 441, 12, 392, 563, 474, 13, 51764], "temperature": 0.0, "avg_logprob": -0.35178010891645384, "compression_ratio": 1.503030303030303, "no_speech_prob": 0.031134169548749924}, {"id": 87, "seek": 41356, "start": 414.56, "end": 418.56, "text": " And, and this program outputs 100, 100 prime", "tokens": [50414, 400, 11, 293, 341, 1461, 23930, 2319, 11, 2319, 5835, 50614], "temperature": 0.0, "avg_logprob": -0.29995616789787044, "compression_ratio": 1.3591549295774648, "no_speech_prob": 0.025121690705418587}, {"id": 88, "seek": 41356, "start": 419.56, "end": 420.56, "text": " numbers in ascending order.", "tokens": [50664, 3547, 294, 15526, 2029, 1668, 13, 50714], "temperature": 0.0, "avg_logprob": -0.29995616789787044, "compression_ratio": 1.3591549295774648, "no_speech_prob": 0.025121690705418587}, {"id": 89, "seek": 41356, "start": 420.56, "end": 424.56, "text": " And, okay.", "tokens": [50714, 400, 11, 1392, 13, 50914], "temperature": 0.0, "avg_logprob": -0.29995616789787044, "compression_ratio": 1.3591549295774648, "no_speech_prob": 0.025121690705418587}, {"id": 90, "seek": 41356, "start": 424.56, "end": 429.56, "text": " So we, we try to compare this L binary to was with L comp.", "tokens": [50914, 407, 321, 11, 321, 853, 281, 6794, 341, 441, 17434, 281, 390, 365, 441, 715, 13, 51164], "temperature": 0.0, "avg_logprob": -0.29995616789787044, "compression_ratio": 1.3591549295774648, "no_speech_prob": 0.025121690705418587}, {"id": 91, "seek": 41356, "start": 435.56, "end": 440.56, "text": " And in the directory, there's a one file L comp.sh", "tokens": [51464, 400, 294, 264, 21120, 11, 456, 311, 257, 472, 3991, 441, 715, 13, 2716, 51714], "temperature": 0.0, "avg_logprob": -0.29995616789787044, "compression_ratio": 1.3591549295774648, "no_speech_prob": 0.025121690705418587}, {"id": 92, "seek": 44056, "start": 440.56, "end": 445.56, "text": " and L comp.sh is used to try to L comp to compile.", "tokens": [50364, 293, 441, 715, 13, 2716, 307, 1143, 281, 853, 281, 441, 715, 281, 31413, 13, 50614], "temperature": 0.0, "avg_logprob": -0.3746731394813174, "compression_ratio": 1.2637362637362637, "no_speech_prob": 0.05122942104935646}, {"id": 93, "seek": 44056, "start": 447.56, "end": 451.56, "text": " So, and, okay.", "tokens": [50714, 407, 11, 293, 11, 1392, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3746731394813174, "compression_ratio": 1.2637362637362637, "no_speech_prob": 0.05122942104935646}, {"id": 94, "seek": 44056, "start": 454.56, "end": 459.56, "text": " Okay. So, and target this was browser and L comp.", "tokens": [51064, 1033, 13, 407, 11, 293, 3779, 341, 390, 11185, 293, 441, 715, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3746731394813174, "compression_ratio": 1.2637362637362637, "no_speech_prob": 0.05122942104935646}, {"id": 95, "seek": 45956, "start": 459.56, "end": 464.56, "text": " And target this was browser and L comp.", "tokens": [50364, 400, 3779, 341, 390, 11185, 293, 441, 715, 13, 50614], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 96, "seek": 45956, "start": 465.56, "end": 470.56, "text": " And target this L-sensitive L-thousand.", "tokens": [50664, 400, 3779, 341, 441, 12, 82, 34465, 441, 12, 392, 563, 474, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 97, "seek": 45956, "start": 474.56, "end": 475.56, "text": " Now L comp comp.", "tokens": [51114, 823, 441, 715, 715, 13, 51164], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 98, "seek": 45956, "start": 475.56, "end": 476.56, "text": " Okay. Great.", "tokens": [51164, 1033, 13, 3769, 13, 51214], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 99, "seek": 45956, "start": 478.56, "end": 483.56, "text": " And, and serial files are generated and we can", "tokens": [51314, 400, 11, 293, 17436, 7098, 366, 10833, 293, 321, 393, 51564], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 100, "seek": 45956, "start": 483.56, "end": 487.56, "text": " execute the was application with MS Gryffin.", "tokens": [51564, 14483, 264, 390, 3861, 365, 7395, 460, 627, 602, 259, 13, 51764], "temperature": 0.0, "avg_logprob": -0.3863953677090732, "compression_ratio": 1.4055944055944056, "no_speech_prob": 0.056397270411252975}, {"id": 101, "seek": 48756, "start": 488.56, "end": 489.56, "text": " So, run.", "tokens": [50414, 407, 11, 1190, 13, 50464], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 102, "seek": 48756, "start": 492.56, "end": 493.56, "text": " The browser.", "tokens": [50614, 440, 11185, 13, 50664], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 103, "seek": 48756, "start": 498.56, "end": 501.56, "text": " Okay. So the cyber was the was application has", "tokens": [50914, 1033, 13, 407, 264, 13411, 390, 264, 390, 3861, 575, 51064], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 104, "seek": 48756, "start": 501.56, "end": 502.56, "text": " started now.", "tokens": [51064, 1409, 586, 13, 51114], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 105, "seek": 48756, "start": 506.56, "end": 509.56, "text": " And, okay.", "tokens": [51314, 400, 11, 1392, 13, 51464], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 106, "seek": 48756, "start": 509.56, "end": 510.56, "text": " Wait.", "tokens": [51464, 3802, 13, 51514], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 107, "seek": 48756, "start": 510.56, "end": 513.56, "text": " You can see the, I'll put this correct in the browser.", "tokens": [51514, 509, 393, 536, 264, 11, 286, 603, 829, 341, 3006, 294, 264, 11185, 13, 51664], "temperature": 0.0, "avg_logprob": -0.42546910372647373, "compression_ratio": 1.2540983606557377, "no_speech_prob": 0.005592469125986099}, {"id": 108, "seek": 51756, "start": 517.56, "end": 518.56, "text": " Okay.", "tokens": [50364, 1033, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 109, "seek": 51756, "start": 519.56, "end": 520.56, "text": " So, okay.", "tokens": [50464, 407, 11, 1392, 13, 50514], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 110, "seek": 51756, "start": 520.56, "end": 523.56, "text": " So now let's return to the presentation.", "tokens": [50514, 407, 586, 718, 311, 2736, 281, 264, 5860, 13, 50664], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 111, "seek": 51756, "start": 529.56, "end": 534.56, "text": " So, so, so in compiling L binary to L and B and B code", "tokens": [50964, 407, 11, 370, 11, 370, 294, 715, 4883, 441, 17434, 281, 441, 293, 363, 293, 363, 3089, 51214], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 112, "seek": 51756, "start": 536.56, "end": 538.56, "text": " two, two modules are used.", "tokens": [51314, 732, 11, 732, 16679, 366, 1143, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 113, "seek": 51756, "start": 538.56, "end": 539.56, "text": " Okay.", "tokens": [51414, 1033, 13, 51464], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 114, "seek": 51756, "start": 539.56, "end": 541.56, "text": " First is L comp lifter.", "tokens": [51464, 2386, 307, 441, 715, 4545, 391, 13, 51564], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 115, "seek": 51756, "start": 541.56, "end": 545.56, "text": " This process L binary and maps every section and", "tokens": [51564, 639, 1399, 441, 17434, 293, 11317, 633, 3541, 293, 51764], "temperature": 0.0, "avg_logprob": -0.2601826985677083, "compression_ratio": 1.4276315789473684, "no_speech_prob": 0.0036120538134127855}, {"id": 116, "seek": 54556, "start": 546.56, "end": 547.56, "text": " operates the next module.", "tokens": [50414, 22577, 264, 958, 10088, 13, 50464], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 117, "seek": 54556, "start": 547.56, "end": 552.56, "text": " And, and is a library for lifting machine code to L and B", "tokens": [50464, 400, 11, 293, 307, 257, 6405, 337, 15798, 3479, 3089, 281, 441, 293, 363, 50714], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 118, "seek": 54556, "start": 553.56, "end": 554.56, "text": " and B code.", "tokens": [50764, 293, 363, 3089, 13, 50814], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 119, "seek": 54556, "start": 554.56, "end": 556.56, "text": " And, as this figure shows L comp comp,", "tokens": [50814, 400, 11, 382, 341, 2573, 3110, 441, 715, 715, 11, 50914], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 120, "seek": 54556, "start": 556.56, "end": 560.56, "text": " L binary to L and B, L and B code with these two modules.", "tokens": [50914, 441, 17434, 281, 441, 293, 363, 11, 441, 293, 363, 3089, 365, 613, 732, 16679, 13, 51114], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 121, "seek": 54556, "start": 562.56, "end": 565.56, "text": " And next, I will explain how L comp comp,", "tokens": [51214, 400, 958, 11, 286, 486, 2903, 577, 441, 715, 715, 11, 51364], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 122, "seek": 54556, "start": 565.56, "end": 569.56, "text": " L binary to L and B code and was binary.", "tokens": [51364, 441, 17434, 281, 441, 293, 363, 3089, 293, 390, 17434, 13, 51564], "temperature": 0.0, "avg_logprob": -0.4917809935821884, "compression_ratio": 1.7515923566878981, "no_speech_prob": 0.006900319829583168}, {"id": 123, "seek": 56956, "start": 570.56, "end": 575.56, "text": " And, and ramming converter function to one L,", "tokens": [50414, 400, 11, 293, 10211, 2810, 33905, 2445, 281, 472, 441, 11, 50664], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 124, "seek": 56956, "start": 575.56, "end": 577.56, "text": " B, M, I, R function.", "tokens": [50664, 363, 11, 376, 11, 286, 11, 497, 2445, 13, 50764], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 125, "seek": 56956, "start": 577.56, "end": 581.56, "text": " For example, as you can see, the, the, the, the,", "tokens": [50764, 1171, 1365, 11, 382, 291, 393, 536, 11, 264, 11, 264, 11, 264, 11, 264, 11, 50964], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 126, "seek": 56956, "start": 581.56, "end": 583.56, "text": " the, the square function one of the machine code is", "tokens": [50964, 264, 11, 264, 3732, 2445, 472, 295, 264, 3479, 3089, 307, 51064], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 127, "seek": 56956, "start": 583.56, "end": 586.56, "text": " combative to the underscore function one and the", "tokens": [51064, 2512, 1166, 281, 264, 37556, 2445, 472, 293, 264, 51214], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 128, "seek": 56956, "start": 586.56, "end": 590.56, "text": " square lift function is a L, M, B, M, I, R.", "tokens": [51214, 3732, 5533, 2445, 307, 257, 441, 11, 376, 11, 363, 11, 376, 11, 286, 11, 497, 13, 51414], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 129, "seek": 56956, "start": 594.56, "end": 595.56, "text": " Yeah.", "tokens": [51614, 865, 13, 51664], "temperature": 0.0, "avg_logprob": -0.5187533451960638, "compression_ratio": 1.7161290322580645, "no_speech_prob": 0.002598945517092943}, {"id": 130, "seek": 59556, "start": 596.56, "end": 601.56, "text": " So, and also one CPU instruction is combative to one L,", "tokens": [50414, 407, 11, 293, 611, 472, 13199, 10951, 307, 2512, 1166, 281, 472, 441, 11, 50664], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 131, "seek": 59556, "start": 602.56, "end": 603.56, "text": " B, M, I, R block.", "tokens": [50714, 363, 11, 376, 11, 286, 11, 497, 3461, 13, 50764], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 132, "seek": 59556, "start": 603.56, "end": 608.56, "text": " And as you can see, the machine, the instruction of move X", "tokens": [50764, 400, 382, 291, 393, 536, 11, 264, 3479, 11, 264, 10951, 295, 1286, 1783, 51014], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 133, "seek": 59556, "start": 608.56, "end": 613.56, "text": " to X zero of the machine code is combative to one underscore", "tokens": [51014, 281, 1783, 4018, 295, 264, 3479, 3089, 307, 2512, 1166, 281, 472, 37556, 51264], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 134, "seek": 59556, "start": 613.56, "end": 614.56, "text": " move.", "tokens": [51264, 1286, 13, 51314], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 135, "seek": 59556, "start": 614.56, "end": 615.56, "text": " Yeah.", "tokens": [51314, 865, 13, 51364], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 136, "seek": 59556, "start": 615.56, "end": 616.56, "text": " Okay.", "tokens": [51364, 1033, 13, 51414], "temperature": 0.0, "avg_logprob": -0.20634615421295166, "compression_ratio": 1.4652777777777777, "no_speech_prob": 0.0031034203711897135}, {"id": 137, "seek": 61656, "start": 617.56, "end": 618.56, "text": " Okay.", "tokens": [50414, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2292938232421875, "compression_ratio": 1.5231788079470199, "no_speech_prob": 0.0045229471288621426}, {"id": 138, "seek": 61656, "start": 622.56, "end": 627.56, "text": " So next, I will explain the details of the combative,", "tokens": [50664, 407, 958, 11, 286, 486, 2903, 264, 4365, 295, 264, 2512, 1166, 11, 50914], "temperature": 0.0, "avg_logprob": -0.2292938232421875, "compression_ratio": 1.5231788079470199, "no_speech_prob": 0.0045229471288621426}, {"id": 139, "seek": 61656, "start": 627.56, "end": 631.56, "text": " combative L, B, M, I, R block from CPU instruction.", "tokens": [50914, 2512, 1166, 441, 11, 363, 11, 376, 11, 286, 11, 497, 3461, 490, 13199, 10951, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2292938232421875, "compression_ratio": 1.5231788079470199, "no_speech_prob": 0.0045229471288621426}, {"id": 140, "seek": 61656, "start": 632.56, "end": 637.56, "text": " And there are three steps in the combative L, B, M, I, R block.", "tokens": [51164, 400, 456, 366, 1045, 4439, 294, 264, 2512, 1166, 441, 11, 363, 11, 376, 11, 286, 11, 497, 3461, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2292938232421875, "compression_ratio": 1.5231788079470199, "no_speech_prob": 0.0045229471288621426}, {"id": 141, "seek": 61656, "start": 637.56, "end": 642.56, "text": " And the first step is the program counter calculation.", "tokens": [51414, 400, 264, 700, 1823, 307, 264, 1461, 5682, 17108, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2292938232421875, "compression_ratio": 1.5231788079470199, "no_speech_prob": 0.0045229471288621426}, {"id": 142, "seek": 64256, "start": 642.56, "end": 649.56, "text": " And this here shows percent 29 is a program counter of this", "tokens": [50364, 400, 341, 510, 3110, 3043, 9413, 307, 257, 1461, 5682, 295, 341, 50714], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 143, "seek": 64256, "start": 649.56, "end": 650.56, "text": " instruction.", "tokens": [50714, 10951, 13, 50764], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 144, "seek": 64256, "start": 650.56, "end": 655.56, "text": " And the next piece is updated to the next program counter.", "tokens": [50764, 400, 264, 958, 2522, 307, 10588, 281, 264, 958, 1461, 5682, 13, 51014], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 145, "seek": 64256, "start": 656.56, "end": 657.56, "text": " Yeah.", "tokens": [51064, 865, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 146, "seek": 64256, "start": 657.56, "end": 660.56, "text": " And the second step is open calculation.", "tokens": [51114, 400, 264, 1150, 1823, 307, 1269, 17108, 13, 51264], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 147, "seek": 64256, "start": 660.56, "end": 666.56, "text": " And in this here, this, this instruction uses X seven and", "tokens": [51264, 400, 294, 341, 510, 11, 341, 11, 341, 10951, 4960, 1783, 3407, 293, 51564], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 148, "seek": 64256, "start": 666.56, "end": 669.56, "text": " X three, X seven and X three registers.", "tokens": [51564, 1783, 1045, 11, 1783, 3407, 293, 1783, 1045, 38351, 13, 51714], "temperature": 0.0, "avg_logprob": -0.2474250284830729, "compression_ratio": 1.7806451612903227, "no_speech_prob": 0.02202007919549942}, {"id": 149, "seek": 66956, "start": 670.56, "end": 676.56, "text": " And in the open calculation, the X seven and X three is", "tokens": [50414, 400, 294, 264, 1269, 17108, 11, 264, 1783, 3407, 293, 1783, 1045, 307, 50714], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 150, "seek": 66956, "start": 676.56, "end": 677.56, "text": " loaded.", "tokens": [50714, 13210, 13, 50764], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 151, "seek": 66956, "start": 678.56, "end": 679.56, "text": " Okay.", "tokens": [50814, 1033, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 152, "seek": 66956, "start": 679.56, "end": 686.56, "text": " So, and the third step is calling the, calling the function", "tokens": [50864, 407, 11, 293, 264, 2636, 1823, 307, 5141, 264, 11, 5141, 264, 2445, 51214], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 153, "seek": 66956, "start": 686.56, "end": 689.56, "text": " of the instruction-specific operation.", "tokens": [51214, 295, 264, 10951, 12, 29258, 6916, 13, 51364], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 154, "seek": 66956, "start": 689.56, "end": 694.56, "text": " For each CPU instruction, RAMU generates a function that", "tokens": [51364, 1171, 1184, 13199, 10951, 11, 14561, 52, 23815, 257, 2445, 300, 51614], "temperature": 0.0, "avg_logprob": -0.24605634135584678, "compression_ratio": 1.490066225165563, "no_speech_prob": 0.002955228090286255}, {"id": 155, "seek": 69456, "start": 694.56, "end": 697.56, "text": " performs the instruction-specific operation.", "tokens": [50364, 26213, 264, 10951, 12, 29258, 6916, 13, 50514], "temperature": 0.0, "avg_logprob": -0.332406963620867, "compression_ratio": 1.3868613138686132, "no_speech_prob": 0.001173433498479426}, {"id": 156, "seek": 69456, "start": 697.56, "end": 702.56, "text": " And the corresponding function is called at the end of the LM, I,", "tokens": [50514, 400, 264, 11760, 2445, 307, 1219, 412, 264, 917, 295, 264, 441, 44, 11, 286, 11, 50764], "temperature": 0.0, "avg_logprob": -0.332406963620867, "compression_ratio": 1.3868613138686132, "no_speech_prob": 0.001173433498479426}, {"id": 157, "seek": 69456, "start": 702.56, "end": 703.56, "text": " R block.", "tokens": [50764, 497, 3461, 13, 50814], "temperature": 0.0, "avg_logprob": -0.332406963620867, "compression_ratio": 1.3868613138686132, "no_speech_prob": 0.001173433498479426}, {"id": 158, "seek": 69456, "start": 703.56, "end": 704.56, "text": " At this end.", "tokens": [50814, 1711, 341, 917, 13, 50864], "temperature": 0.0, "avg_logprob": -0.332406963620867, "compression_ratio": 1.3868613138686132, "no_speech_prob": 0.001173433498479426}, {"id": 159, "seek": 69456, "start": 712.56, "end": 717.56, "text": " So next, as I explained in the beginning, the code of the", "tokens": [51264, 407, 958, 11, 382, 286, 8825, 294, 264, 2863, 11, 264, 3089, 295, 264, 51514], "temperature": 0.0, "avg_logprob": -0.332406963620867, "compression_ratio": 1.3868613138686132, "no_speech_prob": 0.001173433498479426}, {"id": 160, "seek": 71756, "start": 717.56, "end": 722.56, "text": " quantum can indirectly jump to only the code that is", "tokens": [50364, 13018, 393, 37779, 3012, 281, 787, 264, 3089, 300, 307, 50614], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 161, "seek": 71756, "start": 722.56, "end": 724.56, "text": " determinable at compare time.", "tokens": [50614, 15957, 712, 412, 6794, 565, 13, 50714], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 162, "seek": 71756, "start": 724.56, "end": 731.56, "text": " And this figure shows how to deal with indirect jump VR", "tokens": [50714, 400, 341, 2573, 3110, 577, 281, 2028, 365, 19523, 3012, 13722, 51064], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 163, "seek": 71756, "start": 731.56, "end": 732.56, "text": " instruction.", "tokens": [51064, 10951, 13, 51114], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 164, "seek": 71756, "start": 733.56, "end": 738.56, "text": " So in this figure with VR X seven, indirectly jump to the", "tokens": [51164, 407, 294, 341, 2573, 365, 13722, 1783, 3407, 11, 37779, 3012, 281, 264, 51414], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 165, "seek": 71756, "start": 738.56, "end": 742.56, "text": " instruction of move X eight and X nine.", "tokens": [51414, 10951, 295, 1286, 1783, 3180, 293, 1783, 4949, 13, 51614], "temperature": 0.0, "avg_logprob": -0.3462596306434044, "compression_ratio": 1.585987261146497, "no_speech_prob": 0.00460659246891737}, {"id": 166, "seek": 74256, "start": 743.56, "end": 750.56, "text": " And in the error, the VR instruction.", "tokens": [50414, 400, 294, 264, 6713, 11, 264, 13722, 10951, 13, 50764], "temperature": 0.0, "avg_logprob": -0.6149244675269494, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.011623365804553032}, {"id": 167, "seek": 74256, "start": 750.56, "end": 760.56, "text": " And the address to jump is 30% IDR and jumps the block of", "tokens": [50764, 400, 264, 2985, 281, 3012, 307, 2217, 4, 7348, 49, 293, 16704, 264, 3461, 295, 51264], "temperature": 0.0, "avg_logprob": -0.6149244675269494, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.011623365804553032}, {"id": 168, "seek": 74256, "start": 760.56, "end": 763.56, "text": " percent error on the square IDR.", "tokens": [51264, 3043, 6713, 322, 264, 3732, 7348, 49, 13, 51414], "temperature": 0.0, "avg_logprob": -0.6149244675269494, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.011623365804553032}, {"id": 169, "seek": 74256, "start": 763.56, "end": 766.56, "text": " This is the VR instruction.", "tokens": [51414, 639, 307, 264, 13722, 10951, 13, 51564], "temperature": 0.0, "avg_logprob": -0.6149244675269494, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.011623365804553032}, {"id": 170, "seek": 74256, "start": 766.56, "end": 767.56, "text": " Okay.", "tokens": [51564, 1033, 13, 51614], "temperature": 0.0, "avg_logprob": -0.6149244675269494, "compression_ratio": 1.3278688524590163, "no_speech_prob": 0.011623365804553032}, {"id": 171, "seek": 76756, "start": 767.56, "end": 780.56, "text": " So, and after jumping, R on the square IDR, we get the target", "tokens": [50364, 407, 11, 293, 934, 11233, 11, 497, 322, 264, 3732, 7348, 49, 11, 321, 483, 264, 3779, 51014], "temperature": 0.0, "avg_logprob": -0.3702391367109995, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.023996807634830475}, {"id": 172, "seek": 76756, "start": 780.56, "end": 784.56, "text": " rubber by calling the getR function and, and, and", "tokens": [51014, 11593, 538, 5141, 264, 483, 49, 2445, 293, 11, 293, 11, 293, 51214], "temperature": 0.0, "avg_logprob": -0.3702391367109995, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.023996807634830475}, {"id": 173, "seek": 76756, "start": 784.56, "end": 786.56, "text": " start to pass the VR.", "tokens": [51214, 722, 281, 1320, 264, 13722, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3702391367109995, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.023996807634830475}, {"id": 174, "seek": 76756, "start": 786.56, "end": 793.56, "text": " And after that, with the VR instruction, we jump to the", "tokens": [51314, 400, 934, 300, 11, 365, 264, 13722, 10951, 11, 321, 3012, 281, 264, 51664], "temperature": 0.0, "avg_logprob": -0.3702391367109995, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.023996807634830475}, {"id": 175, "seek": 76756, "start": 793.56, "end": 795.56, "text": " target block.", "tokens": [51664, 3779, 3461, 13, 51764], "temperature": 0.0, "avg_logprob": -0.3702391367109995, "compression_ratio": 1.460431654676259, "no_speech_prob": 0.023996807634830475}, {"id": 176, "seek": 79556, "start": 796.56, "end": 801.56, "text": " And also in that VR instruction, it requires all candidate", "tokens": [50414, 400, 611, 294, 300, 13722, 10951, 11, 309, 7029, 439, 11532, 50664], "temperature": 0.0, "avg_logprob": -0.32773114867129566, "compression_ratio": 1.5034482758620689, "no_speech_prob": 0.007133981212973595}, {"id": 177, "seek": 79556, "start": 801.56, "end": 804.56, "text": " labels as the argument.", "tokens": [50664, 16949, 382, 264, 6770, 13, 50814], "temperature": 0.0, "avg_logprob": -0.32773114867129566, "compression_ratio": 1.5034482758620689, "no_speech_prob": 0.007133981212973595}, {"id": 178, "seek": 79556, "start": 804.56, "end": 814.56, "text": " And this is, yeah, and this array consists of all labels in", "tokens": [50814, 400, 341, 307, 11, 1338, 11, 293, 341, 10225, 14689, 295, 439, 16949, 294, 51314], "temperature": 0.0, "avg_logprob": -0.32773114867129566, "compression_ratio": 1.5034482758620689, "no_speech_prob": 0.007133981212973595}, {"id": 179, "seek": 79556, "start": 814.56, "end": 815.56, "text": " this function.", "tokens": [51314, 341, 2445, 13, 51364], "temperature": 0.0, "avg_logprob": -0.32773114867129566, "compression_ratio": 1.5034482758620689, "no_speech_prob": 0.007133981212973595}, {"id": 180, "seek": 79556, "start": 815.56, "end": 822.56, "text": " And, well, but in the current design, the array of candidate", "tokens": [51364, 400, 11, 731, 11, 457, 294, 264, 2190, 1715, 11, 264, 10225, 295, 11532, 51714], "temperature": 0.0, "avg_logprob": -0.32773114867129566, "compression_ratio": 1.5034482758620689, "no_speech_prob": 0.007133981212973595}, {"id": 181, "seek": 82256, "start": 822.56, "end": 826.56, "text": " labels includes only the labels within this function.", "tokens": [50364, 16949, 5974, 787, 264, 16949, 1951, 341, 2445, 13, 50564], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 182, "seek": 82256, "start": 826.56, "end": 830.56, "text": " So, and, and Elf Comp doesn't, doesn't support the jump and", "tokens": [50564, 407, 11, 293, 11, 293, 2699, 69, 6620, 1177, 380, 11, 1177, 380, 1406, 264, 3012, 293, 50764], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 183, "seek": 82256, "start": 830.56, "end": 831.56, "text": " long jump now.", "tokens": [50764, 938, 3012, 586, 13, 50814], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 184, "seek": 82256, "start": 833.56, "end": 836.56, "text": " And that is a future task.", "tokens": [50914, 400, 300, 307, 257, 2027, 5633, 13, 51064], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 185, "seek": 82256, "start": 840.56, "end": 846.56, "text": " And next in converting the LNB bit code to a wasn't", "tokens": [51264, 400, 958, 294, 29942, 264, 441, 45, 33, 857, 3089, 281, 257, 2067, 380, 51564], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 186, "seek": 82256, "start": 846.56, "end": 850.56, "text": " statically links the LNB bit code and Elf Comp runtime.", "tokens": [51564, 2219, 984, 6123, 264, 441, 45, 33, 857, 3089, 293, 2699, 69, 6620, 34474, 13, 51764], "temperature": 0.0, "avg_logprob": -0.4399747848510742, "compression_ratio": 1.5562130177514792, "no_speech_prob": 0.011261528357863426}, {"id": 187, "seek": 85056, "start": 851.56, "end": 856.56, "text": " And Elf Comp runtime includes the mapped, mapped memory of the", "tokens": [50414, 400, 2699, 69, 6620, 34474, 5974, 264, 33318, 11, 33318, 4675, 295, 264, 50664], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 188, "seek": 85056, "start": 856.56, "end": 858.56, "text": " original error binary.", "tokens": [50664, 3380, 6713, 17434, 13, 50764], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 189, "seek": 85056, "start": 858.56, "end": 862.56, "text": " And that is stuck in the heap area of the error binary.", "tokens": [50764, 400, 300, 307, 5541, 294, 264, 33591, 1859, 295, 264, 6713, 17434, 13, 50964], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 190, "seek": 85056, "start": 862.56, "end": 866.56, "text": " So, and also Elf Comp runtime includes the program of the", "tokens": [50964, 407, 11, 293, 611, 2699, 69, 6620, 34474, 5974, 264, 1461, 295, 264, 51164], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 191, "seek": 85056, "start": 866.56, "end": 868.56, "text": " system called the emulation.", "tokens": [51164, 1185, 1219, 264, 846, 2776, 13, 51264], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 192, "seek": 85056, "start": 871.56, "end": 876.56, "text": " And existing compiler, for example, M script and Washi CK", "tokens": [51414, 400, 6741, 31958, 11, 337, 1365, 11, 376, 5755, 293, 343, 15612, 383, 42, 51664], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 193, "seek": 85056, "start": 876.56, "end": 878.56, "text": " compiles these two modules to wasn't.", "tokens": [51664, 715, 4680, 613, 732, 16679, 281, 2067, 380, 13, 51764], "temperature": 0.0, "avg_logprob": -0.34782946794882585, "compression_ratio": 1.6701030927835052, "no_speech_prob": 0.0060605802573263645}, {"id": 194, "seek": 88056, "start": 881.56, "end": 882.56, "text": " Okay.", "tokens": [50414, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 195, "seek": 88056, "start": 882.56, "end": 886.56, "text": " So, and in the React system called emulation, there are two", "tokens": [50464, 407, 11, 293, 294, 264, 30644, 1185, 1219, 846, 2776, 11, 456, 366, 732, 50664], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 196, "seek": 88056, "start": 886.56, "end": 889.56, "text": " ways of implementing the emulation.", "tokens": [50664, 2098, 295, 18114, 264, 846, 2776, 13, 50814], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 197, "seek": 88056, "start": 889.56, "end": 894.56, "text": " And the way of implementing depends on the", "tokens": [50814, 400, 264, 636, 295, 18114, 5946, 322, 264, 51064], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 198, "seek": 88056, "start": 894.56, "end": 897.56, "text": " RibBushy implementation.", "tokens": [51064, 38554, 33, 1498, 88, 11420, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 199, "seek": 88056, "start": 897.56, "end": 902.56, "text": " And in case one, if the RibBushy implements the", "tokens": [51214, 400, 294, 1389, 472, 11, 498, 264, 38554, 33, 1498, 88, 704, 17988, 264, 51464], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 200, "seek": 88056, "start": 902.56, "end": 907.56, "text": " tag system call, Elf Comp just uses the RibBushy function as", "tokens": [51464, 6162, 1185, 818, 11, 2699, 69, 6620, 445, 4960, 264, 38554, 33, 1498, 88, 2445, 382, 51714], "temperature": 0.0, "avg_logprob": -0.2526791584060853, "compression_ratio": 1.759493670886076, "no_speech_prob": 0.0006854854291304946}, {"id": 201, "seek": 90756, "start": 907.56, "end": 911.56, "text": " shown in this figure of the right system call.", "tokens": [50364, 4898, 294, 341, 2573, 295, 264, 558, 1185, 818, 13, 50564], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 202, "seek": 90756, "start": 911.56, "end": 912.56, "text": " Okay.", "tokens": [50564, 1033, 13, 50614], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 203, "seek": 90756, "start": 915.56, "end": 920.56, "text": " And in case two, if the RibBushy doesn't implements the", "tokens": [50764, 400, 294, 1389, 732, 11, 498, 264, 38554, 33, 1498, 88, 1177, 380, 704, 17988, 264, 51014], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 204, "seek": 90756, "start": 920.56, "end": 924.56, "text": " target, target system call, Elf Comp should implements the", "tokens": [51014, 3779, 11, 3779, 1185, 818, 11, 2699, 69, 6620, 820, 704, 17988, 264, 51214], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 205, "seek": 90756, "start": 924.56, "end": 926.56, "text": " system call.", "tokens": [51214, 1185, 818, 13, 51314], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 206, "seek": 90756, "start": 926.56, "end": 932.56, "text": " And as shown in this figure of the not used PRK function in", "tokens": [51314, 400, 382, 4898, 294, 341, 2573, 295, 264, 406, 1143, 11568, 42, 2445, 294, 51614], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 207, "seek": 90756, "start": 932.56, "end": 933.56, "text": " this code.", "tokens": [51614, 341, 3089, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 208, "seek": 90756, "start": 933.56, "end": 935.56, "text": " So, it implements the system call.", "tokens": [51664, 407, 11, 309, 704, 17988, 264, 1185, 818, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2276910365312949, "compression_ratio": 1.7875, "no_speech_prob": 0.02004583179950714}, {"id": 209, "seek": 93756, "start": 938.56, "end": 939.56, "text": " Just watch out.", "tokens": [50414, 1449, 1159, 484, 13, 50464], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 210, "seek": 93756, "start": 946.56, "end": 947.56, "text": " Okay.", "tokens": [50814, 1033, 13, 50864], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 211, "seek": 93756, "start": 947.56, "end": 950.56, "text": " So, next, I will show the parameters of the generated", "tokens": [50864, 407, 11, 958, 11, 286, 486, 855, 264, 9834, 295, 264, 10833, 51014], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 212, "seek": 93756, "start": 950.56, "end": 953.56, "text": " binary, parameters evaluation.", "tokens": [51014, 17434, 11, 9834, 13344, 13, 51164], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 213, "seek": 93756, "start": 953.56, "end": 954.56, "text": " Okay.", "tokens": [51164, 1033, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 214, "seek": 93756, "start": 954.56, "end": 960.56, "text": " So, and the target sample F binary is a simple prime", "tokens": [51214, 407, 11, 293, 264, 3779, 6889, 479, 17434, 307, 257, 2199, 5835, 51514], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 215, "seek": 93756, "start": 960.56, "end": 961.56, "text": " number calculator.", "tokens": [51514, 1230, 24993, 13, 51564], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 216, "seek": 93756, "start": 961.56, "end": 965.56, "text": " And this program computes all prime numbers, lessens the", "tokens": [51564, 400, 341, 1461, 715, 1819, 439, 5835, 3547, 11, 1570, 694, 264, 51764], "temperature": 0.0, "avg_logprob": -0.24560770307268415, "compression_ratio": 1.5253164556962024, "no_speech_prob": 0.000840151566080749}, {"id": 217, "seek": 96556, "start": 966.56, "end": 968.56, "text": " input to integer.", "tokens": [50414, 4846, 281, 24922, 13, 50514], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 218, "seek": 96556, "start": 968.56, "end": 973.56, "text": " So, and one thing to notice here is that in this", "tokens": [50514, 407, 11, 293, 472, 551, 281, 3449, 510, 307, 300, 294, 341, 50764], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 219, "seek": 96556, "start": 973.56, "end": 980.56, "text": " program, the evaluation are using X H6 under square 64", "tokens": [50764, 1461, 11, 264, 13344, 366, 1228, 1783, 389, 21, 833, 3732, 12145, 51114], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 220, "seek": 96556, "start": 980.56, "end": 984.56, "text": " binary instead of the wasn't binary.", "tokens": [51114, 17434, 2602, 295, 264, 2067, 380, 17434, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 221, "seek": 96556, "start": 984.56, "end": 988.56, "text": " Because in the current implementation, the system", "tokens": [51314, 1436, 294, 264, 2190, 11420, 11, 264, 1185, 51514], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 222, "seek": 96556, "start": 988.56, "end": 992.56, "text": " call emulation for wash-down time is insufficient.", "tokens": [51514, 818, 846, 2776, 337, 5675, 12, 5093, 565, 307, 41709, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3764669722405033, "compression_ratio": 1.446927374301676, "no_speech_prob": 0.0013851973926648498}, {"id": 223, "seek": 99256, "start": 992.56, "end": 998.56, "text": " So, we use X H6 under square 64 as the output binary for", "tokens": [50364, 407, 11, 321, 764, 1783, 389, 21, 833, 3732, 12145, 382, 264, 5598, 17434, 337, 50664], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 224, "seek": 99256, "start": 998.56, "end": 999.56, "text": " benchmark test.", "tokens": [50664, 18927, 1500, 13, 50714], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 225, "seek": 99256, "start": 999.56, "end": 1000.56, "text": " I'm sorry.", "tokens": [50714, 286, 478, 2597, 13, 50764], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 226, "seek": 99256, "start": 1002.56, "end": 1011.56, "text": " So, and the comparison method is QM emulation X64 to X H6", "tokens": [50864, 407, 11, 293, 264, 9660, 3170, 307, 1249, 44, 846, 2776, 1783, 19395, 281, 1783, 389, 21, 51314], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 227, "seek": 99256, "start": 1011.56, "end": 1013.56, "text": " and square 64.", "tokens": [51314, 293, 3732, 12145, 13, 51414], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 228, "seek": 99256, "start": 1015.56, "end": 1020.56, "text": " So, we compare QM emulation with binary LD", "tokens": [51514, 407, 11, 321, 6794, 1249, 44, 846, 2776, 365, 17434, 33936, 51764], "temperature": 0.0, "avg_logprob": -0.32956330916460824, "compression_ratio": 1.4014084507042253, "no_speech_prob": 0.00572300236672163}, {"id": 229, "seek": 102056, "start": 1020.56, "end": 1021.56, "text": " compilation.", "tokens": [50364, 40261, 13, 50414], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 230, "seek": 102056, "start": 1024.56, "end": 1029.56, "text": " So, and I measure the power months in two cases.", "tokens": [50564, 407, 11, 293, 286, 3481, 264, 1347, 2493, 294, 732, 3331, 13, 50814], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 231, "seek": 102056, "start": 1029.56, "end": 1033.56, "text": " In the first case, the input integer is 10 million.", "tokens": [50814, 682, 264, 700, 1389, 11, 264, 4846, 24922, 307, 1266, 2459, 13, 51014], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 232, "seek": 102056, "start": 1033.56, "end": 1036.56, "text": " And the second case is 15 million.", "tokens": [51014, 400, 264, 1150, 1389, 307, 2119, 2459, 13, 51164], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 233, "seek": 102056, "start": 1036.56, "end": 1041.56, "text": " So, and the power month evaluation is as follows.", "tokens": [51164, 407, 11, 293, 264, 1347, 1618, 13344, 307, 382, 10002, 13, 51414], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 234, "seek": 102056, "start": 1041.56, "end": 1046.56, "text": " So, and as you can see, in both cases, one and the case two,", "tokens": [51414, 407, 11, 293, 382, 291, 393, 536, 11, 294, 1293, 3331, 11, 472, 293, 264, 1389, 732, 11, 51664], "temperature": 0.0, "avg_logprob": -0.24182366705560066, "compression_ratio": 1.61875, "no_speech_prob": 0.011545342393219471}, {"id": 235, "seek": 104656, "start": 1046.56, "end": 1051.56, "text": " LD compiling by LFCOM is 4,000 QM emulation.", "tokens": [50364, 33936, 715, 4883, 538, 441, 37, 34939, 307, 1017, 11, 1360, 1249, 44, 846, 2776, 13, 50614], "temperature": 0.0, "avg_logprob": -0.31705695390701294, "compression_ratio": 1.3432835820895523, "no_speech_prob": 0.02525550127029419}, {"id": 236, "seek": 104656, "start": 1051.56, "end": 1055.56, "text": " And therefore, we can say that LD compiling is 4,000 QM", "tokens": [50614, 400, 4412, 11, 321, 393, 584, 300, 33936, 715, 4883, 307, 1017, 11, 1360, 1249, 44, 50814], "temperature": 0.0, "avg_logprob": -0.31705695390701294, "compression_ratio": 1.3432835820895523, "no_speech_prob": 0.02525550127029419}, {"id": 237, "seek": 104656, "start": 1055.56, "end": 1058.56, "text": " emulation, at least in some cases.", "tokens": [50814, 846, 2776, 11, 412, 1935, 294, 512, 3331, 13, 50964], "temperature": 0.0, "avg_logprob": -0.31705695390701294, "compression_ratio": 1.3432835820895523, "no_speech_prob": 0.02525550127029419}, {"id": 238, "seek": 104656, "start": 1066.56, "end": 1070.56, "text": " So, okay, so last, I will show future works.", "tokens": [51364, 407, 11, 1392, 11, 370, 1036, 11, 286, 486, 855, 2027, 1985, 13, 51564], "temperature": 0.0, "avg_logprob": -0.31705695390701294, "compression_ratio": 1.3432835820895523, "no_speech_prob": 0.02525550127029419}, {"id": 239, "seek": 107056, "start": 1071.56, "end": 1078.56, "text": " And first, we will support the output of other binary formats.", "tokens": [50414, 400, 700, 11, 321, 486, 1406, 264, 5598, 295, 661, 17434, 25879, 13, 50764], "temperature": 0.0, "avg_logprob": -0.29155383571501703, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.014301561750471592}, {"id": 240, "seek": 107056, "start": 1078.56, "end": 1084.56, "text": " And currently, LFCOM supports the output binary of only", "tokens": [50764, 400, 4362, 11, 441, 37, 34939, 9346, 264, 5598, 17434, 295, 787, 51064], "temperature": 0.0, "avg_logprob": -0.29155383571501703, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.014301561750471592}, {"id": 241, "seek": 107056, "start": 1084.56, "end": 1089.56, "text": " Wazm and LFX H664 binary now.", "tokens": [51064, 343, 921, 76, 293, 441, 37, 55, 389, 21, 19395, 17434, 586, 13, 51314], "temperature": 0.0, "avg_logprob": -0.29155383571501703, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.014301561750471592}, {"id": 242, "seek": 107056, "start": 1089.56, "end": 1095.56, "text": " So, we will support the output of other binary as output of mine.", "tokens": [51314, 407, 11, 321, 486, 1406, 264, 5598, 295, 661, 17434, 382, 5598, 295, 3892, 13, 51614], "temperature": 0.0, "avg_logprob": -0.29155383571501703, "compression_ratio": 1.621212121212121, "no_speech_prob": 0.014301561750471592}, {"id": 243, "seek": 110056, "start": 1100.56, "end": 1105.56, "text": " So, second, we will never as compiles LF binary", "tokens": [50364, 407, 11, 1150, 11, 321, 486, 1128, 382, 715, 4680, 441, 37, 17434, 50614], "temperature": 0.0, "avg_logprob": -0.32132652157642805, "compression_ratio": 1.3235294117647058, "no_speech_prob": 0.0015260757645592093}, {"id": 244, "seek": 110056, "start": 1105.56, "end": 1109.56, "text": " of other CPU architectures.", "tokens": [50614, 295, 661, 13199, 6331, 1303, 13, 50814], "temperature": 0.0, "avg_logprob": -0.32132652157642805, "compression_ratio": 1.3235294117647058, "no_speech_prob": 0.0015260757645592093}, {"id": 245, "seek": 110056, "start": 1109.56, "end": 1115.56, "text": " Now, LFCOM can compile H664 LF binary.", "tokens": [50814, 823, 11, 441, 37, 34939, 393, 31413, 389, 21, 19395, 441, 37, 17434, 13, 51114], "temperature": 0.0, "avg_logprob": -0.32132652157642805, "compression_ratio": 1.3235294117647058, "no_speech_prob": 0.0015260757645592093}, {"id": 246, "seek": 110056, "start": 1118.56, "end": 1120.56, "text": " Yeah, so, yes.", "tokens": [51264, 865, 11, 370, 11, 2086, 13, 51364], "temperature": 0.0, "avg_logprob": -0.32132652157642805, "compression_ratio": 1.3235294117647058, "no_speech_prob": 0.0015260757645592093}, {"id": 247, "seek": 110056, "start": 1122.56, "end": 1125.56, "text": " In the future, we will support other input binary.", "tokens": [51464, 682, 264, 2027, 11, 321, 486, 1406, 661, 4846, 17434, 13, 51614], "temperature": 0.0, "avg_logprob": -0.32132652157642805, "compression_ratio": 1.3235294117647058, "no_speech_prob": 0.0015260757645592093}, {"id": 248, "seek": 113056, "start": 1131.56, "end": 1140.56, "text": " Okay, so, and third, we will, we will, we will", "tokens": [50414, 1033, 11, 370, 11, 293, 2636, 11, 321, 486, 11, 321, 486, 11, 321, 486, 50864], "temperature": 0.4, "avg_logprob": -0.3035981727368904, "compression_ratio": 1.55, "no_speech_prob": 0.007576024159789085}, {"id": 249, "seek": 113056, "start": 1140.56, "end": 1143.56, "text": " append system calls emulation.", "tokens": [50864, 34116, 1185, 5498, 846, 2776, 13, 51014], "temperature": 0.4, "avg_logprob": -0.3035981727368904, "compression_ratio": 1.55, "no_speech_prob": 0.007576024159789085}, {"id": 250, "seek": 113056, "start": 1143.56, "end": 1149.56, "text": " And now LFCOM implements a part of system calls and", "tokens": [51014, 400, 586, 441, 37, 34939, 704, 17988, 257, 644, 295, 1185, 5498, 293, 51314], "temperature": 0.4, "avg_logprob": -0.3035981727368904, "compression_ratio": 1.55, "no_speech_prob": 0.007576024159789085}, {"id": 251, "seek": 113056, "start": 1149.56, "end": 1154.56, "text": " a lot of system calls are not implemented.", "tokens": [51314, 257, 688, 295, 1185, 5498, 366, 406, 12270, 13, 51564], "temperature": 0.4, "avg_logprob": -0.3035981727368904, "compression_ratio": 1.55, "no_speech_prob": 0.007576024159789085}, {"id": 252, "seek": 113056, "start": 1154.56, "end": 1158.56, "text": " So, and specifically, when targeting Wazm as", "tokens": [51564, 407, 11, 293, 4682, 11, 562, 17918, 343, 921, 76, 382, 51764], "temperature": 0.4, "avg_logprob": -0.3035981727368904, "compression_ratio": 1.55, "no_speech_prob": 0.007576024159789085}, {"id": 253, "seek": 115856, "start": 1158.56, "end": 1163.56, "text": " the output binary formats, some system calls are", "tokens": [50364, 264, 5598, 17434, 25879, 11, 512, 1185, 5498, 366, 50614], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 254, "seek": 115856, "start": 1163.56, "end": 1165.56, "text": " difficult to implement.", "tokens": [50614, 2252, 281, 4445, 13, 50714], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 255, "seek": 115856, "start": 1165.56, "end": 1169.56, "text": " For example, for exec and so on.", "tokens": [50714, 1171, 1365, 11, 337, 4454, 293, 370, 322, 13, 50914], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 256, "seek": 115856, "start": 1169.56, "end": 1175.56, "text": " Yeah, so, so, so, I think that", "tokens": [50914, 865, 11, 370, 11, 370, 11, 370, 11, 286, 519, 300, 51214], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 257, "seek": 115856, "start": 1175.56, "end": 1181.56, "text": " implementing that system calls is very variable.", "tokens": [51214, 18114, 300, 1185, 5498, 307, 588, 7006, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 258, "seek": 115856, "start": 1181.56, "end": 1186.56, "text": " So, and fourth, supporting dynamic linking.", "tokens": [51514, 407, 11, 293, 6409, 11, 7231, 8546, 25775, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2422114759683609, "compression_ratio": 1.4967320261437909, "no_speech_prob": 0.0012846740428358316}, {"id": 259, "seek": 118656, "start": 1186.56, "end": 1192.56, "text": " And now LFCOM can compile the static,", "tokens": [50364, 400, 586, 441, 37, 34939, 393, 31413, 264, 13437, 11, 50664], "temperature": 0.0, "avg_logprob": -0.41157391386212044, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.009780929423868656}, {"id": 260, "seek": 118656, "start": 1192.56, "end": 1197.56, "text": " static, link, LFU binary.", "tokens": [50664, 13437, 11, 2113, 11, 441, 37, 52, 17434, 13, 50914], "temperature": 0.0, "avg_logprob": -0.41157391386212044, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.009780929423868656}, {"id": 261, "seek": 118656, "start": 1197.56, "end": 1204.56, "text": " So, and that's where that dynamic linking is an", "tokens": [50914, 407, 11, 293, 300, 311, 689, 300, 8546, 25775, 307, 364, 51264], "temperature": 0.0, "avg_logprob": -0.41157391386212044, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.009780929423868656}, {"id": 262, "seek": 118656, "start": 1204.56, "end": 1208.56, "text": " important function and will support in the future.", "tokens": [51264, 1021, 2445, 293, 486, 1406, 294, 264, 2027, 13, 51464], "temperature": 0.0, "avg_logprob": -0.41157391386212044, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.009780929423868656}, {"id": 263, "seek": 118656, "start": 1208.56, "end": 1210.56, "text": " Yeah.", "tokens": [51464, 865, 13, 51564], "temperature": 0.0, "avg_logprob": -0.41157391386212044, "compression_ratio": 1.263157894736842, "no_speech_prob": 0.009780929423868656}, {"id": 264, "seek": 121056, "start": 1211.56, "end": 1219.56, "text": " Okay, so, and fifth is the promise analysis of", "tokens": [50414, 1033, 11, 370, 11, 293, 9266, 307, 264, 6228, 5215, 295, 50814], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 265, "seek": 121056, "start": 1219.56, "end": 1221.56, "text": " the Wazm targets.", "tokens": [50814, 264, 343, 921, 76, 12911, 13, 50914], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 266, "seek": 121056, "start": 1221.56, "end": 1224.56, "text": " Yeah.", "tokens": [50914, 865, 13, 51064], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 267, "seek": 121056, "start": 1224.56, "end": 1230.56, "text": " Now, I measure the promise evaluation under the", "tokens": [51064, 823, 11, 286, 3481, 264, 6228, 13344, 833, 264, 51364], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 268, "seek": 121056, "start": 1230.56, "end": 1234.56, "text": " H664.", "tokens": [51364, 389, 21, 19395, 13, 51564], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 269, "seek": 121056, "start": 1234.56, "end": 1239.56, "text": " So, I shoot promise at the binary of the", "tokens": [51564, 407, 11, 286, 3076, 6228, 412, 264, 17434, 295, 264, 51814], "temperature": 0.0, "avg_logprob": -0.40924211910792757, "compression_ratio": 1.32, "no_speech_prob": 0.03354164958000183}, {"id": 270, "seek": 123956, "start": 1239.56, "end": 1241.56, "text": " Wazm targets.", "tokens": [50364, 343, 921, 76, 12911, 13, 50464], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 271, "seek": 123956, "start": 1241.56, "end": 1243.56, "text": " Okay.", "tokens": [50464, 1033, 13, 50564], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 272, "seek": 123956, "start": 1250.56, "end": 1255.56, "text": " Okay, so, and the sixth is making LNB bit calls", "tokens": [50914, 1033, 11, 370, 11, 293, 264, 15102, 307, 1455, 441, 45, 33, 857, 5498, 51164], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 273, "seek": 123956, "start": 1255.56, "end": 1257.56, "text": " generated more efficient.", "tokens": [51164, 10833, 544, 7148, 13, 51264], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 274, "seek": 123956, "start": 1257.56, "end": 1261.56, "text": " Yeah, and, and so, yeah, okay.", "tokens": [51264, 865, 11, 293, 11, 293, 370, 11, 1338, 11, 1392, 13, 51464], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 275, "seek": 123956, "start": 1261.56, "end": 1266.56, "text": " So, in the current implemented.", "tokens": [51464, 407, 11, 294, 264, 2190, 12270, 13, 51714], "temperature": 0.0, "avg_logprob": -0.33323953862775835, "compression_ratio": 1.2580645161290323, "no_speech_prob": 0.04352403059601784}, {"id": 276, "seek": 126656, "start": 1266.56, "end": 1269.56, "text": " I translate that to Wazm 32.", "tokens": [50364, 286, 13799, 300, 281, 343, 921, 76, 8858, 13, 50514], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 277, "seek": 126656, "start": 1269.56, "end": 1273.56, "text": " Sorry, well, I, sorry.", "tokens": [50514, 4919, 11, 731, 11, 286, 11, 2597, 13, 50714], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 278, "seek": 126656, "start": 1273.56, "end": 1278.56, "text": " I, the 32 bit x86 platform.", "tokens": [50714, 286, 11, 264, 8858, 857, 2031, 22193, 3663, 13, 50964], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 279, "seek": 126656, "start": 1278.56, "end": 1285.56, "text": " So, I think that the H664 L binary is", "tokens": [50964, 407, 11, 286, 519, 300, 264, 389, 21, 19395, 441, 17434, 307, 51314], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 280, "seek": 126656, "start": 1285.56, "end": 1289.56, "text": " mainly used in the world.", "tokens": [51314, 8704, 1143, 294, 264, 1002, 13, 51514], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 281, "seek": 126656, "start": 1289.56, "end": 1294.56, "text": " So, I think the support of the L binary H664 is", "tokens": [51514, 407, 11, 286, 519, 264, 1406, 295, 264, 441, 17434, 389, 21, 19395, 307, 51764], "temperature": 0.0, "avg_logprob": -0.40620308452182347, "compression_ratio": 1.3941605839416058, "no_speech_prob": 0.09794674068689346}, {"id": 282, "seek": 129456, "start": 1294.56, "end": 1296.56, "text": " a big influence.", "tokens": [50364, 257, 955, 6503, 13, 50464], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 283, "seek": 129456, "start": 1296.56, "end": 1298.56, "text": " I think that's.", "tokens": [50464, 286, 519, 300, 311, 13, 50564], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 284, "seek": 129456, "start": 1303.56, "end": 1305.56, "text": " Yeah.", "tokens": [50814, 865, 13, 50914], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 285, "seek": 129456, "start": 1305.56, "end": 1307.56, "text": " I take the top.", "tokens": [50914, 286, 747, 264, 1192, 13, 51014], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 286, "seek": 129456, "start": 1307.56, "end": 1310.56, "text": " And you consider using it instead of", "tokens": [51014, 400, 291, 1949, 1228, 309, 2602, 295, 51164], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 287, "seek": 129456, "start": 1310.56, "end": 1313.56, "text": " Remila revenge, if you know revenge.", "tokens": [51164, 4080, 7371, 16711, 11, 498, 291, 458, 16711, 13, 51314], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 288, "seek": 129456, "start": 1313.56, "end": 1316.56, "text": " I'm a core developer of revenge, disclaimer.", "tokens": [51314, 286, 478, 257, 4965, 10754, 295, 16711, 11, 40896, 13, 51464], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 289, "seek": 129456, "start": 1316.56, "end": 1323.56, "text": " So, I'm sorry.", "tokens": [51464, 407, 11, 286, 478, 2597, 13, 51814], "temperature": 0.0, "avg_logprob": -0.43852288795239996, "compression_ratio": 1.3623188405797102, "no_speech_prob": 0.07840774208307266}, {"id": 290, "seek": 132356, "start": 1324.56, "end": 1328.56, "text": " Could you, could you, if you have a question, more sorry.", "tokens": [50414, 7497, 291, 11, 727, 291, 11, 498, 291, 362, 257, 1168, 11, 544, 2597, 13, 50614], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 291, "seek": 132356, "start": 1328.56, "end": 1329.56, "text": " Yeah.", "tokens": [50614, 865, 13, 50664], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 292, "seek": 132356, "start": 1329.56, "end": 1333.56, "text": " Remila is a tool to leave from executable code to", "tokens": [50664, 4080, 7371, 307, 257, 2290, 281, 1856, 490, 7568, 712, 3089, 281, 50864], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 293, "seek": 132356, "start": 1333.56, "end": 1334.56, "text": " bit code.", "tokens": [50864, 857, 3089, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 294, "seek": 132356, "start": 1334.56, "end": 1335.56, "text": " Yeah.", "tokens": [50914, 865, 13, 50964], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 295, "seek": 132356, "start": 1335.56, "end": 1338.56, "text": " There's another tool which we developed, which is called", "tokens": [50964, 821, 311, 1071, 2290, 597, 321, 4743, 11, 597, 307, 1219, 51114], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 296, "seek": 132356, "start": 1338.56, "end": 1340.56, "text": " revenge that does something similar.", "tokens": [51114, 16711, 300, 775, 746, 2531, 13, 51214], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 297, "seek": 132356, "start": 1340.56, "end": 1342.56, "text": " Maybe have you considered that?", "tokens": [51214, 2704, 362, 291, 4888, 300, 30, 51314], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 298, "seek": 132356, "start": 1342.56, "end": 1344.56, "text": " Are you interested in that?", "tokens": [51314, 2014, 291, 3102, 294, 300, 30, 51414], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 299, "seek": 132356, "start": 1344.56, "end": 1346.56, "text": " I don't know.", "tokens": [51414, 286, 500, 380, 458, 13, 51514], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 300, "seek": 132356, "start": 1346.56, "end": 1352.56, "text": " Sorry, I could use a more, sorry, sorry, sorry.", "tokens": [51514, 4919, 11, 286, 727, 764, 257, 544, 11, 2597, 11, 2597, 11, 2597, 13, 51814], "temperature": 0.0, "avg_logprob": -0.3195097941272664, "compression_ratio": 1.5898617511520738, "no_speech_prob": 0.07777971774339676}, {"id": 301, "seek": 135256, "start": 1352.56, "end": 1355.56, "text": " Yeah.", "tokens": [50364, 865, 13, 50514], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 302, "seek": 135256, "start": 1355.56, "end": 1358.56, "text": " Is it an alternative to, revenge is an alternative", "tokens": [50514, 1119, 309, 364, 8535, 281, 11, 16711, 307, 364, 8535, 50664], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 303, "seek": 135256, "start": 1358.56, "end": 1360.56, "text": " library to, Remila.", "tokens": [50664, 6405, 281, 11, 4080, 7371, 13, 50764], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 304, "seek": 135256, "start": 1360.56, "end": 1362.56, "text": " Have you, have you heard of that?", "tokens": [50764, 3560, 291, 11, 362, 291, 2198, 295, 300, 30, 50864], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 305, "seek": 135256, "start": 1362.56, "end": 1366.56, "text": " Well, have you heard of the revenge library?", "tokens": [50864, 1042, 11, 362, 291, 2198, 295, 264, 16711, 6405, 30, 51064], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 306, "seek": 135256, "start": 1366.56, "end": 1370.56, "text": " Sorry.", "tokens": [51064, 4919, 13, 51264], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 307, "seek": 135256, "start": 1370.56, "end": 1377.56, "text": " It was just saying, if you'd heard of the revenge library,", "tokens": [51264, 467, 390, 445, 1566, 11, 498, 291, 1116, 2198, 295, 264, 16711, 6405, 11, 51614], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 308, "seek": 135256, "start": 1377.56, "end": 1379.56, "text": " does something similar to Remila.", "tokens": [51614, 775, 746, 2531, 281, 4080, 7371, 13, 51714], "temperature": 0.0, "avg_logprob": -0.3186061810224484, "compression_ratio": 1.7465753424657535, "no_speech_prob": 0.0063276030123233795}, {"id": 309, "seek": 137956, "start": 1380.56, "end": 1383.56, "text": " It sounds like you haven't heard of it.", "tokens": [50414, 467, 3263, 411, 291, 2378, 380, 2198, 295, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 310, "seek": 137956, "start": 1383.56, "end": 1388.56, "text": " That was, that was my interpretation of the question.", "tokens": [50564, 663, 390, 11, 300, 390, 452, 14174, 295, 264, 1168, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 311, "seek": 137956, "start": 1388.56, "end": 1391.56, "text": " I think that will fly.", "tokens": [50814, 286, 519, 300, 486, 3603, 13, 50964], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 312, "seek": 137956, "start": 1391.56, "end": 1393.56, "text": " I'm sorry.", "tokens": [50964, 286, 478, 2597, 13, 51064], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 313, "seek": 137956, "start": 1396.56, "end": 1398.56, "text": " Yeah.", "tokens": [51214, 865, 13, 51314], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 314, "seek": 137956, "start": 1398.56, "end": 1404.56, "text": " When you measured, you did a performance between", "tokens": [51314, 1133, 291, 12690, 11, 291, 630, 257, 3389, 1296, 51614], "temperature": 0.0, "avg_logprob": -0.3449974060058594, "compression_ratio": 1.348148148148148, "no_speech_prob": 0.022245611995458603}, {"id": 315, "seek": 140456, "start": 1404.56, "end": 1407.56, "text": " Kwemu and Elfkong.", "tokens": [50364, 591, 826, 20140, 293, 2699, 69, 74, 556, 13, 50514], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 316, "seek": 140456, "start": 1407.56, "end": 1408.56, "text": " Yeah.", "tokens": [50514, 865, 13, 50564], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 317, "seek": 140456, "start": 1408.56, "end": 1413.56, "text": " Was that like the, what did you measure there?", "tokens": [50564, 3027, 300, 411, 264, 11, 437, 630, 291, 3481, 456, 30, 50814], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 318, "seek": 140456, "start": 1413.56, "end": 1417.56, "text": " I didn't understand was it the compilation or running?", "tokens": [50814, 286, 994, 380, 1223, 390, 309, 264, 40261, 420, 2614, 30, 51014], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 319, "seek": 140456, "start": 1417.56, "end": 1420.56, "text": " What did you measure in that performance?", "tokens": [51014, 708, 630, 291, 3481, 294, 300, 3389, 30, 51164], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 320, "seek": 140456, "start": 1420.56, "end": 1422.56, "text": " Well, comparison performance.", "tokens": [51164, 1042, 11, 9660, 3389, 13, 51264], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 321, "seek": 140456, "start": 1422.56, "end": 1424.56, "text": " Yes.", "tokens": [51264, 1079, 13, 51364], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 322, "seek": 140456, "start": 1424.56, "end": 1428.56, "text": " So, and, okay.", "tokens": [51364, 407, 11, 293, 11, 1392, 13, 51564], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 323, "seek": 140456, "start": 1428.56, "end": 1429.56, "text": " Yes.", "tokens": [51564, 1079, 13, 51614], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 324, "seek": 140456, "start": 1429.56, "end": 1433.56, "text": " Basically the, component performance is of Elfkong.", "tokens": [51614, 8537, 264, 11, 6542, 3389, 307, 295, 2699, 69, 74, 556, 13, 51814], "temperature": 0.0, "avg_logprob": -0.30390811496310766, "compression_ratio": 1.5804597701149425, "no_speech_prob": 0.04050713777542114}, {"id": 325, "seek": 143356, "start": 1433.56, "end": 1435.56, "text": " It's very long.", "tokens": [50364, 467, 311, 588, 938, 13, 50464], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 326, "seek": 143356, "start": 1435.56, "end": 1441.56, "text": " But in this project, in this program of the sample,", "tokens": [50464, 583, 294, 341, 1716, 11, 294, 341, 1461, 295, 264, 6889, 11, 50764], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 327, "seek": 143356, "start": 1441.56, "end": 1450.56, "text": " sample F binary, about, about it takes one minute", "tokens": [50764, 6889, 479, 17434, 11, 466, 11, 466, 309, 2516, 472, 3456, 51214], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 328, "seek": 143356, "start": 1450.56, "end": 1452.56, "text": " for the compiling.", "tokens": [51214, 337, 264, 715, 4883, 13, 51314], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 329, "seek": 143356, "start": 1452.56, "end": 1454.56, "text": " Oh, yes.", "tokens": [51314, 876, 11, 2086, 13, 51414], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 330, "seek": 143356, "start": 1454.56, "end": 1456.56, "text": " It's the compilation that is faster.", "tokens": [51414, 467, 311, 264, 40261, 300, 307, 4663, 13, 51514], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 331, "seek": 143356, "start": 1456.56, "end": 1461.56, "text": " Or is it the running of the thing that is faster?", "tokens": [51514, 1610, 307, 309, 264, 2614, 295, 264, 551, 300, 307, 4663, 30, 51764], "temperature": 0.0, "avg_logprob": -0.22789976041610926, "compression_ratio": 1.5364238410596027, "no_speech_prob": 0.02771303616464138}, {"id": 332, "seek": 146156, "start": 1461.56, "end": 1467.56, "text": " Is it like, I don't, I don't understand.", "tokens": [50364, 1119, 309, 411, 11, 286, 500, 380, 11, 286, 500, 380, 1223, 13, 50664], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 333, "seek": 146156, "start": 1467.56, "end": 1473.56, "text": " We're measuring the, the running, like the produced results", "tokens": [50664, 492, 434, 13389, 264, 11, 264, 2614, 11, 411, 264, 7126, 3542, 50964], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 334, "seek": 146156, "start": 1473.56, "end": 1476.56, "text": " for the compilation.", "tokens": [50964, 337, 264, 40261, 13, 51114], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 335, "seek": 146156, "start": 1476.56, "end": 1478.56, "text": " Like which?", "tokens": [51114, 1743, 597, 30, 51214], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 336, "seek": 146156, "start": 1478.56, "end": 1481.56, "text": " Like which, I'm sorry.", "tokens": [51214, 1743, 597, 11, 286, 478, 2597, 13, 51364], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 337, "seek": 146156, "start": 1481.56, "end": 1490.56, "text": " And, I guess that is for like running.", "tokens": [51364, 400, 11, 286, 2041, 300, 307, 337, 411, 2614, 13, 51814], "temperature": 0.0, "avg_logprob": -0.2742287166534908, "compression_ratio": 1.4028776978417266, "no_speech_prob": 0.04456528648734093}, {"id": 338, "seek": 149056, "start": 1491.56, "end": 1493.56, "text": " That, yes.", "tokens": [50414, 663, 11, 2086, 13, 50514], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 339, "seek": 149056, "start": 1493.56, "end": 1504.56, "text": " So, by Kwemu, it runs, it runs like the, it has the,", "tokens": [50514, 407, 11, 538, 591, 826, 20140, 11, 309, 6676, 11, 309, 6676, 411, 264, 11, 309, 575, 264, 11, 51064], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 340, "seek": 149056, "start": 1504.56, "end": 1507.56, "text": " the G that turns into the native code.", "tokens": [51064, 264, 460, 300, 4523, 666, 264, 8470, 3089, 13, 51214], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 341, "seek": 149056, "start": 1507.56, "end": 1511.56, "text": " Like it has the, ahead of time, or you have ahead of time", "tokens": [51214, 1743, 309, 575, 264, 11, 2286, 295, 565, 11, 420, 291, 362, 2286, 295, 565, 51414], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 342, "seek": 149056, "start": 1511.56, "end": 1516.56, "text": " compilation for that, what, what, what's that you run", "tokens": [51414, 40261, 337, 300, 11, 437, 11, 437, 11, 437, 311, 300, 291, 1190, 51664], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 343, "seek": 149056, "start": 1516.56, "end": 1517.56, "text": " on a browser, right?", "tokens": [51664, 322, 257, 11185, 11, 558, 30, 51714], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 344, "seek": 149056, "start": 1517.56, "end": 1518.56, "text": " Later.", "tokens": [51714, 11965, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2983449073064895, "compression_ratio": 1.6026490066225165, "no_speech_prob": 0.03663923218846321}, {"id": 345, "seek": 151856, "start": 1518.56, "end": 1522.56, "text": " So, are you looking at the performance running on the", "tokens": [50364, 407, 11, 366, 291, 1237, 412, 264, 3389, 2614, 322, 264, 50564], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 346, "seek": 151856, "start": 1522.56, "end": 1524.56, "text": " browser here and comparing that to Kwemu?", "tokens": [50564, 11185, 510, 293, 15763, 300, 281, 591, 826, 20140, 30, 50664], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 347, "seek": 151856, "start": 1524.56, "end": 1527.56, "text": " Or are we looking at that, like some compilation item,", "tokens": [50664, 1610, 366, 321, 1237, 412, 300, 11, 411, 512, 40261, 3174, 11, 50814], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 348, "seek": 151856, "start": 1527.56, "end": 1530.56, "text": " just understand like what are we comparing?", "tokens": [50814, 445, 1223, 411, 437, 366, 321, 15763, 30, 50964], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 349, "seek": 151856, "start": 1537.56, "end": 1542.56, "text": " Sorry, so, could you ask after the presentation again?", "tokens": [51314, 4919, 11, 370, 11, 727, 291, 1029, 934, 264, 5860, 797, 30, 51564], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 350, "seek": 151856, "start": 1542.56, "end": 1543.56, "text": " Sorry.", "tokens": [51564, 4919, 13, 51614], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 351, "seek": 151856, "start": 1543.56, "end": 1544.56, "text": " I'm sorry.", "tokens": [51614, 286, 478, 2597, 13, 51664], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 352, "seek": 151856, "start": 1544.56, "end": 1545.56, "text": " Thank you.", "tokens": [51664, 1044, 291, 13, 51714], "temperature": 0.0, "avg_logprob": -0.23299741744995117, "compression_ratio": 1.5706214689265536, "no_speech_prob": 0.031880639493465424}, {"id": 353, "seek": 154556, "start": 1545.56, "end": 1550.56, "text": " Yeah.", "tokens": [50364, 865, 13, 50614], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 354, "seek": 154556, "start": 1550.56, "end": 1556.56, "text": " So, you compare the performance with like emulated ARH 64", "tokens": [50614, 407, 11, 291, 6794, 264, 3389, 365, 411, 846, 6987, 8943, 39, 12145, 50914], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 355, "seek": 154556, "start": 1556.56, "end": 1560.56, "text": " versus a X86 binary, binary.", "tokens": [50914, 5717, 257, 1783, 22193, 17434, 11, 17434, 13, 51114], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 356, "seek": 154556, "start": 1560.56, "end": 1565.56, "text": " Have you also tried, like after converting this with,", "tokens": [51114, 3560, 291, 611, 3031, 11, 411, 934, 29942, 341, 365, 11, 51364], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 357, "seek": 154556, "start": 1565.56, "end": 1569.56, "text": " it was Alphcon to convert it back to ARH 64", "tokens": [51364, 309, 390, 967, 950, 1671, 281, 7620, 309, 646, 281, 8943, 39, 12145, 51564], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 358, "seek": 154556, "start": 1569.56, "end": 1572.56, "text": " and benchmark that against the original source?", "tokens": [51564, 293, 18927, 300, 1970, 264, 3380, 4009, 30, 51714], "temperature": 0.0, "avg_logprob": -0.33149160855058313, "compression_ratio": 1.3837209302325582, "no_speech_prob": 0.07208369672298431}, {"id": 359, "seek": 157256, "start": 1573.56, "end": 1575.56, "text": " So, like what is the overhead of one,", "tokens": [50414, 407, 11, 411, 437, 307, 264, 19922, 295, 472, 11, 50514], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 360, "seek": 157256, "start": 1575.56, "end": 1577.56, "text": " like lifting it and?", "tokens": [50514, 411, 15798, 309, 293, 30, 50614], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 361, "seek": 157256, "start": 1577.56, "end": 1583.56, "text": " So, the question is overhead of the lifting,", "tokens": [50614, 407, 11, 264, 1168, 307, 19922, 295, 264, 15798, 11, 50914], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 362, "seek": 157256, "start": 1583.56, "end": 1585.56, "text": " binary lifting.", "tokens": [50914, 17434, 15798, 13, 51014], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 363, "seek": 157256, "start": 1585.56, "end": 1586.56, "text": " Oh, yeah.", "tokens": [51014, 876, 11, 1338, 13, 51064], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 364, "seek": 157256, "start": 1586.56, "end": 1596.56, "text": " So, yeah, so, and in the program of this", "tokens": [51064, 407, 11, 1338, 11, 370, 11, 293, 294, 264, 1461, 295, 341, 51564], "temperature": 0.0, "avg_logprob": -0.43353192559603987, "compression_ratio": 1.4406779661016949, "no_speech_prob": 0.06444015353918076}, {"id": 365, "seek": 159656, "start": 1596.56, "end": 1601.56, "text": " performance evaluation, the performance overhead of the", "tokens": [50364, 3389, 13344, 11, 264, 3389, 19922, 295, 264, 50614], "temperature": 0.0, "avg_logprob": -0.3797487201112689, "compression_ratio": 1.5125, "no_speech_prob": 0.0718226507306099}, {"id": 366, "seek": 159656, "start": 1601.56, "end": 1605.56, "text": " lifting is very small.", "tokens": [50614, 15798, 307, 588, 1359, 13, 50814], "temperature": 0.0, "avg_logprob": -0.3797487201112689, "compression_ratio": 1.5125, "no_speech_prob": 0.0718226507306099}, {"id": 367, "seek": 159656, "start": 1605.56, "end": 1611.56, "text": " And maybe it takes maybe three or four seconds to", "tokens": [50814, 400, 1310, 309, 2516, 1310, 1045, 420, 1451, 3949, 281, 51114], "temperature": 0.0, "avg_logprob": -0.3797487201112689, "compression_ratio": 1.5125, "no_speech_prob": 0.0718226507306099}, {"id": 368, "seek": 159656, "start": 1611.56, "end": 1617.56, "text": " compare the lift, the binary to L and B bitcalls.", "tokens": [51114, 6794, 264, 5533, 11, 264, 17434, 281, 441, 293, 363, 857, 66, 39655, 13, 51414], "temperature": 0.0, "avg_logprob": -0.3797487201112689, "compression_ratio": 1.5125, "no_speech_prob": 0.0718226507306099}, {"id": 369, "seek": 159656, "start": 1619.56, "end": 1623.56, "text": " Yeah, but what I meant is like, if you combine the big bitcalls", "tokens": [51514, 865, 11, 457, 437, 286, 4140, 307, 411, 11, 498, 291, 10432, 264, 955, 857, 66, 39655, 51714], "temperature": 0.0, "avg_logprob": -0.3797487201112689, "compression_ratio": 1.5125, "no_speech_prob": 0.0718226507306099}, {"id": 370, "seek": 162356, "start": 1623.56, "end": 1626.56, "text": " back to the original architecture,", "tokens": [50364, 646, 281, 264, 3380, 9482, 11, 50514], "temperature": 0.0, "avg_logprob": -0.26541979350740946, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.04992058873176575}, {"id": 371, "seek": 162356, "start": 1626.56, "end": 1632.56, "text": " so how is the performance of that binary compared to the original binary?", "tokens": [50514, 370, 577, 307, 264, 3389, 295, 300, 17434, 5347, 281, 264, 3380, 17434, 30, 50814], "temperature": 0.0, "avg_logprob": -0.26541979350740946, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.04992058873176575}, {"id": 372, "seek": 162356, "start": 1632.56, "end": 1637.56, "text": " So, you say that from L binary to the target architecture binary,", "tokens": [50814, 407, 11, 291, 584, 300, 490, 441, 17434, 281, 264, 3779, 9482, 17434, 11, 51064], "temperature": 0.0, "avg_logprob": -0.26541979350740946, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.04992058873176575}, {"id": 373, "seek": 162356, "start": 1637.56, "end": 1644.56, "text": " the performance overhead in the LB bitcalls to target binary.", "tokens": [51064, 264, 3389, 19922, 294, 264, 441, 33, 857, 66, 39655, 281, 3779, 17434, 13, 51414], "temperature": 0.0, "avg_logprob": -0.26541979350740946, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.04992058873176575}, {"id": 374, "seek": 162356, "start": 1646.56, "end": 1648.56, "text": " Oh, sorry.", "tokens": [51514, 876, 11, 2597, 13, 51614], "temperature": 0.0, "avg_logprob": -0.26541979350740946, "compression_ratio": 1.6802721088435375, "no_speech_prob": 0.04992058873176575}, {"id": 375, "seek": 165356, "start": 1653.56, "end": 1655.56, "text": " I just follow up on that.", "tokens": [50364, 286, 445, 1524, 493, 322, 300, 13, 50464], "temperature": 0.0, "avg_logprob": -0.5514443920504662, "compression_ratio": 1.1071428571428572, "no_speech_prob": 0.7127934098243713}, {"id": 376, "seek": 165356, "start": 1655.56, "end": 1658.56, "text": " So, if you just, I will just drop in directly,", "tokens": [50464, 407, 11, 498, 291, 445, 11, 286, 486, 445, 3270, 294, 3838, 11, 50614], "temperature": 0.0, "avg_logprob": -0.5514443920504662, "compression_ratio": 1.1071428571428572, "no_speech_prob": 0.7127934098243713}, {"id": 377, "seek": 165356, "start": 1658.56, "end": 1659.56, "text": " but from experience.", "tokens": [50614, 457, 490, 1752, 13, 50664], "temperature": 0.0, "avg_logprob": -0.5514443920504662, "compression_ratio": 1.1071428571428572, "no_speech_prob": 0.7127934098243713}], "language": "en"}