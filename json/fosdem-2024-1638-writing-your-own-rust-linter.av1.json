{"text": " We're going to have your attention. We'd like to begin with the next talk. We have Guillaume. He's going to explain to us how to write your own Rust Linter, as you can see on the lovely slides. And if you talk, Luca, have we got the audio as unmuted and everything? Perfect. Wonderful. Okay. Take it away. Hi, everyone. I will try to speak loud so everyone can hear. So like he mentioned today, I will explain to you how to write your own Rust Linter. So first little presentation. I'm Guillaume Goumez. If you come every year, I give a talk, so now you should more or less remember me, I think. I'm a member of a few teams of Rust projects and I'm an engineer at Huawei. So first, let's explain what a Linter is in case some people don't know yet what it is. A Linter is a tool that generally is an addition to a compiler of a language. And here in Rust, I suppose everyone heard about Clippy. At least I hope so. The goal is to detect some very basic logic errors to suggest improvements for any method you might use, anything you could use better. The goal is to make your code better in short. So now how is a Rust Linter actually working? We are directly entering into the subject. So let's say it's an extension of the Rust compiler. The Rust compiler has an API, very unstable. So very frequently we have to update the Linter to be able to still work with the Rust compiler. And that's exactly how Clippy works. So when Clippy is running, it's actually running a lot of parts of the compiler to get parts like AST for people who don't know what AST is, it's a token representing your code. So if you have the struct keyword, it's a keyword and it's a struct. So that allows you to have information higher than. But it's not only that because if you only had the AST information, you could only make suggestions like, yeah, you use this generics but not in a good way so you can do it like that, et cetera. So the goal is to go beyond that and to get access to more information like a borrower checker and everything. So if you have a trait you're using but you could use another trait which does the same thing but shorter, we can now suggest it because we have this information from the compiler. But because of that, we have to update the Linter often or never update which version of the compiler we are using. So why does it need to be a rest compiler extension? It's quite simple to explain. So unless you want to reimplement all the parsing, the borrower checking and pretty much everything, well, better use what is already existing and ask them likely to make their API public so you can use them. And that's exactly how things went with Clippy and that's exactly how I went as well. So I mentioned a few limitations already. So it can only work on crates compiled with the same Rusty version. You don't see it with Clippy because it's tied with your compiler. When you un-style a Clippy, it's tied with your current compiler version. So it just works but it's something to keep in mind you will see later. Like I mentioned, the Rusty API is not stable so very often you have to update your Linter code to be able to keep up. It's tied to a specific Rusty version and I'm not talking about a stable release but literally to commit version which is a bit annoying. And also because of everything, it's annoying to wrap in a cargo command because you need to use a very specific Rusty version. Again, we'll come back to that later. So I will voluntarily don't mention all lint passes. I will only speak of the two main ones, the early and the late passes. The early passes give you access to AST. So you are able to see the syntax and the work a bit on it but you don't have type information or everything. You can only just know that this is a struct and its name is and it has generics but you don't know what traits it implements or anything. You just have very basic information and you have the late pass which in this case goes a lot further. You have access to Borrowchecker information. You have access to everything. What does this type is implementing? Does it implement this trait? What is its layout? Everything. So in this case, we will talk about how to write a linter but with Rusty tools. The goal of this trait is to wrap the Rusty API into something easier to set up because there is a lot of things to set up. And to add it, it's just that. Like you would add any other trait. For now, the version 0.3 later on it will be updated. And now we start to enter into the fun. So actually to make it work, you need to add this little line in your Kaggle file to tell okay it's a trait but not any trait. It's a Rusty trait. So you need to do some very funny things. And we'll come back to this one but it's some things that you thought were something that we had for years like having to write an extant trait to import a trait. As back you actually need to import a trait from the compiler with extant trait. Otherwise it doesn't work. It's not provided by default. The other thing is we need to create a Rust toolchain file. It's literally its name. If you never use it, if you have a Rust toolchain file in your folder, cargo will only use the version provided inside this file. So in this case, the version of the compiler we're using. This is all in the documentation of Rusty tools. Basically you just need to copy and paste the file into your local file. So in here we say that as components we want the Rusty div which means the traits from the compiler. We want Rust FMT because we are not savages. We want to actually format our code. And the LLVM tool, the preview is to be able to actually compile. Otherwise you don't have a backend which is also problematic. And now let's get into the code. To declare a lint it's mostly macro. As you can see on top we use internal Rusty traits. So lint and session. Lint provides some types linked to handling lints. And session allows us to give information to the Rust compiler about things we want it to run. So in here we create with the declare tool lint macro a lint called warn generics. In MAG. In capital letters. I can't do that. It's warn by default. And we add a message when it will, in case you want information about it, it says warns if any item has generics. It's an early lint pass. So it means we only have access to the AST information. I voluntarily picked this one because to be honest the code is much, much shorter and simpler and for 15 minute talks it will be better. The other thing we need to do is to implement some very basic traits provided by the compiler which we don't need to care about. So they provide a macro for that. So declare lint pass which is in our case allowing you to declare a structure called warn generics. And we link it to the warn generics lint. And after that at the end we have the very empty implementation of the early lint pass trait for our type. This visitor trait, if some don't know the visitor, how to say, pattern, visitor pattern, let's say. The visitor pattern allows you to have access to, literally, you implement whatever you need to have and then, for example, visit function. Whenever the visitor will encounter a function, it will call this method and it will be ours. If we don't care about the rest, they are already implemented. We don't need to care about them. So very convenient. In our case, we only want items that could have generics, so very likely functions and n-us and everything like that. So it will be pretty easy normally. So now we implement the lint. So as I was saying, check item. We don't have anything else to do. It provides a context, the context of the compiler at this stage, an early context, and we have the actual item. And then it's pretty simple. We have methods provided by the compiler and everything. So we check if our, I hope everyone knows the syntax of first, but we check that we have generics. We check that with some generics. We check that the generics are not empty because otherwise there is no point. If we have generics and everything, then we will say, okay, we found generics. We don't want generics because, because, and let's then emit our lint. So first, the lint name. Second, the span. The span is how the rest compiler map your size to your actual source code. It's basically to your size beginning and an end. And you don't have to care about what it's pointing to. You just say, okay, the type I want to lint about is starting here, ending here. You underline you do whatever you do and I don't care. And we have our message saying, no generics here because we don't want generics. And the last thing is in case you wanted to add more information, like for example, we could say, the help and we could add a help message and we can do that a lot more. In case some of you don't know what it is, the syntax with the straight bar is a closure. So a closure taking a diagnostic type argument. Now, the interesting part is now how can we run this lint? And as you can see, not much code because RustyTools is doing pretty much everything. So first, we get the cargo args because it's a cargo command. We will run the cargo tools. We don't want the two first arguments because cargo and tools are not something that we are interested into. We pass the rest of the arguments, if any, into the RustyTools cargo integration command, which we internally call cargo, build everything with its own version because it's not necessarily the case. And once everything is built, it will generate the command line that you actually need to pass the Rusty compiler to be able to run our linter, which we do with WistLint. So this time, args is what cargo provided us so we can now generate and run our lint. So we just give it access because it's already done by RustyTools. And inside this WistLint, we need to actually say to the compiler, OK, I created a lint. It's called not an void call. I did badly. It's a one generics. And that's it. We have everything. We can now live. And the compiler will do everything when living as a WistLint function. So now it's always nicer to be able to run a cargo tool. So you just run a cargo install dash dash pass if it's local, otherwise not. And I named it in this case tools inner. You will understand why later. So we just run it. And it doesn't work because we are not using the same version of the compiler. Congrats. So in this case, what's important to note is that you actually very much need to use the same version of metadata as the files generated by the compiler to be able to use them with the lint. Rusty doesn't understand itself if it's not exactly the same. Like if it's just a commit difference, no, I don't know him. Don't care. No problem. So now we can actually go around this limitation by providing the version like this. So if we do, I thought I had an error output. So if we do, we actually have the tools running. But to be fair, we can't really ask our user to do that themselves. It's pretty bad user experience. So we will go around that and do this very long file as you can see, which for this case will be called the cargo tools. And this one will literally run this command that we saw here itself. And that's it. It does just that. We just wrap our linter and it's just running. So now we install it. We run it. And again, I don't have output. It's very shaming. And believe me, it works. So yeah. I voluntarily, like I said, didn't show a late linter pass to have access to the compiler and everything. But I wrote a blog post explaining that much more in depth. Inside it, you have an example with an unwrap if I remember, saying, yeah, don't use unwraps use something else. And you see how we actually get the real type information because when you call unwrap, you need to check that unwrap is actually called on the result on an option. But for that, you need to actually get the type check information because if it's, for example, self with a capital letter double colon unwrap and then you pass your type, you actually need to infer the type. And for that, you need type check information. You will see a lot of things that are seen very easy but are quite not so easy. For example, if you want to have, I don't know, which type this implementation is being implemented on, funnily enough, it's quite difficult. You can have the trade very easily but the type it's being implemented on, not so much. And thank you for your attention. More information on my blog and you have my email and social media and everything. And thank you for your attention. So we have about two minutes for questions if anyone has them. Yes, come right to the back. Hello, thanks for this presentation. No, don't share at all. Okay. Hello, again, thanks for this presentation. A few years ago, I wrote a refinement type system for Rust as a linter. I had the courage to maintain it for about one or two versions of Rust. A few months ago, I tried to pick it up again and everything was broken, bit rotten, two tiers, everything had changed. Do you know if there are any plans to make things a bit less messy? Because right now it's really, really, really painful to maintain a linter. No, it's just pain, enjoy. It's a shame. No, in fact, it's actually better now because we have less function to worry about. For example, a lot of APIs that were existing before, only for Rust. Because Rust.doc is a compiler extension. Being less and less used because we said, okay, we now stop accepting completely broken code. And soon enough, we'll be very likely using the same API as Lins. So normally it should be still breaking as much, but not as much. I don't know. How is this related to Clippy? I don't hear you at all. Ah. Basically, it's working the same way, but it exists because in Clippy, not all Lins can be implemented if you have specific needs for your project because you need to have higher security levels or you don't want certain code pieces or everything. You can't expect them to be implemented in Clippy. So you implemented them yourself and that's very much why RustyTools exists. So you can actually do it without having to set up everything yourself. Perfect. Thank you so much.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.88, "text": " We're going to have your attention.", "tokens": [50364, 492, 434, 516, 281, 362, 428, 3202, 13, 50758], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 1, "seek": 0, "start": 7.88, "end": 10.88, "text": " We'd like to begin with the next talk.", "tokens": [50758, 492, 1116, 411, 281, 1841, 365, 264, 958, 751, 13, 50908], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 2, "seek": 0, "start": 10.88, "end": 11.88, "text": " We have Guillaume.", "tokens": [50908, 492, 362, 2694, 5291, 2540, 13, 50958], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 3, "seek": 0, "start": 11.88, "end": 15.56, "text": " He's going to explain to us how to write your own Rust Linter, as you can see on the lovely", "tokens": [50958, 634, 311, 516, 281, 2903, 281, 505, 577, 281, 2464, 428, 1065, 34952, 441, 5106, 11, 382, 291, 393, 536, 322, 264, 7496, 51142], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 4, "seek": 0, "start": 15.56, "end": 16.56, "text": " slides.", "tokens": [51142, 9788, 13, 51192], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 5, "seek": 0, "start": 16.56, "end": 21.84, "text": " And if you talk, Luca, have we got the audio as unmuted and everything?", "tokens": [51192, 400, 498, 291, 751, 11, 42076, 11, 362, 321, 658, 264, 6278, 382, 19334, 4866, 293, 1203, 30, 51456], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 6, "seek": 0, "start": 21.84, "end": 22.84, "text": " Perfect.", "tokens": [51456, 10246, 13, 51506], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 7, "seek": 0, "start": 22.84, "end": 23.84, "text": " Wonderful.", "tokens": [51506, 22768, 13, 51556], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 8, "seek": 0, "start": 23.84, "end": 24.84, "text": " Okay.", "tokens": [51556, 1033, 13, 51606], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 9, "seek": 0, "start": 24.84, "end": 25.84, "text": " Take it away.", "tokens": [51606, 3664, 309, 1314, 13, 51656], "temperature": 0.0, "avg_logprob": -0.32627098006431504, "compression_ratio": 1.4734299516908214, "no_speech_prob": 0.5508334636688232}, {"id": 10, "seek": 2584, "start": 25.84, "end": 32.519999999999996, "text": " Hi, everyone.", "tokens": [50364, 2421, 11, 1518, 13, 50698], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 11, "seek": 2584, "start": 32.519999999999996, "end": 35.64, "text": " I will try to speak loud so everyone can hear.", "tokens": [50698, 286, 486, 853, 281, 1710, 6588, 370, 1518, 393, 1568, 13, 50854], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 12, "seek": 2584, "start": 35.64, "end": 42.2, "text": " So like he mentioned today, I will explain to you how to write your own Rust Linter.", "tokens": [50854, 407, 411, 415, 2835, 965, 11, 286, 486, 2903, 281, 291, 577, 281, 2464, 428, 1065, 34952, 441, 5106, 13, 51182], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 13, "seek": 2584, "start": 42.2, "end": 44.44, "text": " So first little presentation.", "tokens": [51182, 407, 700, 707, 5860, 13, 51294], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 14, "seek": 2584, "start": 44.44, "end": 45.64, "text": " I'm Guillaume Goumez.", "tokens": [51294, 286, 478, 2694, 5291, 2540, 460, 263, 19917, 13, 51354], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 15, "seek": 2584, "start": 45.64, "end": 50.28, "text": " If you come every year, I give a talk, so now you should more or less remember me, I", "tokens": [51354, 759, 291, 808, 633, 1064, 11, 286, 976, 257, 751, 11, 370, 586, 291, 820, 544, 420, 1570, 1604, 385, 11, 286, 51586], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 16, "seek": 2584, "start": 50.28, "end": 51.28, "text": " think.", "tokens": [51586, 519, 13, 51636], "temperature": 0.0, "avg_logprob": -0.23022771685310964, "compression_ratio": 1.4820512820512821, "no_speech_prob": 0.009867495857179165}, {"id": 17, "seek": 5128, "start": 51.28, "end": 58.32, "text": " I'm a member of a few teams of Rust projects and I'm an engineer at Huawei.", "tokens": [50364, 286, 478, 257, 4006, 295, 257, 1326, 5491, 295, 34952, 4455, 293, 286, 478, 364, 11403, 412, 28542, 13, 50716], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 18, "seek": 5128, "start": 58.32, "end": 63.04, "text": " So first, let's explain what a Linter is in case some people don't know yet what it", "tokens": [50716, 407, 700, 11, 718, 311, 2903, 437, 257, 441, 5106, 307, 294, 1389, 512, 561, 500, 380, 458, 1939, 437, 309, 50952], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 19, "seek": 5128, "start": 63.04, "end": 64.04, "text": " is.", "tokens": [50952, 307, 13, 51002], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 20, "seek": 5128, "start": 64.04, "end": 71.4, "text": " A Linter is a tool that generally is an addition to a compiler of a language.", "tokens": [51002, 316, 441, 5106, 307, 257, 2290, 300, 5101, 307, 364, 4500, 281, 257, 31958, 295, 257, 2856, 13, 51370], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 21, "seek": 5128, "start": 71.4, "end": 75.16, "text": " And here in Rust, I suppose everyone heard about Clippy.", "tokens": [51370, 400, 510, 294, 34952, 11, 286, 7297, 1518, 2198, 466, 2033, 48363, 13, 51558], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 22, "seek": 5128, "start": 75.16, "end": 77.56, "text": " At least I hope so.", "tokens": [51558, 1711, 1935, 286, 1454, 370, 13, 51678], "temperature": 0.0, "avg_logprob": -0.24295952499553722, "compression_ratio": 1.4722222222222223, "no_speech_prob": 0.006729146931320429}, {"id": 23, "seek": 7756, "start": 77.56, "end": 86.84, "text": " The goal is to detect some very basic logic errors to suggest improvements for any method", "tokens": [50364, 440, 3387, 307, 281, 5531, 512, 588, 3875, 9952, 13603, 281, 3402, 13797, 337, 604, 3170, 50828], "temperature": 0.0, "avg_logprob": -0.12325128387002383, "compression_ratio": 1.4728260869565217, "no_speech_prob": 0.005811466835439205}, {"id": 24, "seek": 7756, "start": 86.84, "end": 90.72, "text": " you might use, anything you could use better.", "tokens": [50828, 291, 1062, 764, 11, 1340, 291, 727, 764, 1101, 13, 51022], "temperature": 0.0, "avg_logprob": -0.12325128387002383, "compression_ratio": 1.4728260869565217, "no_speech_prob": 0.005811466835439205}, {"id": 25, "seek": 7756, "start": 90.72, "end": 95.96000000000001, "text": " The goal is to make your code better in short.", "tokens": [51022, 440, 3387, 307, 281, 652, 428, 3089, 1101, 294, 2099, 13, 51284], "temperature": 0.0, "avg_logprob": -0.12325128387002383, "compression_ratio": 1.4728260869565217, "no_speech_prob": 0.005811466835439205}, {"id": 26, "seek": 7756, "start": 95.96000000000001, "end": 98.96000000000001, "text": " So now how is a Rust Linter actually working?", "tokens": [51284, 407, 586, 577, 307, 257, 34952, 441, 5106, 767, 1364, 30, 51434], "temperature": 0.0, "avg_logprob": -0.12325128387002383, "compression_ratio": 1.4728260869565217, "no_speech_prob": 0.005811466835439205}, {"id": 27, "seek": 7756, "start": 98.96000000000001, "end": 102.08, "text": " We are directly entering into the subject.", "tokens": [51434, 492, 366, 3838, 11104, 666, 264, 3983, 13, 51590], "temperature": 0.0, "avg_logprob": -0.12325128387002383, "compression_ratio": 1.4728260869565217, "no_speech_prob": 0.005811466835439205}, {"id": 28, "seek": 10208, "start": 102.08, "end": 107.67999999999999, "text": " So let's say it's an extension of the Rust compiler.", "tokens": [50364, 407, 718, 311, 584, 309, 311, 364, 10320, 295, 264, 34952, 31958, 13, 50644], "temperature": 0.0, "avg_logprob": -0.11011947587478993, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.0038960198871791363}, {"id": 29, "seek": 10208, "start": 107.67999999999999, "end": 111.6, "text": " The Rust compiler has an API, very unstable.", "tokens": [50644, 440, 34952, 31958, 575, 364, 9362, 11, 588, 23742, 13, 50840], "temperature": 0.0, "avg_logprob": -0.11011947587478993, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.0038960198871791363}, {"id": 30, "seek": 10208, "start": 111.6, "end": 120.84, "text": " So very frequently we have to update the Linter to be able to still work with the Rust compiler.", "tokens": [50840, 407, 588, 10374, 321, 362, 281, 5623, 264, 441, 5106, 281, 312, 1075, 281, 920, 589, 365, 264, 34952, 31958, 13, 51302], "temperature": 0.0, "avg_logprob": -0.11011947587478993, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.0038960198871791363}, {"id": 31, "seek": 10208, "start": 120.84, "end": 122.68, "text": " And that's exactly how Clippy works.", "tokens": [51302, 400, 300, 311, 2293, 577, 2033, 48363, 1985, 13, 51394], "temperature": 0.0, "avg_logprob": -0.11011947587478993, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.0038960198871791363}, {"id": 32, "seek": 10208, "start": 122.68, "end": 128.88, "text": " So when Clippy is running, it's actually running a lot of parts of the compiler to get parts", "tokens": [51394, 407, 562, 2033, 48363, 307, 2614, 11, 309, 311, 767, 2614, 257, 688, 295, 3166, 295, 264, 31958, 281, 483, 3166, 51704], "temperature": 0.0, "avg_logprob": -0.11011947587478993, "compression_ratio": 1.653061224489796, "no_speech_prob": 0.0038960198871791363}, {"id": 33, "seek": 12888, "start": 128.88, "end": 137.32, "text": " like AST for people who don't know what AST is, it's a token representing your code.", "tokens": [50364, 411, 316, 6840, 337, 561, 567, 500, 380, 458, 437, 316, 6840, 307, 11, 309, 311, 257, 14862, 13460, 428, 3089, 13, 50786], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 34, "seek": 12888, "start": 137.32, "end": 142.88, "text": " So if you have the struct keyword, it's a keyword and it's a struct.", "tokens": [50786, 407, 498, 291, 362, 264, 6594, 20428, 11, 309, 311, 257, 20428, 293, 309, 311, 257, 6594, 13, 51064], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 35, "seek": 12888, "start": 142.88, "end": 146.66, "text": " So that allows you to have information higher than.", "tokens": [51064, 407, 300, 4045, 291, 281, 362, 1589, 2946, 813, 13, 51253], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 36, "seek": 12888, "start": 146.66, "end": 150.8, "text": " But it's not only that because if you only had the AST information, you could only make", "tokens": [51253, 583, 309, 311, 406, 787, 300, 570, 498, 291, 787, 632, 264, 316, 6840, 1589, 11, 291, 727, 787, 652, 51460], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 37, "seek": 12888, "start": 150.8, "end": 156.56, "text": " suggestions like, yeah, you use this generics but not in a good way so you can do it like", "tokens": [51460, 13396, 411, 11, 1338, 11, 291, 764, 341, 1337, 1167, 457, 406, 294, 257, 665, 636, 370, 291, 393, 360, 309, 411, 51748], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 38, "seek": 12888, "start": 156.56, "end": 158.48, "text": " that, et cetera.", "tokens": [51748, 300, 11, 1030, 11458, 13, 51844], "temperature": 0.0, "avg_logprob": -0.19099388466225015, "compression_ratio": 1.7316017316017316, "no_speech_prob": 0.03917429968714714}, {"id": 39, "seek": 15848, "start": 158.48, "end": 163.28, "text": " So the goal is to go beyond that and to get access to more information like a borrower", "tokens": [50364, 407, 264, 3387, 307, 281, 352, 4399, 300, 293, 281, 483, 2105, 281, 544, 1589, 411, 257, 14828, 81, 968, 50604], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 40, "seek": 15848, "start": 163.28, "end": 164.79999999999998, "text": " checker and everything.", "tokens": [50604, 1520, 260, 293, 1203, 13, 50680], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 41, "seek": 15848, "start": 164.79999999999998, "end": 170.32, "text": " So if you have a trait you're using but you could use another trait which does the same", "tokens": [50680, 407, 498, 291, 362, 257, 22538, 291, 434, 1228, 457, 291, 727, 764, 1071, 22538, 597, 775, 264, 912, 50956], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 42, "seek": 15848, "start": 170.32, "end": 175.32, "text": " thing but shorter, we can now suggest it because we have this information from the compiler.", "tokens": [50956, 551, 457, 11639, 11, 321, 393, 586, 3402, 309, 570, 321, 362, 341, 1589, 490, 264, 31958, 13, 51206], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 43, "seek": 15848, "start": 175.32, "end": 181.16, "text": " But because of that, we have to update the Linter often or never update which version", "tokens": [51206, 583, 570, 295, 300, 11, 321, 362, 281, 5623, 264, 441, 5106, 2049, 420, 1128, 5623, 597, 3037, 51498], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 44, "seek": 15848, "start": 181.16, "end": 185.16, "text": " of the compiler we are using.", "tokens": [51498, 295, 264, 31958, 321, 366, 1228, 13, 51698], "temperature": 0.0, "avg_logprob": -0.14297163368451712, "compression_ratio": 1.7619047619047619, "no_speech_prob": 0.0011655050329864025}, {"id": 45, "seek": 18516, "start": 185.16, "end": 189.32, "text": " So why does it need to be a rest compiler extension?", "tokens": [50364, 407, 983, 775, 309, 643, 281, 312, 257, 1472, 31958, 10320, 30, 50572], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 46, "seek": 18516, "start": 189.32, "end": 191.04, "text": " It's quite simple to explain.", "tokens": [50572, 467, 311, 1596, 2199, 281, 2903, 13, 50658], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 47, "seek": 18516, "start": 191.04, "end": 197.4, "text": " So unless you want to reimplement all the parsing, the borrower checking and pretty much everything,", "tokens": [50658, 407, 5969, 291, 528, 281, 33433, 43704, 439, 264, 21156, 278, 11, 264, 14828, 81, 968, 8568, 293, 1238, 709, 1203, 11, 50976], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 48, "seek": 18516, "start": 197.4, "end": 204.76, "text": " well, better use what is already existing and ask them likely to make their API public", "tokens": [50976, 731, 11, 1101, 764, 437, 307, 1217, 6741, 293, 1029, 552, 411, 356, 281, 652, 641, 9362, 1908, 51344], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 49, "seek": 18516, "start": 204.76, "end": 206.8, "text": " so you can use them.", "tokens": [51344, 370, 291, 393, 764, 552, 13, 51446], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 50, "seek": 18516, "start": 206.8, "end": 214.07999999999998, "text": " And that's exactly how things went with Clippy and that's exactly how I went as well.", "tokens": [51446, 400, 300, 311, 2293, 577, 721, 1437, 365, 2033, 48363, 293, 300, 311, 2293, 577, 286, 1437, 382, 731, 13, 51810], "temperature": 0.0, "avg_logprob": -0.21183507129399462, "compression_ratio": 1.590717299578059, "no_speech_prob": 0.04302163049578667}, {"id": 51, "seek": 21408, "start": 214.08, "end": 216.68, "text": " So I mentioned a few limitations already.", "tokens": [50364, 407, 286, 2835, 257, 1326, 15705, 1217, 13, 50494], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 52, "seek": 21408, "start": 216.68, "end": 222.12, "text": " So it can only work on crates compiled with the same Rusty version.", "tokens": [50494, 407, 309, 393, 787, 589, 322, 941, 1024, 36548, 365, 264, 912, 34952, 88, 3037, 13, 50766], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 53, "seek": 21408, "start": 222.12, "end": 226.32000000000002, "text": " You don't see it with Clippy because it's tied with your compiler.", "tokens": [50766, 509, 500, 380, 536, 309, 365, 2033, 48363, 570, 309, 311, 9601, 365, 428, 31958, 13, 50976], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 54, "seek": 21408, "start": 226.32000000000002, "end": 229.8, "text": " When you un-style a Clippy, it's tied with your current compiler version.", "tokens": [50976, 1133, 291, 517, 12, 15014, 257, 2033, 48363, 11, 309, 311, 9601, 365, 428, 2190, 31958, 3037, 13, 51150], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 55, "seek": 21408, "start": 229.8, "end": 235.20000000000002, "text": " So it just works but it's something to keep in mind you will see later.", "tokens": [51150, 407, 309, 445, 1985, 457, 309, 311, 746, 281, 1066, 294, 1575, 291, 486, 536, 1780, 13, 51420], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 56, "seek": 21408, "start": 235.20000000000002, "end": 240.92000000000002, "text": " Like I mentioned, the Rusty API is not stable so very often you have to update your Linter", "tokens": [51420, 1743, 286, 2835, 11, 264, 34952, 88, 9362, 307, 406, 8351, 370, 588, 2049, 291, 362, 281, 5623, 428, 441, 5106, 51706], "temperature": 0.0, "avg_logprob": -0.1969792452725497, "compression_ratio": 1.699588477366255, "no_speech_prob": 0.048003338277339935}, {"id": 57, "seek": 24092, "start": 240.92, "end": 245.0, "text": " code to be able to keep up.", "tokens": [50364, 3089, 281, 312, 1075, 281, 1066, 493, 13, 50568], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 58, "seek": 24092, "start": 245.0, "end": 249.48, "text": " It's tied to a specific Rusty version and I'm not talking about a stable release but", "tokens": [50568, 467, 311, 9601, 281, 257, 2685, 34952, 88, 3037, 293, 286, 478, 406, 1417, 466, 257, 8351, 4374, 457, 50792], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 59, "seek": 24092, "start": 249.48, "end": 254.72, "text": " literally to commit version which is a bit annoying.", "tokens": [50792, 3736, 281, 5599, 3037, 597, 307, 257, 857, 11304, 13, 51054], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 60, "seek": 24092, "start": 254.72, "end": 260.12, "text": " And also because of everything, it's annoying to wrap in a cargo command because you need", "tokens": [51054, 400, 611, 570, 295, 1203, 11, 309, 311, 11304, 281, 7019, 294, 257, 19449, 5622, 570, 291, 643, 51324], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 61, "seek": 24092, "start": 260.12, "end": 262.28, "text": " to use a very specific Rusty version.", "tokens": [51324, 281, 764, 257, 588, 2685, 34952, 88, 3037, 13, 51432], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 62, "seek": 24092, "start": 262.28, "end": 266.56, "text": " Again, we'll come back to that later.", "tokens": [51432, 3764, 11, 321, 603, 808, 646, 281, 300, 1780, 13, 51646], "temperature": 0.0, "avg_logprob": -0.1538698456504128, "compression_ratio": 1.655, "no_speech_prob": 0.01804206520318985}, {"id": 63, "seek": 26656, "start": 266.56, "end": 271.52, "text": " So I will voluntarily don't mention all lint passes.", "tokens": [50364, 407, 286, 486, 41782, 500, 380, 2152, 439, 287, 686, 11335, 13, 50612], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 64, "seek": 26656, "start": 271.52, "end": 276.68, "text": " I will only speak of the two main ones, the early and the late passes.", "tokens": [50612, 286, 486, 787, 1710, 295, 264, 732, 2135, 2306, 11, 264, 2440, 293, 264, 3469, 11335, 13, 50870], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 65, "seek": 26656, "start": 276.68, "end": 279.68, "text": " The early passes give you access to AST.", "tokens": [50870, 440, 2440, 11335, 976, 291, 2105, 281, 316, 6840, 13, 51020], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 66, "seek": 26656, "start": 279.68, "end": 284.76, "text": " So you are able to see the syntax and the work a bit on it but you don't have type information", "tokens": [51020, 407, 291, 366, 1075, 281, 536, 264, 28431, 293, 264, 589, 257, 857, 322, 309, 457, 291, 500, 380, 362, 2010, 1589, 51274], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 67, "seek": 26656, "start": 284.76, "end": 285.76, "text": " or everything.", "tokens": [51274, 420, 1203, 13, 51324], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 68, "seek": 26656, "start": 285.76, "end": 290.08, "text": " You can only just know that this is a struct and its name is and it has generics but you", "tokens": [51324, 509, 393, 787, 445, 458, 300, 341, 307, 257, 6594, 293, 1080, 1315, 307, 293, 309, 575, 1337, 1167, 457, 291, 51540], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 69, "seek": 26656, "start": 290.08, "end": 292.4, "text": " don't know what traits it implements or anything.", "tokens": [51540, 500, 380, 458, 437, 19526, 309, 704, 17988, 420, 1340, 13, 51656], "temperature": 0.0, "avg_logprob": -0.19452999319349015, "compression_ratio": 1.7280334728033473, "no_speech_prob": 0.18057255446910858}, {"id": 70, "seek": 29240, "start": 292.4, "end": 298.88, "text": " You just have very basic information and you have the late pass which in this case goes", "tokens": [50364, 509, 445, 362, 588, 3875, 1589, 293, 291, 362, 264, 3469, 1320, 597, 294, 341, 1389, 1709, 50688], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 71, "seek": 29240, "start": 298.88, "end": 300.38, "text": " a lot further.", "tokens": [50688, 257, 688, 3052, 13, 50763], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 72, "seek": 29240, "start": 300.38, "end": 302.91999999999996, "text": " You have access to Borrowchecker information.", "tokens": [50763, 509, 362, 2105, 281, 363, 3162, 1876, 9178, 1589, 13, 50890], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 73, "seek": 29240, "start": 302.91999999999996, "end": 305.15999999999997, "text": " You have access to everything.", "tokens": [50890, 509, 362, 2105, 281, 1203, 13, 51002], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 74, "seek": 29240, "start": 305.15999999999997, "end": 308.32, "text": " What does this type is implementing?", "tokens": [51002, 708, 775, 341, 2010, 307, 18114, 30, 51160], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 75, "seek": 29240, "start": 308.32, "end": 309.64, "text": " Does it implement this trait?", "tokens": [51160, 4402, 309, 4445, 341, 22538, 30, 51226], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 76, "seek": 29240, "start": 309.64, "end": 312.08, "text": " What is its layout?", "tokens": [51226, 708, 307, 1080, 13333, 30, 51348], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 77, "seek": 29240, "start": 312.08, "end": 315.59999999999997, "text": " Everything.", "tokens": [51348, 5471, 13, 51524], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 78, "seek": 29240, "start": 315.59999999999997, "end": 322.03999999999996, "text": " So in this case, we will talk about how to write a linter but with Rusty tools.", "tokens": [51524, 407, 294, 341, 1389, 11, 321, 486, 751, 466, 577, 281, 2464, 257, 287, 5106, 457, 365, 34952, 88, 3873, 13, 51846], "temperature": 0.0, "avg_logprob": -0.24218421079674546, "compression_ratio": 1.6807511737089202, "no_speech_prob": 0.01857241988182068}, {"id": 79, "seek": 32204, "start": 322.04, "end": 328.8, "text": " The goal of this trait is to wrap the Rusty API into something easier to set up because", "tokens": [50364, 440, 3387, 295, 341, 22538, 307, 281, 7019, 264, 34952, 88, 9362, 666, 746, 3571, 281, 992, 493, 570, 50702], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 80, "seek": 32204, "start": 328.8, "end": 332.32, "text": " there is a lot of things to set up.", "tokens": [50702, 456, 307, 257, 688, 295, 721, 281, 992, 493, 13, 50878], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 81, "seek": 32204, "start": 332.32, "end": 335.44, "text": " And to add it, it's just that.", "tokens": [50878, 400, 281, 909, 309, 11, 309, 311, 445, 300, 13, 51034], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 82, "seek": 32204, "start": 335.44, "end": 338.08000000000004, "text": " Like you would add any other trait.", "tokens": [51034, 1743, 291, 576, 909, 604, 661, 22538, 13, 51166], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 83, "seek": 32204, "start": 338.08000000000004, "end": 344.40000000000003, "text": " For now, the version 0.3 later on it will be updated.", "tokens": [51166, 1171, 586, 11, 264, 3037, 1958, 13, 18, 1780, 322, 309, 486, 312, 10588, 13, 51482], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 84, "seek": 32204, "start": 344.40000000000003, "end": 347.12, "text": " And now we start to enter into the fun.", "tokens": [51482, 400, 586, 321, 722, 281, 3242, 666, 264, 1019, 13, 51618], "temperature": 0.0, "avg_logprob": -0.22987886916759404, "compression_ratio": 1.471502590673575, "no_speech_prob": 0.06211430951952934}, {"id": 85, "seek": 34712, "start": 347.12, "end": 354.88, "text": " So actually to make it work, you need to add this little line in your Kaggle file to tell", "tokens": [50364, 407, 767, 281, 652, 309, 589, 11, 291, 643, 281, 909, 341, 707, 1622, 294, 428, 48751, 22631, 3991, 281, 980, 50752], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 86, "seek": 34712, "start": 354.88, "end": 358.24, "text": " okay it's a trait but not any trait.", "tokens": [50752, 1392, 309, 311, 257, 22538, 457, 406, 604, 22538, 13, 50920], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 87, "seek": 34712, "start": 358.24, "end": 359.68, "text": " It's a Rusty trait.", "tokens": [50920, 467, 311, 257, 34952, 88, 22538, 13, 50992], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 88, "seek": 34712, "start": 359.68, "end": 363.36, "text": " So you need to do some very funny things.", "tokens": [50992, 407, 291, 643, 281, 360, 512, 588, 4074, 721, 13, 51176], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 89, "seek": 34712, "start": 363.36, "end": 371.12, "text": " And we'll come back to this one but it's some things that you thought were something that", "tokens": [51176, 400, 321, 603, 808, 646, 281, 341, 472, 457, 309, 311, 512, 721, 300, 291, 1194, 645, 746, 300, 51564], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 90, "seek": 34712, "start": 371.12, "end": 376.96, "text": " we had for years like having to write an extant trait to import a trait.", "tokens": [51564, 321, 632, 337, 924, 411, 1419, 281, 2464, 364, 1279, 394, 22538, 281, 974, 257, 22538, 13, 51856], "temperature": 0.0, "avg_logprob": -0.2640696739663883, "compression_ratio": 1.6556603773584906, "no_speech_prob": 0.045164793729782104}, {"id": 91, "seek": 37696, "start": 376.96, "end": 381.91999999999996, "text": " As back you actually need to import a trait from the compiler with extant trait.", "tokens": [50364, 1018, 646, 291, 767, 643, 281, 974, 257, 22538, 490, 264, 31958, 365, 1279, 394, 22538, 13, 50612], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 92, "seek": 37696, "start": 381.91999999999996, "end": 383.23999999999995, "text": " Otherwise it doesn't work.", "tokens": [50612, 10328, 309, 1177, 380, 589, 13, 50678], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 93, "seek": 37696, "start": 383.23999999999995, "end": 385.2, "text": " It's not provided by default.", "tokens": [50678, 467, 311, 406, 5649, 538, 7576, 13, 50776], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 94, "seek": 37696, "start": 385.2, "end": 389.71999999999997, "text": " The other thing is we need to create a Rust toolchain file.", "tokens": [50776, 440, 661, 551, 307, 321, 643, 281, 1884, 257, 34952, 2290, 11509, 3991, 13, 51002], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 95, "seek": 37696, "start": 389.71999999999997, "end": 391.68, "text": " It's literally its name.", "tokens": [51002, 467, 311, 3736, 1080, 1315, 13, 51100], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 96, "seek": 37696, "start": 391.68, "end": 398.44, "text": " If you never use it, if you have a Rust toolchain file in your folder, cargo will only use the", "tokens": [51100, 759, 291, 1128, 764, 309, 11, 498, 291, 362, 257, 34952, 2290, 11509, 3991, 294, 428, 10820, 11, 19449, 486, 787, 764, 264, 51438], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 97, "seek": 37696, "start": 398.44, "end": 402.35999999999996, "text": " version provided inside this file.", "tokens": [51438, 3037, 5649, 1854, 341, 3991, 13, 51634], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 98, "seek": 37696, "start": 402.35999999999996, "end": 406.08, "text": " So in this case, the version of the compiler we're using.", "tokens": [51634, 407, 294, 341, 1389, 11, 264, 3037, 295, 264, 31958, 321, 434, 1228, 13, 51820], "temperature": 0.0, "avg_logprob": -0.20149942346521327, "compression_ratio": 1.715481171548117, "no_speech_prob": 0.010049468837678432}, {"id": 99, "seek": 40608, "start": 406.08, "end": 409.15999999999997, "text": " This is all in the documentation of Rusty tools.", "tokens": [50364, 639, 307, 439, 294, 264, 14333, 295, 34952, 88, 3873, 13, 50518], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 100, "seek": 40608, "start": 409.15999999999997, "end": 414.4, "text": " Basically you just need to copy and paste the file into your local file.", "tokens": [50518, 8537, 291, 445, 643, 281, 5055, 293, 9163, 264, 3991, 666, 428, 2654, 3991, 13, 50780], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 101, "seek": 40608, "start": 414.4, "end": 419.84, "text": " So in here we say that as components we want the Rusty div which means the traits from", "tokens": [50780, 407, 294, 510, 321, 584, 300, 382, 6677, 321, 528, 264, 34952, 88, 3414, 597, 1355, 264, 19526, 490, 51052], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 102, "seek": 40608, "start": 419.84, "end": 421.03999999999996, "text": " the compiler.", "tokens": [51052, 264, 31958, 13, 51112], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 103, "seek": 40608, "start": 421.03999999999996, "end": 423.47999999999996, "text": " We want Rust FMT because we are not savages.", "tokens": [51112, 492, 528, 34952, 29614, 51, 570, 321, 366, 406, 11163, 1660, 13, 51234], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 104, "seek": 40608, "start": 423.47999999999996, "end": 426.32, "text": " We want to actually format our code.", "tokens": [51234, 492, 528, 281, 767, 7877, 527, 3089, 13, 51376], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 105, "seek": 40608, "start": 426.32, "end": 430.0, "text": " And the LLVM tool, the preview is to be able to actually compile.", "tokens": [51376, 400, 264, 441, 43, 53, 44, 2290, 11, 264, 14281, 307, 281, 312, 1075, 281, 767, 31413, 13, 51560], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 106, "seek": 40608, "start": 430.0, "end": 435.91999999999996, "text": " Otherwise you don't have a backend which is also problematic.", "tokens": [51560, 10328, 291, 500, 380, 362, 257, 38087, 597, 307, 611, 19011, 13, 51856], "temperature": 0.0, "avg_logprob": -0.23593057435134362, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.012679651379585266}, {"id": 107, "seek": 43592, "start": 435.92, "end": 438.88, "text": " And now let's get into the code.", "tokens": [50364, 400, 586, 718, 311, 483, 666, 264, 3089, 13, 50512], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 108, "seek": 43592, "start": 438.88, "end": 443.88, "text": " To declare a lint it's mostly macro.", "tokens": [50512, 1407, 19710, 257, 287, 686, 309, 311, 5240, 18887, 13, 50762], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 109, "seek": 43592, "start": 443.88, "end": 447.56, "text": " As you can see on top we use internal Rusty traits.", "tokens": [50762, 1018, 291, 393, 536, 322, 1192, 321, 764, 6920, 34952, 88, 19526, 13, 50946], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 110, "seek": 43592, "start": 447.56, "end": 449.48, "text": " So lint and session.", "tokens": [50946, 407, 287, 686, 293, 5481, 13, 51042], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 111, "seek": 43592, "start": 449.48, "end": 454.48, "text": " Lint provides some types linked to handling lints.", "tokens": [51042, 441, 686, 6417, 512, 3467, 9408, 281, 13175, 287, 8654, 13, 51292], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 112, "seek": 43592, "start": 454.48, "end": 459.32, "text": " And session allows us to give information to the Rust compiler about things we want it", "tokens": [51292, 400, 5481, 4045, 505, 281, 976, 1589, 281, 264, 34952, 31958, 466, 721, 321, 528, 309, 51534], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 113, "seek": 43592, "start": 459.32, "end": 460.48, "text": " to run.", "tokens": [51534, 281, 1190, 13, 51592], "temperature": 0.0, "avg_logprob": -0.23966662089029947, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005544661078602076}, {"id": 114, "seek": 46048, "start": 460.48, "end": 471.04, "text": " So in here we create with the declare tool lint macro a lint called warn generics.", "tokens": [50364, 407, 294, 510, 321, 1884, 365, 264, 19710, 2290, 287, 686, 18887, 257, 287, 686, 1219, 12286, 1337, 1167, 13, 50892], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 115, "seek": 46048, "start": 471.04, "end": 472.04, "text": " In MAG.", "tokens": [50892, 682, 12191, 38, 13, 50942], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 116, "seek": 46048, "start": 472.04, "end": 473.04, "text": " In capital letters.", "tokens": [50942, 682, 4238, 7825, 13, 50992], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 117, "seek": 46048, "start": 473.04, "end": 475.52000000000004, "text": " I can't do that.", "tokens": [50992, 286, 393, 380, 360, 300, 13, 51116], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 118, "seek": 46048, "start": 475.52000000000004, "end": 477.20000000000005, "text": " It's warn by default.", "tokens": [51116, 467, 311, 12286, 538, 7576, 13, 51200], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 119, "seek": 46048, "start": 477.20000000000005, "end": 482.88, "text": " And we add a message when it will, in case you want information about it, it says warns", "tokens": [51200, 400, 321, 909, 257, 3636, 562, 309, 486, 11, 294, 1389, 291, 528, 1589, 466, 309, 11, 309, 1619, 12286, 82, 51484], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 120, "seek": 46048, "start": 482.88, "end": 486.40000000000003, "text": " if any item has generics.", "tokens": [51484, 498, 604, 3174, 575, 1337, 1167, 13, 51660], "temperature": 0.0, "avg_logprob": -0.3334175972711472, "compression_ratio": 1.4692737430167597, "no_speech_prob": 0.005719819106161594}, {"id": 121, "seek": 48640, "start": 486.4, "end": 490.56, "text": " It's an early lint pass.", "tokens": [50364, 467, 311, 364, 2440, 287, 686, 1320, 13, 50572], "temperature": 0.0, "avg_logprob": -0.20969224277930923, "compression_ratio": 1.480952380952381, "no_speech_prob": 0.015162652358412743}, {"id": 122, "seek": 48640, "start": 490.56, "end": 495.23999999999995, "text": " So it means we only have access to the AST information.", "tokens": [50572, 407, 309, 1355, 321, 787, 362, 2105, 281, 264, 316, 6840, 1589, 13, 50806], "temperature": 0.0, "avg_logprob": -0.20969224277930923, "compression_ratio": 1.480952380952381, "no_speech_prob": 0.015162652358412743}, {"id": 123, "seek": 48640, "start": 495.23999999999995, "end": 500.28, "text": " I voluntarily picked this one because to be honest the code is much, much shorter and", "tokens": [50806, 286, 41782, 6183, 341, 472, 570, 281, 312, 3245, 264, 3089, 307, 709, 11, 709, 11639, 293, 51058], "temperature": 0.0, "avg_logprob": -0.20969224277930923, "compression_ratio": 1.480952380952381, "no_speech_prob": 0.015162652358412743}, {"id": 124, "seek": 48640, "start": 500.28, "end": 504.79999999999995, "text": " simpler and for 15 minute talks it will be better.", "tokens": [51058, 18587, 293, 337, 2119, 3456, 6686, 309, 486, 312, 1101, 13, 51284], "temperature": 0.0, "avg_logprob": -0.20969224277930923, "compression_ratio": 1.480952380952381, "no_speech_prob": 0.015162652358412743}, {"id": 125, "seek": 48640, "start": 504.79999999999995, "end": 512.1999999999999, "text": " The other thing we need to do is to implement some very basic traits provided by the compiler", "tokens": [51284, 440, 661, 551, 321, 643, 281, 360, 307, 281, 4445, 512, 588, 3875, 19526, 5649, 538, 264, 31958, 51654], "temperature": 0.0, "avg_logprob": -0.20969224277930923, "compression_ratio": 1.480952380952381, "no_speech_prob": 0.015162652358412743}, {"id": 126, "seek": 51220, "start": 512.2, "end": 513.84, "text": " which we don't need to care about.", "tokens": [50364, 597, 321, 500, 380, 643, 281, 1127, 466, 13, 50446], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 127, "seek": 51220, "start": 513.84, "end": 515.4000000000001, "text": " So they provide a macro for that.", "tokens": [50446, 407, 436, 2893, 257, 18887, 337, 300, 13, 50524], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 128, "seek": 51220, "start": 515.4000000000001, "end": 522.6400000000001, "text": " So declare lint pass which is in our case allowing you to declare a structure called", "tokens": [50524, 407, 19710, 287, 686, 1320, 597, 307, 294, 527, 1389, 8293, 291, 281, 19710, 257, 3877, 1219, 50886], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 129, "seek": 51220, "start": 522.6400000000001, "end": 524.24, "text": " warn generics.", "tokens": [50886, 12286, 1337, 1167, 13, 50966], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 130, "seek": 51220, "start": 524.24, "end": 528.0400000000001, "text": " And we link it to the warn generics lint.", "tokens": [50966, 400, 321, 2113, 309, 281, 264, 12286, 1337, 1167, 287, 686, 13, 51156], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 131, "seek": 51220, "start": 528.0400000000001, "end": 534.44, "text": " And after that at the end we have the very empty implementation of the early lint pass", "tokens": [51156, 400, 934, 300, 412, 264, 917, 321, 362, 264, 588, 6707, 11420, 295, 264, 2440, 287, 686, 1320, 51476], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 132, "seek": 51220, "start": 534.44, "end": 537.6800000000001, "text": " trait for our type.", "tokens": [51476, 22538, 337, 527, 2010, 13, 51638], "temperature": 0.0, "avg_logprob": -0.23332047194577335, "compression_ratio": 1.6424870466321244, "no_speech_prob": 0.016995016485452652}, {"id": 133, "seek": 53768, "start": 537.68, "end": 546.12, "text": " This visitor trait, if some don't know the visitor, how to say, pattern, visitor pattern,", "tokens": [50364, 639, 28222, 22538, 11, 498, 512, 500, 380, 458, 264, 28222, 11, 577, 281, 584, 11, 5102, 11, 28222, 5102, 11, 50786], "temperature": 0.0, "avg_logprob": -0.2755532491774786, "compression_ratio": 1.7486910994764397, "no_speech_prob": 0.17179352045059204}, {"id": 134, "seek": 53768, "start": 546.12, "end": 548.76, "text": " let's say.", "tokens": [50786, 718, 311, 584, 13, 50918], "temperature": 0.0, "avg_logprob": -0.2755532491774786, "compression_ratio": 1.7486910994764397, "no_speech_prob": 0.17179352045059204}, {"id": 135, "seek": 53768, "start": 548.76, "end": 555.04, "text": " The visitor pattern allows you to have access to, literally, you implement whatever you", "tokens": [50918, 440, 28222, 5102, 4045, 291, 281, 362, 2105, 281, 11, 3736, 11, 291, 4445, 2035, 291, 51232], "temperature": 0.0, "avg_logprob": -0.2755532491774786, "compression_ratio": 1.7486910994764397, "no_speech_prob": 0.17179352045059204}, {"id": 136, "seek": 53768, "start": 555.04, "end": 559.3599999999999, "text": " need to have and then, for example, visit function.", "tokens": [51232, 643, 281, 362, 293, 550, 11, 337, 1365, 11, 3441, 2445, 13, 51448], "temperature": 0.0, "avg_logprob": -0.2755532491774786, "compression_ratio": 1.7486910994764397, "no_speech_prob": 0.17179352045059204}, {"id": 137, "seek": 53768, "start": 559.3599999999999, "end": 564.76, "text": " Whenever the visitor will encounter a function, it will call this method and it will be ours.", "tokens": [51448, 14159, 264, 28222, 486, 8593, 257, 2445, 11, 309, 486, 818, 341, 3170, 293, 309, 486, 312, 11896, 13, 51718], "temperature": 0.0, "avg_logprob": -0.2755532491774786, "compression_ratio": 1.7486910994764397, "no_speech_prob": 0.17179352045059204}, {"id": 138, "seek": 56476, "start": 564.84, "end": 567.3199999999999, "text": " If we don't care about the rest, they are already implemented.", "tokens": [50368, 759, 321, 500, 380, 1127, 466, 264, 1472, 11, 436, 366, 1217, 12270, 13, 50492], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 139, "seek": 56476, "start": 567.3199999999999, "end": 568.64, "text": " We don't need to care about them.", "tokens": [50492, 492, 500, 380, 643, 281, 1127, 466, 552, 13, 50558], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 140, "seek": 56476, "start": 568.64, "end": 569.64, "text": " So very convenient.", "tokens": [50558, 407, 588, 10851, 13, 50608], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 141, "seek": 56476, "start": 569.64, "end": 575.24, "text": " In our case, we only want items that could have generics, so very likely functions and", "tokens": [50608, 682, 527, 1389, 11, 321, 787, 528, 4754, 300, 727, 362, 1337, 1167, 11, 370, 588, 3700, 6828, 293, 50888], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 142, "seek": 56476, "start": 575.24, "end": 577.2, "text": " n-us and everything like that.", "tokens": [50888, 297, 12, 301, 293, 1203, 411, 300, 13, 50986], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 143, "seek": 56476, "start": 577.2, "end": 582.52, "text": " So it will be pretty easy normally.", "tokens": [50986, 407, 309, 486, 312, 1238, 1858, 5646, 13, 51252], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 144, "seek": 56476, "start": 582.52, "end": 584.56, "text": " So now we implement the lint.", "tokens": [51252, 407, 586, 321, 4445, 264, 287, 686, 13, 51354], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 145, "seek": 56476, "start": 584.56, "end": 587.4399999999999, "text": " So as I was saying, check item.", "tokens": [51354, 407, 382, 286, 390, 1566, 11, 1520, 3174, 13, 51498], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 146, "seek": 56476, "start": 587.4399999999999, "end": 589.36, "text": " We don't have anything else to do.", "tokens": [51498, 492, 500, 380, 362, 1340, 1646, 281, 360, 13, 51594], "temperature": 0.0, "avg_logprob": -0.22868054001419633, "compression_ratio": 1.6757990867579908, "no_speech_prob": 0.011690378189086914}, {"id": 147, "seek": 58936, "start": 589.36, "end": 595.44, "text": " It provides a context, the context of the compiler at this stage, an early context, and", "tokens": [50364, 467, 6417, 257, 4319, 11, 264, 4319, 295, 264, 31958, 412, 341, 3233, 11, 364, 2440, 4319, 11, 293, 50668], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 148, "seek": 58936, "start": 595.44, "end": 598.52, "text": " we have the actual item.", "tokens": [50668, 321, 362, 264, 3539, 3174, 13, 50822], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 149, "seek": 58936, "start": 598.52, "end": 600.2, "text": " And then it's pretty simple.", "tokens": [50822, 400, 550, 309, 311, 1238, 2199, 13, 50906], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 150, "seek": 58936, "start": 600.2, "end": 603.72, "text": " We have methods provided by the compiler and everything.", "tokens": [50906, 492, 362, 7150, 5649, 538, 264, 31958, 293, 1203, 13, 51082], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 151, "seek": 58936, "start": 603.72, "end": 610.28, "text": " So we check if our, I hope everyone knows the syntax of first, but we check that we", "tokens": [51082, 407, 321, 1520, 498, 527, 11, 286, 1454, 1518, 3255, 264, 28431, 295, 700, 11, 457, 321, 1520, 300, 321, 51410], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 152, "seek": 58936, "start": 610.28, "end": 611.78, "text": " have generics.", "tokens": [51410, 362, 1337, 1167, 13, 51485], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 153, "seek": 58936, "start": 611.78, "end": 613.76, "text": " We check that with some generics.", "tokens": [51485, 492, 1520, 300, 365, 512, 1337, 1167, 13, 51584], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 154, "seek": 58936, "start": 613.76, "end": 619.28, "text": " We check that the generics are not empty because otherwise there is no point.", "tokens": [51584, 492, 1520, 300, 264, 1337, 1167, 366, 406, 6707, 570, 5911, 456, 307, 572, 935, 13, 51860], "temperature": 0.0, "avg_logprob": -0.16769774754842123, "compression_ratio": 1.8177777777777777, "no_speech_prob": 0.0030617667362093925}, {"id": 155, "seek": 61928, "start": 620.04, "end": 625.56, "text": " If we have generics and everything, then we will say, okay, we found generics.", "tokens": [50402, 759, 321, 362, 1337, 1167, 293, 1203, 11, 550, 321, 486, 584, 11, 1392, 11, 321, 1352, 1337, 1167, 13, 50678], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 156, "seek": 61928, "start": 625.56, "end": 632.1999999999999, "text": " We don't want generics because, because, and let's then emit our lint.", "tokens": [50678, 492, 500, 380, 528, 1337, 1167, 570, 11, 570, 11, 293, 718, 311, 550, 32084, 527, 287, 686, 13, 51010], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 157, "seek": 61928, "start": 632.1999999999999, "end": 634.16, "text": " So first, the lint name.", "tokens": [51010, 407, 700, 11, 264, 287, 686, 1315, 13, 51108], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 158, "seek": 61928, "start": 634.16, "end": 635.52, "text": " Second, the span.", "tokens": [51108, 5736, 11, 264, 16174, 13, 51176], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 159, "seek": 61928, "start": 635.52, "end": 643.36, "text": " The span is how the rest compiler map your size to your actual source code.", "tokens": [51176, 440, 16174, 307, 577, 264, 1472, 31958, 4471, 428, 2744, 281, 428, 3539, 4009, 3089, 13, 51568], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 160, "seek": 61928, "start": 643.36, "end": 646.9599999999999, "text": " It's basically to your size beginning and an end.", "tokens": [51568, 467, 311, 1936, 281, 428, 2744, 2863, 293, 364, 917, 13, 51748], "temperature": 0.0, "avg_logprob": -0.24823816360965853, "compression_ratio": 1.614213197969543, "no_speech_prob": 0.0017782470677047968}, {"id": 161, "seek": 64696, "start": 646.96, "end": 649.64, "text": " And you don't have to care about what it's pointing to.", "tokens": [50364, 400, 291, 500, 380, 362, 281, 1127, 466, 437, 309, 311, 12166, 281, 13, 50498], "temperature": 0.0, "avg_logprob": -0.19488375114672113, "compression_ratio": 1.6775700934579438, "no_speech_prob": 0.017130756750702858}, {"id": 162, "seek": 64696, "start": 649.64, "end": 656.08, "text": " You just say, okay, the type I want to lint about is starting here, ending here.", "tokens": [50498, 509, 445, 584, 11, 1392, 11, 264, 2010, 286, 528, 281, 287, 686, 466, 307, 2891, 510, 11, 8121, 510, 13, 50820], "temperature": 0.0, "avg_logprob": -0.19488375114672113, "compression_ratio": 1.6775700934579438, "no_speech_prob": 0.017130756750702858}, {"id": 163, "seek": 64696, "start": 656.08, "end": 660.4000000000001, "text": " You underline you do whatever you do and I don't care.", "tokens": [50820, 509, 833, 1889, 291, 360, 2035, 291, 360, 293, 286, 500, 380, 1127, 13, 51036], "temperature": 0.0, "avg_logprob": -0.19488375114672113, "compression_ratio": 1.6775700934579438, "no_speech_prob": 0.017130756750702858}, {"id": 164, "seek": 64696, "start": 660.4000000000001, "end": 666.44, "text": " And we have our message saying, no generics here because we don't want generics.", "tokens": [51036, 400, 321, 362, 527, 3636, 1566, 11, 572, 1337, 1167, 510, 570, 321, 500, 380, 528, 1337, 1167, 13, 51338], "temperature": 0.0, "avg_logprob": -0.19488375114672113, "compression_ratio": 1.6775700934579438, "no_speech_prob": 0.017130756750702858}, {"id": 165, "seek": 64696, "start": 666.44, "end": 671.2800000000001, "text": " And the last thing is in case you wanted to add more information, like for example, we", "tokens": [51338, 400, 264, 1036, 551, 307, 294, 1389, 291, 1415, 281, 909, 544, 1589, 11, 411, 337, 1365, 11, 321, 51580], "temperature": 0.0, "avg_logprob": -0.19488375114672113, "compression_ratio": 1.6775700934579438, "no_speech_prob": 0.017130756750702858}, {"id": 166, "seek": 67128, "start": 671.28, "end": 678.4399999999999, "text": " could say, the help and we could add a help message and we can do that a lot more.", "tokens": [50364, 727, 584, 11, 264, 854, 293, 321, 727, 909, 257, 854, 3636, 293, 321, 393, 360, 300, 257, 688, 544, 13, 50722], "temperature": 0.0, "avg_logprob": -0.2824164056158685, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.006902792491018772}, {"id": 167, "seek": 67128, "start": 678.4399999999999, "end": 685.52, "text": " In case some of you don't know what it is, the syntax with the straight bar is a closure.", "tokens": [50722, 682, 1389, 512, 295, 291, 500, 380, 458, 437, 309, 307, 11, 264, 28431, 365, 264, 2997, 2159, 307, 257, 24653, 13, 51076], "temperature": 0.0, "avg_logprob": -0.2824164056158685, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.006902792491018772}, {"id": 168, "seek": 67128, "start": 685.52, "end": 688.56, "text": " So a closure taking a diagnostic type argument.", "tokens": [51076, 407, 257, 24653, 1940, 257, 27897, 2010, 6770, 13, 51228], "temperature": 0.0, "avg_logprob": -0.2824164056158685, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.006902792491018772}, {"id": 169, "seek": 67128, "start": 688.56, "end": 697.0, "text": " Now, the interesting part is now how can we run this lint?", "tokens": [51228, 823, 11, 264, 1880, 644, 307, 586, 577, 393, 321, 1190, 341, 287, 686, 30, 51650], "temperature": 0.0, "avg_logprob": -0.2824164056158685, "compression_ratio": 1.532967032967033, "no_speech_prob": 0.006902792491018772}, {"id": 170, "seek": 69700, "start": 697.0, "end": 702.36, "text": " And as you can see, not much code because RustyTools is doing pretty much everything.", "tokens": [50364, 400, 382, 291, 393, 536, 11, 406, 709, 3089, 570, 34952, 88, 51, 29298, 307, 884, 1238, 709, 1203, 13, 50632], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 171, "seek": 69700, "start": 702.36, "end": 706.0, "text": " So first, we get the cargo args because it's a cargo command.", "tokens": [50632, 407, 700, 11, 321, 483, 264, 19449, 3882, 82, 570, 309, 311, 257, 19449, 5622, 13, 50814], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 172, "seek": 69700, "start": 706.0, "end": 708.72, "text": " We will run the cargo tools.", "tokens": [50814, 492, 486, 1190, 264, 19449, 3873, 13, 50950], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 173, "seek": 69700, "start": 708.72, "end": 713.04, "text": " We don't want the two first arguments because cargo and tools are not something that we", "tokens": [50950, 492, 500, 380, 528, 264, 732, 700, 12869, 570, 19449, 293, 3873, 366, 406, 746, 300, 321, 51166], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 174, "seek": 69700, "start": 713.04, "end": 715.24, "text": " are interested into.", "tokens": [51166, 366, 3102, 666, 13, 51276], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 175, "seek": 69700, "start": 715.24, "end": 722.48, "text": " We pass the rest of the arguments, if any, into the RustyTools cargo integration command,", "tokens": [51276, 492, 1320, 264, 1472, 295, 264, 12869, 11, 498, 604, 11, 666, 264, 34952, 88, 51, 29298, 19449, 10980, 5622, 11, 51638], "temperature": 0.0, "avg_logprob": -0.18069484980419429, "compression_ratio": 1.7857142857142858, "no_speech_prob": 0.39906781911849976}, {"id": 176, "seek": 72248, "start": 722.48, "end": 730.08, "text": " which we internally call cargo, build everything with its own version because it's not necessarily", "tokens": [50364, 597, 321, 19501, 818, 19449, 11, 1322, 1203, 365, 1080, 1065, 3037, 570, 309, 311, 406, 4725, 50744], "temperature": 0.0, "avg_logprob": -0.22266257436651932, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.07623367756605148}, {"id": 177, "seek": 72248, "start": 730.08, "end": 731.5600000000001, "text": " the case.", "tokens": [50744, 264, 1389, 13, 50818], "temperature": 0.0, "avg_logprob": -0.22266257436651932, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.07623367756605148}, {"id": 178, "seek": 72248, "start": 731.5600000000001, "end": 736.84, "text": " And once everything is built, it will generate the command line that you actually need to", "tokens": [50818, 400, 1564, 1203, 307, 3094, 11, 309, 486, 8460, 264, 5622, 1622, 300, 291, 767, 643, 281, 51082], "temperature": 0.0, "avg_logprob": -0.22266257436651932, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.07623367756605148}, {"id": 179, "seek": 72248, "start": 736.84, "end": 744.24, "text": " pass the Rusty compiler to be able to run our linter, which we do with WistLint.", "tokens": [51082, 1320, 264, 34952, 88, 31958, 281, 312, 1075, 281, 1190, 527, 287, 686, 260, 11, 597, 321, 360, 365, 343, 468, 43, 686, 13, 51452], "temperature": 0.0, "avg_logprob": -0.22266257436651932, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.07623367756605148}, {"id": 180, "seek": 72248, "start": 744.24, "end": 752.46, "text": " So this time, args is what cargo provided us so we can now generate and run our lint.", "tokens": [51452, 407, 341, 565, 11, 3882, 82, 307, 437, 19449, 5649, 505, 370, 321, 393, 586, 8460, 293, 1190, 527, 287, 686, 13, 51863], "temperature": 0.0, "avg_logprob": -0.22266257436651932, "compression_ratio": 1.6367713004484306, "no_speech_prob": 0.07623367756605148}, {"id": 181, "seek": 75246, "start": 752.46, "end": 756.98, "text": " So we just give it access because it's already done by RustyTools.", "tokens": [50364, 407, 321, 445, 976, 309, 2105, 570, 309, 311, 1217, 1096, 538, 34952, 88, 51, 29298, 13, 50590], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 182, "seek": 75246, "start": 756.98, "end": 764.74, "text": " And inside this WistLint, we need to actually say to the compiler, OK, I created a lint.", "tokens": [50590, 400, 1854, 341, 343, 468, 43, 686, 11, 321, 643, 281, 767, 584, 281, 264, 31958, 11, 2264, 11, 286, 2942, 257, 287, 686, 13, 50978], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 183, "seek": 75246, "start": 764.74, "end": 766.14, "text": " It's called not an void call.", "tokens": [50978, 467, 311, 1219, 406, 364, 22009, 818, 13, 51048], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 184, "seek": 75246, "start": 766.14, "end": 767.14, "text": " I did badly.", "tokens": [51048, 286, 630, 13425, 13, 51098], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 185, "seek": 75246, "start": 767.14, "end": 769.7800000000001, "text": " It's a one generics.", "tokens": [51098, 467, 311, 257, 472, 1337, 1167, 13, 51230], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 186, "seek": 75246, "start": 769.7800000000001, "end": 771.46, "text": " And that's it.", "tokens": [51230, 400, 300, 311, 309, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 187, "seek": 75246, "start": 771.46, "end": 772.46, "text": " We have everything.", "tokens": [51314, 492, 362, 1203, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 188, "seek": 75246, "start": 772.46, "end": 773.46, "text": " We can now live.", "tokens": [51364, 492, 393, 586, 1621, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 189, "seek": 75246, "start": 773.46, "end": 779.82, "text": " And the compiler will do everything when living as a WistLint function.", "tokens": [51414, 400, 264, 31958, 486, 360, 1203, 562, 2647, 382, 257, 343, 468, 43, 686, 2445, 13, 51732], "temperature": 0.0, "avg_logprob": -0.1957264805699254, "compression_ratio": 1.587962962962963, "no_speech_prob": 0.006660351995378733}, {"id": 190, "seek": 77982, "start": 779.82, "end": 783.4200000000001, "text": " So now it's always nicer to be able to run a cargo tool.", "tokens": [50364, 407, 586, 309, 311, 1009, 22842, 281, 312, 1075, 281, 1190, 257, 19449, 2290, 13, 50544], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 191, "seek": 77982, "start": 783.4200000000001, "end": 790.1400000000001, "text": " So you just run a cargo install dash dash pass if it's local, otherwise not.", "tokens": [50544, 407, 291, 445, 1190, 257, 19449, 3625, 8240, 8240, 1320, 498, 309, 311, 2654, 11, 5911, 406, 13, 50880], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 192, "seek": 77982, "start": 790.1400000000001, "end": 792.82, "text": " And I named it in this case tools inner.", "tokens": [50880, 400, 286, 4926, 309, 294, 341, 1389, 3873, 7284, 13, 51014], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 193, "seek": 77982, "start": 792.82, "end": 795.34, "text": " You will understand why later.", "tokens": [51014, 509, 486, 1223, 983, 1780, 13, 51140], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 194, "seek": 77982, "start": 795.34, "end": 797.6600000000001, "text": " So we just run it.", "tokens": [51140, 407, 321, 445, 1190, 309, 13, 51256], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 195, "seek": 77982, "start": 797.6600000000001, "end": 806.1, "text": " And it doesn't work because we are not using the same version of the compiler.", "tokens": [51256, 400, 309, 1177, 380, 589, 570, 321, 366, 406, 1228, 264, 912, 3037, 295, 264, 31958, 13, 51678], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 196, "seek": 77982, "start": 806.1, "end": 807.4200000000001, "text": " Congrats.", "tokens": [51678, 40219, 13, 51744], "temperature": 0.0, "avg_logprob": -0.27542572021484374, "compression_ratio": 1.541871921182266, "no_speech_prob": 0.003615451045334339}, {"id": 197, "seek": 80742, "start": 807.42, "end": 813.78, "text": " So in this case, what's important to note is that you actually very much need to use", "tokens": [50364, 407, 294, 341, 1389, 11, 437, 311, 1021, 281, 3637, 307, 300, 291, 767, 588, 709, 643, 281, 764, 50682], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 198, "seek": 80742, "start": 813.78, "end": 820.18, "text": " the same version of metadata as the files generated by the compiler to be able to use", "tokens": [50682, 264, 912, 3037, 295, 26603, 382, 264, 7098, 10833, 538, 264, 31958, 281, 312, 1075, 281, 764, 51002], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 199, "seek": 80742, "start": 820.18, "end": 821.78, "text": " them with the lint.", "tokens": [51002, 552, 365, 264, 287, 686, 13, 51082], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 200, "seek": 80742, "start": 821.78, "end": 825.5799999999999, "text": " Rusty doesn't understand itself if it's not exactly the same.", "tokens": [51082, 34952, 88, 1177, 380, 1223, 2564, 498, 309, 311, 406, 2293, 264, 912, 13, 51272], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 201, "seek": 80742, "start": 825.5799999999999, "end": 828.78, "text": " Like if it's just a commit difference, no, I don't know him.", "tokens": [51272, 1743, 498, 309, 311, 445, 257, 5599, 2649, 11, 572, 11, 286, 500, 380, 458, 796, 13, 51432], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 202, "seek": 80742, "start": 828.78, "end": 829.78, "text": " Don't care.", "tokens": [51432, 1468, 380, 1127, 13, 51482], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 203, "seek": 80742, "start": 829.78, "end": 832.5, "text": " No problem.", "tokens": [51482, 883, 1154, 13, 51618], "temperature": 0.0, "avg_logprob": -0.19103320439656576, "compression_ratio": 1.5318181818181817, "no_speech_prob": 0.0061017610132694244}, {"id": 204, "seek": 83250, "start": 832.5, "end": 838.7, "text": " So now we can actually go around this limitation by providing the version like this.", "tokens": [50364, 407, 586, 321, 393, 767, 352, 926, 341, 27432, 538, 6530, 264, 3037, 411, 341, 13, 50674], "temperature": 0.0, "avg_logprob": -0.17396277885932426, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.017064036801457405}, {"id": 205, "seek": 83250, "start": 838.7, "end": 843.14, "text": " So if we do, I thought I had an error output.", "tokens": [50674, 407, 498, 321, 360, 11, 286, 1194, 286, 632, 364, 6713, 5598, 13, 50896], "temperature": 0.0, "avg_logprob": -0.17396277885932426, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.017064036801457405}, {"id": 206, "seek": 83250, "start": 843.14, "end": 847.7, "text": " So if we do, we actually have the tools running.", "tokens": [50896, 407, 498, 321, 360, 11, 321, 767, 362, 264, 3873, 2614, 13, 51124], "temperature": 0.0, "avg_logprob": -0.17396277885932426, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.017064036801457405}, {"id": 207, "seek": 83250, "start": 847.7, "end": 852.1, "text": " But to be fair, we can't really ask our user to do that themselves.", "tokens": [51124, 583, 281, 312, 3143, 11, 321, 393, 380, 534, 1029, 527, 4195, 281, 360, 300, 2969, 13, 51344], "temperature": 0.0, "avg_logprob": -0.17396277885932426, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.017064036801457405}, {"id": 208, "seek": 83250, "start": 852.1, "end": 856.16, "text": " It's pretty bad user experience.", "tokens": [51344, 467, 311, 1238, 1578, 4195, 1752, 13, 51547], "temperature": 0.0, "avg_logprob": -0.17396277885932426, "compression_ratio": 1.530054644808743, "no_speech_prob": 0.017064036801457405}, {"id": 209, "seek": 85616, "start": 856.16, "end": 863.36, "text": " So we will go around that and do this very long file as you can see, which for this case", "tokens": [50364, 407, 321, 486, 352, 926, 300, 293, 360, 341, 588, 938, 3991, 382, 291, 393, 536, 11, 597, 337, 341, 1389, 50724], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 210, "seek": 85616, "start": 863.36, "end": 865.92, "text": " will be called the cargo tools.", "tokens": [50724, 486, 312, 1219, 264, 19449, 3873, 13, 50852], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 211, "seek": 85616, "start": 865.92, "end": 871.0, "text": " And this one will literally run this command that we saw here itself.", "tokens": [50852, 400, 341, 472, 486, 3736, 1190, 341, 5622, 300, 321, 1866, 510, 2564, 13, 51106], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 212, "seek": 85616, "start": 871.0, "end": 872.8, "text": " And that's it.", "tokens": [51106, 400, 300, 311, 309, 13, 51196], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 213, "seek": 85616, "start": 872.8, "end": 874.36, "text": " It does just that.", "tokens": [51196, 467, 775, 445, 300, 13, 51274], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 214, "seek": 85616, "start": 874.36, "end": 880.8399999999999, "text": " We just wrap our linter and it's just running.", "tokens": [51274, 492, 445, 7019, 527, 287, 5106, 293, 309, 311, 445, 2614, 13, 51598], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 215, "seek": 85616, "start": 880.8399999999999, "end": 882.36, "text": " So now we install it.", "tokens": [51598, 407, 586, 321, 3625, 309, 13, 51674], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 216, "seek": 85616, "start": 882.36, "end": 884.8399999999999, "text": " We run it.", "tokens": [51674, 492, 1190, 309, 13, 51798], "temperature": 0.0, "avg_logprob": -0.2264684594195822, "compression_ratio": 1.6084656084656084, "no_speech_prob": 0.07345888018608093}, {"id": 217, "seek": 88484, "start": 884.84, "end": 886.44, "text": " And again, I don't have output.", "tokens": [50364, 400, 797, 11, 286, 500, 380, 362, 5598, 13, 50444], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 218, "seek": 88484, "start": 886.44, "end": 888.88, "text": " It's very shaming.", "tokens": [50444, 467, 311, 588, 402, 5184, 13, 50566], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 219, "seek": 88484, "start": 888.88, "end": 894.32, "text": " And believe me, it works.", "tokens": [50566, 400, 1697, 385, 11, 309, 1985, 13, 50838], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 220, "seek": 88484, "start": 894.32, "end": 895.32, "text": " So yeah.", "tokens": [50838, 407, 1338, 13, 50888], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 221, "seek": 88484, "start": 895.32, "end": 902.44, "text": " I voluntarily, like I said, didn't show a late linter pass to have access to the compiler", "tokens": [50888, 286, 41782, 11, 411, 286, 848, 11, 994, 380, 855, 257, 3469, 287, 5106, 1320, 281, 362, 2105, 281, 264, 31958, 51244], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 222, "seek": 88484, "start": 902.44, "end": 903.64, "text": " and everything.", "tokens": [51244, 293, 1203, 13, 51304], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 223, "seek": 88484, "start": 903.64, "end": 908.96, "text": " But I wrote a blog post explaining that much more in depth.", "tokens": [51304, 583, 286, 4114, 257, 6968, 2183, 13468, 300, 709, 544, 294, 7161, 13, 51570], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 224, "seek": 88484, "start": 908.96, "end": 914.8000000000001, "text": " Inside it, you have an example with an unwrap if I remember, saying, yeah, don't use unwraps", "tokens": [51570, 15123, 309, 11, 291, 362, 364, 1365, 365, 364, 14853, 4007, 498, 286, 1604, 11, 1566, 11, 1338, 11, 500, 380, 764, 14853, 424, 1878, 51862], "temperature": 0.0, "avg_logprob": -0.2582963671003069, "compression_ratio": 1.5426008968609866, "no_speech_prob": 0.008226380683481693}, {"id": 225, "seek": 91480, "start": 914.8, "end": 916.1999999999999, "text": " use something else.", "tokens": [50364, 764, 746, 1646, 13, 50434], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 226, "seek": 91480, "start": 916.1999999999999, "end": 921.16, "text": " And you see how we actually get the real type information because when you call unwrap,", "tokens": [50434, 400, 291, 536, 577, 321, 767, 483, 264, 957, 2010, 1589, 570, 562, 291, 818, 14853, 4007, 11, 50682], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 227, "seek": 91480, "start": 921.16, "end": 925.52, "text": " you need to check that unwrap is actually called on the result on an option.", "tokens": [50682, 291, 643, 281, 1520, 300, 14853, 4007, 307, 767, 1219, 322, 264, 1874, 322, 364, 3614, 13, 50900], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 228, "seek": 91480, "start": 925.52, "end": 929.88, "text": " But for that, you need to actually get the type check information because if it's, for", "tokens": [50900, 583, 337, 300, 11, 291, 643, 281, 767, 483, 264, 2010, 1520, 1589, 570, 498, 309, 311, 11, 337, 51118], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 229, "seek": 91480, "start": 929.88, "end": 935.5999999999999, "text": " example, self with a capital letter double colon unwrap and then you pass your type,", "tokens": [51118, 1365, 11, 2698, 365, 257, 4238, 5063, 3834, 8255, 14853, 4007, 293, 550, 291, 1320, 428, 2010, 11, 51404], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 230, "seek": 91480, "start": 935.5999999999999, "end": 937.68, "text": " you actually need to infer the type.", "tokens": [51404, 291, 767, 643, 281, 13596, 264, 2010, 13, 51508], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 231, "seek": 91480, "start": 937.68, "end": 939.56, "text": " And for that, you need type check information.", "tokens": [51508, 400, 337, 300, 11, 291, 643, 2010, 1520, 1589, 13, 51602], "temperature": 0.0, "avg_logprob": -0.22214402285489168, "compression_ratio": 2.0276497695852536, "no_speech_prob": 0.12969458103179932}, {"id": 232, "seek": 93956, "start": 940.16, "end": 946.88, "text": " You will see a lot of things that are seen very easy but are quite not so easy.", "tokens": [50394, 509, 486, 536, 257, 688, 295, 721, 300, 366, 1612, 588, 1858, 457, 366, 1596, 406, 370, 1858, 13, 50730], "temperature": 0.0, "avg_logprob": -0.1822452125968514, "compression_ratio": 1.6490384615384615, "no_speech_prob": 0.027094027027487755}, {"id": 233, "seek": 93956, "start": 946.88, "end": 953.3199999999999, "text": " For example, if you want to have, I don't know, which type this implementation is being", "tokens": [50730, 1171, 1365, 11, 498, 291, 528, 281, 362, 11, 286, 500, 380, 458, 11, 597, 2010, 341, 11420, 307, 885, 51052], "temperature": 0.0, "avg_logprob": -0.1822452125968514, "compression_ratio": 1.6490384615384615, "no_speech_prob": 0.027094027027487755}, {"id": 234, "seek": 93956, "start": 953.3199999999999, "end": 958.1999999999999, "text": " implemented on, funnily enough, it's quite difficult.", "tokens": [51052, 12270, 322, 11, 1019, 77, 953, 1547, 11, 309, 311, 1596, 2252, 13, 51296], "temperature": 0.0, "avg_logprob": -0.1822452125968514, "compression_ratio": 1.6490384615384615, "no_speech_prob": 0.027094027027487755}, {"id": 235, "seek": 93956, "start": 958.1999999999999, "end": 965.8399999999999, "text": " You can have the trade very easily but the type it's being implemented on, not so much.", "tokens": [51296, 509, 393, 362, 264, 4923, 588, 3612, 457, 264, 2010, 309, 311, 885, 12270, 322, 11, 406, 370, 709, 13, 51678], "temperature": 0.0, "avg_logprob": -0.1822452125968514, "compression_ratio": 1.6490384615384615, "no_speech_prob": 0.027094027027487755}, {"id": 236, "seek": 93956, "start": 965.8399999999999, "end": 967.9599999999999, "text": " And thank you for your attention.", "tokens": [51678, 400, 1309, 291, 337, 428, 3202, 13, 51784], "temperature": 0.0, "avg_logprob": -0.1822452125968514, "compression_ratio": 1.6490384615384615, "no_speech_prob": 0.027094027027487755}, {"id": 237, "seek": 96796, "start": 967.96, "end": 973.6, "text": " More information on my blog and you have my email and social media and everything.", "tokens": [50364, 5048, 1589, 322, 452, 6968, 293, 291, 362, 452, 3796, 293, 2093, 3021, 293, 1203, 13, 50646], "temperature": 0.0, "avg_logprob": -0.3762840055069833, "compression_ratio": 1.395973154362416, "no_speech_prob": 0.021009346470236778}, {"id": 238, "seek": 96796, "start": 973.6, "end": 974.88, "text": " And thank you for your attention.", "tokens": [50646, 400, 1309, 291, 337, 428, 3202, 13, 50710], "temperature": 0.0, "avg_logprob": -0.3762840055069833, "compression_ratio": 1.395973154362416, "no_speech_prob": 0.021009346470236778}, {"id": 239, "seek": 96796, "start": 981.88, "end": 986.52, "text": " So we have about two minutes for questions if anyone has them.", "tokens": [51060, 407, 321, 362, 466, 732, 2077, 337, 1651, 498, 2878, 575, 552, 13, 51292], "temperature": 0.0, "avg_logprob": -0.3762840055069833, "compression_ratio": 1.395973154362416, "no_speech_prob": 0.021009346470236778}, {"id": 240, "seek": 96796, "start": 986.52, "end": 989.52, "text": " Yes, come right to the back.", "tokens": [51292, 1079, 11, 808, 558, 281, 264, 646, 13, 51442], "temperature": 0.0, "avg_logprob": -0.3762840055069833, "compression_ratio": 1.395973154362416, "no_speech_prob": 0.021009346470236778}, {"id": 241, "seek": 99796, "start": 998.96, "end": 1001.76, "text": " Hello, thanks for this presentation.", "tokens": [50414, 2425, 11, 3231, 337, 341, 5860, 13, 50554], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 242, "seek": 99796, "start": 1001.76, "end": 1003.76, "text": " No, don't share at all.", "tokens": [50554, 883, 11, 500, 380, 2073, 412, 439, 13, 50654], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 243, "seek": 99796, "start": 1003.76, "end": 1005.36, "text": " Okay.", "tokens": [50654, 1033, 13, 50734], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 244, "seek": 99796, "start": 1005.36, "end": 1008.36, "text": " Hello, again, thanks for this presentation.", "tokens": [50734, 2425, 11, 797, 11, 3231, 337, 341, 5860, 13, 50884], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 245, "seek": 99796, "start": 1008.36, "end": 1014.2, "text": " A few years ago, I wrote a refinement type system for Rust as a linter.", "tokens": [50884, 316, 1326, 924, 2057, 11, 286, 4114, 257, 1895, 30229, 2010, 1185, 337, 34952, 382, 257, 287, 5106, 13, 51176], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 246, "seek": 99796, "start": 1014.2, "end": 1019.4000000000001, "text": " I had the courage to maintain it for about one or two versions of Rust.", "tokens": [51176, 286, 632, 264, 9892, 281, 6909, 309, 337, 466, 472, 420, 732, 9606, 295, 34952, 13, 51436], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 247, "seek": 99796, "start": 1019.4000000000001, "end": 1024.08, "text": " A few months ago, I tried to pick it up again and everything was broken,", "tokens": [51436, 316, 1326, 2493, 2057, 11, 286, 3031, 281, 1888, 309, 493, 797, 293, 1203, 390, 5463, 11, 51670], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 248, "seek": 99796, "start": 1024.08, "end": 1027.56, "text": " bit rotten, two tiers, everything had changed.", "tokens": [51670, 857, 31977, 11, 732, 40563, 11, 1203, 632, 3105, 13, 51844], "temperature": 0.0, "avg_logprob": -0.25270805718763817, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.22391377389431}, {"id": 249, "seek": 102756, "start": 1027.56, "end": 1032.84, "text": " Do you know if there are any plans to make things a bit less messy?", "tokens": [50364, 1144, 291, 458, 498, 456, 366, 604, 5482, 281, 652, 721, 257, 857, 1570, 16191, 30, 50628], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 250, "seek": 102756, "start": 1032.84, "end": 1037.2, "text": " Because right now it's really, really, really painful to maintain a linter.", "tokens": [50628, 1436, 558, 586, 309, 311, 534, 11, 534, 11, 534, 11697, 281, 6909, 257, 287, 5106, 13, 50846], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 251, "seek": 102756, "start": 1037.2, "end": 1039.2, "text": " No, it's just pain, enjoy.", "tokens": [50846, 883, 11, 309, 311, 445, 1822, 11, 2103, 13, 50946], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 252, "seek": 102756, "start": 1045.6399999999999, "end": 1047.96, "text": " It's a shame.", "tokens": [51268, 467, 311, 257, 10069, 13, 51384], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 253, "seek": 102756, "start": 1047.96, "end": 1052.96, "text": " No, in fact, it's actually better now because we have less function to worry about.", "tokens": [51384, 883, 11, 294, 1186, 11, 309, 311, 767, 1101, 586, 570, 321, 362, 1570, 2445, 281, 3292, 466, 13, 51634], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 254, "seek": 102756, "start": 1052.96, "end": 1057.08, "text": " For example, a lot of APIs that were existing before, only for Rust.", "tokens": [51634, 1171, 1365, 11, 257, 688, 295, 21445, 300, 645, 6741, 949, 11, 787, 337, 34952, 13, 51840], "temperature": 0.0, "avg_logprob": -0.23279593388239542, "compression_ratio": 1.5458715596330275, "no_speech_prob": 0.005143704824149609}, {"id": 255, "seek": 105708, "start": 1057.08, "end": 1059.8, "text": " Because Rust.doc is a compiler extension.", "tokens": [50364, 1436, 34952, 13, 39966, 307, 257, 31958, 10320, 13, 50500], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 256, "seek": 105708, "start": 1059.8, "end": 1065.3999999999999, "text": " Being less and less used because we said, okay, we now stop accepting completely broken code.", "tokens": [50500, 8891, 1570, 293, 1570, 1143, 570, 321, 848, 11, 1392, 11, 321, 586, 1590, 17391, 2584, 5463, 3089, 13, 50780], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 257, "seek": 105708, "start": 1065.3999999999999, "end": 1072.0, "text": " And soon enough, we'll be very likely using the same API as Lins.", "tokens": [50780, 400, 2321, 1547, 11, 321, 603, 312, 588, 3700, 1228, 264, 912, 9362, 382, 441, 1292, 13, 51110], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 258, "seek": 105708, "start": 1072.0, "end": 1077.96, "text": " So normally it should be still breaking as much, but not as much.", "tokens": [51110, 407, 5646, 309, 820, 312, 920, 7697, 382, 709, 11, 457, 406, 382, 709, 13, 51408], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 259, "seek": 105708, "start": 1077.96, "end": 1079.96, "text": " I don't know.", "tokens": [51408, 286, 500, 380, 458, 13, 51508], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 260, "seek": 105708, "start": 1081.8799999999999, "end": 1084.28, "text": " How is this related to Clippy?", "tokens": [51604, 1012, 307, 341, 4077, 281, 2033, 48363, 30, 51724], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 261, "seek": 105708, "start": 1084.28, "end": 1086.28, "text": " I don't hear you at all.", "tokens": [51724, 286, 500, 380, 1568, 291, 412, 439, 13, 51824], "temperature": 0.0, "avg_logprob": -0.3078938317053097, "compression_ratio": 1.491150442477876, "no_speech_prob": 0.016791125759482384}, {"id": 262, "seek": 108628, "start": 1087.24, "end": 1089.24, "text": " Ah.", "tokens": [50412, 2438, 13, 50512], "temperature": 0.0, "avg_logprob": -0.3056267081917106, "compression_ratio": 1.556701030927835, "no_speech_prob": 0.006667237728834152}, {"id": 263, "seek": 108628, "start": 1089.24, "end": 1096.84, "text": " Basically, it's working the same way, but it exists because in Clippy,", "tokens": [50512, 8537, 11, 309, 311, 1364, 264, 912, 636, 11, 457, 309, 8198, 570, 294, 2033, 48363, 11, 50892], "temperature": 0.0, "avg_logprob": -0.3056267081917106, "compression_ratio": 1.556701030927835, "no_speech_prob": 0.006667237728834152}, {"id": 264, "seek": 108628, "start": 1096.84, "end": 1101.16, "text": " not all Lins can be implemented if you have specific needs for your project", "tokens": [50892, 406, 439, 441, 1292, 393, 312, 12270, 498, 291, 362, 2685, 2203, 337, 428, 1716, 51108], "temperature": 0.0, "avg_logprob": -0.3056267081917106, "compression_ratio": 1.556701030927835, "no_speech_prob": 0.006667237728834152}, {"id": 265, "seek": 108628, "start": 1101.16, "end": 1110.12, "text": " because you need to have higher security levels or you don't want certain code pieces or everything.", "tokens": [51108, 570, 291, 643, 281, 362, 2946, 3825, 4358, 420, 291, 500, 380, 528, 1629, 3089, 3755, 420, 1203, 13, 51556], "temperature": 0.0, "avg_logprob": -0.3056267081917106, "compression_ratio": 1.556701030927835, "no_speech_prob": 0.006667237728834152}, {"id": 266, "seek": 108628, "start": 1110.12, "end": 1113.08, "text": " You can't expect them to be implemented in Clippy.", "tokens": [51556, 509, 393, 380, 2066, 552, 281, 312, 12270, 294, 2033, 48363, 13, 51704], "temperature": 0.0, "avg_logprob": -0.3056267081917106, "compression_ratio": 1.556701030927835, "no_speech_prob": 0.006667237728834152}, {"id": 267, "seek": 111308, "start": 1113.08, "end": 1117.8, "text": " So you implemented them yourself and that's very much why RustyTools exists.", "tokens": [50364, 407, 291, 12270, 552, 1803, 293, 300, 311, 588, 709, 983, 34952, 88, 51, 29298, 8198, 13, 50600], "temperature": 0.0, "avg_logprob": -0.28220517900254993, "compression_ratio": 1.3643410852713178, "no_speech_prob": 0.0019515918102115393}, {"id": 268, "seek": 111308, "start": 1117.8, "end": 1121.3999999999999, "text": " So you can actually do it without having to set up everything yourself.", "tokens": [50600, 407, 291, 393, 767, 360, 309, 1553, 1419, 281, 992, 493, 1203, 1803, 13, 50780], "temperature": 0.0, "avg_logprob": -0.28220517900254993, "compression_ratio": 1.3643410852713178, "no_speech_prob": 0.0019515918102115393}, {"id": 269, "seek": 111308, "start": 1124.1999999999998, "end": 1126.1999999999998, "text": " Perfect. Thank you so much.", "tokens": [50920, 10246, 13, 1044, 291, 370, 709, 13, 51020], "temperature": 0.0, "avg_logprob": -0.28220517900254993, "compression_ratio": 1.3643410852713178, "no_speech_prob": 0.0019515918102115393}], "language": "en"}