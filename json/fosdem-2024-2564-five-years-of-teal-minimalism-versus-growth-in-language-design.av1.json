{"text": " Alright, so let's get started. Thank you for sticking around during lunchtime. This is going to be five years of till, minimalism versus growth in language design. Okay, here we go. Okay, quick introductions. I'm Hisham. I've been doing free software for a long time with involved in many projects. I work at Kong where we do free software like free open source API gateway using mostly Lua. I'm currently working on the team that's having web assembly support in Kong and some of my other projects are LuaRocks, package manager, Google Linux, the weirdest distro ever and Htop, the process monitor. So, but here I'm here to talk about like the project that I'm most recently excited about, which is till. Till is a statically typed dialect of the Lua language. Right, so if you know like what type script is to JavaScript, you can think it's the same, right till is to Lua, what type script is to JavaScript, but let's not go too far with that analogy because here we're trying to keep to Lua's spirit, which is like a very minimal, a very tiny language and like I don't have the backing of Microsoft and hundreds of developers working on as they do on type script, but essentially we have a compiler, till that outputs Lua files. And so here's a quick taste of what till looks like. This is just like a random function I picked like from the source code of the latest version of till that I'm working on. And so what's lighter here like is what is not Lua, essentially the parts of till that are different from Lua. So we have a couple of different operators, you can add types there, but otherwise as you can see it's it's mostly regular Lua. I made the mistake of talking about till before without showing lots of search code. So this time I'm gonna make sure I show source code till is like the epitome of like conference driven development because when I first had the idea I started like hacking it together and like when I first presented it like was the challenge like can we do this right? Can we add types while remaining minimal and when I presented it back in 2019 like I was like halfway through like the compiler student compile itself and I show like oh I started like 500 errors and I'm currently like 100 or something like that. But eventually I got it working and then the next year I came back here and show it to you and I said like minimalist type Lua is here and there's this weird title because the language didn't have a name yet. So and then eventually at the third part of the trilogy we had a name and we actually had users and had stuff going actually going on with the language. But and then I basically said that well now I think I'm gonna get let it settle for a bit so that people can actually use it because if the language keep changing syntax like all the time and stuff like that like people won't feel comfortable adopting it right. So yeah so that's what's be going like we have like this small community I always like to make a distinction between like a community and a user base right because especially in the industry people like to look at numbers so whenever people ask me how is still going like I tell him like oh we're like 1.8k GitHub stars which is like the vanity metric like that doesn't really mean anything right but it means something right but in but in practice when I when I think about a community I think about the people who are involved with it and then I could say like like oh there there are like all of the other people who gotten involved right because I'm just doing the source-to-source compiler right and then there's people doing the build system there's people doing like the VS code plugin right that gives like IDE autocomplete those sorts of things so in nowadays for a language that's that's part of the whole package that's what expected of a modern language right so if I if I think on when I think of the two community I think about like I don't know like 10 people or or even less right but the people who regularly discuss on GitHub and all of that so right that that's the community right like the human aspect of it and speaking of community feedback here is like this is a full screenshot of like all of like if you go through all of the issues pages there are currently like if you open the the till GitHub repo right now there's like 67 issues like these are all of them right and I one thing I hate about GitHub is that they call everything issues right so like feature requests like back in the days of search for so we're like separate pages for like bugs and feature requests right and out like calling a feature request issue I think it's like super weird like I would like the program to do something that you did not design it to do now your code has issues right it's like no so basically what I do I label all of them like so the ones with the light labels here are feature requests and the ones with like the darker labels which are like the red ones those are the bugs right so I currently have like five open bugs and like three pages of feature requests right and and it's nice like sometimes you don't want to close your feature request you want to keep them around so that other people who have the same request can see and comment on them right so basically over time your job is going to keep accumulated an endless list of feature requests you're going to look at the repo and one day will have like 200 open issues oh this program must be all broken right no no it has a lot of people who are very interested in it this is actually a sign of success like people are interested in your program enough so that they are using it and asking for more stuff right so yeah so but then once you have this many feature requests like and we're here talking about minimalism how to keep the language small right I cannot add everything that people ask for and this is like my hobby side project currently I don't even have the time even if I wanted to right but I don't want to because I wanted to keep it small keeping to the like that idea from the very first talk like the challenge was how to keep it small right and the challenging thing is like I can't add everything that people ask for or even everything that people contribute because not only people go there and ask feature requests some people actually send in features like all written like a spoil requests like like I would like to do this extra thing and here's the code to do it please add it and I go like sorry right but but it's super important feedback right so uh yeah but when you go go back like it's always nice to look at that whole list and look try to look at the big picture right and then I saw like two like very recurring themes on things that people were asking for like related about like one is like nil safety right the famous uh billion dollar mistake right as as mentioned by touring award winner like 24 when he talked about this uh saying like adding the concept of null to a programming language was back in the day was his mistake because like everything that came out of that afterwards and um and lua is another of those language this does has like a nil type right and all of the consequences come with that uh and the other one is that people keep asking for abilities to express more complex table types because lua is like every like the only single composite type that you have like apart from like integers like like numbers bullions like and like tables right which is a thing that doubles as a hash table and an array right like it's there's a thing with keys and values and if you use numbers the the it has like some special behaviors to make an array access efficient but otherwise just think of it as one big thing with keys and values but once you start talking about types you look like oh this table is really an object this table is really a map this table is really an array this table is really a a map except when you use integer keys then i wanted to act as an array like these are kind of things that lua programmers do all the time because once you have a table that accepts everything right you start having these composite types and all these weird things and but then people mix it up right and those are the bugs that people run into when they're coding in lua with no explicit typing and they would like teal to help them with that right so let's talk about the first one uh a little uh so as i mentioned i was mentioning like giving that every variable can accept nil and you can pass stuff around like that uh until basically every type includes nil as a possible value right if you declare a variable as integer you can still put nil in there like essentially every variable is like optional right and in that sense so this has some consequences right this makes for example that uh in lua like you declare a function to have like three arguments you can just pass one argument or no arguments and like the lua vm will accept it and people do that on purpose because essentially they mean like oh in the semantics of my my application that argument is optional right so uh so lua accepts that and because lua accepts that teal accepts that right and uh another side effect is that in table like missing keys are valid right so um people let's say you define a function that operates on a table that has like x and y uh fields right uh but then your in your program since you decide since you designed that function that just wants to take something that takes x and y you want to pass other things right that have extra fields and sometimes they don't right so uh it gets it gets really messy right uh so in one of the previous talks i mentioned about like that i started looking at like doing the whole thing about uh implementing like nullability checks into the variables and how like and i showed like the size of the teal compiler source code versus the size of like all of the code to do proper reachability tests for null variables and everything and make like the whole check super automatic and it started to get like bigger than the compiler itself uh so that was sort of like a complete but heavyweight solution right so a very lightweight solution or i would say lighter weight solution like then actually having the proper optional types that people really want right was to have just arity checks which is like how many things you actually put inside the parentheses when calling a function right so and yes if eventually we find like a lightweight way to like nicely do optional types this will become sort of a redundant feature but this is this is what it looks like right if you have a function that takes like two parameters like if you pass two parameters then it's valid so if you just pass one parameter this didn't fail before but it will catch the error now but if you pass two parameters and one of them is nil well you know the arity of the function is still two so that's so that's valid right but who will write this right so i mean it's very like 80 20 thing like it's a very simple thing that catches like the kinds of mistakes that people actually do right so you have you kind of have to be uh forcing to to to get into trouble with that so uh yeah but if you want to be able to do that then you act you actually mark the arity like not in the type but in the argument right like the the argument is optional it's not that the type of y is like an optional integer the type is integer but y is an optional argument right so that's like a very simple to implement thing like that i had it i can draft state for a long time and i just decided to put that in into the language because it's always like oh do i want to add one more feature to the language right do i want to because i was able to do like to write the till compiler in itself so with the features that currently has you're able to write a compiler so like i go like okay the features look enough right but people get asking for more features so but then like being possible and being pleasant is kind of different i already feel like like coding in till in general because of the helps that type give you already feels like more pleasant to me as a very in a very subjective way than coding in like plain lua right but when i started working on the next feature like then i really wanted to have this because i wanted to do big refactors and change the numbers of arguments of things and i wanted the compiler to tell me uh if uh if i was making mistakes so i added this feature feature for my own use and it already proved like useful enough and uh yeah so if we're doing that for nil safety for for arguments what about uh for table keys can we do that it's trickier to pull it off right because uh even if you want to say like oh this key is optional this key is mandatory some one thing that people do in lua all the time is just like start a table with like open closed bracket like this is an empty table and start filling the elements one by one so like after the table is ready right that argument's no longer optional but it's optional for a while and it's a very common pattern so um however uh since i had a feature that i created for my own use of how i specify maps i adopted that for records as well so uh which is that total annotation because like lua like modern lua has these annotations like const and and so i just i don't want to say total which is for things like this right if you have an enum saying like which essentially restricts your string type into a set of known strings right you can say that the map that you're declaring here is total so the compiler will give you an error here because you specified north and south but not east and west okay so uh right so essentially we did the same for uh records right so uh you can specify a total record and for that use case of i'm declaring a table and i want everything to be in it uh you can uh you can specify that again like it's a lightweight solution then the whole solution but it's something that already gives you uh you know gets you a long way um okay so uh just because we started late right how how do how do we go on time like do i just keep going and then right okay all right so uh yeah so then the second one which is like the more interesting one is like subtitling table types i mean like i have avoided going with like complicated uh sub typing definitions as as you start combining uh those kinds of features like you can you can go real crazy with that like with even like features that programmers in type languages use every day like if you combine like generics and sub typing like there are computer sign results that show you that you end up with like a computationally undecidable type system and things like that so uh so i have avoided like delving into this complexity for as long as i could so for that super common case of i have this table which is a record in an array at the same time i added this jenki type that's array record that's just for doing that uh and to avoid having to do sub typing and things like that like and complex type hierarchies just because i wanted to have collections like i added like invariant generics so you can have like list of t but you cannot specify anything about t and then that worked and because uh typing and callbacks and passing like checking function arguments for covariance versus contravariant and all that gets complicated you just do bivariant matching you like you accepted both ways which is like wrong like it's unsound by design right but it will at least prevent you from matching like completely unrelated functions like you're not passing like the wrong function but if you're doing the thing like in the correct ballpark it will catch it right so um yeah which is some kind of like unsoundness by design that top typescript already has to do so uh yeah and one big limitation that we have because we had union types but you cannot you could not have union types of multiple table types right because at runtime the code that it translates to when you're trying to check like which which value i have in this union type which is like oh it's a it's an engineer or uh like my record like my object the luo code that that would generate uh became like luo code that says like show check that the luo type is number or check that the luo type is table and then it couldn't tell all the tables apart at runtime right so you will have to generate code that actually checks the tables by their contents right so you can tell like is this a circle is this a triangle is this like what is this right and turns out that in the real world a luo programmer is like an existing luo frameworks that people would want to use with till define their own object or oop like object-oriented systems with their own like inheritance systems and how to how to declare like the the the type checking right people already do this writing this custom code for type checking right but then the till compiler doesn't understand that right so uh for things like this if i want to have the is operator to work nicely in till so that the compiler understand it like i need to be able to translate that to that like framework specific way of determining like what the type is right so since we had records before like the the next version of till is going to have interfaces right so the interface like this was instead of writing record you write interface right but now you can you can actually have subtyping from interfaces which are abstract into records but then you have this fine where clause here which has an expression like it has a bit of code with essentially is like when you want to do an is check this is the code that you should use like it's essentially a macro right you have to replace this everywhere you need to do that change right and now essentially you can do uh you can do union types as long as the all of the types that you are putting in the union declare like there how to do the is operation right and yeah we're only on time so yeah so that's essentially what i described there and the thing is that that that magic where clause right essentially i had to add a feature to add a feature right because like i'm really having i'm having i'm really having to implement like a macro expansion thing for expressions just in order to have that work loss so like why not expose that but then again i thought like oh so i need to add macros to the language no i just went lighter wait again i just added macros for expressions and not like a full macro processor right which is what many projects for lua have tried to do in over the years but one of none of them like have become established right and turns out that where now it's syntactic sugar like we actually have like macro expressions in the language right but it was motivated by that right so in short what happened like till has seen use okay people want more features and less limitations which translates to many future requests oh no right but many future requests they relate to the same pain points right so the idea is that you try to combine them and come up with like the what's the most minimal design to try to address the most of these pain points so the things that came up out of that were like optional iris interfaces macro expressions and the idea was that i would just pick the lighter weight solution right because whenever possible like just to try to like just harking back to the title like minimalism of the language versus its growth right both the growth of the compiler the growth of the language specification and the growth of the user base right so so that's the approach that i took like you know you sometimes you have to choose like the incomplete solution just in order to balance all of those desires right so yeah that's it what i had thank you for sitting around thank you we need to free up the room for the next round but we can still have one or two quick questions Yeah, yeah. So have you decided what to improve the meta programming or doing some stuff, but what the meta tables and all that stuff? Okay. Have you ever decided for a new program or a new country you know the goal with the LAT? If I have some plan to improve the handling of meta tables, meta tables, it currently does have support for meta tables in records, you can specify them. The checks are not very strict, right? And I haven't had much feedback on that. So like if people run into trouble, I look into it, otherwise I'm just going to keep it as it is. Right now you can use them and no one's complaining, so I'm happy with that. Thank you. Thank you.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 16.36, "text": " Alright, so let's get started. Thank you for sticking around during lunchtime. This is", "tokens": [50364, 2798, 11, 370, 718, 311, 483, 1409, 13, 1044, 291, 337, 13465, 926, 1830, 6349, 3766, 13, 639, 307, 51182], "temperature": 0.0, "avg_logprob": -0.401156945662065, "compression_ratio": 1.288888888888889, "no_speech_prob": 0.4223968982696533}, {"id": 1, "seek": 0, "start": 16.36, "end": 27.68, "text": " going to be five years of till, minimalism versus growth in language design. Okay, here", "tokens": [51182, 516, 281, 312, 1732, 924, 295, 4288, 11, 13206, 1434, 5717, 4599, 294, 2856, 1715, 13, 1033, 11, 510, 51748], "temperature": 0.0, "avg_logprob": -0.401156945662065, "compression_ratio": 1.288888888888889, "no_speech_prob": 0.4223968982696533}, {"id": 2, "seek": 2768, "start": 27.72, "end": 33.4, "text": " we go. Okay, quick introductions. I'm Hisham. I've been doing free software for a long time", "tokens": [50366, 321, 352, 13, 1033, 11, 1702, 48032, 13, 286, 478, 389, 742, 335, 13, 286, 600, 668, 884, 1737, 4722, 337, 257, 938, 565, 50650], "temperature": 0.0, "avg_logprob": -0.3325594796074761, "compression_ratio": 1.5645756457564575, "no_speech_prob": 0.03345019370317459}, {"id": 3, "seek": 2768, "start": 33.4, "end": 38.92, "text": " with involved in many projects. I work at Kong where we do free software like free", "tokens": [50650, 365, 3288, 294, 867, 4455, 13, 286, 589, 412, 9832, 689, 321, 360, 1737, 4722, 411, 1737, 50926], "temperature": 0.0, "avg_logprob": -0.3325594796074761, "compression_ratio": 1.5645756457564575, "no_speech_prob": 0.03345019370317459}, {"id": 4, "seek": 2768, "start": 38.92, "end": 43.519999999999996, "text": " open source API gateway using mostly Lua. I'm currently working on the team that's", "tokens": [50926, 1269, 4009, 9362, 28532, 1228, 5240, 441, 4398, 13, 286, 478, 4362, 1364, 322, 264, 1469, 300, 311, 51156], "temperature": 0.0, "avg_logprob": -0.3325594796074761, "compression_ratio": 1.5645756457564575, "no_speech_prob": 0.03345019370317459}, {"id": 5, "seek": 2768, "start": 43.519999999999996, "end": 48.36, "text": " having web assembly support in Kong and some of my other projects are LuaRocks,", "tokens": [51156, 1419, 3670, 12103, 1406, 294, 9832, 293, 512, 295, 452, 661, 4455, 366, 441, 4398, 49, 35507, 11, 51398], "temperature": 0.0, "avg_logprob": -0.3325594796074761, "compression_ratio": 1.5645756457564575, "no_speech_prob": 0.03345019370317459}, {"id": 6, "seek": 2768, "start": 48.36, "end": 54.92, "text": " package manager, Google Linux, the weirdest distro ever and Htop, the process monitor.", "tokens": [51398, 7372, 6598, 11, 3329, 18734, 11, 264, 44807, 1483, 340, 1562, 293, 389, 19337, 11, 264, 1399, 6002, 13, 51726], "temperature": 0.0, "avg_logprob": -0.3325594796074761, "compression_ratio": 1.5645756457564575, "no_speech_prob": 0.03345019370317459}, {"id": 7, "seek": 5492, "start": 55.72, "end": 61.6, "text": " So, but here I'm here to talk about like the project that I'm most recently excited about,", "tokens": [50404, 407, 11, 457, 510, 286, 478, 510, 281, 751, 466, 411, 264, 1716, 300, 286, 478, 881, 3938, 2919, 466, 11, 50698], "temperature": 0.0, "avg_logprob": -0.21523829868861608, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.004252538550645113}, {"id": 8, "seek": 5492, "start": 61.6, "end": 69.24000000000001, "text": " which is till. Till is a statically typed dialect of the Lua language. Right, so if you know like", "tokens": [50698, 597, 307, 4288, 13, 20227, 307, 257, 2219, 984, 33941, 24652, 295, 264, 441, 4398, 2856, 13, 1779, 11, 370, 498, 291, 458, 411, 51080], "temperature": 0.0, "avg_logprob": -0.21523829868861608, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.004252538550645113}, {"id": 9, "seek": 5492, "start": 69.24000000000001, "end": 75.64, "text": " what type script is to JavaScript, you can think it's the same, right till is to Lua,", "tokens": [51080, 437, 2010, 5755, 307, 281, 15778, 11, 291, 393, 519, 309, 311, 264, 912, 11, 558, 4288, 307, 281, 441, 4398, 11, 51400], "temperature": 0.0, "avg_logprob": -0.21523829868861608, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.004252538550645113}, {"id": 10, "seek": 5492, "start": 75.64, "end": 80.72, "text": " what type script is to JavaScript, but let's not go too far with that analogy because here we're", "tokens": [51400, 437, 2010, 5755, 307, 281, 15778, 11, 457, 718, 311, 406, 352, 886, 1400, 365, 300, 21663, 570, 510, 321, 434, 51654], "temperature": 0.0, "avg_logprob": -0.21523829868861608, "compression_ratio": 1.6863636363636363, "no_speech_prob": 0.004252538550645113}, {"id": 11, "seek": 8072, "start": 80.76, "end": 85.64, "text": " trying to keep to Lua's spirit, which is like a very minimal, a very tiny language and like I", "tokens": [50366, 1382, 281, 1066, 281, 441, 4398, 311, 3797, 11, 597, 307, 411, 257, 588, 13206, 11, 257, 588, 5870, 2856, 293, 411, 286, 50610], "temperature": 0.0, "avg_logprob": -0.17581865411055717, "compression_ratio": 1.562753036437247, "no_speech_prob": 0.004524874500930309}, {"id": 12, "seek": 8072, "start": 85.64, "end": 91.44, "text": " don't have the backing of Microsoft and hundreds of developers working on as they do on type script,", "tokens": [50610, 500, 380, 362, 264, 19373, 295, 8116, 293, 6779, 295, 8849, 1364, 322, 382, 436, 360, 322, 2010, 5755, 11, 50900], "temperature": 0.0, "avg_logprob": -0.17581865411055717, "compression_ratio": 1.562753036437247, "no_speech_prob": 0.004524874500930309}, {"id": 13, "seek": 8072, "start": 91.44, "end": 99.12, "text": " but essentially we have a compiler, till that outputs Lua files. And so here's a quick taste of", "tokens": [50900, 457, 4476, 321, 362, 257, 31958, 11, 4288, 300, 23930, 441, 4398, 7098, 13, 400, 370, 510, 311, 257, 1702, 3939, 295, 51284], "temperature": 0.0, "avg_logprob": -0.17581865411055717, "compression_ratio": 1.562753036437247, "no_speech_prob": 0.004524874500930309}, {"id": 14, "seek": 8072, "start": 99.12, "end": 104.64, "text": " what till looks like. This is just like a random function I picked like from the source code of", "tokens": [51284, 437, 4288, 1542, 411, 13, 639, 307, 445, 411, 257, 4974, 2445, 286, 6183, 411, 490, 264, 4009, 3089, 295, 51560], "temperature": 0.0, "avg_logprob": -0.17581865411055717, "compression_ratio": 1.562753036437247, "no_speech_prob": 0.004524874500930309}, {"id": 15, "seek": 10464, "start": 105.24, "end": 114.56, "text": " the latest version of till that I'm working on. And so what's lighter here like is what is not Lua,", "tokens": [50394, 264, 6792, 3037, 295, 4288, 300, 286, 478, 1364, 322, 13, 400, 370, 437, 311, 11546, 510, 411, 307, 437, 307, 406, 441, 4398, 11, 50860], "temperature": 0.0, "avg_logprob": -0.21301692724227905, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.0038168528117239475}, {"id": 16, "seek": 10464, "start": 114.56, "end": 119.84, "text": " essentially the parts of till that are different from Lua. So we have a couple of different", "tokens": [50860, 4476, 264, 3166, 295, 4288, 300, 366, 819, 490, 441, 4398, 13, 407, 321, 362, 257, 1916, 295, 819, 51124], "temperature": 0.0, "avg_logprob": -0.21301692724227905, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.0038168528117239475}, {"id": 17, "seek": 10464, "start": 119.84, "end": 125.32, "text": " operators, you can add types there, but otherwise as you can see it's it's mostly regular Lua.", "tokens": [51124, 19077, 11, 291, 393, 909, 3467, 456, 11, 457, 5911, 382, 291, 393, 536, 309, 311, 309, 311, 5240, 3890, 441, 4398, 13, 51398], "temperature": 0.0, "avg_logprob": -0.21301692724227905, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.0038168528117239475}, {"id": 18, "seek": 10464, "start": 125.32, "end": 132.88, "text": " I made the mistake of talking about till before without showing lots of search code. So this time", "tokens": [51398, 286, 1027, 264, 6146, 295, 1417, 466, 4288, 949, 1553, 4099, 3195, 295, 3164, 3089, 13, 407, 341, 565, 51776], "temperature": 0.0, "avg_logprob": -0.21301692724227905, "compression_ratio": 1.6340425531914893, "no_speech_prob": 0.0038168528117239475}, {"id": 19, "seek": 13288, "start": 133.12, "end": 138.2, "text": " I'm gonna make sure I show source code till is like the epitome of like conference driven", "tokens": [50376, 286, 478, 799, 652, 988, 286, 855, 4009, 3089, 4288, 307, 411, 264, 2388, 270, 423, 295, 411, 7586, 9555, 50630], "temperature": 0.0, "avg_logprob": -0.2239201563709187, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00720655033364892}, {"id": 20, "seek": 13288, "start": 138.2, "end": 145.24, "text": " development because when I first had the idea I started like hacking it together and like when", "tokens": [50630, 3250, 570, 562, 286, 700, 632, 264, 1558, 286, 1409, 411, 31422, 309, 1214, 293, 411, 562, 50982], "temperature": 0.0, "avg_logprob": -0.2239201563709187, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00720655033364892}, {"id": 21, "seek": 13288, "start": 145.24, "end": 149.92, "text": " I first presented it like was the challenge like can we do this right? Can we add types while", "tokens": [50982, 286, 700, 8212, 309, 411, 390, 264, 3430, 411, 393, 321, 360, 341, 558, 30, 1664, 321, 909, 3467, 1339, 51216], "temperature": 0.0, "avg_logprob": -0.2239201563709187, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00720655033364892}, {"id": 22, "seek": 13288, "start": 149.92, "end": 154.28, "text": " remaining minimal and when I presented it back in 2019 like I was like halfway through like the", "tokens": [51216, 8877, 13206, 293, 562, 286, 8212, 309, 646, 294, 6071, 411, 286, 390, 411, 15461, 807, 411, 264, 51434], "temperature": 0.0, "avg_logprob": -0.2239201563709187, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00720655033364892}, {"id": 23, "seek": 13288, "start": 154.28, "end": 159.56, "text": " compiler student compile itself and I show like oh I started like 500 errors and I'm currently like", "tokens": [51434, 31958, 3107, 31413, 2564, 293, 286, 855, 411, 1954, 286, 1409, 411, 5923, 13603, 293, 286, 478, 4362, 411, 51698], "temperature": 0.0, "avg_logprob": -0.2239201563709187, "compression_ratio": 1.7752808988764044, "no_speech_prob": 0.00720655033364892}, {"id": 24, "seek": 15956, "start": 159.6, "end": 164.44, "text": " 100 or something like that. But eventually I got it working and then the next year I came back here", "tokens": [50366, 2319, 420, 746, 411, 300, 13, 583, 4728, 286, 658, 309, 1364, 293, 550, 264, 958, 1064, 286, 1361, 646, 510, 50608], "temperature": 0.0, "avg_logprob": -0.19316987333626584, "compression_ratio": 1.7610294117647058, "no_speech_prob": 0.01966085471212864}, {"id": 25, "seek": 15956, "start": 164.44, "end": 170.16, "text": " and show it to you and I said like minimalist type Lua is here and there's this weird title", "tokens": [50608, 293, 855, 309, 281, 291, 293, 286, 848, 411, 50192, 2010, 441, 4398, 307, 510, 293, 456, 311, 341, 3657, 4876, 50894], "temperature": 0.0, "avg_logprob": -0.19316987333626584, "compression_ratio": 1.7610294117647058, "no_speech_prob": 0.01966085471212864}, {"id": 26, "seek": 15956, "start": 170.16, "end": 177.04, "text": " because the language didn't have a name yet. So and then eventually at the third part of the", "tokens": [50894, 570, 264, 2856, 994, 380, 362, 257, 1315, 1939, 13, 407, 293, 550, 4728, 412, 264, 2636, 644, 295, 264, 51238], "temperature": 0.0, "avg_logprob": -0.19316987333626584, "compression_ratio": 1.7610294117647058, "no_speech_prob": 0.01966085471212864}, {"id": 27, "seek": 15956, "start": 177.04, "end": 182.04, "text": " trilogy we had a name and we actually had users and had stuff going actually going on with the", "tokens": [51238, 34030, 321, 632, 257, 1315, 293, 321, 767, 632, 5022, 293, 632, 1507, 516, 767, 516, 322, 365, 264, 51488], "temperature": 0.0, "avg_logprob": -0.19316987333626584, "compression_ratio": 1.7610294117647058, "no_speech_prob": 0.01966085471212864}, {"id": 28, "seek": 15956, "start": 182.04, "end": 187.56, "text": " language. But and then I basically said that well now I think I'm gonna get let it settle for a bit", "tokens": [51488, 2856, 13, 583, 293, 550, 286, 1936, 848, 300, 731, 586, 286, 519, 286, 478, 799, 483, 718, 309, 11852, 337, 257, 857, 51764], "temperature": 0.0, "avg_logprob": -0.19316987333626584, "compression_ratio": 1.7610294117647058, "no_speech_prob": 0.01966085471212864}, {"id": 29, "seek": 18756, "start": 187.96, "end": 192.24, "text": " so that people can actually use it because if the language keep changing syntax like all the time", "tokens": [50384, 370, 300, 561, 393, 767, 764, 309, 570, 498, 264, 2856, 1066, 4473, 28431, 411, 439, 264, 565, 50598], "temperature": 0.0, "avg_logprob": -0.1867703392392113, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.004191270098090172}, {"id": 30, "seek": 18756, "start": 192.24, "end": 200.52, "text": " and stuff like that like people won't feel comfortable adopting it right. So yeah so that's", "tokens": [50598, 293, 1507, 411, 300, 411, 561, 1582, 380, 841, 4619, 32328, 309, 558, 13, 407, 1338, 370, 300, 311, 51012], "temperature": 0.0, "avg_logprob": -0.1867703392392113, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.004191270098090172}, {"id": 31, "seek": 18756, "start": 200.52, "end": 205.12, "text": " what's be going like we have like this small community I always like to make a distinction", "tokens": [51012, 437, 311, 312, 516, 411, 321, 362, 411, 341, 1359, 1768, 286, 1009, 411, 281, 652, 257, 16844, 51242], "temperature": 0.0, "avg_logprob": -0.1867703392392113, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.004191270098090172}, {"id": 32, "seek": 18756, "start": 205.12, "end": 210.32, "text": " between like a community and a user base right because especially in the industry people like", "tokens": [51242, 1296, 411, 257, 1768, 293, 257, 4195, 3096, 558, 570, 2318, 294, 264, 3518, 561, 411, 51502], "temperature": 0.0, "avg_logprob": -0.1867703392392113, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.004191270098090172}, {"id": 33, "seek": 18756, "start": 210.32, "end": 215.16, "text": " to look at numbers so whenever people ask me how is still going like I tell him like oh we're like", "tokens": [51502, 281, 574, 412, 3547, 370, 5699, 561, 1029, 385, 577, 307, 920, 516, 411, 286, 980, 796, 411, 1954, 321, 434, 411, 51744], "temperature": 0.0, "avg_logprob": -0.1867703392392113, "compression_ratio": 1.8053435114503817, "no_speech_prob": 0.004191270098090172}, {"id": 34, "seek": 21516, "start": 215.2, "end": 221.6, "text": " 1.8k GitHub stars which is like the vanity metric like that doesn't really mean anything right but", "tokens": [50366, 502, 13, 23, 74, 23331, 6105, 597, 307, 411, 264, 44622, 20678, 411, 300, 1177, 380, 534, 914, 1340, 558, 457, 50686], "temperature": 0.0, "avg_logprob": -0.1935792231297755, "compression_ratio": 1.7899543378995433, "no_speech_prob": 0.006266615819185972}, {"id": 35, "seek": 21516, "start": 221.6, "end": 226.92, "text": " it means something right but in but in practice when I when I think about a community I think", "tokens": [50686, 309, 1355, 746, 558, 457, 294, 457, 294, 3124, 562, 286, 562, 286, 519, 466, 257, 1768, 286, 519, 50952], "temperature": 0.0, "avg_logprob": -0.1935792231297755, "compression_ratio": 1.7899543378995433, "no_speech_prob": 0.006266615819185972}, {"id": 36, "seek": 21516, "start": 226.92, "end": 232.2, "text": " about the people who are involved with it and then I could say like like oh there there are like all", "tokens": [50952, 466, 264, 561, 567, 366, 3288, 365, 309, 293, 550, 286, 727, 584, 411, 411, 1954, 456, 456, 366, 411, 439, 51216], "temperature": 0.0, "avg_logprob": -0.1935792231297755, "compression_ratio": 1.7899543378995433, "no_speech_prob": 0.006266615819185972}, {"id": 37, "seek": 21516, "start": 232.2, "end": 239.48, "text": " of the other people who gotten involved right because I'm just doing the source-to-source compiler", "tokens": [51216, 295, 264, 661, 561, 567, 5768, 3288, 558, 570, 286, 478, 445, 884, 264, 4009, 12, 1353, 12, 41676, 31958, 51580], "temperature": 0.0, "avg_logprob": -0.1935792231297755, "compression_ratio": 1.7899543378995433, "no_speech_prob": 0.006266615819185972}, {"id": 38, "seek": 23948, "start": 239.84, "end": 245.51999999999998, "text": " right and then there's people doing the build system there's people doing like the VS code", "tokens": [50382, 558, 293, 550, 456, 311, 561, 884, 264, 1322, 1185, 456, 311, 561, 884, 411, 264, 25091, 3089, 50666], "temperature": 0.0, "avg_logprob": -0.20254158973693848, "compression_ratio": 1.817490494296578, "no_speech_prob": 0.06337157636880875}, {"id": 39, "seek": 23948, "start": 245.51999999999998, "end": 251.76, "text": " plugin right that gives like IDE autocomplete those sorts of things so in nowadays for a language", "tokens": [50666, 23407, 558, 300, 2709, 411, 40930, 45833, 298, 17220, 729, 7527, 295, 721, 370, 294, 13434, 337, 257, 2856, 50978], "temperature": 0.0, "avg_logprob": -0.20254158973693848, "compression_ratio": 1.817490494296578, "no_speech_prob": 0.06337157636880875}, {"id": 40, "seek": 23948, "start": 251.76, "end": 257.36, "text": " that's that's part of the whole package that's what expected of a modern language right so if I if", "tokens": [50978, 300, 311, 300, 311, 644, 295, 264, 1379, 7372, 300, 311, 437, 5176, 295, 257, 4363, 2856, 558, 370, 498, 286, 498, 51258], "temperature": 0.0, "avg_logprob": -0.20254158973693848, "compression_ratio": 1.817490494296578, "no_speech_prob": 0.06337157636880875}, {"id": 41, "seek": 23948, "start": 257.36, "end": 261.44, "text": " I think on when I think of the two community I think about like I don't know like 10 people or", "tokens": [51258, 286, 519, 322, 562, 286, 519, 295, 264, 732, 1768, 286, 519, 466, 411, 286, 500, 380, 458, 411, 1266, 561, 420, 51462], "temperature": 0.0, "avg_logprob": -0.20254158973693848, "compression_ratio": 1.817490494296578, "no_speech_prob": 0.06337157636880875}, {"id": 42, "seek": 23948, "start": 261.44, "end": 266.76, "text": " or even less right but the people who regularly discuss on GitHub and all of that so right that", "tokens": [51462, 420, 754, 1570, 558, 457, 264, 561, 567, 11672, 2248, 322, 23331, 293, 439, 295, 300, 370, 558, 300, 51728], "temperature": 0.0, "avg_logprob": -0.20254158973693848, "compression_ratio": 1.817490494296578, "no_speech_prob": 0.06337157636880875}, {"id": 43, "seek": 26676, "start": 267.03999999999996, "end": 275.68, "text": " that's the community right like the human aspect of it and speaking of community feedback here is", "tokens": [50378, 300, 311, 264, 1768, 558, 411, 264, 1952, 4171, 295, 309, 293, 4124, 295, 1768, 5824, 510, 307, 50810], "temperature": 0.0, "avg_logprob": -0.1829140229658647, "compression_ratio": 1.9215686274509804, "no_speech_prob": 0.007558331824839115}, {"id": 44, "seek": 26676, "start": 275.68, "end": 280.0, "text": " like this is a full screenshot of like all of like if you go through all of the issues pages", "tokens": [50810, 411, 341, 307, 257, 1577, 27712, 295, 411, 439, 295, 411, 498, 291, 352, 807, 439, 295, 264, 2663, 7183, 51026], "temperature": 0.0, "avg_logprob": -0.1829140229658647, "compression_ratio": 1.9215686274509804, "no_speech_prob": 0.007558331824839115}, {"id": 45, "seek": 26676, "start": 280.0, "end": 285.03999999999996, "text": " there are currently like if you open the the till GitHub repo right now there's like 67 issues like", "tokens": [51026, 456, 366, 4362, 411, 498, 291, 1269, 264, 264, 4288, 23331, 49040, 558, 586, 456, 311, 411, 23879, 2663, 411, 51278], "temperature": 0.0, "avg_logprob": -0.1829140229658647, "compression_ratio": 1.9215686274509804, "no_speech_prob": 0.007558331824839115}, {"id": 46, "seek": 26676, "start": 285.03999999999996, "end": 290.8, "text": " these are all of them right and I one thing I hate about GitHub is that they call everything issues", "tokens": [51278, 613, 366, 439, 295, 552, 558, 293, 286, 472, 551, 286, 4700, 466, 23331, 307, 300, 436, 818, 1203, 2663, 51566], "temperature": 0.0, "avg_logprob": -0.1829140229658647, "compression_ratio": 1.9215686274509804, "no_speech_prob": 0.007558331824839115}, {"id": 47, "seek": 26676, "start": 290.8, "end": 296.0, "text": " right so like feature requests like back in the days of search for so we're like separate pages for", "tokens": [51566, 558, 370, 411, 4111, 12475, 411, 646, 294, 264, 1708, 295, 3164, 337, 370, 321, 434, 411, 4994, 7183, 337, 51826], "temperature": 0.0, "avg_logprob": -0.1829140229658647, "compression_ratio": 1.9215686274509804, "no_speech_prob": 0.007558331824839115}, {"id": 48, "seek": 29600, "start": 296.04, "end": 301.36, "text": " like bugs and feature requests right and out like calling a feature request issue I think it's like", "tokens": [50366, 411, 15120, 293, 4111, 12475, 558, 293, 484, 411, 5141, 257, 4111, 5308, 2734, 286, 519, 309, 311, 411, 50632], "temperature": 0.0, "avg_logprob": -0.10063616434733073, "compression_ratio": 1.9795918367346939, "no_speech_prob": 0.002796664135530591}, {"id": 49, "seek": 29600, "start": 301.36, "end": 306.44, "text": " super weird like I would like the program to do something that you did not design it to do now", "tokens": [50632, 1687, 3657, 411, 286, 576, 411, 264, 1461, 281, 360, 746, 300, 291, 630, 406, 1715, 309, 281, 360, 586, 50886], "temperature": 0.0, "avg_logprob": -0.10063616434733073, "compression_ratio": 1.9795918367346939, "no_speech_prob": 0.002796664135530591}, {"id": 50, "seek": 29600, "start": 306.44, "end": 313.76, "text": " your code has issues right it's like no so basically what I do I label all of them like so the ones", "tokens": [50886, 428, 3089, 575, 2663, 558, 309, 311, 411, 572, 370, 1936, 437, 286, 360, 286, 7645, 439, 295, 552, 411, 370, 264, 2306, 51252], "temperature": 0.0, "avg_logprob": -0.10063616434733073, "compression_ratio": 1.9795918367346939, "no_speech_prob": 0.002796664135530591}, {"id": 51, "seek": 29600, "start": 313.76, "end": 318.32, "text": " with the light labels here are feature requests and the ones with like the darker labels which are", "tokens": [51252, 365, 264, 1442, 16949, 510, 366, 4111, 12475, 293, 264, 2306, 365, 411, 264, 12741, 16949, 597, 366, 51480], "temperature": 0.0, "avg_logprob": -0.10063616434733073, "compression_ratio": 1.9795918367346939, "no_speech_prob": 0.002796664135530591}, {"id": 52, "seek": 29600, "start": 318.32, "end": 323.84, "text": " like the red ones those are the bugs right so I currently have like five open bugs and like", "tokens": [51480, 411, 264, 2182, 2306, 729, 366, 264, 15120, 558, 370, 286, 4362, 362, 411, 1732, 1269, 15120, 293, 411, 51756], "temperature": 0.0, "avg_logprob": -0.10063616434733073, "compression_ratio": 1.9795918367346939, "no_speech_prob": 0.002796664135530591}, {"id": 53, "seek": 32384, "start": 324.79999999999995, "end": 332.15999999999997, "text": " three pages of feature requests right and and it's nice like sometimes you don't want to close", "tokens": [50412, 1045, 7183, 295, 4111, 12475, 558, 293, 293, 309, 311, 1481, 411, 2171, 291, 500, 380, 528, 281, 1998, 50780], "temperature": 0.0, "avg_logprob": -0.1357778821672712, "compression_ratio": 1.80078125, "no_speech_prob": 0.004600835964083672}, {"id": 54, "seek": 32384, "start": 332.15999999999997, "end": 335.28, "text": " your feature request you want to keep them around so that other people who have the same", "tokens": [50780, 428, 4111, 5308, 291, 528, 281, 1066, 552, 926, 370, 300, 661, 561, 567, 362, 264, 912, 50936], "temperature": 0.0, "avg_logprob": -0.1357778821672712, "compression_ratio": 1.80078125, "no_speech_prob": 0.004600835964083672}, {"id": 55, "seek": 32384, "start": 335.28, "end": 340.08, "text": " request can see and comment on them right so basically over time your job is going to keep", "tokens": [50936, 5308, 393, 536, 293, 2871, 322, 552, 558, 370, 1936, 670, 565, 428, 1691, 307, 516, 281, 1066, 51176], "temperature": 0.0, "avg_logprob": -0.1357778821672712, "compression_ratio": 1.80078125, "no_speech_prob": 0.004600835964083672}, {"id": 56, "seek": 32384, "start": 340.08, "end": 343.44, "text": " accumulated an endless list of feature requests you're going to look at the repo and one day", "tokens": [51176, 31346, 364, 16144, 1329, 295, 4111, 12475, 291, 434, 516, 281, 574, 412, 264, 49040, 293, 472, 786, 51344], "temperature": 0.0, "avg_logprob": -0.1357778821672712, "compression_ratio": 1.80078125, "no_speech_prob": 0.004600835964083672}, {"id": 57, "seek": 32384, "start": 343.44, "end": 349.91999999999996, "text": " will have like 200 open issues oh this program must be all broken right no no it has a lot of", "tokens": [51344, 486, 362, 411, 2331, 1269, 2663, 1954, 341, 1461, 1633, 312, 439, 5463, 558, 572, 572, 309, 575, 257, 688, 295, 51668], "temperature": 0.0, "avg_logprob": -0.1357778821672712, "compression_ratio": 1.80078125, "no_speech_prob": 0.004600835964083672}, {"id": 58, "seek": 34992, "start": 349.92, "end": 354.64000000000004, "text": " people who are very interested in it this is actually a sign of success like people are interested", "tokens": [50364, 561, 567, 366, 588, 3102, 294, 309, 341, 307, 767, 257, 1465, 295, 2245, 411, 561, 366, 3102, 50600], "temperature": 0.0, "avg_logprob": -0.09244727229212855, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.017149945721030235}, {"id": 59, "seek": 34992, "start": 354.64000000000004, "end": 362.96000000000004, "text": " in your program enough so that they are using it and asking for more stuff right so yeah so but then", "tokens": [50600, 294, 428, 1461, 1547, 370, 300, 436, 366, 1228, 309, 293, 3365, 337, 544, 1507, 558, 370, 1338, 370, 457, 550, 51016], "temperature": 0.0, "avg_logprob": -0.09244727229212855, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.017149945721030235}, {"id": 60, "seek": 34992, "start": 362.96000000000004, "end": 366.64, "text": " once you have this many feature requests like and we're here talking about minimalism how to keep", "tokens": [51016, 1564, 291, 362, 341, 867, 4111, 12475, 411, 293, 321, 434, 510, 1417, 466, 13206, 1434, 577, 281, 1066, 51200], "temperature": 0.0, "avg_logprob": -0.09244727229212855, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.017149945721030235}, {"id": 61, "seek": 34992, "start": 366.64, "end": 371.76, "text": " the language small right I cannot add everything that people ask for and this is like my hobby side", "tokens": [51200, 264, 2856, 1359, 558, 286, 2644, 909, 1203, 300, 561, 1029, 337, 293, 341, 307, 411, 452, 18240, 1252, 51456], "temperature": 0.0, "avg_logprob": -0.09244727229212855, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.017149945721030235}, {"id": 62, "seek": 34992, "start": 371.76, "end": 376.56, "text": " project currently I don't even have the time even if I wanted to right but I don't want to because", "tokens": [51456, 1716, 4362, 286, 500, 380, 754, 362, 264, 565, 754, 498, 286, 1415, 281, 558, 457, 286, 500, 380, 528, 281, 570, 51696], "temperature": 0.0, "avg_logprob": -0.09244727229212855, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.017149945721030235}, {"id": 63, "seek": 37656, "start": 376.56, "end": 382.08, "text": " I wanted to keep it small keeping to the like that idea from the very first talk like the challenge", "tokens": [50364, 286, 1415, 281, 1066, 309, 1359, 5145, 281, 264, 411, 300, 1558, 490, 264, 588, 700, 751, 411, 264, 3430, 50640], "temperature": 0.0, "avg_logprob": -0.06922322894455096, "compression_ratio": 1.9959514170040487, "no_speech_prob": 0.0022494010627269745}, {"id": 64, "seek": 37656, "start": 382.08, "end": 387.84, "text": " was how to keep it small right and the challenging thing is like I can't add everything that people", "tokens": [50640, 390, 577, 281, 1066, 309, 1359, 558, 293, 264, 7595, 551, 307, 411, 286, 393, 380, 909, 1203, 300, 561, 50928], "temperature": 0.0, "avg_logprob": -0.06922322894455096, "compression_ratio": 1.9959514170040487, "no_speech_prob": 0.0022494010627269745}, {"id": 65, "seek": 37656, "start": 387.84, "end": 392.32, "text": " ask for or even everything that people contribute because not only people go there and ask feature", "tokens": [50928, 1029, 337, 420, 754, 1203, 300, 561, 10586, 570, 406, 787, 561, 352, 456, 293, 1029, 4111, 51152], "temperature": 0.0, "avg_logprob": -0.06922322894455096, "compression_ratio": 1.9959514170040487, "no_speech_prob": 0.0022494010627269745}, {"id": 66, "seek": 37656, "start": 392.32, "end": 400.0, "text": " requests some people actually send in features like all written like a spoil requests like like I", "tokens": [51152, 12475, 512, 561, 767, 2845, 294, 4122, 411, 439, 3720, 411, 257, 18630, 12475, 411, 411, 286, 51536], "temperature": 0.0, "avg_logprob": -0.06922322894455096, "compression_ratio": 1.9959514170040487, "no_speech_prob": 0.0022494010627269745}, {"id": 67, "seek": 37656, "start": 400.0, "end": 405.76, "text": " would like to do this extra thing and here's the code to do it please add it and I go like sorry", "tokens": [51536, 576, 411, 281, 360, 341, 2857, 551, 293, 510, 311, 264, 3089, 281, 360, 309, 1767, 909, 309, 293, 286, 352, 411, 2597, 51824], "temperature": 0.0, "avg_logprob": -0.06922322894455096, "compression_ratio": 1.9959514170040487, "no_speech_prob": 0.0022494010627269745}, {"id": 68, "seek": 40576, "start": 405.76, "end": 415.68, "text": " right but but it's super important feedback right so uh yeah but when you go go back like it's always", "tokens": [50364, 558, 457, 457, 309, 311, 1687, 1021, 5824, 558, 370, 2232, 1338, 457, 562, 291, 352, 352, 646, 411, 309, 311, 1009, 50860], "temperature": 0.0, "avg_logprob": -0.1053150040762765, "compression_ratio": 1.689265536723164, "no_speech_prob": 0.004252896178513765}, {"id": 69, "seek": 40576, "start": 415.68, "end": 421.03999999999996, "text": " nice to look at that whole list and look try to look at the big picture right and then I saw like two", "tokens": [50860, 1481, 281, 574, 412, 300, 1379, 1329, 293, 574, 853, 281, 574, 412, 264, 955, 3036, 558, 293, 550, 286, 1866, 411, 732, 51128], "temperature": 0.0, "avg_logprob": -0.1053150040762765, "compression_ratio": 1.689265536723164, "no_speech_prob": 0.004252896178513765}, {"id": 70, "seek": 40576, "start": 421.03999999999996, "end": 428.0, "text": " like very recurring themes on things that people were asking for like related about like one is", "tokens": [51128, 411, 588, 32279, 13544, 322, 721, 300, 561, 645, 3365, 337, 411, 4077, 466, 411, 472, 307, 51476], "temperature": 0.0, "avg_logprob": -0.1053150040762765, "compression_ratio": 1.689265536723164, "no_speech_prob": 0.004252896178513765}, {"id": 71, "seek": 42800, "start": 428.0, "end": 436.4, "text": " like nil safety right the famous uh billion dollar mistake right as as mentioned by touring award winner", "tokens": [50364, 411, 297, 388, 4514, 558, 264, 4618, 2232, 5218, 7241, 6146, 558, 382, 382, 2835, 538, 32487, 7130, 8507, 50784], "temperature": 0.0, "avg_logprob": -0.10832754522562027, "compression_ratio": 1.6117021276595744, "no_speech_prob": 0.15549415349960327}, {"id": 72, "seek": 42800, "start": 436.4, "end": 444.24, "text": " like 24 when he talked about this uh saying like adding the concept of null to a programming language", "tokens": [50784, 411, 4022, 562, 415, 2825, 466, 341, 2232, 1566, 411, 5127, 264, 3410, 295, 18184, 281, 257, 9410, 2856, 51176], "temperature": 0.0, "avg_logprob": -0.10832754522562027, "compression_ratio": 1.6117021276595744, "no_speech_prob": 0.15549415349960327}, {"id": 73, "seek": 42800, "start": 444.24, "end": 450.24, "text": " was back in the day was his mistake because like everything that came out of that afterwards and", "tokens": [51176, 390, 646, 294, 264, 786, 390, 702, 6146, 570, 411, 1203, 300, 1361, 484, 295, 300, 10543, 293, 51476], "temperature": 0.0, "avg_logprob": -0.10832754522562027, "compression_ratio": 1.6117021276595744, "no_speech_prob": 0.15549415349960327}, {"id": 74, "seek": 45024, "start": 450.48, "end": 457.28000000000003, "text": " um and lua is another of those language this does has like a nil type right and all of the", "tokens": [50376, 1105, 293, 287, 4398, 307, 1071, 295, 729, 2856, 341, 775, 575, 411, 257, 297, 388, 2010, 558, 293, 439, 295, 264, 50716], "temperature": 0.0, "avg_logprob": -0.10344272920455055, "compression_ratio": 1.8, "no_speech_prob": 0.04666690528392792}, {"id": 75, "seek": 45024, "start": 457.28000000000003, "end": 464.0, "text": " consequences come with that uh and the other one is that people keep asking for abilities to express", "tokens": [50716, 10098, 808, 365, 300, 2232, 293, 264, 661, 472, 307, 300, 561, 1066, 3365, 337, 11582, 281, 5109, 51052], "temperature": 0.0, "avg_logprob": -0.10344272920455055, "compression_ratio": 1.8, "no_speech_prob": 0.04666690528392792}, {"id": 76, "seek": 45024, "start": 464.56, "end": 469.68, "text": " more complex table types because lua is like every like the only single composite type that you have", "tokens": [51080, 544, 3997, 3199, 3467, 570, 287, 4398, 307, 411, 633, 411, 264, 787, 2167, 25557, 2010, 300, 291, 362, 51336], "temperature": 0.0, "avg_logprob": -0.10344272920455055, "compression_ratio": 1.8, "no_speech_prob": 0.04666690528392792}, {"id": 77, "seek": 45024, "start": 469.68, "end": 475.84000000000003, "text": " like apart from like integers like like numbers bullions like and like tables right which is a", "tokens": [51336, 411, 4936, 490, 411, 41674, 411, 411, 3547, 4693, 626, 411, 293, 411, 8020, 558, 597, 307, 257, 51644], "temperature": 0.0, "avg_logprob": -0.10344272920455055, "compression_ratio": 1.8, "no_speech_prob": 0.04666690528392792}, {"id": 78, "seek": 47584, "start": 475.84, "end": 482.79999999999995, "text": " thing that doubles as a hash table and an array right like it's there's a thing with keys and values", "tokens": [50364, 551, 300, 31634, 382, 257, 22019, 3199, 293, 364, 10225, 558, 411, 309, 311, 456, 311, 257, 551, 365, 9317, 293, 4190, 50712], "temperature": 0.0, "avg_logprob": -0.06105904002766033, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.015657054260373116}, {"id": 79, "seek": 47584, "start": 482.79999999999995, "end": 488.56, "text": " and if you use numbers the the it has like some special behaviors to make an array access efficient", "tokens": [50712, 293, 498, 291, 764, 3547, 264, 264, 309, 575, 411, 512, 2121, 15501, 281, 652, 364, 10225, 2105, 7148, 51000], "temperature": 0.0, "avg_logprob": -0.06105904002766033, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.015657054260373116}, {"id": 80, "seek": 47584, "start": 488.56, "end": 494.15999999999997, "text": " but otherwise just think of it as one big thing with keys and values but once you start talking", "tokens": [51000, 457, 5911, 445, 519, 295, 309, 382, 472, 955, 551, 365, 9317, 293, 4190, 457, 1564, 291, 722, 1417, 51280], "temperature": 0.0, "avg_logprob": -0.06105904002766033, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.015657054260373116}, {"id": 81, "seek": 47584, "start": 494.15999999999997, "end": 499.28, "text": " about types you look like oh this table is really an object this table is really a map this table is", "tokens": [51280, 466, 3467, 291, 574, 411, 1954, 341, 3199, 307, 534, 364, 2657, 341, 3199, 307, 534, 257, 4471, 341, 3199, 307, 51536], "temperature": 0.0, "avg_logprob": -0.06105904002766033, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.015657054260373116}, {"id": 82, "seek": 49928, "start": 499.28, "end": 506.32, "text": " really an array this table is really a a map except when you use integer keys then i wanted to", "tokens": [50364, 534, 364, 10225, 341, 3199, 307, 534, 257, 257, 4471, 3993, 562, 291, 764, 24922, 9317, 550, 741, 1415, 281, 50716], "temperature": 0.0, "avg_logprob": -0.06467303362759677, "compression_ratio": 1.876923076923077, "no_speech_prob": 0.016895633190870285}, {"id": 83, "seek": 49928, "start": 506.32, "end": 509.84, "text": " act as an array like these are kind of things that lua programmers do all the time because once you", "tokens": [50716, 605, 382, 364, 10225, 411, 613, 366, 733, 295, 721, 300, 287, 4398, 41504, 360, 439, 264, 565, 570, 1564, 291, 50892], "temperature": 0.0, "avg_logprob": -0.06467303362759677, "compression_ratio": 1.876923076923077, "no_speech_prob": 0.016895633190870285}, {"id": 84, "seek": 49928, "start": 509.84, "end": 514.0799999999999, "text": " have a table that accepts everything right you start having these composite types and all these", "tokens": [50892, 362, 257, 3199, 300, 33538, 1203, 558, 291, 722, 1419, 613, 25557, 3467, 293, 439, 613, 51104], "temperature": 0.0, "avg_logprob": -0.06467303362759677, "compression_ratio": 1.876923076923077, "no_speech_prob": 0.016895633190870285}, {"id": 85, "seek": 49928, "start": 514.0799999999999, "end": 520.0, "text": " weird things and but then people mix it up right and those are the bugs that people run into when", "tokens": [51104, 3657, 721, 293, 457, 550, 561, 2890, 309, 493, 558, 293, 729, 366, 264, 15120, 300, 561, 1190, 666, 562, 51400], "temperature": 0.0, "avg_logprob": -0.06467303362759677, "compression_ratio": 1.876923076923077, "no_speech_prob": 0.016895633190870285}, {"id": 86, "seek": 49928, "start": 520.0, "end": 526.56, "text": " they're coding in lua with no explicit typing and they would like teal to help them with that right", "tokens": [51400, 436, 434, 17720, 294, 287, 4398, 365, 572, 13691, 18444, 293, 436, 576, 411, 535, 304, 281, 854, 552, 365, 300, 558, 51728], "temperature": 0.0, "avg_logprob": -0.06467303362759677, "compression_ratio": 1.876923076923077, "no_speech_prob": 0.016895633190870285}, {"id": 87, "seek": 52928, "start": 529.4399999999999, "end": 534.56, "text": " so let's talk about the first one uh a little uh so as i mentioned i was mentioning like", "tokens": [50372, 370, 718, 311, 751, 466, 264, 700, 472, 2232, 257, 707, 2232, 370, 382, 741, 2835, 741, 390, 18315, 411, 50628], "temperature": 0.0, "avg_logprob": -0.07457557566025678, "compression_ratio": 1.7980769230769231, "no_speech_prob": 0.004392724484205246}, {"id": 88, "seek": 52928, "start": 534.56, "end": 540.88, "text": " giving that every variable can accept nil and you can pass stuff around like that uh until", "tokens": [50628, 2902, 300, 633, 7006, 393, 3241, 297, 388, 293, 291, 393, 1320, 1507, 926, 411, 300, 2232, 1826, 50944], "temperature": 0.0, "avg_logprob": -0.07457557566025678, "compression_ratio": 1.7980769230769231, "no_speech_prob": 0.004392724484205246}, {"id": 89, "seek": 52928, "start": 540.88, "end": 546.64, "text": " basically every type includes nil as a possible value right if you declare a variable as integer", "tokens": [50944, 1936, 633, 2010, 5974, 297, 388, 382, 257, 1944, 2158, 558, 498, 291, 19710, 257, 7006, 382, 24922, 51232], "temperature": 0.0, "avg_logprob": -0.07457557566025678, "compression_ratio": 1.7980769230769231, "no_speech_prob": 0.004392724484205246}, {"id": 90, "seek": 52928, "start": 546.64, "end": 551.92, "text": " you can still put nil in there like essentially every variable is like optional right and in that", "tokens": [51232, 291, 393, 920, 829, 297, 388, 294, 456, 411, 4476, 633, 7006, 307, 411, 17312, 558, 293, 294, 300, 51496], "temperature": 0.0, "avg_logprob": -0.07457557566025678, "compression_ratio": 1.7980769230769231, "no_speech_prob": 0.004392724484205246}, {"id": 91, "seek": 55192, "start": 551.92, "end": 558.7199999999999, "text": " sense so this has some consequences right this makes for example that uh in lua like you declare", "tokens": [50364, 2020, 370, 341, 575, 512, 10098, 558, 341, 1669, 337, 1365, 300, 2232, 294, 287, 4398, 411, 291, 19710, 50704], "temperature": 0.0, "avg_logprob": -0.0657563643022017, "compression_ratio": 1.9206349206349207, "no_speech_prob": 0.02261441759765148}, {"id": 92, "seek": 55192, "start": 558.7199999999999, "end": 563.5999999999999, "text": " a function to have like three arguments you can just pass one argument or no arguments and like", "tokens": [50704, 257, 2445, 281, 362, 411, 1045, 12869, 291, 393, 445, 1320, 472, 6770, 420, 572, 12869, 293, 411, 50948], "temperature": 0.0, "avg_logprob": -0.0657563643022017, "compression_ratio": 1.9206349206349207, "no_speech_prob": 0.02261441759765148}, {"id": 93, "seek": 55192, "start": 563.5999999999999, "end": 567.92, "text": " the lua vm will accept it and people do that on purpose because essentially they mean like oh in", "tokens": [50948, 264, 287, 4398, 371, 76, 486, 3241, 309, 293, 561, 360, 300, 322, 4334, 570, 4476, 436, 914, 411, 1954, 294, 51164], "temperature": 0.0, "avg_logprob": -0.0657563643022017, "compression_ratio": 1.9206349206349207, "no_speech_prob": 0.02261441759765148}, {"id": 94, "seek": 55192, "start": 567.92, "end": 574.3199999999999, "text": " the semantics of my my application that argument is optional right so uh so lua accepts that and", "tokens": [51164, 264, 4361, 45298, 295, 452, 452, 3861, 300, 6770, 307, 17312, 558, 370, 2232, 370, 287, 4398, 33538, 300, 293, 51484], "temperature": 0.0, "avg_logprob": -0.0657563643022017, "compression_ratio": 1.9206349206349207, "no_speech_prob": 0.02261441759765148}, {"id": 95, "seek": 55192, "start": 574.3199999999999, "end": 581.12, "text": " because lua accepts that teal accepts that right and uh another side effect is that in table like", "tokens": [51484, 570, 287, 4398, 33538, 300, 535, 304, 33538, 300, 558, 293, 2232, 1071, 1252, 1802, 307, 300, 294, 3199, 411, 51824], "temperature": 0.0, "avg_logprob": -0.0657563643022017, "compression_ratio": 1.9206349206349207, "no_speech_prob": 0.02261441759765148}, {"id": 96, "seek": 58112, "start": 581.2, "end": 588.88, "text": " missing keys are valid right so um people let's say you define a function that operates on a table", "tokens": [50368, 5361, 9317, 366, 7363, 558, 370, 1105, 561, 718, 311, 584, 291, 6964, 257, 2445, 300, 22577, 322, 257, 3199, 50752], "temperature": 0.0, "avg_logprob": -0.08000368963588368, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0013036784948781133}, {"id": 97, "seek": 58112, "start": 588.88, "end": 596.24, "text": " that has like x and y uh fields right uh but then your in your program since you decide", "tokens": [50752, 300, 575, 411, 2031, 293, 288, 2232, 7909, 558, 2232, 457, 550, 428, 294, 428, 1461, 1670, 291, 4536, 51120], "temperature": 0.0, "avg_logprob": -0.08000368963588368, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0013036784948781133}, {"id": 98, "seek": 58112, "start": 596.24, "end": 599.76, "text": " since you designed that function that just wants to take something that takes x and y you want to", "tokens": [51120, 1670, 291, 4761, 300, 2445, 300, 445, 2738, 281, 747, 746, 300, 2516, 2031, 293, 288, 291, 528, 281, 51296], "temperature": 0.0, "avg_logprob": -0.08000368963588368, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0013036784948781133}, {"id": 99, "seek": 58112, "start": 599.76, "end": 607.12, "text": " pass other things right that have extra fields and sometimes they don't right so uh it gets it gets", "tokens": [51296, 1320, 661, 721, 558, 300, 362, 2857, 7909, 293, 2171, 436, 500, 380, 558, 370, 2232, 309, 2170, 309, 2170, 51664], "temperature": 0.0, "avg_logprob": -0.08000368963588368, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.0013036784948781133}, {"id": 100, "seek": 60712, "start": 607.12, "end": 615.04, "text": " really messy right uh so in one of the previous talks i mentioned about like that i started looking", "tokens": [50364, 534, 16191, 558, 2232, 370, 294, 472, 295, 264, 3894, 6686, 741, 2835, 466, 411, 300, 741, 1409, 1237, 50760], "temperature": 0.0, "avg_logprob": -0.06057060575022281, "compression_ratio": 1.9473684210526316, "no_speech_prob": 0.0009842799045145512}, {"id": 101, "seek": 60712, "start": 615.04, "end": 622.08, "text": " at like doing the whole thing about uh implementing like nullability checks into the variables and", "tokens": [50760, 412, 411, 884, 264, 1379, 551, 466, 2232, 18114, 411, 18184, 2310, 13834, 666, 264, 9102, 293, 51112], "temperature": 0.0, "avg_logprob": -0.06057060575022281, "compression_ratio": 1.9473684210526316, "no_speech_prob": 0.0009842799045145512}, {"id": 102, "seek": 60712, "start": 622.08, "end": 627.12, "text": " how like and i showed like the size of the teal compiler source code versus the size of like", "tokens": [51112, 577, 411, 293, 741, 4712, 411, 264, 2744, 295, 264, 535, 304, 31958, 4009, 3089, 5717, 264, 2744, 295, 411, 51364], "temperature": 0.0, "avg_logprob": -0.06057060575022281, "compression_ratio": 1.9473684210526316, "no_speech_prob": 0.0009842799045145512}, {"id": 103, "seek": 60712, "start": 627.12, "end": 631.84, "text": " all of the code to do proper reachability tests for null variables and everything and make like", "tokens": [51364, 439, 295, 264, 3089, 281, 360, 2296, 2524, 2310, 6921, 337, 18184, 9102, 293, 1203, 293, 652, 411, 51600], "temperature": 0.0, "avg_logprob": -0.06057060575022281, "compression_ratio": 1.9473684210526316, "no_speech_prob": 0.0009842799045145512}, {"id": 104, "seek": 60712, "start": 631.84, "end": 636.48, "text": " the whole check super automatic and it started to get like bigger than the compiler itself uh", "tokens": [51600, 264, 1379, 1520, 1687, 12509, 293, 309, 1409, 281, 483, 411, 3801, 813, 264, 31958, 2564, 2232, 51832], "temperature": 0.0, "avg_logprob": -0.06057060575022281, "compression_ratio": 1.9473684210526316, "no_speech_prob": 0.0009842799045145512}, {"id": 105, "seek": 63648, "start": 637.12, "end": 642.4, "text": " so that was sort of like a complete but heavyweight solution right so a very lightweight solution or", "tokens": [50396, 370, 300, 390, 1333, 295, 411, 257, 3566, 457, 4676, 12329, 3827, 558, 370, 257, 588, 22052, 3827, 420, 50660], "temperature": 0.0, "avg_logprob": -0.051345743314184324, "compression_ratio": 1.9593495934959348, "no_speech_prob": 0.0005700629553757608}, {"id": 106, "seek": 63648, "start": 642.4, "end": 647.52, "text": " i would say lighter weight solution like then actually having the proper optional types that", "tokens": [50660, 741, 576, 584, 11546, 3364, 3827, 411, 550, 767, 1419, 264, 2296, 17312, 3467, 300, 50916], "temperature": 0.0, "avg_logprob": -0.051345743314184324, "compression_ratio": 1.9593495934959348, "no_speech_prob": 0.0005700629553757608}, {"id": 107, "seek": 63648, "start": 647.52, "end": 652.8000000000001, "text": " people really want right was to have just arity checks which is like how many things you actually", "tokens": [50916, 561, 534, 528, 558, 390, 281, 362, 445, 594, 507, 13834, 597, 307, 411, 577, 867, 721, 291, 767, 51180], "temperature": 0.0, "avg_logprob": -0.051345743314184324, "compression_ratio": 1.9593495934959348, "no_speech_prob": 0.0005700629553757608}, {"id": 108, "seek": 63648, "start": 652.8000000000001, "end": 659.6, "text": " put inside the parentheses when calling a function right so and yes if eventually we find like a", "tokens": [51180, 829, 1854, 264, 34153, 562, 5141, 257, 2445, 558, 370, 293, 2086, 498, 4728, 321, 915, 411, 257, 51520], "temperature": 0.0, "avg_logprob": -0.051345743314184324, "compression_ratio": 1.9593495934959348, "no_speech_prob": 0.0005700629553757608}, {"id": 109, "seek": 63648, "start": 659.6, "end": 664.64, "text": " lightweight way to like nicely do optional types this will become sort of a redundant feature", "tokens": [51520, 22052, 636, 281, 411, 9594, 360, 17312, 3467, 341, 486, 1813, 1333, 295, 257, 40997, 4111, 51772], "temperature": 0.0, "avg_logprob": -0.051345743314184324, "compression_ratio": 1.9593495934959348, "no_speech_prob": 0.0005700629553757608}, {"id": 110, "seek": 66464, "start": 665.36, "end": 669.6, "text": " but this is this is what it looks like right if you have a function that takes like", "tokens": [50400, 457, 341, 307, 341, 307, 437, 309, 1542, 411, 558, 498, 291, 362, 257, 2445, 300, 2516, 411, 50612], "temperature": 0.0, "avg_logprob": -0.0517585520016945, "compression_ratio": 2.0211864406779663, "no_speech_prob": 0.0017806625692173839}, {"id": 111, "seek": 66464, "start": 670.56, "end": 674.96, "text": " two parameters like if you pass two parameters then it's valid so if you just pass one parameter", "tokens": [50660, 732, 9834, 411, 498, 291, 1320, 732, 9834, 550, 309, 311, 7363, 370, 498, 291, 445, 1320, 472, 13075, 50880], "temperature": 0.0, "avg_logprob": -0.0517585520016945, "compression_ratio": 2.0211864406779663, "no_speech_prob": 0.0017806625692173839}, {"id": 112, "seek": 66464, "start": 674.96, "end": 679.52, "text": " this didn't fail before but it will catch the error now but if you pass two parameters and one of", "tokens": [50880, 341, 994, 380, 3061, 949, 457, 309, 486, 3745, 264, 6713, 586, 457, 498, 291, 1320, 732, 9834, 293, 472, 295, 51108], "temperature": 0.0, "avg_logprob": -0.0517585520016945, "compression_ratio": 2.0211864406779663, "no_speech_prob": 0.0017806625692173839}, {"id": 113, "seek": 66464, "start": 679.52, "end": 684.48, "text": " them is nil well you know the arity of the function is still two so that's so that's valid right but", "tokens": [51108, 552, 307, 297, 388, 731, 291, 458, 264, 594, 507, 295, 264, 2445, 307, 920, 732, 370, 300, 311, 370, 300, 311, 7363, 558, 457, 51356], "temperature": 0.0, "avg_logprob": -0.0517585520016945, "compression_ratio": 2.0211864406779663, "no_speech_prob": 0.0017806625692173839}, {"id": 114, "seek": 66464, "start": 685.12, "end": 690.96, "text": " who will write this right so i mean it's very like 80 20 thing like it's a very simple thing that", "tokens": [51388, 567, 486, 2464, 341, 558, 370, 741, 914, 309, 311, 588, 411, 4688, 945, 551, 411, 309, 311, 257, 588, 2199, 551, 300, 51680], "temperature": 0.0, "avg_logprob": -0.0517585520016945, "compression_ratio": 2.0211864406779663, "no_speech_prob": 0.0017806625692173839}, {"id": 115, "seek": 69096, "start": 690.96, "end": 695.6800000000001, "text": " catches like the kinds of mistakes that people actually do right so you have you kind of have to", "tokens": [50364, 25496, 411, 264, 3685, 295, 8038, 300, 561, 767, 360, 558, 370, 291, 362, 291, 733, 295, 362, 281, 50600], "temperature": 0.0, "avg_logprob": -0.04823639886132602, "compression_ratio": 2.0811965811965814, "no_speech_prob": 0.009840337559580803}, {"id": 116, "seek": 69096, "start": 695.6800000000001, "end": 702.72, "text": " be uh forcing to to to get into trouble with that so uh yeah but if you want to be able to do that", "tokens": [50600, 312, 2232, 19030, 281, 281, 281, 483, 666, 5253, 365, 300, 370, 2232, 1338, 457, 498, 291, 528, 281, 312, 1075, 281, 360, 300, 50952], "temperature": 0.0, "avg_logprob": -0.04823639886132602, "compression_ratio": 2.0811965811965814, "no_speech_prob": 0.009840337559580803}, {"id": 117, "seek": 69096, "start": 702.72, "end": 707.76, "text": " then you act you actually mark the arity like not in the type but in the argument right like the", "tokens": [50952, 550, 291, 605, 291, 767, 1491, 264, 594, 507, 411, 406, 294, 264, 2010, 457, 294, 264, 6770, 558, 411, 264, 51204], "temperature": 0.0, "avg_logprob": -0.04823639886132602, "compression_ratio": 2.0811965811965814, "no_speech_prob": 0.009840337559580803}, {"id": 118, "seek": 69096, "start": 707.76, "end": 714.08, "text": " the argument is optional it's not that the type of y is like an optional integer the type is integer", "tokens": [51204, 264, 6770, 307, 17312, 309, 311, 406, 300, 264, 2010, 295, 288, 307, 411, 364, 17312, 24922, 264, 2010, 307, 24922, 51520], "temperature": 0.0, "avg_logprob": -0.04823639886132602, "compression_ratio": 2.0811965811965814, "no_speech_prob": 0.009840337559580803}, {"id": 119, "seek": 69096, "start": 714.08, "end": 720.1600000000001, "text": " but y is an optional argument right so that's like a very simple to implement thing like that", "tokens": [51520, 457, 288, 307, 364, 17312, 6770, 558, 370, 300, 311, 411, 257, 588, 2199, 281, 4445, 551, 411, 300, 51824], "temperature": 0.0, "avg_logprob": -0.04823639886132602, "compression_ratio": 2.0811965811965814, "no_speech_prob": 0.009840337559580803}, {"id": 120, "seek": 72016, "start": 720.16, "end": 725.4399999999999, "text": " i had it i can draft state for a long time and i just decided to put that in into the language", "tokens": [50364, 741, 632, 309, 741, 393, 11206, 1785, 337, 257, 938, 565, 293, 741, 445, 3047, 281, 829, 300, 294, 666, 264, 2856, 50628], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 121, "seek": 72016, "start": 725.4399999999999, "end": 728.9599999999999, "text": " because it's always like oh do i want to add one more feature to the language right do i want to", "tokens": [50628, 570, 309, 311, 1009, 411, 1954, 360, 741, 528, 281, 909, 472, 544, 4111, 281, 264, 2856, 558, 360, 741, 528, 281, 50804], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 122, "seek": 72016, "start": 728.9599999999999, "end": 734.56, "text": " because i was able to do like to write the till compiler in itself so with the features that", "tokens": [50804, 570, 741, 390, 1075, 281, 360, 411, 281, 2464, 264, 4288, 31958, 294, 2564, 370, 365, 264, 4122, 300, 51084], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 123, "seek": 72016, "start": 734.56, "end": 740.24, "text": " currently has you're able to write a compiler so like i go like okay the features look enough right", "tokens": [51084, 4362, 575, 291, 434, 1075, 281, 2464, 257, 31958, 370, 411, 741, 352, 411, 1392, 264, 4122, 574, 1547, 558, 51368], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 124, "seek": 72016, "start": 740.24, "end": 745.68, "text": " but people get asking for more features so but then like being possible and being pleasant is kind", "tokens": [51368, 457, 561, 483, 3365, 337, 544, 4122, 370, 457, 550, 411, 885, 1944, 293, 885, 16232, 307, 733, 51640], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 125, "seek": 72016, "start": 745.68, "end": 749.6, "text": " of different i already feel like like coding in till in general because of the helps that type give", "tokens": [51640, 295, 819, 741, 1217, 841, 411, 411, 17720, 294, 4288, 294, 2674, 570, 295, 264, 3665, 300, 2010, 976, 51836], "temperature": 0.0, "avg_logprob": -0.0647063468819234, "compression_ratio": 1.9498327759197325, "no_speech_prob": 0.009693351574242115}, {"id": 126, "seek": 74960, "start": 749.6, "end": 755.36, "text": " you already feels like more pleasant to me as a very in a very subjective way than coding in like", "tokens": [50364, 291, 1217, 3417, 411, 544, 16232, 281, 385, 382, 257, 588, 294, 257, 588, 25972, 636, 813, 17720, 294, 411, 50652], "temperature": 0.0, "avg_logprob": -0.06265885642405307, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0027537147980183363}, {"id": 127, "seek": 74960, "start": 755.36, "end": 761.84, "text": " plain lua right but when i started working on the next feature like then i really wanted to have", "tokens": [50652, 11121, 287, 4398, 558, 457, 562, 741, 1409, 1364, 322, 264, 958, 4111, 411, 550, 741, 534, 1415, 281, 362, 50976], "temperature": 0.0, "avg_logprob": -0.06265885642405307, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0027537147980183363}, {"id": 128, "seek": 74960, "start": 761.84, "end": 765.9200000000001, "text": " this because i wanted to do big refactors and change the numbers of arguments of things and", "tokens": [50976, 341, 570, 741, 1415, 281, 360, 955, 1895, 578, 830, 293, 1319, 264, 3547, 295, 12869, 295, 721, 293, 51180], "temperature": 0.0, "avg_logprob": -0.06265885642405307, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0027537147980183363}, {"id": 129, "seek": 74960, "start": 765.9200000000001, "end": 771.44, "text": " i wanted the compiler to tell me uh if uh if i was making mistakes so i added this feature", "tokens": [51180, 741, 1415, 264, 31958, 281, 980, 385, 2232, 498, 2232, 498, 741, 390, 1455, 8038, 370, 741, 3869, 341, 4111, 51456], "temperature": 0.0, "avg_logprob": -0.06265885642405307, "compression_ratio": 1.7293577981651376, "no_speech_prob": 0.0027537147980183363}, {"id": 130, "seek": 77144, "start": 771.44, "end": 779.36, "text": " feature for my own use and it already proved like useful enough and uh yeah so if we're doing that", "tokens": [50364, 4111, 337, 452, 1065, 764, 293, 309, 1217, 14617, 411, 4420, 1547, 293, 2232, 1338, 370, 498, 321, 434, 884, 300, 50760], "temperature": 0.0, "avg_logprob": -0.07343676172453782, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04462882876396179}, {"id": 131, "seek": 77144, "start": 779.36, "end": 785.2800000000001, "text": " for nil safety for for arguments what about uh for table keys can we do that it's trickier to", "tokens": [50760, 337, 297, 388, 4514, 337, 337, 12869, 437, 466, 2232, 337, 3199, 9317, 393, 321, 360, 300, 309, 311, 4282, 811, 281, 51056], "temperature": 0.0, "avg_logprob": -0.07343676172453782, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04462882876396179}, {"id": 132, "seek": 77144, "start": 785.2800000000001, "end": 791.44, "text": " pull it off right because uh even if you want to say like oh this key is optional this key is mandatory", "tokens": [51056, 2235, 309, 766, 558, 570, 2232, 754, 498, 291, 528, 281, 584, 411, 1954, 341, 2141, 307, 17312, 341, 2141, 307, 22173, 51364], "temperature": 0.0, "avg_logprob": -0.07343676172453782, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04462882876396179}, {"id": 133, "seek": 77144, "start": 791.44, "end": 794.96, "text": " some one thing that people do in lua all the time is just like start a table with like open", "tokens": [51364, 512, 472, 551, 300, 561, 360, 294, 287, 4398, 439, 264, 565, 307, 445, 411, 722, 257, 3199, 365, 411, 1269, 51540], "temperature": 0.0, "avg_logprob": -0.07343676172453782, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04462882876396179}, {"id": 134, "seek": 77144, "start": 794.96, "end": 800.08, "text": " closed bracket like this is an empty table and start filling the elements one by one so like", "tokens": [51540, 5395, 16904, 411, 341, 307, 364, 6707, 3199, 293, 722, 10623, 264, 4959, 472, 538, 472, 370, 411, 51796], "temperature": 0.0, "avg_logprob": -0.07343676172453782, "compression_ratio": 1.794776119402985, "no_speech_prob": 0.04462882876396179}, {"id": 135, "seek": 80008, "start": 800.08, "end": 804.72, "text": " after the table is ready right that argument's no longer optional but it's optional for a while", "tokens": [50364, 934, 264, 3199, 307, 1919, 558, 300, 6770, 311, 572, 2854, 17312, 457, 309, 311, 17312, 337, 257, 1339, 50596], "temperature": 0.0, "avg_logprob": -0.0676732963985867, "compression_ratio": 1.7268518518518519, "no_speech_prob": 0.0016455658478662372}, {"id": 136, "seek": 80008, "start": 804.72, "end": 812.88, "text": " and it's a very common pattern so um however uh since i had a feature that i created for my", "tokens": [50596, 293, 309, 311, 257, 588, 2689, 5102, 370, 1105, 4461, 2232, 1670, 741, 632, 257, 4111, 300, 741, 2942, 337, 452, 51004], "temperature": 0.0, "avg_logprob": -0.0676732963985867, "compression_ratio": 1.7268518518518519, "no_speech_prob": 0.0016455658478662372}, {"id": 137, "seek": 80008, "start": 812.88, "end": 819.5200000000001, "text": " own use of how i specify maps i adopted that for records as well so uh which is that total", "tokens": [51004, 1065, 764, 295, 577, 741, 16500, 11317, 741, 12175, 300, 337, 7724, 382, 731, 370, 2232, 597, 307, 300, 3217, 51336], "temperature": 0.0, "avg_logprob": -0.0676732963985867, "compression_ratio": 1.7268518518518519, "no_speech_prob": 0.0016455658478662372}, {"id": 138, "seek": 80008, "start": 819.5200000000001, "end": 825.36, "text": " annotation because like lua like modern lua has these annotations like const and and so i just", "tokens": [51336, 48654, 570, 411, 287, 4398, 411, 4363, 287, 4398, 575, 613, 25339, 763, 411, 1817, 293, 293, 370, 741, 445, 51628], "temperature": 0.0, "avg_logprob": -0.0676732963985867, "compression_ratio": 1.7268518518518519, "no_speech_prob": 0.0016455658478662372}, {"id": 139, "seek": 82536, "start": 825.36, "end": 830.16, "text": " i don't want to say total which is for things like this right if you have an enum saying like", "tokens": [50364, 741, 500, 380, 528, 281, 584, 3217, 597, 307, 337, 721, 411, 341, 558, 498, 291, 362, 364, 465, 449, 1566, 411, 50604], "temperature": 0.0, "avg_logprob": -0.07592216770300704, "compression_ratio": 1.75, "no_speech_prob": 0.01714879274368286}, {"id": 140, "seek": 82536, "start": 830.16, "end": 836.08, "text": " which essentially restricts your string type into a set of known strings right you can say that", "tokens": [50604, 597, 4476, 7694, 82, 428, 6798, 2010, 666, 257, 992, 295, 2570, 13985, 558, 291, 393, 584, 300, 50900], "temperature": 0.0, "avg_logprob": -0.07592216770300704, "compression_ratio": 1.75, "no_speech_prob": 0.01714879274368286}, {"id": 141, "seek": 82536, "start": 836.08, "end": 840.88, "text": " the map that you're declaring here is total so the compiler will give you an error here because", "tokens": [50900, 264, 4471, 300, 291, 434, 40374, 510, 307, 3217, 370, 264, 31958, 486, 976, 291, 364, 6713, 510, 570, 51140], "temperature": 0.0, "avg_logprob": -0.07592216770300704, "compression_ratio": 1.75, "no_speech_prob": 0.01714879274368286}, {"id": 142, "seek": 82536, "start": 840.88, "end": 852.08, "text": " you specified north and south but not east and west okay so uh right so essentially we did the same", "tokens": [51140, 291, 22206, 6830, 293, 7377, 457, 406, 10648, 293, 7009, 1392, 370, 2232, 558, 370, 4476, 321, 630, 264, 912, 51700], "temperature": 0.0, "avg_logprob": -0.07592216770300704, "compression_ratio": 1.75, "no_speech_prob": 0.01714879274368286}, {"id": 143, "seek": 85208, "start": 852.08, "end": 859.2, "text": " for uh records right so uh you can specify a total record and for that use case of i'm declaring a", "tokens": [50364, 337, 2232, 7724, 558, 370, 2232, 291, 393, 16500, 257, 3217, 2136, 293, 337, 300, 764, 1389, 295, 741, 478, 40374, 257, 50720], "temperature": 0.0, "avg_logprob": -0.09110454581249719, "compression_ratio": 1.797029702970297, "no_speech_prob": 0.005899298936128616}, {"id": 144, "seek": 85208, "start": 859.2, "end": 865.12, "text": " table and i want everything to be in it uh you can uh you can specify that again like it's a", "tokens": [50720, 3199, 293, 741, 528, 1203, 281, 312, 294, 309, 2232, 291, 393, 2232, 291, 393, 16500, 300, 797, 411, 309, 311, 257, 51016], "temperature": 0.0, "avg_logprob": -0.09110454581249719, "compression_ratio": 1.797029702970297, "no_speech_prob": 0.005899298936128616}, {"id": 145, "seek": 85208, "start": 865.12, "end": 869.0400000000001, "text": " lightweight solution then the whole solution but it's something that already gives you uh", "tokens": [51016, 22052, 3827, 550, 264, 1379, 3827, 457, 309, 311, 746, 300, 1217, 2709, 291, 2232, 51212], "temperature": 0.0, "avg_logprob": -0.09110454581249719, "compression_ratio": 1.797029702970297, "no_speech_prob": 0.005899298936128616}, {"id": 146, "seek": 85208, "start": 869.76, "end": 876.48, "text": " you know gets you a long way um okay so uh just because we started late right how", "tokens": [51248, 291, 458, 2170, 291, 257, 938, 636, 1105, 1392, 370, 2232, 445, 570, 321, 1409, 3469, 558, 577, 51584], "temperature": 0.0, "avg_logprob": -0.09110454581249719, "compression_ratio": 1.797029702970297, "no_speech_prob": 0.005899298936128616}, {"id": 147, "seek": 87648, "start": 876.5600000000001, "end": 879.2, "text": " how do how do we go on time like do i just keep going and then", "tokens": [50368, 577, 360, 577, 360, 321, 352, 322, 565, 411, 360, 741, 445, 1066, 516, 293, 550, 50500], "temperature": 0.0, "avg_logprob": -0.1482314836411249, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.009700239636003971}, {"id": 148, "seek": 87648, "start": 882.4, "end": 891.6800000000001, "text": " right okay all right so uh yeah so then the second one which is like the more interesting one is like", "tokens": [50660, 558, 1392, 439, 558, 370, 2232, 1338, 370, 550, 264, 1150, 472, 597, 307, 411, 264, 544, 1880, 472, 307, 411, 51124], "temperature": 0.0, "avg_logprob": -0.1482314836411249, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.009700239636003971}, {"id": 149, "seek": 87648, "start": 891.6800000000001, "end": 899.6800000000001, "text": " subtitling table types i mean like i have avoided going with like complicated uh sub typing definitions", "tokens": [51124, 30706, 1688, 3199, 3467, 741, 914, 411, 741, 362, 24890, 516, 365, 411, 6179, 2232, 1422, 18444, 21988, 51524], "temperature": 0.0, "avg_logprob": -0.1482314836411249, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.009700239636003971}, {"id": 150, "seek": 87648, "start": 899.6800000000001, "end": 905.84, "text": " as as you start combining uh those kinds of features like you can you can go real crazy with", "tokens": [51524, 382, 382, 291, 722, 21928, 2232, 729, 3685, 295, 4122, 411, 291, 393, 291, 393, 352, 957, 3219, 365, 51832], "temperature": 0.0, "avg_logprob": -0.1482314836411249, "compression_ratio": 1.7524271844660195, "no_speech_prob": 0.009700239636003971}, {"id": 151, "seek": 90584, "start": 905.84, "end": 911.0400000000001, "text": " that like with even like features that programmers in type languages use every day like if you combine", "tokens": [50364, 300, 411, 365, 754, 411, 4122, 300, 41504, 294, 2010, 8650, 764, 633, 786, 411, 498, 291, 10432, 50624], "temperature": 0.0, "avg_logprob": -0.0697861909866333, "compression_ratio": 1.8082706766917294, "no_speech_prob": 0.0030694501474499702}, {"id": 152, "seek": 90584, "start": 911.6800000000001, "end": 918.1600000000001, "text": " like generics and sub typing like there are computer sign results that show you that you", "tokens": [50656, 411, 1337, 1167, 293, 1422, 18444, 411, 456, 366, 3820, 1465, 3542, 300, 855, 291, 300, 291, 50980], "temperature": 0.0, "avg_logprob": -0.0697861909866333, "compression_ratio": 1.8082706766917294, "no_speech_prob": 0.0030694501474499702}, {"id": 153, "seek": 90584, "start": 918.1600000000001, "end": 924.5600000000001, "text": " end up with like a computationally undecidable type system and things like that so uh so i have", "tokens": [50980, 917, 493, 365, 411, 257, 24903, 379, 674, 3045, 38089, 2010, 1185, 293, 721, 411, 300, 370, 2232, 370, 741, 362, 51300], "temperature": 0.0, "avg_logprob": -0.0697861909866333, "compression_ratio": 1.8082706766917294, "no_speech_prob": 0.0030694501474499702}, {"id": 154, "seek": 90584, "start": 924.5600000000001, "end": 929.9200000000001, "text": " avoided like delving into this complexity for as long as i could so for that super common case of", "tokens": [51300, 24890, 411, 1103, 798, 666, 341, 14024, 337, 382, 938, 382, 741, 727, 370, 337, 300, 1687, 2689, 1389, 295, 51568], "temperature": 0.0, "avg_logprob": -0.0697861909866333, "compression_ratio": 1.8082706766917294, "no_speech_prob": 0.0030694501474499702}, {"id": 155, "seek": 90584, "start": 929.9200000000001, "end": 934.96, "text": " i have this table which is a record in an array at the same time i added this jenki type that's", "tokens": [51568, 741, 362, 341, 3199, 597, 307, 257, 2136, 294, 364, 10225, 412, 264, 912, 565, 741, 3869, 341, 361, 268, 2984, 2010, 300, 311, 51820], "temperature": 0.0, "avg_logprob": -0.0697861909866333, "compression_ratio": 1.8082706766917294, "no_speech_prob": 0.0030694501474499702}, {"id": 156, "seek": 93496, "start": 934.96, "end": 941.6800000000001, "text": " array record that's just for doing that uh and to avoid having to do sub typing and things like that", "tokens": [50364, 10225, 2136, 300, 311, 445, 337, 884, 300, 2232, 293, 281, 5042, 1419, 281, 360, 1422, 18444, 293, 721, 411, 300, 50700], "temperature": 0.0, "avg_logprob": -0.07812202706628917, "compression_ratio": 1.8524590163934427, "no_speech_prob": 0.002887063194066286}, {"id": 157, "seek": 93496, "start": 941.6800000000001, "end": 946.24, "text": " like and complex type hierarchies just because i wanted to have collections like i added like", "tokens": [50700, 411, 293, 3997, 2010, 35250, 530, 445, 570, 741, 1415, 281, 362, 16641, 411, 741, 3869, 411, 50928], "temperature": 0.0, "avg_logprob": -0.07812202706628917, "compression_ratio": 1.8524590163934427, "no_speech_prob": 0.002887063194066286}, {"id": 158, "seek": 93496, "start": 946.24, "end": 951.0400000000001, "text": " invariant generics so you can have like list of t but you cannot specify anything about t", "tokens": [50928, 33270, 394, 1337, 1167, 370, 291, 393, 362, 411, 1329, 295, 256, 457, 291, 2644, 16500, 1340, 466, 256, 51168], "temperature": 0.0, "avg_logprob": -0.07812202706628917, "compression_ratio": 1.8524590163934427, "no_speech_prob": 0.002887063194066286}, {"id": 159, "seek": 93496, "start": 951.84, "end": 958.64, "text": " and then that worked and because uh typing and callbacks and passing like checking", "tokens": [51208, 293, 550, 300, 2732, 293, 570, 2232, 18444, 293, 818, 17758, 293, 8437, 411, 8568, 51548], "temperature": 0.0, "avg_logprob": -0.07812202706628917, "compression_ratio": 1.8524590163934427, "no_speech_prob": 0.002887063194066286}, {"id": 160, "seek": 93496, "start": 958.64, "end": 963.0400000000001, "text": " function arguments for covariance versus contravariant and all that gets complicated", "tokens": [51548, 2445, 12869, 337, 49851, 719, 5717, 10742, 34033, 394, 293, 439, 300, 2170, 6179, 51768], "temperature": 0.0, "avg_logprob": -0.07812202706628917, "compression_ratio": 1.8524590163934427, "no_speech_prob": 0.002887063194066286}, {"id": 161, "seek": 96304, "start": 963.04, "end": 967.28, "text": " you just do bivariant matching you like you accepted both ways which is like", "tokens": [50364, 291, 445, 360, 272, 592, 3504, 394, 14324, 291, 411, 291, 9035, 1293, 2098, 597, 307, 411, 50576], "temperature": 0.0, "avg_logprob": -0.09054814644579617, "compression_ratio": 1.859504132231405, "no_speech_prob": 0.002114801900461316}, {"id": 162, "seek": 96304, "start": 967.28, "end": 973.04, "text": " wrong like it's unsound by design right but it will at least prevent you from matching like", "tokens": [50576, 2085, 411, 309, 311, 2693, 554, 538, 1715, 558, 457, 309, 486, 412, 1935, 4871, 291, 490, 14324, 411, 50864], "temperature": 0.0, "avg_logprob": -0.09054814644579617, "compression_ratio": 1.859504132231405, "no_speech_prob": 0.002114801900461316}, {"id": 163, "seek": 96304, "start": 973.04, "end": 976.7199999999999, "text": " completely unrelated functions like you're not passing like the wrong function but", "tokens": [50864, 2584, 38967, 6828, 411, 291, 434, 406, 8437, 411, 264, 2085, 2445, 457, 51048], "temperature": 0.0, "avg_logprob": -0.09054814644579617, "compression_ratio": 1.859504132231405, "no_speech_prob": 0.002114801900461316}, {"id": 164, "seek": 96304, "start": 976.7199999999999, "end": 984.24, "text": " if you're doing the thing like in the correct ballpark it will catch it right so um yeah which is", "tokens": [51048, 498, 291, 434, 884, 264, 551, 411, 294, 264, 3006, 2594, 31239, 309, 486, 3745, 309, 558, 370, 1105, 1338, 597, 307, 51424], "temperature": 0.0, "avg_logprob": -0.09054814644579617, "compression_ratio": 1.859504132231405, "no_speech_prob": 0.002114801900461316}, {"id": 165, "seek": 96304, "start": 984.24, "end": 991.76, "text": " some kind of like unsoundness by design that top typescript already has to do so uh yeah and one big", "tokens": [51424, 512, 733, 295, 411, 2693, 554, 1287, 538, 1715, 300, 1192, 3467, 5944, 1217, 575, 281, 360, 370, 2232, 1338, 293, 472, 955, 51800], "temperature": 0.0, "avg_logprob": -0.09054814644579617, "compression_ratio": 1.859504132231405, "no_speech_prob": 0.002114801900461316}, {"id": 166, "seek": 99176, "start": 991.76, "end": 995.68, "text": " limitation that we have because we had union types but you cannot you could not have union", "tokens": [50364, 27432, 300, 321, 362, 570, 321, 632, 11671, 3467, 457, 291, 2644, 291, 727, 406, 362, 11671, 50560], "temperature": 0.0, "avg_logprob": -0.10941909659992564, "compression_ratio": 1.8774509803921569, "no_speech_prob": 0.013212536461651325}, {"id": 167, "seek": 99176, "start": 995.68, "end": 1001.76, "text": " types of multiple table types right because at runtime the code that it translates to when you're", "tokens": [50560, 3467, 295, 3866, 3199, 3467, 558, 570, 412, 34474, 264, 3089, 300, 309, 28468, 281, 562, 291, 434, 50864], "temperature": 0.0, "avg_logprob": -0.10941909659992564, "compression_ratio": 1.8774509803921569, "no_speech_prob": 0.013212536461651325}, {"id": 168, "seek": 99176, "start": 1001.76, "end": 1006.96, "text": " trying to check like which which value i have in this union type which is like oh it's a it's an", "tokens": [50864, 1382, 281, 1520, 411, 597, 597, 2158, 741, 362, 294, 341, 11671, 2010, 597, 307, 411, 1954, 309, 311, 257, 309, 311, 364, 51124], "temperature": 0.0, "avg_logprob": -0.10941909659992564, "compression_ratio": 1.8774509803921569, "no_speech_prob": 0.013212536461651325}, {"id": 169, "seek": 99176, "start": 1006.96, "end": 1014.88, "text": " engineer or uh like my record like my object the luo code that that would generate uh became like", "tokens": [51124, 11403, 420, 2232, 411, 452, 2136, 411, 452, 2657, 264, 10438, 78, 3089, 300, 300, 576, 8460, 2232, 3062, 411, 51520], "temperature": 0.0, "avg_logprob": -0.10941909659992564, "compression_ratio": 1.8774509803921569, "no_speech_prob": 0.013212536461651325}, {"id": 170, "seek": 101488, "start": 1015.76, "end": 1022.08, "text": " luo code that says like show check that the luo type is number or check that the luo type is", "tokens": [50408, 10438, 78, 3089, 300, 1619, 411, 855, 1520, 300, 264, 10438, 78, 2010, 307, 1230, 420, 1520, 300, 264, 10438, 78, 2010, 307, 50724], "temperature": 0.0, "avg_logprob": -0.09394284476221135, "compression_ratio": 1.9549180327868851, "no_speech_prob": 0.05028238892555237}, {"id": 171, "seek": 101488, "start": 1022.08, "end": 1028.56, "text": " table and then it couldn't tell all the tables apart at runtime right so you will have to generate", "tokens": [50724, 3199, 293, 550, 309, 2809, 380, 980, 439, 264, 8020, 4936, 412, 34474, 558, 370, 291, 486, 362, 281, 8460, 51048], "temperature": 0.0, "avg_logprob": -0.09394284476221135, "compression_ratio": 1.9549180327868851, "no_speech_prob": 0.05028238892555237}, {"id": 172, "seek": 101488, "start": 1028.56, "end": 1033.6, "text": " code that actually checks the tables by their contents right so you can tell like is this a", "tokens": [51048, 3089, 300, 767, 13834, 264, 8020, 538, 641, 15768, 558, 370, 291, 393, 980, 411, 307, 341, 257, 51300], "temperature": 0.0, "avg_logprob": -0.09394284476221135, "compression_ratio": 1.9549180327868851, "no_speech_prob": 0.05028238892555237}, {"id": 173, "seek": 101488, "start": 1033.6, "end": 1039.36, "text": " circle is this a triangle is this like what is this right and turns out that in the real world", "tokens": [51300, 6329, 307, 341, 257, 13369, 307, 341, 411, 437, 307, 341, 558, 293, 4523, 484, 300, 294, 264, 957, 1002, 51588], "temperature": 0.0, "avg_logprob": -0.09394284476221135, "compression_ratio": 1.9549180327868851, "no_speech_prob": 0.05028238892555237}, {"id": 174, "seek": 101488, "start": 1039.36, "end": 1044.24, "text": " a luo programmer is like an existing luo frameworks that people would want to use with till define", "tokens": [51588, 257, 10438, 78, 32116, 307, 411, 364, 6741, 10438, 78, 29834, 300, 561, 576, 528, 281, 764, 365, 4288, 6964, 51832], "temperature": 0.0, "avg_logprob": -0.09394284476221135, "compression_ratio": 1.9549180327868851, "no_speech_prob": 0.05028238892555237}, {"id": 175, "seek": 104424, "start": 1044.24, "end": 1051.28, "text": " their own object or oop like object-oriented systems with their own like inheritance systems and how to", "tokens": [50364, 641, 1065, 2657, 420, 277, 404, 411, 2657, 12, 27414, 3652, 365, 641, 1065, 411, 32122, 3652, 293, 577, 281, 50716], "temperature": 0.0, "avg_logprob": -0.12810704899930406, "compression_ratio": 1.8744186046511628, "no_speech_prob": 0.005812448915094137}, {"id": 176, "seek": 104424, "start": 1051.84, "end": 1058.08, "text": " how to declare like the the the type checking right people already do this writing this custom code", "tokens": [50744, 577, 281, 19710, 411, 264, 264, 264, 2010, 8568, 558, 561, 1217, 360, 341, 3579, 341, 2375, 3089, 51056], "temperature": 0.0, "avg_logprob": -0.12810704899930406, "compression_ratio": 1.8744186046511628, "no_speech_prob": 0.005812448915094137}, {"id": 177, "seek": 104424, "start": 1058.08, "end": 1065.28, "text": " for type checking right but then the till compiler doesn't understand that right so uh for things like", "tokens": [51056, 337, 2010, 8568, 558, 457, 550, 264, 4288, 31958, 1177, 380, 1223, 300, 558, 370, 2232, 337, 721, 411, 51416], "temperature": 0.0, "avg_logprob": -0.12810704899930406, "compression_ratio": 1.8744186046511628, "no_speech_prob": 0.005812448915094137}, {"id": 178, "seek": 104424, "start": 1065.28, "end": 1069.76, "text": " this if i want to have the is operator to work nicely in till so that the compiler understand it", "tokens": [51416, 341, 498, 741, 528, 281, 362, 264, 307, 12973, 281, 589, 9594, 294, 4288, 370, 300, 264, 31958, 1223, 309, 51640], "temperature": 0.0, "avg_logprob": -0.12810704899930406, "compression_ratio": 1.8744186046511628, "no_speech_prob": 0.005812448915094137}, {"id": 179, "seek": 106976, "start": 1069.76, "end": 1077.44, "text": " like i need to be able to translate that to that like framework specific way of determining like", "tokens": [50364, 411, 741, 643, 281, 312, 1075, 281, 13799, 300, 281, 300, 411, 8388, 2685, 636, 295, 23751, 411, 50748], "temperature": 0.0, "avg_logprob": -0.07483441073720049, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.002181840129196644}, {"id": 180, "seek": 106976, "start": 1077.44, "end": 1086.0, "text": " what the type is right so since we had records before like the the next version of till is going", "tokens": [50748, 437, 264, 2010, 307, 558, 370, 1670, 321, 632, 7724, 949, 411, 264, 264, 958, 3037, 295, 4288, 307, 516, 51176], "temperature": 0.0, "avg_logprob": -0.07483441073720049, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.002181840129196644}, {"id": 181, "seek": 106976, "start": 1086.0, "end": 1090.8, "text": " to have interfaces right so the interface like this was instead of writing record you write interface", "tokens": [51176, 281, 362, 28416, 558, 370, 264, 9226, 411, 341, 390, 2602, 295, 3579, 2136, 291, 2464, 9226, 51416], "temperature": 0.0, "avg_logprob": -0.07483441073720049, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.002181840129196644}, {"id": 182, "seek": 106976, "start": 1090.8, "end": 1096.08, "text": " right but now you can you can actually have subtyping from interfaces which are abstract", "tokens": [51416, 558, 457, 586, 291, 393, 291, 393, 767, 362, 1422, 874, 3381, 490, 28416, 597, 366, 12649, 51680], "temperature": 0.0, "avg_logprob": -0.07483441073720049, "compression_ratio": 1.8461538461538463, "no_speech_prob": 0.002181840129196644}, {"id": 183, "seek": 109608, "start": 1096.08, "end": 1103.9199999999998, "text": " into records but then you have this fine where clause here which has an expression like it has", "tokens": [50364, 666, 7724, 457, 550, 291, 362, 341, 2489, 689, 25925, 510, 597, 575, 364, 6114, 411, 309, 575, 50756], "temperature": 0.0, "avg_logprob": -0.09421352763752361, "compression_ratio": 1.8647342995169083, "no_speech_prob": 0.004978548269718885}, {"id": 184, "seek": 109608, "start": 1103.9199999999998, "end": 1108.8799999999999, "text": " a bit of code with essentially is like when you want to do an is check this is the code that you", "tokens": [50756, 257, 857, 295, 3089, 365, 4476, 307, 411, 562, 291, 528, 281, 360, 364, 307, 1520, 341, 307, 264, 3089, 300, 291, 51004], "temperature": 0.0, "avg_logprob": -0.09421352763752361, "compression_ratio": 1.8647342995169083, "no_speech_prob": 0.004978548269718885}, {"id": 185, "seek": 109608, "start": 1108.8799999999999, "end": 1113.6, "text": " should use like it's essentially a macro right you have to replace this everywhere you need to", "tokens": [51004, 820, 764, 411, 309, 311, 4476, 257, 18887, 558, 291, 362, 281, 7406, 341, 5315, 291, 643, 281, 51240], "temperature": 0.0, "avg_logprob": -0.09421352763752361, "compression_ratio": 1.8647342995169083, "no_speech_prob": 0.004978548269718885}, {"id": 186, "seek": 109608, "start": 1113.6, "end": 1122.56, "text": " do that change right and now essentially you can do uh you can do union types as long as the all of", "tokens": [51240, 360, 300, 1319, 558, 293, 586, 4476, 291, 393, 360, 2232, 291, 393, 360, 517, 313, 3467, 382, 938, 382, 264, 439, 295, 51688], "temperature": 0.0, "avg_logprob": -0.09421352763752361, "compression_ratio": 1.8647342995169083, "no_speech_prob": 0.004978548269718885}, {"id": 187, "seek": 112256, "start": 1122.56, "end": 1130.24, "text": " the types that you are putting in the union declare like there how to do the is operation right and", "tokens": [50364, 264, 3467, 300, 291, 366, 3372, 294, 264, 11671, 19710, 411, 456, 577, 281, 360, 264, 307, 6916, 558, 293, 50748], "temperature": 0.0, "avg_logprob": -0.10963089201185439, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.0033725027460604906}, {"id": 188, "seek": 112256, "start": 1132.24, "end": 1138.72, "text": " yeah we're only on time so yeah so that's essentially what i described there and the thing is that that", "tokens": [50848, 1338, 321, 434, 787, 322, 565, 370, 1338, 370, 300, 311, 4476, 437, 741, 7619, 456, 293, 264, 551, 307, 300, 300, 51172], "temperature": 0.0, "avg_logprob": -0.10963089201185439, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.0033725027460604906}, {"id": 189, "seek": 112256, "start": 1140.0, "end": 1144.48, "text": " that magic where clause right essentially i had to add a feature to add a feature right because like", "tokens": [51236, 300, 5585, 689, 25925, 558, 4476, 741, 632, 281, 909, 257, 4111, 281, 909, 257, 4111, 558, 570, 411, 51460], "temperature": 0.0, "avg_logprob": -0.10963089201185439, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.0033725027460604906}, {"id": 190, "seek": 112256, "start": 1145.28, "end": 1148.96, "text": " i'm really having i'm having i'm really having to implement like a macro expansion thing for", "tokens": [51500, 741, 478, 534, 1419, 741, 478, 1419, 741, 478, 534, 1419, 281, 4445, 411, 257, 18887, 11260, 551, 337, 51684], "temperature": 0.0, "avg_logprob": -0.10963089201185439, "compression_ratio": 1.8995215311004785, "no_speech_prob": 0.0033725027460604906}, {"id": 191, "seek": 114896, "start": 1149.04, "end": 1154.16, "text": " expressions just in order to have that work loss so like why not expose that but then again", "tokens": [50368, 15277, 445, 294, 1668, 281, 362, 300, 589, 4470, 370, 411, 983, 406, 19219, 300, 457, 550, 797, 50624], "temperature": 0.0, "avg_logprob": -0.09595119201385223, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.021567674353718758}, {"id": 192, "seek": 114896, "start": 1154.72, "end": 1158.64, "text": " i thought like oh so i need to add macros to the language no i just went lighter wait again i just", "tokens": [50652, 741, 1194, 411, 1954, 370, 741, 643, 281, 909, 7912, 2635, 281, 264, 2856, 572, 741, 445, 1437, 11546, 1699, 797, 741, 445, 50848], "temperature": 0.0, "avg_logprob": -0.09595119201385223, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.021567674353718758}, {"id": 193, "seek": 114896, "start": 1158.64, "end": 1165.1200000000001, "text": " added macros for expressions and not like a full macro processor right which is what many projects", "tokens": [50848, 3869, 7912, 2635, 337, 15277, 293, 406, 411, 257, 1577, 18887, 15321, 558, 597, 307, 437, 867, 4455, 51172], "temperature": 0.0, "avg_logprob": -0.09595119201385223, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.021567674353718758}, {"id": 194, "seek": 114896, "start": 1165.1200000000001, "end": 1170.16, "text": " for lua have tried to do in over the years but one of none of them like have become established", "tokens": [51172, 337, 287, 4398, 362, 3031, 281, 360, 294, 670, 264, 924, 457, 472, 295, 6022, 295, 552, 411, 362, 1813, 7545, 51424], "temperature": 0.0, "avg_logprob": -0.09595119201385223, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.021567674353718758}, {"id": 195, "seek": 114896, "start": 1170.16, "end": 1176.24, "text": " right and turns out that where now it's syntactic sugar like we actually have like macro expressions", "tokens": [51424, 558, 293, 4523, 484, 300, 689, 586, 309, 311, 23980, 19892, 5076, 411, 321, 767, 362, 411, 18887, 15277, 51728], "temperature": 0.0, "avg_logprob": -0.09595119201385223, "compression_ratio": 1.8620689655172413, "no_speech_prob": 0.021567674353718758}, {"id": 196, "seek": 117624, "start": 1176.24, "end": 1181.44, "text": " in the language right but it was motivated by that right so in short what happened like till", "tokens": [50364, 294, 264, 2856, 558, 457, 309, 390, 14515, 538, 300, 558, 370, 294, 2099, 437, 2011, 411, 4288, 50624], "temperature": 0.0, "avg_logprob": -0.07905354589786169, "compression_ratio": 1.8980392156862744, "no_speech_prob": 0.004899229854345322}, {"id": 197, "seek": 117624, "start": 1181.44, "end": 1186.96, "text": " has seen use okay people want more features and less limitations which translates to many future", "tokens": [50624, 575, 1612, 764, 1392, 561, 528, 544, 4122, 293, 1570, 15705, 597, 28468, 281, 867, 2027, 50900], "temperature": 0.0, "avg_logprob": -0.07905354589786169, "compression_ratio": 1.8980392156862744, "no_speech_prob": 0.004899229854345322}, {"id": 198, "seek": 117624, "start": 1186.96, "end": 1194.56, "text": " requests oh no right but many future requests they relate to the same pain points right so the idea", "tokens": [50900, 12475, 1954, 572, 558, 457, 867, 2027, 12475, 436, 10961, 281, 264, 912, 1822, 2793, 558, 370, 264, 1558, 51280], "temperature": 0.0, "avg_logprob": -0.07905354589786169, "compression_ratio": 1.8980392156862744, "no_speech_prob": 0.004899229854345322}, {"id": 199, "seek": 117624, "start": 1194.56, "end": 1199.44, "text": " is that you try to combine them and come up with like the what's the most minimal design to try to", "tokens": [51280, 307, 300, 291, 853, 281, 10432, 552, 293, 808, 493, 365, 411, 264, 437, 311, 264, 881, 13206, 1715, 281, 853, 281, 51524], "temperature": 0.0, "avg_logprob": -0.07905354589786169, "compression_ratio": 1.8980392156862744, "no_speech_prob": 0.004899229854345322}, {"id": 200, "seek": 117624, "start": 1199.44, "end": 1203.76, "text": " address the most of these pain points so the things that came up out of that were like optional", "tokens": [51524, 2985, 264, 881, 295, 613, 1822, 2793, 370, 264, 721, 300, 1361, 493, 484, 295, 300, 645, 411, 17312, 51740], "temperature": 0.0, "avg_logprob": -0.07905354589786169, "compression_ratio": 1.8980392156862744, "no_speech_prob": 0.004899229854345322}, {"id": 201, "seek": 120376, "start": 1203.76, "end": 1208.8799999999999, "text": " iris interfaces macro expressions and the idea was that i would just pick the lighter weight", "tokens": [50364, 3418, 271, 28416, 18887, 15277, 293, 264, 1558, 390, 300, 741, 576, 445, 1888, 264, 11546, 3364, 50620], "temperature": 0.0, "avg_logprob": -0.1272278565626878, "compression_ratio": 1.924901185770751, "no_speech_prob": 0.012388219125568867}, {"id": 202, "seek": 120376, "start": 1208.8799999999999, "end": 1215.2, "text": " solution right because whenever possible like just to try to like just harking back to the title like", "tokens": [50620, 3827, 558, 570, 5699, 1944, 411, 445, 281, 853, 281, 411, 445, 276, 809, 278, 646, 281, 264, 4876, 411, 50936], "temperature": 0.0, "avg_logprob": -0.1272278565626878, "compression_ratio": 1.924901185770751, "no_speech_prob": 0.012388219125568867}, {"id": 203, "seek": 120376, "start": 1215.92, "end": 1220.32, "text": " minimalism of the language versus its growth right both the growth of the compiler the growth of", "tokens": [50972, 13206, 1434, 295, 264, 2856, 5717, 1080, 4599, 558, 1293, 264, 4599, 295, 264, 31958, 264, 4599, 295, 51192], "temperature": 0.0, "avg_logprob": -0.1272278565626878, "compression_ratio": 1.924901185770751, "no_speech_prob": 0.012388219125568867}, {"id": 204, "seek": 120376, "start": 1220.32, "end": 1225.76, "text": " the language specification and the growth of the user base right so so that's the approach that i", "tokens": [51192, 264, 2856, 31256, 293, 264, 4599, 295, 264, 4195, 3096, 558, 370, 370, 300, 311, 264, 3109, 300, 741, 51464], "temperature": 0.0, "avg_logprob": -0.1272278565626878, "compression_ratio": 1.924901185770751, "no_speech_prob": 0.012388219125568867}, {"id": 205, "seek": 120376, "start": 1225.76, "end": 1231.28, "text": " took like you know you sometimes you have to choose like the incomplete solution just in order to", "tokens": [51464, 1890, 411, 291, 458, 291, 2171, 291, 362, 281, 2826, 411, 264, 31709, 3827, 445, 294, 1668, 281, 51740], "temperature": 0.0, "avg_logprob": -0.1272278565626878, "compression_ratio": 1.924901185770751, "no_speech_prob": 0.012388219125568867}, {"id": 206, "seek": 123128, "start": 1232.24, "end": 1238.3999999999999, "text": " balance all of those desires right so yeah that's it what i had thank you for sitting around", "tokens": [50412, 4772, 439, 295, 729, 18005, 558, 370, 1338, 300, 311, 309, 437, 741, 632, 1309, 291, 337, 3798, 926, 50720], "temperature": 0.0, "avg_logprob": -0.25135279716329373, "compression_ratio": 1.46875, "no_speech_prob": 0.020633719861507416}, {"id": 207, "seek": 123128, "start": 1245.44, "end": 1250.6399999999999, "text": " thank you we need to free up the room for the next round but we can still have one or two quick", "tokens": [51072, 1309, 291, 321, 643, 281, 1737, 493, 264, 1808, 337, 264, 958, 3098, 457, 321, 393, 920, 362, 472, 420, 732, 1702, 51332], "temperature": 0.0, "avg_logprob": -0.25135279716329373, "compression_ratio": 1.46875, "no_speech_prob": 0.020633719861507416}, {"id": 208, "seek": 125064, "start": 1250.64, "end": 1254.0, "text": " questions", "tokens": [50364, 1651, 50532], "temperature": 1.0, "avg_logprob": -1.2805089950561523, "compression_ratio": 0.5294117647058824, "no_speech_prob": 0.159258633852005}, {"id": 209, "seek": 125400, "start": 1254.0, "end": 1257.0, "text": " Yeah, yeah.", "tokens": [50364, 865, 11, 1338, 13, 50514], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 210, "seek": 125400, "start": 1257.0, "end": 1262.0, "text": " So have you decided what to improve the meta programming", "tokens": [50514, 407, 362, 291, 3047, 437, 281, 3470, 264, 19616, 9410, 50764], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 211, "seek": 125400, "start": 1262.0, "end": 1268.0, "text": " or doing some stuff, but what the meta tables and all that stuff?", "tokens": [50764, 420, 884, 512, 1507, 11, 457, 437, 264, 19616, 8020, 293, 439, 300, 1507, 30, 51064], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 212, "seek": 125400, "start": 1268.0, "end": 1269.0, "text": " Okay.", "tokens": [51064, 1033, 13, 51114], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 213, "seek": 125400, "start": 1269.0, "end": 1274.0, "text": " Have you ever decided for a new program or a new country", "tokens": [51114, 3560, 291, 1562, 3047, 337, 257, 777, 1461, 420, 257, 777, 1941, 51364], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 214, "seek": 125400, "start": 1274.0, "end": 1277.0, "text": " you know the goal with the LAT?", "tokens": [51364, 291, 458, 264, 3387, 365, 264, 441, 2218, 30, 51514], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 215, "seek": 125400, "start": 1277.0, "end": 1280.0, "text": " If I have some plan to improve the handling of meta tables,", "tokens": [51514, 759, 286, 362, 512, 1393, 281, 3470, 264, 13175, 295, 19616, 8020, 11, 51664], "temperature": 0.0, "avg_logprob": -0.6970898192605854, "compression_ratio": 1.6327683615819208, "no_speech_prob": 0.44164934754371643}, {"id": 216, "seek": 128000, "start": 1280.0, "end": 1284.0, "text": " meta tables, it currently does have support for meta tables", "tokens": [50364, 19616, 8020, 11, 309, 4362, 775, 362, 1406, 337, 19616, 8020, 50564], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 217, "seek": 128000, "start": 1284.0, "end": 1287.0, "text": " in records, you can specify them.", "tokens": [50564, 294, 7724, 11, 291, 393, 16500, 552, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 218, "seek": 128000, "start": 1287.0, "end": 1290.0, "text": " The checks are not very strict, right?", "tokens": [50714, 440, 13834, 366, 406, 588, 10910, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 219, "seek": 128000, "start": 1290.0, "end": 1292.0, "text": " And I haven't had much feedback on that.", "tokens": [50864, 400, 286, 2378, 380, 632, 709, 5824, 322, 300, 13, 50964], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 220, "seek": 128000, "start": 1292.0, "end": 1296.0, "text": " So like if people run into trouble, I look into it,", "tokens": [50964, 407, 411, 498, 561, 1190, 666, 5253, 11, 286, 574, 666, 309, 11, 51164], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 221, "seek": 128000, "start": 1296.0, "end": 1298.0, "text": " otherwise I'm just going to keep it as it is.", "tokens": [51164, 5911, 286, 478, 445, 516, 281, 1066, 309, 382, 309, 307, 13, 51264], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 222, "seek": 128000, "start": 1298.0, "end": 1300.0, "text": " Right now you can use them and no one's complaining,", "tokens": [51264, 1779, 586, 291, 393, 764, 552, 293, 572, 472, 311, 20740, 11, 51364], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 223, "seek": 128000, "start": 1300.0, "end": 1304.0, "text": " so I'm happy with that.", "tokens": [51364, 370, 286, 478, 2055, 365, 300, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16682613372802735, "compression_ratio": 1.5064935064935066, "no_speech_prob": 0.27163058519363403}, {"id": 224, "seek": 130400, "start": 1305.0, "end": 1307.0, "text": " Thank you.", "tokens": [50414, 1044, 291, 13, 50514], "temperature": 0.0, "avg_logprob": -0.31777828389948065, "compression_ratio": 1.0, "no_speech_prob": 0.6489008069038391}, {"id": 225, "seek": 130400, "start": 1307.0, "end": 1308.0, "text": " Thank you.", "tokens": [50514, 1044, 291, 13, 50564], "temperature": 0.0, "avg_logprob": -0.31777828389948065, "compression_ratio": 1.0, "no_speech_prob": 0.6489008069038391}], "language": "en"}