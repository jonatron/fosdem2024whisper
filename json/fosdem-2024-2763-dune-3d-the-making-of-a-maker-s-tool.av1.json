{"text": " Hi, I'm Lucas. So when I am not writing the CAD software of any kind, I usually do hardware projects, some of which I've shown here. As you may see, they're pretty much all the same thing. They are a circuit board in a 3D printed case. So for designing them, one needs basically two softwares. There's CAD software for the printed circuit board and software for the 3D printed case. What both of these things have in common, that CAD is pretty important there, since what you're drawing CAD is what you're going to get. So when you're doing, for example, woodwork or metalworking, if you need an extra hole, well, you just drill it. But that obviously doesn't work for PCBs or 3D printing. So yeah, it's pretty important to have a proper CAD software there for the first thing, for PCBs. I solved that issue for myself a couple of years ago by writing Horizon EDA, but that's not what I'm going to talk today. But for the 3D stuff, I found myself oscillating between FreeCAD and Solvespace, since both some things great, but neither of them covered everything I needed. So let me elaborate on that. So FreeCAD itself, pretty much all the features I needed, some of which are step important export and support for chanples and fillets to make the things look more prettier with a little effort, but it falls short by not, by the peculiarities of referencing stuff, the sketch of being modal and not being able to easily make constraints in 3D. For Solvespace, it's pretty much the other way around. It has significantly less features, but these features work really well and I found it really pleasant to use. So at first, it's dismissed it, and since it doesn't do step import and export, but everything else works really well. So is there anything that does all of that? Unfortunately, I didn't find anything, so I thought, well, it's not the first time I've written a CAD software, so maybe let's try writing a 3D CAD software. So after all, so what do we need to make a 3D CAD? So first of all, we need to show something to the user. For that, we need a 3D viewport with all of the usual stuff like shading, navigation, and selection, but fortunately, I already did more or less that for Horizon EDA, since Horizon EDA has a 3D preview, and it's basically all of the OpenGL boilerplate already done. So we have that. Next up, we need a geometry kernel that takes care of all of the Boolean operations and extrusion and stuff like that, and for that, there are some of you might know it, OpenCascade, also from the talk before. It has some words, but I had some experience with it from Horizon EDA, and it works okay. And it's also pretty much the only game in town if you want to have jump-fast forwards and proper interaction with stuff. So that one's there as well. And next up, we need a solver that takes care of solving all of the constraints and entities and stuff. And for that, there's also something that we can use, in particular, the solver from false space. The solver from false space is available as a library, but that's with a small asterisk. The library itself is a C wrapper around the C++ internal from false space, but the wrapper itself is pretty limited, so I ended up not using the wrapper and ended up using the internals from false space myself, and they are pretty easy to use, actually. So we have that one as well. And last but not least, we need a user interface of some sort with all of the boring stuff, like preferences dialog, way to select tools, the general tool handling, and all of those little, lot important stuff, such as the access lollipop that shows which access goes in which direction. But fortunately, I already had all of that in some way or another from Horizon EDA. It's a 2D CAD, but well, undo, redo, and stuff like that pretty much doesn't care if it's a 2D or 3D CAD. So yeah, then I realized, well, I had all of the building blocks to make a 3D CAD, so I started with it, and that was back in August last year, and now I'm here to talk to you about 3D, a parametric 3D CAD. So I said it took about six months to get from basically a blank window in GTK to where we are right now. As probably expected, it's written in C++20, and it's about 33,000 lines of code, and it uses the, you use GTKMM4 as a GUI toolkit. Using GTKMM3 would have probably been a slight bit faster, since I've already used that for Horizon EDA, so I would have been able to directly copy-paste code. But yeah, GTKMM4 was the last version at the time I started it, so I went with that, but that's probably a topic that I should write a book about, since there are quite a things that were a bit annoying about GTKMM4. And same as Horizon EDA, it uses UUIDs for everything, and uses JSON as a data storage format. So yeah, I pretty much reused all of the concepts that worked well in Horizon EDA for GTKMM4. And yeah, just a couple of days ago, I released version 1.0, and yeah, so it's already packaged for, in Fatpack, for the Windows folks, there's an MSI installer, and the good thing was, well, it wasn't the first time that I had to take care of all of the packaging, so the packaging stuff was pretty much just copy-paste from Horizon EDA again. So what does it do? It has a parametric to the sketcher, that has all of the usual stuff like lines, arcs, circles, and constraints to draw these lines and arcs. There's a convenient all-in-one tool that handles lines and arcs in one tool, so one can draw arbitrary outlines in one tool, and there are also some convenience tools for drawing an axis-aligned rectangle or regular polygons, as they're needed, for example, for hex nut inserts also. To make things 3D, there's extrude and lathe, so lathe is basically a 360-degree revolution, revolutions that are not 360 degrees aren't supported yet. And to repeat things, there's linear and polar array, and to combine multiple solids, there's the usual operations from open cascade, so union, difference, and intersection. So for that, I just basically had to expose to user what open cascade offers for to make an N in 3D. There are also constraints such as distance, angle, point-to-plane, or point-to-plane distance, or that's useful for example when you want to make a hole that stops at 3mm from the last edge, you can just use a point-to-plane distance of 3mm, and that's it. For the step import, I basically copy-pasted the code from Horizon EDA that turns the step model into a set of triangles, and I also reused the code for extracting the reference points since the idea is that you want to import your circuit board, and you want to add some reference points, and then you can reference these points in the geometry, for example if you want to fit your case around the circuit board or make cutouts for connectors. The last important point are fillets and chamfers. These are basically just calling the open cascade functions to add a chamfer or a filler to edge, but unfortunately the way it's implemented right now is subject to a topological naming problem since all of these edges are just referenced by index, so if one changes the geometry in a way that adds extra edges or so, it breaks, but well. I was used to that from FreeCAD, so it was okay. So how does it all fit together? So in the middle there's the thing for the document that consists of all of the introduced specific data structures like groups, entities, and constraints. These are then presented to the user with the renderer and canvas, where they are turned into primitives that I can render with OpenGL, and then the user uses the tools, same as in Horizon EDA, to interact with the document and to take care of the solid model. All of the entities get transformed into something that OpenCascade can understand, and then that's again triangulated and rendered. And to take care of solving the things, there's the interface to the solver in the space, solver in solve space, and app-rolly as to be expected. The hardest part of implementing all of this are these interfaces between OpenCascade and the solve space part, since that's where the impedance mismatches are, since I had my data model and the data model from OpenCascade or solve space, and it somehow had to fit together. So what's next? So there are some, of course I have got some plans, mostly some basic things like measurements, revolutions that are not 360 degrees, or stuff like copy-paste. But the big distinction between, from the project point of view, between doing 3D and Horizon EDA is that with Horizon EDA at least have the aspiration that one might eventually be able to do really big and complex parts, but I want UnityD to stay and to be and stay small and little easy to use CAD software that doesn't have the focus to cover everything and all. It should just be a tool to make simple 3D printed laser cut or CNC machined cases for PCBs, probably something else, but it already does pretty much everything I need for my use case, so it'll probably, mostly stay as is, with of course some bug fix and UI enhancements, but yeah, don't expect anything big to happen there in the future. And I think then we're already over with the presentation, and now for questions I think. So, questions? Thanks for the talk. Very impressive for this time scale. You were talking about having 3D constraints, and then you just showed an extrusion size, but well that's something you can also do in FreeCAD, right? Do you have any other possibilities to do more complex constraints in 3D space? Yeah, sure. Okay, so the question was if there are any more complex constraints in 3D space, there are some, such as angled or point-to-point distances, or what one can also do since 2D and 3D can work together with a means of work planes. One could, for example, construct at a work plane in the same group as the extrusion that's perpendicular to the extrusion, then do whatever one needs there, and then constrain the extrusion to that. Or one can also constrain the extrusion to another sketch, so one can put the extrusion in a work plane and then do stuff there, so there really isn't, and then it's all protected into the work plane itself, so there really is no limit of what can do, but yeah, that's all the way that wall space works. Thank you for your talk and impressive effort. Do you think that CAD programs, CAD suites with this level of complexity could be a good stepping stone for beginners and maybe even children from very simple drag and drop programs like TinkerCAD towards something more parametric that they can manage to use when they start to grasp the basics of these kind of suites? So I think, yeah, it definitely has a learning curve since one needs to grasp the concept of constraints, degrees of freedom and such, but I think that's pretty much the same thing in every parametric CAD. So yeah, there are some idosyncrasies in terms of the user, the interface, and it's driven by a global menu that unfortunately has some discoverability issues, but yeah, I think it's something that one can also try with children, but yeah, I've never, I don't have any experience in that education space. Yeah. Great work indeed, especially for the time you spent on it. So in the beginning you showed these tables with check marks, but you didn't explicitly conclude that you had all the check marks for your software. Yeah, so let's go over it. So a step import, step import and export is pretty much done by OpenCascade. Since OpenCascade does the import, i.e. the triangulation and extracting reference points and export is just calling a couple of methods to take the topo ds shapes and write them to a step file, gemfas and fillets are just methods to call from OpenCascade, and all of the three bottom things are basically the same thing as in SolveSpace, since overall June 3D is pretty similar to SolveSpace in terms of overall operation. There are groups, constraints, entities, and if one knows and likes SolveSpace, they'll probably also like June 3D. Right, and another question, thanks. If you would have spent the same time in either SolveSpace or FreeCAD, could you have improved them to your needs? Yeah, but I was pretty sure that question will come up. So, let's go over it. I think FreeCAD, I've looked at the code sometimes and I've also find that there are really a lot of code, and I think especially changes like having a non-modal schedule would have probably been way more work, and with SolveSpace, they have their own geometry kernel for probably good reasons, and from a project conceptual point of view, I think OpenCascade and SolveSpace are pretty much diametrical. SolveSpace has really this nice self-contained thing without that big OpenCascade dependency hanging off the side. So, yeah, that's why I conclude, well, it's probably easier to write my own, and I also noticed that I really like writing CAD software. Okay, we have time for one more question. I use CAD software to create 3D models for on PCBs, to render on PCBs, and I felt that problems like SolveSpace are missing color support for faces. Does your Dune3D support this? Right now, it doesn't support colored faces. Yeah, I have to look into how to accomplish that with OpenCascade. These are always the topics that are a bit tedious, and yeah, well, it's OpenCascade, and as mentioned in the talk before, it has a rather cryptic API, but the good thing is there's FreeCAD, so FreeCAD is pretty much the best OpenCascade documentation there is. Okay, thank you. Okay, thank you very much, Lucas.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 7.44, "text": " Hi, I'm Lucas.", "tokens": [50364, 2421, 11, 286, 478, 19178, 13, 50736], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 1, "seek": 0, "start": 7.44, "end": 14.280000000000001, "text": " So when I am not writing the CAD software of any kind, I usually do hardware projects,", "tokens": [50736, 407, 562, 286, 669, 406, 3579, 264, 41143, 4722, 295, 604, 733, 11, 286, 2673, 360, 8837, 4455, 11, 51078], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 2, "seek": 0, "start": 14.280000000000001, "end": 16.080000000000002, "text": " some of which I've shown here.", "tokens": [51078, 512, 295, 597, 286, 600, 4898, 510, 13, 51168], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 3, "seek": 0, "start": 16.080000000000002, "end": 18.44, "text": " As you may see, they're pretty much all the same thing.", "tokens": [51168, 1018, 291, 815, 536, 11, 436, 434, 1238, 709, 439, 264, 912, 551, 13, 51286], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 4, "seek": 0, "start": 18.44, "end": 21.92, "text": " They are a circuit board in a 3D printed case.", "tokens": [51286, 814, 366, 257, 9048, 3150, 294, 257, 805, 35, 13567, 1389, 13, 51460], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 5, "seek": 0, "start": 21.92, "end": 26.12, "text": " So for designing them, one needs basically two softwares.", "tokens": [51460, 407, 337, 14685, 552, 11, 472, 2203, 1936, 732, 2787, 4151, 495, 13, 51670], "temperature": 0.0, "avg_logprob": -0.2096488642138104, "compression_ratio": 1.4504950495049505, "no_speech_prob": 0.04407549276947975}, {"id": 6, "seek": 2612, "start": 26.12, "end": 33.84, "text": " There's CAD software for the printed circuit board and software for the 3D printed case.", "tokens": [50364, 821, 311, 41143, 4722, 337, 264, 13567, 9048, 3150, 293, 4722, 337, 264, 805, 35, 13567, 1389, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 7, "seek": 2612, "start": 33.84, "end": 39.28, "text": " What both of these things have in common, that CAD is pretty important there, since", "tokens": [50750, 708, 1293, 295, 613, 721, 362, 294, 2689, 11, 300, 41143, 307, 1238, 1021, 456, 11, 1670, 51022], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 8, "seek": 2612, "start": 39.28, "end": 41.56, "text": " what you're drawing CAD is what you're going to get.", "tokens": [51022, 437, 291, 434, 6316, 41143, 307, 437, 291, 434, 516, 281, 483, 13, 51136], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 9, "seek": 2612, "start": 41.56, "end": 45.480000000000004, "text": " So when you're doing, for example, woodwork or metalworking, if you need an extra hole,", "tokens": [51136, 407, 562, 291, 434, 884, 11, 337, 1365, 11, 4576, 1902, 420, 5760, 22475, 11, 498, 291, 643, 364, 2857, 5458, 11, 51332], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 10, "seek": 2612, "start": 45.480000000000004, "end": 47.64, "text": " well, you just drill it.", "tokens": [51332, 731, 11, 291, 445, 11392, 309, 13, 51440], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 11, "seek": 2612, "start": 47.64, "end": 52.760000000000005, "text": " But that obviously doesn't work for PCBs or 3D printing.", "tokens": [51440, 583, 300, 2745, 1177, 380, 589, 337, 42065, 82, 420, 805, 35, 14699, 13, 51696], "temperature": 0.0, "avg_logprob": -0.2532190777006603, "compression_ratio": 1.6527196652719665, "no_speech_prob": 0.005494552198797464}, {"id": 12, "seek": 5276, "start": 52.76, "end": 58.839999999999996, "text": " So yeah, it's pretty important to have a proper CAD software there for the first thing,", "tokens": [50364, 407, 1338, 11, 309, 311, 1238, 1021, 281, 362, 257, 2296, 41143, 4722, 456, 337, 264, 700, 551, 11, 50668], "temperature": 0.0, "avg_logprob": -0.1898906751610767, "compression_ratio": 1.4398148148148149, "no_speech_prob": 0.0020206074696034193}, {"id": 13, "seek": 5276, "start": 58.839999999999996, "end": 60.0, "text": " for PCBs.", "tokens": [50668, 337, 42065, 82, 13, 50726], "temperature": 0.0, "avg_logprob": -0.1898906751610767, "compression_ratio": 1.4398148148148149, "no_speech_prob": 0.0020206074696034193}, {"id": 14, "seek": 5276, "start": 60.0, "end": 65.44, "text": " I solved that issue for myself a couple of years ago by writing Horizon EDA, but that's", "tokens": [50726, 286, 13041, 300, 2734, 337, 2059, 257, 1916, 295, 924, 2057, 538, 3579, 40102, 462, 7509, 11, 457, 300, 311, 50998], "temperature": 0.0, "avg_logprob": -0.1898906751610767, "compression_ratio": 1.4398148148148149, "no_speech_prob": 0.0020206074696034193}, {"id": 15, "seek": 5276, "start": 65.44, "end": 68.44, "text": " not what I'm going to talk today.", "tokens": [50998, 406, 437, 286, 478, 516, 281, 751, 965, 13, 51148], "temperature": 0.0, "avg_logprob": -0.1898906751610767, "compression_ratio": 1.4398148148148149, "no_speech_prob": 0.0020206074696034193}, {"id": 16, "seek": 5276, "start": 68.44, "end": 77.47999999999999, "text": " But for the 3D stuff, I found myself oscillating between FreeCAD and Solvespace, since both", "tokens": [51148, 583, 337, 264, 805, 35, 1507, 11, 286, 1352, 2059, 18225, 990, 1296, 11551, 34, 6112, 293, 7026, 85, 45792, 11, 1670, 1293, 51600], "temperature": 0.0, "avg_logprob": -0.1898906751610767, "compression_ratio": 1.4398148148148149, "no_speech_prob": 0.0020206074696034193}, {"id": 17, "seek": 7748, "start": 78.16000000000001, "end": 83.0, "text": " some things great, but neither of them covered everything I needed.", "tokens": [50398, 512, 721, 869, 11, 457, 9662, 295, 552, 5343, 1203, 286, 2978, 13, 50640], "temperature": 0.0, "avg_logprob": -0.2976998747064826, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.002505633980035782}, {"id": 18, "seek": 7748, "start": 83.0, "end": 85.2, "text": " So let me elaborate on that.", "tokens": [50640, 407, 718, 385, 20945, 322, 300, 13, 50750], "temperature": 0.0, "avg_logprob": -0.2976998747064826, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.002505633980035782}, {"id": 19, "seek": 7748, "start": 85.2, "end": 91.72, "text": " So FreeCAD itself, pretty much all the features I needed, some of which are step important", "tokens": [50750, 407, 11551, 34, 6112, 2564, 11, 1238, 709, 439, 264, 4122, 286, 2978, 11, 512, 295, 597, 366, 1823, 1021, 51076], "temperature": 0.0, "avg_logprob": -0.2976998747064826, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.002505633980035782}, {"id": 20, "seek": 7748, "start": 91.72, "end": 98.72, "text": " export and support for chanples and fillets to make the things look more prettier with", "tokens": [51076, 10725, 293, 1406, 337, 417, 282, 2622, 293, 2836, 1385, 281, 652, 264, 721, 574, 544, 36825, 365, 51426], "temperature": 0.0, "avg_logprob": -0.2976998747064826, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.002505633980035782}, {"id": 21, "seek": 7748, "start": 98.72, "end": 106.72, "text": " a little effort, but it falls short by not, by the peculiarities of referencing stuff,", "tokens": [51426, 257, 707, 4630, 11, 457, 309, 8804, 2099, 538, 406, 11, 538, 264, 27149, 1088, 295, 40582, 1507, 11, 51826], "temperature": 0.0, "avg_logprob": -0.2976998747064826, "compression_ratio": 1.5764192139737991, "no_speech_prob": 0.002505633980035782}, {"id": 22, "seek": 10672, "start": 106.72, "end": 114.03999999999999, "text": " the sketch of being modal and not being able to easily make constraints in 3D.", "tokens": [50364, 264, 12325, 295, 885, 39745, 293, 406, 885, 1075, 281, 3612, 652, 18491, 294, 805, 35, 13, 50730], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 23, "seek": 10672, "start": 114.03999999999999, "end": 119.44, "text": " For Solvespace, it's pretty much the other way around.", "tokens": [50730, 1171, 7026, 85, 45792, 11, 309, 311, 1238, 709, 264, 661, 636, 926, 13, 51000], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 24, "seek": 10672, "start": 119.44, "end": 124.84, "text": " It has significantly less features, but these features work really well and I found it really", "tokens": [51000, 467, 575, 10591, 1570, 4122, 11, 457, 613, 4122, 589, 534, 731, 293, 286, 1352, 309, 534, 51270], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 25, "seek": 10672, "start": 124.84, "end": 126.0, "text": " pleasant to use.", "tokens": [51270, 16232, 281, 764, 13, 51328], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 26, "seek": 10672, "start": 126.0, "end": 132.48, "text": " So at first, it's dismissed it, and since it doesn't do step import and export, but", "tokens": [51328, 407, 412, 700, 11, 309, 311, 29970, 309, 11, 293, 1670, 309, 1177, 380, 360, 1823, 974, 293, 10725, 11, 457, 51652], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 27, "seek": 10672, "start": 132.48, "end": 134.04, "text": " everything else works really well.", "tokens": [51652, 1203, 1646, 1985, 534, 731, 13, 51730], "temperature": 0.0, "avg_logprob": -0.28074217355379494, "compression_ratio": 1.5851528384279476, "no_speech_prob": 0.002578564453870058}, {"id": 28, "seek": 13404, "start": 134.04, "end": 137.6, "text": " So is there anything that does all of that?", "tokens": [50364, 407, 307, 456, 1340, 300, 775, 439, 295, 300, 30, 50542], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 29, "seek": 13404, "start": 137.6, "end": 143.48, "text": " Unfortunately, I didn't find anything, so I thought, well, it's not the first time I've", "tokens": [50542, 8590, 11, 286, 994, 380, 915, 1340, 11, 370, 286, 1194, 11, 731, 11, 309, 311, 406, 264, 700, 565, 286, 600, 50836], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 30, "seek": 13404, "start": 143.48, "end": 148.44, "text": " written a CAD software, so maybe let's try writing a 3D CAD software.", "tokens": [50836, 3720, 257, 41143, 4722, 11, 370, 1310, 718, 311, 853, 3579, 257, 805, 35, 41143, 4722, 13, 51084], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 31, "seek": 13404, "start": 148.44, "end": 151.92, "text": " So after all, so what do we need to make a 3D CAD?", "tokens": [51084, 407, 934, 439, 11, 370, 437, 360, 321, 643, 281, 652, 257, 805, 35, 41143, 30, 51258], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 32, "seek": 13404, "start": 151.92, "end": 154.23999999999998, "text": " So first of all, we need to show something to the user.", "tokens": [51258, 407, 700, 295, 439, 11, 321, 643, 281, 855, 746, 281, 264, 4195, 13, 51374], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 33, "seek": 13404, "start": 154.23999999999998, "end": 161.23999999999998, "text": " For that, we need a 3D viewport with all of the usual stuff like shading, navigation,", "tokens": [51374, 1171, 300, 11, 321, 643, 257, 805, 35, 1910, 2707, 365, 439, 295, 264, 7713, 1507, 411, 30556, 11, 17346, 11, 51724], "temperature": 0.0, "avg_logprob": -0.17765175668816818, "compression_ratio": 1.6837606837606838, "no_speech_prob": 0.06580966711044312}, {"id": 34, "seek": 16124, "start": 161.24, "end": 167.24, "text": " and selection, but fortunately, I already did more or less that for Horizon EDA, since", "tokens": [50364, 293, 9450, 11, 457, 25511, 11, 286, 1217, 630, 544, 420, 1570, 300, 337, 40102, 462, 7509, 11, 1670, 50664], "temperature": 0.0, "avg_logprob": -0.25408267974853516, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0011656590504571795}, {"id": 35, "seek": 16124, "start": 167.24, "end": 174.36, "text": " Horizon EDA has a 3D preview, and it's basically all of the OpenGL boilerplate already done.", "tokens": [50664, 40102, 462, 7509, 575, 257, 805, 35, 14281, 11, 293, 309, 311, 1936, 439, 295, 264, 7238, 19440, 39228, 37008, 1217, 1096, 13, 51020], "temperature": 0.0, "avg_logprob": -0.25408267974853516, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0011656590504571795}, {"id": 36, "seek": 16124, "start": 174.36, "end": 176.52, "text": " So we have that.", "tokens": [51020, 407, 321, 362, 300, 13, 51128], "temperature": 0.0, "avg_logprob": -0.25408267974853516, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0011656590504571795}, {"id": 37, "seek": 16124, "start": 176.52, "end": 182.32000000000002, "text": " Next up, we need a geometry kernel that takes care of all of the Boolean operations and extrusion", "tokens": [51128, 3087, 493, 11, 321, 643, 257, 18426, 28256, 300, 2516, 1127, 295, 439, 295, 264, 23351, 28499, 7705, 293, 16455, 5704, 51418], "temperature": 0.0, "avg_logprob": -0.25408267974853516, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0011656590504571795}, {"id": 38, "seek": 16124, "start": 182.32000000000002, "end": 189.08, "text": " and stuff like that, and for that, there are some of you might know it, OpenCascade, also", "tokens": [51418, 293, 1507, 411, 300, 11, 293, 337, 300, 11, 456, 366, 512, 295, 291, 1062, 458, 309, 11, 7238, 34, 4806, 762, 11, 611, 51756], "temperature": 0.0, "avg_logprob": -0.25408267974853516, "compression_ratio": 1.5737704918032787, "no_speech_prob": 0.0011656590504571795}, {"id": 39, "seek": 18908, "start": 189.08, "end": 190.72, "text": " from the talk before.", "tokens": [50364, 490, 264, 751, 949, 13, 50446], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 40, "seek": 18908, "start": 190.72, "end": 200.96, "text": " It has some words, but I had some experience with it from Horizon EDA, and it works okay.", "tokens": [50446, 467, 575, 512, 2283, 11, 457, 286, 632, 512, 1752, 365, 309, 490, 40102, 462, 7509, 11, 293, 309, 1985, 1392, 13, 50958], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 41, "seek": 18908, "start": 200.96, "end": 204.28, "text": " And it's also pretty much the only game in town if you want to have jump-fast forwards", "tokens": [50958, 400, 309, 311, 611, 1238, 709, 264, 787, 1216, 294, 3954, 498, 291, 528, 281, 362, 3012, 12, 7011, 30126, 51124], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 42, "seek": 18908, "start": 204.28, "end": 206.28, "text": " and proper interaction with stuff.", "tokens": [51124, 293, 2296, 9285, 365, 1507, 13, 51224], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 43, "seek": 18908, "start": 206.28, "end": 210.24, "text": " So that one's there as well.", "tokens": [51224, 407, 300, 472, 311, 456, 382, 731, 13, 51422], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 44, "seek": 18908, "start": 210.24, "end": 216.68, "text": " And next up, we need a solver that takes care of solving all of the constraints and entities", "tokens": [51422, 400, 958, 493, 11, 321, 643, 257, 1404, 331, 300, 2516, 1127, 295, 12606, 439, 295, 264, 18491, 293, 16667, 51744], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 45, "seek": 18908, "start": 216.68, "end": 218.68, "text": " and stuff.", "tokens": [51744, 293, 1507, 13, 51844], "temperature": 0.0, "avg_logprob": -0.25359792709350587, "compression_ratio": 1.5508474576271187, "no_speech_prob": 0.010581974871456623}, {"id": 46, "seek": 21868, "start": 218.68, "end": 223.0, "text": " And for that, there's also something that we can use, in particular, the solver from", "tokens": [50364, 400, 337, 300, 11, 456, 311, 611, 746, 300, 321, 393, 764, 11, 294, 1729, 11, 264, 1404, 331, 490, 50580], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 47, "seek": 21868, "start": 223.0, "end": 224.0, "text": " false space.", "tokens": [50580, 7908, 1901, 13, 50630], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 48, "seek": 21868, "start": 224.0, "end": 228.56, "text": " The solver from false space is available as a library, but that's with a small asterisk.", "tokens": [50630, 440, 1404, 331, 490, 7908, 1901, 307, 2435, 382, 257, 6405, 11, 457, 300, 311, 365, 257, 1359, 257, 3120, 7797, 13, 50858], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 49, "seek": 21868, "start": 228.56, "end": 233.52, "text": " The library itself is a C wrapper around the C++ internal from false space, but the wrapper", "tokens": [50858, 440, 6405, 2564, 307, 257, 383, 46906, 926, 264, 383, 25472, 6920, 490, 7908, 1901, 11, 457, 264, 46906, 51106], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 50, "seek": 21868, "start": 233.52, "end": 239.72, "text": " itself is pretty limited, so I ended up not using the wrapper and ended up using the internals", "tokens": [51106, 2564, 307, 1238, 5567, 11, 370, 286, 4590, 493, 406, 1228, 264, 46906, 293, 4590, 493, 1228, 264, 2154, 1124, 51416], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 51, "seek": 21868, "start": 239.72, "end": 244.24, "text": " from false space myself, and they are pretty easy to use, actually.", "tokens": [51416, 490, 7908, 1901, 2059, 11, 293, 436, 366, 1238, 1858, 281, 764, 11, 767, 13, 51642], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 52, "seek": 21868, "start": 244.24, "end": 246.24, "text": " So we have that one as well.", "tokens": [51642, 407, 321, 362, 300, 472, 382, 731, 13, 51742], "temperature": 0.0, "avg_logprob": -0.1665888840590066, "compression_ratio": 1.8951612903225807, "no_speech_prob": 0.002013856777921319}, {"id": 53, "seek": 24624, "start": 246.28, "end": 250.56, "text": " And last but not least, we need a user interface of some sort with all of the boring stuff,", "tokens": [50366, 400, 1036, 457, 406, 1935, 11, 321, 643, 257, 4195, 9226, 295, 512, 1333, 365, 439, 295, 264, 9989, 1507, 11, 50580], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 54, "seek": 24624, "start": 250.56, "end": 256.76, "text": " like preferences dialog, way to select tools, the general tool handling, and all of those", "tokens": [50580, 411, 21910, 19308, 11, 636, 281, 3048, 3873, 11, 264, 2674, 2290, 13175, 11, 293, 439, 295, 729, 50890], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 55, "seek": 24624, "start": 256.76, "end": 262.24, "text": " little, lot important stuff, such as the access lollipop that shows which access goes in which", "tokens": [50890, 707, 11, 688, 1021, 1507, 11, 1270, 382, 264, 2105, 450, 285, 647, 404, 300, 3110, 597, 2105, 1709, 294, 597, 51164], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 56, "seek": 24624, "start": 262.24, "end": 263.24, "text": " direction.", "tokens": [51164, 3513, 13, 51214], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 57, "seek": 24624, "start": 263.24, "end": 267.52, "text": " But fortunately, I already had all of that in some way or another from Horizon EDA.", "tokens": [51214, 583, 25511, 11, 286, 1217, 632, 439, 295, 300, 294, 512, 636, 420, 1071, 490, 40102, 462, 7509, 13, 51428], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 58, "seek": 24624, "start": 267.52, "end": 271.56, "text": " It's a 2D CAD, but well, undo, redo, and stuff like that pretty much doesn't care if", "tokens": [51428, 467, 311, 257, 568, 35, 41143, 11, 457, 731, 11, 23779, 11, 29956, 11, 293, 1507, 411, 300, 1238, 709, 1177, 380, 1127, 498, 51630], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 59, "seek": 24624, "start": 271.56, "end": 274.40000000000003, "text": " it's a 2D or 3D CAD.", "tokens": [51630, 309, 311, 257, 568, 35, 420, 805, 35, 41143, 13, 51772], "temperature": 0.0, "avg_logprob": -0.24557244686679985, "compression_ratio": 1.6448275862068966, "no_speech_prob": 0.010467198677361012}, {"id": 60, "seek": 27440, "start": 274.4, "end": 280.59999999999997, "text": " So yeah, then I realized, well, I had all of the building blocks to make a 3D CAD, so", "tokens": [50364, 407, 1338, 11, 550, 286, 5334, 11, 731, 11, 286, 632, 439, 295, 264, 2390, 8474, 281, 652, 257, 805, 35, 41143, 11, 370, 50674], "temperature": 0.0, "avg_logprob": -0.17279147097938938, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.002104562008753419}, {"id": 61, "seek": 27440, "start": 280.59999999999997, "end": 287.28, "text": " I started with it, and that was back in August last year, and now I'm here to talk to you", "tokens": [50674, 286, 1409, 365, 309, 11, 293, 300, 390, 646, 294, 6897, 1036, 1064, 11, 293, 586, 286, 478, 510, 281, 751, 281, 291, 51008], "temperature": 0.0, "avg_logprob": -0.17279147097938938, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.002104562008753419}, {"id": 62, "seek": 27440, "start": 287.28, "end": 290.2, "text": " about 3D, a parametric 3D CAD.", "tokens": [51008, 466, 805, 35, 11, 257, 6220, 17475, 805, 35, 41143, 13, 51154], "temperature": 0.0, "avg_logprob": -0.17279147097938938, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.002104562008753419}, {"id": 63, "seek": 27440, "start": 290.2, "end": 301.12, "text": " So I said it took about six months to get from basically a blank window in GTK to where", "tokens": [51154, 407, 286, 848, 309, 1890, 466, 2309, 2493, 281, 483, 490, 1936, 257, 8247, 4910, 294, 17530, 42, 281, 689, 51700], "temperature": 0.0, "avg_logprob": -0.17279147097938938, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.002104562008753419}, {"id": 64, "seek": 27440, "start": 301.12, "end": 302.56, "text": " we are right now.", "tokens": [51700, 321, 366, 558, 586, 13, 51772], "temperature": 0.0, "avg_logprob": -0.17279147097938938, "compression_ratio": 1.4444444444444444, "no_speech_prob": 0.002104562008753419}, {"id": 65, "seek": 30256, "start": 302.56, "end": 312.08, "text": " As probably expected, it's written in C++20, and it's about 33,000 lines of code, and it", "tokens": [50364, 1018, 1391, 5176, 11, 309, 311, 3720, 294, 383, 25472, 2009, 11, 293, 309, 311, 466, 11816, 11, 1360, 3876, 295, 3089, 11, 293, 309, 50840], "temperature": 0.0, "avg_logprob": -0.26887128594216336, "compression_ratio": 1.412621359223301, "no_speech_prob": 0.008826456032693386}, {"id": 66, "seek": 30256, "start": 312.08, "end": 316.44, "text": " uses the, you use GTKMM4 as a GUI toolkit.", "tokens": [50840, 4960, 264, 11, 291, 764, 17530, 42, 17365, 19, 382, 257, 17917, 40, 40167, 13, 51058], "temperature": 0.0, "avg_logprob": -0.26887128594216336, "compression_ratio": 1.412621359223301, "no_speech_prob": 0.008826456032693386}, {"id": 67, "seek": 30256, "start": 316.44, "end": 322.64, "text": " Using GTKMM3 would have probably been a slight bit faster, since I've already used that for", "tokens": [51058, 11142, 17530, 42, 17365, 18, 576, 362, 1391, 668, 257, 4036, 857, 4663, 11, 1670, 286, 600, 1217, 1143, 300, 337, 51368], "temperature": 0.0, "avg_logprob": -0.26887128594216336, "compression_ratio": 1.412621359223301, "no_speech_prob": 0.008826456032693386}, {"id": 68, "seek": 30256, "start": 322.64, "end": 326.92, "text": " Horizon EDA, so I would have been able to directly copy-paste code.", "tokens": [51368, 40102, 462, 7509, 11, 370, 286, 576, 362, 668, 1075, 281, 3838, 5055, 12, 79, 9079, 3089, 13, 51582], "temperature": 0.0, "avg_logprob": -0.26887128594216336, "compression_ratio": 1.412621359223301, "no_speech_prob": 0.008826456032693386}, {"id": 69, "seek": 32692, "start": 327.48, "end": 334.36, "text": " But yeah, GTKMM4 was the last version at the time I started it, so I went with that,", "tokens": [50392, 583, 1338, 11, 17530, 42, 17365, 19, 390, 264, 1036, 3037, 412, 264, 565, 286, 1409, 309, 11, 370, 286, 1437, 365, 300, 11, 50736], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 70, "seek": 32692, "start": 334.36, "end": 337.44, "text": " but that's probably a topic that I should write a book about, since there are quite", "tokens": [50736, 457, 300, 311, 1391, 257, 4829, 300, 286, 820, 2464, 257, 1446, 466, 11, 1670, 456, 366, 1596, 50890], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 71, "seek": 32692, "start": 337.44, "end": 342.48, "text": " a things that were a bit annoying about GTKMM4.", "tokens": [50890, 257, 721, 300, 645, 257, 857, 11304, 466, 17530, 42, 17365, 19, 13, 51142], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 72, "seek": 32692, "start": 342.48, "end": 348.96000000000004, "text": " And same as Horizon EDA, it uses UUIDs for everything, and uses JSON as a data storage", "tokens": [51142, 400, 912, 382, 40102, 462, 7509, 11, 309, 4960, 624, 52, 2777, 82, 337, 1203, 11, 293, 4960, 31828, 382, 257, 1412, 6725, 51466], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 73, "seek": 32692, "start": 348.96000000000004, "end": 349.96000000000004, "text": " format.", "tokens": [51466, 7877, 13, 51516], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 74, "seek": 32692, "start": 349.96000000000004, "end": 354.88, "text": " So yeah, I pretty much reused all of the concepts that worked well in Horizon EDA for", "tokens": [51516, 407, 1338, 11, 286, 1238, 709, 319, 4717, 439, 295, 264, 10392, 300, 2732, 731, 294, 40102, 462, 7509, 337, 51762], "temperature": 0.0, "avg_logprob": -0.24814055258767648, "compression_ratio": 1.55078125, "no_speech_prob": 0.0028793667443096638}, {"id": 75, "seek": 35488, "start": 354.88, "end": 355.88, "text": " GTKMM4.", "tokens": [50364, 17530, 42, 17365, 19, 13, 50414], "temperature": 0.0, "avg_logprob": -0.2768343548442042, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0006654716562479734}, {"id": 76, "seek": 35488, "start": 355.88, "end": 366.48, "text": " And yeah, just a couple of days ago, I released version 1.0, and yeah, so it's already packaged", "tokens": [50414, 400, 1338, 11, 445, 257, 1916, 295, 1708, 2057, 11, 286, 4736, 3037, 502, 13, 15, 11, 293, 1338, 11, 370, 309, 311, 1217, 38162, 50944], "temperature": 0.0, "avg_logprob": -0.2768343548442042, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0006654716562479734}, {"id": 77, "seek": 35488, "start": 366.48, "end": 374.6, "text": " for, in Fatpack, for the Windows folks, there's an MSI installer, and the good thing was,", "tokens": [50944, 337, 11, 294, 16948, 9539, 11, 337, 264, 8591, 4024, 11, 456, 311, 364, 7395, 40, 46620, 11, 293, 264, 665, 551, 390, 11, 51350], "temperature": 0.0, "avg_logprob": -0.2768343548442042, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0006654716562479734}, {"id": 78, "seek": 35488, "start": 374.6, "end": 379.68, "text": " well, it wasn't the first time that I had to take care of all of the packaging, so the", "tokens": [51350, 731, 11, 309, 2067, 380, 264, 700, 565, 300, 286, 632, 281, 747, 1127, 295, 439, 295, 264, 16836, 11, 370, 264, 51604], "temperature": 0.0, "avg_logprob": -0.2768343548442042, "compression_ratio": 1.435897435897436, "no_speech_prob": 0.0006654716562479734}, {"id": 79, "seek": 37968, "start": 379.68, "end": 385.72, "text": " packaging stuff was pretty much just copy-paste from Horizon EDA again.", "tokens": [50364, 16836, 1507, 390, 1238, 709, 445, 5055, 12, 79, 9079, 490, 40102, 462, 7509, 797, 13, 50666], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 80, "seek": 37968, "start": 385.72, "end": 387.08, "text": " So what does it do?", "tokens": [50666, 407, 437, 775, 309, 360, 30, 50734], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 81, "seek": 37968, "start": 387.08, "end": 393.2, "text": " It has a parametric to the sketcher, that has all of the usual stuff like lines, arcs,", "tokens": [50734, 467, 575, 257, 6220, 17475, 281, 264, 12325, 260, 11, 300, 575, 439, 295, 264, 7713, 1507, 411, 3876, 11, 10346, 82, 11, 51040], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 82, "seek": 37968, "start": 393.2, "end": 396.88, "text": " circles, and constraints to draw these lines and arcs.", "tokens": [51040, 13040, 11, 293, 18491, 281, 2642, 613, 3876, 293, 10346, 82, 13, 51224], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 83, "seek": 37968, "start": 396.88, "end": 403.92, "text": " There's a convenient all-in-one tool that handles lines and arcs in one tool, so one", "tokens": [51224, 821, 311, 257, 10851, 439, 12, 259, 12, 546, 2290, 300, 18722, 3876, 293, 10346, 82, 294, 472, 2290, 11, 370, 472, 51576], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 84, "seek": 37968, "start": 403.92, "end": 409.12, "text": " can draw arbitrary outlines in one tool, and there are also some convenience tools for", "tokens": [51576, 393, 2642, 23211, 40125, 294, 472, 2290, 11, 293, 456, 366, 611, 512, 19283, 3873, 337, 51836], "temperature": 0.0, "avg_logprob": -0.19876998061433845, "compression_ratio": 1.7016806722689075, "no_speech_prob": 0.001453583245165646}, {"id": 85, "seek": 40912, "start": 409.12, "end": 416.44, "text": " drawing an axis-aligned rectangle or regular polygons, as they're needed, for example,", "tokens": [50364, 6316, 364, 10298, 12, 304, 16690, 21930, 420, 3890, 6754, 70, 892, 11, 382, 436, 434, 2978, 11, 337, 1365, 11, 50730], "temperature": 0.0, "avg_logprob": -0.2098749779366158, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.010254177264869213}, {"id": 86, "seek": 40912, "start": 416.44, "end": 419.32, "text": " for hex nut inserts also.", "tokens": [50730, 337, 23291, 5393, 49163, 611, 13, 50874], "temperature": 0.0, "avg_logprob": -0.2098749779366158, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.010254177264869213}, {"id": 87, "seek": 40912, "start": 419.32, "end": 428.0, "text": " To make things 3D, there's extrude and lathe, so lathe is basically a 360-degree revolution,", "tokens": [50874, 1407, 652, 721, 805, 35, 11, 456, 311, 16455, 2303, 293, 4465, 675, 11, 370, 4465, 675, 307, 1936, 257, 13898, 12, 34368, 8894, 11, 51308], "temperature": 0.0, "avg_logprob": -0.2098749779366158, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.010254177264869213}, {"id": 88, "seek": 40912, "start": 428.0, "end": 431.88, "text": " revolutions that are not 360 degrees aren't supported yet.", "tokens": [51308, 3698, 15892, 300, 366, 406, 13898, 5310, 3212, 380, 8104, 1939, 13, 51502], "temperature": 0.0, "avg_logprob": -0.2098749779366158, "compression_ratio": 1.434782608695652, "no_speech_prob": 0.010254177264869213}, {"id": 89, "seek": 43188, "start": 431.88, "end": 442.76, "text": " And to repeat things, there's linear and polar array, and to combine multiple solids,", "tokens": [50364, 400, 281, 7149, 721, 11, 456, 311, 8213, 293, 12367, 10225, 11, 293, 281, 10432, 3866, 38536, 11, 50908], "temperature": 0.0, "avg_logprob": -0.3058596747262137, "compression_ratio": 1.5222222222222221, "no_speech_prob": 0.02212539315223694}, {"id": 90, "seek": 43188, "start": 442.76, "end": 448.2, "text": " there's the usual operations from open cascade, so union, difference, and intersection.", "tokens": [50908, 456, 311, 264, 7713, 7705, 490, 1269, 50080, 11, 370, 11671, 11, 2649, 11, 293, 15236, 13, 51180], "temperature": 0.0, "avg_logprob": -0.3058596747262137, "compression_ratio": 1.5222222222222221, "no_speech_prob": 0.02212539315223694}, {"id": 91, "seek": 43188, "start": 448.2, "end": 454.71999999999997, "text": " So for that, I just basically had to expose to user what open cascade offers for to make", "tokens": [51180, 407, 337, 300, 11, 286, 445, 1936, 632, 281, 19219, 281, 4195, 437, 1269, 50080, 7736, 337, 281, 652, 51506], "temperature": 0.0, "avg_logprob": -0.3058596747262137, "compression_ratio": 1.5222222222222221, "no_speech_prob": 0.02212539315223694}, {"id": 92, "seek": 43188, "start": 454.71999999999997, "end": 455.96, "text": " an N in 3D.", "tokens": [51506, 364, 426, 294, 805, 35, 13, 51568], "temperature": 0.0, "avg_logprob": -0.3058596747262137, "compression_ratio": 1.5222222222222221, "no_speech_prob": 0.02212539315223694}, {"id": 93, "seek": 45596, "start": 455.96, "end": 461.76, "text": " There are also constraints such as distance, angle, point-to-plane, or point-to-plane distance,", "tokens": [50364, 821, 366, 611, 18491, 1270, 382, 4560, 11, 5802, 11, 935, 12, 1353, 12, 36390, 11, 420, 935, 12, 1353, 12, 36390, 4560, 11, 50654], "temperature": 0.0, "avg_logprob": -0.24207329263492505, "compression_ratio": 1.6415094339622642, "no_speech_prob": 0.002017138758674264}, {"id": 94, "seek": 45596, "start": 461.76, "end": 467.84, "text": " or that's useful for example when you want to make a hole that stops at 3mm from the", "tokens": [50654, 420, 300, 311, 4420, 337, 1365, 562, 291, 528, 281, 652, 257, 5458, 300, 10094, 412, 805, 2174, 490, 264, 50958], "temperature": 0.0, "avg_logprob": -0.24207329263492505, "compression_ratio": 1.6415094339622642, "no_speech_prob": 0.002017138758674264}, {"id": 95, "seek": 45596, "start": 467.84, "end": 473.88, "text": " last edge, you can just use a point-to-plane distance of 3mm, and that's it.", "tokens": [50958, 1036, 4691, 11, 291, 393, 445, 764, 257, 935, 12, 1353, 12, 36390, 4560, 295, 805, 2174, 11, 293, 300, 311, 309, 13, 51260], "temperature": 0.0, "avg_logprob": -0.24207329263492505, "compression_ratio": 1.6415094339622642, "no_speech_prob": 0.002017138758674264}, {"id": 96, "seek": 45596, "start": 473.88, "end": 482.44, "text": " For the step import, I basically copy-pasted the code from Horizon EDA that turns the step", "tokens": [51260, 1171, 264, 1823, 974, 11, 286, 1936, 5055, 12, 79, 34440, 264, 3089, 490, 40102, 462, 7509, 300, 4523, 264, 1823, 51688], "temperature": 0.0, "avg_logprob": -0.24207329263492505, "compression_ratio": 1.6415094339622642, "no_speech_prob": 0.002017138758674264}, {"id": 97, "seek": 48244, "start": 482.44, "end": 489.24, "text": " model into a set of triangles, and I also reused the code for extracting the reference", "tokens": [50364, 2316, 666, 257, 992, 295, 29896, 11, 293, 286, 611, 319, 4717, 264, 3089, 337, 49844, 264, 6408, 50704], "temperature": 0.0, "avg_logprob": -0.18590117663871952, "compression_ratio": 1.8578947368421053, "no_speech_prob": 0.001474070129916072}, {"id": 98, "seek": 48244, "start": 489.24, "end": 495.44, "text": " points since the idea is that you want to import your circuit board, and you want to", "tokens": [50704, 2793, 1670, 264, 1558, 307, 300, 291, 528, 281, 974, 428, 9048, 3150, 11, 293, 291, 528, 281, 51014], "temperature": 0.0, "avg_logprob": -0.18590117663871952, "compression_ratio": 1.8578947368421053, "no_speech_prob": 0.001474070129916072}, {"id": 99, "seek": 48244, "start": 495.44, "end": 500.84, "text": " add some reference points, and then you can reference these points in the geometry, for", "tokens": [51014, 909, 512, 6408, 2793, 11, 293, 550, 291, 393, 6408, 613, 2793, 294, 264, 18426, 11, 337, 51284], "temperature": 0.0, "avg_logprob": -0.18590117663871952, "compression_ratio": 1.8578947368421053, "no_speech_prob": 0.001474070129916072}, {"id": 100, "seek": 48244, "start": 500.84, "end": 507.8, "text": " example if you want to fit your case around the circuit board or make cutouts for connectors.", "tokens": [51284, 1365, 498, 291, 528, 281, 3318, 428, 1389, 926, 264, 9048, 3150, 420, 652, 1723, 7711, 337, 31865, 13, 51632], "temperature": 0.0, "avg_logprob": -0.18590117663871952, "compression_ratio": 1.8578947368421053, "no_speech_prob": 0.001474070129916072}, {"id": 101, "seek": 50780, "start": 508.8, "end": 514.2, "text": " The last important point are fillets and chamfers.", "tokens": [50414, 440, 1036, 1021, 935, 366, 2836, 1385, 293, 8268, 69, 433, 13, 50684], "temperature": 0.0, "avg_logprob": -0.23215744343209774, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.005056827329099178}, {"id": 102, "seek": 50780, "start": 514.2, "end": 518.92, "text": " These are basically just calling the open cascade functions to add a chamfer or a filler", "tokens": [50684, 1981, 366, 1936, 445, 5141, 264, 1269, 50080, 6828, 281, 909, 257, 8268, 612, 420, 257, 34676, 50920], "temperature": 0.0, "avg_logprob": -0.23215744343209774, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.005056827329099178}, {"id": 103, "seek": 50780, "start": 518.92, "end": 524.6800000000001, "text": " to edge, but unfortunately the way it's implemented right now is subject to a topological naming", "tokens": [50920, 281, 4691, 11, 457, 7015, 264, 636, 309, 311, 12270, 558, 586, 307, 3983, 281, 257, 1192, 4383, 25290, 51208], "temperature": 0.0, "avg_logprob": -0.23215744343209774, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.005056827329099178}, {"id": 104, "seek": 50780, "start": 524.6800000000001, "end": 531.52, "text": " problem since all of these edges are just referenced by index, so if one changes the", "tokens": [51208, 1154, 1670, 439, 295, 613, 8819, 366, 445, 32734, 538, 8186, 11, 370, 498, 472, 2962, 264, 51550], "temperature": 0.0, "avg_logprob": -0.23215744343209774, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.005056827329099178}, {"id": 105, "seek": 50780, "start": 531.52, "end": 536.6, "text": " geometry in a way that adds extra edges or so, it breaks, but well.", "tokens": [51550, 18426, 294, 257, 636, 300, 10860, 2857, 8819, 420, 370, 11, 309, 9857, 11, 457, 731, 13, 51804], "temperature": 0.0, "avg_logprob": -0.23215744343209774, "compression_ratio": 1.6276150627615062, "no_speech_prob": 0.005056827329099178}, {"id": 106, "seek": 53660, "start": 536.6, "end": 542.48, "text": " I was used to that from FreeCAD, so it was okay.", "tokens": [50364, 286, 390, 1143, 281, 300, 490, 11551, 34, 6112, 11, 370, 309, 390, 1392, 13, 50658], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 107, "seek": 53660, "start": 542.48, "end": 544.5600000000001, "text": " So how does it all fit together?", "tokens": [50658, 407, 577, 775, 309, 439, 3318, 1214, 30, 50762], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 108, "seek": 53660, "start": 544.5600000000001, "end": 550.76, "text": " So in the middle there's the thing for the document that consists of all of the introduced", "tokens": [50762, 407, 294, 264, 2808, 456, 311, 264, 551, 337, 264, 4166, 300, 14689, 295, 439, 295, 264, 7268, 51072], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 109, "seek": 53660, "start": 550.76, "end": 555.08, "text": " specific data structures like groups, entities, and constraints.", "tokens": [51072, 2685, 1412, 9227, 411, 3935, 11, 16667, 11, 293, 18491, 13, 51288], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 110, "seek": 53660, "start": 555.08, "end": 560.12, "text": " These are then presented to the user with the renderer and canvas, where they are turned", "tokens": [51288, 1981, 366, 550, 8212, 281, 264, 4195, 365, 264, 15529, 260, 293, 16267, 11, 689, 436, 366, 3574, 51540], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 111, "seek": 53660, "start": 560.12, "end": 566.1600000000001, "text": " into primitives that I can render with OpenGL, and then the user uses the tools, same as", "tokens": [51540, 666, 2886, 38970, 300, 286, 393, 15529, 365, 7238, 19440, 11, 293, 550, 264, 4195, 4960, 264, 3873, 11, 912, 382, 51842], "temperature": 0.0, "avg_logprob": -0.2215187254406157, "compression_ratio": 1.640316205533597, "no_speech_prob": 0.00042984590982086957}, {"id": 112, "seek": 56616, "start": 566.7199999999999, "end": 573.7199999999999, "text": " in Horizon EDA, to interact with the document and to take care of the solid model.", "tokens": [50392, 294, 40102, 462, 7509, 11, 281, 4648, 365, 264, 4166, 293, 281, 747, 1127, 295, 264, 5100, 2316, 13, 50742], "temperature": 0.0, "avg_logprob": -0.40707046107241984, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.001278999843634665}, {"id": 113, "seek": 56616, "start": 573.7199999999999, "end": 581.7199999999999, "text": " All of the entities get transformed into something that OpenCascade can understand, and then that's", "tokens": [50742, 1057, 295, 264, 16667, 483, 16894, 666, 746, 300, 7238, 34, 4806, 762, 393, 1223, 11, 293, 550, 300, 311, 51142], "temperature": 0.0, "avg_logprob": -0.40707046107241984, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.001278999843634665}, {"id": 114, "seek": 56616, "start": 581.7199999999999, "end": 584.88, "text": " again triangulated and rendered.", "tokens": [51142, 797, 19335, 6987, 293, 28748, 13, 51300], "temperature": 0.0, "avg_logprob": -0.40707046107241984, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.001278999843634665}, {"id": 115, "seek": 56616, "start": 584.88, "end": 591.88, "text": " And to take care of solving the things, there's the interface to the solver in the space,", "tokens": [51300, 400, 281, 747, 1127, 295, 12606, 264, 721, 11, 456, 311, 264, 9226, 281, 264, 1404, 331, 294, 264, 1901, 11, 51650], "temperature": 0.0, "avg_logprob": -0.40707046107241984, "compression_ratio": 1.5968586387434556, "no_speech_prob": 0.001278999843634665}, {"id": 116, "seek": 59188, "start": 592.88, "end": 597.88, "text": " solver in solve space, and app-rolly as to be expected.", "tokens": [50414, 1404, 331, 294, 1404, 303, 1901, 11, 293, 724, 12, 3970, 88, 382, 281, 312, 5176, 13, 50664], "temperature": 0.0, "avg_logprob": -0.38725943093771464, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.0016187118599191308}, {"id": 117, "seek": 59188, "start": 597.88, "end": 604.88, "text": " The hardest part of implementing all of this are these interfaces between OpenCascade and", "tokens": [50664, 440, 13158, 644, 295, 18114, 439, 295, 341, 366, 613, 28416, 1296, 7238, 34, 4806, 762, 293, 51014], "temperature": 0.0, "avg_logprob": -0.38725943093771464, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.0016187118599191308}, {"id": 118, "seek": 59188, "start": 605.64, "end": 611.64, "text": " the solve space part, since that's where the impedance mismatches are, since I had", "tokens": [51052, 264, 1404, 303, 1901, 644, 11, 1670, 300, 311, 689, 264, 36264, 23220, 852, 279, 366, 11, 1670, 286, 632, 51352], "temperature": 0.0, "avg_logprob": -0.38725943093771464, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.0016187118599191308}, {"id": 119, "seek": 59188, "start": 611.84, "end": 617.84, "text": " my data model and the data model from OpenCascade or solve space, and it somehow had to fit", "tokens": [51362, 452, 1412, 2316, 293, 264, 1412, 2316, 490, 7238, 34, 4806, 762, 420, 1404, 303, 1901, 11, 293, 309, 6063, 632, 281, 3318, 51662], "temperature": 0.0, "avg_logprob": -0.38725943093771464, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.0016187118599191308}, {"id": 120, "seek": 59188, "start": 617.84, "end": 620.04, "text": " together.", "tokens": [51662, 1214, 13, 51772], "temperature": 0.0, "avg_logprob": -0.38725943093771464, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.0016187118599191308}, {"id": 121, "seek": 62004, "start": 620.1999999999999, "end": 623.1999999999999, "text": " So what's next?", "tokens": [50372, 407, 437, 311, 958, 30, 50522], "temperature": 0.0, "avg_logprob": -0.33813047944829705, "compression_ratio": 1.5021276595744681, "no_speech_prob": 0.0004935231991112232}, {"id": 122, "seek": 62004, "start": 623.1999999999999, "end": 630.1999999999999, "text": " So there are some, of course I have got some plans, mostly some basic things like measurements,", "tokens": [50522, 407, 456, 366, 512, 11, 295, 1164, 286, 362, 658, 512, 5482, 11, 5240, 512, 3875, 721, 411, 15383, 11, 50872], "temperature": 0.0, "avg_logprob": -0.33813047944829705, "compression_ratio": 1.5021276595744681, "no_speech_prob": 0.0004935231991112232}, {"id": 123, "seek": 62004, "start": 630.1999999999999, "end": 634.1999999999999, "text": " revolutions that are not 360 degrees, or stuff like copy-paste.", "tokens": [50872, 3698, 15892, 300, 366, 406, 13898, 5310, 11, 420, 1507, 411, 5055, 12, 79, 9079, 13, 51072], "temperature": 0.0, "avg_logprob": -0.33813047944829705, "compression_ratio": 1.5021276595744681, "no_speech_prob": 0.0004935231991112232}, {"id": 124, "seek": 62004, "start": 634.1999999999999, "end": 641.1999999999999, "text": " But the big distinction between, from the project point of view, between doing 3D and", "tokens": [51072, 583, 264, 955, 16844, 1296, 11, 490, 264, 1716, 935, 295, 1910, 11, 1296, 884, 805, 35, 293, 51422], "temperature": 0.0, "avg_logprob": -0.33813047944829705, "compression_ratio": 1.5021276595744681, "no_speech_prob": 0.0004935231991112232}, {"id": 125, "seek": 62004, "start": 641.4, "end": 648.4, "text": " Horizon EDA is that with Horizon EDA at least have the aspiration that one might eventually", "tokens": [51432, 40102, 462, 7509, 307, 300, 365, 40102, 462, 7509, 412, 1935, 362, 264, 44565, 300, 472, 1062, 4728, 51782], "temperature": 0.0, "avg_logprob": -0.33813047944829705, "compression_ratio": 1.5021276595744681, "no_speech_prob": 0.0004935231991112232}, {"id": 126, "seek": 64840, "start": 649.3199999999999, "end": 656.3199999999999, "text": " be able to do really big and complex parts, but I want UnityD to stay and to be and stay", "tokens": [50410, 312, 1075, 281, 360, 534, 955, 293, 3997, 3166, 11, 457, 286, 528, 27913, 35, 281, 1754, 293, 281, 312, 293, 1754, 50760], "temperature": 0.0, "avg_logprob": -0.27675858787868335, "compression_ratio": 1.547008547008547, "no_speech_prob": 0.0029638782143592834}, {"id": 127, "seek": 64840, "start": 657.28, "end": 664.28, "text": " small and little easy to use CAD software that doesn't have the focus to cover everything", "tokens": [50808, 1359, 293, 707, 1858, 281, 764, 41143, 4722, 300, 1177, 380, 362, 264, 1879, 281, 2060, 1203, 51158], "temperature": 0.0, "avg_logprob": -0.27675858787868335, "compression_ratio": 1.547008547008547, "no_speech_prob": 0.0029638782143592834}, {"id": 128, "seek": 64840, "start": 666.3199999999999, "end": 666.84, "text": " and all.", "tokens": [51260, 293, 439, 13, 51286], "temperature": 0.0, "avg_logprob": -0.27675858787868335, "compression_ratio": 1.547008547008547, "no_speech_prob": 0.0029638782143592834}, {"id": 129, "seek": 64840, "start": 666.84, "end": 672.36, "text": " It should just be a tool to make simple 3D printed laser cut or CNC machined cases for", "tokens": [51286, 467, 820, 445, 312, 257, 2290, 281, 652, 2199, 805, 35, 13567, 12530, 1723, 420, 48714, 2246, 2001, 3331, 337, 51562], "temperature": 0.0, "avg_logprob": -0.27675858787868335, "compression_ratio": 1.547008547008547, "no_speech_prob": 0.0029638782143592834}, {"id": 130, "seek": 64840, "start": 672.36, "end": 677.04, "text": " PCBs, probably something else, but it already does pretty much everything I need for my", "tokens": [51562, 42065, 82, 11, 1391, 746, 1646, 11, 457, 309, 1217, 775, 1238, 709, 1203, 286, 643, 337, 452, 51796], "temperature": 0.0, "avg_logprob": -0.27675858787868335, "compression_ratio": 1.547008547008547, "no_speech_prob": 0.0029638782143592834}, {"id": 131, "seek": 67704, "start": 677.0799999999999, "end": 684.0799999999999, "text": " use case, so it'll probably, mostly stay as is, with of course some bug fix and UI enhancements,", "tokens": [50366, 764, 1389, 11, 370, 309, 603, 1391, 11, 5240, 1754, 382, 307, 11, 365, 295, 1164, 512, 7426, 3191, 293, 15682, 11985, 1117, 11, 50716], "temperature": 0.0, "avg_logprob": -0.3665716864845969, "compression_ratio": 1.4134078212290502, "no_speech_prob": 0.005552931688725948}, {"id": 132, "seek": 67704, "start": 684.0799999999999, "end": 690.0799999999999, "text": " but yeah, don't expect anything big to happen there in the future.", "tokens": [50716, 457, 1338, 11, 500, 380, 2066, 1340, 955, 281, 1051, 456, 294, 264, 2027, 13, 51016], "temperature": 0.0, "avg_logprob": -0.3665716864845969, "compression_ratio": 1.4134078212290502, "no_speech_prob": 0.005552931688725948}, {"id": 133, "seek": 67704, "start": 690.28, "end": 697.28, "text": " And I think then we're already over with the presentation, and now for questions I think.", "tokens": [51026, 400, 286, 519, 550, 321, 434, 1217, 670, 365, 264, 5860, 11, 293, 586, 337, 1651, 286, 519, 13, 51376], "temperature": 0.0, "avg_logprob": -0.3665716864845969, "compression_ratio": 1.4134078212290502, "no_speech_prob": 0.005552931688725948}, {"id": 134, "seek": 69728, "start": 697.28, "end": 704.28, "text": " So, questions?", "tokens": [50364, 407, 11, 1651, 30, 50714], "temperature": 0.0, "avg_logprob": -0.29651759068171185, "compression_ratio": 1.2702702702702702, "no_speech_prob": 0.005215046927332878}, {"id": 135, "seek": 69728, "start": 709.64, "end": 716.64, "text": " Thanks for the talk. Very impressive for this time scale. You were talking about having", "tokens": [50982, 2561, 337, 264, 751, 13, 4372, 8992, 337, 341, 565, 4373, 13, 509, 645, 1417, 466, 1419, 51332], "temperature": 0.0, "avg_logprob": -0.29651759068171185, "compression_ratio": 1.2702702702702702, "no_speech_prob": 0.005215046927332878}, {"id": 136, "seek": 69728, "start": 716.64, "end": 723.64, "text": " 3D constraints, and then you just showed an extrusion size, but well that's something", "tokens": [51332, 805, 35, 18491, 11, 293, 550, 291, 445, 4712, 364, 16455, 5704, 2744, 11, 457, 731, 300, 311, 746, 51682], "temperature": 0.0, "avg_logprob": -0.29651759068171185, "compression_ratio": 1.2702702702702702, "no_speech_prob": 0.005215046927332878}, {"id": 137, "seek": 72364, "start": 724.08, "end": 731.08, "text": " you can also do in FreeCAD, right? Do you have any other possibilities to do more complex", "tokens": [50386, 291, 393, 611, 360, 294, 11551, 34, 6112, 11, 558, 30, 1144, 291, 362, 604, 661, 12178, 281, 360, 544, 3997, 50736], "temperature": 0.0, "avg_logprob": -0.2889353970447219, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.006518683396279812}, {"id": 138, "seek": 72364, "start": 732.68, "end": 734.08, "text": " constraints in 3D space?", "tokens": [50816, 18491, 294, 805, 35, 1901, 30, 50886], "temperature": 0.0, "avg_logprob": -0.2889353970447219, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.006518683396279812}, {"id": 139, "seek": 72364, "start": 734.08, "end": 739.72, "text": " Yeah, sure. Okay, so the question was if there are any more complex constraints in 3D space,", "tokens": [50886, 865, 11, 988, 13, 1033, 11, 370, 264, 1168, 390, 498, 456, 366, 604, 544, 3997, 18491, 294, 805, 35, 1901, 11, 51168], "temperature": 0.0, "avg_logprob": -0.2889353970447219, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.006518683396279812}, {"id": 140, "seek": 72364, "start": 739.72, "end": 746.72, "text": " there are some, such as angled or point-to-point distances, or what one can also do since 2D", "tokens": [51168, 456, 366, 512, 11, 1270, 382, 48843, 420, 935, 12, 1353, 12, 6053, 22182, 11, 420, 437, 472, 393, 611, 360, 1670, 568, 35, 51518], "temperature": 0.0, "avg_logprob": -0.2889353970447219, "compression_ratio": 1.6129032258064515, "no_speech_prob": 0.006518683396279812}, {"id": 141, "seek": 74672, "start": 747.72, "end": 753.72, "text": " and 3D can work together with a means of work planes. One could, for example, construct", "tokens": [50414, 293, 805, 35, 393, 589, 1214, 365, 257, 1355, 295, 589, 14952, 13, 1485, 727, 11, 337, 1365, 11, 7690, 50714], "temperature": 0.0, "avg_logprob": -0.21588732122064946, "compression_ratio": 1.9090909090909092, "no_speech_prob": 0.01822476089000702}, {"id": 142, "seek": 74672, "start": 754.52, "end": 760.12, "text": " at a work plane in the same group as the extrusion that's perpendicular to the extrusion,", "tokens": [50754, 412, 257, 589, 5720, 294, 264, 912, 1594, 382, 264, 16455, 5704, 300, 311, 26734, 281, 264, 16455, 5704, 11, 51034], "temperature": 0.0, "avg_logprob": -0.21588732122064946, "compression_ratio": 1.9090909090909092, "no_speech_prob": 0.01822476089000702}, {"id": 143, "seek": 74672, "start": 760.12, "end": 764.64, "text": " then do whatever one needs there, and then constrain the extrusion to that. Or one can", "tokens": [51034, 550, 360, 2035, 472, 2203, 456, 11, 293, 550, 1817, 7146, 264, 16455, 5704, 281, 300, 13, 1610, 472, 393, 51260], "temperature": 0.0, "avg_logprob": -0.21588732122064946, "compression_ratio": 1.9090909090909092, "no_speech_prob": 0.01822476089000702}, {"id": 144, "seek": 74672, "start": 764.64, "end": 771.64, "text": " also constrain the extrusion to another sketch, so one can put the extrusion in a work plane", "tokens": [51260, 611, 1817, 7146, 264, 16455, 5704, 281, 1071, 12325, 11, 370, 472, 393, 829, 264, 16455, 5704, 294, 257, 589, 5720, 51610], "temperature": 0.0, "avg_logprob": -0.21588732122064946, "compression_ratio": 1.9090909090909092, "no_speech_prob": 0.01822476089000702}, {"id": 145, "seek": 77164, "start": 772.64, "end": 777.16, "text": " and then do stuff there, so there really isn't, and then it's all protected into the work", "tokens": [50414, 293, 550, 360, 1507, 456, 11, 370, 456, 534, 1943, 380, 11, 293, 550, 309, 311, 439, 10594, 666, 264, 589, 50640], "temperature": 0.0, "avg_logprob": -0.34468545232500347, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.019133660942316055}, {"id": 146, "seek": 77164, "start": 777.16, "end": 782.16, "text": " plane itself, so there really is no limit of what can do, but yeah, that's all the way", "tokens": [50640, 5720, 2564, 11, 370, 456, 534, 307, 572, 4948, 295, 437, 393, 360, 11, 457, 1338, 11, 300, 311, 439, 264, 636, 50890], "temperature": 0.0, "avg_logprob": -0.34468545232500347, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.019133660942316055}, {"id": 147, "seek": 77164, "start": 782.16, "end": 789.16, "text": " that wall space works.", "tokens": [50890, 300, 2929, 1901, 1985, 13, 51240], "temperature": 0.0, "avg_logprob": -0.34468545232500347, "compression_ratio": 1.6048387096774193, "no_speech_prob": 0.019133660942316055}, {"id": 148, "seek": 78916, "start": 789.16, "end": 796.16, "text": " Thank you for your talk and impressive effort. Do you think that CAD programs, CAD suites", "tokens": [50364, 1044, 291, 337, 428, 751, 293, 8992, 4630, 13, 1144, 291, 519, 300, 41143, 4268, 11, 41143, 459, 3324, 50714], "temperature": 0.0, "avg_logprob": -0.19059307848820922, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.02377399057149887}, {"id": 149, "seek": 78916, "start": 801.6, "end": 808.1, "text": " with this level of complexity could be a good stepping stone for beginners and maybe even", "tokens": [50986, 365, 341, 1496, 295, 14024, 727, 312, 257, 665, 16821, 7581, 337, 26992, 293, 1310, 754, 51311], "temperature": 0.0, "avg_logprob": -0.19059307848820922, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.02377399057149887}, {"id": 150, "seek": 78916, "start": 808.1, "end": 815.1, "text": " children from very simple drag and drop programs like TinkerCAD towards something more parametric", "tokens": [51311, 2227, 490, 588, 2199, 5286, 293, 3270, 4268, 411, 314, 40467, 34, 6112, 3030, 746, 544, 6220, 17475, 51661], "temperature": 0.0, "avg_logprob": -0.19059307848820922, "compression_ratio": 1.481283422459893, "no_speech_prob": 0.02377399057149887}, {"id": 151, "seek": 81510, "start": 815.82, "end": 822.82, "text": " that they can manage to use when they start to grasp the basics of these kind of suites?", "tokens": [50400, 300, 436, 393, 3067, 281, 764, 562, 436, 722, 281, 21743, 264, 14688, 295, 613, 733, 295, 459, 3324, 30, 50750], "temperature": 0.0, "avg_logprob": -0.23425235748291015, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.020053576678037643}, {"id": 152, "seek": 81510, "start": 823.94, "end": 830.94, "text": " So I think, yeah, it definitely has a learning curve since one needs to grasp the concept", "tokens": [50806, 407, 286, 519, 11, 1338, 11, 309, 2138, 575, 257, 2539, 7605, 1670, 472, 2203, 281, 21743, 264, 3410, 51156], "temperature": 0.0, "avg_logprob": -0.23425235748291015, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.020053576678037643}, {"id": 153, "seek": 81510, "start": 833.7, "end": 837.66, "text": " of constraints, degrees of freedom and such, but I think that's pretty much the same thing", "tokens": [51294, 295, 18491, 11, 5310, 295, 5645, 293, 1270, 11, 457, 286, 519, 300, 311, 1238, 709, 264, 912, 551, 51492], "temperature": 0.0, "avg_logprob": -0.23425235748291015, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.020053576678037643}, {"id": 154, "seek": 81510, "start": 837.66, "end": 844.6600000000001, "text": " in every parametric CAD. So yeah, there are some idosyncrasies in terms of the user,", "tokens": [51492, 294, 633, 6220, 17475, 41143, 13, 407, 1338, 11, 456, 366, 512, 4496, 329, 34015, 3906, 530, 294, 2115, 295, 264, 4195, 11, 51842], "temperature": 0.0, "avg_logprob": -0.23425235748291015, "compression_ratio": 1.5945945945945945, "no_speech_prob": 0.020053576678037643}, {"id": 155, "seek": 84510, "start": 845.1, "end": 852.1, "text": " the interface, and it's driven by a global menu that unfortunately has some discoverability", "tokens": [50364, 264, 9226, 11, 293, 309, 311, 9555, 538, 257, 4338, 6510, 300, 7015, 575, 512, 4411, 2310, 50714], "temperature": 0.0, "avg_logprob": -0.27414818415566095, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.004823596216738224}, {"id": 156, "seek": 84510, "start": 853.86, "end": 860.86, "text": " issues, but yeah, I think it's something that one can also try with children, but yeah,", "tokens": [50802, 2663, 11, 457, 1338, 11, 286, 519, 309, 311, 746, 300, 472, 393, 611, 853, 365, 2227, 11, 457, 1338, 11, 51152], "temperature": 0.0, "avg_logprob": -0.27414818415566095, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.004823596216738224}, {"id": 157, "seek": 84510, "start": 862.38, "end": 869.38, "text": " I've never, I don't have any experience in that education space. Yeah.", "tokens": [51228, 286, 600, 1128, 11, 286, 500, 380, 362, 604, 1752, 294, 300, 3309, 1901, 13, 865, 13, 51578], "temperature": 0.0, "avg_logprob": -0.27414818415566095, "compression_ratio": 1.4880952380952381, "no_speech_prob": 0.004823596216738224}, {"id": 158, "seek": 86938, "start": 869.38, "end": 876.38, "text": " Great work indeed, especially for the time you spent on it. So in the beginning you", "tokens": [50364, 3769, 589, 6451, 11, 2318, 337, 264, 565, 291, 4418, 322, 309, 13, 407, 294, 264, 2863, 291, 50714], "temperature": 0.0, "avg_logprob": -0.25819965119057514, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.05376100540161133}, {"id": 159, "seek": 86938, "start": 876.38, "end": 883.14, "text": " showed these tables with check marks, but you didn't explicitly conclude that you had", "tokens": [50714, 4712, 613, 8020, 365, 1520, 10640, 11, 457, 291, 994, 380, 20803, 16886, 300, 291, 632, 51052], "temperature": 0.0, "avg_logprob": -0.25819965119057514, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.05376100540161133}, {"id": 160, "seek": 86938, "start": 883.14, "end": 890.14, "text": " all the check marks for your software. Yeah, so let's go over it. So a step import, step", "tokens": [51052, 439, 264, 1520, 10640, 337, 428, 4722, 13, 865, 11, 370, 718, 311, 352, 670, 309, 13, 407, 257, 1823, 974, 11, 1823, 51402], "temperature": 0.0, "avg_logprob": -0.25819965119057514, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.05376100540161133}, {"id": 161, "seek": 86938, "start": 890.58, "end": 897.58, "text": " import and export is pretty much done by OpenCascade. Since OpenCascade does the import, i.e. the", "tokens": [51424, 974, 293, 10725, 307, 1238, 709, 1096, 538, 7238, 34, 4806, 762, 13, 4162, 7238, 34, 4806, 762, 775, 264, 974, 11, 741, 13, 68, 13, 264, 51774], "temperature": 0.0, "avg_logprob": -0.25819965119057514, "compression_ratio": 1.6330275229357798, "no_speech_prob": 0.05376100540161133}, {"id": 162, "seek": 89758, "start": 898.58, "end": 903.58, "text": " triangulation and extracting reference points and export is just calling a couple of methods", "tokens": [50414, 19335, 2776, 293, 49844, 6408, 2793, 293, 10725, 307, 445, 5141, 257, 1916, 295, 7150, 50664], "temperature": 0.0, "avg_logprob": -0.3341530574841446, "compression_ratio": 1.6325581395348838, "no_speech_prob": 0.0020446274429559708}, {"id": 163, "seek": 89758, "start": 903.58, "end": 910.58, "text": " to take the topo ds shapes and write them to a step file, gemfas and fillets are just", "tokens": [50664, 281, 747, 264, 1192, 78, 274, 82, 10854, 293, 2464, 552, 281, 257, 1823, 3991, 11, 7173, 69, 296, 293, 2836, 1385, 366, 445, 51014], "temperature": 0.0, "avg_logprob": -0.3341530574841446, "compression_ratio": 1.6325581395348838, "no_speech_prob": 0.0020446274429559708}, {"id": 164, "seek": 89758, "start": 910.74, "end": 917.74, "text": " methods to call from OpenCascade, and all of the three bottom things are basically the", "tokens": [51022, 7150, 281, 818, 490, 7238, 34, 4806, 762, 11, 293, 439, 295, 264, 1045, 2767, 721, 366, 1936, 264, 51372], "temperature": 0.0, "avg_logprob": -0.3341530574841446, "compression_ratio": 1.6325581395348838, "no_speech_prob": 0.0020446274429559708}, {"id": 165, "seek": 89758, "start": 917.86, "end": 923.7, "text": " same thing as in SolveSpace, since overall June 3D is pretty similar to SolveSpace in", "tokens": [51378, 912, 551, 382, 294, 7026, 303, 44306, 11, 1670, 4787, 6928, 805, 35, 307, 1238, 2531, 281, 7026, 303, 44306, 294, 51670], "temperature": 0.0, "avg_logprob": -0.3341530574841446, "compression_ratio": 1.6325581395348838, "no_speech_prob": 0.0020446274429559708}, {"id": 166, "seek": 92370, "start": 923.74, "end": 930.5, "text": " terms of overall operation. There are groups, constraints, entities, and if one knows and", "tokens": [50366, 2115, 295, 4787, 6916, 13, 821, 366, 3935, 11, 18491, 11, 16667, 11, 293, 498, 472, 3255, 293, 50704], "temperature": 0.0, "avg_logprob": -0.24170475817741233, "compression_ratio": 1.4917355371900827, "no_speech_prob": 0.02283945493400097}, {"id": 167, "seek": 92370, "start": 930.5, "end": 937.5, "text": " likes SolveSpace, they'll probably also like June 3D. Right, and another question, thanks.", "tokens": [50704, 5902, 7026, 303, 44306, 11, 436, 603, 1391, 611, 411, 6928, 805, 35, 13, 1779, 11, 293, 1071, 1168, 11, 3231, 13, 51054], "temperature": 0.0, "avg_logprob": -0.24170475817741233, "compression_ratio": 1.4917355371900827, "no_speech_prob": 0.02283945493400097}, {"id": 168, "seek": 92370, "start": 939.5, "end": 945.62, "text": " If you would have spent the same time in either SolveSpace or FreeCAD, could you have improved", "tokens": [51154, 759, 291, 576, 362, 4418, 264, 912, 565, 294, 2139, 7026, 303, 44306, 420, 11551, 34, 6112, 11, 727, 291, 362, 9689, 51460], "temperature": 0.0, "avg_logprob": -0.24170475817741233, "compression_ratio": 1.4917355371900827, "no_speech_prob": 0.02283945493400097}, {"id": 169, "seek": 92370, "start": 945.62, "end": 952.62, "text": " them to your needs? Yeah, but I was pretty sure that question will come up. So, let's", "tokens": [51460, 552, 281, 428, 2203, 30, 865, 11, 457, 286, 390, 1238, 988, 300, 1168, 486, 808, 493, 13, 407, 11, 718, 311, 51810], "temperature": 0.0, "avg_logprob": -0.24170475817741233, "compression_ratio": 1.4917355371900827, "no_speech_prob": 0.02283945493400097}, {"id": 170, "seek": 95262, "start": 953.62, "end": 957.9, "text": " go over it. I think FreeCAD, I've looked at the code sometimes and I've also find that", "tokens": [50414, 352, 670, 309, 13, 286, 519, 11551, 34, 6112, 11, 286, 600, 2956, 412, 264, 3089, 2171, 293, 286, 600, 611, 915, 300, 50628], "temperature": 0.0, "avg_logprob": -0.2602047920227051, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.005019540432840586}, {"id": 171, "seek": 95262, "start": 957.9, "end": 962.26, "text": " there are really a lot of code, and I think especially changes like having a non-modal", "tokens": [50628, 456, 366, 534, 257, 688, 295, 3089, 11, 293, 286, 519, 2318, 2962, 411, 1419, 257, 2107, 12, 8014, 304, 50846], "temperature": 0.0, "avg_logprob": -0.2602047920227051, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.005019540432840586}, {"id": 172, "seek": 95262, "start": 962.26, "end": 968.54, "text": " schedule would have probably been way more work, and with SolveSpace, they have their", "tokens": [50846, 7567, 576, 362, 1391, 668, 636, 544, 589, 11, 293, 365, 7026, 303, 44306, 11, 436, 362, 641, 51160], "temperature": 0.0, "avg_logprob": -0.2602047920227051, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.005019540432840586}, {"id": 173, "seek": 95262, "start": 968.54, "end": 974.34, "text": " own geometry kernel for probably good reasons, and from a project conceptual point of view,", "tokens": [51160, 1065, 18426, 28256, 337, 1391, 665, 4112, 11, 293, 490, 257, 1716, 24106, 935, 295, 1910, 11, 51450], "temperature": 0.0, "avg_logprob": -0.2602047920227051, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.005019540432840586}, {"id": 174, "seek": 95262, "start": 974.34, "end": 980.42, "text": " I think OpenCascade and SolveSpace are pretty much diametrical. SolveSpace has really this", "tokens": [51450, 286, 519, 7238, 34, 4806, 762, 293, 7026, 303, 44306, 366, 1238, 709, 7484, 32283, 13, 7026, 303, 44306, 575, 534, 341, 51754], "temperature": 0.0, "avg_logprob": -0.2602047920227051, "compression_ratio": 1.6431226765799256, "no_speech_prob": 0.005019540432840586}, {"id": 175, "seek": 98042, "start": 980.4599999999999, "end": 985.4599999999999, "text": " nice self-contained thing without that big OpenCascade dependency hanging off the side.", "tokens": [50366, 1481, 2698, 12, 9000, 3563, 551, 1553, 300, 955, 7238, 34, 4806, 762, 33621, 8345, 766, 264, 1252, 13, 50616], "temperature": 0.0, "avg_logprob": -0.20566191189530966, "compression_ratio": 1.4, "no_speech_prob": 0.005230538547039032}, {"id": 176, "seek": 98042, "start": 985.4599999999999, "end": 992.4599999999999, "text": " So, yeah, that's why I conclude, well, it's probably easier to write my own, and I also", "tokens": [50616, 407, 11, 1338, 11, 300, 311, 983, 286, 16886, 11, 731, 11, 309, 311, 1391, 3571, 281, 2464, 452, 1065, 11, 293, 286, 611, 50966], "temperature": 0.0, "avg_logprob": -0.20566191189530966, "compression_ratio": 1.4, "no_speech_prob": 0.005230538547039032}, {"id": 177, "seek": 98042, "start": 992.5799999999999, "end": 999.5799999999999, "text": " noticed that I really like writing CAD software. Okay, we have time for one more question.", "tokens": [50972, 5694, 300, 286, 534, 411, 3579, 41143, 4722, 13, 1033, 11, 321, 362, 565, 337, 472, 544, 1168, 13, 51322], "temperature": 0.0, "avg_logprob": -0.20566191189530966, "compression_ratio": 1.4, "no_speech_prob": 0.005230538547039032}, {"id": 178, "seek": 101042, "start": 1011.42, "end": 1018.42, "text": " I use CAD software to create 3D models for on PCBs, to render on PCBs, and I felt that", "tokens": [50414, 286, 764, 41143, 4722, 281, 1884, 805, 35, 5245, 337, 322, 42065, 82, 11, 281, 15529, 322, 42065, 82, 11, 293, 286, 2762, 300, 50764], "temperature": 0.0, "avg_logprob": -0.2863282765427681, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.04640671983361244}, {"id": 179, "seek": 101042, "start": 1021.26, "end": 1028.26, "text": " problems like SolveSpace are missing color support for faces. Does your Dune3D support", "tokens": [50906, 2740, 411, 7026, 303, 44306, 366, 5361, 2017, 1406, 337, 8475, 13, 4402, 428, 413, 2613, 18, 35, 1406, 51256], "temperature": 0.0, "avg_logprob": -0.2863282765427681, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.04640671983361244}, {"id": 180, "seek": 101042, "start": 1028.78, "end": 1035.78, "text": " this? Right now, it doesn't support colored faces. Yeah, I have to look into how to accomplish", "tokens": [51282, 341, 30, 1779, 586, 11, 309, 1177, 380, 1406, 14332, 8475, 13, 865, 11, 286, 362, 281, 574, 666, 577, 281, 9021, 51632], "temperature": 0.0, "avg_logprob": -0.2863282765427681, "compression_ratio": 1.4408602150537635, "no_speech_prob": 0.04640671983361244}, {"id": 181, "seek": 103578, "start": 1035.78, "end": 1040.66, "text": " that with OpenCascade. These are always the topics that are a bit tedious, and yeah, well,", "tokens": [50364, 300, 365, 7238, 34, 4806, 762, 13, 1981, 366, 1009, 264, 8378, 300, 366, 257, 857, 38284, 11, 293, 1338, 11, 731, 11, 50608], "temperature": 0.0, "avg_logprob": -0.18160444436614046, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.008020395413041115}, {"id": 182, "seek": 103578, "start": 1040.66, "end": 1045.94, "text": " it's OpenCascade, and as mentioned in the talk before, it has a rather cryptic API, but", "tokens": [50608, 309, 311, 7238, 34, 4806, 762, 11, 293, 382, 2835, 294, 264, 751, 949, 11, 309, 575, 257, 2831, 9844, 299, 9362, 11, 457, 50872], "temperature": 0.0, "avg_logprob": -0.18160444436614046, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.008020395413041115}, {"id": 183, "seek": 103578, "start": 1045.94, "end": 1051.82, "text": " the good thing is there's FreeCAD, so FreeCAD is pretty much the best OpenCascade documentation", "tokens": [50872, 264, 665, 551, 307, 456, 311, 11551, 34, 6112, 11, 370, 11551, 34, 6112, 307, 1238, 709, 264, 1151, 7238, 34, 4806, 762, 14333, 51166], "temperature": 0.0, "avg_logprob": -0.18160444436614046, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.008020395413041115}, {"id": 184, "seek": 103578, "start": 1051.82, "end": 1057.82, "text": " there is. Okay, thank you. Okay, thank you very much, Lucas.", "tokens": [51166, 456, 307, 13, 1033, 11, 1309, 291, 13, 1033, 11, 1309, 291, 588, 709, 11, 19178, 13, 51466], "temperature": 0.0, "avg_logprob": -0.18160444436614046, "compression_ratio": 1.6028708133971292, "no_speech_prob": 0.008020395413041115}], "language": "en"}