{"text": " Hello, everyone. Thanks for joining. We have Ryan talking about roles, privileges, and security in post-dress. Over to you. Thank you. I also get to quit this at the end of my deck, but it's fairly easy. I'm Ryan Booz everywhere. I try to be my blogger software in Booz, which you'll see some stuff time to time. And I will try and get this updated version in my repo hopefully before the end of the day, and I will do my best to link it to the website. They have a place for us to do that. So quick agenda. Roles and privileges. It's something we have to deal with everywhere, whether it's in post-dress, whether it's on your machines, whether it's in your applications. And it's something that, as I've done more and more in post-dress, helped users in post-dress, helped people transitioning into using post-dress, understanding roles, and how the privileges that we can inherit and use really interact with things. So that's what we're going to try and go top down. It's, every time I run through this, I'm actually writing a chapter of a book on this, and it's like trying to figure out the exact order because of all the pieces that have to come together. So we'll start with the building blocks, get through roles, talk a little bit about inheritance, which is really important. And for me, it's about getting down to object ownership because I think that's where most people get confused and have a difficult time using post-dress at scale with a lot of people. So quick disclaimers. We won't cover everything. There's just too much, right? But everything I cover in here should be applicable. It is applicable to anything that's currently in support version, which is 12 plus. Honestly, it should work with anything from nine, six forward, aside from one or two things that have been added over the last few releases. So let's go ahead and dive in. So first, the building blocks. So there's four pieces here. One is just, I want to talk about the building blocks. We're going to talk about roles, security, and ownership, just to get you through as we go. So if you have been using post-dress for a while, you may or may not understand this, but it's really critical to understanding how privileges and roles work. And so if you are in a hosted environment, this may not matter to you. But again, it's really important to understand. So as you create roles, objects, and the ownership and the privileges, this is how this works. So we have, if this is a bare bone server, we have a cluster. And we have a host, whether it's a VM, whether that's bare metal. And on that host, you can have as many running post-dress clusters as you want. So we just had to talk about clustering, but the actual process running on the host is called a cluster. If you go to the documentation, that's what you'll see. So we can have multiple clusters. They just have to run on different ports. And then once you have a cluster, now this should make sense. Really, there's a lot that goes on in there, but as far as this talk goes, the two pieces that are really critical and really symbiotic to one another is roles and the databases, the objects that are contained therein. So these exist at the cluster level. So roles are created at the cluster, databases are created at the cluster, and again, remember, for this talk, cluster is one instance of post-dress, not many, many instances. And then, like I said, the interplay between these is actually just a little bit more nuanced than I used to spend a lot of my time in SQL Server a number of years ago. And it's similar, right? We're talking about roles or users and privileges, but the way that they rely on one another in post-dress, again, can be a nuance that not everyone picks up initially. So we'll try and talk that through. Essentially, just to show that everything in the database, everything we care about from an object perspective has to be owned by a role. And so it cannot exist until a role exists, and then it includes a database. And so there's just this back and forth that we're trying to understand as we go. When you're in the cluster, every cluster has what's called a PG-HBA file, that is, host-base authentication. And it's the first layer of authentication. So again, if you're running your own server, this exists, you have to do something with it. If you're in a hosted environment, most of this is taken care of for you if you're in a cloud vendor. And I like to think of it almost like a firewall rule, right? So it's a file that literally shows which hosts and roles can connect to what database is using what authentication method. And it's a matter of reading top down as a connection tries to happen into Postgres. It matches each of those properties. What host is this connection coming from? What is the role that's trying to connect? And what is the method they're trying to use? And the first one it finds, that is the role, that is the HBA rule that it lists. These things can be very, very long, right? But it's just left to right on each line. What type is it local? Is it host-based? A bunch of others. Which database? All databases, the users, addresses, and then methods. So when it comes to methods, you've probably heard this if you've been around long enough, but their trust still exists. And so just avoid using trust. Really at all costs. What that means is on that machine, if the host and the user matches, you're in. You just trust it and move forward. It's not terribly secure, right? And so in most environments, if it's not some kind of central authentication, like Kerberos or whatever that might be, most places do give you Scram 256 now. So Scram was developed, I forget now, five or six years ago, really kind of took over, replaced MD5 and some other things. So Scram 256 is what we recommend if you're using password-based authentication. And just need to make your, it's probably what you're using, but if you don't know, go ahead and look. All right, so that's just the building blocks. We have a host. We have a cluster running on it. We know the inside of the cluster. We have roles, databases, and some objects. So let's go ahead and talk about that first part. Once we've at least gotten through that host-based authentication, we have a host, a user, and a type. We've matched the rules, and now we're allowed to try and connect. Who are we connecting as? So roles, obviously, own the database schema's objects, things like tables, functions, views, things you would expect within a database. And roles own the database itself. There's a role that owns the database that's created. Roles have cluster-level privileges. It's this nuance of thing we'll call attributes, and I'll show you in just a minute. Those are separate from the privileges that you get within a database. But they're kind of, again, it's like the host-level, what can you as a user do as a role do in this data in this cluster? And then you might be able to be granted privileges to a data... They can be granted privileges to database schemas, objects, and so forth. And then possibly, as we'll see in one second, some roles have the ability to grant their privileges and their privileges to other roles in the database. And we'll see why that's really important. So just to talk, I've been trying consistently to say roles over and over and over rather than users and groups. So in the SQL standard, role is there, and so is user and group. User... I might have the backwards, but user and group is also in the standard. But starting with, I think, was 8.2. We moved to just roles. So there's no real semantic difference between roles and groups. It doesn't do something magical. What we tend to say, what the convention is, when you create a role and it's allowed to actually log in to the cluster, we kind of consider that role a user. And if it's not allowed to log in, we consider that a group. Everything else about the roles can be consistent. They can all have privileges. They can all do a lot of things. They can own this. Even a role that can't log in can own something. And you'll see why we do that in just a little bit when it comes to inheritance. So you can do this, create user and create group does exist. They are simply aliases to create role. And so if you say create user, it, behind the scenes, does create role, whatever attributes you pass in, it will apply. And then by default, it will apply the login automatically. And group will apply no login so you can't get in. So there's really no reason. It depends on your environment and how you work. But there's really no reason you can't do a create role consistently across the board. Any of these will work. They'll get the exact same thing done. Just recognize the first two are not running create role under the covers. And so I keep talking about these attributes. So now we understand a little bit what roles are. You can apply attributes to the roles. So they are predefined settings that, again, are at the cluster level. There's nothing to do with the databases yet. And they map to this catalog table called PG roles. So these are the attributes. I say Postgres 15. I think these have been the same attributes since Postgres 9.6. One might have changed. I don't remember to be honest with you. The ones that we, I'm going to talk about just briefly through the rest of this. What most of you are probably concerned with as you are administering databases are the ones that are underlined. Can you login or not? Is this role a super user or not? Talk about that in a minute. Can they create other roles? Can they create databases in this cluster? Is it password based authentication? And then can they inherit privileges from other roles? The other three that are listed there, again, a little bit complex in connection limit, if you really want to set it, you can. Just recognize if you don't set those other couple strings, the connection or the attributes, the strings or inherit. By default, roles will be able to inherit from other roles. We're going to talk about that a little bit. They have unlimited connections. If there are available connections, I can connect many times as that user from that method and so forth. Any questions on roles? One thing that I often forget to talk about, there is a way, again, depending on what you're doing and how you are administering Postgres, you can actually, for a role, set many of the settings that you could do within Postgres. If you go into running Postgres instance and you can do something like set search path, set jit, you can actually alter a user and set that property so that every time they connect and has to be connection, that property will get set for that session. That can be really helpful. Sometimes you get lost in documentation and it might be useful for what you do. I just chose jit. Here's an example. Jit can be really good and it can be really troublesome when you have complex queries that are lots of data. Maybe the jit actually is not as helpful. Maybe you have a report user in your database that's often running really complex reports and you just don't realize that maybe jit's one of the reasons that it's not being as efficient as it could be. Maybe with that user, you would turn off jit. You don't have to think about it anymore. Every time they connect, jit would just be turned off for that session. How many of you have heard of the SuperUser? Most people have. If you've worked with Postgres, you've been warned about this thing called the SuperUser. Most people, if you're learning, have logged in with the user Postgres and they can do whatever they want and they never think about why they can do whatever they want and we move forward with life and we forget. You would think that someone who has access with SuperUser would kind of be like the superhero, the neighborhood friendly Superman. It's always looking out for the benefit of good of everybody but the reality is SuperUser is a lot more like this. You can do anything, anywhere, destroy whatever you want and no one can stop you. It means we have to be really careful with SuperUser. Again, as Postgres has become more and more popular, the usage has increased, depending what SuperUser is needed for, which in many ways is often very little. Compared to quite honestly some of the trouble you can get into with it, it's really valuable to know what you can do and ways to get around it. You get one SuperUser created when the cluster is initiated. When you say initDB, you get a user. That user has to be a SuperUser because things have to be done. Roles are going to have to be created. The process is running as that user. But it doesn't mean that you actually have to use that user moving forward. There's a lot of recommendations where you actually can change that user Postgres to no login. You can't log in now. You can log in as a role that could set log in if you really need to for some reason. There's a lot of ways that it's necessary for some actions that we're going to do, but it's just really powerful. Typically named Postgres. Is that because when we run initDB, the user, the process that is running Postgres to init that DB will be the name of the SuperUser that's created. In most systems, when you install from an RPM package or something like that, it will be the, the rim keeps all of our RPM packages up. Give me a hand. It's Postgres user. In Linux, it's created. Therefore, the SuperUser is called Postgres. You can actually tell initDB to use a different role if you want. Create a different role and use it. But generally it's Postgres unless you have a different environment. And it bypasses every security check everywhere in Postgres except for login. So as long as that host is allowed to log in and you're a SuperUser from that point forward, you can do whatever you want. So it's kind of like root on Linux. So most cloud providers do not provide this to you. Now there are some, if you are in your sandbox environment, like a private VM or something like that, you may get direct access and you may get SuperUser. If you use AWS, Microsoft, Google, whatever your hosting provider might be, you do not get SuperUser. They give you something that is like SuperUser. We all, we trust him. So it's just enough power, but not so much that you can destroy the world. And so the recommendations, you'll find this in docs. I actually forgot what page and I tried to find it quickly, but there is this recommendation in docs and then you'll see this elsewhere. If you are going to manage, and you're a DBA of a Postgres cluster, it's usually best practice to create, just as you would in Linux, create a user that can do what you need us to do, but is not root. And so in this case, we say something SuperUser like, at a bare minimum, they probably should be able to create other roles that will allow them to create roles, alter roles and so forth. And they probably need to be able to create databases. But if they're not SuperUser, they can't just go to any database, delete, remove, modify anything they want. And that's what you're trying to prevent. So it allows user management, but a little bit safer. Now there are still some things that you may not be able to do if you are not a SuperUser. There are some extensions that require being a SuperUser to install. Now the team consistently has worked, we'll talk about the very end, about providing new roles that can allow us to do some of these things that used to require SuperUser. So I know that that's one that's been talked about, for instance. It used to be checkpoint. You could only run a checkpoint if you had the privilege or you had SuperUser. And so now there's a privilege with 16 that allows you to run a checkpoint, even if you're not a SuperUser. So we have roles, both regular roles, super-duper roles, and the kind of roles we want for managing our database. And then for those roles, we need to apply privileges. And at the heart of it, we've just, by creating roles, all we've done is been able to log in. And so if we want to actually do something in the database, we have to understand privileges in Postgres. So obviously there are a set of access rights, to database schemas, objects. Now when I say objects, I generally mean things like tables, views, functions, store procedures, things that have ownership of some sort. Not every single thing in a Postgres database is actually owned by an owner, a role. Most things are. They can be granted, privileges can be granted or revoked. You've probably been used to this either in Postgres or elsewhere. And then the one thing I, it's, as we get to one or two things at the end, it's easy to forget that any time you run a script, and it says, grant something to somebody, it only impacts things that exist right then. So a lot of people I've seen will start a database up, they'll do something like grant all, select all, to all tables on public to whatever. And they think, great, I've solved my problem for the rest of time. And then they create a new table, and no one can read from it. When you explicitly run a grant or revoke statement, it only impacts the things that exist right then. So just keep that in mind. So here are the privileges, 15 and 16. I actually thought I went through and changed all of those to 16, so I must have missed that. These are all the things that we can set. Now the ones I have underlined, starting with Postgres 15, are the ones that are essentially provided by default unless you modify anything. So every single user, again, super user side, and unless you've modified something, every role will get these four privileges on any database on the public schema. And the reason is there's this role called public. It's basically hard coded in a Postgres. You can't remove it. You can't get rid of it. And every role gets is granted membership into public. And again, most roles inherit. And so when you have that kind of role, you automatically get the connect privilege, right? So I've passed HBA, I provided an actual password that works, but if I don't have the connect privilege, I can't connect. So I can turn off connect to a database. I might have multiple databases, but this user does not get to connect to that one. That's really the usage. Again, I can connect, but if I can't use it, I can't do anything. You can actually connect to a Postgres database, get a valid connection, you're connected, and then you want to do anything, select whatever it might be, and you're just denied. And that's where usage comes in. Temporary tables and then executing things like store procedures and so forth and functions. Now, if you're using Postgres 14 or below on the public schema, you also have the create privilege through public on the public schema. And so that we realized gets to be some of a security hole. All right. And the reason is, in this case, I don't want to get into too much, but if you create something on any schema, so on the public role, that's where most people were creating things. A lot of us still don't use schemas in our applications. We just create tables by default. They go into the public schema. And so if somebody created a store procedure and they weren't super user, there are ways, actually not that difficult, if you know what you're doing, to create a function, somehow get someone with elevated privileges to run it and you can get super user. Another talk that I like to do. So we realized that. So basically starting the 15 and above create is not provided through public to the public schema. So you have to be explicitly granted. Every role has to be explicitly granted create. And then when you create your own schemas, you have to grant create to other roles if you want them to be able to do it. So recognize that change. Now, the one caveat here is, if you've been upgrading 12, 13, 14, 15, when you upgrade to 15, it doesn't take away the privilege from roles that already existed. Again, all of this is point in time, right? I applied the role at some of the privilege at some point in the past. I have to explicitly do something to modify that. And so security best practice. I've been talking about public a little bit. And again, this is more what has come around. It's got a lot of attention over the last few years, which is there's just this potential for bad things to happen on the public schema. And so most folks, most advice you'll get is to revoke all privileges from the public schema from the public role. Again, you can't get rid of the role. So you want to remove all privileges from public. And then per database, you probably want to remove privileges specific, you know, to the database itself. And what that would mean is, again, that comes to the connect, right? So you have to be able to connect to a database. If I don't revoke all privileges, any user, they're part of public, public has connect, then they can connect to that database. And so that allows you, this just means that then you have to be more explicit with every database, every schema and so forth. All right, you'll find this a number of blog posts, people talking about security, and especially two years ago with Postgres 15, there was a lot of news around this. Now granting privileges is hopefully pretty straightforward. The docs pages on grant and revoke are really good. They go into a lot of detail on all the privileges, what it means when I say I grant someone select. What does that mean? When I grant someone delete, what does that mean? What is it just delete rows or does it allow me to do something else? And so there's a lot of good documentation, but you grant something to an object, to a role, and then you can name a, you shouldn't, you name a schema, whether it's public, whether it's all, could be all schemas or specific schema. So in this case, we're simply granting create. So now this admin can create something. They can use and create in the schema that I've created, but then we're going to create a junior role, and the junior dev role, and we're granting a select and certain update, but they can't delete, they can't create in the database. In theory, they've been given usage on the database. I missed that out here. I should have had that in that line. Now there are other ways to do this. So again, just remember, explicit grants only affect current database objects. So I'm going to do a quick demo at the end of this to show you all of this very quickly and hopefully, you know, tie all the pieces together. Again, these pages are really good. And so it just answers all the questions, every privilege. And if you don't know, if you go to the Postgres documentation, there's a search box up top, and it works pretty well. And so you can just simply say grant, grant, privilege, grant, revoke, and it will come right up. All right. So we have the cluster. We understand we have roles and objects and databases on the cluster. There are some attributes and privileges given to a role at the cluster level. Then we get to the databases themselves. Now we have privileges, which we can grant two roles for all the various types of things within the database. But if you notice on this slide, if I had to do this for every user, this gets really frustrating and complex. Now quite honestly, this is probably why a lot of people, myself included, is just easier to use SuperUser. Just log in with that one user, do everything you need to do, because I trust myself. I'm not going to do anything bad. But the better way forward is to deal with inheritance. So you may have noticed, you may have not, that earlier on, this is one of those attributes, one of the privileges, I'm sorry, the attributes to a user. Do you inherit privileges or not? Now it doesn't matter if you aren't granted membership into some other role that would apply privileges. You could receive privileges from. So roles can be granted membership into other roles. That's why there really is no group and user difference here. It's just whether they, you know, again, we say whether they can log in or not log in. But if you create the roles that cannot log in, treat them as groups, you can apply all of your privileges to those groups in ways that make sense and then grant ownership into those roles from other, for other roles. So this is really the preferred method for managing it. What you would expect in a, you know, whether it's Linux, Windows, whatever it is, you have groups, you have users, users can be part of multiple groups. It's exactly what we're talking about here. But you have to go to some effort. So again, just a really quick example we hate, we're creating a senior dev user role, they can inherit, report user, they can inherit. And then we create two groups because they can't log in. All right. And so we just, we explicitly say no inherit. Now, you don't have to do that for groups, but it can get a little bit messy trying to figure out exactly where everything's coming from. So a lot of wisdom is your groups, let them be separate and apply the groups you need to other, to your actual user roles. And then I've said, hey, grant, insert, update, delete on all tables to the read only privilege. Now it's, I should have to the admin privilege. I was like, wait, that's not read only to the admin privilege, right? So right here. And then we have grant select, all tables to this read only privilege. Right. But those are my two groups. They can't log in. So how's this going to help me? Well, you can then grant membership into those other groups. So I say grant admin and read only priv to the senior dev and then only grant read only priv to the junior dev. And so essentially what that looks like is this. Those two roles both have read only privilege. But the senior dev has now also has other privilege. So you kind of keep building on top of that. So it's a great way to be able to apply the kinds of privileges you need across many roles. And then if you need to update something, you update one object, the group role, and it will be applied to all of the users that are inheriting from that user. Any questions on inherit? What that looks like? Yeah. Okay, the question is, if the super user creates roles, do those roles get the same privileges as super user? No. Okay, misunderstood. If you create a role and you grant it super user, they're super user, just like what's exactly same as what you would expect Postgres to do. Yep. It's a flag in the database. And if it doesn't matter what the name of the role is, if it is a super user, you're a super user. Have fun. Don't destroy. Okay. But maybe that is the fun, right? No, I'm kidding. Test your backups. Okay. So great. We have, you know, just trying to build down through this, we have our cluster, we've created roles, we understand what those privileges look like. We understand that there is, you know, this, this level of the roles and the privileges they get, but then we get the object ownership. And honestly, this is when I decided I started to need to dig into roles in Postgres. Because I was using super user for everything I didn't care, right? And then I actually started to manage an application with multiple users, a lot of devs in a, you know, one environment, a couple different users for various applications that were connecting from another environment. And all of a sudden I was like, what is going on? Because this is not what I thought was going to happen. And that's when I had to really start to dig in. So that's why all of the other stuff leading up to this is important for me as an application developer or running or helping to teams of application developers effectively use Postgres. So object ownership, whoever creates the object, whatever role you are currently logged in as, or that session is currently acting as, when that object gets created, they are the user. Table, function, view, you know, on and on. Even a database. When I create a database, if I had privilege to create the database, that database is now owned by me, not by Postgres, not by some other user. So it's really, that's just the first thing you got to understand. Now, the owner of the object is essentially like a super user of the object. Right? They're not a super user, but I own the object. I'm the only one that can actually do a lot of things on that object, unless I've granted other privilege. And there are some things only I can do. Or a super user. So I like to think of this as principle of least privilege. When I create something, the way that Postgres works, it says, we don't want anyone to do anything. You have to tell me Postgres, the cluster, what everyone else should be able to do to this object. I don't care if they're part of some group that has access to this thing, and you're both part of the same group. I don't care. They have to be given explicit privilege in some way. So that's kind of the first place that you start to get confused. If you happen to have multiple devs, and you're on a test database, and you're all part of the same group, and all of a sudden dev one creates something, and dev two says, oh, let me go just see what you did, like access denied, like what? What are the test server? What are you talking about? And this is what it gets down to is object ownership and understanding of that. Now, again, roles, there are some roles that can actually, you know, grant, yeah, default, sorry, default privileges. So we're going to talk about default privileges in just a minute. And that's where kind of the power for managing application and creation of objects and management of objects can be really helpful. So this is what I showed earlier. And hopefully you can see, and I actually forgot to make this point early on, and I apologize for that. The one unique thing for Postgres with me coming from a different database is that although the roles are created at the cluster level, I cannot connect to the Postgres cluster, unless I can connect to a database, every connection is to a database. And so I might have the right password might have the right host might have the right role. But if I don't have access, I don't have literal connect privilege to any database, I can't get in. So there's this thing that like I almost said, symbiotic earlier, like roles and objects are separate. But what's a little bit unique about Postgres, again, for me is you they need to exist together. That's why when you initiate a Postgres cluster, you get one database and one super user because that super user can now connect to the database that's named after itself, blah, blah, blah. So there's this new one. Now the problem, though, is if all of my users are creating all these different objects down here, right, they're all owned by different people. And as I said earlier, the owner of the object is is like the super user of that object. And so then you start to get into conflict of who can use what and what can you do in that object. So what I've learned over the years, now I work for a company called redgate, you may have heard of the Flyway application, it's migration schema based migration, redgate owns that product and manages the open source portion of that. And we see lots of folks that are moving from other databases to Postgres. Yay, we're super excited about that. But again, understanding this ownership principle is so important. So they will, you know, go and create, they don't even realize what owner they're connecting and running these migration scripts as. And if the migration scripts don't explicitly modify ownership, all of a sudden they have objects in the database that are run by multiple people because different people were running these migration scripts. And then you get into a big issue because now someone wants to modify this table, we've turned off login for super user. And only that user can modify the table. And you just get into this like roundabout, right? So what we tend, what I tend to like to tell people is particularly as you get up to your production database. Now with Flyway, what we would say when we help folks do this, we go through, you know, dev, we have a staging server. And often what we'll say, and I'm going to show you default privileges in a minute, is create run all of your scripts. Now again, if you do a dump, you'll see that after every object in a dump file, if you do the script, it postgres explicitly changes the owner. Now that's also where you get those error messages, if you don't have that owner on your machine. But the object was created, whoever creates the object, it doesn't matter if it's for a backup script. If you ran a backup script from your server, and those objects were owned by Joe, and you go run it on the other server connected as Mary, all of those objects would be connected, created as Mary, if you didn't explicitly change the ownership now. So that's what it's like this nuance, right? So we tend to recommend when you are actually going to production or even your staging server, you run those scripts as one group role, and you make sure that group, you know, doesn't have things like select and delete, whatever, they are just allowed to create the objects. But you have other roles that are granting permission into those objects then, in a way that is accessible. And the beauty of doing that is you can still switch to that role, you'll see that in the demo I'll do in just a minute. So if you needed to modify something about that, you can still set into that role, and then you know exactly which role you need to get to do the modification. So this is a nuance here, and the value to this comes with default privileges. So as you'll see in the demo, again, I create an object like table. Only I can modify that table. I don't, unless you're a super user, I don't care if we both are part of the same group roles, only I can modify that table unless we set it to a role that both of us are a part of, and then both of us can be, can switch into. So this is just a really simple example. And I'll show you another one in the demo. Default privileges are way to say when I, as this user, so I'm connected, you guys are, is everything okay? Okay, they're staring at me like I'm doing something wrong. The, so I create default privileges, I'm altering them, and I'm saying grant select on all tables to the role public. Now it could be any role, right, but I'm saying the public role. Now, anytime I create a table, if I had gone ahead of time and removed all the privileges, whatever, anytime I, as whoever, whatever role I'm running that command as, every time I create a table from this point forward, everyone will be able to select because everyone's a member of public. Right, does that make sense? If I didn't do this, every time I create an object, I then have to explicitly grant the roles. That gets really tiresome. Now the only nuance here, and I have been dealing with this, so again, Redgate has been doing a lot with Flyway and Postgres, and I've been trying to help them understand that only exists for, again, when I create the object. If I later go and modify this default privilege, nothing changes about the objects I created earlier. You still have to go back and grant whatever you just modified to all of those other objects. Right, but it's super helpful. So from a migration perspective to just ease the management, what we tend to do is say, hey, make a group role that, you know, certain people are part of us, they can set to that role and modify the objects if they need to. But then you know the owner of all the objects, and it's not necessarily the Postgres user. That's what most people end up doing on the cloud host environment or something like that. Any questions, yeah? Just about syntax, so first we have actually, who has privileges from equal sign and what privileges, and who has given these privileges, correct? Exactly. So this says that the user Postgres, the owner of this specific default privilege, anytime the Postgres creates a table where it just says equal, that's public, that's all. And so they have read access. The question was, I apologize, you know, basically what's being shown here. So when I create the default privilege, you know, the equal with nothing in front of it just means public. And then you can name multiple roles. In this case it's just the owner obviously has all the privilege, and they always have all the privilege, right? Yeah. So do you think it's possible to have wild cards after like, you know, like, any database is structured if the user will have access to these types of privilege? That's a great, so the question is, is it possible to have wild cards? And I think you're saying, like, if I create a default privilege, and I don't know if I said this earlier, and I apologize, this is per database, right? So if I create the default in the database, sorry, I don't think there is. I mean, again, you can create things like, in this case I said on tables, you can do things like on tables, on views, so you get a lot of the objects. But I don't believe there's a way to say like a wild card across multiple things. So a great question, the question is, could you do this in the template? Yeah, you could. You could create your roles in the template database. You could, for the roles that you want to use, set your default privileges, and if that all works out and you have all the roles and owners, every database you create is going to get that stuff. All right, I just really want to quickly run this demo, it's about five minutes, and so just so you can see it, because sometimes for me at least, that's just helped me see what's happening, right? It's one thing to see slides, but just really quickly, so providing object access, because this is, again, this is where I see so many of the actual problems happen. When you don't give someone a super user, all of a sudden things just go haywire. And so you can either explicitly grant access every time to every kind of object and go for it. A lot of work, do what you want to do. You can alter default privileges, and now any time something is created in that database by that role, including something like migration scripts, they will inherit these privileges for whatever roles you assigned. You can then set role in the app, I'm going to show you that, so in Postgres you can say set role, so I could connect to the database, I could set, change my role for that session to the owner of the table so I can do something with it and modify the privileges and so forth. And then in Postgres 14 and above, we're starting to get some of these other attributes to do more. I talked earlier about this, this is the object ownership thing in security. Again, there's a number of talks on this, I think I have an old one maybe linked on my blog somewhere. So let's go ahead and quickly do the demo. So I have an empty database, this is going to be really quick. So I'm using dbeaver, I just like it because of the color coding stuff, just a little bit easier for you to see and show. So the current role I'm currently connected as Postgres, so this session I initiated as a Postgres super user. And I'm going to create a new schema, and I still have to do all the things I want to do, so I'm going to create a developer role, now it says no login, so what kind of role is this? We consider this a group role. And so the set role, if you say none, that will change the ownership of the current session back to whoever initiated that session. So as Postgres, I just had this here because I think earlier I had said to something else. And so for that role, we're going to do this, we're going to grant select, insert, update, delete on all tables in the demo app schema to this group role called developer. Now it can't login, so it can't really do anything, right? And then we're going to say grant create and usage to this role. And then we're going to create our developer users, it doesn't really matter, you know, anything here doesn't matter. Oops, I am not hitting, am I hitting the right keys? Oh, my apologies. So dbeaver, I can just say control, enter, and it will run the commands. So I've created two users, and now the magic. I can grant those users access privilege into that role, that group. Now at this moment, now that they've been given granted access, what does that mean about their privilege? I have not granted any privileges to those users yet. But what do they now have? Select, insert, update, delete on all tables, and they have create and usage, right? So now without doing anything else, they can use that schema. And we can see if I, so now I can set role. So this, I could have multiple tabs, I could have connected as dev one on one tab and dev two on another tab. In Postgres, when you say set role to a role, it's basically like switching user, there's one or two things that don't happen at that moment. One is, remember earlier I said you alter, you can alter some settings, those things don't get run when you do set role. But otherwise, if I'm allowed, I'm running a super user so I can do this, if I have membership in that role, I can set to it and act as that role for a little bit. And then I can go back. So I'm going to set to dev one, so this is as if I had connected as dev one to the database now, and I'm going to create a table in that new schema, because I can. Again, we haven't granted anything to that user explicitly except membership in this group. And now we'll see, oh, I need to create the table, don't I? What's that? I didn't, what? So here, I'll just drop this because that's going to miss everything. Yes. Ah. Alright. Come on. Yes. Does not exist. Okay, maybe I, well, if this doesn't go, then we'll just move on and I'll show you what I can. Alright, there we go. So now I can see that, oh my goodness, my hands are not hitting the right keys here. So I have this table and the owner is Postgres. So now I set my role to dev two and I try and alter that table. Of course I can't. I don't have permission to do that because Postgres created it. They didn't give me permission. So I'm going to go ahead and drop that table. I could also just alter the, I could just alter the owner. What I'm going to do this time is I'm going to set the role to developer. This is the, no, again, it can't log in, but I can set the role to, I have access to developer or I'm super user. So I'm now, now I'm developer. I create that same table and now we can see that it's owned by developer. Okay, what does that really do for us? Well, now I can go back to dev two and I can try and alter that table. And of course this doesn't work. Maybe I didn't. What's that? Oh, I didn't. Okay. Let me just talk you through this rather than, man, I literally ran through this five times today. My apologies. The big point here is as we go down through, as long as the user is a member of that group and that group created the objects, I can do the privileges I'm allowed to do on that object then. All right, so it's a way to let me do some stuff. Now, some things I may not be able to do, I might have to switch into that role to do some alter things like that, right? If I want to alter the object itself. And so, yeah, I see, man, that's really crazy. Anyway, the main, hate when a demo fails, right? The main point is there's like two recordings of this. You can see this run through if you want. It's just to say again, you have to grant specific privileges. I was going to come down here to the default privileges and show again that once you set something like the default privilege, as long as you create those objects with that role, they will get whatever privileges you said to the roles that you provided. And so, it's just a way. So in this case, it was just a read on the report user. I want them to be able to read from every table. If I'm not using Postgres 14 and above, I would have to make sure that they have select on all the tables. Setting a default privilege is one of the easiest ways to do that. All right. So last thing, go back. Demo fail. We'll have to get that end of the time. Just to really quickly bring up predefined roles. So predefined roles have existed for a while and Postgres 14 and above. There's a lot that's been done to try and do things, provide roles that for management purposes. So you don't have to be a super user. I gave the example earlier of checkpoint, right? So now you can give someone this checkpoint. We call them predefined roles. You can grant them membership into that role and then that user could run a checkpoint. Things like read all data. This has been a problem for a long time. So starting with Postgres 14, I think it was, we had the read all tables and the write all tables. So if you just wanted someone to be able to read all tables, in this case, in all databases, because it's a role there, you could now create this, you know, grant them access into this. Here are the current predefined roles. This is updated to 16. I believe the one that's different here, I knew earlier and right now I can't find it. But this is where you can do things like read servers. So a lot of monitoring programs now require you to be able to read the log or to read files from disk. Well, if you don't want super user to connect, you could grant your monitoring role something like read server files so that they can still read the files without being a super user. All right? That's the end of it. I really apologize for the demo. I love giving that demo and I don't know what I did. But anyway, if you have questions, I'll take one and then we're going to have to be done. Yeah. Thank you. Great. Yeah. Great question. For those who are still here, the question is there like a log cap of transitions of, I guess the mic is off. There's, is there a log cap when you grant things off and on, right? I had this default privilege and then I modified it. There isn't. You would have to do that in some way. Maybe through scripture if you do.", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 15.44, "text": " Hello, everyone. Thanks for joining. We have Ryan talking about roles, privileges, and", "tokens": [50364, 2425, 11, 1518, 13, 2561, 337, 5549, 13, 492, 362, 9116, 1417, 466, 9604, 11, 32588, 11, 293, 51136], "temperature": 0.0, "avg_logprob": -0.33281698383268765, "compression_ratio": 1.335483870967742, "no_speech_prob": 0.35924771428108215}, {"id": 1, "seek": 0, "start": 15.44, "end": 20.2, "text": " security in post-dress. Over to you.", "tokens": [51136, 3825, 294, 2183, 12, 67, 735, 13, 4886, 281, 291, 13, 51374], "temperature": 0.0, "avg_logprob": -0.33281698383268765, "compression_ratio": 1.335483870967742, "no_speech_prob": 0.35924771428108215}, {"id": 2, "seek": 0, "start": 20.2, "end": 26.28, "text": " Thank you. I also get to quit this at the end of my deck, but it's fairly easy. I'm", "tokens": [51374, 1044, 291, 13, 286, 611, 483, 281, 10366, 341, 412, 264, 917, 295, 452, 9341, 11, 457, 309, 311, 6457, 1858, 13, 286, 478, 51678], "temperature": 0.0, "avg_logprob": -0.33281698383268765, "compression_ratio": 1.335483870967742, "no_speech_prob": 0.35924771428108215}, {"id": 3, "seek": 2628, "start": 26.28, "end": 32.96, "text": " Ryan Booz everywhere. I try to be my blogger software in Booz, which you'll see some stuff", "tokens": [50364, 9116, 23351, 89, 5315, 13, 286, 853, 281, 312, 452, 6968, 1321, 4722, 294, 23351, 89, 11, 597, 291, 603, 536, 512, 1507, 50698], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 4, "seek": 2628, "start": 32.96, "end": 38.92, "text": " time to time. And I will try and get this updated version in my repo hopefully before", "tokens": [50698, 565, 281, 565, 13, 400, 286, 486, 853, 293, 483, 341, 10588, 3037, 294, 452, 49040, 4696, 949, 50996], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 5, "seek": 2628, "start": 38.92, "end": 42.88, "text": " the end of the day, and I will do my best to link it to the website. They have a place", "tokens": [50996, 264, 917, 295, 264, 786, 11, 293, 286, 486, 360, 452, 1151, 281, 2113, 309, 281, 264, 3144, 13, 814, 362, 257, 1081, 51194], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 6, "seek": 2628, "start": 42.88, "end": 44.92, "text": " for us to do that.", "tokens": [51194, 337, 505, 281, 360, 300, 13, 51296], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 7, "seek": 2628, "start": 44.92, "end": 49.92, "text": " So quick agenda. Roles and privileges. It's something we have to deal with everywhere,", "tokens": [51296, 407, 1702, 9829, 13, 497, 7456, 293, 32588, 13, 467, 311, 746, 321, 362, 281, 2028, 365, 5315, 11, 51546], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 8, "seek": 2628, "start": 49.92, "end": 54.0, "text": " whether it's in post-dress, whether it's on your machines, whether it's in your applications.", "tokens": [51546, 1968, 309, 311, 294, 2183, 12, 67, 735, 11, 1968, 309, 311, 322, 428, 8379, 11, 1968, 309, 311, 294, 428, 5821, 13, 51750], "temperature": 0.0, "avg_logprob": -0.20150950598338294, "compression_ratio": 1.6775362318840579, "no_speech_prob": 0.1937616765499115}, {"id": 9, "seek": 5400, "start": 54.0, "end": 58.2, "text": " And it's something that, as I've done more and more in post-dress, helped users in post-dress,", "tokens": [50364, 400, 309, 311, 746, 300, 11, 382, 286, 600, 1096, 544, 293, 544, 294, 2183, 12, 67, 735, 11, 4254, 5022, 294, 2183, 12, 67, 735, 11, 50574], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 10, "seek": 5400, "start": 58.2, "end": 63.6, "text": " helped people transitioning into using post-dress, understanding roles, and how the privileges", "tokens": [50574, 4254, 561, 33777, 666, 1228, 2183, 12, 67, 735, 11, 3701, 9604, 11, 293, 577, 264, 32588, 50844], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 11, "seek": 5400, "start": 63.6, "end": 67.24, "text": " that we can inherit and use really interact with things. So that's what we're going to", "tokens": [50844, 300, 321, 393, 21389, 293, 764, 534, 4648, 365, 721, 13, 407, 300, 311, 437, 321, 434, 516, 281, 51026], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 12, "seek": 5400, "start": 67.24, "end": 72.36, "text": " try and go top down. It's, every time I run through this, I'm actually writing a chapter", "tokens": [51026, 853, 293, 352, 1192, 760, 13, 467, 311, 11, 633, 565, 286, 1190, 807, 341, 11, 286, 478, 767, 3579, 257, 7187, 51282], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 13, "seek": 5400, "start": 72.36, "end": 76.8, "text": " of a book on this, and it's like trying to figure out the exact order because of all", "tokens": [51282, 295, 257, 1446, 322, 341, 11, 293, 309, 311, 411, 1382, 281, 2573, 484, 264, 1900, 1668, 570, 295, 439, 51504], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 14, "seek": 5400, "start": 76.8, "end": 80.03999999999999, "text": " the pieces that have to come together. So we'll start with the building blocks, get", "tokens": [51504, 264, 3755, 300, 362, 281, 808, 1214, 13, 407, 321, 603, 722, 365, 264, 2390, 8474, 11, 483, 51666], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 15, "seek": 5400, "start": 80.03999999999999, "end": 83.96000000000001, "text": " through roles, talk a little bit about inheritance, which is really important. And for me, it's", "tokens": [51666, 807, 9604, 11, 751, 257, 707, 857, 466, 32122, 11, 597, 307, 534, 1021, 13, 400, 337, 385, 11, 309, 311, 51862], "temperature": 0.0, "avg_logprob": -0.14707446098327637, "compression_ratio": 1.8208092485549132, "no_speech_prob": 0.04734344035387039}, {"id": 16, "seek": 8396, "start": 84.88, "end": 89.32, "text": " about getting down to object ownership because I think that's where most people get confused", "tokens": [50410, 466, 1242, 760, 281, 2657, 15279, 570, 286, 519, 300, 311, 689, 881, 561, 483, 9019, 50632], "temperature": 0.0, "avg_logprob": -0.14066007204144915, "compression_ratio": 1.599290780141844, "no_speech_prob": 0.009683559648692608}, {"id": 17, "seek": 8396, "start": 89.32, "end": 96.19999999999999, "text": " and have a difficult time using post-dress at scale with a lot of people. So quick disclaimers.", "tokens": [50632, 293, 362, 257, 2252, 565, 1228, 2183, 12, 67, 735, 412, 4373, 365, 257, 688, 295, 561, 13, 407, 1702, 2983, 10970, 433, 13, 50976], "temperature": 0.0, "avg_logprob": -0.14066007204144915, "compression_ratio": 1.599290780141844, "no_speech_prob": 0.009683559648692608}, {"id": 18, "seek": 8396, "start": 96.19999999999999, "end": 100.8, "text": " We won't cover everything. There's just too much, right? But everything I cover in here", "tokens": [50976, 492, 1582, 380, 2060, 1203, 13, 821, 311, 445, 886, 709, 11, 558, 30, 583, 1203, 286, 2060, 294, 510, 51206], "temperature": 0.0, "avg_logprob": -0.14066007204144915, "compression_ratio": 1.599290780141844, "no_speech_prob": 0.009683559648692608}, {"id": 19, "seek": 8396, "start": 100.8, "end": 105.91999999999999, "text": " should be applicable. It is applicable to anything that's currently in support version,", "tokens": [51206, 820, 312, 21142, 13, 467, 307, 21142, 281, 1340, 300, 311, 4362, 294, 1406, 3037, 11, 51462], "temperature": 0.0, "avg_logprob": -0.14066007204144915, "compression_ratio": 1.599290780141844, "no_speech_prob": 0.009683559648692608}, {"id": 20, "seek": 8396, "start": 105.91999999999999, "end": 110.88, "text": " which is 12 plus. Honestly, it should work with anything from nine, six forward, aside", "tokens": [51462, 597, 307, 2272, 1804, 13, 12348, 11, 309, 820, 589, 365, 1340, 490, 4949, 11, 2309, 2128, 11, 7359, 51710], "temperature": 0.0, "avg_logprob": -0.14066007204144915, "compression_ratio": 1.599290780141844, "no_speech_prob": 0.009683559648692608}, {"id": 21, "seek": 11088, "start": 110.92, "end": 115.88, "text": " from one or two things that have been added over the last few releases. So let's go ahead", "tokens": [50366, 490, 472, 420, 732, 721, 300, 362, 668, 3869, 670, 264, 1036, 1326, 16952, 13, 407, 718, 311, 352, 2286, 50614], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 22, "seek": 11088, "start": 115.88, "end": 121.52, "text": " and dive in. So first, the building blocks. So there's four pieces here. One is just,", "tokens": [50614, 293, 9192, 294, 13, 407, 700, 11, 264, 2390, 8474, 13, 407, 456, 311, 1451, 3755, 510, 13, 1485, 307, 445, 11, 50896], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 23, "seek": 11088, "start": 121.52, "end": 125.16, "text": " I want to talk about the building blocks. We're going to talk about roles, security,", "tokens": [50896, 286, 528, 281, 751, 466, 264, 2390, 8474, 13, 492, 434, 516, 281, 751, 466, 9604, 11, 3825, 11, 51078], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 24, "seek": 11088, "start": 125.16, "end": 130.92, "text": " and ownership, just to get you through as we go. So if you have been using post-dress", "tokens": [51078, 293, 15279, 11, 445, 281, 483, 291, 807, 382, 321, 352, 13, 407, 498, 291, 362, 668, 1228, 2183, 12, 67, 735, 51366], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 25, "seek": 11088, "start": 130.92, "end": 134.8, "text": " for a while, you may or may not understand this, but it's really critical to understanding", "tokens": [51366, 337, 257, 1339, 11, 291, 815, 420, 815, 406, 1223, 341, 11, 457, 309, 311, 534, 4924, 281, 3701, 51560], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 26, "seek": 11088, "start": 134.8, "end": 140.04, "text": " how privileges and roles work. And so if you are in a hosted environment, this may not", "tokens": [51560, 577, 32588, 293, 9604, 589, 13, 400, 370, 498, 291, 366, 294, 257, 19204, 2823, 11, 341, 815, 406, 51822], "temperature": 0.0, "avg_logprob": -0.13780218053747106, "compression_ratio": 1.7408637873754154, "no_speech_prob": 0.009403027594089508}, {"id": 27, "seek": 14004, "start": 140.07999999999998, "end": 146.07999999999998, "text": " matter to you. But again, it's really important to understand. So as you create roles, objects,", "tokens": [50366, 1871, 281, 291, 13, 583, 797, 11, 309, 311, 534, 1021, 281, 1223, 13, 407, 382, 291, 1884, 9604, 11, 6565, 11, 50666], "temperature": 0.0, "avg_logprob": -0.15802816484795243, "compression_ratio": 1.7722007722007722, "no_speech_prob": 0.005208511371165514}, {"id": 28, "seek": 14004, "start": 146.07999999999998, "end": 151.39999999999998, "text": " and the ownership and the privileges, this is how this works. So we have, if this is a bare", "tokens": [50666, 293, 264, 15279, 293, 264, 32588, 11, 341, 307, 577, 341, 1985, 13, 407, 321, 362, 11, 498, 341, 307, 257, 6949, 50932], "temperature": 0.0, "avg_logprob": -0.15802816484795243, "compression_ratio": 1.7722007722007722, "no_speech_prob": 0.005208511371165514}, {"id": 29, "seek": 14004, "start": 151.39999999999998, "end": 157.28, "text": " bone server, we have a cluster. And we have a host, whether it's a VM, whether that's bare", "tokens": [50932, 9026, 7154, 11, 321, 362, 257, 13630, 13, 400, 321, 362, 257, 3975, 11, 1968, 309, 311, 257, 18038, 11, 1968, 300, 311, 6949, 51226], "temperature": 0.0, "avg_logprob": -0.15802816484795243, "compression_ratio": 1.7722007722007722, "no_speech_prob": 0.005208511371165514}, {"id": 30, "seek": 14004, "start": 157.28, "end": 163.28, "text": " metal. And on that host, you can have as many running post-dress clusters as you want. So", "tokens": [51226, 5760, 13, 400, 322, 300, 3975, 11, 291, 393, 362, 382, 867, 2614, 2183, 12, 67, 735, 23313, 382, 291, 528, 13, 407, 51526], "temperature": 0.0, "avg_logprob": -0.15802816484795243, "compression_ratio": 1.7722007722007722, "no_speech_prob": 0.005208511371165514}, {"id": 31, "seek": 14004, "start": 163.28, "end": 168.72, "text": " we just had to talk about clustering, but the actual process running on the host is called", "tokens": [51526, 321, 445, 632, 281, 751, 466, 596, 48673, 11, 457, 264, 3539, 1399, 2614, 322, 264, 3975, 307, 1219, 51798], "temperature": 0.0, "avg_logprob": -0.15802816484795243, "compression_ratio": 1.7722007722007722, "no_speech_prob": 0.005208511371165514}, {"id": 32, "seek": 16872, "start": 168.76, "end": 172.88, "text": " a cluster. If you go to the documentation, that's what you'll see. So we can have multiple", "tokens": [50366, 257, 13630, 13, 759, 291, 352, 281, 264, 14333, 11, 300, 311, 437, 291, 603, 536, 13, 407, 321, 393, 362, 3866, 50572], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 33, "seek": 16872, "start": 172.88, "end": 178.6, "text": " clusters. They just have to run on different ports. And then once you have a cluster, now", "tokens": [50572, 23313, 13, 814, 445, 362, 281, 1190, 322, 819, 18160, 13, 400, 550, 1564, 291, 362, 257, 13630, 11, 586, 50858], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 34, "seek": 16872, "start": 178.6, "end": 182.0, "text": " this should make sense. Really, there's a lot that goes on in there, but as far as this", "tokens": [50858, 341, 820, 652, 2020, 13, 4083, 11, 456, 311, 257, 688, 300, 1709, 322, 294, 456, 11, 457, 382, 1400, 382, 341, 51028], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 35, "seek": 16872, "start": 182.0, "end": 186.88, "text": " talk goes, the two pieces that are really critical and really symbiotic to one another", "tokens": [51028, 751, 1709, 11, 264, 732, 3755, 300, 366, 534, 4924, 293, 534, 43700, 6471, 299, 281, 472, 1071, 51272], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 36, "seek": 16872, "start": 186.88, "end": 193.16, "text": " is roles and the databases, the objects that are contained therein. So these exist at the", "tokens": [51272, 307, 9604, 293, 264, 22380, 11, 264, 6565, 300, 366, 16212, 456, 259, 13, 407, 613, 2514, 412, 264, 51586], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 37, "seek": 16872, "start": 193.16, "end": 198.64, "text": " cluster level. So roles are created at the cluster, databases are created at the cluster,", "tokens": [51586, 13630, 1496, 13, 407, 9604, 366, 2942, 412, 264, 13630, 11, 22380, 366, 2942, 412, 264, 13630, 11, 51860], "temperature": 0.0, "avg_logprob": -0.12738987915497973, "compression_ratio": 1.8771929824561404, "no_speech_prob": 0.00563527038320899}, {"id": 38, "seek": 19864, "start": 198.67999999999998, "end": 203.95999999999998, "text": " and again, remember, for this talk, cluster is one instance of post-dress, not many, many", "tokens": [50366, 293, 797, 11, 1604, 11, 337, 341, 751, 11, 13630, 307, 472, 5197, 295, 2183, 12, 67, 735, 11, 406, 867, 11, 867, 50630], "temperature": 0.0, "avg_logprob": -0.14138929722672802, "compression_ratio": 1.6151079136690647, "no_speech_prob": 0.002788987709209323}, {"id": 39, "seek": 19864, "start": 203.95999999999998, "end": 210.83999999999997, "text": " instances. And then, like I said, the interplay between these is actually just a little bit", "tokens": [50630, 14519, 13, 400, 550, 11, 411, 286, 848, 11, 264, 728, 2858, 1296, 613, 307, 767, 445, 257, 707, 857, 50974], "temperature": 0.0, "avg_logprob": -0.14138929722672802, "compression_ratio": 1.6151079136690647, "no_speech_prob": 0.002788987709209323}, {"id": 40, "seek": 19864, "start": 210.83999999999997, "end": 215.88, "text": " more nuanced than I used to spend a lot of my time in SQL Server a number of years ago.", "tokens": [50974, 544, 45115, 813, 286, 1143, 281, 3496, 257, 688, 295, 452, 565, 294, 19200, 25684, 257, 1230, 295, 924, 2057, 13, 51226], "temperature": 0.0, "avg_logprob": -0.14138929722672802, "compression_ratio": 1.6151079136690647, "no_speech_prob": 0.002788987709209323}, {"id": 41, "seek": 19864, "start": 215.88, "end": 221.0, "text": " And it's similar, right? We're talking about roles or users and privileges, but the way", "tokens": [51226, 400, 309, 311, 2531, 11, 558, 30, 492, 434, 1417, 466, 9604, 420, 5022, 293, 32588, 11, 457, 264, 636, 51482], "temperature": 0.0, "avg_logprob": -0.14138929722672802, "compression_ratio": 1.6151079136690647, "no_speech_prob": 0.002788987709209323}, {"id": 42, "seek": 19864, "start": 221.0, "end": 225.32, "text": " that they rely on one another in post-dress, again, can be a nuance that not everyone picks", "tokens": [51482, 300, 436, 10687, 322, 472, 1071, 294, 2183, 12, 67, 735, 11, 797, 11, 393, 312, 257, 42625, 300, 406, 1518, 16137, 51698], "temperature": 0.0, "avg_logprob": -0.14138929722672802, "compression_ratio": 1.6151079136690647, "no_speech_prob": 0.002788987709209323}, {"id": 43, "seek": 22532, "start": 225.35999999999999, "end": 229.95999999999998, "text": " up initially. So we'll try and talk that through. Essentially, just to show that everything", "tokens": [50366, 493, 9105, 13, 407, 321, 603, 853, 293, 751, 300, 807, 13, 23596, 11, 445, 281, 855, 300, 1203, 50596], "temperature": 0.0, "avg_logprob": -0.1656080328899881, "compression_ratio": 1.6521739130434783, "no_speech_prob": 0.007919990457594395}, {"id": 44, "seek": 22532, "start": 229.95999999999998, "end": 235.07999999999998, "text": " in the database, everything we care about from an object perspective has to be owned", "tokens": [50596, 294, 264, 8149, 11, 1203, 321, 1127, 466, 490, 364, 2657, 4585, 575, 281, 312, 11684, 50852], "temperature": 0.0, "avg_logprob": -0.1656080328899881, "compression_ratio": 1.6521739130434783, "no_speech_prob": 0.007919990457594395}, {"id": 45, "seek": 22532, "start": 235.07999999999998, "end": 240.35999999999999, "text": " by a role. And so it cannot exist until a role exists, and then it includes a database.", "tokens": [50852, 538, 257, 3090, 13, 400, 370, 309, 2644, 2514, 1826, 257, 3090, 8198, 11, 293, 550, 309, 5974, 257, 8149, 13, 51116], "temperature": 0.0, "avg_logprob": -0.1656080328899881, "compression_ratio": 1.6521739130434783, "no_speech_prob": 0.007919990457594395}, {"id": 46, "seek": 22532, "start": 240.35999999999999, "end": 245.84, "text": " And so there's just this back and forth that we're trying to understand as we go. When", "tokens": [51116, 400, 370, 456, 311, 445, 341, 646, 293, 5220, 300, 321, 434, 1382, 281, 1223, 382, 321, 352, 13, 1133, 51390], "temperature": 0.0, "avg_logprob": -0.1656080328899881, "compression_ratio": 1.6521739130434783, "no_speech_prob": 0.007919990457594395}, {"id": 47, "seek": 22532, "start": 245.84, "end": 252.64, "text": " you're in the cluster, every cluster has what's called a PG-HBA file, that is, host-base authentication.", "tokens": [51390, 291, 434, 294, 264, 13630, 11, 633, 13630, 575, 437, 311, 1219, 257, 40975, 12, 39, 9295, 3991, 11, 300, 307, 11, 3975, 12, 17429, 26643, 13, 51730], "temperature": 0.0, "avg_logprob": -0.1656080328899881, "compression_ratio": 1.6521739130434783, "no_speech_prob": 0.007919990457594395}, {"id": 48, "seek": 25264, "start": 252.64, "end": 257.56, "text": " And it's the first layer of authentication. So again, if you're running your own server,", "tokens": [50364, 400, 309, 311, 264, 700, 4583, 295, 26643, 13, 407, 797, 11, 498, 291, 434, 2614, 428, 1065, 7154, 11, 50610], "temperature": 0.0, "avg_logprob": -0.12567761622437643, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.0029313513077795506}, {"id": 49, "seek": 25264, "start": 257.56, "end": 262.44, "text": " this exists, you have to do something with it. If you're in a hosted environment, most", "tokens": [50610, 341, 8198, 11, 291, 362, 281, 360, 746, 365, 309, 13, 759, 291, 434, 294, 257, 19204, 2823, 11, 881, 50854], "temperature": 0.0, "avg_logprob": -0.12567761622437643, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.0029313513077795506}, {"id": 50, "seek": 25264, "start": 262.44, "end": 266.84, "text": " of this is taken care of for you if you're in a cloud vendor. And I like to think of", "tokens": [50854, 295, 341, 307, 2726, 1127, 295, 337, 291, 498, 291, 434, 294, 257, 4588, 24321, 13, 400, 286, 411, 281, 519, 295, 51074], "temperature": 0.0, "avg_logprob": -0.12567761622437643, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.0029313513077795506}, {"id": 51, "seek": 25264, "start": 266.84, "end": 273.47999999999996, "text": " it almost like a firewall rule, right? So it's a file that literally shows which hosts", "tokens": [51074, 309, 1920, 411, 257, 36109, 4978, 11, 558, 30, 407, 309, 311, 257, 3991, 300, 3736, 3110, 597, 21573, 51406], "temperature": 0.0, "avg_logprob": -0.12567761622437643, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.0029313513077795506}, {"id": 52, "seek": 25264, "start": 273.47999999999996, "end": 278.56, "text": " and roles can connect to what database is using what authentication method. And it's", "tokens": [51406, 293, 9604, 393, 1745, 281, 437, 8149, 307, 1228, 437, 26643, 3170, 13, 400, 309, 311, 51660], "temperature": 0.0, "avg_logprob": -0.12567761622437643, "compression_ratio": 1.6941176470588235, "no_speech_prob": 0.0029313513077795506}, {"id": 53, "seek": 27856, "start": 278.6, "end": 284.8, "text": " a matter of reading top down as a connection tries to happen into Postgres. It matches", "tokens": [50366, 257, 1871, 295, 3760, 1192, 760, 382, 257, 4984, 9898, 281, 1051, 666, 10223, 45189, 13, 467, 10676, 50676], "temperature": 0.0, "avg_logprob": -0.17100737889607748, "compression_ratio": 1.7587548638132295, "no_speech_prob": 0.005205437541007996}, {"id": 54, "seek": 27856, "start": 284.8, "end": 288.76, "text": " each of those properties. What host is this connection coming from? What is the role that's", "tokens": [50676, 1184, 295, 729, 7221, 13, 708, 3975, 307, 341, 4984, 1348, 490, 30, 708, 307, 264, 3090, 300, 311, 50874], "temperature": 0.0, "avg_logprob": -0.17100737889607748, "compression_ratio": 1.7587548638132295, "no_speech_prob": 0.005205437541007996}, {"id": 55, "seek": 27856, "start": 288.76, "end": 292.56, "text": " trying to connect? And what is the method they're trying to use? And the first one it", "tokens": [50874, 1382, 281, 1745, 30, 400, 437, 307, 264, 3170, 436, 434, 1382, 281, 764, 30, 400, 264, 700, 472, 309, 51064], "temperature": 0.0, "avg_logprob": -0.17100737889607748, "compression_ratio": 1.7587548638132295, "no_speech_prob": 0.005205437541007996}, {"id": 56, "seek": 27856, "start": 292.56, "end": 299.56, "text": " finds, that is the role, that is the HBA rule that it lists. These things can be very, very", "tokens": [51064, 10704, 11, 300, 307, 264, 3090, 11, 300, 307, 264, 389, 9295, 4978, 300, 309, 14511, 13, 1981, 721, 393, 312, 588, 11, 588, 51414], "temperature": 0.0, "avg_logprob": -0.17100737889607748, "compression_ratio": 1.7587548638132295, "no_speech_prob": 0.005205437541007996}, {"id": 57, "seek": 27856, "start": 299.56, "end": 305.4, "text": " long, right? But it's just left to right on each line. What type is it local? Is it host-based?", "tokens": [51414, 938, 11, 558, 30, 583, 309, 311, 445, 1411, 281, 558, 322, 1184, 1622, 13, 708, 2010, 307, 309, 2654, 30, 1119, 309, 3975, 12, 6032, 30, 51706], "temperature": 0.0, "avg_logprob": -0.17100737889607748, "compression_ratio": 1.7587548638132295, "no_speech_prob": 0.005205437541007996}, {"id": 58, "seek": 30540, "start": 305.56, "end": 312.56, "text": " A bunch of others. Which database? All databases, the users, addresses, and then methods. So", "tokens": [50372, 316, 3840, 295, 2357, 13, 3013, 8149, 30, 1057, 22380, 11, 264, 5022, 11, 16862, 11, 293, 550, 7150, 13, 407, 50722], "temperature": 0.0, "avg_logprob": -0.24533142513699002, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.03724801540374756}, {"id": 59, "seek": 30540, "start": 314.59999999999997, "end": 319.12, "text": " when it comes to methods, you've probably heard this if you've been around long enough,", "tokens": [50824, 562, 309, 1487, 281, 7150, 11, 291, 600, 1391, 2198, 341, 498, 291, 600, 668, 926, 938, 1547, 11, 51050], "temperature": 0.0, "avg_logprob": -0.24533142513699002, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.03724801540374756}, {"id": 60, "seek": 30540, "start": 319.12, "end": 325.28, "text": " but their trust still exists. And so just avoid using trust. Really at all costs. What", "tokens": [51050, 457, 641, 3361, 920, 8198, 13, 400, 370, 445, 5042, 1228, 3361, 13, 4083, 412, 439, 5497, 13, 708, 51358], "temperature": 0.0, "avg_logprob": -0.24533142513699002, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.03724801540374756}, {"id": 61, "seek": 30540, "start": 325.28, "end": 332.03999999999996, "text": " that means is on that machine, if the host and the user matches, you're in. You just", "tokens": [51358, 300, 1355, 307, 322, 300, 3479, 11, 498, 264, 3975, 293, 264, 4195, 10676, 11, 291, 434, 294, 13, 509, 445, 51696], "temperature": 0.0, "avg_logprob": -0.24533142513699002, "compression_ratio": 1.6073059360730593, "no_speech_prob": 0.03724801540374756}, {"id": 62, "seek": 33204, "start": 332.08000000000004, "end": 338.44, "text": " trust it and move forward. It's not terribly secure, right? And so in most environments,", "tokens": [50366, 3361, 309, 293, 1286, 2128, 13, 467, 311, 406, 22903, 7144, 11, 558, 30, 400, 370, 294, 881, 12388, 11, 50684], "temperature": 0.0, "avg_logprob": -0.1466190218925476, "compression_ratio": 1.5232067510548524, "no_speech_prob": 0.018761932849884033}, {"id": 63, "seek": 33204, "start": 338.44, "end": 344.96000000000004, "text": " if it's not some kind of central authentication, like Kerberos or whatever that might be, most", "tokens": [50684, 498, 309, 311, 406, 512, 733, 295, 5777, 26643, 11, 411, 20706, 607, 329, 420, 2035, 300, 1062, 312, 11, 881, 51010], "temperature": 0.0, "avg_logprob": -0.1466190218925476, "compression_ratio": 1.5232067510548524, "no_speech_prob": 0.018761932849884033}, {"id": 64, "seek": 33204, "start": 344.96000000000004, "end": 351.96000000000004, "text": " places do give you Scram 256 now. So Scram was developed, I forget now, five or six years", "tokens": [51010, 3190, 360, 976, 291, 2747, 2356, 38882, 586, 13, 407, 2747, 2356, 390, 4743, 11, 286, 2870, 586, 11, 1732, 420, 2309, 924, 51360], "temperature": 0.0, "avg_logprob": -0.1466190218925476, "compression_ratio": 1.5232067510548524, "no_speech_prob": 0.018761932849884033}, {"id": 65, "seek": 33204, "start": 352.16, "end": 358.84000000000003, "text": " ago, really kind of took over, replaced MD5 and some other things. So Scram 256 is what", "tokens": [51370, 2057, 11, 534, 733, 295, 1890, 670, 11, 10772, 22521, 20, 293, 512, 661, 721, 13, 407, 2747, 2356, 38882, 307, 437, 51704], "temperature": 0.0, "avg_logprob": -0.1466190218925476, "compression_ratio": 1.5232067510548524, "no_speech_prob": 0.018761932849884033}, {"id": 66, "seek": 35884, "start": 358.96, "end": 364.35999999999996, "text": " we recommend if you're using password-based authentication. And just need to make your,", "tokens": [50370, 321, 2748, 498, 291, 434, 1228, 11524, 12, 6032, 26643, 13, 400, 445, 643, 281, 652, 428, 11, 50640], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 67, "seek": 35884, "start": 364.35999999999996, "end": 367.59999999999997, "text": " it's probably what you're using, but if you don't know, go ahead and look.", "tokens": [50640, 309, 311, 1391, 437, 291, 434, 1228, 11, 457, 498, 291, 500, 380, 458, 11, 352, 2286, 293, 574, 13, 50802], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 68, "seek": 35884, "start": 367.59999999999997, "end": 372.23999999999995, "text": " All right, so that's just the building blocks. We have a host. We have a cluster running on", "tokens": [50802, 1057, 558, 11, 370, 300, 311, 445, 264, 2390, 8474, 13, 492, 362, 257, 3975, 13, 492, 362, 257, 13630, 2614, 322, 51034], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 69, "seek": 35884, "start": 372.23999999999995, "end": 376.44, "text": " it. We know the inside of the cluster. We have roles, databases, and some objects. So", "tokens": [51034, 309, 13, 492, 458, 264, 1854, 295, 264, 13630, 13, 492, 362, 9604, 11, 22380, 11, 293, 512, 6565, 13, 407, 51244], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 70, "seek": 35884, "start": 376.44, "end": 380.44, "text": " let's go ahead and talk about that first part. Once we've at least gotten through that host-based", "tokens": [51244, 718, 311, 352, 2286, 293, 751, 466, 300, 700, 644, 13, 3443, 321, 600, 412, 1935, 5768, 807, 300, 3975, 12, 6032, 51444], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 71, "seek": 35884, "start": 380.44, "end": 385.67999999999995, "text": " authentication, we have a host, a user, and a type. We've matched the rules, and now we're", "tokens": [51444, 26643, 11, 321, 362, 257, 3975, 11, 257, 4195, 11, 293, 257, 2010, 13, 492, 600, 21447, 264, 4474, 11, 293, 586, 321, 434, 51706], "temperature": 0.0, "avg_logprob": -0.17606214428624362, "compression_ratio": 1.7932203389830508, "no_speech_prob": 0.00883691105991602}, {"id": 72, "seek": 38568, "start": 385.72, "end": 392.8, "text": " allowed to try and connect. Who are we connecting as? So roles, obviously, own the database", "tokens": [50366, 4350, 281, 853, 293, 1745, 13, 2102, 366, 321, 11015, 382, 30, 407, 9604, 11, 2745, 11, 1065, 264, 8149, 50720], "temperature": 0.0, "avg_logprob": -0.17684193010683413, "compression_ratio": 1.7007575757575757, "no_speech_prob": 0.031095393002033234}, {"id": 73, "seek": 38568, "start": 392.8, "end": 399.24, "text": " schema's objects, things like tables, functions, views, things you would expect within a database.", "tokens": [50720, 34078, 311, 6565, 11, 721, 411, 8020, 11, 6828, 11, 6809, 11, 721, 291, 576, 2066, 1951, 257, 8149, 13, 51042], "temperature": 0.0, "avg_logprob": -0.17684193010683413, "compression_ratio": 1.7007575757575757, "no_speech_prob": 0.031095393002033234}, {"id": 74, "seek": 38568, "start": 399.24, "end": 405.0, "text": " And roles own the database itself. There's a role that owns the database that's created.", "tokens": [51042, 400, 9604, 1065, 264, 8149, 2564, 13, 821, 311, 257, 3090, 300, 19143, 264, 8149, 300, 311, 2942, 13, 51330], "temperature": 0.0, "avg_logprob": -0.17684193010683413, "compression_ratio": 1.7007575757575757, "no_speech_prob": 0.031095393002033234}, {"id": 75, "seek": 38568, "start": 405.0, "end": 409.2, "text": " Roles have cluster-level privileges. It's this nuance of thing we'll call attributes,", "tokens": [51330, 497, 7456, 362, 13630, 12, 12418, 32588, 13, 467, 311, 341, 42625, 295, 551, 321, 603, 818, 17212, 11, 51540], "temperature": 0.0, "avg_logprob": -0.17684193010683413, "compression_ratio": 1.7007575757575757, "no_speech_prob": 0.031095393002033234}, {"id": 76, "seek": 38568, "start": 409.2, "end": 413.2, "text": " and I'll show you in just a minute. Those are separate from the privileges that you", "tokens": [51540, 293, 286, 603, 855, 291, 294, 445, 257, 3456, 13, 3950, 366, 4994, 490, 264, 32588, 300, 291, 51740], "temperature": 0.0, "avg_logprob": -0.17684193010683413, "compression_ratio": 1.7007575757575757, "no_speech_prob": 0.031095393002033234}, {"id": 77, "seek": 41320, "start": 413.24, "end": 417.64, "text": " get within a database. But they're kind of, again, it's like the host-level, what can", "tokens": [50366, 483, 1951, 257, 8149, 13, 583, 436, 434, 733, 295, 11, 797, 11, 309, 311, 411, 264, 3975, 12, 12418, 11, 437, 393, 50586], "temperature": 0.0, "avg_logprob": -0.19514527191986908, "compression_ratio": 1.7991803278688525, "no_speech_prob": 0.004458045586943626}, {"id": 78, "seek": 41320, "start": 417.64, "end": 424.64, "text": " you as a user do as a role do in this data in this cluster? And then you might be able", "tokens": [50586, 291, 382, 257, 4195, 360, 382, 257, 3090, 360, 294, 341, 1412, 294, 341, 13630, 30, 400, 550, 291, 1062, 312, 1075, 50936], "temperature": 0.0, "avg_logprob": -0.19514527191986908, "compression_ratio": 1.7991803278688525, "no_speech_prob": 0.004458045586943626}, {"id": 79, "seek": 41320, "start": 424.84, "end": 429.15999999999997, "text": " to be granted privileges to a data... They can be granted privileges to database schemas,", "tokens": [50946, 281, 312, 12344, 32588, 281, 257, 1412, 485, 814, 393, 312, 12344, 32588, 281, 8149, 22627, 296, 11, 51162], "temperature": 0.0, "avg_logprob": -0.19514527191986908, "compression_ratio": 1.7991803278688525, "no_speech_prob": 0.004458045586943626}, {"id": 80, "seek": 41320, "start": 429.15999999999997, "end": 435.15999999999997, "text": " objects, and so forth. And then possibly, as we'll see in one second, some roles have", "tokens": [51162, 6565, 11, 293, 370, 5220, 13, 400, 550, 6264, 11, 382, 321, 603, 536, 294, 472, 1150, 11, 512, 9604, 362, 51462], "temperature": 0.0, "avg_logprob": -0.19514527191986908, "compression_ratio": 1.7991803278688525, "no_speech_prob": 0.004458045586943626}, {"id": 81, "seek": 41320, "start": 435.15999999999997, "end": 442.15999999999997, "text": " the ability to grant their privileges and their privileges to other roles in the database.", "tokens": [51462, 264, 3485, 281, 6386, 641, 32588, 293, 641, 32588, 281, 661, 9604, 294, 264, 8149, 13, 51812], "temperature": 0.0, "avg_logprob": -0.19514527191986908, "compression_ratio": 1.7991803278688525, "no_speech_prob": 0.004458045586943626}, {"id": 82, "seek": 44320, "start": 443.2, "end": 448.8, "text": " And we'll see why that's really important. So just to talk, I've been trying consistently", "tokens": [50364, 400, 321, 603, 536, 983, 300, 311, 534, 1021, 13, 407, 445, 281, 751, 11, 286, 600, 668, 1382, 14961, 50644], "temperature": 0.0, "avg_logprob": -0.26377791965130676, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0017515064682811499}, {"id": 83, "seek": 44320, "start": 448.8, "end": 455.8, "text": " to say roles over and over and over rather than users and groups. So in the SQL standard,", "tokens": [50644, 281, 584, 9604, 670, 293, 670, 293, 670, 2831, 813, 5022, 293, 3935, 13, 407, 294, 264, 19200, 3832, 11, 50994], "temperature": 0.0, "avg_logprob": -0.26377791965130676, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0017515064682811499}, {"id": 84, "seek": 44320, "start": 455.8, "end": 462.8, "text": " role is there, and so is user and group. User... I might have the backwards, but user and group", "tokens": [50994, 3090, 307, 456, 11, 293, 370, 307, 4195, 293, 1594, 13, 32127, 485, 286, 1062, 362, 264, 12204, 11, 457, 4195, 293, 1594, 51344], "temperature": 0.0, "avg_logprob": -0.26377791965130676, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0017515064682811499}, {"id": 85, "seek": 44320, "start": 462.8, "end": 469.8, "text": " is also in the standard. But starting with, I think, was 8.2. We moved to just roles.", "tokens": [51344, 307, 611, 294, 264, 3832, 13, 583, 2891, 365, 11, 286, 519, 11, 390, 1649, 13, 17, 13, 492, 4259, 281, 445, 9604, 13, 51694], "temperature": 0.0, "avg_logprob": -0.26377791965130676, "compression_ratio": 1.5973451327433628, "no_speech_prob": 0.0017515064682811499}, {"id": 86, "seek": 46980, "start": 469.96000000000004, "end": 473.96000000000004, "text": " So there's no real semantic difference between roles and groups. It doesn't do something", "tokens": [50372, 407, 456, 311, 572, 957, 47982, 2649, 1296, 9604, 293, 3935, 13, 467, 1177, 380, 360, 746, 50572], "temperature": 0.0, "avg_logprob": -0.1232405052528725, "compression_ratio": 1.772, "no_speech_prob": 0.001684543676674366}, {"id": 87, "seek": 46980, "start": 473.96000000000004, "end": 480.24, "text": " magical. What we tend to say, what the convention is, when you create a role and it's allowed", "tokens": [50572, 12066, 13, 708, 321, 3928, 281, 584, 11, 437, 264, 10286, 307, 11, 562, 291, 1884, 257, 3090, 293, 309, 311, 4350, 50886], "temperature": 0.0, "avg_logprob": -0.1232405052528725, "compression_ratio": 1.772, "no_speech_prob": 0.001684543676674366}, {"id": 88, "seek": 46980, "start": 480.24, "end": 486.36, "text": " to actually log in to the cluster, we kind of consider that role a user. And if it's", "tokens": [50886, 281, 767, 3565, 294, 281, 264, 13630, 11, 321, 733, 295, 1949, 300, 3090, 257, 4195, 13, 400, 498, 309, 311, 51192], "temperature": 0.0, "avg_logprob": -0.1232405052528725, "compression_ratio": 1.772, "no_speech_prob": 0.001684543676674366}, {"id": 89, "seek": 46980, "start": 486.36, "end": 491.48, "text": " not allowed to log in, we consider that a group. Everything else about the roles can", "tokens": [51192, 406, 4350, 281, 3565, 294, 11, 321, 1949, 300, 257, 1594, 13, 5471, 1646, 466, 264, 9604, 393, 51448], "temperature": 0.0, "avg_logprob": -0.1232405052528725, "compression_ratio": 1.772, "no_speech_prob": 0.001684543676674366}, {"id": 90, "seek": 46980, "start": 491.48, "end": 496.48, "text": " be consistent. They can all have privileges. They can all do a lot of things. They can own", "tokens": [51448, 312, 8398, 13, 814, 393, 439, 362, 32588, 13, 814, 393, 439, 360, 257, 688, 295, 721, 13, 814, 393, 1065, 51698], "temperature": 0.0, "avg_logprob": -0.1232405052528725, "compression_ratio": 1.772, "no_speech_prob": 0.001684543676674366}, {"id": 91, "seek": 49648, "start": 496.48, "end": 501.16, "text": " this. Even a role that can't log in can own something. And you'll see why we do that in", "tokens": [50364, 341, 13, 2754, 257, 3090, 300, 393, 380, 3565, 294, 393, 1065, 746, 13, 400, 291, 603, 536, 983, 321, 360, 300, 294, 50598], "temperature": 0.0, "avg_logprob": -0.1582971874036287, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.007804348133504391}, {"id": 92, "seek": 49648, "start": 501.16, "end": 507.12, "text": " just a little bit when it comes to inheritance. So you can do this, create user and create", "tokens": [50598, 445, 257, 707, 857, 562, 309, 1487, 281, 32122, 13, 407, 291, 393, 360, 341, 11, 1884, 4195, 293, 1884, 50896], "temperature": 0.0, "avg_logprob": -0.1582971874036287, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.007804348133504391}, {"id": 93, "seek": 49648, "start": 507.12, "end": 514.12, "text": " group does exist. They are simply aliases to create role. And so if you say create user,", "tokens": [50896, 1594, 775, 2514, 13, 814, 366, 2935, 10198, 1957, 281, 1884, 3090, 13, 400, 370, 498, 291, 584, 1884, 4195, 11, 51246], "temperature": 0.0, "avg_logprob": -0.1582971874036287, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.007804348133504391}, {"id": 94, "seek": 49648, "start": 514.76, "end": 521.16, "text": " it, behind the scenes, does create role, whatever attributes you pass in, it will apply. And", "tokens": [51278, 309, 11, 2261, 264, 8026, 11, 775, 1884, 3090, 11, 2035, 17212, 291, 1320, 294, 11, 309, 486, 3079, 13, 400, 51598], "temperature": 0.0, "avg_logprob": -0.1582971874036287, "compression_ratio": 1.6363636363636365, "no_speech_prob": 0.007804348133504391}, {"id": 95, "seek": 52116, "start": 521.16, "end": 528.16, "text": " then by default, it will apply the login automatically. And group will apply no login so you can't", "tokens": [50364, 550, 538, 7576, 11, 309, 486, 3079, 264, 24276, 6772, 13, 400, 1594, 486, 3079, 572, 24276, 370, 291, 393, 380, 50714], "temperature": 0.0, "avg_logprob": -0.16883956061469185, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.0006255668704397976}, {"id": 96, "seek": 52116, "start": 533.4399999999999, "end": 538.76, "text": " get in. So there's really no reason. It depends on your environment and how you work. But", "tokens": [50978, 483, 294, 13, 407, 456, 311, 534, 572, 1778, 13, 467, 5946, 322, 428, 2823, 293, 577, 291, 589, 13, 583, 51244], "temperature": 0.0, "avg_logprob": -0.16883956061469185, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.0006255668704397976}, {"id": 97, "seek": 52116, "start": 538.76, "end": 543.76, "text": " there's really no reason you can't do a create role consistently across the board. Any of", "tokens": [51244, 456, 311, 534, 572, 1778, 291, 393, 380, 360, 257, 1884, 3090, 14961, 2108, 264, 3150, 13, 2639, 295, 51494], "temperature": 0.0, "avg_logprob": -0.16883956061469185, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.0006255668704397976}, {"id": 98, "seek": 52116, "start": 543.76, "end": 548.52, "text": " these will work. They'll get the exact same thing done. Just recognize the first two are", "tokens": [51494, 613, 486, 589, 13, 814, 603, 483, 264, 1900, 912, 551, 1096, 13, 1449, 5521, 264, 700, 732, 366, 51732], "temperature": 0.0, "avg_logprob": -0.16883956061469185, "compression_ratio": 1.6681818181818182, "no_speech_prob": 0.0006255668704397976}, {"id": 99, "seek": 54852, "start": 548.52, "end": 554.56, "text": " not running create role under the covers. And so I keep talking about these attributes.", "tokens": [50364, 406, 2614, 1884, 3090, 833, 264, 10538, 13, 400, 370, 286, 1066, 1417, 466, 613, 17212, 13, 50666], "temperature": 0.0, "avg_logprob": -0.15652645656040737, "compression_ratio": 1.7003891050583657, "no_speech_prob": 0.0057179732248187065}, {"id": 100, "seek": 54852, "start": 554.56, "end": 560.0799999999999, "text": " So now we understand a little bit what roles are. You can apply attributes to the roles.", "tokens": [50666, 407, 586, 321, 1223, 257, 707, 857, 437, 9604, 366, 13, 509, 393, 3079, 17212, 281, 264, 9604, 13, 50942], "temperature": 0.0, "avg_logprob": -0.15652645656040737, "compression_ratio": 1.7003891050583657, "no_speech_prob": 0.0057179732248187065}, {"id": 101, "seek": 54852, "start": 560.0799999999999, "end": 564.8, "text": " So they are predefined settings that, again, are at the cluster level. There's nothing", "tokens": [50942, 407, 436, 366, 659, 37716, 6257, 300, 11, 797, 11, 366, 412, 264, 13630, 1496, 13, 821, 311, 1825, 51178], "temperature": 0.0, "avg_logprob": -0.15652645656040737, "compression_ratio": 1.7003891050583657, "no_speech_prob": 0.0057179732248187065}, {"id": 102, "seek": 54852, "start": 564.8, "end": 571.16, "text": " to do with the databases yet. And they map to this catalog table called PG roles. So", "tokens": [51178, 281, 360, 365, 264, 22380, 1939, 13, 400, 436, 4471, 281, 341, 19746, 3199, 1219, 40975, 9604, 13, 407, 51496], "temperature": 0.0, "avg_logprob": -0.15652645656040737, "compression_ratio": 1.7003891050583657, "no_speech_prob": 0.0057179732248187065}, {"id": 103, "seek": 54852, "start": 571.16, "end": 575.36, "text": " these are the attributes. I say Postgres 15. I think these have been the same attributes", "tokens": [51496, 613, 366, 264, 17212, 13, 286, 584, 10223, 45189, 2119, 13, 286, 519, 613, 362, 668, 264, 912, 17212, 51706], "temperature": 0.0, "avg_logprob": -0.15652645656040737, "compression_ratio": 1.7003891050583657, "no_speech_prob": 0.0057179732248187065}, {"id": 104, "seek": 57536, "start": 575.4, "end": 581.76, "text": " since Postgres 9.6. One might have changed. I don't remember to be honest with you. The", "tokens": [50366, 1670, 10223, 45189, 1722, 13, 21, 13, 1485, 1062, 362, 3105, 13, 286, 500, 380, 1604, 281, 312, 3245, 365, 291, 13, 440, 50684], "temperature": 0.0, "avg_logprob": -0.16837659612432257, "compression_ratio": 1.6926070038910506, "no_speech_prob": 0.037192173302173615}, {"id": 105, "seek": 57536, "start": 581.76, "end": 585.88, "text": " ones that we, I'm going to talk about just briefly through the rest of this. What most", "tokens": [50684, 2306, 300, 321, 11, 286, 478, 516, 281, 751, 466, 445, 10515, 807, 264, 1472, 295, 341, 13, 708, 881, 50890], "temperature": 0.0, "avg_logprob": -0.16837659612432257, "compression_ratio": 1.6926070038910506, "no_speech_prob": 0.037192173302173615}, {"id": 106, "seek": 57536, "start": 585.88, "end": 590.04, "text": " of you are probably concerned with as you are administering databases are the ones that", "tokens": [50890, 295, 291, 366, 1391, 5922, 365, 382, 291, 366, 22096, 278, 22380, 366, 264, 2306, 300, 51098], "temperature": 0.0, "avg_logprob": -0.16837659612432257, "compression_ratio": 1.6926070038910506, "no_speech_prob": 0.037192173302173615}, {"id": 107, "seek": 57536, "start": 590.04, "end": 594.84, "text": " are underlined. Can you login or not? Is this role a super user or not? Talk about that", "tokens": [51098, 366, 833, 13564, 13, 1664, 291, 24276, 420, 406, 30, 1119, 341, 3090, 257, 1687, 4195, 420, 406, 30, 8780, 466, 300, 51338], "temperature": 0.0, "avg_logprob": -0.16837659612432257, "compression_ratio": 1.6926070038910506, "no_speech_prob": 0.037192173302173615}, {"id": 108, "seek": 57536, "start": 594.84, "end": 600.48, "text": " in a minute. Can they create other roles? Can they create databases in this cluster?", "tokens": [51338, 294, 257, 3456, 13, 1664, 436, 1884, 661, 9604, 30, 1664, 436, 1884, 22380, 294, 341, 13630, 30, 51620], "temperature": 0.0, "avg_logprob": -0.16837659612432257, "compression_ratio": 1.6926070038910506, "no_speech_prob": 0.037192173302173615}, {"id": 109, "seek": 60048, "start": 600.6, "end": 606.8000000000001, "text": " Is it password based authentication? And then can they inherit privileges from other roles?", "tokens": [50370, 1119, 309, 11524, 2361, 26643, 30, 400, 550, 393, 436, 21389, 32588, 490, 661, 9604, 30, 50680], "temperature": 0.0, "avg_logprob": -0.182189758007343, "compression_ratio": 1.736220472440945, "no_speech_prob": 0.20371128618717194}, {"id": 110, "seek": 60048, "start": 606.8000000000001, "end": 611.04, "text": " The other three that are listed there, again, a little bit complex in connection limit,", "tokens": [50680, 440, 661, 1045, 300, 366, 10052, 456, 11, 797, 11, 257, 707, 857, 3997, 294, 4984, 4948, 11, 50892], "temperature": 0.0, "avg_logprob": -0.182189758007343, "compression_ratio": 1.736220472440945, "no_speech_prob": 0.20371128618717194}, {"id": 111, "seek": 60048, "start": 611.04, "end": 616.48, "text": " if you really want to set it, you can. Just recognize if you don't set those other couple", "tokens": [50892, 498, 291, 534, 528, 281, 992, 309, 11, 291, 393, 13, 1449, 5521, 498, 291, 500, 380, 992, 729, 661, 1916, 51164], "temperature": 0.0, "avg_logprob": -0.182189758007343, "compression_ratio": 1.736220472440945, "no_speech_prob": 0.20371128618717194}, {"id": 112, "seek": 60048, "start": 616.48, "end": 621.84, "text": " strings, the connection or the attributes, the strings or inherit. By default, roles", "tokens": [51164, 13985, 11, 264, 4984, 420, 264, 17212, 11, 264, 13985, 420, 21389, 13, 3146, 7576, 11, 9604, 51432], "temperature": 0.0, "avg_logprob": -0.182189758007343, "compression_ratio": 1.736220472440945, "no_speech_prob": 0.20371128618717194}, {"id": 113, "seek": 60048, "start": 621.84, "end": 626.76, "text": " will be able to inherit from other roles. We're going to talk about that a little bit.", "tokens": [51432, 486, 312, 1075, 281, 21389, 490, 661, 9604, 13, 492, 434, 516, 281, 751, 466, 300, 257, 707, 857, 13, 51678], "temperature": 0.0, "avg_logprob": -0.182189758007343, "compression_ratio": 1.736220472440945, "no_speech_prob": 0.20371128618717194}, {"id": 114, "seek": 62676, "start": 627.52, "end": 631.96, "text": " They have unlimited connections. If there are available connections, I can connect many", "tokens": [50402, 814, 362, 21950, 9271, 13, 759, 456, 366, 2435, 9271, 11, 286, 393, 1745, 867, 50624], "temperature": 0.0, "avg_logprob": -0.18648803801763625, "compression_ratio": 1.5688073394495412, "no_speech_prob": 0.012022578157484531}, {"id": 115, "seek": 62676, "start": 631.96, "end": 637.52, "text": " times as that user from that method and so forth. Any questions on roles?", "tokens": [50624, 1413, 382, 300, 4195, 490, 300, 3170, 293, 370, 5220, 13, 2639, 1651, 322, 9604, 30, 50902], "temperature": 0.0, "avg_logprob": -0.18648803801763625, "compression_ratio": 1.5688073394495412, "no_speech_prob": 0.012022578157484531}, {"id": 116, "seek": 62676, "start": 642.52, "end": 647.72, "text": " One thing that I often forget to talk about, there is a way, again, depending on what you're", "tokens": [51152, 1485, 551, 300, 286, 2049, 2870, 281, 751, 466, 11, 456, 307, 257, 636, 11, 797, 11, 5413, 322, 437, 291, 434, 51412], "temperature": 0.0, "avg_logprob": -0.18648803801763625, "compression_ratio": 1.5688073394495412, "no_speech_prob": 0.012022578157484531}, {"id": 117, "seek": 62676, "start": 647.72, "end": 654.8, "text": " doing and how you are administering Postgres, you can actually, for a role, set many of", "tokens": [51412, 884, 293, 577, 291, 366, 22096, 278, 10223, 45189, 11, 291, 393, 767, 11, 337, 257, 3090, 11, 992, 867, 295, 51766], "temperature": 0.0, "avg_logprob": -0.18648803801763625, "compression_ratio": 1.5688073394495412, "no_speech_prob": 0.012022578157484531}, {"id": 118, "seek": 65480, "start": 654.8399999999999, "end": 659.12, "text": " the settings that you could do within Postgres. If you go into running Postgres instance and", "tokens": [50366, 264, 6257, 300, 291, 727, 360, 1951, 10223, 45189, 13, 759, 291, 352, 666, 2614, 10223, 45189, 5197, 293, 50580], "temperature": 0.0, "avg_logprob": -0.1966760246841996, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.012547090649604797}, {"id": 119, "seek": 65480, "start": 659.12, "end": 667.28, "text": " you can do something like set search path, set jit, you can actually alter a user and", "tokens": [50580, 291, 393, 360, 746, 411, 992, 3164, 3100, 11, 992, 361, 270, 11, 291, 393, 767, 11337, 257, 4195, 293, 50988], "temperature": 0.0, "avg_logprob": -0.1966760246841996, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.012547090649604797}, {"id": 120, "seek": 65480, "start": 667.28, "end": 673.1999999999999, "text": " set that property so that every time they connect and has to be connection, that property", "tokens": [50988, 992, 300, 4707, 370, 300, 633, 565, 436, 1745, 293, 575, 281, 312, 4984, 11, 300, 4707, 51284], "temperature": 0.0, "avg_logprob": -0.1966760246841996, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.012547090649604797}, {"id": 121, "seek": 65480, "start": 673.1999999999999, "end": 677.76, "text": " will get set for that session. That can be really helpful. Sometimes you get lost in", "tokens": [51284, 486, 483, 992, 337, 300, 5481, 13, 663, 393, 312, 534, 4961, 13, 4803, 291, 483, 2731, 294, 51512], "temperature": 0.0, "avg_logprob": -0.1966760246841996, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.012547090649604797}, {"id": 122, "seek": 65480, "start": 677.76, "end": 684.1999999999999, "text": " documentation and it might be useful for what you do. I just chose jit. Here's an example.", "tokens": [51512, 14333, 293, 309, 1062, 312, 4420, 337, 437, 291, 360, 13, 286, 445, 5111, 361, 270, 13, 1692, 311, 364, 1365, 13, 51834], "temperature": 0.0, "avg_logprob": -0.1966760246841996, "compression_ratio": 1.7209302325581395, "no_speech_prob": 0.012547090649604797}, {"id": 123, "seek": 68420, "start": 684.2800000000001, "end": 689.0, "text": " Jit can be really good and it can be really troublesome when you have complex queries", "tokens": [50368, 508, 270, 393, 312, 534, 665, 293, 309, 393, 312, 534, 46838, 562, 291, 362, 3997, 24109, 50604], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 124, "seek": 68420, "start": 689.0, "end": 695.5200000000001, "text": " that are lots of data. Maybe the jit actually is not as helpful. Maybe you have a report", "tokens": [50604, 300, 366, 3195, 295, 1412, 13, 2704, 264, 361, 270, 767, 307, 406, 382, 4961, 13, 2704, 291, 362, 257, 2275, 50930], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 125, "seek": 68420, "start": 695.5200000000001, "end": 699.72, "text": " user in your database that's often running really complex reports and you just don't", "tokens": [50930, 4195, 294, 428, 8149, 300, 311, 2049, 2614, 534, 3997, 7122, 293, 291, 445, 500, 380, 51140], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 126, "seek": 68420, "start": 699.72, "end": 703.24, "text": " realize that maybe jit's one of the reasons that it's not being as efficient as it could", "tokens": [51140, 4325, 300, 1310, 361, 270, 311, 472, 295, 264, 4112, 300, 309, 311, 406, 885, 382, 7148, 382, 309, 727, 51316], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 127, "seek": 68420, "start": 703.24, "end": 708.0400000000001, "text": " be. Maybe with that user, you would turn off jit. You don't have to think about it anymore.", "tokens": [51316, 312, 13, 2704, 365, 300, 4195, 11, 291, 576, 1261, 766, 361, 270, 13, 509, 500, 380, 362, 281, 519, 466, 309, 3602, 13, 51556], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 128, "seek": 68420, "start": 708.0400000000001, "end": 713.12, "text": " Every time they connect, jit would just be turned off for that session.", "tokens": [51556, 2048, 565, 436, 1745, 11, 361, 270, 576, 445, 312, 3574, 766, 337, 300, 5481, 13, 51810], "temperature": 0.0, "avg_logprob": -0.16838674247264862, "compression_ratio": 1.8156028368794326, "no_speech_prob": 0.003757703583687544}, {"id": 129, "seek": 71312, "start": 713.16, "end": 722.16, "text": " How many of you have heard of the SuperUser? Most people have. If you've worked with Postgres,", "tokens": [50366, 1012, 867, 295, 291, 362, 2198, 295, 264, 4548, 52, 12484, 30, 4534, 561, 362, 13, 759, 291, 600, 2732, 365, 10223, 45189, 11, 50816], "temperature": 0.0, "avg_logprob": -0.19405288281648056, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.07136135548353195}, {"id": 130, "seek": 71312, "start": 722.16, "end": 728.92, "text": " you've been warned about this thing called the SuperUser. Most people, if you're learning,", "tokens": [50816, 291, 600, 668, 21284, 466, 341, 551, 1219, 264, 4548, 52, 12484, 13, 4534, 561, 11, 498, 291, 434, 2539, 11, 51154], "temperature": 0.0, "avg_logprob": -0.19405288281648056, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.07136135548353195}, {"id": 131, "seek": 71312, "start": 728.92, "end": 732.8, "text": " have logged in with the user Postgres and they can do whatever they want and they never", "tokens": [51154, 362, 27231, 294, 365, 264, 4195, 10223, 45189, 293, 436, 393, 360, 2035, 436, 528, 293, 436, 1128, 51348], "temperature": 0.0, "avg_logprob": -0.19405288281648056, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.07136135548353195}, {"id": 132, "seek": 71312, "start": 732.8, "end": 738.72, "text": " think about why they can do whatever they want and we move forward with life and we forget.", "tokens": [51348, 519, 466, 983, 436, 393, 360, 2035, 436, 528, 293, 321, 1286, 2128, 365, 993, 293, 321, 2870, 13, 51644], "temperature": 0.0, "avg_logprob": -0.19405288281648056, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.07136135548353195}, {"id": 133, "seek": 73872, "start": 738.76, "end": 744.24, "text": " You would think that someone who has access with SuperUser would kind of be like the superhero,", "tokens": [50366, 509, 576, 519, 300, 1580, 567, 575, 2105, 365, 4548, 52, 12484, 576, 733, 295, 312, 411, 264, 19428, 11, 50640], "temperature": 0.0, "avg_logprob": -0.17411097964724978, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.09923992305994034}, {"id": 134, "seek": 73872, "start": 744.24, "end": 748.36, "text": " the neighborhood friendly Superman. It's always looking out for the benefit of good of everybody", "tokens": [50640, 264, 7630, 9208, 22455, 13, 467, 311, 1009, 1237, 484, 337, 264, 5121, 295, 665, 295, 2201, 50846], "temperature": 0.0, "avg_logprob": -0.17411097964724978, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.09923992305994034}, {"id": 135, "seek": 73872, "start": 748.36, "end": 753.6800000000001, "text": " but the reality is SuperUser is a lot more like this. You can do anything, anywhere,", "tokens": [50846, 457, 264, 4103, 307, 4548, 52, 12484, 307, 257, 688, 544, 411, 341, 13, 509, 393, 360, 1340, 11, 4992, 11, 51112], "temperature": 0.0, "avg_logprob": -0.17411097964724978, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.09923992305994034}, {"id": 136, "seek": 73872, "start": 753.6800000000001, "end": 759.72, "text": " destroy whatever you want and no one can stop you. It means we have to be really careful", "tokens": [51112, 5293, 2035, 291, 528, 293, 572, 472, 393, 1590, 291, 13, 467, 1355, 321, 362, 281, 312, 534, 5026, 51414], "temperature": 0.0, "avg_logprob": -0.17411097964724978, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.09923992305994034}, {"id": 137, "seek": 73872, "start": 759.72, "end": 767.72, "text": " with SuperUser. Again, as Postgres has become more and more popular, the usage has increased,", "tokens": [51414, 365, 4548, 52, 12484, 13, 3764, 11, 382, 10223, 45189, 575, 1813, 544, 293, 544, 3743, 11, 264, 14924, 575, 6505, 11, 51814], "temperature": 0.0, "avg_logprob": -0.17411097964724978, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.09923992305994034}, {"id": 138, "seek": 76772, "start": 767.72, "end": 774.0, "text": " depending what SuperUser is needed for, which in many ways is often very little. Compared", "tokens": [50364, 5413, 437, 4548, 52, 12484, 307, 2978, 337, 11, 597, 294, 867, 2098, 307, 2049, 588, 707, 13, 30539, 50678], "temperature": 0.0, "avg_logprob": -0.13836761972178582, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.042414091527462006}, {"id": 139, "seek": 76772, "start": 774.0, "end": 778.12, "text": " to quite honestly some of the trouble you can get into with it, it's really valuable", "tokens": [50678, 281, 1596, 6095, 512, 295, 264, 5253, 291, 393, 483, 666, 365, 309, 11, 309, 311, 534, 8263, 50884], "temperature": 0.0, "avg_logprob": -0.13836761972178582, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.042414091527462006}, {"id": 140, "seek": 76772, "start": 778.12, "end": 784.8000000000001, "text": " to know what you can do and ways to get around it. You get one SuperUser created when the", "tokens": [50884, 281, 458, 437, 291, 393, 360, 293, 2098, 281, 483, 926, 309, 13, 509, 483, 472, 4548, 52, 12484, 2942, 562, 264, 51218], "temperature": 0.0, "avg_logprob": -0.13836761972178582, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.042414091527462006}, {"id": 141, "seek": 76772, "start": 784.8000000000001, "end": 791.4, "text": " cluster is initiated. When you say initDB, you get a user. That user has to be a SuperUser", "tokens": [51218, 13630, 307, 28578, 13, 1133, 291, 584, 3157, 27735, 11, 291, 483, 257, 4195, 13, 663, 4195, 575, 281, 312, 257, 4548, 52, 12484, 51548], "temperature": 0.0, "avg_logprob": -0.13836761972178582, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.042414091527462006}, {"id": 142, "seek": 76772, "start": 791.4, "end": 797.0400000000001, "text": " because things have to be done. Roles are going to have to be created. The process is", "tokens": [51548, 570, 721, 362, 281, 312, 1096, 13, 497, 7456, 366, 516, 281, 362, 281, 312, 2942, 13, 440, 1399, 307, 51830], "temperature": 0.0, "avg_logprob": -0.13836761972178582, "compression_ratio": 1.683206106870229, "no_speech_prob": 0.042414091527462006}, {"id": 143, "seek": 79704, "start": 797.0799999999999, "end": 802.76, "text": " running as that user. But it doesn't mean that you actually have to use that user moving", "tokens": [50366, 2614, 382, 300, 4195, 13, 583, 309, 1177, 380, 914, 300, 291, 767, 362, 281, 764, 300, 4195, 2684, 50650], "temperature": 0.0, "avg_logprob": -0.17435681819915771, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.03397509828209877}, {"id": 144, "seek": 79704, "start": 802.76, "end": 807.56, "text": " forward. There's a lot of recommendations where you actually can change that user Postgres", "tokens": [50650, 2128, 13, 821, 311, 257, 688, 295, 10434, 689, 291, 767, 393, 1319, 300, 4195, 10223, 45189, 50890], "temperature": 0.0, "avg_logprob": -0.17435681819915771, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.03397509828209877}, {"id": 145, "seek": 79704, "start": 807.56, "end": 814.28, "text": " to no login. You can't log in now. You can log in as a role that could set log in if", "tokens": [50890, 281, 572, 24276, 13, 509, 393, 380, 3565, 294, 586, 13, 509, 393, 3565, 294, 382, 257, 3090, 300, 727, 992, 3565, 294, 498, 51226], "temperature": 0.0, "avg_logprob": -0.17435681819915771, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.03397509828209877}, {"id": 146, "seek": 79704, "start": 814.28, "end": 818.9599999999999, "text": " you really need to for some reason. There's a lot of ways that it's necessary for some", "tokens": [51226, 291, 534, 643, 281, 337, 512, 1778, 13, 821, 311, 257, 688, 295, 2098, 300, 309, 311, 4818, 337, 512, 51460], "temperature": 0.0, "avg_logprob": -0.17435681819915771, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.03397509828209877}, {"id": 147, "seek": 79704, "start": 818.9599999999999, "end": 823.92, "text": " actions that we're going to do, but it's just really powerful. Typically named Postgres.", "tokens": [51460, 5909, 300, 321, 434, 516, 281, 360, 11, 457, 309, 311, 445, 534, 4005, 13, 23129, 4926, 10223, 45189, 13, 51708], "temperature": 0.0, "avg_logprob": -0.17435681819915771, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.03397509828209877}, {"id": 148, "seek": 82392, "start": 824.0, "end": 832.24, "text": " Is that because when we run initDB, the user, the process that is running Postgres to init", "tokens": [50368, 1119, 300, 570, 562, 321, 1190, 3157, 27735, 11, 264, 4195, 11, 264, 1399, 300, 307, 2614, 10223, 45189, 281, 3157, 50780], "temperature": 0.0, "avg_logprob": -0.23949477137351521, "compression_ratio": 1.639269406392694, "no_speech_prob": 0.002391780959442258}, {"id": 149, "seek": 82392, "start": 832.24, "end": 839.3199999999999, "text": " that DB will be the name of the SuperUser that's created. In most systems, when you install", "tokens": [50780, 300, 26754, 486, 312, 264, 1315, 295, 264, 4548, 52, 12484, 300, 311, 2942, 13, 682, 881, 3652, 11, 562, 291, 3625, 51134], "temperature": 0.0, "avg_logprob": -0.23949477137351521, "compression_ratio": 1.639269406392694, "no_speech_prob": 0.002391780959442258}, {"id": 150, "seek": 82392, "start": 839.3199999999999, "end": 845.4399999999999, "text": " from an RPM package or something like that, it will be the, the rim keeps all of our RPM", "tokens": [51134, 490, 364, 37389, 7372, 420, 746, 411, 300, 11, 309, 486, 312, 264, 11, 264, 15982, 5965, 439, 295, 527, 37389, 51440], "temperature": 0.0, "avg_logprob": -0.23949477137351521, "compression_ratio": 1.639269406392694, "no_speech_prob": 0.002391780959442258}, {"id": 151, "seek": 82392, "start": 845.4399999999999, "end": 852.8, "text": " packages up. Give me a hand. It's Postgres user. In Linux, it's created. Therefore, the", "tokens": [51440, 17401, 493, 13, 5303, 385, 257, 1011, 13, 467, 311, 10223, 45189, 4195, 13, 682, 18734, 11, 309, 311, 2942, 13, 7504, 11, 264, 51808], "temperature": 0.0, "avg_logprob": -0.23949477137351521, "compression_ratio": 1.639269406392694, "no_speech_prob": 0.002391780959442258}, {"id": 152, "seek": 85280, "start": 852.88, "end": 858.56, "text": " SuperUser is called Postgres. You can actually tell initDB to use a different role if you", "tokens": [50368, 4548, 52, 12484, 307, 1219, 10223, 45189, 13, 509, 393, 767, 980, 3157, 27735, 281, 764, 257, 819, 3090, 498, 291, 50652], "temperature": 0.0, "avg_logprob": -0.17264092707001003, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.006892663426697254}, {"id": 153, "seek": 85280, "start": 858.56, "end": 862.68, "text": " want. Create a different role and use it. But generally it's Postgres unless you have", "tokens": [50652, 528, 13, 20248, 257, 819, 3090, 293, 764, 309, 13, 583, 5101, 309, 311, 10223, 45189, 5969, 291, 362, 50858], "temperature": 0.0, "avg_logprob": -0.17264092707001003, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.006892663426697254}, {"id": 154, "seek": 85280, "start": 862.68, "end": 869.3599999999999, "text": " a different environment. And it bypasses every security check everywhere in Postgres except", "tokens": [50858, 257, 819, 2823, 13, 400, 309, 24996, 279, 633, 3825, 1520, 5315, 294, 10223, 45189, 3993, 51192], "temperature": 0.0, "avg_logprob": -0.17264092707001003, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.006892663426697254}, {"id": 155, "seek": 85280, "start": 869.3599999999999, "end": 877.12, "text": " for login. So as long as that host is allowed to log in and you're a SuperUser from that", "tokens": [51192, 337, 24276, 13, 407, 382, 938, 382, 300, 3975, 307, 4350, 281, 3565, 294, 293, 291, 434, 257, 4548, 52, 12484, 490, 300, 51580], "temperature": 0.0, "avg_logprob": -0.17264092707001003, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.006892663426697254}, {"id": 156, "seek": 85280, "start": 877.12, "end": 882.4399999999999, "text": " point forward, you can do whatever you want. So it's kind of like root on Linux. So most", "tokens": [51580, 935, 2128, 11, 291, 393, 360, 2035, 291, 528, 13, 407, 309, 311, 733, 295, 411, 5593, 322, 18734, 13, 407, 881, 51846], "temperature": 0.0, "avg_logprob": -0.17264092707001003, "compression_ratio": 1.6920152091254752, "no_speech_prob": 0.006892663426697254}, {"id": 157, "seek": 88244, "start": 882.48, "end": 888.36, "text": " cloud providers do not provide this to you. Now there are some, if you are in your sandbox", "tokens": [50366, 4588, 11330, 360, 406, 2893, 341, 281, 291, 13, 823, 456, 366, 512, 11, 498, 291, 366, 294, 428, 42115, 50660], "temperature": 0.0, "avg_logprob": -0.14107498915299124, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.03729308769106865}, {"id": 158, "seek": 88244, "start": 888.36, "end": 893.5600000000001, "text": " environment, like a private VM or something like that, you may get direct access and you", "tokens": [50660, 2823, 11, 411, 257, 4551, 18038, 420, 746, 411, 300, 11, 291, 815, 483, 2047, 2105, 293, 291, 50920], "temperature": 0.0, "avg_logprob": -0.14107498915299124, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.03729308769106865}, {"id": 159, "seek": 88244, "start": 893.5600000000001, "end": 899.4000000000001, "text": " may get SuperUser. If you use AWS, Microsoft, Google, whatever your hosting provider might", "tokens": [50920, 815, 483, 4548, 52, 12484, 13, 759, 291, 764, 17650, 11, 8116, 11, 3329, 11, 2035, 428, 16058, 12398, 1062, 51212], "temperature": 0.0, "avg_logprob": -0.14107498915299124, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.03729308769106865}, {"id": 160, "seek": 88244, "start": 899.4000000000001, "end": 907.9000000000001, "text": " be, you do not get SuperUser. They give you something that is like SuperUser. We all,", "tokens": [51212, 312, 11, 291, 360, 406, 483, 4548, 52, 12484, 13, 814, 976, 291, 746, 300, 307, 411, 4548, 52, 12484, 13, 492, 439, 11, 51637], "temperature": 0.0, "avg_logprob": -0.14107498915299124, "compression_ratio": 1.6635514018691588, "no_speech_prob": 0.03729308769106865}, {"id": 161, "seek": 90790, "start": 907.9399999999999, "end": 913.8199999999999, "text": " we trust him. So it's just enough power, but not so much that you can destroy the world.", "tokens": [50366, 321, 3361, 796, 13, 407, 309, 311, 445, 1547, 1347, 11, 457, 406, 370, 709, 300, 291, 393, 5293, 264, 1002, 13, 50660], "temperature": 0.0, "avg_logprob": -0.17586753242894224, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.07340846955776215}, {"id": 162, "seek": 90790, "start": 913.8199999999999, "end": 919.1, "text": " And so the recommendations, you'll find this in docs. I actually forgot what page and I", "tokens": [50660, 400, 370, 264, 10434, 11, 291, 603, 915, 341, 294, 45623, 13, 286, 767, 5298, 437, 3028, 293, 286, 50924], "temperature": 0.0, "avg_logprob": -0.17586753242894224, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.07340846955776215}, {"id": 163, "seek": 90790, "start": 919.1, "end": 922.02, "text": " tried to find it quickly, but there is this recommendation in docs and then you'll see", "tokens": [50924, 3031, 281, 915, 309, 2661, 11, 457, 456, 307, 341, 11879, 294, 45623, 293, 550, 291, 603, 536, 51070], "temperature": 0.0, "avg_logprob": -0.17586753242894224, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.07340846955776215}, {"id": 164, "seek": 90790, "start": 922.02, "end": 927.86, "text": " this elsewhere. If you are going to manage, and you're a DBA of a Postgres cluster, it's", "tokens": [51070, 341, 14517, 13, 759, 291, 366, 516, 281, 3067, 11, 293, 291, 434, 257, 413, 9295, 295, 257, 10223, 45189, 13630, 11, 309, 311, 51362], "temperature": 0.0, "avg_logprob": -0.17586753242894224, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.07340846955776215}, {"id": 165, "seek": 90790, "start": 927.86, "end": 934.3, "text": " usually best practice to create, just as you would in Linux, create a user that can do", "tokens": [51362, 2673, 1151, 3124, 281, 1884, 11, 445, 382, 291, 576, 294, 18734, 11, 1884, 257, 4195, 300, 393, 360, 51684], "temperature": 0.0, "avg_logprob": -0.17586753242894224, "compression_ratio": 1.6566037735849057, "no_speech_prob": 0.07340846955776215}, {"id": 166, "seek": 93430, "start": 934.3399999999999, "end": 938.9799999999999, "text": " what you need us to do, but is not root. And so in this case, we say something SuperUser", "tokens": [50366, 437, 291, 643, 505, 281, 360, 11, 457, 307, 406, 5593, 13, 400, 370, 294, 341, 1389, 11, 321, 584, 746, 4548, 52, 12484, 50598], "temperature": 0.0, "avg_logprob": -0.14574569766804324, "compression_ratio": 1.7865612648221343, "no_speech_prob": 0.021248672157526016}, {"id": 167, "seek": 93430, "start": 938.9799999999999, "end": 943.6999999999999, "text": " like, at a bare minimum, they probably should be able to create other roles that will allow", "tokens": [50598, 411, 11, 412, 257, 6949, 7285, 11, 436, 1391, 820, 312, 1075, 281, 1884, 661, 9604, 300, 486, 2089, 50834], "temperature": 0.0, "avg_logprob": -0.14574569766804324, "compression_ratio": 1.7865612648221343, "no_speech_prob": 0.021248672157526016}, {"id": 168, "seek": 93430, "start": 943.6999999999999, "end": 947.9799999999999, "text": " them to create roles, alter roles and so forth. And they probably need to be able to create", "tokens": [50834, 552, 281, 1884, 9604, 11, 11337, 9604, 293, 370, 5220, 13, 400, 436, 1391, 643, 281, 312, 1075, 281, 1884, 51048], "temperature": 0.0, "avg_logprob": -0.14574569766804324, "compression_ratio": 1.7865612648221343, "no_speech_prob": 0.021248672157526016}, {"id": 169, "seek": 93430, "start": 947.9799999999999, "end": 954.2199999999999, "text": " databases. But if they're not SuperUser, they can't just go to any database, delete, remove,", "tokens": [51048, 22380, 13, 583, 498, 436, 434, 406, 4548, 52, 12484, 11, 436, 393, 380, 445, 352, 281, 604, 8149, 11, 12097, 11, 4159, 11, 51360], "temperature": 0.0, "avg_logprob": -0.14574569766804324, "compression_ratio": 1.7865612648221343, "no_speech_prob": 0.021248672157526016}, {"id": 170, "seek": 93430, "start": 954.2199999999999, "end": 959.18, "text": " modify anything they want. And that's what you're trying to prevent. So it allows user", "tokens": [51360, 16927, 1340, 436, 528, 13, 400, 300, 311, 437, 291, 434, 1382, 281, 4871, 13, 407, 309, 4045, 4195, 51608], "temperature": 0.0, "avg_logprob": -0.14574569766804324, "compression_ratio": 1.7865612648221343, "no_speech_prob": 0.021248672157526016}, {"id": 171, "seek": 95918, "start": 959.18, "end": 965.66, "text": " management, but a little bit safer. Now there are still some things that you may not be", "tokens": [50364, 4592, 11, 457, 257, 707, 857, 15856, 13, 823, 456, 366, 920, 512, 721, 300, 291, 815, 406, 312, 50688], "temperature": 0.0, "avg_logprob": -0.14702638271635612, "compression_ratio": 1.7975708502024292, "no_speech_prob": 0.13258878886699677}, {"id": 172, "seek": 95918, "start": 965.66, "end": 970.8599999999999, "text": " able to do if you are not a SuperUser. There are some extensions that require being a SuperUser", "tokens": [50688, 1075, 281, 360, 498, 291, 366, 406, 257, 4548, 52, 12484, 13, 821, 366, 512, 25129, 300, 3651, 885, 257, 4548, 52, 12484, 50948], "temperature": 0.0, "avg_logprob": -0.14702638271635612, "compression_ratio": 1.7975708502024292, "no_speech_prob": 0.13258878886699677}, {"id": 173, "seek": 95918, "start": 970.8599999999999, "end": 978.3, "text": " to install. Now the team consistently has worked, we'll talk about the very end, about", "tokens": [50948, 281, 3625, 13, 823, 264, 1469, 14961, 575, 2732, 11, 321, 603, 751, 466, 264, 588, 917, 11, 466, 51320], "temperature": 0.0, "avg_logprob": -0.14702638271635612, "compression_ratio": 1.7975708502024292, "no_speech_prob": 0.13258878886699677}, {"id": 174, "seek": 95918, "start": 978.3, "end": 983.3399999999999, "text": " providing new roles that can allow us to do some of these things that used to require", "tokens": [51320, 6530, 777, 9604, 300, 393, 2089, 505, 281, 360, 512, 295, 613, 721, 300, 1143, 281, 3651, 51572], "temperature": 0.0, "avg_logprob": -0.14702638271635612, "compression_ratio": 1.7975708502024292, "no_speech_prob": 0.13258878886699677}, {"id": 175, "seek": 95918, "start": 983.3399999999999, "end": 988.18, "text": " SuperUser. So I know that that's one that's been talked about, for instance. It used to", "tokens": [51572, 4548, 52, 12484, 13, 407, 286, 458, 300, 300, 311, 472, 300, 311, 668, 2825, 466, 11, 337, 5197, 13, 467, 1143, 281, 51814], "temperature": 0.0, "avg_logprob": -0.14702638271635612, "compression_ratio": 1.7975708502024292, "no_speech_prob": 0.13258878886699677}, {"id": 176, "seek": 98818, "start": 988.18, "end": 993.02, "text": " be checkpoint. You could only run a checkpoint if you had the privilege or you had SuperUser.", "tokens": [50364, 312, 42269, 13, 509, 727, 787, 1190, 257, 42269, 498, 291, 632, 264, 12122, 420, 291, 632, 4548, 52, 12484, 13, 50606], "temperature": 0.0, "avg_logprob": -0.17824275319169208, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.1223316565155983}, {"id": 177, "seek": 98818, "start": 993.02, "end": 998.66, "text": " And so now there's a privilege with 16 that allows you to run a checkpoint, even if you're", "tokens": [50606, 400, 370, 586, 456, 311, 257, 12122, 365, 3165, 300, 4045, 291, 281, 1190, 257, 42269, 11, 754, 498, 291, 434, 50888], "temperature": 0.0, "avg_logprob": -0.17824275319169208, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.1223316565155983}, {"id": 178, "seek": 98818, "start": 998.66, "end": 1006.8199999999999, "text": " not a SuperUser. So we have roles, both regular roles, super-duper roles, and the kind of roles", "tokens": [50888, 406, 257, 4548, 52, 12484, 13, 407, 321, 362, 9604, 11, 1293, 3890, 9604, 11, 1687, 12, 769, 610, 9604, 11, 293, 264, 733, 295, 9604, 51296], "temperature": 0.0, "avg_logprob": -0.17824275319169208, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.1223316565155983}, {"id": 179, "seek": 98818, "start": 1006.8199999999999, "end": 1011.62, "text": " we want for managing our database. And then for those roles, we need to apply privileges.", "tokens": [51296, 321, 528, 337, 11642, 527, 8149, 13, 400, 550, 337, 729, 9604, 11, 321, 643, 281, 3079, 32588, 13, 51536], "temperature": 0.0, "avg_logprob": -0.17824275319169208, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.1223316565155983}, {"id": 180, "seek": 98818, "start": 1011.62, "end": 1015.66, "text": " And at the heart of it, we've just, by creating roles, all we've done is been able to log", "tokens": [51536, 400, 412, 264, 1917, 295, 309, 11, 321, 600, 445, 11, 538, 4084, 9604, 11, 439, 321, 600, 1096, 307, 668, 1075, 281, 3565, 51738], "temperature": 0.0, "avg_logprob": -0.17824275319169208, "compression_ratio": 1.7898832684824904, "no_speech_prob": 0.1223316565155983}, {"id": 181, "seek": 101566, "start": 1015.66, "end": 1020.74, "text": " in. And so if we want to actually do something in the database, we have to understand privileges", "tokens": [50364, 294, 13, 400, 370, 498, 321, 528, 281, 767, 360, 746, 294, 264, 8149, 11, 321, 362, 281, 1223, 32588, 50618], "temperature": 0.0, "avg_logprob": -0.18226443204012785, "compression_ratio": 1.6838235294117647, "no_speech_prob": 0.11089656502008438}, {"id": 182, "seek": 101566, "start": 1020.74, "end": 1027.18, "text": " in Postgres. So obviously there are a set of access rights, to database schemas, objects.", "tokens": [50618, 294, 10223, 45189, 13, 407, 2745, 456, 366, 257, 992, 295, 2105, 4601, 11, 281, 8149, 22627, 296, 11, 6565, 13, 50940], "temperature": 0.0, "avg_logprob": -0.18226443204012785, "compression_ratio": 1.6838235294117647, "no_speech_prob": 0.11089656502008438}, {"id": 183, "seek": 101566, "start": 1027.18, "end": 1033.58, "text": " Now when I say objects, I generally mean things like tables, views, functions, store procedures,", "tokens": [50940, 823, 562, 286, 584, 6565, 11, 286, 5101, 914, 721, 411, 8020, 11, 6809, 11, 6828, 11, 3531, 13846, 11, 51260], "temperature": 0.0, "avg_logprob": -0.18226443204012785, "compression_ratio": 1.6838235294117647, "no_speech_prob": 0.11089656502008438}, {"id": 184, "seek": 101566, "start": 1033.58, "end": 1038.42, "text": " things that have ownership of some sort. Not every single thing in a Postgres database", "tokens": [51260, 721, 300, 362, 15279, 295, 512, 1333, 13, 1726, 633, 2167, 551, 294, 257, 10223, 45189, 8149, 51502], "temperature": 0.0, "avg_logprob": -0.18226443204012785, "compression_ratio": 1.6838235294117647, "no_speech_prob": 0.11089656502008438}, {"id": 185, "seek": 101566, "start": 1038.42, "end": 1045.18, "text": " is actually owned by an owner, a role. Most things are. They can be granted, privileges", "tokens": [51502, 307, 767, 11684, 538, 364, 7289, 11, 257, 3090, 13, 4534, 721, 366, 13, 814, 393, 312, 12344, 11, 32588, 51840], "temperature": 0.0, "avg_logprob": -0.18226443204012785, "compression_ratio": 1.6838235294117647, "no_speech_prob": 0.11089656502008438}, {"id": 186, "seek": 104518, "start": 1045.22, "end": 1050.3400000000001, "text": " can be granted or revoked. You've probably been used to this either in Postgres or elsewhere.", "tokens": [50366, 393, 312, 12344, 420, 3698, 9511, 13, 509, 600, 1391, 668, 1143, 281, 341, 2139, 294, 10223, 45189, 420, 14517, 13, 50622], "temperature": 0.0, "avg_logprob": -0.16209284464518228, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.04201734438538551}, {"id": 187, "seek": 104518, "start": 1050.3400000000001, "end": 1055.6200000000001, "text": " And then the one thing I, it's, as we get to one or two things at the end, it's easy", "tokens": [50622, 400, 550, 264, 472, 551, 286, 11, 309, 311, 11, 382, 321, 483, 281, 472, 420, 732, 721, 412, 264, 917, 11, 309, 311, 1858, 50886], "temperature": 0.0, "avg_logprob": -0.16209284464518228, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.04201734438538551}, {"id": 188, "seek": 104518, "start": 1055.6200000000001, "end": 1062.42, "text": " to forget that any time you run a script, and it says, grant something to somebody,", "tokens": [50886, 281, 2870, 300, 604, 565, 291, 1190, 257, 5755, 11, 293, 309, 1619, 11, 6386, 746, 281, 2618, 11, 51226], "temperature": 0.0, "avg_logprob": -0.16209284464518228, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.04201734438538551}, {"id": 189, "seek": 104518, "start": 1062.42, "end": 1068.14, "text": " it only impacts things that exist right then. So a lot of people I've seen will start a", "tokens": [51226, 309, 787, 11606, 721, 300, 2514, 558, 550, 13, 407, 257, 688, 295, 561, 286, 600, 1612, 486, 722, 257, 51512], "temperature": 0.0, "avg_logprob": -0.16209284464518228, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.04201734438538551}, {"id": 190, "seek": 104518, "start": 1068.14, "end": 1074.8600000000001, "text": " database up, they'll do something like grant all, select all, to all tables on public to", "tokens": [51512, 8149, 493, 11, 436, 603, 360, 746, 411, 6386, 439, 11, 3048, 439, 11, 281, 439, 8020, 322, 1908, 281, 51848], "temperature": 0.0, "avg_logprob": -0.16209284464518228, "compression_ratio": 1.650375939849624, "no_speech_prob": 0.04201734438538551}, {"id": 191, "seek": 107486, "start": 1074.86, "end": 1078.3799999999999, "text": " whatever. And they think, great, I've solved my problem for the rest of time. And then", "tokens": [50364, 2035, 13, 400, 436, 519, 11, 869, 11, 286, 600, 13041, 452, 1154, 337, 264, 1472, 295, 565, 13, 400, 550, 50540], "temperature": 0.0, "avg_logprob": -0.1585801275152909, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.0018660940695554018}, {"id": 192, "seek": 107486, "start": 1078.3799999999999, "end": 1083.58, "text": " they create a new table, and no one can read from it. When you explicitly run a grant or", "tokens": [50540, 436, 1884, 257, 777, 3199, 11, 293, 572, 472, 393, 1401, 490, 309, 13, 1133, 291, 20803, 1190, 257, 6386, 420, 50800], "temperature": 0.0, "avg_logprob": -0.1585801275152909, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.0018660940695554018}, {"id": 193, "seek": 107486, "start": 1083.58, "end": 1089.82, "text": " revoke statement, it only impacts the things that exist right then. So just keep that in", "tokens": [50800, 3698, 2949, 5629, 11, 309, 787, 11606, 264, 721, 300, 2514, 558, 550, 13, 407, 445, 1066, 300, 294, 51112], "temperature": 0.0, "avg_logprob": -0.1585801275152909, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.0018660940695554018}, {"id": 194, "seek": 107486, "start": 1089.82, "end": 1096.82, "text": " mind. So here are the privileges, 15 and 16. I actually thought I went through and changed", "tokens": [51112, 1575, 13, 407, 510, 366, 264, 32588, 11, 2119, 293, 3165, 13, 286, 767, 1194, 286, 1437, 807, 293, 3105, 51462], "temperature": 0.0, "avg_logprob": -0.1585801275152909, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.0018660940695554018}, {"id": 195, "seek": 107486, "start": 1096.82, "end": 1103.34, "text": " all of those to 16, so I must have missed that. These are all the things that we can", "tokens": [51462, 439, 295, 729, 281, 3165, 11, 370, 286, 1633, 362, 6721, 300, 13, 1981, 366, 439, 264, 721, 300, 321, 393, 51788], "temperature": 0.0, "avg_logprob": -0.1585801275152909, "compression_ratio": 1.6176470588235294, "no_speech_prob": 0.0018660940695554018}, {"id": 196, "seek": 110334, "start": 1103.34, "end": 1111.02, "text": " set. Now the ones I have underlined, starting with Postgres 15, are the ones that are essentially", "tokens": [50364, 992, 13, 823, 264, 2306, 286, 362, 833, 13564, 11, 2891, 365, 10223, 45189, 2119, 11, 366, 264, 2306, 300, 366, 4476, 50748], "temperature": 0.0, "avg_logprob": -0.1576053027448983, "compression_ratio": 1.5690376569037656, "no_speech_prob": 0.24375328421592712}, {"id": 197, "seek": 110334, "start": 1111.02, "end": 1117.06, "text": " provided by default unless you modify anything. So every single user, again, super user side,", "tokens": [50748, 5649, 538, 7576, 5969, 291, 16927, 1340, 13, 407, 633, 2167, 4195, 11, 797, 11, 1687, 4195, 1252, 11, 51050], "temperature": 0.0, "avg_logprob": -0.1576053027448983, "compression_ratio": 1.5690376569037656, "no_speech_prob": 0.24375328421592712}, {"id": 198, "seek": 110334, "start": 1117.06, "end": 1125.1, "text": " and unless you've modified something, every role will get these four privileges on any", "tokens": [51050, 293, 5969, 291, 600, 15873, 746, 11, 633, 3090, 486, 483, 613, 1451, 32588, 322, 604, 51452], "temperature": 0.0, "avg_logprob": -0.1576053027448983, "compression_ratio": 1.5690376569037656, "no_speech_prob": 0.24375328421592712}, {"id": 199, "seek": 110334, "start": 1125.1, "end": 1132.6599999999999, "text": " database on the public schema. And the reason is there's this role called public. It's basically", "tokens": [51452, 8149, 322, 264, 1908, 34078, 13, 400, 264, 1778, 307, 456, 311, 341, 3090, 1219, 1908, 13, 467, 311, 1936, 51830], "temperature": 0.0, "avg_logprob": -0.1576053027448983, "compression_ratio": 1.5690376569037656, "no_speech_prob": 0.24375328421592712}, {"id": 200, "seek": 113266, "start": 1132.66, "end": 1138.5, "text": " hard coded in a Postgres. You can't remove it. You can't get rid of it. And every role", "tokens": [50364, 1152, 34874, 294, 257, 10223, 45189, 13, 509, 393, 380, 4159, 309, 13, 509, 393, 380, 483, 3973, 295, 309, 13, 400, 633, 3090, 50656], "temperature": 0.0, "avg_logprob": -0.1651535531748896, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.09894434362649918}, {"id": 201, "seek": 113266, "start": 1138.5, "end": 1144.5, "text": " gets is granted membership into public. And again, most roles inherit. And so when you", "tokens": [50656, 2170, 307, 12344, 16560, 666, 1908, 13, 400, 797, 11, 881, 9604, 21389, 13, 400, 370, 562, 291, 50956], "temperature": 0.0, "avg_logprob": -0.1651535531748896, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.09894434362649918}, {"id": 202, "seek": 113266, "start": 1144.5, "end": 1149.9, "text": " have that kind of role, you automatically get the connect privilege, right? So I've passed", "tokens": [50956, 362, 300, 733, 295, 3090, 11, 291, 6772, 483, 264, 1745, 12122, 11, 558, 30, 407, 286, 600, 4678, 51226], "temperature": 0.0, "avg_logprob": -0.1651535531748896, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.09894434362649918}, {"id": 203, "seek": 113266, "start": 1149.9, "end": 1155.26, "text": " HBA, I provided an actual password that works, but if I don't have the connect privilege,", "tokens": [51226, 389, 9295, 11, 286, 5649, 364, 3539, 11524, 300, 1985, 11, 457, 498, 286, 500, 380, 362, 264, 1745, 12122, 11, 51494], "temperature": 0.0, "avg_logprob": -0.1651535531748896, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.09894434362649918}, {"id": 204, "seek": 113266, "start": 1155.26, "end": 1160.98, "text": " I can't connect. So I can turn off connect to a database. I might have multiple databases,", "tokens": [51494, 286, 393, 380, 1745, 13, 407, 286, 393, 1261, 766, 1745, 281, 257, 8149, 13, 286, 1062, 362, 3866, 22380, 11, 51780], "temperature": 0.0, "avg_logprob": -0.1651535531748896, "compression_ratio": 1.7115384615384615, "no_speech_prob": 0.09894434362649918}, {"id": 205, "seek": 116098, "start": 1160.98, "end": 1166.18, "text": " but this user does not get to connect to that one. That's really the usage. Again, I can", "tokens": [50364, 457, 341, 4195, 775, 406, 483, 281, 1745, 281, 300, 472, 13, 663, 311, 534, 264, 14924, 13, 3764, 11, 286, 393, 50624], "temperature": 0.0, "avg_logprob": -0.14978812722598805, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.12223686277866364}, {"id": 206, "seek": 116098, "start": 1166.18, "end": 1170.74, "text": " connect, but if I can't use it, I can't do anything. You can actually connect to a Postgres", "tokens": [50624, 1745, 11, 457, 498, 286, 393, 380, 764, 309, 11, 286, 393, 380, 360, 1340, 13, 509, 393, 767, 1745, 281, 257, 10223, 45189, 50852], "temperature": 0.0, "avg_logprob": -0.14978812722598805, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.12223686277866364}, {"id": 207, "seek": 116098, "start": 1170.74, "end": 1175.9, "text": " database, get a valid connection, you're connected, and then you want to do anything, select whatever", "tokens": [50852, 8149, 11, 483, 257, 7363, 4984, 11, 291, 434, 4582, 11, 293, 550, 291, 528, 281, 360, 1340, 11, 3048, 2035, 51110], "temperature": 0.0, "avg_logprob": -0.14978812722598805, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.12223686277866364}, {"id": 208, "seek": 116098, "start": 1175.9, "end": 1180.26, "text": " it might be, and you're just denied. And that's where usage comes in. Temporary tables and", "tokens": [51110, 309, 1062, 312, 11, 293, 291, 434, 445, 17774, 13, 400, 300, 311, 689, 14924, 1487, 294, 13, 8095, 2816, 822, 8020, 293, 51328], "temperature": 0.0, "avg_logprob": -0.14978812722598805, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.12223686277866364}, {"id": 209, "seek": 116098, "start": 1180.26, "end": 1185.6200000000001, "text": " then executing things like store procedures and so forth and functions. Now, if you're", "tokens": [51328, 550, 32368, 721, 411, 3531, 13846, 293, 370, 5220, 293, 6828, 13, 823, 11, 498, 291, 434, 51596], "temperature": 0.0, "avg_logprob": -0.14978812722598805, "compression_ratio": 1.7424242424242424, "no_speech_prob": 0.12223686277866364}, {"id": 210, "seek": 118562, "start": 1185.62, "end": 1191.9399999999998, "text": " using Postgres 14 or below on the public schema, you also have the create privilege through", "tokens": [50364, 1228, 10223, 45189, 3499, 420, 2507, 322, 264, 1908, 34078, 11, 291, 611, 362, 264, 1884, 12122, 807, 50680], "temperature": 0.0, "avg_logprob": -0.18473805790453884, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.1324833780527115}, {"id": 211, "seek": 118562, "start": 1191.9399999999998, "end": 1198.9399999999998, "text": " public on the public schema. And so that we realized gets to be some of a security hole.", "tokens": [50680, 1908, 322, 264, 1908, 34078, 13, 400, 370, 300, 321, 5334, 2170, 281, 312, 512, 295, 257, 3825, 5458, 13, 51030], "temperature": 0.0, "avg_logprob": -0.18473805790453884, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.1324833780527115}, {"id": 212, "seek": 118562, "start": 1198.9399999999998, "end": 1204.1799999999998, "text": " All right. And the reason is, in this case, I don't want to get into too much, but if", "tokens": [51030, 1057, 558, 13, 400, 264, 1778, 307, 11, 294, 341, 1389, 11, 286, 500, 380, 528, 281, 483, 666, 886, 709, 11, 457, 498, 51292], "temperature": 0.0, "avg_logprob": -0.18473805790453884, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.1324833780527115}, {"id": 213, "seek": 118562, "start": 1204.1799999999998, "end": 1208.86, "text": " you create something on any schema, so on the public role, that's where most people were", "tokens": [51292, 291, 1884, 746, 322, 604, 34078, 11, 370, 322, 264, 1908, 3090, 11, 300, 311, 689, 881, 561, 645, 51526], "temperature": 0.0, "avg_logprob": -0.18473805790453884, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.1324833780527115}, {"id": 214, "seek": 118562, "start": 1208.86, "end": 1213.26, "text": " creating things. A lot of us still don't use schemas in our applications. We just create", "tokens": [51526, 4084, 721, 13, 316, 688, 295, 505, 920, 500, 380, 764, 22627, 296, 294, 527, 5821, 13, 492, 445, 1884, 51746], "temperature": 0.0, "avg_logprob": -0.18473805790453884, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.1324833780527115}, {"id": 215, "seek": 121326, "start": 1213.3, "end": 1218.78, "text": " tables by default. They go into the public schema. And so if somebody created a store", "tokens": [50366, 8020, 538, 7576, 13, 814, 352, 666, 264, 1908, 34078, 13, 400, 370, 498, 2618, 2942, 257, 3531, 50640], "temperature": 0.0, "avg_logprob": -0.2182305873125449, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.06546026468276978}, {"id": 216, "seek": 121326, "start": 1218.78, "end": 1225.78, "text": " procedure and they weren't super user, there are ways, actually not that difficult, if", "tokens": [50640, 10747, 293, 436, 4999, 380, 1687, 4195, 11, 456, 366, 2098, 11, 767, 406, 300, 2252, 11, 498, 50990], "temperature": 0.0, "avg_logprob": -0.2182305873125449, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.06546026468276978}, {"id": 217, "seek": 121326, "start": 1226.26, "end": 1232.78, "text": " you know what you're doing, to create a function, somehow get someone with elevated privileges", "tokens": [51014, 291, 458, 437, 291, 434, 884, 11, 281, 1884, 257, 2445, 11, 6063, 483, 1580, 365, 23457, 32588, 51340], "temperature": 0.0, "avg_logprob": -0.2182305873125449, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.06546026468276978}, {"id": 218, "seek": 121326, "start": 1232.78, "end": 1239.78, "text": " to run it and you can get super user. Another talk that I like to do. So we realized that.", "tokens": [51340, 281, 1190, 309, 293, 291, 393, 483, 1687, 4195, 13, 3996, 751, 300, 286, 411, 281, 360, 13, 407, 321, 5334, 300, 13, 51690], "temperature": 0.0, "avg_logprob": -0.2182305873125449, "compression_ratio": 1.5565217391304347, "no_speech_prob": 0.06546026468276978}, {"id": 219, "seek": 123978, "start": 1239.78, "end": 1244.54, "text": " So basically starting the 15 and above create is not provided through public to the public", "tokens": [50364, 407, 1936, 2891, 264, 2119, 293, 3673, 1884, 307, 406, 5649, 807, 1908, 281, 264, 1908, 50602], "temperature": 0.0, "avg_logprob": -0.1688821692215769, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.004315997939556837}, {"id": 220, "seek": 123978, "start": 1244.54, "end": 1250.54, "text": " schema. So you have to be explicitly granted. Every role has to be explicitly granted create.", "tokens": [50602, 34078, 13, 407, 291, 362, 281, 312, 20803, 12344, 13, 2048, 3090, 575, 281, 312, 20803, 12344, 1884, 13, 50902], "temperature": 0.0, "avg_logprob": -0.1688821692215769, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.004315997939556837}, {"id": 221, "seek": 123978, "start": 1250.54, "end": 1254.3, "text": " And then when you create your own schemas, you have to grant create to other roles if", "tokens": [50902, 400, 550, 562, 291, 1884, 428, 1065, 22627, 296, 11, 291, 362, 281, 6386, 1884, 281, 661, 9604, 498, 51090], "temperature": 0.0, "avg_logprob": -0.1688821692215769, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.004315997939556837}, {"id": 222, "seek": 123978, "start": 1254.3, "end": 1258.78, "text": " you want them to be able to do it. So recognize that change. Now, the one caveat here is, if", "tokens": [51090, 291, 528, 552, 281, 312, 1075, 281, 360, 309, 13, 407, 5521, 300, 1319, 13, 823, 11, 264, 472, 43012, 510, 307, 11, 498, 51314], "temperature": 0.0, "avg_logprob": -0.1688821692215769, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.004315997939556837}, {"id": 223, "seek": 123978, "start": 1258.78, "end": 1265.34, "text": " you've been upgrading 12, 13, 14, 15, when you upgrade to 15, it doesn't take away the", "tokens": [51314, 291, 600, 668, 36249, 2272, 11, 3705, 11, 3499, 11, 2119, 11, 562, 291, 11484, 281, 2119, 11, 309, 1177, 380, 747, 1314, 264, 51642], "temperature": 0.0, "avg_logprob": -0.1688821692215769, "compression_ratio": 1.744186046511628, "no_speech_prob": 0.004315997939556837}, {"id": 224, "seek": 126534, "start": 1265.34, "end": 1270.82, "text": " privilege from roles that already existed. Again, all of this is point in time, right?", "tokens": [50364, 12122, 490, 9604, 300, 1217, 13135, 13, 3764, 11, 439, 295, 341, 307, 935, 294, 565, 11, 558, 30, 50638], "temperature": 0.0, "avg_logprob": -0.11269703261349179, "compression_ratio": 1.669172932330827, "no_speech_prob": 0.00882937666028738}, {"id": 225, "seek": 126534, "start": 1270.82, "end": 1275.6599999999999, "text": " I applied the role at some of the privilege at some point in the past. I have to explicitly", "tokens": [50638, 286, 6456, 264, 3090, 412, 512, 295, 264, 12122, 412, 512, 935, 294, 264, 1791, 13, 286, 362, 281, 20803, 50880], "temperature": 0.0, "avg_logprob": -0.11269703261349179, "compression_ratio": 1.669172932330827, "no_speech_prob": 0.00882937666028738}, {"id": 226, "seek": 126534, "start": 1275.6599999999999, "end": 1281.6999999999998, "text": " do something to modify that. And so security best practice. I've been talking about public", "tokens": [50880, 360, 746, 281, 16927, 300, 13, 400, 370, 3825, 1151, 3124, 13, 286, 600, 668, 1417, 466, 1908, 51182], "temperature": 0.0, "avg_logprob": -0.11269703261349179, "compression_ratio": 1.669172932330827, "no_speech_prob": 0.00882937666028738}, {"id": 227, "seek": 126534, "start": 1281.6999999999998, "end": 1287.54, "text": " a little bit. And again, this is more what has come around. It's got a lot of attention", "tokens": [51182, 257, 707, 857, 13, 400, 797, 11, 341, 307, 544, 437, 575, 808, 926, 13, 467, 311, 658, 257, 688, 295, 3202, 51474], "temperature": 0.0, "avg_logprob": -0.11269703261349179, "compression_ratio": 1.669172932330827, "no_speech_prob": 0.00882937666028738}, {"id": 228, "seek": 126534, "start": 1287.54, "end": 1292.9399999999998, "text": " over the last few years, which is there's just this potential for bad things to happen", "tokens": [51474, 670, 264, 1036, 1326, 924, 11, 597, 307, 456, 311, 445, 341, 3995, 337, 1578, 721, 281, 1051, 51744], "temperature": 0.0, "avg_logprob": -0.11269703261349179, "compression_ratio": 1.669172932330827, "no_speech_prob": 0.00882937666028738}, {"id": 229, "seek": 129294, "start": 1292.94, "end": 1301.02, "text": " on the public schema. And so most folks, most advice you'll get is to revoke all privileges", "tokens": [50364, 322, 264, 1908, 34078, 13, 400, 370, 881, 4024, 11, 881, 5192, 291, 603, 483, 307, 281, 3698, 2949, 439, 32588, 50768], "temperature": 0.0, "avg_logprob": -0.1250901517614854, "compression_ratio": 1.9437229437229437, "no_speech_prob": 0.13971677422523499}, {"id": 230, "seek": 129294, "start": 1301.02, "end": 1306.46, "text": " from the public schema from the public role. Again, you can't get rid of the role. So you", "tokens": [50768, 490, 264, 1908, 34078, 490, 264, 1908, 3090, 13, 3764, 11, 291, 393, 380, 483, 3973, 295, 264, 3090, 13, 407, 291, 51040], "temperature": 0.0, "avg_logprob": -0.1250901517614854, "compression_ratio": 1.9437229437229437, "no_speech_prob": 0.13971677422523499}, {"id": 231, "seek": 129294, "start": 1306.46, "end": 1311.26, "text": " want to remove all privileges from public. And then per database, you probably want to", "tokens": [51040, 528, 281, 4159, 439, 32588, 490, 1908, 13, 400, 550, 680, 8149, 11, 291, 1391, 528, 281, 51280], "temperature": 0.0, "avg_logprob": -0.1250901517614854, "compression_ratio": 1.9437229437229437, "no_speech_prob": 0.13971677422523499}, {"id": 232, "seek": 129294, "start": 1311.26, "end": 1316.54, "text": " remove privileges specific, you know, to the database itself. And what that would mean", "tokens": [51280, 4159, 32588, 2685, 11, 291, 458, 11, 281, 264, 8149, 2564, 13, 400, 437, 300, 576, 914, 51544], "temperature": 0.0, "avg_logprob": -0.1250901517614854, "compression_ratio": 1.9437229437229437, "no_speech_prob": 0.13971677422523499}, {"id": 233, "seek": 129294, "start": 1316.54, "end": 1321.74, "text": " is, again, that comes to the connect, right? So you have to be able to connect to a database.", "tokens": [51544, 307, 11, 797, 11, 300, 1487, 281, 264, 1745, 11, 558, 30, 407, 291, 362, 281, 312, 1075, 281, 1745, 281, 257, 8149, 13, 51804], "temperature": 0.0, "avg_logprob": -0.1250901517614854, "compression_ratio": 1.9437229437229437, "no_speech_prob": 0.13971677422523499}, {"id": 234, "seek": 132174, "start": 1321.74, "end": 1327.42, "text": " If I don't revoke all privileges, any user, they're part of public, public has connect,", "tokens": [50364, 759, 286, 500, 380, 3698, 2949, 439, 32588, 11, 604, 4195, 11, 436, 434, 644, 295, 1908, 11, 1908, 575, 1745, 11, 50648], "temperature": 0.0, "avg_logprob": -0.18083196072965055, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.002249909332022071}, {"id": 235, "seek": 132174, "start": 1327.42, "end": 1330.82, "text": " then they can connect to that database. And so that allows you, this just means that then", "tokens": [50648, 550, 436, 393, 1745, 281, 300, 8149, 13, 400, 370, 300, 4045, 291, 11, 341, 445, 1355, 300, 550, 50818], "temperature": 0.0, "avg_logprob": -0.18083196072965055, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.002249909332022071}, {"id": 236, "seek": 132174, "start": 1330.82, "end": 1336.58, "text": " you have to be more explicit with every database, every schema and so forth. All right, you'll", "tokens": [50818, 291, 362, 281, 312, 544, 13691, 365, 633, 8149, 11, 633, 34078, 293, 370, 5220, 13, 1057, 558, 11, 291, 603, 51106], "temperature": 0.0, "avg_logprob": -0.18083196072965055, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.002249909332022071}, {"id": 237, "seek": 132174, "start": 1336.58, "end": 1342.14, "text": " find this a number of blog posts, people talking about security, and especially two years ago", "tokens": [51106, 915, 341, 257, 1230, 295, 6968, 12300, 11, 561, 1417, 466, 3825, 11, 293, 2318, 732, 924, 2057, 51384], "temperature": 0.0, "avg_logprob": -0.18083196072965055, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.002249909332022071}, {"id": 238, "seek": 132174, "start": 1342.14, "end": 1348.54, "text": " with Postgres 15, there was a lot of news around this. Now granting privileges is hopefully", "tokens": [51384, 365, 10223, 45189, 2119, 11, 456, 390, 257, 688, 295, 2583, 926, 341, 13, 823, 50204, 32588, 307, 4696, 51704], "temperature": 0.0, "avg_logprob": -0.18083196072965055, "compression_ratio": 1.6357142857142857, "no_speech_prob": 0.002249909332022071}, {"id": 239, "seek": 134854, "start": 1348.54, "end": 1353.26, "text": " pretty straightforward. The docs pages on grant and revoke are really good. They go", "tokens": [50364, 1238, 15325, 13, 440, 45623, 7183, 322, 6386, 293, 3698, 2949, 366, 534, 665, 13, 814, 352, 50600], "temperature": 0.0, "avg_logprob": -0.1744901242463485, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.700431227684021}, {"id": 240, "seek": 134854, "start": 1353.26, "end": 1359.86, "text": " into a lot of detail on all the privileges, what it means when I say I grant someone select.", "tokens": [50600, 666, 257, 688, 295, 2607, 322, 439, 264, 32588, 11, 437, 309, 1355, 562, 286, 584, 286, 6386, 1580, 3048, 13, 50930], "temperature": 0.0, "avg_logprob": -0.1744901242463485, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.700431227684021}, {"id": 241, "seek": 134854, "start": 1359.86, "end": 1364.94, "text": " What does that mean? When I grant someone delete, what does that mean? What is it just", "tokens": [50930, 708, 775, 300, 914, 30, 1133, 286, 6386, 1580, 12097, 11, 437, 775, 300, 914, 30, 708, 307, 309, 445, 51184], "temperature": 0.0, "avg_logprob": -0.1744901242463485, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.700431227684021}, {"id": 242, "seek": 134854, "start": 1364.94, "end": 1369.74, "text": " delete rows or does it allow me to do something else? And so there's a lot of good documentation,", "tokens": [51184, 12097, 13241, 420, 775, 309, 2089, 385, 281, 360, 746, 1646, 30, 400, 370, 456, 311, 257, 688, 295, 665, 14333, 11, 51424], "temperature": 0.0, "avg_logprob": -0.1744901242463485, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.700431227684021}, {"id": 243, "seek": 134854, "start": 1369.74, "end": 1376.94, "text": " but you grant something to an object, to a role, and then you can name a, you shouldn't,", "tokens": [51424, 457, 291, 6386, 746, 281, 364, 2657, 11, 281, 257, 3090, 11, 293, 550, 291, 393, 1315, 257, 11, 291, 4659, 380, 11, 51784], "temperature": 0.0, "avg_logprob": -0.1744901242463485, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.700431227684021}, {"id": 244, "seek": 137694, "start": 1376.94, "end": 1381.42, "text": " you name a schema, whether it's public, whether it's all, could be all schemas or specific", "tokens": [50364, 291, 1315, 257, 34078, 11, 1968, 309, 311, 1908, 11, 1968, 309, 311, 439, 11, 727, 312, 439, 22627, 296, 420, 2685, 50588], "temperature": 0.0, "avg_logprob": -0.1974851838473616, "compression_ratio": 1.902542372881356, "no_speech_prob": 0.004675798583775759}, {"id": 245, "seek": 137694, "start": 1381.42, "end": 1388.06, "text": " schema. So in this case, we're simply granting create. So now this admin can create something.", "tokens": [50588, 34078, 13, 407, 294, 341, 1389, 11, 321, 434, 2935, 50204, 1884, 13, 407, 586, 341, 24236, 393, 1884, 746, 13, 50920], "temperature": 0.0, "avg_logprob": -0.1974851838473616, "compression_ratio": 1.902542372881356, "no_speech_prob": 0.004675798583775759}, {"id": 246, "seek": 137694, "start": 1388.06, "end": 1392.8600000000001, "text": " They can use and create in the schema that I've created, but then we're going to create", "tokens": [50920, 814, 393, 764, 293, 1884, 294, 264, 34078, 300, 286, 600, 2942, 11, 457, 550, 321, 434, 516, 281, 1884, 51160], "temperature": 0.0, "avg_logprob": -0.1974851838473616, "compression_ratio": 1.902542372881356, "no_speech_prob": 0.004675798583775759}, {"id": 247, "seek": 137694, "start": 1392.8600000000001, "end": 1399.22, "text": " a junior role, and the junior dev role, and we're granting a select and certain update,", "tokens": [51160, 257, 16195, 3090, 11, 293, 264, 16195, 1905, 3090, 11, 293, 321, 434, 50204, 257, 3048, 293, 1629, 5623, 11, 51478], "temperature": 0.0, "avg_logprob": -0.1974851838473616, "compression_ratio": 1.902542372881356, "no_speech_prob": 0.004675798583775759}, {"id": 248, "seek": 137694, "start": 1399.22, "end": 1404.98, "text": " but they can't delete, they can't create in the database. In theory, they've been given", "tokens": [51478, 457, 436, 393, 380, 12097, 11, 436, 393, 380, 1884, 294, 264, 8149, 13, 682, 5261, 11, 436, 600, 668, 2212, 51766], "temperature": 0.0, "avg_logprob": -0.1974851838473616, "compression_ratio": 1.902542372881356, "no_speech_prob": 0.004675798583775759}, {"id": 249, "seek": 140498, "start": 1405.5, "end": 1409.14, "text": " usage on the database. I missed that out here. I should have had that in that line.", "tokens": [50390, 14924, 322, 264, 8149, 13, 286, 6721, 300, 484, 510, 13, 286, 820, 362, 632, 300, 294, 300, 1622, 13, 50572], "temperature": 0.0, "avg_logprob": -0.18346592264437894, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.10644309967756271}, {"id": 250, "seek": 140498, "start": 1409.14, "end": 1415.34, "text": " Now there are other ways to do this. So again, just remember, explicit grants only affect", "tokens": [50572, 823, 456, 366, 661, 2098, 281, 360, 341, 13, 407, 797, 11, 445, 1604, 11, 13691, 16101, 787, 3345, 50882], "temperature": 0.0, "avg_logprob": -0.18346592264437894, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.10644309967756271}, {"id": 251, "seek": 140498, "start": 1415.34, "end": 1420.78, "text": " current database objects. So I'm going to do a quick demo at the end of this to show", "tokens": [50882, 2190, 8149, 6565, 13, 407, 286, 478, 516, 281, 360, 257, 1702, 10723, 412, 264, 917, 295, 341, 281, 855, 51154], "temperature": 0.0, "avg_logprob": -0.18346592264437894, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.10644309967756271}, {"id": 252, "seek": 140498, "start": 1420.78, "end": 1427.58, "text": " you all of this very quickly and hopefully, you know, tie all the pieces together. Again,", "tokens": [51154, 291, 439, 295, 341, 588, 2661, 293, 4696, 11, 291, 458, 11, 7582, 439, 264, 3755, 1214, 13, 3764, 11, 51494], "temperature": 0.0, "avg_logprob": -0.18346592264437894, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.10644309967756271}, {"id": 253, "seek": 140498, "start": 1427.58, "end": 1433.34, "text": " these pages are really good. And so it just answers all the questions, every privilege.", "tokens": [51494, 613, 7183, 366, 534, 665, 13, 400, 370, 309, 445, 6338, 439, 264, 1651, 11, 633, 12122, 13, 51782], "temperature": 0.0, "avg_logprob": -0.18346592264437894, "compression_ratio": 1.6577946768060836, "no_speech_prob": 0.10644309967756271}, {"id": 254, "seek": 143334, "start": 1433.34, "end": 1438.02, "text": " And if you don't know, if you go to the Postgres documentation, there's a search box up top,", "tokens": [50364, 400, 498, 291, 500, 380, 458, 11, 498, 291, 352, 281, 264, 10223, 45189, 14333, 11, 456, 311, 257, 3164, 2424, 493, 1192, 11, 50598], "temperature": 0.0, "avg_logprob": -0.15931475060617822, "compression_ratio": 1.7884615384615385, "no_speech_prob": 0.0018635498126968741}, {"id": 255, "seek": 143334, "start": 1438.02, "end": 1443.6999999999998, "text": " and it works pretty well. And so you can just simply say grant, grant, privilege, grant,", "tokens": [50598, 293, 309, 1985, 1238, 731, 13, 400, 370, 291, 393, 445, 2935, 584, 6386, 11, 6386, 11, 12122, 11, 6386, 11, 50882], "temperature": 0.0, "avg_logprob": -0.15931475060617822, "compression_ratio": 1.7884615384615385, "no_speech_prob": 0.0018635498126968741}, {"id": 256, "seek": 143334, "start": 1443.6999999999998, "end": 1450.6999999999998, "text": " revoke, and it will come right up. All right. So we have the cluster. We understand we have", "tokens": [50882, 3698, 2949, 11, 293, 309, 486, 808, 558, 493, 13, 1057, 558, 13, 407, 321, 362, 264, 13630, 13, 492, 1223, 321, 362, 51232], "temperature": 0.0, "avg_logprob": -0.15931475060617822, "compression_ratio": 1.7884615384615385, "no_speech_prob": 0.0018635498126968741}, {"id": 257, "seek": 143334, "start": 1450.6999999999998, "end": 1455.78, "text": " roles and objects and databases on the cluster. There are some attributes and privileges given", "tokens": [51232, 9604, 293, 6565, 293, 22380, 322, 264, 13630, 13, 821, 366, 512, 17212, 293, 32588, 2212, 51486], "temperature": 0.0, "avg_logprob": -0.15931475060617822, "compression_ratio": 1.7884615384615385, "no_speech_prob": 0.0018635498126968741}, {"id": 258, "seek": 143334, "start": 1455.78, "end": 1461.58, "text": " to a role at the cluster level. Then we get to the databases themselves. Now we have privileges,", "tokens": [51486, 281, 257, 3090, 412, 264, 13630, 1496, 13, 1396, 321, 483, 281, 264, 22380, 2969, 13, 823, 321, 362, 32588, 11, 51776], "temperature": 0.0, "avg_logprob": -0.15931475060617822, "compression_ratio": 1.7884615384615385, "no_speech_prob": 0.0018635498126968741}, {"id": 259, "seek": 146158, "start": 1461.62, "end": 1467.22, "text": " which we can grant two roles for all the various types of things within the database. But if", "tokens": [50366, 597, 321, 393, 6386, 732, 9604, 337, 439, 264, 3683, 3467, 295, 721, 1951, 264, 8149, 13, 583, 498, 50646], "temperature": 0.0, "avg_logprob": -0.14703459488718132, "compression_ratio": 1.6569343065693432, "no_speech_prob": 0.002320572966709733}, {"id": 260, "seek": 146158, "start": 1467.22, "end": 1471.74, "text": " you notice on this slide, if I had to do this for every user, this gets really frustrating", "tokens": [50646, 291, 3449, 322, 341, 4137, 11, 498, 286, 632, 281, 360, 341, 337, 633, 4195, 11, 341, 2170, 534, 16522, 50872], "temperature": 0.0, "avg_logprob": -0.14703459488718132, "compression_ratio": 1.6569343065693432, "no_speech_prob": 0.002320572966709733}, {"id": 261, "seek": 146158, "start": 1471.74, "end": 1476.9399999999998, "text": " and complex. Now quite honestly, this is probably why a lot of people, myself included, is just", "tokens": [50872, 293, 3997, 13, 823, 1596, 6095, 11, 341, 307, 1391, 983, 257, 688, 295, 561, 11, 2059, 5556, 11, 307, 445, 51132], "temperature": 0.0, "avg_logprob": -0.14703459488718132, "compression_ratio": 1.6569343065693432, "no_speech_prob": 0.002320572966709733}, {"id": 262, "seek": 146158, "start": 1476.9399999999998, "end": 1481.54, "text": " easier to use SuperUser. Just log in with that one user, do everything you need to do,", "tokens": [51132, 3571, 281, 764, 4548, 52, 12484, 13, 1449, 3565, 294, 365, 300, 472, 4195, 11, 360, 1203, 291, 643, 281, 360, 11, 51362], "temperature": 0.0, "avg_logprob": -0.14703459488718132, "compression_ratio": 1.6569343065693432, "no_speech_prob": 0.002320572966709733}, {"id": 263, "seek": 146158, "start": 1481.54, "end": 1487.98, "text": " because I trust myself. I'm not going to do anything bad. But the better way forward is", "tokens": [51362, 570, 286, 3361, 2059, 13, 286, 478, 406, 516, 281, 360, 1340, 1578, 13, 583, 264, 1101, 636, 2128, 307, 51684], "temperature": 0.0, "avg_logprob": -0.14703459488718132, "compression_ratio": 1.6569343065693432, "no_speech_prob": 0.002320572966709733}, {"id": 264, "seek": 148798, "start": 1488.02, "end": 1492.94, "text": " to deal with inheritance. So you may have noticed, you may have not, that earlier on, this is one", "tokens": [50366, 281, 2028, 365, 32122, 13, 407, 291, 815, 362, 5694, 11, 291, 815, 362, 406, 11, 300, 3071, 322, 11, 341, 307, 472, 50612], "temperature": 0.0, "avg_logprob": -0.1453991879473676, "compression_ratio": 1.7671232876712328, "no_speech_prob": 0.016629135236144066}, {"id": 265, "seek": 148798, "start": 1492.94, "end": 1497.78, "text": " of those attributes, one of the privileges, I'm sorry, the attributes to a user. Do you inherit", "tokens": [50612, 295, 729, 17212, 11, 472, 295, 264, 32588, 11, 286, 478, 2597, 11, 264, 17212, 281, 257, 4195, 13, 1144, 291, 21389, 50854], "temperature": 0.0, "avg_logprob": -0.1453991879473676, "compression_ratio": 1.7671232876712328, "no_speech_prob": 0.016629135236144066}, {"id": 266, "seek": 148798, "start": 1497.78, "end": 1506.5, "text": " privileges or not? Now it doesn't matter if you aren't granted membership into some other role", "tokens": [50854, 32588, 420, 406, 30, 823, 309, 1177, 380, 1871, 498, 291, 3212, 380, 12344, 16560, 666, 512, 661, 3090, 51290], "temperature": 0.0, "avg_logprob": -0.1453991879473676, "compression_ratio": 1.7671232876712328, "no_speech_prob": 0.016629135236144066}, {"id": 267, "seek": 148798, "start": 1506.5, "end": 1512.1, "text": " that would apply privileges. You could receive privileges from. So roles can be granted membership", "tokens": [51290, 300, 576, 3079, 32588, 13, 509, 727, 4774, 32588, 490, 13, 407, 9604, 393, 312, 12344, 16560, 51570], "temperature": 0.0, "avg_logprob": -0.1453991879473676, "compression_ratio": 1.7671232876712328, "no_speech_prob": 0.016629135236144066}, {"id": 268, "seek": 151210, "start": 1512.26, "end": 1518.8999999999999, "text": " into other roles. That's why there really is no group and user difference here. It's just whether", "tokens": [50372, 666, 661, 9604, 13, 663, 311, 983, 456, 534, 307, 572, 1594, 293, 4195, 2649, 510, 13, 467, 311, 445, 1968, 50704], "temperature": 0.0, "avg_logprob": -0.1533960501352946, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.059908609837293625}, {"id": 269, "seek": 151210, "start": 1518.8999999999999, "end": 1523.74, "text": " they, you know, again, we say whether they can log in or not log in. But if you create the roles", "tokens": [50704, 436, 11, 291, 458, 11, 797, 11, 321, 584, 1968, 436, 393, 3565, 294, 420, 406, 3565, 294, 13, 583, 498, 291, 1884, 264, 9604, 50946], "temperature": 0.0, "avg_logprob": -0.1533960501352946, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.059908609837293625}, {"id": 270, "seek": 151210, "start": 1523.74, "end": 1530.62, "text": " that cannot log in, treat them as groups, you can apply all of your privileges to those groups in", "tokens": [50946, 300, 2644, 3565, 294, 11, 2387, 552, 382, 3935, 11, 291, 393, 3079, 439, 295, 428, 32588, 281, 729, 3935, 294, 51290], "temperature": 0.0, "avg_logprob": -0.1533960501352946, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.059908609837293625}, {"id": 271, "seek": 151210, "start": 1530.62, "end": 1539.54, "text": " ways that make sense and then grant ownership into those roles from other, for other roles. So", "tokens": [51290, 2098, 300, 652, 2020, 293, 550, 6386, 15279, 666, 729, 9604, 490, 661, 11, 337, 661, 9604, 13, 407, 51736], "temperature": 0.0, "avg_logprob": -0.1533960501352946, "compression_ratio": 1.7354260089686098, "no_speech_prob": 0.059908609837293625}, {"id": 272, "seek": 153954, "start": 1539.58, "end": 1544.26, "text": " this is really the preferred method for managing it. What you would expect in a, you know, whether", "tokens": [50366, 341, 307, 534, 264, 16494, 3170, 337, 11642, 309, 13, 708, 291, 576, 2066, 294, 257, 11, 291, 458, 11, 1968, 50600], "temperature": 0.0, "avg_logprob": -0.165488525390625, "compression_ratio": 1.7003484320557491, "no_speech_prob": 0.005545512307435274}, {"id": 273, "seek": 153954, "start": 1544.26, "end": 1548.94, "text": " it's Linux, Windows, whatever it is, you have groups, you have users, users can be part of", "tokens": [50600, 309, 311, 18734, 11, 8591, 11, 2035, 309, 307, 11, 291, 362, 3935, 11, 291, 362, 5022, 11, 5022, 393, 312, 644, 295, 50834], "temperature": 0.0, "avg_logprob": -0.165488525390625, "compression_ratio": 1.7003484320557491, "no_speech_prob": 0.005545512307435274}, {"id": 274, "seek": 153954, "start": 1548.94, "end": 1555.5, "text": " multiple groups. It's exactly what we're talking about here. But you have to go to some effort. So", "tokens": [50834, 3866, 3935, 13, 467, 311, 2293, 437, 321, 434, 1417, 466, 510, 13, 583, 291, 362, 281, 352, 281, 512, 4630, 13, 407, 51162], "temperature": 0.0, "avg_logprob": -0.165488525390625, "compression_ratio": 1.7003484320557491, "no_speech_prob": 0.005545512307435274}, {"id": 275, "seek": 153954, "start": 1555.5, "end": 1562.1, "text": " again, just a really quick example we hate, we're creating a senior dev user role, they can inherit,", "tokens": [51162, 797, 11, 445, 257, 534, 1702, 1365, 321, 4700, 11, 321, 434, 4084, 257, 7965, 1905, 4195, 3090, 11, 436, 393, 21389, 11, 51492], "temperature": 0.0, "avg_logprob": -0.165488525390625, "compression_ratio": 1.7003484320557491, "no_speech_prob": 0.005545512307435274}, {"id": 276, "seek": 153954, "start": 1562.1, "end": 1568.74, "text": " report user, they can inherit. And then we create two groups because they can't log in. All right.", "tokens": [51492, 2275, 4195, 11, 436, 393, 21389, 13, 400, 550, 321, 1884, 732, 3935, 570, 436, 393, 380, 3565, 294, 13, 1057, 558, 13, 51824], "temperature": 0.0, "avg_logprob": -0.165488525390625, "compression_ratio": 1.7003484320557491, "no_speech_prob": 0.005545512307435274}, {"id": 277, "seek": 156874, "start": 1569.58, "end": 1574.98, "text": " And so we just, we explicitly say no inherit. Now, you don't have to do that for groups, but it can", "tokens": [50406, 400, 370, 321, 445, 11, 321, 20803, 584, 572, 21389, 13, 823, 11, 291, 500, 380, 362, 281, 360, 300, 337, 3935, 11, 457, 309, 393, 50676], "temperature": 0.0, "avg_logprob": -0.12502198125801833, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0025763162411749363}, {"id": 278, "seek": 156874, "start": 1574.98, "end": 1580.26, "text": " get a little bit messy trying to figure out exactly where everything's coming from. So a lot of", "tokens": [50676, 483, 257, 707, 857, 16191, 1382, 281, 2573, 484, 2293, 689, 1203, 311, 1348, 490, 13, 407, 257, 688, 295, 50940], "temperature": 0.0, "avg_logprob": -0.12502198125801833, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0025763162411749363}, {"id": 279, "seek": 156874, "start": 1580.82, "end": 1586.86, "text": " wisdom is your groups, let them be separate and apply the groups you need to other, to your actual", "tokens": [50968, 10712, 307, 428, 3935, 11, 718, 552, 312, 4994, 293, 3079, 264, 3935, 291, 643, 281, 661, 11, 281, 428, 3539, 51270], "temperature": 0.0, "avg_logprob": -0.12502198125801833, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0025763162411749363}, {"id": 280, "seek": 156874, "start": 1586.86, "end": 1593.6200000000001, "text": " user roles. And then I've said, hey, grant, insert, update, delete on all tables to the read only", "tokens": [51270, 4195, 9604, 13, 400, 550, 286, 600, 848, 11, 4177, 11, 6386, 11, 8969, 11, 5623, 11, 12097, 322, 439, 8020, 281, 264, 1401, 787, 51608], "temperature": 0.0, "avg_logprob": -0.12502198125801833, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.0025763162411749363}, {"id": 281, "seek": 159362, "start": 1593.62, "end": 1598.06, "text": " privilege. Now it's, I should have to the admin privilege. I was like, wait, that's not read only", "tokens": [50364, 12122, 13, 823, 309, 311, 11, 286, 820, 362, 281, 264, 24236, 12122, 13, 286, 390, 411, 11, 1699, 11, 300, 311, 406, 1401, 787, 50586], "temperature": 0.0, "avg_logprob": -0.14973723772660041, "compression_ratio": 1.6973684210526316, "no_speech_prob": 0.12735281884670258}, {"id": 282, "seek": 159362, "start": 1598.86, "end": 1606.1, "text": " to the admin privilege, right? So right here. And then we have grant select, all tables to this", "tokens": [50626, 281, 264, 24236, 12122, 11, 558, 30, 407, 558, 510, 13, 400, 550, 321, 362, 6386, 3048, 11, 439, 8020, 281, 341, 50988], "temperature": 0.0, "avg_logprob": -0.14973723772660041, "compression_ratio": 1.6973684210526316, "no_speech_prob": 0.12735281884670258}, {"id": 283, "seek": 159362, "start": 1606.1, "end": 1611.5, "text": " read only privilege. Right. But those are my two groups. They can't log in. So how's this going", "tokens": [50988, 1401, 787, 12122, 13, 1779, 13, 583, 729, 366, 452, 732, 3935, 13, 814, 393, 380, 3565, 294, 13, 407, 577, 311, 341, 516, 51258], "temperature": 0.0, "avg_logprob": -0.14973723772660041, "compression_ratio": 1.6973684210526316, "no_speech_prob": 0.12735281884670258}, {"id": 284, "seek": 159362, "start": 1611.5, "end": 1620.54, "text": " to help me? Well, you can then grant membership into those other groups. So I say grant admin and", "tokens": [51258, 281, 854, 385, 30, 1042, 11, 291, 393, 550, 6386, 16560, 666, 729, 661, 3935, 13, 407, 286, 584, 6386, 24236, 293, 51710], "temperature": 0.0, "avg_logprob": -0.14973723772660041, "compression_ratio": 1.6973684210526316, "no_speech_prob": 0.12735281884670258}, {"id": 285, "seek": 162054, "start": 1620.58, "end": 1627.3799999999999, "text": " read only priv to the senior dev and then only grant read only priv to the junior dev. And so", "tokens": [50366, 1401, 787, 2915, 281, 264, 7965, 1905, 293, 550, 787, 6386, 1401, 787, 2915, 281, 264, 16195, 1905, 13, 400, 370, 50706], "temperature": 0.0, "avg_logprob": -0.11611929441753187, "compression_ratio": 1.7962962962962963, "no_speech_prob": 0.004328076262027025}, {"id": 286, "seek": 162054, "start": 1627.3799999999999, "end": 1635.46, "text": " essentially what that looks like is this. Those two roles both have read only privilege. But the", "tokens": [50706, 4476, 437, 300, 1542, 411, 307, 341, 13, 3950, 732, 9604, 1293, 362, 1401, 787, 12122, 13, 583, 264, 51110], "temperature": 0.0, "avg_logprob": -0.11611929441753187, "compression_ratio": 1.7962962962962963, "no_speech_prob": 0.004328076262027025}, {"id": 287, "seek": 162054, "start": 1635.46, "end": 1641.3799999999999, "text": " senior dev has now also has other privilege. So you kind of keep building on top of that. So it's a", "tokens": [51110, 7965, 1905, 575, 586, 611, 575, 661, 12122, 13, 407, 291, 733, 295, 1066, 2390, 322, 1192, 295, 300, 13, 407, 309, 311, 257, 51406], "temperature": 0.0, "avg_logprob": -0.11611929441753187, "compression_ratio": 1.7962962962962963, "no_speech_prob": 0.004328076262027025}, {"id": 288, "seek": 162054, "start": 1641.3799999999999, "end": 1647.18, "text": " great way to be able to apply the kinds of privileges you need across many roles. And then if you", "tokens": [51406, 869, 636, 281, 312, 1075, 281, 3079, 264, 3685, 295, 32588, 291, 643, 2108, 867, 9604, 13, 400, 550, 498, 291, 51696], "temperature": 0.0, "avg_logprob": -0.11611929441753187, "compression_ratio": 1.7962962962962963, "no_speech_prob": 0.004328076262027025}, {"id": 289, "seek": 164718, "start": 1647.22, "end": 1652.98, "text": " need to update something, you update one object, the group role, and it will be applied to all of the", "tokens": [50366, 643, 281, 5623, 746, 11, 291, 5623, 472, 2657, 11, 264, 1594, 3090, 11, 293, 309, 486, 312, 6456, 281, 439, 295, 264, 50654], "temperature": 0.0, "avg_logprob": -0.1975335693359375, "compression_ratio": 1.4071428571428573, "no_speech_prob": 0.014685125090181828}, {"id": 290, "seek": 164718, "start": 1652.98, "end": 1659.26, "text": " users that are inheriting from that user. Any questions on inherit? What that looks like? Yeah.", "tokens": [50654, 5022, 300, 366, 9484, 1748, 490, 300, 4195, 13, 2639, 1651, 322, 21389, 30, 708, 300, 1542, 411, 30, 865, 13, 50968], "temperature": 0.0, "avg_logprob": -0.1975335693359375, "compression_ratio": 1.4071428571428573, "no_speech_prob": 0.014685125090181828}, {"id": 291, "seek": 165926, "start": 1659.26, "end": 1681.46, "text": " Okay, the question is, if the super user creates roles, do those roles get the same privileges as", "tokens": [50364, 1033, 11, 264, 1168, 307, 11, 498, 264, 1687, 4195, 7829, 9604, 11, 360, 729, 9604, 483, 264, 912, 32588, 382, 51474], "temperature": 0.0, "avg_logprob": -0.30910375595092776, "compression_ratio": 1.1829268292682926, "no_speech_prob": 0.05562799051403999}, {"id": 292, "seek": 168146, "start": 1681.46, "end": 1697.18, "text": " super user? No. Okay, misunderstood. If you create a role and you grant it super user, they're super", "tokens": [50364, 1687, 4195, 30, 883, 13, 1033, 11, 33870, 13, 759, 291, 1884, 257, 3090, 293, 291, 6386, 309, 1687, 4195, 11, 436, 434, 1687, 51150], "temperature": 0.0, "avg_logprob": -0.19009717305501303, "compression_ratio": 1.568421052631579, "no_speech_prob": 0.17958728969097137}, {"id": 293, "seek": 168146, "start": 1697.18, "end": 1703.02, "text": " user, just like what's exactly same as what you would expect Postgres to do. Yep. It's a flag in the", "tokens": [51150, 4195, 11, 445, 411, 437, 311, 2293, 912, 382, 437, 291, 576, 2066, 10223, 45189, 281, 360, 13, 7010, 13, 467, 311, 257, 7166, 294, 264, 51442], "temperature": 0.0, "avg_logprob": -0.19009717305501303, "compression_ratio": 1.568421052631579, "no_speech_prob": 0.17958728969097137}, {"id": 294, "seek": 168146, "start": 1703.02, "end": 1708.3400000000001, "text": " database. And if it doesn't matter what the name of the role is, if it is a super user, you're a", "tokens": [51442, 8149, 13, 400, 498, 309, 1177, 380, 1871, 437, 264, 1315, 295, 264, 3090, 307, 11, 498, 309, 307, 257, 1687, 4195, 11, 291, 434, 257, 51708], "temperature": 0.0, "avg_logprob": -0.19009717305501303, "compression_ratio": 1.568421052631579, "no_speech_prob": 0.17958728969097137}, {"id": 295, "seek": 170834, "start": 1708.3799999999999, "end": 1716.4599999999998, "text": " super user. Have fun. Don't destroy. Okay. But maybe that is the fun, right? No, I'm kidding. Test your", "tokens": [50366, 1687, 4195, 13, 3560, 1019, 13, 1468, 380, 5293, 13, 1033, 13, 583, 1310, 300, 307, 264, 1019, 11, 558, 30, 883, 11, 286, 478, 9287, 13, 9279, 428, 50770], "temperature": 0.0, "avg_logprob": -0.1702704910160035, "compression_ratio": 1.6767676767676767, "no_speech_prob": 0.0158954206854105}, {"id": 296, "seek": 170834, "start": 1716.4599999999998, "end": 1722.3, "text": " backups. Okay. So great. We have, you know, just trying to build down through this, we have our", "tokens": [50770, 50160, 13, 1033, 13, 407, 869, 13, 492, 362, 11, 291, 458, 11, 445, 1382, 281, 1322, 760, 807, 341, 11, 321, 362, 527, 51062], "temperature": 0.0, "avg_logprob": -0.1702704910160035, "compression_ratio": 1.6767676767676767, "no_speech_prob": 0.0158954206854105}, {"id": 297, "seek": 170834, "start": 1722.4599999999998, "end": 1727.4199999999998, "text": " cluster, we've created roles, we understand what those privileges look like. We understand that there", "tokens": [51070, 13630, 11, 321, 600, 2942, 9604, 11, 321, 1223, 437, 729, 32588, 574, 411, 13, 492, 1223, 300, 456, 51318], "temperature": 0.0, "avg_logprob": -0.1702704910160035, "compression_ratio": 1.6767676767676767, "no_speech_prob": 0.0158954206854105}, {"id": 298, "seek": 170834, "start": 1727.4199999999998, "end": 1732.58, "text": " is, you know, this, this level of the roles and the privileges they get, but then we get the object", "tokens": [51318, 307, 11, 291, 458, 11, 341, 11, 341, 1496, 295, 264, 9604, 293, 264, 32588, 436, 483, 11, 457, 550, 321, 483, 264, 2657, 51576], "temperature": 0.0, "avg_logprob": -0.1702704910160035, "compression_ratio": 1.6767676767676767, "no_speech_prob": 0.0158954206854105}, {"id": 299, "seek": 170834, "start": 1732.58, "end": 1738.3, "text": " ownership. And honestly, this is when I decided I started to need to dig into roles in Postgres.", "tokens": [51576, 15279, 13, 400, 6095, 11, 341, 307, 562, 286, 3047, 286, 1409, 281, 643, 281, 2528, 666, 9604, 294, 10223, 45189, 13, 51862], "temperature": 0.0, "avg_logprob": -0.1702704910160035, "compression_ratio": 1.6767676767676767, "no_speech_prob": 0.0158954206854105}, {"id": 300, "seek": 173834, "start": 1738.34, "end": 1743.06, "text": " Because I was using super user for everything I didn't care, right? And then I actually started to manage an", "tokens": [50364, 1436, 286, 390, 1228, 1687, 4195, 337, 1203, 286, 994, 380, 1127, 11, 558, 30, 400, 550, 286, 767, 1409, 281, 3067, 364, 50600], "temperature": 0.0, "avg_logprob": -0.09781547606460692, "compression_ratio": 1.7682119205298013, "no_speech_prob": 0.007683361414819956}, {"id": 301, "seek": 173834, "start": 1743.06, "end": 1748.6599999999999, "text": " application with multiple users, a lot of devs in a, you know, one environment, a couple different users for", "tokens": [50600, 3861, 365, 3866, 5022, 11, 257, 688, 295, 1905, 82, 294, 257, 11, 291, 458, 11, 472, 2823, 11, 257, 1916, 819, 5022, 337, 50880], "temperature": 0.0, "avg_logprob": -0.09781547606460692, "compression_ratio": 1.7682119205298013, "no_speech_prob": 0.007683361414819956}, {"id": 302, "seek": 173834, "start": 1748.6599999999999, "end": 1754.1399999999999, "text": " various applications that were connecting from another environment. And all of a sudden I was like, what is", "tokens": [50880, 3683, 5821, 300, 645, 11015, 490, 1071, 2823, 13, 400, 439, 295, 257, 3990, 286, 390, 411, 11, 437, 307, 51154], "temperature": 0.0, "avg_logprob": -0.09781547606460692, "compression_ratio": 1.7682119205298013, "no_speech_prob": 0.007683361414819956}, {"id": 303, "seek": 173834, "start": 1754.1399999999999, "end": 1758.82, "text": " going on? Because this is not what I thought was going to happen. And that's when I had to really start to dig", "tokens": [51154, 516, 322, 30, 1436, 341, 307, 406, 437, 286, 1194, 390, 516, 281, 1051, 13, 400, 300, 311, 562, 286, 632, 281, 534, 722, 281, 2528, 51388], "temperature": 0.0, "avg_logprob": -0.09781547606460692, "compression_ratio": 1.7682119205298013, "no_speech_prob": 0.007683361414819956}, {"id": 304, "seek": 173834, "start": 1758.82, "end": 1763.6599999999999, "text": " in. So that's why all of the other stuff leading up to this is important for me as an application", "tokens": [51388, 294, 13, 407, 300, 311, 983, 439, 295, 264, 661, 1507, 5775, 493, 281, 341, 307, 1021, 337, 385, 382, 364, 3861, 51630], "temperature": 0.0, "avg_logprob": -0.09781547606460692, "compression_ratio": 1.7682119205298013, "no_speech_prob": 0.007683361414819956}, {"id": 305, "seek": 176366, "start": 1763.66, "end": 1771.3000000000002, "text": " developer or running or helping to teams of application developers effectively use Postgres. So object", "tokens": [50364, 10754, 420, 2614, 420, 4315, 281, 5491, 295, 3861, 8849, 8659, 764, 10223, 45189, 13, 407, 2657, 50746], "temperature": 0.0, "avg_logprob": -0.12149119041335414, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.04880232736468315}, {"id": 306, "seek": 176366, "start": 1771.3000000000002, "end": 1781.02, "text": " ownership, whoever creates the object, whatever role you are currently logged in as, or that session is", "tokens": [50746, 15279, 11, 11387, 7829, 264, 2657, 11, 2035, 3090, 291, 366, 4362, 27231, 294, 382, 11, 420, 300, 5481, 307, 51232], "temperature": 0.0, "avg_logprob": -0.12149119041335414, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.04880232736468315}, {"id": 307, "seek": 176366, "start": 1781.02, "end": 1789.6200000000001, "text": " currently acting as, when that object gets created, they are the user. Table, function, view, you know, on and", "tokens": [51232, 4362, 6577, 382, 11, 562, 300, 2657, 2170, 2942, 11, 436, 366, 264, 4195, 13, 25535, 11, 2445, 11, 1910, 11, 291, 458, 11, 322, 293, 51662], "temperature": 0.0, "avg_logprob": -0.12149119041335414, "compression_ratio": 1.601010101010101, "no_speech_prob": 0.04880232736468315}, {"id": 308, "seek": 178962, "start": 1789.7399999999998, "end": 1796.26, "text": " on. Even a database. When I create a database, if I had privilege to create the database, that database is now", "tokens": [50370, 322, 13, 2754, 257, 8149, 13, 1133, 286, 1884, 257, 8149, 11, 498, 286, 632, 12122, 281, 1884, 264, 8149, 11, 300, 8149, 307, 586, 50696], "temperature": 0.0, "avg_logprob": -0.14105236119237438, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.36531588435173035}, {"id": 309, "seek": 178962, "start": 1796.26, "end": 1801.9799999999998, "text": " owned by me, not by Postgres, not by some other user. So it's really, that's just the first thing you got to", "tokens": [50696, 11684, 538, 385, 11, 406, 538, 10223, 45189, 11, 406, 538, 512, 661, 4195, 13, 407, 309, 311, 534, 11, 300, 311, 445, 264, 700, 551, 291, 658, 281, 50982], "temperature": 0.0, "avg_logprob": -0.14105236119237438, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.36531588435173035}, {"id": 310, "seek": 178962, "start": 1801.9799999999998, "end": 1810.3799999999999, "text": " understand. Now, the owner of the object is essentially like a super user of the object. Right? They're not a", "tokens": [50982, 1223, 13, 823, 11, 264, 7289, 295, 264, 2657, 307, 4476, 411, 257, 1687, 4195, 295, 264, 2657, 13, 1779, 30, 814, 434, 406, 257, 51402], "temperature": 0.0, "avg_logprob": -0.14105236119237438, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.36531588435173035}, {"id": 311, "seek": 178962, "start": 1810.3799999999999, "end": 1818.02, "text": " super user, but I own the object. I'm the only one that can actually do a lot of things on that object, unless", "tokens": [51402, 1687, 4195, 11, 457, 286, 1065, 264, 2657, 13, 286, 478, 264, 787, 472, 300, 393, 767, 360, 257, 688, 295, 721, 322, 300, 2657, 11, 5969, 51784], "temperature": 0.0, "avg_logprob": -0.14105236119237438, "compression_ratio": 1.7741935483870968, "no_speech_prob": 0.36531588435173035}, {"id": 312, "seek": 181802, "start": 1818.06, "end": 1824.78, "text": " I've granted other privilege. And there are some things only I can do. Or a super user. So I like to think of this", "tokens": [50366, 286, 600, 12344, 661, 12122, 13, 400, 456, 366, 512, 721, 787, 286, 393, 360, 13, 1610, 257, 1687, 4195, 13, 407, 286, 411, 281, 519, 295, 341, 50702], "temperature": 0.0, "avg_logprob": -0.11827033360799154, "compression_ratio": 1.7174721189591078, "no_speech_prob": 0.005346562713384628}, {"id": 313, "seek": 181802, "start": 1824.78, "end": 1831.82, "text": " as principle of least privilege. When I create something, the way that Postgres works, it says, we don't want anyone", "tokens": [50702, 382, 8665, 295, 1935, 12122, 13, 1133, 286, 1884, 746, 11, 264, 636, 300, 10223, 45189, 1985, 11, 309, 1619, 11, 321, 500, 380, 528, 2878, 51054], "temperature": 0.0, "avg_logprob": -0.11827033360799154, "compression_ratio": 1.7174721189591078, "no_speech_prob": 0.005346562713384628}, {"id": 314, "seek": 181802, "start": 1831.82, "end": 1839.5, "text": " to do anything. You have to tell me Postgres, the cluster, what everyone else should be able to do to this object.", "tokens": [51054, 281, 360, 1340, 13, 509, 362, 281, 980, 385, 10223, 45189, 11, 264, 13630, 11, 437, 1518, 1646, 820, 312, 1075, 281, 360, 281, 341, 2657, 13, 51438], "temperature": 0.0, "avg_logprob": -0.11827033360799154, "compression_ratio": 1.7174721189591078, "no_speech_prob": 0.005346562713384628}, {"id": 315, "seek": 181802, "start": 1839.78, "end": 1845.5, "text": " I don't care if they're part of some group that has access to this thing, and you're both part of the same group. I", "tokens": [51452, 286, 500, 380, 1127, 498, 436, 434, 644, 295, 512, 1594, 300, 575, 2105, 281, 341, 551, 11, 293, 291, 434, 1293, 644, 295, 264, 912, 1594, 13, 286, 51738], "temperature": 0.0, "avg_logprob": -0.11827033360799154, "compression_ratio": 1.7174721189591078, "no_speech_prob": 0.005346562713384628}, {"id": 316, "seek": 184550, "start": 1845.5, "end": 1853.74, "text": " don't care. They have to be given explicit privilege in some way. So that's kind of the first place that you start to get", "tokens": [50364, 500, 380, 1127, 13, 814, 362, 281, 312, 2212, 13691, 12122, 294, 512, 636, 13, 407, 300, 311, 733, 295, 264, 700, 1081, 300, 291, 722, 281, 483, 50776], "temperature": 0.0, "avg_logprob": -0.19590174767278856, "compression_ratio": 1.6794425087108014, "no_speech_prob": 0.001477304263971746}, {"id": 317, "seek": 184550, "start": 1853.74, "end": 1859.06, "text": " confused. If you happen to have multiple devs, and you're on a test database, and you're all part of the same group,", "tokens": [50776, 9019, 13, 759, 291, 1051, 281, 362, 3866, 1905, 82, 11, 293, 291, 434, 322, 257, 1500, 8149, 11, 293, 291, 434, 439, 644, 295, 264, 912, 1594, 11, 51042], "temperature": 0.0, "avg_logprob": -0.19590174767278856, "compression_ratio": 1.6794425087108014, "no_speech_prob": 0.001477304263971746}, {"id": 318, "seek": 184550, "start": 1859.26, "end": 1865.02, "text": " and all of a sudden dev one creates something, and dev two says, oh, let me go just see what you did, like access denied,", "tokens": [51052, 293, 439, 295, 257, 3990, 1905, 472, 7829, 746, 11, 293, 1905, 732, 1619, 11, 1954, 11, 718, 385, 352, 445, 536, 437, 291, 630, 11, 411, 2105, 17774, 11, 51340], "temperature": 0.0, "avg_logprob": -0.19590174767278856, "compression_ratio": 1.6794425087108014, "no_speech_prob": 0.001477304263971746}, {"id": 319, "seek": 184550, "start": 1865.02, "end": 1870.54, "text": " like what? What are the test server? What are you talking about? And this is what it gets down to is object ownership and", "tokens": [51340, 411, 437, 30, 708, 366, 264, 1500, 7154, 30, 708, 366, 291, 1417, 466, 30, 400, 341, 307, 437, 309, 2170, 760, 281, 307, 2657, 15279, 293, 51616], "temperature": 0.0, "avg_logprob": -0.19590174767278856, "compression_ratio": 1.6794425087108014, "no_speech_prob": 0.001477304263971746}, {"id": 320, "seek": 187054, "start": 1870.54, "end": 1880.74, "text": " understanding of that. Now, again, roles, there are some roles that can actually, you know, grant, yeah, default, sorry, default", "tokens": [50364, 3701, 295, 300, 13, 823, 11, 797, 11, 9604, 11, 456, 366, 512, 9604, 300, 393, 767, 11, 291, 458, 11, 6386, 11, 1338, 11, 7576, 11, 2597, 11, 7576, 50874], "temperature": 0.0, "avg_logprob": -0.15508956258947199, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.03564797714352608}, {"id": 321, "seek": 187054, "start": 1880.74, "end": 1886.62, "text": " privileges. So we're going to talk about default privileges in just a minute. And that's where kind of the power for managing", "tokens": [50874, 32588, 13, 407, 321, 434, 516, 281, 751, 466, 7576, 32588, 294, 445, 257, 3456, 13, 400, 300, 311, 689, 733, 295, 264, 1347, 337, 11642, 51168], "temperature": 0.0, "avg_logprob": -0.15508956258947199, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.03564797714352608}, {"id": 322, "seek": 187054, "start": 1886.62, "end": 1895.98, "text": " application and creation of objects and management of objects can be really helpful. So this is what I showed earlier. And hopefully", "tokens": [51168, 3861, 293, 8016, 295, 6565, 293, 4592, 295, 6565, 393, 312, 534, 4961, 13, 407, 341, 307, 437, 286, 4712, 3071, 13, 400, 4696, 51636], "temperature": 0.0, "avg_logprob": -0.15508956258947199, "compression_ratio": 1.646808510638298, "no_speech_prob": 0.03564797714352608}, {"id": 323, "seek": 189598, "start": 1895.98, "end": 1901.98, "text": " you can see, and I actually forgot to make this point early on, and I apologize for that. The one unique thing for Postgres", "tokens": [50364, 291, 393, 536, 11, 293, 286, 767, 5298, 281, 652, 341, 935, 2440, 322, 11, 293, 286, 12328, 337, 300, 13, 440, 472, 3845, 551, 337, 10223, 45189, 50664], "temperature": 0.0, "avg_logprob": -0.10523728118545708, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.08471336215734482}, {"id": 324, "seek": 189598, "start": 1901.98, "end": 1910.82, "text": " with me coming from a different database is that although the roles are created at the cluster level, I cannot connect to the", "tokens": [50664, 365, 385, 1348, 490, 257, 819, 8149, 307, 300, 4878, 264, 9604, 366, 2942, 412, 264, 13630, 1496, 11, 286, 2644, 1745, 281, 264, 51106], "temperature": 0.0, "avg_logprob": -0.10523728118545708, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.08471336215734482}, {"id": 325, "seek": 189598, "start": 1910.82, "end": 1920.02, "text": " Postgres cluster, unless I can connect to a database, every connection is to a database. And so I might have the right password", "tokens": [51106, 10223, 45189, 13630, 11, 5969, 286, 393, 1745, 281, 257, 8149, 11, 633, 4984, 307, 281, 257, 8149, 13, 400, 370, 286, 1062, 362, 264, 558, 11524, 51566], "temperature": 0.0, "avg_logprob": -0.10523728118545708, "compression_ratio": 1.7058823529411764, "no_speech_prob": 0.08471336215734482}, {"id": 326, "seek": 192002, "start": 1920.02, "end": 1926.26, "text": " might have the right host might have the right role. But if I don't have access, I don't have literal connect privilege to any", "tokens": [50364, 1062, 362, 264, 558, 3975, 1062, 362, 264, 558, 3090, 13, 583, 498, 286, 500, 380, 362, 2105, 11, 286, 500, 380, 362, 20411, 1745, 12122, 281, 604, 50676], "temperature": 0.0, "avg_logprob": -0.12480592727661133, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.19396494328975677}, {"id": 327, "seek": 192002, "start": 1926.26, "end": 1935.06, "text": " database, I can't get in. So there's this thing that like I almost said, symbiotic earlier, like roles and objects are", "tokens": [50676, 8149, 11, 286, 393, 380, 483, 294, 13, 407, 456, 311, 341, 551, 300, 411, 286, 1920, 848, 11, 43700, 6471, 299, 3071, 11, 411, 9604, 293, 6565, 366, 51116], "temperature": 0.0, "avg_logprob": -0.12480592727661133, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.19396494328975677}, {"id": 328, "seek": 192002, "start": 1935.06, "end": 1942.94, "text": " separate. But what's a little bit unique about Postgres, again, for me is you they need to exist together. That's why when", "tokens": [51116, 4994, 13, 583, 437, 311, 257, 707, 857, 3845, 466, 10223, 45189, 11, 797, 11, 337, 385, 307, 291, 436, 643, 281, 2514, 1214, 13, 663, 311, 983, 562, 51510], "temperature": 0.0, "avg_logprob": -0.12480592727661133, "compression_ratio": 1.6211453744493391, "no_speech_prob": 0.19396494328975677}, {"id": 329, "seek": 194294, "start": 1942.94, "end": 1951.3400000000001, "text": " you initiate a Postgres cluster, you get one database and one super user because that super user can now connect to the database", "tokens": [50364, 291, 31574, 257, 10223, 45189, 13630, 11, 291, 483, 472, 8149, 293, 472, 1687, 4195, 570, 300, 1687, 4195, 393, 586, 1745, 281, 264, 8149, 50784], "temperature": 0.0, "avg_logprob": -0.09887350123861562, "compression_ratio": 1.6478260869565218, "no_speech_prob": 0.4057287275791168}, {"id": 330, "seek": 194294, "start": 1951.3400000000001, "end": 1958.3400000000001, "text": " that's named after itself, blah, blah, blah. So there's this new one. Now the problem, though, is if all of my users are", "tokens": [50784, 300, 311, 4926, 934, 2564, 11, 12288, 11, 12288, 11, 12288, 13, 407, 456, 311, 341, 777, 472, 13, 823, 264, 1154, 11, 1673, 11, 307, 498, 439, 295, 452, 5022, 366, 51134], "temperature": 0.0, "avg_logprob": -0.09887350123861562, "compression_ratio": 1.6478260869565218, "no_speech_prob": 0.4057287275791168}, {"id": 331, "seek": 194294, "start": 1958.3400000000001, "end": 1966.1000000000001, "text": " creating all these different objects down here, right, they're all owned by different people. And as I said earlier, the owner of", "tokens": [51134, 4084, 439, 613, 819, 6565, 760, 510, 11, 558, 11, 436, 434, 439, 11684, 538, 819, 561, 13, 400, 382, 286, 848, 3071, 11, 264, 7289, 295, 51522], "temperature": 0.0, "avg_logprob": -0.09887350123861562, "compression_ratio": 1.6478260869565218, "no_speech_prob": 0.4057287275791168}, {"id": 332, "seek": 196610, "start": 1966.1, "end": 1974.06, "text": " the object is is like the super user of that object. And so then you start to get into conflict of who can use what and what can", "tokens": [50364, 264, 2657, 307, 307, 411, 264, 1687, 4195, 295, 300, 2657, 13, 400, 370, 550, 291, 722, 281, 483, 666, 6596, 295, 567, 393, 764, 437, 293, 437, 393, 50762], "temperature": 0.0, "avg_logprob": -0.1342824765337192, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.3547916114330292}, {"id": 333, "seek": 196610, "start": 1974.06, "end": 1979.86, "text": " you do in that object. So what I've learned over the years, now I work for a company called redgate, you may have heard of the", "tokens": [50762, 291, 360, 294, 300, 2657, 13, 407, 437, 286, 600, 3264, 670, 264, 924, 11, 586, 286, 589, 337, 257, 2237, 1219, 2182, 22514, 11, 291, 815, 362, 2198, 295, 264, 51052], "temperature": 0.0, "avg_logprob": -0.1342824765337192, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.3547916114330292}, {"id": 334, "seek": 196610, "start": 1979.86, "end": 1988.6599999999999, "text": " Flyway application, it's migration schema based migration, redgate owns that product and manages the open source portion of that. And we", "tokens": [51052, 25294, 676, 3861, 11, 309, 311, 17011, 34078, 2361, 17011, 11, 2182, 22514, 19143, 300, 1674, 293, 22489, 264, 1269, 4009, 8044, 295, 300, 13, 400, 321, 51492], "temperature": 0.0, "avg_logprob": -0.1342824765337192, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.3547916114330292}, {"id": 335, "seek": 196610, "start": 1988.6599999999999, "end": 1995.3799999999999, "text": " see lots of folks that are moving from other databases to Postgres. Yay, we're super excited about that. But again,", "tokens": [51492, 536, 3195, 295, 4024, 300, 366, 2684, 490, 661, 22380, 281, 10223, 45189, 13, 13268, 11, 321, 434, 1687, 2919, 466, 300, 13, 583, 797, 11, 51828], "temperature": 0.0, "avg_logprob": -0.1342824765337192, "compression_ratio": 1.6933333333333334, "no_speech_prob": 0.3547916114330292}, {"id": 336, "seek": 199538, "start": 1995.38, "end": 2003.2600000000002, "text": " understanding this ownership principle is so important. So they will, you know, go and create, they don't even realize what owner they're", "tokens": [50364, 3701, 341, 15279, 8665, 307, 370, 1021, 13, 407, 436, 486, 11, 291, 458, 11, 352, 293, 1884, 11, 436, 500, 380, 754, 4325, 437, 7289, 436, 434, 50758], "temperature": 0.0, "avg_logprob": -0.09968036043960436, "compression_ratio": 1.8215488215488216, "no_speech_prob": 0.005200895480811596}, {"id": 337, "seek": 199538, "start": 2003.2600000000002, "end": 2011.14, "text": " connecting and running these migration scripts as. And if the migration scripts don't explicitly modify ownership, all of a sudden they", "tokens": [50758, 11015, 293, 2614, 613, 17011, 23294, 382, 13, 400, 498, 264, 17011, 23294, 500, 380, 20803, 16927, 15279, 11, 439, 295, 257, 3990, 436, 51152], "temperature": 0.0, "avg_logprob": -0.09968036043960436, "compression_ratio": 1.8215488215488216, "no_speech_prob": 0.005200895480811596}, {"id": 338, "seek": 199538, "start": 2011.14, "end": 2017.3400000000001, "text": " have objects in the database that are run by multiple people because different people were running these migration scripts. And then you", "tokens": [51152, 362, 6565, 294, 264, 8149, 300, 366, 1190, 538, 3866, 561, 570, 819, 561, 645, 2614, 613, 17011, 23294, 13, 400, 550, 291, 51462], "temperature": 0.0, "avg_logprob": -0.09968036043960436, "compression_ratio": 1.8215488215488216, "no_speech_prob": 0.005200895480811596}, {"id": 339, "seek": 199538, "start": 2017.3400000000001, "end": 2025.14, "text": " get into a big issue because now someone wants to modify this table, we've turned off login for super user. And only that user can", "tokens": [51462, 483, 666, 257, 955, 2734, 570, 586, 1580, 2738, 281, 16927, 341, 3199, 11, 321, 600, 3574, 766, 24276, 337, 1687, 4195, 13, 400, 787, 300, 4195, 393, 51852], "temperature": 0.0, "avg_logprob": -0.09968036043960436, "compression_ratio": 1.8215488215488216, "no_speech_prob": 0.005200895480811596}, {"id": 340, "seek": 202514, "start": 2025.14, "end": 2034.42, "text": " modify the table. And you just get into this like roundabout, right? So what we tend, what I tend to like to tell people is particularly as", "tokens": [50364, 16927, 264, 3199, 13, 400, 291, 445, 483, 666, 341, 411, 3098, 21970, 11, 558, 30, 407, 437, 321, 3928, 11, 437, 286, 3928, 281, 411, 281, 980, 561, 307, 4098, 382, 50828], "temperature": 0.0, "avg_logprob": -0.1235757134177468, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.005369596648961306}, {"id": 341, "seek": 202514, "start": 2034.42, "end": 2040.66, "text": " you get up to your production database. Now with Flyway, what we would say when we help folks do this, we go through, you know, dev, we have a", "tokens": [50828, 291, 483, 493, 281, 428, 4265, 8149, 13, 823, 365, 25294, 676, 11, 437, 321, 576, 584, 562, 321, 854, 4024, 360, 341, 11, 321, 352, 807, 11, 291, 458, 11, 1905, 11, 321, 362, 257, 51140], "temperature": 0.0, "avg_logprob": -0.1235757134177468, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.005369596648961306}, {"id": 342, "seek": 202514, "start": 2040.66, "end": 2050.3, "text": " staging server. And often what we'll say, and I'm going to show you default privileges in a minute, is create run all of your scripts. Now again,", "tokens": [51140, 41085, 7154, 13, 400, 2049, 437, 321, 603, 584, 11, 293, 286, 478, 516, 281, 855, 291, 7576, 32588, 294, 257, 3456, 11, 307, 1884, 1190, 439, 295, 428, 23294, 13, 823, 797, 11, 51622], "temperature": 0.0, "avg_logprob": -0.1235757134177468, "compression_ratio": 1.5970149253731343, "no_speech_prob": 0.005369596648961306}, {"id": 343, "seek": 205030, "start": 2050.3, "end": 2060.26, "text": " if you do a dump, you'll see that after every object in a dump file, if you do the script, it postgres explicitly changes the owner. Now that's", "tokens": [50364, 498, 291, 360, 257, 11430, 11, 291, 603, 536, 300, 934, 633, 2657, 294, 257, 11430, 3991, 11, 498, 291, 360, 264, 5755, 11, 309, 2183, 45189, 20803, 2962, 264, 7289, 13, 823, 300, 311, 50862], "temperature": 0.0, "avg_logprob": -0.10916316292502663, "compression_ratio": 1.7886178861788617, "no_speech_prob": 0.09496055543422699}, {"id": 344, "seek": 205030, "start": 2060.26, "end": 2068.6200000000003, "text": " also where you get those error messages, if you don't have that owner on your machine. But the object was created, whoever creates the object, it", "tokens": [50862, 611, 689, 291, 483, 729, 6713, 7897, 11, 498, 291, 500, 380, 362, 300, 7289, 322, 428, 3479, 13, 583, 264, 2657, 390, 2942, 11, 11387, 7829, 264, 2657, 11, 309, 51280], "temperature": 0.0, "avg_logprob": -0.10916316292502663, "compression_ratio": 1.7886178861788617, "no_speech_prob": 0.09496055543422699}, {"id": 345, "seek": 205030, "start": 2068.6200000000003, "end": 2076.6200000000003, "text": " doesn't matter if it's for a backup script. If you ran a backup script from your server, and those objects were owned by Joe, and you go run it on the", "tokens": [51280, 1177, 380, 1871, 498, 309, 311, 337, 257, 14807, 5755, 13, 759, 291, 5872, 257, 14807, 5755, 490, 428, 7154, 11, 293, 729, 6565, 645, 11684, 538, 6807, 11, 293, 291, 352, 1190, 309, 322, 264, 51680], "temperature": 0.0, "avg_logprob": -0.10916316292502663, "compression_ratio": 1.7886178861788617, "no_speech_prob": 0.09496055543422699}, {"id": 346, "seek": 207662, "start": 2076.62, "end": 2085.38, "text": " other server connected as Mary, all of those objects would be connected, created as Mary, if you didn't explicitly change the ownership now. So that's what it's like this", "tokens": [50364, 661, 7154, 4582, 382, 6059, 11, 439, 295, 729, 6565, 576, 312, 4582, 11, 2942, 382, 6059, 11, 498, 291, 994, 380, 20803, 1319, 264, 15279, 586, 13, 407, 300, 311, 437, 309, 311, 411, 341, 50802], "temperature": 0.0, "avg_logprob": -0.14542431490761892, "compression_ratio": 1.721254355400697, "no_speech_prob": 0.0251428484916687}, {"id": 347, "seek": 207662, "start": 2085.38, "end": 2097.06, "text": " nuance, right? So we tend to recommend when you are actually going to production or even your staging server, you run those scripts as one group role, and you make sure", "tokens": [50802, 42625, 11, 558, 30, 407, 321, 3928, 281, 2748, 562, 291, 366, 767, 516, 281, 4265, 420, 754, 428, 41085, 7154, 11, 291, 1190, 729, 23294, 382, 472, 1594, 3090, 11, 293, 291, 652, 988, 51386], "temperature": 0.0, "avg_logprob": -0.14542431490761892, "compression_ratio": 1.721254355400697, "no_speech_prob": 0.0251428484916687}, {"id": 348, "seek": 207662, "start": 2097.06, "end": 2105.9, "text": " that group, you know, doesn't have things like select and delete, whatever, they are just allowed to create the objects. But you have other roles that are", "tokens": [51386, 300, 1594, 11, 291, 458, 11, 1177, 380, 362, 721, 411, 3048, 293, 12097, 11, 2035, 11, 436, 366, 445, 4350, 281, 1884, 264, 6565, 13, 583, 291, 362, 661, 9604, 300, 366, 51828], "temperature": 0.0, "avg_logprob": -0.14542431490761892, "compression_ratio": 1.721254355400697, "no_speech_prob": 0.0251428484916687}, {"id": 349, "seek": 210590, "start": 2105.9, "end": 2116.54, "text": " granting permission into those objects then, in a way that is accessible. And the beauty of doing that is you can still switch to that role, you'll see that in the demo I'll do in just a", "tokens": [50364, 50204, 11226, 666, 729, 6565, 550, 11, 294, 257, 636, 300, 307, 9515, 13, 400, 264, 6643, 295, 884, 300, 307, 291, 393, 920, 3679, 281, 300, 3090, 11, 291, 603, 536, 300, 294, 264, 10723, 286, 603, 360, 294, 445, 257, 50896], "temperature": 0.0, "avg_logprob": -0.12116734320376099, "compression_ratio": 1.8161764705882353, "no_speech_prob": 0.02587183751165867}, {"id": 350, "seek": 210590, "start": 2116.54, "end": 2125.86, "text": " minute. So if you needed to modify something about that, you can still set into that role, and then you know exactly which role you need to get to do the", "tokens": [50896, 3456, 13, 407, 498, 291, 2978, 281, 16927, 746, 466, 300, 11, 291, 393, 920, 992, 666, 300, 3090, 11, 293, 550, 291, 458, 2293, 597, 3090, 291, 643, 281, 483, 281, 360, 264, 51362], "temperature": 0.0, "avg_logprob": -0.12116734320376099, "compression_ratio": 1.8161764705882353, "no_speech_prob": 0.02587183751165867}, {"id": 351, "seek": 210590, "start": 2125.86, "end": 2135.86, "text": " modification. So this is a nuance here, and the value to this comes with default privileges. So as you'll see in the demo, again, I create an object like", "tokens": [51362, 26747, 13, 407, 341, 307, 257, 42625, 510, 11, 293, 264, 2158, 281, 341, 1487, 365, 7576, 32588, 13, 407, 382, 291, 603, 536, 294, 264, 10723, 11, 797, 11, 286, 1884, 364, 2657, 411, 51862], "temperature": 0.0, "avg_logprob": -0.12116734320376099, "compression_ratio": 1.8161764705882353, "no_speech_prob": 0.02587183751165867}, {"id": 352, "seek": 213586, "start": 2135.86, "end": 2151.2200000000003, "text": " table. Only I can modify that table. I don't, unless you're a super user, I don't care if we both are part of the same group roles, only I can modify that table unless we set it to a role that", "tokens": [50364, 3199, 13, 5686, 286, 393, 16927, 300, 3199, 13, 286, 500, 380, 11, 5969, 291, 434, 257, 1687, 4195, 11, 286, 500, 380, 1127, 498, 321, 1293, 366, 644, 295, 264, 912, 1594, 9604, 11, 787, 286, 393, 16927, 300, 3199, 5969, 321, 992, 309, 281, 257, 3090, 300, 51132], "temperature": 0.0, "avg_logprob": -0.1267191033614309, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.005802771542221308}, {"id": 353, "seek": 213586, "start": 2151.2200000000003, "end": 2159.2200000000003, "text": " both of us are a part of, and then both of us can be, can switch into. So this is just a really simple example. And I'll show you another one in the demo.", "tokens": [51132, 1293, 295, 505, 366, 257, 644, 295, 11, 293, 550, 1293, 295, 505, 393, 312, 11, 393, 3679, 666, 13, 407, 341, 307, 445, 257, 534, 2199, 1365, 13, 400, 286, 603, 855, 291, 1071, 472, 294, 264, 10723, 13, 51532], "temperature": 0.0, "avg_logprob": -0.1267191033614309, "compression_ratio": 1.6926829268292682, "no_speech_prob": 0.005802771542221308}, {"id": 354, "seek": 215922, "start": 2160.18, "end": 2169.98, "text": " Default privileges are way to say when I, as this user, so I'm connected, you guys are, is everything okay? Okay, they're staring at me like I'm doing something wrong.", "tokens": [50412, 9548, 5107, 32588, 366, 636, 281, 584, 562, 286, 11, 382, 341, 4195, 11, 370, 286, 478, 4582, 11, 291, 1074, 366, 11, 307, 1203, 1392, 30, 1033, 11, 436, 434, 18043, 412, 385, 411, 286, 478, 884, 746, 2085, 13, 50902], "temperature": 0.0, "avg_logprob": -0.15051145811338681, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.26484915614128113}, {"id": 355, "seek": 215922, "start": 2171.74, "end": 2185.3799999999997, "text": " The, so I create default privileges, I'm altering them, and I'm saying grant select on all tables to the role public. Now it could be any role, right, but I'm saying the public role. Now, anytime I create a table, if I had gone ahead of time and removed all the", "tokens": [50990, 440, 11, 370, 286, 1884, 7576, 32588, 11, 286, 478, 11337, 278, 552, 11, 293, 286, 478, 1566, 6386, 3048, 322, 439, 8020, 281, 264, 3090, 1908, 13, 823, 309, 727, 312, 604, 3090, 11, 558, 11, 457, 286, 478, 1566, 264, 1908, 3090, 13, 823, 11, 13038, 286, 1884, 257, 3199, 11, 498, 286, 632, 2780, 2286, 295, 565, 293, 7261, 439, 264, 51672], "temperature": 0.0, "avg_logprob": -0.15051145811338681, "compression_ratio": 1.6956521739130435, "no_speech_prob": 0.26484915614128113}, {"id": 356, "seek": 218538, "start": 2185.38, "end": 2208.86, "text": " privileges, whatever, anytime I, as whoever, whatever role I'm running that command as, every time I create a table from this point forward, everyone will be able to select because everyone's a member of public. Right, does that make sense? If I didn't do this, every time I create an object, I then have to explicitly grant the roles. That gets really tiresome.", "tokens": [50364, 32588, 11, 2035, 11, 13038, 286, 11, 382, 11387, 11, 2035, 3090, 286, 478, 2614, 300, 5622, 382, 11, 633, 565, 286, 1884, 257, 3199, 490, 341, 935, 2128, 11, 1518, 486, 312, 1075, 281, 3048, 570, 1518, 311, 257, 4006, 295, 1908, 13, 1779, 11, 775, 300, 652, 2020, 30, 759, 286, 994, 380, 360, 341, 11, 633, 565, 286, 1884, 364, 2657, 11, 286, 550, 362, 281, 20803, 6386, 264, 9604, 13, 663, 2170, 534, 13885, 423, 13, 51538], "temperature": 0.0, "avg_logprob": -0.16254019737243652, "compression_ratio": 1.6454545454545455, "no_speech_prob": 0.03110354207456112}, {"id": 357, "seek": 220886, "start": 2209.86, "end": 2227.86, "text": " Now the only nuance here, and I have been dealing with this, so again, Redgate has been doing a lot with Flyway and Postgres, and I've been trying to help them understand that only exists for, again, when I create the object. If I later go and modify this default privilege, nothing changes about the objects I created earlier.", "tokens": [50414, 823, 264, 787, 42625, 510, 11, 293, 286, 362, 668, 6260, 365, 341, 11, 370, 797, 11, 4477, 22514, 575, 668, 884, 257, 688, 365, 25294, 676, 293, 10223, 45189, 11, 293, 286, 600, 668, 1382, 281, 854, 552, 1223, 300, 787, 8198, 337, 11, 797, 11, 562, 286, 1884, 264, 2657, 13, 759, 286, 1780, 352, 293, 16927, 341, 7576, 12122, 11, 1825, 2962, 466, 264, 6565, 286, 2942, 3071, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16384694450779966, "compression_ratio": 1.5797101449275361, "no_speech_prob": 0.15160447359085083}, {"id": 358, "seek": 222786, "start": 2227.86, "end": 2247.86, "text": " You still have to go back and grant whatever you just modified to all of those other objects. Right, but it's super helpful. So from a migration perspective to just ease the management, what we tend to do is say, hey, make a group role that, you know, certain people are part of us, they can set to that role and modify the objects if they need to.", "tokens": [50364, 509, 920, 362, 281, 352, 646, 293, 6386, 2035, 291, 445, 15873, 281, 439, 295, 729, 661, 6565, 13, 1779, 11, 457, 309, 311, 1687, 4961, 13, 407, 490, 257, 17011, 4585, 281, 445, 12708, 264, 4592, 11, 437, 321, 3928, 281, 360, 307, 584, 11, 4177, 11, 652, 257, 1594, 3090, 300, 11, 291, 458, 11, 1629, 561, 366, 644, 295, 505, 11, 436, 393, 992, 281, 300, 3090, 293, 16927, 264, 6565, 498, 436, 643, 281, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11337240730843894, "compression_ratio": 1.729641693811075, "no_speech_prob": 0.5025155544281006}, {"id": 359, "seek": 222786, "start": 2248.86, "end": 2256.86, "text": " But then you know the owner of all the objects, and it's not necessarily the Postgres user. That's what most people end up doing on the cloud host environment or something like that.", "tokens": [51414, 583, 550, 291, 458, 264, 7289, 295, 439, 264, 6565, 11, 293, 309, 311, 406, 4725, 264, 10223, 45189, 4195, 13, 663, 311, 437, 881, 561, 917, 493, 884, 322, 264, 4588, 3975, 2823, 420, 746, 411, 300, 13, 51814], "temperature": 0.0, "avg_logprob": -0.11337240730843894, "compression_ratio": 1.729641693811075, "no_speech_prob": 0.5025155544281006}, {"id": 360, "seek": 225786, "start": 2258.86, "end": 2259.86, "text": " Any questions, yeah?", "tokens": [50414, 2639, 1651, 11, 1338, 30, 50464], "temperature": 0.0, "avg_logprob": -0.3615511178970337, "compression_ratio": 1.403361344537815, "no_speech_prob": 0.011753282509744167}, {"id": 361, "seek": 225786, "start": 2260.86, "end": 2271.86, "text": " Just about syntax, so first we have actually, who has privileges from equal sign and what privileges, and who has given these privileges, correct?", "tokens": [50514, 1449, 466, 28431, 11, 370, 700, 321, 362, 767, 11, 567, 575, 32588, 490, 2681, 1465, 293, 437, 32588, 11, 293, 567, 575, 2212, 613, 32588, 11, 3006, 30, 51064], "temperature": 0.0, "avg_logprob": -0.3615511178970337, "compression_ratio": 1.403361344537815, "no_speech_prob": 0.011753282509744167}, {"id": 362, "seek": 227186, "start": 2271.86, "end": 2285.86, "text": " Exactly. So this says that the user Postgres, the owner of this specific default privilege, anytime the Postgres creates a table where it just says equal, that's public, that's all.", "tokens": [50364, 7587, 13, 407, 341, 1619, 300, 264, 4195, 10223, 45189, 11, 264, 7289, 295, 341, 2685, 7576, 12122, 11, 13038, 264, 10223, 45189, 7829, 257, 3199, 689, 309, 445, 1619, 2681, 11, 300, 311, 1908, 11, 300, 311, 439, 13, 51064], "temperature": 0.0, "avg_logprob": -0.09141164184898458, "compression_ratio": 1.6554621848739495, "no_speech_prob": 0.23029613494873047}, {"id": 363, "seek": 227186, "start": 2286.86, "end": 2295.86, "text": " And so they have read access. The question was, I apologize, you know, basically what's being shown here. So when I create the default privilege, you know, the equal with nothing in front of it just means public.", "tokens": [51114, 400, 370, 436, 362, 1401, 2105, 13, 440, 1168, 390, 11, 286, 12328, 11, 291, 458, 11, 1936, 437, 311, 885, 4898, 510, 13, 407, 562, 286, 1884, 264, 7576, 12122, 11, 291, 458, 11, 264, 2681, 365, 1825, 294, 1868, 295, 309, 445, 1355, 1908, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09141164184898458, "compression_ratio": 1.6554621848739495, "no_speech_prob": 0.23029613494873047}, {"id": 364, "seek": 229586, "start": 2296.86, "end": 2305.86, "text": " And then you can name multiple roles. In this case it's just the owner obviously has all the privilege, and they always have all the privilege, right? Yeah.", "tokens": [50414, 400, 550, 291, 393, 1315, 3866, 9604, 13, 682, 341, 1389, 309, 311, 445, 264, 7289, 2745, 575, 439, 264, 12122, 11, 293, 436, 1009, 362, 439, 264, 12122, 11, 558, 30, 865, 13, 50864], "temperature": 0.0, "avg_logprob": -0.3121609221723743, "compression_ratio": 1.8372881355932202, "no_speech_prob": 0.041937727481126785}, {"id": 365, "seek": 229586, "start": 2306.86, "end": 2313.86, "text": " So do you think it's possible to have wild cards after like, you know, like, any database is structured if the user will have access to these types of privilege?", "tokens": [50914, 407, 360, 291, 519, 309, 311, 1944, 281, 362, 4868, 5632, 934, 411, 11, 291, 458, 11, 411, 11, 604, 8149, 307, 18519, 498, 264, 4195, 486, 362, 2105, 281, 613, 3467, 295, 12122, 30, 51264], "temperature": 0.0, "avg_logprob": -0.3121609221723743, "compression_ratio": 1.8372881355932202, "no_speech_prob": 0.041937727481126785}, {"id": 366, "seek": 229586, "start": 2314.86, "end": 2323.86, "text": " That's a great, so the question is, is it possible to have wild cards? And I think you're saying, like, if I create a default privilege, and I don't know if I said this earlier, and I apologize, this is per database, right?", "tokens": [51314, 663, 311, 257, 869, 11, 370, 264, 1168, 307, 11, 307, 309, 1944, 281, 362, 4868, 5632, 30, 400, 286, 519, 291, 434, 1566, 11, 411, 11, 498, 286, 1884, 257, 7576, 12122, 11, 293, 286, 500, 380, 458, 498, 286, 848, 341, 3071, 11, 293, 286, 12328, 11, 341, 307, 680, 8149, 11, 558, 30, 51764], "temperature": 0.0, "avg_logprob": -0.3121609221723743, "compression_ratio": 1.8372881355932202, "no_speech_prob": 0.041937727481126785}, {"id": 367, "seek": 232386, "start": 2323.86, "end": 2344.86, "text": " So if I create the default in the database, sorry, I don't think there is. I mean, again, you can create things like, in this case I said on tables, you can do things like on tables, on views, so you get a lot of the objects.", "tokens": [50364, 407, 498, 286, 1884, 264, 7576, 294, 264, 8149, 11, 2597, 11, 286, 500, 380, 519, 456, 307, 13, 286, 914, 11, 797, 11, 291, 393, 1884, 721, 411, 11, 294, 341, 1389, 286, 848, 322, 8020, 11, 291, 393, 360, 721, 411, 322, 8020, 11, 322, 6809, 11, 370, 291, 483, 257, 688, 295, 264, 6565, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12811440157603068, "compression_ratio": 1.6684782608695652, "no_speech_prob": 0.0049699596129357815}, {"id": 368, "seek": 232386, "start": 2345.86, "end": 2349.86, "text": " But I don't believe there's a way to say like a wild card across multiple things.", "tokens": [51464, 583, 286, 500, 380, 1697, 456, 311, 257, 636, 281, 584, 411, 257, 4868, 2920, 2108, 3866, 721, 13, 51664], "temperature": 0.0, "avg_logprob": -0.12811440157603068, "compression_ratio": 1.6684782608695652, "no_speech_prob": 0.0049699596129357815}, {"id": 369, "seek": 234986, "start": 2349.86, "end": 2359.86, "text": " So a great question, the question is, could you do this in the template? Yeah, you could. You could create your roles in the template database.", "tokens": [50364, 407, 257, 869, 1168, 11, 264, 1168, 307, 11, 727, 291, 360, 341, 294, 264, 12379, 30, 865, 11, 291, 727, 13, 509, 727, 1884, 428, 9604, 294, 264, 12379, 8149, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10442912725754726, "compression_ratio": 1.7604166666666667, "no_speech_prob": 0.014492137357592583}, {"id": 370, "seek": 234986, "start": 2360.86, "end": 2369.86, "text": " You could, for the roles that you want to use, set your default privileges, and if that all works out and you have all the roles and owners, every database you create is going to get that stuff.", "tokens": [50914, 509, 727, 11, 337, 264, 9604, 300, 291, 528, 281, 764, 11, 992, 428, 7576, 32588, 11, 293, 498, 300, 439, 1985, 484, 293, 291, 362, 439, 264, 9604, 293, 7710, 11, 633, 8149, 291, 1884, 307, 516, 281, 483, 300, 1507, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10442912725754726, "compression_ratio": 1.7604166666666667, "no_speech_prob": 0.014492137357592583}, {"id": 371, "seek": 236986, "start": 2370.86, "end": 2379.86, "text": " All right, I just really want to quickly run this demo, it's about five minutes, and so just so you can see it, because sometimes for me at least, that's just helped me see what's happening, right?", "tokens": [50414, 1057, 558, 11, 286, 445, 534, 528, 281, 2661, 1190, 341, 10723, 11, 309, 311, 466, 1732, 2077, 11, 293, 370, 445, 370, 291, 393, 536, 309, 11, 570, 2171, 337, 385, 412, 1935, 11, 300, 311, 445, 4254, 385, 536, 437, 311, 2737, 11, 558, 30, 50864], "temperature": 0.0, "avg_logprob": -0.144907968384879, "compression_ratio": 1.6729323308270676, "no_speech_prob": 0.3033556044101715}, {"id": 372, "seek": 236986, "start": 2380.86, "end": 2386.86, "text": " It's one thing to see slides, but just really quickly, so providing object access, because this is, again, this is where I see so many of the actual problems happen.", "tokens": [50914, 467, 311, 472, 551, 281, 536, 9788, 11, 457, 445, 534, 2661, 11, 370, 6530, 2657, 2105, 11, 570, 341, 307, 11, 797, 11, 341, 307, 689, 286, 536, 370, 867, 295, 264, 3539, 2740, 1051, 13, 51214], "temperature": 0.0, "avg_logprob": -0.144907968384879, "compression_ratio": 1.6729323308270676, "no_speech_prob": 0.3033556044101715}, {"id": 373, "seek": 236986, "start": 2387.86, "end": 2390.86, "text": " When you don't give someone a super user, all of a sudden things just go haywire.", "tokens": [51264, 1133, 291, 500, 380, 976, 1580, 257, 1687, 4195, 11, 439, 295, 257, 3990, 721, 445, 352, 4842, 42689, 13, 51414], "temperature": 0.0, "avg_logprob": -0.144907968384879, "compression_ratio": 1.6729323308270676, "no_speech_prob": 0.3033556044101715}, {"id": 374, "seek": 239086, "start": 2391.86, "end": 2399.86, "text": " And so you can either explicitly grant access every time to every kind of object and go for it. A lot of work, do what you want to do.", "tokens": [50414, 400, 370, 291, 393, 2139, 20803, 6386, 2105, 633, 565, 281, 633, 733, 295, 2657, 293, 352, 337, 309, 13, 316, 688, 295, 589, 11, 360, 437, 291, 528, 281, 360, 13, 50814], "temperature": 0.0, "avg_logprob": -0.0796952756245931, "compression_ratio": 1.6232558139534883, "no_speech_prob": 0.43651244044303894}, {"id": 375, "seek": 239086, "start": 2400.86, "end": 2411.86, "text": " You can alter default privileges, and now any time something is created in that database by that role, including something like migration scripts, they will inherit these privileges for whatever roles you assigned.", "tokens": [50864, 509, 393, 11337, 7576, 32588, 11, 293, 586, 604, 565, 746, 307, 2942, 294, 300, 8149, 538, 300, 3090, 11, 3009, 746, 411, 17011, 23294, 11, 436, 486, 21389, 613, 32588, 337, 2035, 9604, 291, 13279, 13, 51414], "temperature": 0.0, "avg_logprob": -0.0796952756245931, "compression_ratio": 1.6232558139534883, "no_speech_prob": 0.43651244044303894}, {"id": 376, "seek": 241186, "start": 2412.86, "end": 2429.86, "text": " You can then set role in the app, I'm going to show you that, so in Postgres you can say set role, so I could connect to the database, I could set, change my role for that session to the owner of the table so I can do something with it and modify the privileges and so forth.", "tokens": [50414, 509, 393, 550, 992, 3090, 294, 264, 724, 11, 286, 478, 516, 281, 855, 291, 300, 11, 370, 294, 10223, 45189, 291, 393, 584, 992, 3090, 11, 370, 286, 727, 1745, 281, 264, 8149, 11, 286, 727, 992, 11, 1319, 452, 3090, 337, 300, 5481, 281, 264, 7289, 295, 264, 3199, 370, 286, 393, 360, 746, 365, 309, 293, 16927, 264, 32588, 293, 370, 5220, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09151397504304584, "compression_ratio": 1.6592920353982301, "no_speech_prob": 0.31310367584228516}, {"id": 377, "seek": 241186, "start": 2430.86, "end": 2434.86, "text": " And then in Postgres 14 and above, we're starting to get some of these other attributes to do more.", "tokens": [51314, 400, 550, 294, 10223, 45189, 3499, 293, 3673, 11, 321, 434, 2891, 281, 483, 512, 295, 613, 661, 17212, 281, 360, 544, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09151397504304584, "compression_ratio": 1.6592920353982301, "no_speech_prob": 0.31310367584228516}, {"id": 378, "seek": 243486, "start": 2435.86, "end": 2444.86, "text": " I talked earlier about this, this is the object ownership thing in security. Again, there's a number of talks on this, I think I have an old one maybe linked on my blog somewhere.", "tokens": [50414, 286, 2825, 3071, 466, 341, 11, 341, 307, 264, 2657, 15279, 551, 294, 3825, 13, 3764, 11, 456, 311, 257, 1230, 295, 6686, 322, 341, 11, 286, 519, 286, 362, 364, 1331, 472, 1310, 9408, 322, 452, 6968, 4079, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14570999145507812, "compression_ratio": 1.6612244897959183, "no_speech_prob": 0.24474358558654785}, {"id": 379, "seek": 243486, "start": 2445.86, "end": 2447.86, "text": " So let's go ahead and quickly do the demo.", "tokens": [50914, 407, 718, 311, 352, 2286, 293, 2661, 360, 264, 10723, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14570999145507812, "compression_ratio": 1.6612244897959183, "no_speech_prob": 0.24474358558654785}, {"id": 380, "seek": 243486, "start": 2448.86, "end": 2450.86, "text": " So I have an empty database, this is going to be really quick.", "tokens": [51064, 407, 286, 362, 364, 6707, 8149, 11, 341, 307, 516, 281, 312, 534, 1702, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14570999145507812, "compression_ratio": 1.6612244897959183, "no_speech_prob": 0.24474358558654785}, {"id": 381, "seek": 243486, "start": 2451.86, "end": 2458.86, "text": " So I'm using dbeaver, I just like it because of the color coding stuff, just a little bit easier for you to see and show.", "tokens": [51214, 407, 286, 478, 1228, 274, 650, 20655, 11, 286, 445, 411, 309, 570, 295, 264, 2017, 17720, 1507, 11, 445, 257, 707, 857, 3571, 337, 291, 281, 536, 293, 855, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14570999145507812, "compression_ratio": 1.6612244897959183, "no_speech_prob": 0.24474358558654785}, {"id": 382, "seek": 245886, "start": 2459.86, "end": 2465.86, "text": " So the current role I'm currently connected as Postgres, so this session I initiated as a Postgres super user.", "tokens": [50414, 407, 264, 2190, 3090, 286, 478, 4362, 4582, 382, 10223, 45189, 11, 370, 341, 5481, 286, 28578, 382, 257, 10223, 45189, 1687, 4195, 13, 50714], "temperature": 0.0, "avg_logprob": -0.11163587679808167, "compression_ratio": 1.6281407035175879, "no_speech_prob": 0.11684747040271759}, {"id": 383, "seek": 245886, "start": 2466.86, "end": 2476.86, "text": " And I'm going to create a new schema, and I still have to do all the things I want to do, so I'm going to create a developer role, now it says no login, so what kind of role is this?", "tokens": [50764, 400, 286, 478, 516, 281, 1884, 257, 777, 34078, 11, 293, 286, 920, 362, 281, 360, 439, 264, 721, 286, 528, 281, 360, 11, 370, 286, 478, 516, 281, 1884, 257, 10754, 3090, 11, 586, 309, 1619, 572, 24276, 11, 370, 437, 733, 295, 3090, 307, 341, 30, 51264], "temperature": 0.0, "avg_logprob": -0.11163587679808167, "compression_ratio": 1.6281407035175879, "no_speech_prob": 0.11684747040271759}, {"id": 384, "seek": 245886, "start": 2477.86, "end": 2479.86, "text": " We consider this a group role.", "tokens": [51314, 492, 1949, 341, 257, 1594, 3090, 13, 51414], "temperature": 0.0, "avg_logprob": -0.11163587679808167, "compression_ratio": 1.6281407035175879, "no_speech_prob": 0.11684747040271759}, {"id": 385, "seek": 247986, "start": 2480.86, "end": 2491.86, "text": " And so the set role, if you say none, that will change the ownership of the current session back to whoever initiated that session.", "tokens": [50414, 400, 370, 264, 992, 3090, 11, 498, 291, 584, 6022, 11, 300, 486, 1319, 264, 15279, 295, 264, 2190, 5481, 646, 281, 11387, 28578, 300, 5481, 13, 50964], "temperature": 0.0, "avg_logprob": -0.09068675835927327, "compression_ratio": 1.6348547717842323, "no_speech_prob": 0.028367619961500168}, {"id": 386, "seek": 247986, "start": 2492.86, "end": 2496.86, "text": " So as Postgres, I just had this here because I think earlier I had said to something else.", "tokens": [51014, 407, 382, 10223, 45189, 11, 286, 445, 632, 341, 510, 570, 286, 519, 3071, 286, 632, 848, 281, 746, 1646, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09068675835927327, "compression_ratio": 1.6348547717842323, "no_speech_prob": 0.028367619961500168}, {"id": 387, "seek": 247986, "start": 2497.86, "end": 2506.86, "text": " And so for that role, we're going to do this, we're going to grant select, insert, update, delete on all tables in the demo app schema to this group role called developer.", "tokens": [51264, 400, 370, 337, 300, 3090, 11, 321, 434, 516, 281, 360, 341, 11, 321, 434, 516, 281, 6386, 3048, 11, 8969, 11, 5623, 11, 12097, 322, 439, 8020, 294, 264, 10723, 724, 34078, 281, 341, 1594, 3090, 1219, 10754, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09068675835927327, "compression_ratio": 1.6348547717842323, "no_speech_prob": 0.028367619961500168}, {"id": 388, "seek": 250686, "start": 2506.86, "end": 2510.86, "text": " Now it can't login, so it can't really do anything, right?", "tokens": [50364, 823, 309, 393, 380, 24276, 11, 370, 309, 393, 380, 534, 360, 1340, 11, 558, 30, 50564], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 389, "seek": 250686, "start": 2511.86, "end": 2514.86, "text": " And then we're going to say grant create and usage to this role.", "tokens": [50614, 400, 550, 321, 434, 516, 281, 584, 6386, 1884, 293, 14924, 281, 341, 3090, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 390, "seek": 250686, "start": 2516.86, "end": 2521.86, "text": " And then we're going to create our developer users, it doesn't really matter, you know, anything here doesn't matter.", "tokens": [50864, 400, 550, 321, 434, 516, 281, 1884, 527, 10754, 5022, 11, 309, 1177, 380, 534, 1871, 11, 291, 458, 11, 1340, 510, 1177, 380, 1871, 13, 51114], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 391, "seek": 250686, "start": 2522.86, "end": 2524.86, "text": " Oops, I am not hitting, am I hitting the right keys?", "tokens": [51164, 21726, 11, 286, 669, 406, 8850, 11, 669, 286, 8850, 264, 558, 9317, 30, 51264], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 392, "seek": 250686, "start": 2525.86, "end": 2526.86, "text": " Oh, my apologies.", "tokens": [51314, 876, 11, 452, 34929, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 393, "seek": 250686, "start": 2527.86, "end": 2530.86, "text": " So dbeaver, I can just say control, enter, and it will run the commands.", "tokens": [51414, 407, 274, 650, 20655, 11, 286, 393, 445, 584, 1969, 11, 3242, 11, 293, 309, 486, 1190, 264, 16901, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1546860088001598, "compression_ratio": 1.696035242290749, "no_speech_prob": 0.006781724281609058}, {"id": 394, "seek": 253086, "start": 2530.86, "end": 2533.86, "text": " So I've created two users, and now the magic.", "tokens": [50364, 407, 286, 600, 2942, 732, 5022, 11, 293, 586, 264, 5585, 13, 50514], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 395, "seek": 253086, "start": 2535.86, "end": 2541.86, "text": " I can grant those users access privilege into that role, that group.", "tokens": [50614, 286, 393, 6386, 729, 5022, 2105, 12122, 666, 300, 3090, 11, 300, 1594, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 396, "seek": 253086, "start": 2542.86, "end": 2546.86, "text": " Now at this moment, now that they've been given granted access, what does that mean about their privilege?", "tokens": [50964, 823, 412, 341, 1623, 11, 586, 300, 436, 600, 668, 2212, 12344, 2105, 11, 437, 775, 300, 914, 466, 641, 12122, 30, 51164], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 397, "seek": 253086, "start": 2547.86, "end": 2549.86, "text": " I have not granted any privileges to those users yet.", "tokens": [51214, 286, 362, 406, 12344, 604, 32588, 281, 729, 5022, 1939, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 398, "seek": 253086, "start": 2550.86, "end": 2551.86, "text": " But what do they now have?", "tokens": [51364, 583, 437, 360, 436, 586, 362, 30, 51414], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 399, "seek": 253086, "start": 2553.86, "end": 2556.86, "text": " Select, insert, update, delete on all tables, and they have create and usage, right?", "tokens": [51514, 13638, 11, 8969, 11, 5623, 11, 12097, 322, 439, 8020, 11, 293, 436, 362, 1884, 293, 14924, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 400, "seek": 253086, "start": 2557.86, "end": 2559.86, "text": " So now without doing anything else, they can use that schema.", "tokens": [51714, 407, 586, 1553, 884, 1340, 1646, 11, 436, 393, 764, 300, 34078, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10745285268415485, "compression_ratio": 1.774703557312253, "no_speech_prob": 0.08862359076738358}, {"id": 401, "seek": 256086, "start": 2561.86, "end": 2566.86, "text": " And we can see if I, so now I can set role.", "tokens": [50414, 400, 321, 393, 536, 498, 286, 11, 370, 586, 286, 393, 992, 3090, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10756135838372367, "compression_ratio": 1.7261410788381744, "no_speech_prob": 0.0018952733371406794}, {"id": 402, "seek": 256086, "start": 2567.86, "end": 2571.86, "text": " So this, I could have multiple tabs, I could have connected as dev one on one tab and dev two on another tab.", "tokens": [50714, 407, 341, 11, 286, 727, 362, 3866, 20743, 11, 286, 727, 362, 4582, 382, 1905, 472, 322, 472, 4421, 293, 1905, 732, 322, 1071, 4421, 13, 50914], "temperature": 0.0, "avg_logprob": -0.10756135838372367, "compression_ratio": 1.7261410788381744, "no_speech_prob": 0.0018952733371406794}, {"id": 403, "seek": 256086, "start": 2572.86, "end": 2580.86, "text": " In Postgres, when you say set role to a role, it's basically like switching user, there's one or two things that don't happen at that moment.", "tokens": [50964, 682, 10223, 45189, 11, 562, 291, 584, 992, 3090, 281, 257, 3090, 11, 309, 311, 1936, 411, 16493, 4195, 11, 456, 311, 472, 420, 732, 721, 300, 500, 380, 1051, 412, 300, 1623, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10756135838372367, "compression_ratio": 1.7261410788381744, "no_speech_prob": 0.0018952733371406794}, {"id": 404, "seek": 256086, "start": 2581.86, "end": 2586.86, "text": " One is, remember earlier I said you alter, you can alter some settings, those things don't get run when you do set role.", "tokens": [51414, 1485, 307, 11, 1604, 3071, 286, 848, 291, 11337, 11, 291, 393, 11337, 512, 6257, 11, 729, 721, 500, 380, 483, 1190, 562, 291, 360, 992, 3090, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10756135838372367, "compression_ratio": 1.7261410788381744, "no_speech_prob": 0.0018952733371406794}, {"id": 405, "seek": 258686, "start": 2586.86, "end": 2596.86, "text": " But otherwise, if I'm allowed, I'm running a super user so I can do this, if I have membership in that role, I can set to it and act as that role for a little bit.", "tokens": [50364, 583, 5911, 11, 498, 286, 478, 4350, 11, 286, 478, 2614, 257, 1687, 4195, 370, 286, 393, 360, 341, 11, 498, 286, 362, 16560, 294, 300, 3090, 11, 286, 393, 992, 281, 309, 293, 605, 382, 300, 3090, 337, 257, 707, 857, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08482961654663086, "compression_ratio": 1.7440944881889764, "no_speech_prob": 0.03251606971025467}, {"id": 406, "seek": 258686, "start": 2597.86, "end": 2598.86, "text": " And then I can go back.", "tokens": [50914, 400, 550, 286, 393, 352, 646, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08482961654663086, "compression_ratio": 1.7440944881889764, "no_speech_prob": 0.03251606971025467}, {"id": 407, "seek": 258686, "start": 2599.86, "end": 2606.86, "text": " So I'm going to set to dev one, so this is as if I had connected as dev one to the database now, and I'm going to create a table in that new schema, because I can.", "tokens": [51014, 407, 286, 478, 516, 281, 992, 281, 1905, 472, 11, 370, 341, 307, 382, 498, 286, 632, 4582, 382, 1905, 472, 281, 264, 8149, 586, 11, 293, 286, 478, 516, 281, 1884, 257, 3199, 294, 300, 777, 34078, 11, 570, 286, 393, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08482961654663086, "compression_ratio": 1.7440944881889764, "no_speech_prob": 0.03251606971025467}, {"id": 408, "seek": 258686, "start": 2607.86, "end": 2611.86, "text": " Again, we haven't granted anything to that user explicitly except membership in this group.", "tokens": [51414, 3764, 11, 321, 2378, 380, 12344, 1340, 281, 300, 4195, 20803, 3993, 16560, 294, 341, 1594, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08482961654663086, "compression_ratio": 1.7440944881889764, "no_speech_prob": 0.03251606971025467}, {"id": 409, "seek": 261186, "start": 2612.86, "end": 2616.86, "text": " And now we'll see, oh, I need to create the table, don't I?", "tokens": [50414, 400, 586, 321, 603, 536, 11, 1954, 11, 286, 643, 281, 1884, 264, 3199, 11, 500, 380, 286, 30, 50614], "temperature": 0.0, "avg_logprob": -0.26041200425889754, "compression_ratio": 1.2440944881889764, "no_speech_prob": 0.06787332892417908}, {"id": 410, "seek": 261186, "start": 2617.86, "end": 2620.86, "text": " What's that?", "tokens": [50664, 708, 311, 300, 30, 50814], "temperature": 0.0, "avg_logprob": -0.26041200425889754, "compression_ratio": 1.2440944881889764, "no_speech_prob": 0.06787332892417908}, {"id": 411, "seek": 261186, "start": 2621.86, "end": 2624.86, "text": " I didn't, what?", "tokens": [50864, 286, 994, 380, 11, 437, 30, 51014], "temperature": 0.0, "avg_logprob": -0.26041200425889754, "compression_ratio": 1.2440944881889764, "no_speech_prob": 0.06787332892417908}, {"id": 412, "seek": 261186, "start": 2625.86, "end": 2630.86, "text": " So here, I'll just drop this because that's going to miss everything.", "tokens": [51064, 407, 510, 11, 286, 603, 445, 3270, 341, 570, 300, 311, 516, 281, 1713, 1203, 13, 51314], "temperature": 0.0, "avg_logprob": -0.26041200425889754, "compression_ratio": 1.2440944881889764, "no_speech_prob": 0.06787332892417908}, {"id": 413, "seek": 264186, "start": 2642.86, "end": 2643.86, "text": " Yes.", "tokens": [50414, 1079, 13, 50464], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 414, "seek": 264186, "start": 2648.86, "end": 2649.86, "text": " Ah.", "tokens": [50714, 2438, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 415, "seek": 264186, "start": 2650.86, "end": 2651.86, "text": " Alright.", "tokens": [50814, 2798, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 416, "seek": 264186, "start": 2653.86, "end": 2654.86, "text": " Come on.", "tokens": [50964, 2492, 322, 13, 51014], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 417, "seek": 264186, "start": 2655.86, "end": 2656.86, "text": " Yes.", "tokens": [51064, 1079, 13, 51114], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 418, "seek": 264186, "start": 2657.86, "end": 2658.86, "text": " Does not exist.", "tokens": [51164, 4402, 406, 2514, 13, 51214], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 419, "seek": 264186, "start": 2658.86, "end": 2665.86, "text": " Okay, maybe I, well, if this doesn't go, then we'll just move on and I'll show you what I can.", "tokens": [51214, 1033, 11, 1310, 286, 11, 731, 11, 498, 341, 1177, 380, 352, 11, 550, 321, 603, 445, 1286, 322, 293, 286, 603, 855, 291, 437, 286, 393, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 420, "seek": 264186, "start": 2669.86, "end": 2670.86, "text": " Alright, there we go.", "tokens": [51764, 2798, 11, 456, 321, 352, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16388881740285388, "compression_ratio": 1.2615384615384615, "no_speech_prob": 0.08136135339736938}, {"id": 421, "seek": 267086, "start": 2670.86, "end": 2676.86, "text": " So now I can see that, oh my goodness, my hands are not hitting the right keys here.", "tokens": [50364, 407, 586, 286, 393, 536, 300, 11, 1954, 452, 8387, 11, 452, 2377, 366, 406, 8850, 264, 558, 9317, 510, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 422, "seek": 267086, "start": 2676.86, "end": 2679.86, "text": " So I have this table and the owner is Postgres.", "tokens": [50664, 407, 286, 362, 341, 3199, 293, 264, 7289, 307, 10223, 45189, 13, 50814], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 423, "seek": 267086, "start": 2680.86, "end": 2687.86, "text": " So now I set my role to dev two and I try and alter that table.", "tokens": [50864, 407, 586, 286, 992, 452, 3090, 281, 1905, 732, 293, 286, 853, 293, 11337, 300, 3199, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 424, "seek": 267086, "start": 2688.86, "end": 2689.86, "text": " Of course I can't.", "tokens": [51264, 2720, 1164, 286, 393, 380, 13, 51314], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 425, "seek": 267086, "start": 2689.86, "end": 2691.86, "text": " I don't have permission to do that because Postgres created it.", "tokens": [51314, 286, 500, 380, 362, 11226, 281, 360, 300, 570, 10223, 45189, 2942, 309, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 426, "seek": 267086, "start": 2691.86, "end": 2693.86, "text": " They didn't give me permission.", "tokens": [51414, 814, 994, 380, 976, 385, 11226, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09228313362205422, "compression_ratio": 1.6030927835051547, "no_speech_prob": 0.003588124644011259}, {"id": 427, "seek": 269386, "start": 2693.86, "end": 2696.86, "text": " So I'm going to go ahead and drop that table.", "tokens": [50364, 407, 286, 478, 516, 281, 352, 2286, 293, 3270, 300, 3199, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 428, "seek": 269386, "start": 2696.86, "end": 2700.86, "text": " I could also just alter the, I could just alter the owner.", "tokens": [50514, 286, 727, 611, 445, 11337, 264, 11, 286, 727, 445, 11337, 264, 7289, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 429, "seek": 269386, "start": 2700.86, "end": 2703.86, "text": " What I'm going to do this time is I'm going to set the role to developer.", "tokens": [50714, 708, 286, 478, 516, 281, 360, 341, 565, 307, 286, 478, 516, 281, 992, 264, 3090, 281, 10754, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 430, "seek": 269386, "start": 2703.86, "end": 2709.86, "text": " This is the, no, again, it can't log in, but I can set the role to, I have access to developer or I'm super user.", "tokens": [50864, 639, 307, 264, 11, 572, 11, 797, 11, 309, 393, 380, 3565, 294, 11, 457, 286, 393, 992, 264, 3090, 281, 11, 286, 362, 2105, 281, 10754, 420, 286, 478, 1687, 4195, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 431, "seek": 269386, "start": 2709.86, "end": 2711.86, "text": " So I'm now, now I'm developer.", "tokens": [51164, 407, 286, 478, 586, 11, 586, 286, 478, 10754, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 432, "seek": 269386, "start": 2711.86, "end": 2717.86, "text": " I create that same table and now we can see that it's owned by developer.", "tokens": [51264, 286, 1884, 300, 912, 3199, 293, 586, 321, 393, 536, 300, 309, 311, 11684, 538, 10754, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 433, "seek": 269386, "start": 2717.86, "end": 2719.86, "text": " Okay, what does that really do for us?", "tokens": [51564, 1033, 11, 437, 775, 300, 534, 360, 337, 505, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1065908825124493, "compression_ratio": 1.9039301310043668, "no_speech_prob": 0.04203055426478386}, {"id": 434, "seek": 271986, "start": 2719.86, "end": 2724.86, "text": " Well, now I can go back to dev two and I can try and alter that table.", "tokens": [50364, 1042, 11, 586, 286, 393, 352, 646, 281, 1905, 732, 293, 286, 393, 853, 293, 11337, 300, 3199, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 435, "seek": 271986, "start": 2726.86, "end": 2728.86, "text": " And of course this doesn't work.", "tokens": [50714, 400, 295, 1164, 341, 1177, 380, 589, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 436, "seek": 271986, "start": 2728.86, "end": 2729.86, "text": " Maybe I didn't.", "tokens": [50814, 2704, 286, 994, 380, 13, 50864], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 437, "seek": 271986, "start": 2729.86, "end": 2733.86, "text": " What's that?", "tokens": [50864, 708, 311, 300, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 438, "seek": 271986, "start": 2733.86, "end": 2738.86, "text": " Oh, I didn't.", "tokens": [51064, 876, 11, 286, 994, 380, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 439, "seek": 271986, "start": 2738.86, "end": 2739.86, "text": " Okay.", "tokens": [51314, 1033, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 440, "seek": 271986, "start": 2739.86, "end": 2743.86, "text": " Let me just talk you through this rather than, man, I literally ran through this five times today.", "tokens": [51364, 961, 385, 445, 751, 291, 807, 341, 2831, 813, 11, 587, 11, 286, 3736, 5872, 807, 341, 1732, 1413, 965, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 441, "seek": 271986, "start": 2743.86, "end": 2744.86, "text": " My apologies.", "tokens": [51564, 1222, 34929, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1853886648666027, "compression_ratio": 1.4640883977900552, "no_speech_prob": 0.0031225092243403196}, {"id": 442, "seek": 274486, "start": 2745.86, "end": 2755.86, "text": " The big point here is as we go down through, as long as the user is a member of that group and that group created the objects,", "tokens": [50414, 440, 955, 935, 510, 307, 382, 321, 352, 760, 807, 11, 382, 938, 382, 264, 4195, 307, 257, 4006, 295, 300, 1594, 293, 300, 1594, 2942, 264, 6565, 11, 50914], "temperature": 0.0, "avg_logprob": -0.10777748281305487, "compression_ratio": 1.6978723404255318, "no_speech_prob": 0.007224676664918661}, {"id": 443, "seek": 274486, "start": 2755.86, "end": 2759.86, "text": " I can do the privileges I'm allowed to do on that object then.", "tokens": [50914, 286, 393, 360, 264, 32588, 286, 478, 4350, 281, 360, 322, 300, 2657, 550, 13, 51114], "temperature": 0.0, "avg_logprob": -0.10777748281305487, "compression_ratio": 1.6978723404255318, "no_speech_prob": 0.007224676664918661}, {"id": 444, "seek": 274486, "start": 2759.86, "end": 2761.86, "text": " All right, so it's a way to let me do some stuff.", "tokens": [51114, 1057, 558, 11, 370, 309, 311, 257, 636, 281, 718, 385, 360, 512, 1507, 13, 51214], "temperature": 0.0, "avg_logprob": -0.10777748281305487, "compression_ratio": 1.6978723404255318, "no_speech_prob": 0.007224676664918661}, {"id": 445, "seek": 274486, "start": 2761.86, "end": 2768.86, "text": " Now, some things I may not be able to do, I might have to switch into that role to do some alter things like that, right?", "tokens": [51214, 823, 11, 512, 721, 286, 815, 406, 312, 1075, 281, 360, 11, 286, 1062, 362, 281, 3679, 666, 300, 3090, 281, 360, 512, 11337, 721, 411, 300, 11, 558, 30, 51564], "temperature": 0.0, "avg_logprob": -0.10777748281305487, "compression_ratio": 1.6978723404255318, "no_speech_prob": 0.007224676664918661}, {"id": 446, "seek": 274486, "start": 2768.86, "end": 2770.86, "text": " If I want to alter the object itself.", "tokens": [51564, 759, 286, 528, 281, 11337, 264, 2657, 2564, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10777748281305487, "compression_ratio": 1.6978723404255318, "no_speech_prob": 0.007224676664918661}, {"id": 447, "seek": 277086, "start": 2771.86, "end": 2778.86, "text": " And so, yeah, I see, man, that's really crazy.", "tokens": [50414, 400, 370, 11, 1338, 11, 286, 536, 11, 587, 11, 300, 311, 534, 3219, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 448, "seek": 277086, "start": 2778.86, "end": 2784.86, "text": " Anyway, the main, hate when a demo fails, right?", "tokens": [50764, 5684, 11, 264, 2135, 11, 4700, 562, 257, 10723, 18199, 11, 558, 30, 51064], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 449, "seek": 277086, "start": 2784.86, "end": 2787.86, "text": " The main point is there's like two recordings of this.", "tokens": [51064, 440, 2135, 935, 307, 456, 311, 411, 732, 25162, 295, 341, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 450, "seek": 277086, "start": 2787.86, "end": 2789.86, "text": " You can see this run through if you want.", "tokens": [51214, 509, 393, 536, 341, 1190, 807, 498, 291, 528, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 451, "seek": 277086, "start": 2789.86, "end": 2793.86, "text": " It's just to say again, you have to grant specific privileges.", "tokens": [51314, 467, 311, 445, 281, 584, 797, 11, 291, 362, 281, 6386, 2685, 32588, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 452, "seek": 277086, "start": 2793.86, "end": 2798.86, "text": " I was going to come down here to the default privileges and show again that once you set something like the default privilege,", "tokens": [51514, 286, 390, 516, 281, 808, 760, 510, 281, 264, 7576, 32588, 293, 855, 797, 300, 1564, 291, 992, 746, 411, 264, 7576, 12122, 11, 51764], "temperature": 0.0, "avg_logprob": -0.1038823595233992, "compression_ratio": 1.625531914893617, "no_speech_prob": 0.0040672579780220985}, {"id": 453, "seek": 279886, "start": 2798.86, "end": 2808.86, "text": " as long as you create those objects with that role, they will get whatever privileges you said to the roles that you provided.", "tokens": [50364, 382, 938, 382, 291, 1884, 729, 6565, 365, 300, 3090, 11, 436, 486, 483, 2035, 32588, 291, 848, 281, 264, 9604, 300, 291, 5649, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 454, "seek": 279886, "start": 2808.86, "end": 2809.86, "text": " And so, it's just a way.", "tokens": [50864, 400, 370, 11, 309, 311, 445, 257, 636, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 455, "seek": 279886, "start": 2809.86, "end": 2811.86, "text": " So in this case, it was just a read on the report user.", "tokens": [50914, 407, 294, 341, 1389, 11, 309, 390, 445, 257, 1401, 322, 264, 2275, 4195, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 456, "seek": 279886, "start": 2811.86, "end": 2814.86, "text": " I want them to be able to read from every table.", "tokens": [51014, 286, 528, 552, 281, 312, 1075, 281, 1401, 490, 633, 3199, 13, 51164], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 457, "seek": 279886, "start": 2814.86, "end": 2819.86, "text": " If I'm not using Postgres 14 and above, I would have to make sure that they have select on all the tables.", "tokens": [51164, 759, 286, 478, 406, 1228, 10223, 45189, 3499, 293, 3673, 11, 286, 576, 362, 281, 652, 988, 300, 436, 362, 3048, 322, 439, 264, 8020, 13, 51414], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 458, "seek": 279886, "start": 2819.86, "end": 2824.86, "text": " Setting a default privilege is one of the easiest ways to do that.", "tokens": [51414, 21063, 257, 7576, 12122, 307, 472, 295, 264, 12889, 2098, 281, 360, 300, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08763991646144702, "compression_ratio": 1.6602316602316602, "no_speech_prob": 0.009536650031805038}, {"id": 459, "seek": 282486, "start": 2824.86, "end": 2825.86, "text": " All right.", "tokens": [50364, 1057, 558, 13, 50414], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 460, "seek": 282486, "start": 2825.86, "end": 2828.86, "text": " So last thing, go back.", "tokens": [50414, 407, 1036, 551, 11, 352, 646, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 461, "seek": 282486, "start": 2828.86, "end": 2830.86, "text": " Demo fail.", "tokens": [50564, 4686, 78, 3061, 13, 50664], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 462, "seek": 282486, "start": 2830.86, "end": 2832.86, "text": " We'll have to get that end of the time.", "tokens": [50664, 492, 603, 362, 281, 483, 300, 917, 295, 264, 565, 13, 50764], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 463, "seek": 282486, "start": 2832.86, "end": 2837.86, "text": " Just to really quickly bring up predefined roles.", "tokens": [50764, 1449, 281, 534, 2661, 1565, 493, 659, 37716, 9604, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 464, "seek": 282486, "start": 2837.86, "end": 2841.86, "text": " So predefined roles have existed for a while and Postgres 14 and above.", "tokens": [51014, 407, 659, 37716, 9604, 362, 13135, 337, 257, 1339, 293, 10223, 45189, 3499, 293, 3673, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 465, "seek": 282486, "start": 2841.86, "end": 2846.86, "text": " There's a lot that's been done to try and do things, provide roles that for management purposes.", "tokens": [51214, 821, 311, 257, 688, 300, 311, 668, 1096, 281, 853, 293, 360, 721, 11, 2893, 9604, 300, 337, 4592, 9932, 13, 51464], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 466, "seek": 282486, "start": 2846.86, "end": 2848.86, "text": " So you don't have to be a super user.", "tokens": [51464, 407, 291, 500, 380, 362, 281, 312, 257, 1687, 4195, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 467, "seek": 282486, "start": 2848.86, "end": 2850.86, "text": " I gave the example earlier of checkpoint, right?", "tokens": [51564, 286, 2729, 264, 1365, 3071, 295, 42269, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.1308874450953661, "compression_ratio": 1.564, "no_speech_prob": 0.001866186154074967}, {"id": 468, "seek": 285086, "start": 2850.86, "end": 2852.86, "text": " So now you can give someone this checkpoint.", "tokens": [50364, 407, 586, 291, 393, 976, 1580, 341, 42269, 13, 50464], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 469, "seek": 285086, "start": 2852.86, "end": 2854.86, "text": " We call them predefined roles.", "tokens": [50464, 492, 818, 552, 659, 37716, 9604, 13, 50564], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 470, "seek": 285086, "start": 2854.86, "end": 2860.86, "text": " You can grant them membership into that role and then that user could run a checkpoint.", "tokens": [50564, 509, 393, 6386, 552, 16560, 666, 300, 3090, 293, 550, 300, 4195, 727, 1190, 257, 42269, 13, 50864], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 471, "seek": 285086, "start": 2860.86, "end": 2861.86, "text": " Things like read all data.", "tokens": [50864, 9514, 411, 1401, 439, 1412, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 472, "seek": 285086, "start": 2861.86, "end": 2862.86, "text": " This has been a problem for a long time.", "tokens": [50914, 639, 575, 668, 257, 1154, 337, 257, 938, 565, 13, 50964], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 473, "seek": 285086, "start": 2862.86, "end": 2869.86, "text": " So starting with Postgres 14, I think it was, we had the read all tables and the write all tables.", "tokens": [50964, 407, 2891, 365, 10223, 45189, 3499, 11, 286, 519, 309, 390, 11, 321, 632, 264, 1401, 439, 8020, 293, 264, 2464, 439, 8020, 13, 51314], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 474, "seek": 285086, "start": 2869.86, "end": 2874.86, "text": " So if you just wanted someone to be able to read all tables, in this case, in all databases,", "tokens": [51314, 407, 498, 291, 445, 1415, 1580, 281, 312, 1075, 281, 1401, 439, 8020, 11, 294, 341, 1389, 11, 294, 439, 22380, 11, 51564], "temperature": 0.0, "avg_logprob": -0.08618158907503695, "compression_ratio": 1.7336065573770492, "no_speech_prob": 0.005549682304263115}, {"id": 475, "seek": 287486, "start": 2874.86, "end": 2884.86, "text": " because it's a role there, you could now create this, you know, grant them access into this.", "tokens": [50364, 570, 309, 311, 257, 3090, 456, 11, 291, 727, 586, 1884, 341, 11, 291, 458, 11, 6386, 552, 2105, 666, 341, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12481809545446325, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.019992530345916748}, {"id": 476, "seek": 287486, "start": 2884.86, "end": 2887.86, "text": " Here are the current predefined roles.", "tokens": [50864, 1692, 366, 264, 2190, 659, 37716, 9604, 13, 51014], "temperature": 0.0, "avg_logprob": -0.12481809545446325, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.019992530345916748}, {"id": 477, "seek": 287486, "start": 2887.86, "end": 2890.86, "text": " This is updated to 16.", "tokens": [51014, 639, 307, 10588, 281, 3165, 13, 51164], "temperature": 0.0, "avg_logprob": -0.12481809545446325, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.019992530345916748}, {"id": 478, "seek": 287486, "start": 2890.86, "end": 2896.86, "text": " I believe the one that's different here, I knew earlier and right now I can't find it.", "tokens": [51164, 286, 1697, 264, 472, 300, 311, 819, 510, 11, 286, 2586, 3071, 293, 558, 586, 286, 393, 380, 915, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.12481809545446325, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.019992530345916748}, {"id": 479, "seek": 287486, "start": 2896.86, "end": 2898.86, "text": " But this is where you can do things like read servers.", "tokens": [51464, 583, 341, 307, 689, 291, 393, 360, 721, 411, 1401, 15909, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12481809545446325, "compression_ratio": 1.5179487179487179, "no_speech_prob": 0.019992530345916748}, {"id": 480, "seek": 289886, "start": 2898.86, "end": 2904.86, "text": " So a lot of monitoring programs now require you to be able to read the log or to read files from disk.", "tokens": [50364, 407, 257, 688, 295, 11028, 4268, 586, 3651, 291, 281, 312, 1075, 281, 1401, 264, 3565, 420, 281, 1401, 7098, 490, 12355, 13, 50664], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 481, "seek": 289886, "start": 2904.86, "end": 2911.86, "text": " Well, if you don't want super user to connect, you could grant your monitoring role something like read server files", "tokens": [50664, 1042, 11, 498, 291, 500, 380, 528, 1687, 4195, 281, 1745, 11, 291, 727, 6386, 428, 11028, 3090, 746, 411, 1401, 7154, 7098, 51014], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 482, "seek": 289886, "start": 2911.86, "end": 2915.86, "text": " so that they can still read the files without being a super user.", "tokens": [51014, 370, 300, 436, 393, 920, 1401, 264, 7098, 1553, 885, 257, 1687, 4195, 13, 51214], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 483, "seek": 289886, "start": 2915.86, "end": 2916.86, "text": " All right?", "tokens": [51214, 1057, 558, 30, 51264], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 484, "seek": 289886, "start": 2916.86, "end": 2917.86, "text": " That's the end of it.", "tokens": [51264, 663, 311, 264, 917, 295, 309, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 485, "seek": 289886, "start": 2917.86, "end": 2918.86, "text": " I really apologize for the demo.", "tokens": [51314, 286, 534, 12328, 337, 264, 10723, 13, 51364], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 486, "seek": 289886, "start": 2918.86, "end": 2920.86, "text": " I love giving that demo and I don't know what I did.", "tokens": [51364, 286, 959, 2902, 300, 10723, 293, 286, 500, 380, 458, 437, 286, 630, 13, 51464], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 487, "seek": 289886, "start": 2920.86, "end": 2923.86, "text": " But anyway, if you have questions, I'll take one and then we're going to have to be done.", "tokens": [51464, 583, 4033, 11, 498, 291, 362, 1651, 11, 286, 603, 747, 472, 293, 550, 321, 434, 516, 281, 362, 281, 312, 1096, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 488, "seek": 289886, "start": 2923.86, "end": 2924.86, "text": " Yeah.", "tokens": [51614, 865, 13, 51664], "temperature": 0.0, "avg_logprob": -0.0938422820147346, "compression_ratio": 1.694915254237288, "no_speech_prob": 0.03254745155572891}, {"id": 489, "seek": 292486, "start": 2924.86, "end": 2937.86, "text": " Thank you.", "tokens": [50364, 1044, 291, 13, 51014], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 490, "seek": 292486, "start": 2937.86, "end": 2938.86, "text": " Great.", "tokens": [51014, 3769, 13, 51064], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 491, "seek": 292486, "start": 2938.86, "end": 2939.86, "text": " Yeah.", "tokens": [51064, 865, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 492, "seek": 292486, "start": 2939.86, "end": 2940.86, "text": " Great question.", "tokens": [51114, 3769, 1168, 13, 51164], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 493, "seek": 292486, "start": 2940.86, "end": 2946.86, "text": " For those who are still here, the question is there like a log cap of transitions of, I guess the mic is off.", "tokens": [51164, 1171, 729, 567, 366, 920, 510, 11, 264, 1168, 307, 456, 411, 257, 3565, 1410, 295, 23767, 295, 11, 286, 2041, 264, 3123, 307, 766, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 494, "seek": 292486, "start": 2946.86, "end": 2950.86, "text": " There's, is there a log cap when you grant things off and on, right?", "tokens": [51464, 821, 311, 11, 307, 456, 257, 3565, 1410, 562, 291, 6386, 721, 766, 293, 322, 11, 558, 30, 51664], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 495, "seek": 292486, "start": 2950.86, "end": 2952.86, "text": " I had this default privilege and then I modified it.", "tokens": [51664, 286, 632, 341, 7576, 12122, 293, 550, 286, 15873, 309, 13, 51764], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 496, "seek": 292486, "start": 2952.86, "end": 2953.86, "text": " There isn't.", "tokens": [51764, 821, 1943, 380, 13, 51814], "temperature": 0.0, "avg_logprob": -0.15723603347252155, "compression_ratio": 1.5777777777777777, "no_speech_prob": 0.028812116011977196}, {"id": 497, "seek": 295386, "start": 2953.86, "end": 2955.86, "text": " You would have to do that in some way.", "tokens": [50364, 509, 576, 362, 281, 360, 300, 294, 512, 636, 13, 50464], "temperature": 0.0, "avg_logprob": -0.15177442810752176, "compression_ratio": 0.9864864864864865, "no_speech_prob": 0.4715246260166168}, {"id": 498, "seek": 295386, "start": 2955.86, "end": 2957.86, "text": " Maybe through scripture if you do.", "tokens": [50464, 2704, 807, 24783, 498, 291, 360, 13, 50564], "temperature": 0.0, "avg_logprob": -0.15177442810752176, "compression_ratio": 0.9864864864864865, "no_speech_prob": 0.4715246260166168}], "language": "en"}