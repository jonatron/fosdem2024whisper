{"text": " When you didn't know what was going on, I'm looking up at the faces that are blank. Okay. So AI. At one stage, AI was a preserve of data scientists, machine learning folks, and people in universities. And us developers said, let them have their day. Okay. But what I want to look at AI, and I know chart CBT, you know, at the end of November 2022, throughout and everybody from your parents to your aunts to your uncles, suddenly know what AI is. There's kids around the world writing papers and some of the information is right and some of it is wrong. So there's a lot of teachers out there that are fed up, especially in secondary school or high school, that are fed up with getting answers from models and from AI. But on a serious note, what I want to look at today is from the angle of, I've been a developer for nearly the last 30 years, and my background is about writing services, applications, mostly back in middle there and earlier in my career in UI. And because of the growth of AI and because of what chart CBT does, an awful lot of our leaders in our companies now want us to leverage and consume models in our applications. So I just want to get a little demographic here. Hands up, who's the data scientist? Okay, there's a few of you. You might be leaving in a couple of minutes. Any machine learning engineers? Some more. Okay, I'm getting a bit nervous now. Any developers? Yes! Sorry for the roar. I'm safe. I won't get lynched from here out to the door. So let's get this show going. As JJ said, my name is Barton Hickey. I'm a software engineer working over at IBM. And I spent around the last eight to ten years in the cloud native space in different communities. But my key role, I've been very lucky, is contributing to open source communities and trying to drive open source communities forward. So a little background. I'm going to do a very small background in AI. AI folks don't shoot me down. It's my interpretation. I'm only dipping my toe in the water over the last couple of months. So this is how I see it. But really I want to get into the frameworks and open source in general and how can we use the models using these frameworks? And then we might have a bit of a demo if I have enough time. So I'm just going to throw up this definition. That kind of two sentences on it. And from what I've looked at and from what I understand, the way I look at the model is I look at it like any other program. Or library. Or whatever else that we've often called to use. So it has an API generally. We can call it and we can get a result. We can consume it in our application. But I suppose the difference here with, for me as a traditional programmer, our traditional programming is, you know, we give it a set of rules and instructions to tell the computer what to do. And more often than not, we should know how that program is going to work. With AI models, it's a little bit different here because it's not exactly explicitly programmed for predictor tasks to do or a particular prediction. It learns with the data. So there's the big difference from restarting out. So what is the journey of a model? So first of all, I suppose it's the building or the prototyping of that model. And data is the key here. So as a lot of my North American colleagues would say, garbage in, garbage out. So the data is really, really important when you're training or creating your model. And the first part of that is getting that data from reputable sources, reputable domains for the particular operations you want the model to do. Then it's the preparation of the data because the algorithms that process this data or create the model, they need the data of a certain quality and in certain formats. So things like errors and omissions need to go out of it. If there's any duplication, any missing values, and also then maybe converting into a format that the algorithm can use. There might be some aggregation as well, so that you know what I mean, to normalize values, etc. Then you choose the algorithm. The algorithm depends on the operation you want to do. And it also depends on how you're going to train it, how it's going to function, and then what resources you've available to do it. So you can see when we started out with the generative models, they were huge, and I'll talk about them in a minute. But now there seems to be a turn at the start of this year of smaller models and more modular models, etc. Because of the resources to train them and also to run them. The key part of the algorithm is to turn that data into a model and produce the model you have that's trained on certain data, which is the next step. The training data set is very important because you want to see within a certain level of tolerance how exacting is that model. So what are the results? Are they within a particular tolerance rate that you are going to be willing to accept? And then at this stage then you say, right, I have a model here, I've trained, what I need to do is the final step, which is validation. So then, testing the model against data that you didn't use when you were training to see if the model can actually learn when new data comes into it, and our as its predictions or its tasks as you expect them to be. So a big part of this I think going forward is open source could be the key with models because it's going to come down to trust. Do we trust the model? Because let's be fair about it. Even, you know, the people who write the models or the graded data scientists out there are machine learning engineers. Sometimes they can't even predict what the answers are. So the key here for transparency and in the open and trust of models is going to be key. And the last two parts are the parts I like. Running the model and calling the model, okay? So, you know, sometimes, you know, back in the day when you used, you know, binary tree library, you just wanted it to give you the answer. You didn't want to be writing a vanilla binary tree unless you were into that. So the same with the model. You want the model to do an operation for you, perform a task or make a prediction. So that's what they call inferencing. A little bit around genera.vii because that's the buzzword. Everyone's talking about it. And the key here is that it's a different type of model. So your tradition in machine learning models were trained on label data. So data that was specific for specific tasks. A lot went into knowledge of the domain and knowledge that the data scientists need to know around that particular area. And it was very intensive in the training. In this situation with the foundation models, what we're saying here is we're going to train it on a massive data setup on label data. And then you can use that model and fine tune it. Or so you can do different tuning like fine tuning where you take the model. And because these models are deep learning models, there's going to have a lot of layers in them. You may take one to number of layers off, put your own layers on top, i.e. you're going to train it against your own data. Or you might use prompt tuning where when you're calling the model, you're going to pass it prompts like examples, what you're looking for, and guide it towards the answer you're looking for. An example of this is around the large language models which are based on huge language data sets and can generate content from there. And we can see that in which generative AI. It's about using these models or these generic style models to be able to generate high quality text, video, etc. So that's the whole idea of the generative where we're going now. And the idea here that these models, one model can be used for different operations as opposed to be normally trained for one. Okay, so that's my intro to the AI. And the next part is what I really want to get onto is around the frameworks. So hands up who's heard of Hoganface. Okay, that's not a bad number. So Hoganface has built up an AI community which is nice to see based around open source. It's key things being it is a series of libraries. It has a huge catalog of open source models and data sets. Now, how is this appealing to you if you want to use open source models or sorry, you want to use AI and models. The great thing about this is you can pull those models down and you can run and use them locally. So that if something changes tomorrow morning with Hoganface, you can still use those models. You can use them locally. Now, they also provide a service where they host the models themselves. So you're directly just calling the models through their API. But I think it depends on what your setup is and your use cases, etc. So what I'd like to do with this when I'm looking through this is an example. And this is an example using the Hoganface Transformer library. And it was an example up on the Ray framework, which I'm going to touch on straight after this. So the first thing is we're using a model called the T5, which is an encoder-decoder model. And these types of models are really geared for natural language processing, or NLP as they call it. So when you're dealing with text of some sort in different languages, etc., it's usually text in, text out. And the task we want to do here is just a very simple example. Looking at the code is that what we want to do is just convert a bit of text to French. And I use French because we're here in Belgium. I couldn't get Flemish or I didn't think of it, so sorry about that. So when we look at this, we see it's two real calls. The first one is we use the Transformer library, and we call Pipeline. And in Pipeline, you specify the model and the task you want to do. And then inside the translate method, we're then going to call the model with the text that we send in. Very simple Python class. When you run the class, if it's your first time calling that model, it will call out to Hug & Face, Open Source Cal log, it will pull down the T5 model, and it will put it in cache. So any call after that for that particular version of the T5, it will get it locally. Ray. So Ray is a framework for scaling and distributing Python and machine learning applications. So the capability is it's providing which is batch inferencing on CPUs, GPUs. So the inferencing being running the models, which we talked about earlier. But the stuff we're interested in mostly. Obviously the serving of the models, hosting them up, having them ready to go, providing an API in front of them. Also training of models, large language models. So that's if you have your large language model. It's not, I suppose it's not giving you results you want for the particular operations you want. Then you may decide to train that with your own data. So in that case, you'll create a new version of the model. And then other operations like reinforced learning, etc. So if we want to use Ray to now host the model, in this scenario, what's going to happen is Ray has a nice little HTTP server. And pretty much all you have to do is put an annotation on top. You can see just below the translator class called serve deployment. And you can pass args in there if you want. And the next part that's important is the callback function, which is called underscore underscore call underscore underscore. So in this situation, once you you have your call, you have your annotation, you can then call this class using. Using server on. So it then will load it in a HTTP server and it'll provide the interface to it and you can call it as follows. The next and the final framework I want to look at is the Triton inference server. And the inference server provides you with support. For most machine learning applications and frameworks, as well as custom C++ and Python backends. So you can see the different frameworks that supports there and processes support, etc. And this time, if you want to wrap it or use it, you need to actually call the class. I'm going to read it from up here. It should be either Triton, Python model, which is a bit of a mouthful. And then you need an execute method. And that's where the HTTP request we're calling to just note here. It's not using JSON data types. It's using tensor data types. Okay, so I don't know if you've experienced of using tensors, etc. PyTorch or anything like that, you'll be used to that. So you have to convert it in into into Python data types so you can process it. The other thing you need to do to bootstrap it is you're going to need a configuration file and that config file. You give it the name of your particular model. So I'll call it the model you want to host. So it's going to be the local name that's going to host. And then you tell it what back end, in this case is Python, and your input output. And those input outputs are binary tensor flow types. And the last thing you do then is you need this model directory down here. So in a minute when we call models, it must be under this with the name of the wrapper model class and your config and your model file. And finally, to call it then, there's a number of ways you can do it. One easy way is to use Docker and run its container. And when you run that then, you then need to copy the artifacts, which is the model directory that we set up into the container. And then you call the Triton server executable to run it as a HTTP server. And you can call it in the call request above with that path in the name of your model and in fare. So before I go on to the demo, I just want to just do a little summary of that. So I'm after choosing three frameworks and you're probably someone's probably up the back on each and go on. There's loads more. Yes, there is. You VLM, you know, which is a nice alternative note to Hogan phase teachers. And there's just so many of them because this space is just growing phenomenally. We probably saw it with cloud native over 10 years ago. And you can see it at the moment that there's more and more frameworks. And I think the key here will be if we can have these frameworks be open source as well with the models. And then if companies want to put their value on top, then they can put their sauce on top. But for most of us here, we would like to be able to choose our framework and see if it'll do what we needed to do. So load our models and stuff like that. The other one I'm shown here, I'm just obviously running locally and I'll be running something locally here in a minute. But the idea here is that you'll deploy this into some system bare metal, a cloud system, whatever, because depending on the model, it's going to need serious resources to run a lot of the time. But as I said, there seems to be a shift towards the smaller models and then the plugability in these models where you can have different capabilities in the models. But that's something for me to learn down the line and for the data scientists to come and tell us about. Okay, so let's do a quick download. Yeah, I'll just escape here one second. You want? Yeah, if you don't mind. Thanks very much. Just before I show this. So what I'm doing is, I'm just running a framework here called KK. And why I'm running this is a colleague of mine, Mark Stewart, did a really nice UI using radio, the radio framework, if you know it, a Python framework for it's very handy for for doing UI, active access stuff and elements and things like that. And I'm just showing you here that I'm running it. And what it's running is it's running the AI, sorry, it's running the UI as a HPP server. And it's also running the back end server with a gRPC and HPP interface. And the back end server is the host. So where it's hosting the model and it's and the way to run those models are similar to the other frameworks I've shown by wrapping the model for the particular artifacts that's needed. Okay, so here's the simple UI. And what I want to do is just play with models for a minute and then just show, look, it's just code wrapped in the back end. And as developers, we can just use these models to perform operations that, you know, we might take us ages to write or would be quite difficult to write. And we can use these off the shelf models, hopefully. So the first one is putting in a sentence like. I can. How's that? Better? More. This is where you were told in class to come down to the front. Did you hear that? That's better. Thank you. Thank you. So what I want to do here is I'm using a model that does sentence similarity and I put in the canine is fast is my source. And then I'm saying the dog is running the cat is asleep. And if you know your cat from your dogs, a dog is the canine. A cat is not. So there we go. It's telling us 68%. It thinks the dog is asleep. So there we go. It's telling us 68%. It thinks the dog is running is the best sentence. But if I change it to say the cat. Is running. We now put the cat among the pigeons, so to speak, excuse the pun. But now we're saying it's a 36% chance that, you know, you're not going to be able to get the cat. It might be like the canine is running. So you can see here how you compare on with things. And because of vector spaces and so forth, where words are aligned, that if you do change some of the words like running, you know, fast, they're going to be near each other. Dogs and cats are going to be near each other because they're animals. So yeah, that's what happens there. So looking again, let's do image classification. I'm going to choose an image here. All right. Yay, puppies. Okay. Now, I love dogs, but it's telling me it's a 88% chance that's a golden retriever. Any person can confirm that? Okay. Thank you very much. I just thought it was a Labrador, but sorry about that. And the last one I'm going to do is something close to my own heart, which is I've taken an image of a sport we have in Ireland called Hurlin. Okay. So Hurlin is players are on the field. They have a ball. They have a stick. Okay. So when it does the detection here, it detects a sports ball. That's fantastic. It detects people, which is fantastic. But it calls the stick a baseball bat. Is there anyone in the audience that knows what the name of the stick is? A hurly. Yay. I love to hear. Okay. So that's an example of the data the model has been trained with. What you'd need to do there is either to prompt tune that model or fine tune that model with a data set that tells you more about the game of hurlin. It's able to detect the field sport, which is which is amazing people and ball, considering it hasn't been trained anything on the sport, but then it lets itself down a little bit. So why did I show you these things bar showing a really nice UI for my colleague? The reason is this. At the end of the day, we're calling libraries like we've always done or we're calling API is like we always done. And as long as we know the models can be trusted, then that's okay. All right. So the first part in here is this is just a great UI code. And in here, we're just saying there's a series of different classes for the for the different UI tabs. And we're just calling them here. And here's an example of one of the UI tabs down here for the image classification. You can see here the submit button and the other elements that are on the tab. And in this situation, you can see the submit is going to call into a function called function for that's a great name, by the way. FN. I haven't seen that for a long time. And you can see here in here, then this is where it's going to call the model. Okay. Now, why is this a little bit funny because it's a g is the g rpc API is calling and you can see here inside the UI when it starts up, it's going to get it's going to get a handle to the channel of the g rpc server. And then over on this side, you see here the different tabs classes to handle the UI interaction. And then finally down here is the wrapper code. And you can see here it's got similarities to some of the frameworks I showed a while ago. But in this situation, you use an annotation up here called module, you pass it a task and so forth. And the key here then is you can see in the init again, we're calling a pipeline, which is the hug and face transformer pipeline up here. Sorry, I've just jumped. Yeah, just up here. If you don't pass a model to it, the default model is going to use is the Google VIT model. And then down here is the key in the run method. So when you call the predict, it's going to call the HTTP server and it's going to be redirected in the server to the run method here of this module that's loaded in the server. And it's going to call the pipe here. And when it calls the setup pipe and passes the image like it did the last time, then it's going to get the result back. And that's how you get it. Okay, so let's jump back to our deck. All right, to wrap this up, anything's on the screen there. I'm actually going to talk about that for some reason. So you can read that if you want. No. Why did I do this talk today? I want to do this talk from the angle of somebody who's been writing code a long, long time. And I'm afraid that someday someone's going to say you're too old and bald and you've got glasses. And I'd... And a beard. Sorry about that. No, but when we look at the change, it's probably the biggest change. If you've been in the industry for maybe 20, 30 years, it's probably the biggest change we've seen the way things are going. And there's always that phrase, you know, you either adapt or you stand still and everything moves on. So the ability here to be able to use these models to write applications and improve things is really the key. And this is something that I suppose to grow out of AI definitely in the last 10 years or plus. I suppose starting with, or maybe 20 years starting with the Linux Foundation, then into OpenStack, Kubernetes, you know, all the other different great foundations and communities out there. I think a lot of companies have realized one company or one set of developers cannot keep up with the rate of development, the rate of change, the way technology is going. And having this ability to get these models eventually out of the grasp of the scientists stuck in the labs that don't want to release anything. Sorry data scientists, I'm not picking on you. But you know, to eventually see the light of day and they can go home and tell their families, you know, that thing I was working on for 20 years, they're now using it in fridges, in cars, everywhere. But the key here is that we need to have it open. We need to drive forward with our models and be transparent. We need to have trust in the models because we're asking the model to do something for us or give us a result that we depend on. And like libraries we use in the old days, you needed to go and do the groundwork and find out can we trust that library? Is it doing something we don't want it to do? Is it doing something malicious? So I think there's a big change here from the initial AI maybe in the last 10 years where it was around fraud detection, spam detection, you know, chatbots. I'd say there's going to be a big proliferation offered the next 5 to 10 years. So thank you very much. Questions?", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 10.0, "text": " When you didn't know what was going on, I'm looking up at the faces that are blank.", "tokens": [50364, 1133, 291, 994, 380, 458, 437, 390, 516, 322, 11, 286, 478, 1237, 493, 412, 264, 8475, 300, 366, 8247, 13, 50864], "temperature": 0.0, "avg_logprob": -0.2465249742780413, "compression_ratio": 1.3910614525139664, "no_speech_prob": 0.5556589961051941}, {"id": 1, "seek": 0, "start": 10.0, "end": 12.0, "text": " Okay.", "tokens": [50864, 1033, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2465249742780413, "compression_ratio": 1.3910614525139664, "no_speech_prob": 0.5556589961051941}, {"id": 2, "seek": 0, "start": 12.0, "end": 14.0, "text": " So AI.", "tokens": [50964, 407, 7318, 13, 51064], "temperature": 0.0, "avg_logprob": -0.2465249742780413, "compression_ratio": 1.3910614525139664, "no_speech_prob": 0.5556589961051941}, {"id": 3, "seek": 0, "start": 14.0, "end": 23.0, "text": " At one stage, AI was a preserve of data scientists, machine learning folks, and people in universities.", "tokens": [51064, 1711, 472, 3233, 11, 7318, 390, 257, 15665, 295, 1412, 7708, 11, 3479, 2539, 4024, 11, 293, 561, 294, 11779, 13, 51514], "temperature": 0.0, "avg_logprob": -0.2465249742780413, "compression_ratio": 1.3910614525139664, "no_speech_prob": 0.5556589961051941}, {"id": 4, "seek": 0, "start": 23.0, "end": 28.0, "text": " And us developers said, let them have their day.", "tokens": [51514, 400, 505, 8849, 848, 11, 718, 552, 362, 641, 786, 13, 51764], "temperature": 0.0, "avg_logprob": -0.2465249742780413, "compression_ratio": 1.3910614525139664, "no_speech_prob": 0.5556589961051941}, {"id": 5, "seek": 2800, "start": 28.0, "end": 30.0, "text": " Okay.", "tokens": [50364, 1033, 13, 50464], "temperature": 0.0, "avg_logprob": -0.1626429441498547, "compression_ratio": 1.4926108374384237, "no_speech_prob": 0.01531226746737957}, {"id": 6, "seek": 2800, "start": 30.0, "end": 37.0, "text": " But what I want to look at AI, and I know chart CBT, you know, at the end of November 2022,", "tokens": [50464, 583, 437, 286, 528, 281, 574, 412, 7318, 11, 293, 286, 458, 6927, 18745, 51, 11, 291, 458, 11, 412, 264, 917, 295, 7674, 20229, 11, 50814], "temperature": 0.0, "avg_logprob": -0.1626429441498547, "compression_ratio": 1.4926108374384237, "no_speech_prob": 0.01531226746737957}, {"id": 7, "seek": 2800, "start": 37.0, "end": 43.0, "text": " throughout and everybody from your parents to your aunts to your uncles,", "tokens": [50814, 3710, 293, 2201, 490, 428, 3152, 281, 428, 15879, 1373, 281, 428, 47662, 11, 51114], "temperature": 0.0, "avg_logprob": -0.1626429441498547, "compression_ratio": 1.4926108374384237, "no_speech_prob": 0.01531226746737957}, {"id": 8, "seek": 2800, "start": 43.0, "end": 47.0, "text": " suddenly know what AI is.", "tokens": [51114, 5800, 458, 437, 7318, 307, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1626429441498547, "compression_ratio": 1.4926108374384237, "no_speech_prob": 0.01531226746737957}, {"id": 9, "seek": 2800, "start": 47.0, "end": 54.0, "text": " There's kids around the world writing papers and some of the information is right and some of it is wrong.", "tokens": [51314, 821, 311, 2301, 926, 264, 1002, 3579, 10577, 293, 512, 295, 264, 1589, 307, 558, 293, 512, 295, 309, 307, 2085, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1626429441498547, "compression_ratio": 1.4926108374384237, "no_speech_prob": 0.01531226746737957}, {"id": 10, "seek": 5400, "start": 54.0, "end": 59.0, "text": " So there's a lot of teachers out there that are fed up, especially in secondary school or high school,", "tokens": [50364, 407, 456, 311, 257, 688, 295, 6023, 484, 456, 300, 366, 4636, 493, 11, 2318, 294, 11396, 1395, 420, 1090, 1395, 11, 50614], "temperature": 0.0, "avg_logprob": -0.08639499928691599, "compression_ratio": 1.616600790513834, "no_speech_prob": 0.01437015738338232}, {"id": 11, "seek": 5400, "start": 59.0, "end": 65.0, "text": " that are fed up with getting answers from models and from AI.", "tokens": [50614, 300, 366, 4636, 493, 365, 1242, 6338, 490, 5245, 293, 490, 7318, 13, 50914], "temperature": 0.0, "avg_logprob": -0.08639499928691599, "compression_ratio": 1.616600790513834, "no_speech_prob": 0.01437015738338232}, {"id": 12, "seek": 5400, "start": 65.0, "end": 69.0, "text": " But on a serious note, what I want to look at today is from the angle of,", "tokens": [50914, 583, 322, 257, 3156, 3637, 11, 437, 286, 528, 281, 574, 412, 965, 307, 490, 264, 5802, 295, 11, 51114], "temperature": 0.0, "avg_logprob": -0.08639499928691599, "compression_ratio": 1.616600790513834, "no_speech_prob": 0.01437015738338232}, {"id": 13, "seek": 5400, "start": 69.0, "end": 73.0, "text": " I've been a developer for nearly the last 30 years,", "tokens": [51114, 286, 600, 668, 257, 10754, 337, 6217, 264, 1036, 2217, 924, 11, 51314], "temperature": 0.0, "avg_logprob": -0.08639499928691599, "compression_ratio": 1.616600790513834, "no_speech_prob": 0.01437015738338232}, {"id": 14, "seek": 5400, "start": 73.0, "end": 82.0, "text": " and my background is about writing services, applications, mostly back in middle there and earlier in my career in UI.", "tokens": [51314, 293, 452, 3678, 307, 466, 3579, 3328, 11, 5821, 11, 5240, 646, 294, 2808, 456, 293, 3071, 294, 452, 3988, 294, 15682, 13, 51764], "temperature": 0.0, "avg_logprob": -0.08639499928691599, "compression_ratio": 1.616600790513834, "no_speech_prob": 0.01437015738338232}, {"id": 15, "seek": 8200, "start": 82.0, "end": 89.0, "text": " And because of the growth of AI and because of what chart CBT does,", "tokens": [50364, 400, 570, 295, 264, 4599, 295, 7318, 293, 570, 295, 437, 6927, 18745, 51, 775, 11, 50714], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 16, "seek": 8200, "start": 89.0, "end": 99.0, "text": " an awful lot of our leaders in our companies now want us to leverage and consume models in our applications.", "tokens": [50714, 364, 11232, 688, 295, 527, 3523, 294, 527, 3431, 586, 528, 505, 281, 13982, 293, 14732, 5245, 294, 527, 5821, 13, 51214], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 17, "seek": 8200, "start": 99.0, "end": 101.0, "text": " So I just want to get a little demographic here.", "tokens": [51214, 407, 286, 445, 528, 281, 483, 257, 707, 26331, 510, 13, 51314], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 18, "seek": 8200, "start": 101.0, "end": 105.0, "text": " Hands up, who's the data scientist?", "tokens": [51314, 21369, 493, 11, 567, 311, 264, 1412, 12662, 30, 51514], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 19, "seek": 8200, "start": 105.0, "end": 107.0, "text": " Okay, there's a few of you.", "tokens": [51514, 1033, 11, 456, 311, 257, 1326, 295, 291, 13, 51614], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 20, "seek": 8200, "start": 107.0, "end": 109.0, "text": " You might be leaving in a couple of minutes.", "tokens": [51614, 509, 1062, 312, 5012, 294, 257, 1916, 295, 2077, 13, 51714], "temperature": 0.0, "avg_logprob": -0.0885278171963162, "compression_ratio": 1.5045045045045045, "no_speech_prob": 0.006559220142662525}, {"id": 21, "seek": 10900, "start": 109.0, "end": 112.0, "text": " Any machine learning engineers?", "tokens": [50364, 2639, 3479, 2539, 11955, 30, 50514], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 22, "seek": 10900, "start": 112.0, "end": 114.0, "text": " Some more.", "tokens": [50514, 2188, 544, 13, 50614], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 23, "seek": 10900, "start": 114.0, "end": 116.0, "text": " Okay, I'm getting a bit nervous now.", "tokens": [50614, 1033, 11, 286, 478, 1242, 257, 857, 6296, 586, 13, 50714], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 24, "seek": 10900, "start": 116.0, "end": 118.0, "text": " Any developers?", "tokens": [50714, 2639, 8849, 30, 50814], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 25, "seek": 10900, "start": 118.0, "end": 121.0, "text": " Yes!", "tokens": [50814, 1079, 0, 50964], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 26, "seek": 10900, "start": 121.0, "end": 122.0, "text": " Sorry for the roar.", "tokens": [50964, 4919, 337, 264, 40347, 13, 51014], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 27, "seek": 10900, "start": 122.0, "end": 123.0, "text": " I'm safe.", "tokens": [51014, 286, 478, 3273, 13, 51064], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 28, "seek": 10900, "start": 123.0, "end": 126.0, "text": " I won't get lynched from here out to the door.", "tokens": [51064, 286, 1582, 380, 483, 46137, 19318, 490, 510, 484, 281, 264, 2853, 13, 51214], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 29, "seek": 10900, "start": 126.0, "end": 129.0, "text": " So let's get this show going.", "tokens": [51214, 407, 718, 311, 483, 341, 855, 516, 13, 51364], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 30, "seek": 10900, "start": 129.0, "end": 132.0, "text": " As JJ said, my name is Barton Hickey.", "tokens": [51364, 1018, 21386, 848, 11, 452, 1315, 307, 22338, 266, 389, 299, 4119, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 31, "seek": 10900, "start": 132.0, "end": 135.0, "text": " I'm a software engineer working over at IBM.", "tokens": [51514, 286, 478, 257, 4722, 11403, 1364, 670, 412, 23487, 13, 51664], "temperature": 0.0, "avg_logprob": -0.08821691513061523, "compression_ratio": 1.4146341463414633, "no_speech_prob": 0.07616040855646133}, {"id": 32, "seek": 13500, "start": 135.0, "end": 141.0, "text": " And I spent around the last eight to ten years in the cloud native space in different communities.", "tokens": [50364, 400, 286, 4418, 926, 264, 1036, 3180, 281, 2064, 924, 294, 264, 4588, 8470, 1901, 294, 819, 4456, 13, 50664], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 33, "seek": 13500, "start": 141.0, "end": 151.0, "text": " But my key role, I've been very lucky, is contributing to open source communities and trying to drive open source communities forward.", "tokens": [50664, 583, 452, 2141, 3090, 11, 286, 600, 668, 588, 6356, 11, 307, 19270, 281, 1269, 4009, 4456, 293, 1382, 281, 3332, 1269, 4009, 4456, 2128, 13, 51164], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 34, "seek": 13500, "start": 151.0, "end": 153.0, "text": " So a little background.", "tokens": [51164, 407, 257, 707, 3678, 13, 51264], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 35, "seek": 13500, "start": 153.0, "end": 156.0, "text": " I'm going to do a very small background in AI.", "tokens": [51264, 286, 478, 516, 281, 360, 257, 588, 1359, 3678, 294, 7318, 13, 51414], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 36, "seek": 13500, "start": 156.0, "end": 158.0, "text": " AI folks don't shoot me down.", "tokens": [51414, 7318, 4024, 500, 380, 3076, 385, 760, 13, 51514], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 37, "seek": 13500, "start": 158.0, "end": 159.0, "text": " It's my interpretation.", "tokens": [51514, 467, 311, 452, 14174, 13, 51564], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 38, "seek": 13500, "start": 159.0, "end": 162.0, "text": " I'm only dipping my toe in the water over the last couple of months.", "tokens": [51564, 286, 478, 787, 35584, 452, 13976, 294, 264, 1281, 670, 264, 1036, 1916, 295, 2493, 13, 51714], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 39, "seek": 13500, "start": 162.0, "end": 164.0, "text": " So this is how I see it.", "tokens": [51714, 407, 341, 307, 577, 286, 536, 309, 13, 51814], "temperature": 0.0, "avg_logprob": -0.09640815930488782, "compression_ratio": 1.7186311787072244, "no_speech_prob": 0.11165065318346024}, {"id": 40, "seek": 16400, "start": 164.0, "end": 171.0, "text": " But really I want to get into the frameworks and open source in general and how can we use the models using these frameworks?", "tokens": [50364, 583, 534, 286, 528, 281, 483, 666, 264, 29834, 293, 1269, 4009, 294, 2674, 293, 577, 393, 321, 764, 264, 5245, 1228, 613, 29834, 30, 50714], "temperature": 0.0, "avg_logprob": -0.12656384823369046, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.01366361789405346}, {"id": 41, "seek": 16400, "start": 171.0, "end": 175.0, "text": " And then we might have a bit of a demo if I have enough time.", "tokens": [50714, 400, 550, 321, 1062, 362, 257, 857, 295, 257, 10723, 498, 286, 362, 1547, 565, 13, 50914], "temperature": 0.0, "avg_logprob": -0.12656384823369046, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.01366361789405346}, {"id": 42, "seek": 16400, "start": 175.0, "end": 178.0, "text": " So I'm just going to throw up this definition.", "tokens": [50914, 407, 286, 478, 445, 516, 281, 3507, 493, 341, 7123, 13, 51064], "temperature": 0.0, "avg_logprob": -0.12656384823369046, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.01366361789405346}, {"id": 43, "seek": 16400, "start": 178.0, "end": 182.0, "text": " That kind of two sentences on it.", "tokens": [51064, 663, 733, 295, 732, 16579, 322, 309, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12656384823369046, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.01366361789405346}, {"id": 44, "seek": 16400, "start": 182.0, "end": 191.0, "text": " And from what I've looked at and from what I understand, the way I look at the model is I look at it like any other program.", "tokens": [51264, 400, 490, 437, 286, 600, 2956, 412, 293, 490, 437, 286, 1223, 11, 264, 636, 286, 574, 412, 264, 2316, 307, 286, 574, 412, 309, 411, 604, 661, 1461, 13, 51714], "temperature": 0.0, "avg_logprob": -0.12656384823369046, "compression_ratio": 1.6652542372881356, "no_speech_prob": 0.01366361789405346}, {"id": 45, "seek": 19100, "start": 191.0, "end": 193.0, "text": " Or library.", "tokens": [50364, 1610, 6405, 13, 50464], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 46, "seek": 19100, "start": 193.0, "end": 197.0, "text": " Or whatever else that we've often called to use.", "tokens": [50464, 1610, 2035, 1646, 300, 321, 600, 2049, 1219, 281, 764, 13, 50664], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 47, "seek": 19100, "start": 197.0, "end": 200.0, "text": " So it has an API generally.", "tokens": [50664, 407, 309, 575, 364, 9362, 5101, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 48, "seek": 19100, "start": 200.0, "end": 202.0, "text": " We can call it and we can get a result.", "tokens": [50814, 492, 393, 818, 309, 293, 321, 393, 483, 257, 1874, 13, 50914], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 49, "seek": 19100, "start": 202.0, "end": 206.0, "text": " We can consume it in our application.", "tokens": [50914, 492, 393, 14732, 309, 294, 527, 3861, 13, 51114], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 50, "seek": 19100, "start": 206.0, "end": 217.0, "text": " But I suppose the difference here with, for me as a traditional programmer, our traditional programming is, you know, we give it a set of rules and instructions to tell the computer what to do.", "tokens": [51114, 583, 286, 7297, 264, 2649, 510, 365, 11, 337, 385, 382, 257, 5164, 32116, 11, 527, 5164, 9410, 307, 11, 291, 458, 11, 321, 976, 309, 257, 992, 295, 4474, 293, 9415, 281, 980, 264, 3820, 437, 281, 360, 13, 51664], "temperature": 0.0, "avg_logprob": -0.17012321188094767, "compression_ratio": 1.592920353982301, "no_speech_prob": 0.046154532581567764}, {"id": 51, "seek": 21700, "start": 217.0, "end": 224.0, "text": " And more often than not, we should know how that program is going to work.", "tokens": [50364, 400, 544, 2049, 813, 406, 11, 321, 820, 458, 577, 300, 1461, 307, 516, 281, 589, 13, 50714], "temperature": 0.0, "avg_logprob": -0.10132014183771043, "compression_ratio": 1.543778801843318, "no_speech_prob": 0.05409436672925949}, {"id": 52, "seek": 21700, "start": 224.0, "end": 235.0, "text": " With AI models, it's a little bit different here because it's not exactly explicitly programmed for predictor tasks to do or a particular prediction.", "tokens": [50714, 2022, 7318, 5245, 11, 309, 311, 257, 707, 857, 819, 510, 570, 309, 311, 406, 2293, 20803, 31092, 337, 6069, 284, 9608, 281, 360, 420, 257, 1729, 17630, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10132014183771043, "compression_ratio": 1.543778801843318, "no_speech_prob": 0.05409436672925949}, {"id": 53, "seek": 21700, "start": 235.0, "end": 237.0, "text": " It learns with the data.", "tokens": [51264, 467, 27152, 365, 264, 1412, 13, 51364], "temperature": 0.0, "avg_logprob": -0.10132014183771043, "compression_ratio": 1.543778801843318, "no_speech_prob": 0.05409436672925949}, {"id": 54, "seek": 21700, "start": 237.0, "end": 242.0, "text": " So there's the big difference from restarting out.", "tokens": [51364, 407, 456, 311, 264, 955, 2649, 490, 21022, 278, 484, 13, 51614], "temperature": 0.0, "avg_logprob": -0.10132014183771043, "compression_ratio": 1.543778801843318, "no_speech_prob": 0.05409436672925949}, {"id": 55, "seek": 21700, "start": 242.0, "end": 246.0, "text": " So what is the journey of a model?", "tokens": [51614, 407, 437, 307, 264, 4671, 295, 257, 2316, 30, 51814], "temperature": 0.0, "avg_logprob": -0.10132014183771043, "compression_ratio": 1.543778801843318, "no_speech_prob": 0.05409436672925949}, {"id": 56, "seek": 24600, "start": 246.0, "end": 250.0, "text": " So first of all, I suppose it's the building or the prototyping of that model.", "tokens": [50364, 407, 700, 295, 439, 11, 286, 7297, 309, 311, 264, 2390, 420, 264, 46219, 3381, 295, 300, 2316, 13, 50564], "temperature": 0.0, "avg_logprob": -0.07700082617746272, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.006991405971348286}, {"id": 57, "seek": 24600, "start": 250.0, "end": 253.0, "text": " And data is the key here.", "tokens": [50564, 400, 1412, 307, 264, 2141, 510, 13, 50714], "temperature": 0.0, "avg_logprob": -0.07700082617746272, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.006991405971348286}, {"id": 58, "seek": 24600, "start": 253.0, "end": 260.0, "text": " So as a lot of my North American colleagues would say, garbage in, garbage out.", "tokens": [50714, 407, 382, 257, 688, 295, 452, 4067, 2665, 7734, 576, 584, 11, 14150, 294, 11, 14150, 484, 13, 51064], "temperature": 0.0, "avg_logprob": -0.07700082617746272, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.006991405971348286}, {"id": 59, "seek": 24600, "start": 260.0, "end": 267.0, "text": " So the data is really, really important when you're training or creating your model.", "tokens": [51064, 407, 264, 1412, 307, 534, 11, 534, 1021, 562, 291, 434, 3097, 420, 4084, 428, 2316, 13, 51414], "temperature": 0.0, "avg_logprob": -0.07700082617746272, "compression_ratio": 1.5284090909090908, "no_speech_prob": 0.006991405971348286}, {"id": 60, "seek": 26700, "start": 267.0, "end": 277.0, "text": " And the first part of that is getting that data from reputable sources, reputable domains for the particular operations you want the model to do.", "tokens": [50364, 400, 264, 700, 644, 295, 300, 307, 1242, 300, 1412, 490, 1085, 32148, 7139, 11, 1085, 32148, 25514, 337, 264, 1729, 7705, 291, 528, 264, 2316, 281, 360, 13, 50864], "temperature": 0.0, "avg_logprob": -0.06601098705740537, "compression_ratio": 1.6702127659574468, "no_speech_prob": 0.17382657527923584}, {"id": 61, "seek": 26700, "start": 277.0, "end": 289.0, "text": " Then it's the preparation of the data because the algorithms that process this data or create the model, they need the data of a certain quality and in certain formats.", "tokens": [50864, 1396, 309, 311, 264, 13081, 295, 264, 1412, 570, 264, 14642, 300, 1399, 341, 1412, 420, 1884, 264, 2316, 11, 436, 643, 264, 1412, 295, 257, 1629, 3125, 293, 294, 1629, 25879, 13, 51464], "temperature": 0.0, "avg_logprob": -0.06601098705740537, "compression_ratio": 1.6702127659574468, "no_speech_prob": 0.17382657527923584}, {"id": 62, "seek": 28900, "start": 289.0, "end": 293.0, "text": " So things like errors and omissions need to go out of it.", "tokens": [50364, 407, 721, 411, 13603, 293, 3406, 7922, 643, 281, 352, 484, 295, 309, 13, 50564], "temperature": 0.0, "avg_logprob": -0.1377451932882961, "compression_ratio": 1.5854922279792747, "no_speech_prob": 0.1439257115125656}, {"id": 63, "seek": 28900, "start": 293.0, "end": 306.0, "text": " If there's any duplication, any missing values, and also then maybe converting into a format that the algorithm can use.", "tokens": [50564, 759, 456, 311, 604, 17154, 399, 11, 604, 5361, 4190, 11, 293, 611, 550, 1310, 29942, 666, 257, 7877, 300, 264, 9284, 393, 764, 13, 51214], "temperature": 0.0, "avg_logprob": -0.1377451932882961, "compression_ratio": 1.5854922279792747, "no_speech_prob": 0.1439257115125656}, {"id": 64, "seek": 28900, "start": 306.0, "end": 313.0, "text": " There might be some aggregation as well, so that you know what I mean, to normalize values, etc.", "tokens": [51214, 821, 1062, 312, 512, 16743, 399, 382, 731, 11, 370, 300, 291, 458, 437, 286, 914, 11, 281, 2710, 1125, 4190, 11, 5183, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1377451932882961, "compression_ratio": 1.5854922279792747, "no_speech_prob": 0.1439257115125656}, {"id": 65, "seek": 28900, "start": 313.0, "end": 315.0, "text": " Then you choose the algorithm.", "tokens": [51564, 1396, 291, 2826, 264, 9284, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1377451932882961, "compression_ratio": 1.5854922279792747, "no_speech_prob": 0.1439257115125656}, {"id": 66, "seek": 31500, "start": 315.0, "end": 320.0, "text": " The algorithm depends on the operation you want to do.", "tokens": [50364, 440, 9284, 5946, 322, 264, 6916, 291, 528, 281, 360, 13, 50614], "temperature": 0.0, "avg_logprob": -0.07389223117094773, "compression_ratio": 1.6872427983539096, "no_speech_prob": 0.15626691281795502}, {"id": 67, "seek": 31500, "start": 320.0, "end": 328.0, "text": " And it also depends on how you're going to train it, how it's going to function, and then what resources you've available to do it.", "tokens": [50614, 400, 309, 611, 5946, 322, 577, 291, 434, 516, 281, 3847, 309, 11, 577, 309, 311, 516, 281, 2445, 11, 293, 550, 437, 3593, 291, 600, 2435, 281, 360, 309, 13, 51014], "temperature": 0.0, "avg_logprob": -0.07389223117094773, "compression_ratio": 1.6872427983539096, "no_speech_prob": 0.15626691281795502}, {"id": 68, "seek": 31500, "start": 328.0, "end": 335.0, "text": " So you can see when we started out with the generative models, they were huge, and I'll talk about them in a minute.", "tokens": [51014, 407, 291, 393, 536, 562, 321, 1409, 484, 365, 264, 1337, 1166, 5245, 11, 436, 645, 2603, 11, 293, 286, 603, 751, 466, 552, 294, 257, 3456, 13, 51364], "temperature": 0.0, "avg_logprob": -0.07389223117094773, "compression_ratio": 1.6872427983539096, "no_speech_prob": 0.15626691281795502}, {"id": 69, "seek": 31500, "start": 335.0, "end": 342.0, "text": " But now there seems to be a turn at the start of this year of smaller models and more modular models, etc.", "tokens": [51364, 583, 586, 456, 2544, 281, 312, 257, 1261, 412, 264, 722, 295, 341, 1064, 295, 4356, 5245, 293, 544, 31111, 5245, 11, 5183, 13, 51714], "temperature": 0.0, "avg_logprob": -0.07389223117094773, "compression_ratio": 1.6872427983539096, "no_speech_prob": 0.15626691281795502}, {"id": 70, "seek": 34200, "start": 342.0, "end": 346.0, "text": " Because of the resources to train them and also to run them.", "tokens": [50364, 1436, 295, 264, 3593, 281, 3847, 552, 293, 611, 281, 1190, 552, 13, 50564], "temperature": 0.0, "avg_logprob": -0.09012766984792855, "compression_ratio": 1.5179856115107915, "no_speech_prob": 0.054037220776081085}, {"id": 71, "seek": 34200, "start": 346.0, "end": 359.0, "text": " The key part of the algorithm is to turn that data into a model and produce the model you have that's trained on certain data, which is the next step.", "tokens": [50564, 440, 2141, 644, 295, 264, 9284, 307, 281, 1261, 300, 1412, 666, 257, 2316, 293, 5258, 264, 2316, 291, 362, 300, 311, 8895, 322, 1629, 1412, 11, 597, 307, 264, 958, 1823, 13, 51214], "temperature": 0.0, "avg_logprob": -0.09012766984792855, "compression_ratio": 1.5179856115107915, "no_speech_prob": 0.054037220776081085}, {"id": 72, "seek": 35900, "start": 359.0, "end": 373.0, "text": " The training data set is very important because you want to see within a certain level of tolerance how exacting is that model.", "tokens": [50364, 440, 3097, 1412, 992, 307, 588, 1021, 570, 291, 528, 281, 536, 1951, 257, 1629, 1496, 295, 23368, 577, 1900, 278, 307, 300, 2316, 13, 51064], "temperature": 0.0, "avg_logprob": -0.16203465304531894, "compression_ratio": 1.6391304347826088, "no_speech_prob": 0.321932315826416}, {"id": 73, "seek": 35900, "start": 373.0, "end": 378.0, "text": " So what are the results? Are they within a particular tolerance rate that you are going to be willing to accept?", "tokens": [51064, 407, 437, 366, 264, 3542, 30, 2014, 436, 1951, 257, 1729, 23368, 3314, 300, 291, 366, 516, 281, 312, 4950, 281, 3241, 30, 51314], "temperature": 0.0, "avg_logprob": -0.16203465304531894, "compression_ratio": 1.6391304347826088, "no_speech_prob": 0.321932315826416}, {"id": 74, "seek": 35900, "start": 378.0, "end": 387.0, "text": " And then at this stage then you say, right, I have a model here, I've trained, what I need to do is the final step, which is validation.", "tokens": [51314, 400, 550, 412, 341, 3233, 550, 291, 584, 11, 558, 11, 286, 362, 257, 2316, 510, 11, 286, 600, 8895, 11, 437, 286, 643, 281, 360, 307, 264, 2572, 1823, 11, 597, 307, 24071, 13, 51764], "temperature": 0.0, "avg_logprob": -0.16203465304531894, "compression_ratio": 1.6391304347826088, "no_speech_prob": 0.321932315826416}, {"id": 75, "seek": 38700, "start": 387.0, "end": 404.0, "text": " So then, testing the model against data that you didn't use when you were training to see if the model can actually learn when new data comes into it, and our as its predictions or its tasks as you expect them to be.", "tokens": [50364, 407, 550, 11, 4997, 264, 2316, 1970, 1412, 300, 291, 994, 380, 764, 562, 291, 645, 3097, 281, 536, 498, 264, 2316, 393, 767, 1466, 562, 777, 1412, 1487, 666, 309, 11, 293, 527, 382, 1080, 21264, 420, 1080, 9608, 382, 291, 2066, 552, 281, 312, 13, 51214], "temperature": 0.0, "avg_logprob": -0.21434123843323952, "compression_ratio": 1.5104895104895104, "no_speech_prob": 0.027413098141551018}, {"id": 76, "seek": 40400, "start": 405.0, "end": 416.0, "text": " So a big part of this I think going forward is open source could be the key with models because it's going to come down to trust.", "tokens": [50414, 407, 257, 955, 644, 295, 341, 286, 519, 516, 2128, 307, 1269, 4009, 727, 312, 264, 2141, 365, 5245, 570, 309, 311, 516, 281, 808, 760, 281, 3361, 13, 50964], "temperature": 0.0, "avg_logprob": -0.13781087239583334, "compression_ratio": 1.52, "no_speech_prob": 0.8371936678886414}, {"id": 77, "seek": 40400, "start": 416.0, "end": 420.0, "text": " Do we trust the model? Because let's be fair about it.", "tokens": [50964, 1144, 321, 3361, 264, 2316, 30, 1436, 718, 311, 312, 3143, 466, 309, 13, 51164], "temperature": 0.0, "avg_logprob": -0.13781087239583334, "compression_ratio": 1.52, "no_speech_prob": 0.8371936678886414}, {"id": 78, "seek": 40400, "start": 420.0, "end": 429.0, "text": " Even, you know, the people who write the models or the graded data scientists out there are machine learning engineers.", "tokens": [51164, 2754, 11, 291, 458, 11, 264, 561, 567, 2464, 264, 5245, 420, 264, 2771, 292, 1412, 7708, 484, 456, 366, 3479, 2539, 11955, 13, 51614], "temperature": 0.0, "avg_logprob": -0.13781087239583334, "compression_ratio": 1.52, "no_speech_prob": 0.8371936678886414}, {"id": 79, "seek": 42900, "start": 429.0, "end": 434.0, "text": " Sometimes they can't even predict what the answers are.", "tokens": [50364, 4803, 436, 393, 380, 754, 6069, 437, 264, 6338, 366, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10615485605567393, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.18016526103019714}, {"id": 80, "seek": 42900, "start": 434.0, "end": 441.0, "text": " So the key here for transparency and in the open and trust of models is going to be key.", "tokens": [50614, 407, 264, 2141, 510, 337, 17131, 293, 294, 264, 1269, 293, 3361, 295, 5245, 307, 516, 281, 312, 2141, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10615485605567393, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.18016526103019714}, {"id": 81, "seek": 42900, "start": 441.0, "end": 444.0, "text": " And the last two parts are the parts I like.", "tokens": [50964, 400, 264, 1036, 732, 3166, 366, 264, 3166, 286, 411, 13, 51114], "temperature": 0.0, "avg_logprob": -0.10615485605567393, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.18016526103019714}, {"id": 82, "seek": 42900, "start": 444.0, "end": 448.0, "text": " Running the model and calling the model, okay?", "tokens": [51114, 28136, 264, 2316, 293, 5141, 264, 2316, 11, 1392, 30, 51314], "temperature": 0.0, "avg_logprob": -0.10615485605567393, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.18016526103019714}, {"id": 83, "seek": 42900, "start": 448.0, "end": 458.0, "text": " So, you know, sometimes, you know, back in the day when you used, you know, binary tree library, you just wanted it to give you the answer.", "tokens": [51314, 407, 11, 291, 458, 11, 2171, 11, 291, 458, 11, 646, 294, 264, 786, 562, 291, 1143, 11, 291, 458, 11, 17434, 4230, 6405, 11, 291, 445, 1415, 309, 281, 976, 291, 264, 1867, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10615485605567393, "compression_ratio": 1.724770642201835, "no_speech_prob": 0.18016526103019714}, {"id": 84, "seek": 45800, "start": 458.0, "end": 463.0, "text": " You didn't want to be writing a vanilla binary tree unless you were into that.", "tokens": [50364, 509, 994, 380, 528, 281, 312, 3579, 257, 17528, 17434, 4230, 5969, 291, 645, 666, 300, 13, 50614], "temperature": 0.0, "avg_logprob": -0.17479345912025088, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.012285614386200905}, {"id": 85, "seek": 45800, "start": 463.0, "end": 470.0, "text": " So the same with the model. You want the model to do an operation for you, perform a task or make a prediction.", "tokens": [50614, 407, 264, 912, 365, 264, 2316, 13, 509, 528, 264, 2316, 281, 360, 364, 6916, 337, 291, 11, 2042, 257, 5633, 420, 652, 257, 17630, 13, 50964], "temperature": 0.0, "avg_logprob": -0.17479345912025088, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.012285614386200905}, {"id": 86, "seek": 45800, "start": 470.0, "end": 475.0, "text": " So that's what they call inferencing.", "tokens": [50964, 407, 300, 311, 437, 436, 818, 13596, 13644, 13, 51214], "temperature": 0.0, "avg_logprob": -0.17479345912025088, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.012285614386200905}, {"id": 87, "seek": 45800, "start": 475.0, "end": 480.0, "text": " A little bit around genera.vii because that's the buzzword. Everyone's talking about it.", "tokens": [51214, 316, 707, 857, 926, 1337, 64, 13, 4917, 72, 570, 300, 311, 264, 13036, 7462, 13, 5198, 311, 1417, 466, 309, 13, 51464], "temperature": 0.0, "avg_logprob": -0.17479345912025088, "compression_ratio": 1.5240384615384615, "no_speech_prob": 0.012285614386200905}, {"id": 88, "seek": 48000, "start": 480.0, "end": 485.0, "text": " And the key here is that it's a different type of model.", "tokens": [50364, 400, 264, 2141, 510, 307, 300, 309, 311, 257, 819, 2010, 295, 2316, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10709383517880983, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.5716773867607117}, {"id": 89, "seek": 48000, "start": 485.0, "end": 492.0, "text": " So your tradition in machine learning models were trained on label data.", "tokens": [50614, 407, 428, 6994, 294, 3479, 2539, 5245, 645, 8895, 322, 7645, 1412, 13, 50964], "temperature": 0.0, "avg_logprob": -0.10709383517880983, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.5716773867607117}, {"id": 90, "seek": 48000, "start": 492.0, "end": 496.0, "text": " So data that was specific for specific tasks.", "tokens": [50964, 407, 1412, 300, 390, 2685, 337, 2685, 9608, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10709383517880983, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.5716773867607117}, {"id": 91, "seek": 48000, "start": 496.0, "end": 504.0, "text": " A lot went into knowledge of the domain and knowledge that the data scientists need to know around that particular area.", "tokens": [51164, 316, 688, 1437, 666, 3601, 295, 264, 9274, 293, 3601, 300, 264, 1412, 7708, 643, 281, 458, 926, 300, 1729, 1859, 13, 51564], "temperature": 0.0, "avg_logprob": -0.10709383517880983, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.5716773867607117}, {"id": 92, "seek": 48000, "start": 504.0, "end": 506.0, "text": " And it was very intensive in the training.", "tokens": [51564, 400, 309, 390, 588, 18957, 294, 264, 3097, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10709383517880983, "compression_ratio": 1.661764705882353, "no_speech_prob": 0.5716773867607117}, {"id": 93, "seek": 50600, "start": 506.0, "end": 515.0, "text": " In this situation with the foundation models, what we're saying here is we're going to train it on a massive data setup on label data.", "tokens": [50364, 682, 341, 2590, 365, 264, 7030, 5245, 11, 437, 321, 434, 1566, 510, 307, 321, 434, 516, 281, 3847, 309, 322, 257, 5994, 1412, 8657, 322, 7645, 1412, 13, 50814], "temperature": 0.0, "avg_logprob": -0.10808566483584317, "compression_ratio": 1.7014218009478672, "no_speech_prob": 0.11784098297357559}, {"id": 94, "seek": 50600, "start": 515.0, "end": 520.0, "text": " And then you can use that model and fine tune it.", "tokens": [50814, 400, 550, 291, 393, 764, 300, 2316, 293, 2489, 10864, 309, 13, 51064], "temperature": 0.0, "avg_logprob": -0.10808566483584317, "compression_ratio": 1.7014218009478672, "no_speech_prob": 0.11784098297357559}, {"id": 95, "seek": 50600, "start": 520.0, "end": 524.0, "text": " Or so you can do different tuning like fine tuning where you take the model.", "tokens": [51064, 1610, 370, 291, 393, 360, 819, 15164, 411, 2489, 15164, 689, 291, 747, 264, 2316, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10808566483584317, "compression_ratio": 1.7014218009478672, "no_speech_prob": 0.11784098297357559}, {"id": 96, "seek": 50600, "start": 524.0, "end": 532.0, "text": " And because these models are deep learning models, there's going to have a lot of layers in them.", "tokens": [51264, 400, 570, 613, 5245, 366, 2452, 2539, 5245, 11, 456, 311, 516, 281, 362, 257, 688, 295, 7914, 294, 552, 13, 51664], "temperature": 0.0, "avg_logprob": -0.10808566483584317, "compression_ratio": 1.7014218009478672, "no_speech_prob": 0.11784098297357559}, {"id": 97, "seek": 53200, "start": 532.0, "end": 538.0, "text": " You may take one to number of layers off, put your own layers on top, i.e. you're going to train it against your own data.", "tokens": [50364, 509, 815, 747, 472, 281, 1230, 295, 7914, 766, 11, 829, 428, 1065, 7914, 322, 1192, 11, 741, 13, 68, 13, 291, 434, 516, 281, 3847, 309, 1970, 428, 1065, 1412, 13, 50664], "temperature": 0.0, "avg_logprob": -0.10325148420513801, "compression_ratio": 1.796, "no_speech_prob": 0.07988972216844559}, {"id": 98, "seek": 53200, "start": 538.0, "end": 551.0, "text": " Or you might use prompt tuning where when you're calling the model, you're going to pass it prompts like examples, what you're looking for, and guide it towards the answer you're looking for.", "tokens": [50664, 1610, 291, 1062, 764, 12391, 15164, 689, 562, 291, 434, 5141, 264, 2316, 11, 291, 434, 516, 281, 1320, 309, 41095, 411, 5110, 11, 437, 291, 434, 1237, 337, 11, 293, 5934, 309, 3030, 264, 1867, 291, 434, 1237, 337, 13, 51314], "temperature": 0.0, "avg_logprob": -0.10325148420513801, "compression_ratio": 1.796, "no_speech_prob": 0.07988972216844559}, {"id": 99, "seek": 53200, "start": 551.0, "end": 561.0, "text": " An example of this is around the large language models which are based on huge language data sets and can generate content from there.", "tokens": [51314, 1107, 1365, 295, 341, 307, 926, 264, 2416, 2856, 5245, 597, 366, 2361, 322, 2603, 2856, 1412, 6352, 293, 393, 8460, 2701, 490, 456, 13, 51814], "temperature": 0.0, "avg_logprob": -0.10325148420513801, "compression_ratio": 1.796, "no_speech_prob": 0.07988972216844559}, {"id": 100, "seek": 56100, "start": 561.0, "end": 573.0, "text": " And we can see that in which generative AI. It's about using these models or these generic style models to be able to generate high quality text, video, etc.", "tokens": [50364, 400, 321, 393, 536, 300, 294, 597, 1337, 1166, 7318, 13, 467, 311, 466, 1228, 613, 5245, 420, 613, 19577, 3758, 5245, 281, 312, 1075, 281, 8460, 1090, 3125, 2487, 11, 960, 11, 5183, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1332383155822754, "compression_ratio": 1.674641148325359, "no_speech_prob": 0.05558060482144356}, {"id": 101, "seek": 56100, "start": 573.0, "end": 577.0, "text": " So that's the whole idea of the generative where we're going now.", "tokens": [50964, 407, 300, 311, 264, 1379, 1558, 295, 264, 1337, 1166, 689, 321, 434, 516, 586, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1332383155822754, "compression_ratio": 1.674641148325359, "no_speech_prob": 0.05558060482144356}, {"id": 102, "seek": 56100, "start": 577.0, "end": 585.0, "text": " And the idea here that these models, one model can be used for different operations as opposed to be normally trained for one.", "tokens": [51164, 400, 264, 1558, 510, 300, 613, 5245, 11, 472, 2316, 393, 312, 1143, 337, 819, 7705, 382, 8851, 281, 312, 5646, 8895, 337, 472, 13, 51564], "temperature": 0.0, "avg_logprob": -0.1332383155822754, "compression_ratio": 1.674641148325359, "no_speech_prob": 0.05558060482144356}, {"id": 103, "seek": 58500, "start": 585.0, "end": 595.0, "text": " Okay, so that's my intro to the AI. And the next part is what I really want to get onto is around the frameworks.", "tokens": [50364, 1033, 11, 370, 300, 311, 452, 12897, 281, 264, 7318, 13, 400, 264, 958, 644, 307, 437, 286, 534, 528, 281, 483, 3911, 307, 926, 264, 29834, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16809967944496557, "compression_ratio": 1.4808743169398908, "no_speech_prob": 0.0631452426314354}, {"id": 104, "seek": 58500, "start": 595.0, "end": 604.0, "text": " So hands up who's heard of Hoganface. Okay, that's not a bad number.", "tokens": [50864, 407, 2377, 493, 567, 311, 2198, 295, 389, 21576, 2868, 13, 1033, 11, 300, 311, 406, 257, 1578, 1230, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16809967944496557, "compression_ratio": 1.4808743169398908, "no_speech_prob": 0.0631452426314354}, {"id": 105, "seek": 58500, "start": 604.0, "end": 612.0, "text": " So Hoganface has built up an AI community which is nice to see based around open source.", "tokens": [51314, 407, 389, 21576, 2868, 575, 3094, 493, 364, 7318, 1768, 597, 307, 1481, 281, 536, 2361, 926, 1269, 4009, 13, 51714], "temperature": 0.0, "avg_logprob": -0.16809967944496557, "compression_ratio": 1.4808743169398908, "no_speech_prob": 0.0631452426314354}, {"id": 106, "seek": 61200, "start": 612.0, "end": 621.0, "text": " It's key things being it is a series of libraries. It has a huge catalog of open source models and data sets.", "tokens": [50364, 467, 311, 2141, 721, 885, 309, 307, 257, 2638, 295, 15148, 13, 467, 575, 257, 2603, 19746, 295, 1269, 4009, 5245, 293, 1412, 6352, 13, 50814], "temperature": 0.0, "avg_logprob": -0.14327494303385416, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.05219627171754837}, {"id": 107, "seek": 61200, "start": 621.0, "end": 629.0, "text": " Now, how is this appealing to you if you want to use open source models or sorry, you want to use AI and models.", "tokens": [50814, 823, 11, 577, 307, 341, 23842, 281, 291, 498, 291, 528, 281, 764, 1269, 4009, 5245, 420, 2597, 11, 291, 528, 281, 764, 7318, 293, 5245, 13, 51214], "temperature": 0.0, "avg_logprob": -0.14327494303385416, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.05219627171754837}, {"id": 108, "seek": 61200, "start": 629.0, "end": 636.0, "text": " The great thing about this is you can pull those models down and you can run and use them locally.", "tokens": [51214, 440, 869, 551, 466, 341, 307, 291, 393, 2235, 729, 5245, 760, 293, 291, 393, 1190, 293, 764, 552, 16143, 13, 51564], "temperature": 0.0, "avg_logprob": -0.14327494303385416, "compression_ratio": 1.6984126984126984, "no_speech_prob": 0.05219627171754837}, {"id": 109, "seek": 63600, "start": 636.0, "end": 644.0, "text": " So that if something changes tomorrow morning with Hoganface, you can still use those models. You can use them locally.", "tokens": [50364, 407, 300, 498, 746, 2962, 4153, 2446, 365, 389, 21576, 2868, 11, 291, 393, 920, 764, 729, 5245, 13, 509, 393, 764, 552, 16143, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10950997001246403, "compression_ratio": 1.5308056872037914, "no_speech_prob": 0.1903223693370819}, {"id": 110, "seek": 63600, "start": 644.0, "end": 651.0, "text": " Now, they also provide a service where they host the models themselves. So you're directly just calling the models through their API.", "tokens": [50764, 823, 11, 436, 611, 2893, 257, 2643, 689, 436, 3975, 264, 5245, 2969, 13, 407, 291, 434, 3838, 445, 5141, 264, 5245, 807, 641, 9362, 13, 51114], "temperature": 0.0, "avg_logprob": -0.10950997001246403, "compression_ratio": 1.5308056872037914, "no_speech_prob": 0.1903223693370819}, {"id": 111, "seek": 63600, "start": 651.0, "end": 657.0, "text": " But I think it depends on what your setup is and your use cases, etc.", "tokens": [51114, 583, 286, 519, 309, 5946, 322, 437, 428, 8657, 307, 293, 428, 764, 3331, 11, 5183, 13, 51414], "temperature": 0.0, "avg_logprob": -0.10950997001246403, "compression_ratio": 1.5308056872037914, "no_speech_prob": 0.1903223693370819}, {"id": 112, "seek": 65700, "start": 658.0, "end": 662.0, "text": " So what I'd like to do with this when I'm looking through this is an example.", "tokens": [50414, 407, 437, 286, 1116, 411, 281, 360, 365, 341, 562, 286, 478, 1237, 807, 341, 307, 364, 1365, 13, 50614], "temperature": 0.0, "avg_logprob": -0.12619419785233232, "compression_ratio": 1.6929133858267718, "no_speech_prob": 0.1375153660774231}, {"id": 113, "seek": 65700, "start": 662.0, "end": 672.0, "text": " And this is an example using the Hoganface Transformer library. And it was an example up on the Ray framework, which I'm going to touch on straight after this.", "tokens": [50614, 400, 341, 307, 364, 1365, 1228, 264, 389, 21576, 2868, 27938, 260, 6405, 13, 400, 309, 390, 364, 1365, 493, 322, 264, 10883, 8388, 11, 597, 286, 478, 516, 281, 2557, 322, 2997, 934, 341, 13, 51114], "temperature": 0.0, "avg_logprob": -0.12619419785233232, "compression_ratio": 1.6929133858267718, "no_speech_prob": 0.1375153660774231}, {"id": 114, "seek": 65700, "start": 672.0, "end": 678.0, "text": " So the first thing is we're using a model called the T5, which is an encoder-decoder model.", "tokens": [51114, 407, 264, 700, 551, 307, 321, 434, 1228, 257, 2316, 1219, 264, 314, 20, 11, 597, 307, 364, 2058, 19866, 12, 42821, 19866, 2316, 13, 51414], "temperature": 0.0, "avg_logprob": -0.12619419785233232, "compression_ratio": 1.6929133858267718, "no_speech_prob": 0.1375153660774231}, {"id": 115, "seek": 65700, "start": 678.0, "end": 685.0, "text": " And these types of models are really geared for natural language processing, or NLP as they call it.", "tokens": [51414, 400, 613, 3467, 295, 5245, 366, 534, 35924, 337, 3303, 2856, 9007, 11, 420, 426, 45196, 382, 436, 818, 309, 13, 51764], "temperature": 0.0, "avg_logprob": -0.12619419785233232, "compression_ratio": 1.6929133858267718, "no_speech_prob": 0.1375153660774231}, {"id": 116, "seek": 68500, "start": 685.0, "end": 692.0, "text": " So when you're dealing with text of some sort in different languages, etc., it's usually text in, text out.", "tokens": [50364, 407, 562, 291, 434, 6260, 365, 2487, 295, 512, 1333, 294, 819, 8650, 11, 5183, 7933, 309, 311, 2673, 2487, 294, 11, 2487, 484, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1355452818029067, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.02173355594277382}, {"id": 117, "seek": 68500, "start": 694.0, "end": 698.0, "text": " And the task we want to do here is just a very simple example.", "tokens": [50814, 400, 264, 5633, 321, 528, 281, 360, 510, 307, 445, 257, 588, 2199, 1365, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1355452818029067, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.02173355594277382}, {"id": 118, "seek": 68500, "start": 698.0, "end": 705.0, "text": " Looking at the code is that what we want to do is just convert a bit of text to French.", "tokens": [51014, 11053, 412, 264, 3089, 307, 300, 437, 321, 528, 281, 360, 307, 445, 7620, 257, 857, 295, 2487, 281, 5522, 13, 51364], "temperature": 0.0, "avg_logprob": -0.1355452818029067, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.02173355594277382}, {"id": 119, "seek": 68500, "start": 705.0, "end": 712.0, "text": " And I use French because we're here in Belgium. I couldn't get Flemish or I didn't think of it, so sorry about that.", "tokens": [51364, 400, 286, 764, 5522, 570, 321, 434, 510, 294, 28094, 13, 286, 2809, 380, 483, 479, 10386, 742, 420, 286, 994, 380, 519, 295, 309, 11, 370, 2597, 466, 300, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1355452818029067, "compression_ratio": 1.5889830508474576, "no_speech_prob": 0.02173355594277382}, {"id": 120, "seek": 71200, "start": 713.0, "end": 720.0, "text": " So when we look at this, we see it's two real calls. The first one is we use the Transformer library, and we call Pipeline.", "tokens": [50414, 407, 562, 321, 574, 412, 341, 11, 321, 536, 309, 311, 732, 957, 5498, 13, 440, 700, 472, 307, 321, 764, 264, 27938, 260, 6405, 11, 293, 321, 818, 35396, 5440, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13080623149871826, "compression_ratio": 1.586021505376344, "no_speech_prob": 0.00402908306568861}, {"id": 121, "seek": 71200, "start": 720.0, "end": 725.0, "text": " And in Pipeline, you specify the model and the task you want to do.", "tokens": [50764, 400, 294, 35396, 5440, 11, 291, 16500, 264, 2316, 293, 264, 5633, 291, 528, 281, 360, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13080623149871826, "compression_ratio": 1.586021505376344, "no_speech_prob": 0.00402908306568861}, {"id": 122, "seek": 71200, "start": 725.0, "end": 734.0, "text": " And then inside the translate method, we're then going to call the model with the text that we send in.", "tokens": [51014, 400, 550, 1854, 264, 13799, 3170, 11, 321, 434, 550, 516, 281, 818, 264, 2316, 365, 264, 2487, 300, 321, 2845, 294, 13, 51464], "temperature": 0.0, "avg_logprob": -0.13080623149871826, "compression_ratio": 1.586021505376344, "no_speech_prob": 0.00402908306568861}, {"id": 123, "seek": 73400, "start": 734.0, "end": 744.0, "text": " Very simple Python class. When you run the class, if it's your first time calling that model, it will call out to Hug & Face,", "tokens": [50364, 4372, 2199, 15329, 1508, 13, 1133, 291, 1190, 264, 1508, 11, 498, 309, 311, 428, 700, 565, 5141, 300, 2316, 11, 309, 486, 818, 484, 281, 46892, 3693, 4047, 11, 50864], "temperature": 0.0, "avg_logprob": -0.20151522159576415, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.08901344239711761}, {"id": 124, "seek": 73400, "start": 744.0, "end": 749.0, "text": " Open Source Cal log, it will pull down the T5 model, and it will put it in cache.", "tokens": [50864, 7238, 29629, 3511, 3565, 11, 309, 486, 2235, 760, 264, 314, 20, 2316, 11, 293, 309, 486, 829, 309, 294, 19459, 13, 51114], "temperature": 0.0, "avg_logprob": -0.20151522159576415, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.08901344239711761}, {"id": 125, "seek": 73400, "start": 749.0, "end": 755.0, "text": " So any call after that for that particular version of the T5, it will get it locally.", "tokens": [51114, 407, 604, 818, 934, 300, 337, 300, 1729, 3037, 295, 264, 314, 20, 11, 309, 486, 483, 309, 16143, 13, 51414], "temperature": 0.0, "avg_logprob": -0.20151522159576415, "compression_ratio": 1.5502645502645502, "no_speech_prob": 0.08901344239711761}, {"id": 126, "seek": 75500, "start": 755.0, "end": 769.0, "text": " Ray. So Ray is a framework for scaling and distributing Python and machine learning applications.", "tokens": [50364, 10883, 13, 407, 10883, 307, 257, 8388, 337, 21589, 293, 41406, 15329, 293, 3479, 2539, 5821, 13, 51064], "temperature": 0.0, "avg_logprob": -0.1911893941588321, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.033797118812799454}, {"id": 127, "seek": 75500, "start": 769.0, "end": 776.0, "text": " So the capability is it's providing which is batch inferencing on CPUs, GPUs.", "tokens": [51064, 407, 264, 13759, 307, 309, 311, 6530, 597, 307, 15245, 13596, 13644, 322, 13199, 82, 11, 18407, 82, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1911893941588321, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.033797118812799454}, {"id": 128, "seek": 75500, "start": 776.0, "end": 780.0, "text": " So the inferencing being running the models, which we talked about earlier.", "tokens": [51414, 407, 264, 13596, 13644, 885, 2614, 264, 5245, 11, 597, 321, 2825, 466, 3071, 13, 51614], "temperature": 0.0, "avg_logprob": -0.1911893941588321, "compression_ratio": 1.494047619047619, "no_speech_prob": 0.033797118812799454}, {"id": 129, "seek": 78000, "start": 780.0, "end": 789.0, "text": " But the stuff we're interested in mostly. Obviously the serving of the models, hosting them up, having them ready to go, providing an API in front of them.", "tokens": [50364, 583, 264, 1507, 321, 434, 3102, 294, 5240, 13, 7580, 264, 8148, 295, 264, 5245, 11, 16058, 552, 493, 11, 1419, 552, 1919, 281, 352, 11, 6530, 364, 9362, 294, 1868, 295, 552, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15452877516599045, "compression_ratio": 1.7076271186440677, "no_speech_prob": 0.17920969426631927}, {"id": 130, "seek": 78000, "start": 789.0, "end": 795.0, "text": " Also training of models, large language models. So that's if you have your large language model.", "tokens": [50814, 2743, 3097, 295, 5245, 11, 2416, 2856, 5245, 13, 407, 300, 311, 498, 291, 362, 428, 2416, 2856, 2316, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15452877516599045, "compression_ratio": 1.7076271186440677, "no_speech_prob": 0.17920969426631927}, {"id": 131, "seek": 78000, "start": 795.0, "end": 802.0, "text": " It's not, I suppose it's not giving you results you want for the particular operations you want.", "tokens": [51114, 467, 311, 406, 11, 286, 7297, 309, 311, 406, 2902, 291, 3542, 291, 528, 337, 264, 1729, 7705, 291, 528, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15452877516599045, "compression_ratio": 1.7076271186440677, "no_speech_prob": 0.17920969426631927}, {"id": 132, "seek": 78000, "start": 802.0, "end": 805.0, "text": " Then you may decide to train that with your own data.", "tokens": [51464, 1396, 291, 815, 4536, 281, 3847, 300, 365, 428, 1065, 1412, 13, 51614], "temperature": 0.0, "avg_logprob": -0.15452877516599045, "compression_ratio": 1.7076271186440677, "no_speech_prob": 0.17920969426631927}, {"id": 133, "seek": 80500, "start": 805.0, "end": 809.0, "text": " So in that case, you'll create a new version of the model.", "tokens": [50364, 407, 294, 300, 1389, 11, 291, 603, 1884, 257, 777, 3037, 295, 264, 2316, 13, 50564], "temperature": 0.0, "avg_logprob": -0.13421961701946494, "compression_ratio": 1.4926829268292683, "no_speech_prob": 0.015711499378085136}, {"id": 134, "seek": 80500, "start": 809.0, "end": 815.0, "text": " And then other operations like reinforced learning, etc.", "tokens": [50564, 400, 550, 661, 7705, 411, 31365, 2539, 11, 5183, 13, 50864], "temperature": 0.0, "avg_logprob": -0.13421961701946494, "compression_ratio": 1.4926829268292683, "no_speech_prob": 0.015711499378085136}, {"id": 135, "seek": 80500, "start": 815.0, "end": 824.0, "text": " So if we want to use Ray to now host the model, in this scenario, what's going to happen is Ray has a nice little HTTP server.", "tokens": [50864, 407, 498, 321, 528, 281, 764, 10883, 281, 586, 3975, 264, 2316, 11, 294, 341, 9005, 11, 437, 311, 516, 281, 1051, 307, 10883, 575, 257, 1481, 707, 33283, 7154, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13421961701946494, "compression_ratio": 1.4926829268292683, "no_speech_prob": 0.015711499378085136}, {"id": 136, "seek": 80500, "start": 824.0, "end": 829.0, "text": " And pretty much all you have to do is put an annotation on top.", "tokens": [51314, 400, 1238, 709, 439, 291, 362, 281, 360, 307, 829, 364, 48654, 322, 1192, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13421961701946494, "compression_ratio": 1.4926829268292683, "no_speech_prob": 0.015711499378085136}, {"id": 137, "seek": 82900, "start": 829.0, "end": 834.0, "text": " You can see just below the translator class called serve deployment.", "tokens": [50364, 509, 393, 536, 445, 2507, 264, 35223, 1508, 1219, 4596, 19317, 13, 50614], "temperature": 0.0, "avg_logprob": -0.1549862284719208, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.2693038582801819}, {"id": 138, "seek": 82900, "start": 834.0, "end": 838.0, "text": " And you can pass args in there if you want.", "tokens": [50614, 400, 291, 393, 1320, 3882, 82, 294, 456, 498, 291, 528, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1549862284719208, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.2693038582801819}, {"id": 139, "seek": 82900, "start": 838.0, "end": 847.0, "text": " And the next part that's important is the callback function, which is called underscore underscore call underscore underscore.", "tokens": [50814, 400, 264, 958, 644, 300, 311, 1021, 307, 264, 818, 3207, 2445, 11, 597, 307, 1219, 37556, 37556, 818, 37556, 37556, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1549862284719208, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.2693038582801819}, {"id": 140, "seek": 82900, "start": 847.0, "end": 858.0, "text": " So in this situation, once you you have your call, you have your annotation, you can then call this class using.", "tokens": [51264, 407, 294, 341, 2590, 11, 1564, 291, 291, 362, 428, 818, 11, 291, 362, 428, 48654, 11, 291, 393, 550, 818, 341, 1508, 1228, 13, 51814], "temperature": 0.0, "avg_logprob": -0.1549862284719208, "compression_ratio": 1.7777777777777777, "no_speech_prob": 0.2693038582801819}, {"id": 141, "seek": 85800, "start": 859.0, "end": 870.0, "text": " Using server on. So it then will load it in a HTTP server and it'll provide the interface to it and you can call it as follows.", "tokens": [50414, 11142, 7154, 322, 13, 407, 309, 550, 486, 3677, 309, 294, 257, 33283, 7154, 293, 309, 603, 2893, 264, 9226, 281, 309, 293, 291, 393, 818, 309, 382, 10002, 13, 50964], "temperature": 0.0, "avg_logprob": -0.1909350655295632, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015825647860765457}, {"id": 142, "seek": 85800, "start": 875.0, "end": 881.0, "text": " The next and the final framework I want to look at is the Triton inference server.", "tokens": [51214, 440, 958, 293, 264, 2572, 8388, 286, 528, 281, 574, 412, 307, 264, 1765, 270, 266, 38253, 7154, 13, 51514], "temperature": 0.0, "avg_logprob": -0.1909350655295632, "compression_ratio": 1.4383561643835616, "no_speech_prob": 0.015825647860765457}, {"id": 143, "seek": 88100, "start": 881.0, "end": 893.0, "text": " And the inference server provides you with support.", "tokens": [50364, 400, 264, 38253, 7154, 6417, 291, 365, 1406, 13, 50964], "temperature": 0.0, "avg_logprob": -0.2322393380678617, "compression_ratio": 1.4539877300613497, "no_speech_prob": 0.05178897827863693}, {"id": 144, "seek": 88100, "start": 893.0, "end": 902.0, "text": " For most machine learning applications and frameworks, as well as custom C++ and Python backends.", "tokens": [50964, 1171, 881, 3479, 2539, 5821, 293, 29834, 11, 382, 731, 382, 2375, 383, 25472, 293, 15329, 646, 2581, 13, 51414], "temperature": 0.0, "avg_logprob": -0.2322393380678617, "compression_ratio": 1.4539877300613497, "no_speech_prob": 0.05178897827863693}, {"id": 145, "seek": 88100, "start": 902.0, "end": 907.0, "text": " So you can see the different frameworks that supports there and processes support, etc.", "tokens": [51414, 407, 291, 393, 536, 264, 819, 29834, 300, 9346, 456, 293, 7555, 1406, 11, 5183, 13, 51664], "temperature": 0.0, "avg_logprob": -0.2322393380678617, "compression_ratio": 1.4539877300613497, "no_speech_prob": 0.05178897827863693}, {"id": 146, "seek": 90700, "start": 907.0, "end": 915.0, "text": " And this time, if you want to wrap it or use it, you need to actually call the class.", "tokens": [50364, 400, 341, 565, 11, 498, 291, 528, 281, 7019, 309, 420, 764, 309, 11, 291, 643, 281, 767, 818, 264, 1508, 13, 50764], "temperature": 0.0, "avg_logprob": -0.16986701067756205, "compression_ratio": 1.5633187772925765, "no_speech_prob": 0.01660262979567051}, {"id": 147, "seek": 90700, "start": 915.0, "end": 917.0, "text": " I'm going to read it from up here.", "tokens": [50764, 286, 478, 516, 281, 1401, 309, 490, 493, 510, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16986701067756205, "compression_ratio": 1.5633187772925765, "no_speech_prob": 0.01660262979567051}, {"id": 148, "seek": 90700, "start": 917.0, "end": 921.0, "text": " It should be either Triton, Python model, which is a bit of a mouthful.", "tokens": [50864, 467, 820, 312, 2139, 1765, 270, 266, 11, 15329, 2316, 11, 597, 307, 257, 857, 295, 257, 4525, 906, 13, 51064], "temperature": 0.0, "avg_logprob": -0.16986701067756205, "compression_ratio": 1.5633187772925765, "no_speech_prob": 0.01660262979567051}, {"id": 149, "seek": 90700, "start": 921.0, "end": 929.0, "text": " And then you need an execute method. And that's where the HTTP request we're calling to just note here.", "tokens": [51064, 400, 550, 291, 643, 364, 14483, 3170, 13, 400, 300, 311, 689, 264, 33283, 5308, 321, 434, 5141, 281, 445, 3637, 510, 13, 51464], "temperature": 0.0, "avg_logprob": -0.16986701067756205, "compression_ratio": 1.5633187772925765, "no_speech_prob": 0.01660262979567051}, {"id": 150, "seek": 90700, "start": 929.0, "end": 934.0, "text": " It's not using JSON data types. It's using tensor data types.", "tokens": [51464, 467, 311, 406, 1228, 31828, 1412, 3467, 13, 467, 311, 1228, 40863, 1412, 3467, 13, 51714], "temperature": 0.0, "avg_logprob": -0.16986701067756205, "compression_ratio": 1.5633187772925765, "no_speech_prob": 0.01660262979567051}, {"id": 151, "seek": 93400, "start": 934.0, "end": 939.0, "text": " Okay, so I don't know if you've experienced of using tensors, etc.", "tokens": [50364, 1033, 11, 370, 286, 500, 380, 458, 498, 291, 600, 6751, 295, 1228, 10688, 830, 11, 5183, 13, 50614], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 152, "seek": 93400, "start": 939.0, "end": 942.0, "text": " PyTorch or anything like that, you'll be used to that.", "tokens": [50614, 9953, 51, 284, 339, 420, 1340, 411, 300, 11, 291, 603, 312, 1143, 281, 300, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 153, "seek": 93400, "start": 942.0, "end": 947.0, "text": " So you have to convert it in into into Python data types so you can process it.", "tokens": [50764, 407, 291, 362, 281, 7620, 309, 294, 666, 666, 15329, 1412, 3467, 370, 291, 393, 1399, 309, 13, 51014], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 154, "seek": 93400, "start": 949.0, "end": 954.0, "text": " The other thing you need to do to bootstrap it is you're going to need a configuration file and that config file.", "tokens": [51114, 440, 661, 551, 291, 643, 281, 360, 281, 11450, 372, 4007, 309, 307, 291, 434, 516, 281, 643, 257, 11694, 3991, 293, 300, 6662, 3991, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 155, "seek": 93400, "start": 954.0, "end": 958.0, "text": " You give it the name of your particular model.", "tokens": [51364, 509, 976, 309, 264, 1315, 295, 428, 1729, 2316, 13, 51564], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 156, "seek": 93400, "start": 958.0, "end": 960.0, "text": " So I'll call it the model you want to host.", "tokens": [51564, 407, 286, 603, 818, 309, 264, 2316, 291, 528, 281, 3975, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 157, "seek": 93400, "start": 960.0, "end": 963.0, "text": " So it's going to be the local name that's going to host.", "tokens": [51664, 407, 309, 311, 516, 281, 312, 264, 2654, 1315, 300, 311, 516, 281, 3975, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13632139540810623, "compression_ratio": 1.7340823970037453, "no_speech_prob": 0.005150065757334232}, {"id": 158, "seek": 96300, "start": 963.0, "end": 967.0, "text": " And then you tell it what back end, in this case is Python, and your input output.", "tokens": [50364, 400, 550, 291, 980, 309, 437, 646, 917, 11, 294, 341, 1389, 307, 15329, 11, 293, 428, 4846, 5598, 13, 50564], "temperature": 0.0, "avg_logprob": -0.17482271859812182, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0014482629485428333}, {"id": 159, "seek": 96300, "start": 967.0, "end": 972.0, "text": " And those input outputs are binary tensor flow types.", "tokens": [50564, 400, 729, 4846, 23930, 366, 17434, 40863, 3095, 3467, 13, 50814], "temperature": 0.0, "avg_logprob": -0.17482271859812182, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0014482629485428333}, {"id": 160, "seek": 96300, "start": 972.0, "end": 977.0, "text": " And the last thing you do then is you need this model directory down here.", "tokens": [50814, 400, 264, 1036, 551, 291, 360, 550, 307, 291, 643, 341, 2316, 21120, 760, 510, 13, 51064], "temperature": 0.0, "avg_logprob": -0.17482271859812182, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0014482629485428333}, {"id": 161, "seek": 96300, "start": 977.0, "end": 986.0, "text": " So in a minute when we call models, it must be under this with the name of the wrapper model class and your config and your model file.", "tokens": [51064, 407, 294, 257, 3456, 562, 321, 818, 5245, 11, 309, 1633, 312, 833, 341, 365, 264, 1315, 295, 264, 46906, 2316, 1508, 293, 428, 6662, 293, 428, 2316, 3991, 13, 51514], "temperature": 0.0, "avg_logprob": -0.17482271859812182, "compression_ratio": 1.6763285024154588, "no_speech_prob": 0.0014482629485428333}, {"id": 162, "seek": 98600, "start": 987.0, "end": 992.0, "text": " And finally, to call it then, there's a number of ways you can do it.", "tokens": [50414, 400, 2721, 11, 281, 818, 309, 550, 11, 456, 311, 257, 1230, 295, 2098, 291, 393, 360, 309, 13, 50664], "temperature": 0.0, "avg_logprob": -0.13211684877222235, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.03216409683227539}, {"id": 163, "seek": 98600, "start": 992.0, "end": 997.0, "text": " One easy way is to use Docker and run its container.", "tokens": [50664, 1485, 1858, 636, 307, 281, 764, 33772, 293, 1190, 1080, 10129, 13, 50914], "temperature": 0.0, "avg_logprob": -0.13211684877222235, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.03216409683227539}, {"id": 164, "seek": 98600, "start": 997.0, "end": 1006.0, "text": " And when you run that then, you then need to copy the artifacts, which is the model directory that we set up into the container.", "tokens": [50914, 400, 562, 291, 1190, 300, 550, 11, 291, 550, 643, 281, 5055, 264, 24617, 11, 597, 307, 264, 2316, 21120, 300, 321, 992, 493, 666, 264, 10129, 13, 51364], "temperature": 0.0, "avg_logprob": -0.13211684877222235, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.03216409683227539}, {"id": 165, "seek": 98600, "start": 1006.0, "end": 1015.0, "text": " And then you call the Triton server executable to run it as a HTTP server.", "tokens": [51364, 400, 550, 291, 818, 264, 1765, 270, 266, 7154, 7568, 712, 281, 1190, 309, 382, 257, 33283, 7154, 13, 51814], "temperature": 0.0, "avg_logprob": -0.13211684877222235, "compression_ratio": 1.6059113300492611, "no_speech_prob": 0.03216409683227539}, {"id": 166, "seek": 101500, "start": 1015.0, "end": 1024.0, "text": " And you can call it in the call request above with that path in the name of your model and in fare.", "tokens": [50364, 400, 291, 393, 818, 309, 294, 264, 818, 5308, 3673, 365, 300, 3100, 294, 264, 1315, 295, 428, 2316, 293, 294, 11994, 13, 50814], "temperature": 0.0, "avg_logprob": -0.25924242655436197, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005322382319718599}, {"id": 167, "seek": 101500, "start": 1027.0, "end": 1037.0, "text": " So before I go on to the demo, I just want to just do a little summary of that.", "tokens": [50964, 407, 949, 286, 352, 322, 281, 264, 10723, 11, 286, 445, 528, 281, 445, 360, 257, 707, 12691, 295, 300, 13, 51464], "temperature": 0.0, "avg_logprob": -0.25924242655436197, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005322382319718599}, {"id": 168, "seek": 101500, "start": 1037.0, "end": 1044.0, "text": " So I'm after choosing three frameworks and you're probably someone's probably up the back on each and go on.", "tokens": [51464, 407, 286, 478, 934, 10875, 1045, 29834, 293, 291, 434, 1391, 1580, 311, 1391, 493, 264, 646, 322, 1184, 293, 352, 322, 13, 51814], "temperature": 0.0, "avg_logprob": -0.25924242655436197, "compression_ratio": 1.5238095238095237, "no_speech_prob": 0.005322382319718599}, {"id": 169, "seek": 104400, "start": 1044.0, "end": 1047.0, "text": " There's loads more. Yes, there is.", "tokens": [50364, 821, 311, 12668, 544, 13, 1079, 11, 456, 307, 13, 50514], "temperature": 0.0, "avg_logprob": -0.1886559190421269, "compression_ratio": 1.4930232558139536, "no_speech_prob": 0.037114910781383514}, {"id": 170, "seek": 104400, "start": 1047.0, "end": 1053.0, "text": " You VLM, you know, which is a nice alternative note to Hogan phase teachers.", "tokens": [50514, 509, 691, 43, 44, 11, 291, 458, 11, 597, 307, 257, 1481, 8535, 3637, 281, 389, 21576, 5574, 6023, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1886559190421269, "compression_ratio": 1.4930232558139536, "no_speech_prob": 0.037114910781383514}, {"id": 171, "seek": 104400, "start": 1053.0, "end": 1060.0, "text": " And there's just so many of them because this space is just growing phenomenally.", "tokens": [50814, 400, 456, 311, 445, 370, 867, 295, 552, 570, 341, 1901, 307, 445, 4194, 9388, 379, 13, 51164], "temperature": 0.0, "avg_logprob": -0.1886559190421269, "compression_ratio": 1.4930232558139536, "no_speech_prob": 0.037114910781383514}, {"id": 172, "seek": 104400, "start": 1060.0, "end": 1065.0, "text": " We probably saw it with cloud native over 10 years ago.", "tokens": [51164, 492, 1391, 1866, 309, 365, 4588, 8470, 670, 1266, 924, 2057, 13, 51414], "temperature": 0.0, "avg_logprob": -0.1886559190421269, "compression_ratio": 1.4930232558139536, "no_speech_prob": 0.037114910781383514}, {"id": 173, "seek": 104400, "start": 1065.0, "end": 1070.0, "text": " And you can see it at the moment that there's more and more frameworks.", "tokens": [51414, 400, 291, 393, 536, 309, 412, 264, 1623, 300, 456, 311, 544, 293, 544, 29834, 13, 51664], "temperature": 0.0, "avg_logprob": -0.1886559190421269, "compression_ratio": 1.4930232558139536, "no_speech_prob": 0.037114910781383514}, {"id": 174, "seek": 107000, "start": 1070.0, "end": 1079.0, "text": " And I think the key here will be if we can have these frameworks be open source as well with the models.", "tokens": [50364, 400, 286, 519, 264, 2141, 510, 486, 312, 498, 321, 393, 362, 613, 29834, 312, 1269, 4009, 382, 731, 365, 264, 5245, 13, 50814], "temperature": 0.0, "avg_logprob": -0.08795427239459494, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.01700105145573616}, {"id": 175, "seek": 107000, "start": 1079.0, "end": 1085.0, "text": " And then if companies want to put their value on top, then they can put their sauce on top.", "tokens": [50814, 400, 550, 498, 3431, 528, 281, 829, 641, 2158, 322, 1192, 11, 550, 436, 393, 829, 641, 4880, 322, 1192, 13, 51114], "temperature": 0.0, "avg_logprob": -0.08795427239459494, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.01700105145573616}, {"id": 176, "seek": 107000, "start": 1085.0, "end": 1093.0, "text": " But for most of us here, we would like to be able to choose our framework and see if it'll do what we needed to do.", "tokens": [51114, 583, 337, 881, 295, 505, 510, 11, 321, 576, 411, 281, 312, 1075, 281, 2826, 527, 8388, 293, 536, 498, 309, 603, 360, 437, 321, 2978, 281, 360, 13, 51514], "temperature": 0.0, "avg_logprob": -0.08795427239459494, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.01700105145573616}, {"id": 177, "seek": 107000, "start": 1093.0, "end": 1095.0, "text": " So load our models and stuff like that.", "tokens": [51514, 407, 3677, 527, 5245, 293, 1507, 411, 300, 13, 51614], "temperature": 0.0, "avg_logprob": -0.08795427239459494, "compression_ratio": 1.6603773584905661, "no_speech_prob": 0.01700105145573616}, {"id": 178, "seek": 109500, "start": 1095.0, "end": 1100.0, "text": " The other one I'm shown here, I'm just obviously running locally and I'll be running something locally here in a minute.", "tokens": [50364, 440, 661, 472, 286, 478, 4898, 510, 11, 286, 478, 445, 2745, 2614, 16143, 293, 286, 603, 312, 2614, 746, 16143, 510, 294, 257, 3456, 13, 50614], "temperature": 0.0, "avg_logprob": -0.10339415924889701, "compression_ratio": 1.7554744525547445, "no_speech_prob": 0.6094114780426025}, {"id": 179, "seek": 109500, "start": 1100.0, "end": 1109.0, "text": " But the idea here is that you'll deploy this into some system bare metal, a cloud system, whatever, because depending on the model,", "tokens": [50614, 583, 264, 1558, 510, 307, 300, 291, 603, 7274, 341, 666, 512, 1185, 6949, 5760, 11, 257, 4588, 1185, 11, 2035, 11, 570, 5413, 322, 264, 2316, 11, 51064], "temperature": 0.0, "avg_logprob": -0.10339415924889701, "compression_ratio": 1.7554744525547445, "no_speech_prob": 0.6094114780426025}, {"id": 180, "seek": 109500, "start": 1109.0, "end": 1113.0, "text": " it's going to need serious resources to run a lot of the time.", "tokens": [51064, 309, 311, 516, 281, 643, 3156, 3593, 281, 1190, 257, 688, 295, 264, 565, 13, 51264], "temperature": 0.0, "avg_logprob": -0.10339415924889701, "compression_ratio": 1.7554744525547445, "no_speech_prob": 0.6094114780426025}, {"id": 181, "seek": 109500, "start": 1113.0, "end": 1123.0, "text": " But as I said, there seems to be a shift towards the smaller models and then the plugability in these models where you can have different capabilities in the models.", "tokens": [51264, 583, 382, 286, 848, 11, 456, 2544, 281, 312, 257, 5513, 3030, 264, 4356, 5245, 293, 550, 264, 5452, 2310, 294, 613, 5245, 689, 291, 393, 362, 819, 10862, 294, 264, 5245, 13, 51764], "temperature": 0.0, "avg_logprob": -0.10339415924889701, "compression_ratio": 1.7554744525547445, "no_speech_prob": 0.6094114780426025}, {"id": 182, "seek": 112300, "start": 1123.0, "end": 1130.0, "text": " But that's something for me to learn down the line and for the data scientists to come and tell us about.", "tokens": [50364, 583, 300, 311, 746, 337, 385, 281, 1466, 760, 264, 1622, 293, 337, 264, 1412, 7708, 281, 808, 293, 980, 505, 466, 13, 50714], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 183, "seek": 112300, "start": 1130.0, "end": 1132.0, "text": " Okay, so let's do a quick download.", "tokens": [50714, 1033, 11, 370, 718, 311, 360, 257, 1702, 5484, 13, 50814], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 184, "seek": 112300, "start": 1134.0, "end": 1136.0, "text": " Yeah, I'll just escape here one second.", "tokens": [50914, 865, 11, 286, 603, 445, 7615, 510, 472, 1150, 13, 51014], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 185, "seek": 112300, "start": 1138.0, "end": 1139.0, "text": " You want?", "tokens": [51114, 509, 528, 30, 51164], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 186, "seek": 112300, "start": 1139.0, "end": 1141.0, "text": " Yeah, if you don't mind.", "tokens": [51164, 865, 11, 498, 291, 500, 380, 1575, 13, 51264], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 187, "seek": 112300, "start": 1141.0, "end": 1142.0, "text": " Thanks very much.", "tokens": [51264, 2561, 588, 709, 13, 51314], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 188, "seek": 112300, "start": 1148.0, "end": 1150.0, "text": " Just before I show this.", "tokens": [51614, 1449, 949, 286, 855, 341, 13, 51714], "temperature": 0.0, "avg_logprob": -0.1965423583984375, "compression_ratio": 1.4076086956521738, "no_speech_prob": 0.032656487077474594}, {"id": 189, "seek": 115000, "start": 1151.0, "end": 1164.0, "text": " So what I'm doing is, I'm just running a framework here called KK.", "tokens": [50414, 407, 437, 286, 478, 884, 307, 11, 286, 478, 445, 2614, 257, 8388, 510, 1219, 591, 42, 13, 51064], "temperature": 0.0, "avg_logprob": -0.25276276043483187, "compression_ratio": 1.36986301369863, "no_speech_prob": 0.008039342239499092}, {"id": 190, "seek": 115000, "start": 1164.0, "end": 1173.0, "text": " And why I'm running this is a colleague of mine, Mark Stewart, did a really nice UI using radio, the radio framework, if you know it,", "tokens": [51064, 400, 983, 286, 478, 2614, 341, 307, 257, 13532, 295, 3892, 11, 3934, 25951, 11, 630, 257, 534, 1481, 15682, 1228, 6477, 11, 264, 6477, 8388, 11, 498, 291, 458, 309, 11, 51514], "temperature": 0.0, "avg_logprob": -0.25276276043483187, "compression_ratio": 1.36986301369863, "no_speech_prob": 0.008039342239499092}, {"id": 191, "seek": 117300, "start": 1173.0, "end": 1180.0, "text": " a Python framework for it's very handy for for doing UI, active access stuff and elements and things like that.", "tokens": [50364, 257, 15329, 8388, 337, 309, 311, 588, 13239, 337, 337, 884, 15682, 11, 4967, 2105, 1507, 293, 4959, 293, 721, 411, 300, 13, 50714], "temperature": 0.0, "avg_logprob": -0.21561531973357248, "compression_ratio": 1.7745098039215685, "no_speech_prob": 0.3183751702308655}, {"id": 192, "seek": 117300, "start": 1180.0, "end": 1182.0, "text": " And I'm just showing you here that I'm running it.", "tokens": [50714, 400, 286, 478, 445, 4099, 291, 510, 300, 286, 478, 2614, 309, 13, 50814], "temperature": 0.0, "avg_logprob": -0.21561531973357248, "compression_ratio": 1.7745098039215685, "no_speech_prob": 0.3183751702308655}, {"id": 193, "seek": 117300, "start": 1182.0, "end": 1188.0, "text": " And what it's running is it's running the AI, sorry, it's running the UI as a HPP server.", "tokens": [50814, 400, 437, 309, 311, 2614, 307, 309, 311, 2614, 264, 7318, 11, 2597, 11, 309, 311, 2614, 264, 15682, 382, 257, 12557, 47, 7154, 13, 51114], "temperature": 0.0, "avg_logprob": -0.21561531973357248, "compression_ratio": 1.7745098039215685, "no_speech_prob": 0.3183751702308655}, {"id": 194, "seek": 117300, "start": 1188.0, "end": 1194.0, "text": " And it's also running the back end server with a gRPC and HPP interface.", "tokens": [51114, 400, 309, 311, 611, 2614, 264, 646, 917, 7154, 365, 257, 290, 49, 12986, 293, 12557, 47, 9226, 13, 51414], "temperature": 0.0, "avg_logprob": -0.21561531973357248, "compression_ratio": 1.7745098039215685, "no_speech_prob": 0.3183751702308655}, {"id": 195, "seek": 117300, "start": 1194.0, "end": 1197.0, "text": " And the back end server is the host.", "tokens": [51414, 400, 264, 646, 917, 7154, 307, 264, 3975, 13, 51564], "temperature": 0.0, "avg_logprob": -0.21561531973357248, "compression_ratio": 1.7745098039215685, "no_speech_prob": 0.3183751702308655}, {"id": 196, "seek": 119700, "start": 1197.0, "end": 1207.0, "text": " So where it's hosting the model and it's and the way to run those models are similar to the other frameworks I've shown by wrapping the model for the particular artifacts that's needed.", "tokens": [50364, 407, 689, 309, 311, 16058, 264, 2316, 293, 309, 311, 293, 264, 636, 281, 1190, 729, 5245, 366, 2531, 281, 264, 661, 29834, 286, 600, 4898, 538, 21993, 264, 2316, 337, 264, 1729, 24617, 300, 311, 2978, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14898935353980874, "compression_ratio": 1.4594594594594594, "no_speech_prob": 0.019407087936997414}, {"id": 197, "seek": 119700, "start": 1216.0, "end": 1218.0, "text": " Okay, so here's the simple UI.", "tokens": [51314, 1033, 11, 370, 510, 311, 264, 2199, 15682, 13, 51414], "temperature": 0.0, "avg_logprob": -0.14898935353980874, "compression_ratio": 1.4594594594594594, "no_speech_prob": 0.019407087936997414}, {"id": 198, "seek": 121800, "start": 1219.0, "end": 1226.0, "text": " And what I want to do is just play with models for a minute and then just show, look, it's just code wrapped in the back end.", "tokens": [50414, 400, 437, 286, 528, 281, 360, 307, 445, 862, 365, 5245, 337, 257, 3456, 293, 550, 445, 855, 11, 574, 11, 309, 311, 445, 3089, 14226, 294, 264, 646, 917, 13, 50764], "temperature": 0.0, "avg_logprob": -0.11101176341374715, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.10859157145023346}, {"id": 199, "seek": 121800, "start": 1226.0, "end": 1236.0, "text": " And as developers, we can just use these models to perform operations that, you know, we might take us ages to write or would be quite difficult to write.", "tokens": [50764, 400, 382, 8849, 11, 321, 393, 445, 764, 613, 5245, 281, 2042, 7705, 300, 11, 291, 458, 11, 321, 1062, 747, 505, 12357, 281, 2464, 420, 576, 312, 1596, 2252, 281, 2464, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11101176341374715, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.10859157145023346}, {"id": 200, "seek": 121800, "start": 1236.0, "end": 1238.0, "text": " And we can use these off the shelf models, hopefully.", "tokens": [51264, 400, 321, 393, 764, 613, 766, 264, 15222, 5245, 11, 4696, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11101176341374715, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.10859157145023346}, {"id": 201, "seek": 121800, "start": 1238.0, "end": 1241.0, "text": " So the first one is putting in a sentence like.", "tokens": [51364, 407, 264, 700, 472, 307, 3372, 294, 257, 8174, 411, 13, 51514], "temperature": 0.0, "avg_logprob": -0.11101176341374715, "compression_ratio": 1.6324786324786325, "no_speech_prob": 0.10859157145023346}, {"id": 202, "seek": 124800, "start": 1249.0, "end": 1253.0, "text": " I can.", "tokens": [50414, 286, 393, 13, 50614], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 203, "seek": 124800, "start": 1253.0, "end": 1254.0, "text": " How's that?", "tokens": [50614, 1012, 311, 300, 30, 50664], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 204, "seek": 124800, "start": 1254.0, "end": 1255.0, "text": " Better?", "tokens": [50664, 15753, 30, 50714], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 205, "seek": 124800, "start": 1255.0, "end": 1256.0, "text": " More.", "tokens": [50714, 5048, 13, 50764], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 206, "seek": 124800, "start": 1256.0, "end": 1261.0, "text": " This is where you were told in class to come down to the front.", "tokens": [50764, 639, 307, 689, 291, 645, 1907, 294, 1508, 281, 808, 760, 281, 264, 1868, 13, 51014], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 207, "seek": 124800, "start": 1261.0, "end": 1263.0, "text": " Did you hear that?", "tokens": [51014, 2589, 291, 1568, 300, 30, 51114], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 208, "seek": 124800, "start": 1263.0, "end": 1264.0, "text": " That's better.", "tokens": [51114, 663, 311, 1101, 13, 51164], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 209, "seek": 124800, "start": 1264.0, "end": 1265.0, "text": " Thank you.", "tokens": [51164, 1044, 291, 13, 51214], "temperature": 0.0, "avg_logprob": -0.45479209082467215, "compression_ratio": 1.2155172413793103, "no_speech_prob": 0.029105262830853462}, {"id": 210, "seek": 126500, "start": 1266.0, "end": 1267.0, "text": " Thank you.", "tokens": [50414, 1044, 291, 13, 50464], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 211, "seek": 126500, "start": 1267.0, "end": 1274.0, "text": " So what I want to do here is I'm using a model that does sentence similarity and I put in the canine is fast is my source.", "tokens": [50464, 407, 437, 286, 528, 281, 360, 510, 307, 286, 478, 1228, 257, 2316, 300, 775, 8174, 32194, 293, 286, 829, 294, 264, 393, 533, 307, 2370, 307, 452, 4009, 13, 50814], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 212, "seek": 126500, "start": 1274.0, "end": 1277.0, "text": " And then I'm saying the dog is running the cat is asleep.", "tokens": [50814, 400, 550, 286, 478, 1566, 264, 3000, 307, 2614, 264, 3857, 307, 11039, 13, 50964], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 213, "seek": 126500, "start": 1277.0, "end": 1281.0, "text": " And if you know your cat from your dogs, a dog is the canine.", "tokens": [50964, 400, 498, 291, 458, 428, 3857, 490, 428, 7197, 11, 257, 3000, 307, 264, 393, 533, 13, 51164], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 214, "seek": 126500, "start": 1281.0, "end": 1282.0, "text": " A cat is not.", "tokens": [51164, 316, 3857, 307, 406, 13, 51214], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 215, "seek": 126500, "start": 1282.0, "end": 1285.0, "text": " So there we go.", "tokens": [51214, 407, 456, 321, 352, 13, 51364], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 216, "seek": 126500, "start": 1285.0, "end": 1287.0, "text": " It's telling us 68%.", "tokens": [51364, 467, 311, 3585, 505, 23317, 6856, 51464], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 217, "seek": 126500, "start": 1287.0, "end": 1289.0, "text": " It thinks the dog is asleep.", "tokens": [51464, 467, 7309, 264, 3000, 307, 11039, 13, 51564], "temperature": 0.0, "avg_logprob": -0.230069333031064, "compression_ratio": 1.6403940886699508, "no_speech_prob": 0.007711311336606741}, {"id": 218, "seek": 128900, "start": 1289.0, "end": 1291.0, "text": " So there we go.", "tokens": [50364, 407, 456, 321, 352, 13, 50464], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 219, "seek": 128900, "start": 1291.0, "end": 1293.0, "text": " It's telling us 68%.", "tokens": [50464, 467, 311, 3585, 505, 23317, 6856, 50564], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 220, "seek": 128900, "start": 1293.0, "end": 1297.0, "text": " It thinks the dog is running is the best sentence.", "tokens": [50564, 467, 7309, 264, 3000, 307, 2614, 307, 264, 1151, 8174, 13, 50764], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 221, "seek": 128900, "start": 1297.0, "end": 1300.0, "text": " But if I change it to say the cat.", "tokens": [50764, 583, 498, 286, 1319, 309, 281, 584, 264, 3857, 13, 50914], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 222, "seek": 128900, "start": 1300.0, "end": 1302.0, "text": " Is running.", "tokens": [50914, 1119, 2614, 13, 51014], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 223, "seek": 128900, "start": 1308.0, "end": 1312.0, "text": " We now put the cat among the pigeons, so to speak, excuse the pun.", "tokens": [51314, 492, 586, 829, 264, 3857, 3654, 264, 48297, 11, 370, 281, 1710, 11, 8960, 264, 4468, 13, 51514], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 224, "seek": 128900, "start": 1312.0, "end": 1318.0, "text": " But now we're saying it's a 36% chance that, you know, you're not going to be able to get the cat.", "tokens": [51514, 583, 586, 321, 434, 1566, 309, 311, 257, 8652, 4, 2931, 300, 11, 291, 458, 11, 291, 434, 406, 516, 281, 312, 1075, 281, 483, 264, 3857, 13, 51814], "temperature": 0.0, "avg_logprob": -0.3313744595176295, "compression_ratio": 1.5706806282722514, "no_speech_prob": 0.07087656855583191}, {"id": 225, "seek": 131900, "start": 1319.0, "end": 1322.0, "text": " It might be like the canine is running.", "tokens": [50364, 467, 1062, 312, 411, 264, 393, 533, 307, 2614, 13, 50514], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 226, "seek": 131900, "start": 1322.0, "end": 1325.0, "text": " So you can see here how you compare on with things.", "tokens": [50514, 407, 291, 393, 536, 510, 577, 291, 6794, 322, 365, 721, 13, 50664], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 227, "seek": 131900, "start": 1325.0, "end": 1334.0, "text": " And because of vector spaces and so forth, where words are aligned, that if you do change some of the words like running, you know, fast, they're going to be near each other.", "tokens": [50664, 400, 570, 295, 8062, 7673, 293, 370, 5220, 11, 689, 2283, 366, 17962, 11, 300, 498, 291, 360, 1319, 512, 295, 264, 2283, 411, 2614, 11, 291, 458, 11, 2370, 11, 436, 434, 516, 281, 312, 2651, 1184, 661, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 228, "seek": 131900, "start": 1334.0, "end": 1337.0, "text": " Dogs and cats are going to be near each other because they're animals.", "tokens": [51114, 35504, 293, 11111, 366, 516, 281, 312, 2651, 1184, 661, 570, 436, 434, 4882, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 229, "seek": 131900, "start": 1337.0, "end": 1339.0, "text": " So yeah, that's what happens there.", "tokens": [51264, 407, 1338, 11, 300, 311, 437, 2314, 456, 13, 51364], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 230, "seek": 131900, "start": 1339.0, "end": 1344.0, "text": " So looking again, let's do image classification.", "tokens": [51364, 407, 1237, 797, 11, 718, 311, 360, 3256, 21538, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11948723359541459, "compression_ratio": 1.7366255144032923, "no_speech_prob": 0.008208401501178741}, {"id": 231, "seek": 134400, "start": 1344.0, "end": 1347.0, "text": " I'm going to choose an image here.", "tokens": [50364, 286, 478, 516, 281, 2826, 364, 3256, 510, 13, 50514], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 232, "seek": 134400, "start": 1349.0, "end": 1351.0, "text": " All right.", "tokens": [50614, 1057, 558, 13, 50714], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 233, "seek": 134400, "start": 1352.0, "end": 1354.0, "text": " Yay, puppies.", "tokens": [50764, 13268, 11, 33734, 13, 50864], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 234, "seek": 134400, "start": 1354.0, "end": 1355.0, "text": " Okay.", "tokens": [50864, 1033, 13, 50914], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 235, "seek": 134400, "start": 1355.0, "end": 1363.0, "text": " Now, I love dogs, but it's telling me it's a 88% chance that's a golden retriever.", "tokens": [50914, 823, 11, 286, 959, 7197, 11, 457, 309, 311, 3585, 385, 309, 311, 257, 24587, 4, 2931, 300, 311, 257, 9729, 19817, 331, 13, 51314], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 236, "seek": 134400, "start": 1363.0, "end": 1366.0, "text": " Any person can confirm that?", "tokens": [51314, 2639, 954, 393, 9064, 300, 30, 51464], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 237, "seek": 134400, "start": 1366.0, "end": 1368.0, "text": " Okay.", "tokens": [51464, 1033, 13, 51564], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 238, "seek": 134400, "start": 1368.0, "end": 1369.0, "text": " Thank you very much.", "tokens": [51564, 1044, 291, 588, 709, 13, 51614], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 239, "seek": 134400, "start": 1369.0, "end": 1373.0, "text": " I just thought it was a Labrador, but sorry about that.", "tokens": [51614, 286, 445, 1194, 309, 390, 257, 10137, 81, 5409, 11, 457, 2597, 466, 300, 13, 51814], "temperature": 0.0, "avg_logprob": -0.16659809748331705, "compression_ratio": 1.3756613756613756, "no_speech_prob": 0.00930442288517952}, {"id": 240, "seek": 137300, "start": 1373.0, "end": 1384.0, "text": " And the last one I'm going to do is something close to my own heart, which is I've taken an image of a sport we have in Ireland called Hurlin.", "tokens": [50364, 400, 264, 1036, 472, 286, 478, 516, 281, 360, 307, 746, 1998, 281, 452, 1065, 1917, 11, 597, 307, 286, 600, 2726, 364, 3256, 295, 257, 7282, 321, 362, 294, 15880, 1219, 8598, 5045, 13, 50914], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 241, "seek": 137300, "start": 1384.0, "end": 1385.0, "text": " Okay.", "tokens": [50914, 1033, 13, 50964], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 242, "seek": 137300, "start": 1385.0, "end": 1388.0, "text": " So Hurlin is players are on the field.", "tokens": [50964, 407, 8598, 5045, 307, 4150, 366, 322, 264, 2519, 13, 51114], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 243, "seek": 137300, "start": 1388.0, "end": 1389.0, "text": " They have a ball.", "tokens": [51114, 814, 362, 257, 2594, 13, 51164], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 244, "seek": 137300, "start": 1389.0, "end": 1391.0, "text": " They have a stick.", "tokens": [51164, 814, 362, 257, 2897, 13, 51264], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 245, "seek": 137300, "start": 1391.0, "end": 1392.0, "text": " Okay.", "tokens": [51264, 1033, 13, 51314], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 246, "seek": 137300, "start": 1392.0, "end": 1397.0, "text": " So when it does the detection here, it detects a sports ball.", "tokens": [51314, 407, 562, 309, 775, 264, 17784, 510, 11, 309, 5531, 82, 257, 6573, 2594, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 247, "seek": 137300, "start": 1397.0, "end": 1398.0, "text": " That's fantastic.", "tokens": [51564, 663, 311, 5456, 13, 51614], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 248, "seek": 137300, "start": 1398.0, "end": 1401.0, "text": " It detects people, which is fantastic.", "tokens": [51614, 467, 5531, 82, 561, 11, 597, 307, 5456, 13, 51764], "temperature": 0.0, "avg_logprob": -0.11115374520560291, "compression_ratio": 1.6941747572815533, "no_speech_prob": 0.005758119281381369}, {"id": 249, "seek": 140100, "start": 1401.0, "end": 1406.0, "text": " But it calls the stick a baseball bat.", "tokens": [50364, 583, 309, 5498, 264, 2897, 257, 14323, 7362, 13, 50614], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 250, "seek": 140100, "start": 1406.0, "end": 1410.0, "text": " Is there anyone in the audience that knows what the name of the stick is?", "tokens": [50614, 1119, 456, 2878, 294, 264, 4034, 300, 3255, 437, 264, 1315, 295, 264, 2897, 307, 30, 50814], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 251, "seek": 140100, "start": 1410.0, "end": 1414.0, "text": " A hurly.", "tokens": [50814, 316, 2756, 356, 13, 51014], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 252, "seek": 140100, "start": 1414.0, "end": 1415.0, "text": " Yay.", "tokens": [51014, 13268, 13, 51064], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 253, "seek": 140100, "start": 1415.0, "end": 1417.0, "text": " I love to hear.", "tokens": [51064, 286, 959, 281, 1568, 13, 51164], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 254, "seek": 140100, "start": 1417.0, "end": 1418.0, "text": " Okay.", "tokens": [51164, 1033, 13, 51214], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 255, "seek": 140100, "start": 1418.0, "end": 1423.0, "text": " So that's an example of the data the model has been trained with.", "tokens": [51214, 407, 300, 311, 364, 1365, 295, 264, 1412, 264, 2316, 575, 668, 8895, 365, 13, 51464], "temperature": 0.0, "avg_logprob": -0.14933886044267294, "compression_ratio": 1.4172185430463575, "no_speech_prob": 0.004468963947147131}, {"id": 256, "seek": 142300, "start": 1423.0, "end": 1433.0, "text": " What you'd need to do there is either to prompt tune that model or fine tune that model with a data set that tells you more about the game of hurlin.", "tokens": [50364, 708, 291, 1116, 643, 281, 360, 456, 307, 2139, 281, 12391, 10864, 300, 2316, 420, 2489, 10864, 300, 2316, 365, 257, 1412, 992, 300, 5112, 291, 544, 466, 264, 1216, 295, 2756, 5045, 13, 50864], "temperature": 0.0, "avg_logprob": -0.14938877213676022, "compression_ratio": 1.6488549618320612, "no_speech_prob": 0.17911957204341888}, {"id": 257, "seek": 142300, "start": 1433.0, "end": 1443.0, "text": " It's able to detect the field sport, which is which is amazing people and ball, considering it hasn't been trained anything on the sport, but then it lets itself down a little bit.", "tokens": [50864, 467, 311, 1075, 281, 5531, 264, 2519, 7282, 11, 597, 307, 597, 307, 2243, 561, 293, 2594, 11, 8079, 309, 6132, 380, 668, 8895, 1340, 322, 264, 7282, 11, 457, 550, 309, 6653, 2564, 760, 257, 707, 857, 13, 51364], "temperature": 0.0, "avg_logprob": -0.14938877213676022, "compression_ratio": 1.6488549618320612, "no_speech_prob": 0.17911957204341888}, {"id": 258, "seek": 142300, "start": 1443.0, "end": 1448.0, "text": " So why did I show you these things bar showing a really nice UI for my colleague?", "tokens": [51364, 407, 983, 630, 286, 855, 291, 613, 721, 2159, 4099, 257, 534, 1481, 15682, 337, 452, 13532, 30, 51614], "temperature": 0.0, "avg_logprob": -0.14938877213676022, "compression_ratio": 1.6488549618320612, "no_speech_prob": 0.17911957204341888}, {"id": 259, "seek": 142300, "start": 1448.0, "end": 1450.0, "text": " The reason is this.", "tokens": [51614, 440, 1778, 307, 341, 13, 51714], "temperature": 0.0, "avg_logprob": -0.14938877213676022, "compression_ratio": 1.6488549618320612, "no_speech_prob": 0.17911957204341888}, {"id": 260, "seek": 145000, "start": 1451.0, "end": 1458.0, "text": " At the end of the day, we're calling libraries like we've always done or we're calling API is like we always done.", "tokens": [50414, 1711, 264, 917, 295, 264, 786, 11, 321, 434, 5141, 15148, 411, 321, 600, 1009, 1096, 420, 321, 434, 5141, 9362, 307, 411, 321, 1009, 1096, 13, 50764], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 261, "seek": 145000, "start": 1458.0, "end": 1464.0, "text": " And as long as we know the models can be trusted, then that's okay.", "tokens": [50764, 400, 382, 938, 382, 321, 458, 264, 5245, 393, 312, 16034, 11, 550, 300, 311, 1392, 13, 51064], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 262, "seek": 145000, "start": 1464.0, "end": 1465.0, "text": " All right.", "tokens": [51064, 1057, 558, 13, 51114], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 263, "seek": 145000, "start": 1465.0, "end": 1469.0, "text": " So the first part in here is this is just a great UI code.", "tokens": [51114, 407, 264, 700, 644, 294, 510, 307, 341, 307, 445, 257, 869, 15682, 3089, 13, 51314], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 264, "seek": 145000, "start": 1469.0, "end": 1476.0, "text": " And in here, we're just saying there's a series of different classes for the for the different UI tabs.", "tokens": [51314, 400, 294, 510, 11, 321, 434, 445, 1566, 456, 311, 257, 2638, 295, 819, 5359, 337, 264, 337, 264, 819, 15682, 20743, 13, 51664], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 265, "seek": 145000, "start": 1476.0, "end": 1478.0, "text": " And we're just calling them here.", "tokens": [51664, 400, 321, 434, 445, 5141, 552, 510, 13, 51764], "temperature": 0.0, "avg_logprob": -0.13261275425135532, "compression_ratio": 1.7567567567567568, "no_speech_prob": 0.06422700732946396}, {"id": 266, "seek": 147800, "start": 1478.0, "end": 1484.0, "text": " And here's an example of one of the UI tabs down here for the image classification.", "tokens": [50364, 400, 510, 311, 364, 1365, 295, 472, 295, 264, 15682, 20743, 760, 510, 337, 264, 3256, 21538, 13, 50664], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 267, "seek": 147800, "start": 1484.0, "end": 1488.0, "text": " You can see here the submit button and the other elements that are on the tab.", "tokens": [50664, 509, 393, 536, 510, 264, 10315, 2960, 293, 264, 661, 4959, 300, 366, 322, 264, 4421, 13, 50864], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 268, "seek": 147800, "start": 1488.0, "end": 1495.0, "text": " And in this situation, you can see the submit is going to call into a function called function for that's a great name, by the way.", "tokens": [50864, 400, 294, 341, 2590, 11, 291, 393, 536, 264, 10315, 307, 516, 281, 818, 666, 257, 2445, 1219, 2445, 337, 300, 311, 257, 869, 1315, 11, 538, 264, 636, 13, 51214], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 269, "seek": 147800, "start": 1495.0, "end": 1496.0, "text": " FN.", "tokens": [51214, 479, 45, 13, 51264], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 270, "seek": 147800, "start": 1496.0, "end": 1497.0, "text": " I haven't seen that for a long time.", "tokens": [51264, 286, 2378, 380, 1612, 300, 337, 257, 938, 565, 13, 51314], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 271, "seek": 147800, "start": 1497.0, "end": 1502.0, "text": " And you can see here in here, then this is where it's going to call the model.", "tokens": [51314, 400, 291, 393, 536, 510, 294, 510, 11, 550, 341, 307, 689, 309, 311, 516, 281, 818, 264, 2316, 13, 51564], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 272, "seek": 147800, "start": 1502.0, "end": 1503.0, "text": " Okay.", "tokens": [51564, 1033, 13, 51614], "temperature": 0.0, "avg_logprob": -0.12916269795647983, "compression_ratio": 1.7647058823529411, "no_speech_prob": 0.03419678658246994}, {"id": 273, "seek": 150300, "start": 1503.0, "end": 1519.0, "text": " Now, why is this a little bit funny because it's a g is the g rpc API is calling and you can see here inside the UI when it starts up, it's going to get it's going to get a handle to the channel of the g rpc server.", "tokens": [50364, 823, 11, 983, 307, 341, 257, 707, 857, 4074, 570, 309, 311, 257, 290, 307, 264, 290, 367, 79, 66, 9362, 307, 5141, 293, 291, 393, 536, 510, 1854, 264, 15682, 562, 309, 3719, 493, 11, 309, 311, 516, 281, 483, 309, 311, 516, 281, 483, 257, 4813, 281, 264, 2269, 295, 264, 290, 367, 79, 66, 7154, 13, 51164], "temperature": 0.0, "avg_logprob": -0.21767307556781573, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.014118230901658535}, {"id": 274, "seek": 150300, "start": 1519.0, "end": 1528.0, "text": " And then over on this side, you see here the different tabs classes to handle the UI interaction.", "tokens": [51164, 400, 550, 670, 322, 341, 1252, 11, 291, 536, 510, 264, 819, 20743, 5359, 281, 4813, 264, 15682, 9285, 13, 51614], "temperature": 0.0, "avg_logprob": -0.21767307556781573, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.014118230901658535}, {"id": 275, "seek": 150300, "start": 1528.0, "end": 1532.0, "text": " And then finally down here is the wrapper code.", "tokens": [51614, 400, 550, 2721, 760, 510, 307, 264, 46906, 3089, 13, 51814], "temperature": 0.0, "avg_logprob": -0.21767307556781573, "compression_ratio": 1.7109004739336493, "no_speech_prob": 0.014118230901658535}, {"id": 276, "seek": 153200, "start": 1532.0, "end": 1537.0, "text": " And you can see here it's got similarities to some of the frameworks I showed a while ago.", "tokens": [50364, 400, 291, 393, 536, 510, 309, 311, 658, 24197, 281, 512, 295, 264, 29834, 286, 4712, 257, 1339, 2057, 13, 50614], "temperature": 0.0, "avg_logprob": -0.15847080885761916, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.08807042241096497}, {"id": 277, "seek": 153200, "start": 1537.0, "end": 1543.0, "text": " But in this situation, you use an annotation up here called module, you pass it a task and so forth.", "tokens": [50614, 583, 294, 341, 2590, 11, 291, 764, 364, 48654, 493, 510, 1219, 10088, 11, 291, 1320, 309, 257, 5633, 293, 370, 5220, 13, 50914], "temperature": 0.0, "avg_logprob": -0.15847080885761916, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.08807042241096497}, {"id": 278, "seek": 153200, "start": 1543.0, "end": 1552.0, "text": " And the key here then is you can see in the init again, we're calling a pipeline, which is the hug and face transformer pipeline up here.", "tokens": [50914, 400, 264, 2141, 510, 550, 307, 291, 393, 536, 294, 264, 3157, 797, 11, 321, 434, 5141, 257, 15517, 11, 597, 307, 264, 8777, 293, 1851, 31782, 15517, 493, 510, 13, 51364], "temperature": 0.0, "avg_logprob": -0.15847080885761916, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.08807042241096497}, {"id": 279, "seek": 153200, "start": 1552.0, "end": 1554.0, "text": " Sorry, I've just jumped.", "tokens": [51364, 4919, 11, 286, 600, 445, 13864, 13, 51464], "temperature": 0.0, "avg_logprob": -0.15847080885761916, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.08807042241096497}, {"id": 280, "seek": 153200, "start": 1554.0, "end": 1556.0, "text": " Yeah, just up here.", "tokens": [51464, 865, 11, 445, 493, 510, 13, 51564], "temperature": 0.0, "avg_logprob": -0.15847080885761916, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.08807042241096497}, {"id": 281, "seek": 155600, "start": 1556.0, "end": 1564.0, "text": " If you don't pass a model to it, the default model is going to use is the Google VIT model.", "tokens": [50364, 759, 291, 500, 380, 1320, 257, 2316, 281, 309, 11, 264, 7576, 2316, 307, 516, 281, 764, 307, 264, 3329, 691, 3927, 2316, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10484964707318474, "compression_ratio": 1.7472527472527473, "no_speech_prob": 0.3179645538330078}, {"id": 282, "seek": 155600, "start": 1564.0, "end": 1566.0, "text": " And then down here is the key in the run method.", "tokens": [50764, 400, 550, 760, 510, 307, 264, 2141, 294, 264, 1190, 3170, 13, 50864], "temperature": 0.0, "avg_logprob": -0.10484964707318474, "compression_ratio": 1.7472527472527473, "no_speech_prob": 0.3179645538330078}, {"id": 283, "seek": 155600, "start": 1566.0, "end": 1578.0, "text": " So when you call the predict, it's going to call the HTTP server and it's going to be redirected in the server to the run method here of this module that's loaded in the server.", "tokens": [50864, 407, 562, 291, 818, 264, 6069, 11, 309, 311, 516, 281, 818, 264, 33283, 7154, 293, 309, 311, 516, 281, 312, 29066, 292, 294, 264, 7154, 281, 264, 1190, 3170, 510, 295, 341, 10088, 300, 311, 13210, 294, 264, 7154, 13, 51464], "temperature": 0.0, "avg_logprob": -0.10484964707318474, "compression_ratio": 1.7472527472527473, "no_speech_prob": 0.3179645538330078}, {"id": 284, "seek": 157800, "start": 1578.0, "end": 1581.0, "text": " And it's going to call the pipe here.", "tokens": [50364, 400, 309, 311, 516, 281, 818, 264, 11240, 510, 13, 50514], "temperature": 0.0, "avg_logprob": -0.15220698443326083, "compression_ratio": 1.5486111111111112, "no_speech_prob": 0.22505156695842743}, {"id": 285, "seek": 157800, "start": 1581.0, "end": 1587.0, "text": " And when it calls the setup pipe and passes the image like it did the last time, then it's going to get the result back.", "tokens": [50514, 400, 562, 309, 5498, 264, 8657, 11240, 293, 11335, 264, 3256, 411, 309, 630, 264, 1036, 565, 11, 550, 309, 311, 516, 281, 483, 264, 1874, 646, 13, 50814], "temperature": 0.0, "avg_logprob": -0.15220698443326083, "compression_ratio": 1.5486111111111112, "no_speech_prob": 0.22505156695842743}, {"id": 286, "seek": 157800, "start": 1587.0, "end": 1588.0, "text": " And that's how you get it.", "tokens": [50814, 400, 300, 311, 577, 291, 483, 309, 13, 50864], "temperature": 0.0, "avg_logprob": -0.15220698443326083, "compression_ratio": 1.5486111111111112, "no_speech_prob": 0.22505156695842743}, {"id": 287, "seek": 157800, "start": 1588.0, "end": 1593.0, "text": " Okay, so let's jump back to our deck.", "tokens": [50864, 1033, 11, 370, 718, 311, 3012, 646, 281, 527, 9341, 13, 51114], "temperature": 0.0, "avg_logprob": -0.15220698443326083, "compression_ratio": 1.5486111111111112, "no_speech_prob": 0.22505156695842743}, {"id": 288, "seek": 160800, "start": 1609.0, "end": 1613.0, "text": " All right, to wrap this up, anything's on the screen there.", "tokens": [50414, 1057, 558, 11, 281, 7019, 341, 493, 11, 1340, 311, 322, 264, 2568, 456, 13, 50614], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 289, "seek": 160800, "start": 1613.0, "end": 1615.0, "text": " I'm actually going to talk about that for some reason.", "tokens": [50614, 286, 478, 767, 516, 281, 751, 466, 300, 337, 512, 1778, 13, 50714], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 290, "seek": 160800, "start": 1615.0, "end": 1617.0, "text": " So you can read that if you want.", "tokens": [50714, 407, 291, 393, 1401, 300, 498, 291, 528, 13, 50814], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 291, "seek": 160800, "start": 1617.0, "end": 1620.0, "text": " No.", "tokens": [50814, 883, 13, 50964], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 292, "seek": 160800, "start": 1620.0, "end": 1622.0, "text": " Why did I do this talk today?", "tokens": [50964, 1545, 630, 286, 360, 341, 751, 965, 30, 51064], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 293, "seek": 160800, "start": 1622.0, "end": 1628.0, "text": " I want to do this talk from the angle of somebody who's been writing code a long, long time.", "tokens": [51064, 286, 528, 281, 360, 341, 751, 490, 264, 5802, 295, 2618, 567, 311, 668, 3579, 3089, 257, 938, 11, 938, 565, 13, 51364], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 294, "seek": 160800, "start": 1628.0, "end": 1636.0, "text": " And I'm afraid that someday someone's going to say you're too old and bald and you've got glasses.", "tokens": [51364, 400, 286, 478, 4638, 300, 19412, 1580, 311, 516, 281, 584, 291, 434, 886, 1331, 293, 21096, 293, 291, 600, 658, 10812, 13, 51764], "temperature": 0.0, "avg_logprob": -0.111483663042015, "compression_ratio": 1.6331877729257642, "no_speech_prob": 0.23990315198898315}, {"id": 295, "seek": 163600, "start": 1636.0, "end": 1638.0, "text": " And I'd...", "tokens": [50364, 400, 286, 1116, 485, 50464], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 296, "seek": 163600, "start": 1638.0, "end": 1640.0, "text": " And a beard.", "tokens": [50464, 400, 257, 17455, 13, 50564], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 297, "seek": 163600, "start": 1640.0, "end": 1641.0, "text": " Sorry about that.", "tokens": [50564, 4919, 466, 300, 13, 50614], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 298, "seek": 163600, "start": 1641.0, "end": 1646.0, "text": " No, but when we look at the change, it's probably the biggest change.", "tokens": [50614, 883, 11, 457, 562, 321, 574, 412, 264, 1319, 11, 309, 311, 1391, 264, 3880, 1319, 13, 50864], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 299, "seek": 163600, "start": 1646.0, "end": 1653.0, "text": " If you've been in the industry for maybe 20, 30 years, it's probably the biggest change we've seen the way things are going.", "tokens": [50864, 759, 291, 600, 668, 294, 264, 3518, 337, 1310, 945, 11, 2217, 924, 11, 309, 311, 1391, 264, 3880, 1319, 321, 600, 1612, 264, 636, 721, 366, 516, 13, 51214], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 300, "seek": 163600, "start": 1653.0, "end": 1660.0, "text": " And there's always that phrase, you know, you either adapt or you stand still and everything moves on.", "tokens": [51214, 400, 456, 311, 1009, 300, 9535, 11, 291, 458, 11, 291, 2139, 6231, 420, 291, 1463, 920, 293, 1203, 6067, 322, 13, 51564], "temperature": 0.0, "avg_logprob": -0.11417108901003574, "compression_ratio": 1.6298076923076923, "no_speech_prob": 0.042091112583875656}, {"id": 301, "seek": 166000, "start": 1660.0, "end": 1668.0, "text": " So the ability here to be able to use these models to write applications and improve things is really the key.", "tokens": [50364, 407, 264, 3485, 510, 281, 312, 1075, 281, 764, 613, 5245, 281, 2464, 5821, 293, 3470, 721, 307, 534, 264, 2141, 13, 50764], "temperature": 0.0, "avg_logprob": -0.10669379884546454, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.560988187789917}, {"id": 302, "seek": 166000, "start": 1668.0, "end": 1676.0, "text": " And this is something that I suppose to grow out of AI definitely in the last 10 years or plus.", "tokens": [50764, 400, 341, 307, 746, 300, 286, 7297, 281, 1852, 484, 295, 7318, 2138, 294, 264, 1036, 1266, 924, 420, 1804, 13, 51164], "temperature": 0.0, "avg_logprob": -0.10669379884546454, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.560988187789917}, {"id": 303, "seek": 166000, "start": 1676.0, "end": 1687.0, "text": " I suppose starting with, or maybe 20 years starting with the Linux Foundation, then into OpenStack, Kubernetes, you know, all the other different great foundations and communities out there.", "tokens": [51164, 286, 7297, 2891, 365, 11, 420, 1310, 945, 924, 2891, 365, 264, 18734, 10335, 11, 550, 666, 7238, 4520, 501, 11, 23145, 11, 291, 458, 11, 439, 264, 661, 819, 869, 22467, 293, 4456, 484, 456, 13, 51714], "temperature": 0.0, "avg_logprob": -0.10669379884546454, "compression_ratio": 1.6072874493927125, "no_speech_prob": 0.560988187789917}, {"id": 304, "seek": 168700, "start": 1687.0, "end": 1699.0, "text": " I think a lot of companies have realized one company or one set of developers cannot keep up with the rate of development, the rate of change, the way technology is going.", "tokens": [50364, 286, 519, 257, 688, 295, 3431, 362, 5334, 472, 2237, 420, 472, 992, 295, 8849, 2644, 1066, 493, 365, 264, 3314, 295, 3250, 11, 264, 3314, 295, 1319, 11, 264, 636, 2899, 307, 516, 13, 50964], "temperature": 0.0, "avg_logprob": -0.06383393450481135, "compression_ratio": 1.6278026905829597, "no_speech_prob": 0.06476255506277084}, {"id": 305, "seek": 168700, "start": 1699.0, "end": 1710.0, "text": " And having this ability to get these models eventually out of the grasp of the scientists stuck in the labs that don't want to release anything.", "tokens": [50964, 400, 1419, 341, 3485, 281, 483, 613, 5245, 4728, 484, 295, 264, 21743, 295, 264, 7708, 5541, 294, 264, 20339, 300, 500, 380, 528, 281, 4374, 1340, 13, 51514], "temperature": 0.0, "avg_logprob": -0.06383393450481135, "compression_ratio": 1.6278026905829597, "no_speech_prob": 0.06476255506277084}, {"id": 306, "seek": 168700, "start": 1710.0, "end": 1713.0, "text": " Sorry data scientists, I'm not picking on you.", "tokens": [51514, 4919, 1412, 7708, 11, 286, 478, 406, 8867, 322, 291, 13, 51664], "temperature": 0.0, "avg_logprob": -0.06383393450481135, "compression_ratio": 1.6278026905829597, "no_speech_prob": 0.06476255506277084}, {"id": 307, "seek": 171300, "start": 1713.0, "end": 1725.0, "text": " But you know, to eventually see the light of day and they can go home and tell their families, you know, that thing I was working on for 20 years, they're now using it in fridges, in cars, everywhere.", "tokens": [50364, 583, 291, 458, 11, 281, 4728, 536, 264, 1442, 295, 786, 293, 436, 393, 352, 1280, 293, 980, 641, 4466, 11, 291, 458, 11, 300, 551, 286, 390, 1364, 322, 337, 945, 924, 11, 436, 434, 586, 1228, 309, 294, 431, 327, 2880, 11, 294, 5163, 11, 5315, 13, 50964], "temperature": 0.0, "avg_logprob": -0.062331832615675126, "compression_ratio": 1.7254901960784315, "no_speech_prob": 0.0609903410077095}, {"id": 308, "seek": 171300, "start": 1725.0, "end": 1728.0, "text": " But the key here is that we need to have it open.", "tokens": [50964, 583, 264, 2141, 510, 307, 300, 321, 643, 281, 362, 309, 1269, 13, 51114], "temperature": 0.0, "avg_logprob": -0.062331832615675126, "compression_ratio": 1.7254901960784315, "no_speech_prob": 0.0609903410077095}, {"id": 309, "seek": 171300, "start": 1728.0, "end": 1732.0, "text": " We need to drive forward with our models and be transparent.", "tokens": [51114, 492, 643, 281, 3332, 2128, 365, 527, 5245, 293, 312, 12737, 13, 51314], "temperature": 0.0, "avg_logprob": -0.062331832615675126, "compression_ratio": 1.7254901960784315, "no_speech_prob": 0.0609903410077095}, {"id": 310, "seek": 171300, "start": 1732.0, "end": 1740.0, "text": " We need to have trust in the models because we're asking the model to do something for us or give us a result that we depend on.", "tokens": [51314, 492, 643, 281, 362, 3361, 294, 264, 5245, 570, 321, 434, 3365, 264, 2316, 281, 360, 746, 337, 505, 420, 976, 505, 257, 1874, 300, 321, 5672, 322, 13, 51714], "temperature": 0.0, "avg_logprob": -0.062331832615675126, "compression_ratio": 1.7254901960784315, "no_speech_prob": 0.0609903410077095}, {"id": 311, "seek": 174000, "start": 1740.0, "end": 1748.0, "text": " And like libraries we use in the old days, you needed to go and do the groundwork and find out can we trust that library?", "tokens": [50364, 400, 411, 15148, 321, 764, 294, 264, 1331, 1708, 11, 291, 2978, 281, 352, 293, 360, 264, 2727, 1902, 293, 915, 484, 393, 321, 3361, 300, 6405, 30, 50764], "temperature": 0.0, "avg_logprob": -0.0934637454377503, "compression_ratio": 1.7074074074074075, "no_speech_prob": 0.07929624617099762}, {"id": 312, "seek": 174000, "start": 1748.0, "end": 1753.0, "text": " Is it doing something we don't want it to do? Is it doing something malicious?", "tokens": [50764, 1119, 309, 884, 746, 321, 500, 380, 528, 309, 281, 360, 30, 1119, 309, 884, 746, 33496, 30, 51014], "temperature": 0.0, "avg_logprob": -0.0934637454377503, "compression_ratio": 1.7074074074074075, "no_speech_prob": 0.07929624617099762}, {"id": 313, "seek": 174000, "start": 1753.0, "end": 1763.0, "text": " So I think there's a big change here from the initial AI maybe in the last 10 years where it was around fraud detection, spam detection, you know, chatbots.", "tokens": [51014, 407, 286, 519, 456, 311, 257, 955, 1319, 510, 490, 264, 5883, 7318, 1310, 294, 264, 1036, 1266, 924, 689, 309, 390, 926, 14560, 17784, 11, 24028, 17784, 11, 291, 458, 11, 5081, 65, 1971, 13, 51514], "temperature": 0.0, "avg_logprob": -0.0934637454377503, "compression_ratio": 1.7074074074074075, "no_speech_prob": 0.07929624617099762}, {"id": 314, "seek": 174000, "start": 1763.0, "end": 1767.0, "text": " I'd say there's going to be a big proliferation offered the next 5 to 10 years.", "tokens": [51514, 286, 1116, 584, 456, 311, 516, 281, 312, 257, 955, 24398, 44987, 8059, 264, 958, 1025, 281, 1266, 924, 13, 51714], "temperature": 0.0, "avg_logprob": -0.0934637454377503, "compression_ratio": 1.7074074074074075, "no_speech_prob": 0.07929624617099762}, {"id": 315, "seek": 174000, "start": 1767.0, "end": 1769.0, "text": " So thank you very much.", "tokens": [51714, 407, 1309, 291, 588, 709, 13, 51814], "temperature": 0.0, "avg_logprob": -0.0934637454377503, "compression_ratio": 1.7074074074074075, "no_speech_prob": 0.07929624617099762}, {"id": 316, "seek": 177000, "start": 1770.0, "end": 1772.0, "text": " Questions?", "tokens": [50364, 27738, 30, 50464], "temperature": 0.0, "avg_logprob": -0.32271523475646974, "compression_ratio": 0.5555555555555556, "no_speech_prob": 0.5875730514526367}], "language": "en"}