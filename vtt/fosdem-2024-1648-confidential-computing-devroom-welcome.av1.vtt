WEBVTT

00:00.000 --> 00:13.000
Welcome, everyone, to the computer-intercom-puting dev room for this year in Fosnum.

00:13.000 --> 00:16.120
I'm happy to have a bigger room this year, and we also can fit more folks, so hopefully

00:16.120 --> 00:19.960
there's not going to be any occupancy problems.

00:19.960 --> 00:23.080
But yeah, so welcome.

00:23.080 --> 00:24.580
Who are we?

00:24.580 --> 00:26.160
I am Flitz.

00:26.160 --> 00:27.660
This is Jo.

00:27.660 --> 00:32.900
And we have a third member Fabiano, who has not managed to come here, but to help organizing.

00:32.900 --> 00:36.620
For the disclosure, I'm at NVIDIA, yours at Kalevun and Fabiano at Intel, but this is,

00:36.620 --> 00:40.780
of course, the private thing that we organized.

00:40.780 --> 00:47.740
And I want to use this welcome session for basically two reasons.

00:47.740 --> 00:50.900
To welcome you to the dev room, give you a little bit of the idea of what we're going

00:50.900 --> 00:52.900
to have to expect today.

00:52.900 --> 00:57.620
But as a second thing, also give a quick background information for combat energy computing.

00:58.260 --> 00:59.760
What is it?

00:59.760 --> 01:03.500
So that not every speaker has to recap the same thing on and on again, so that we can

01:03.500 --> 01:07.220
save some time for every speaker.

01:07.220 --> 01:11.740
So there is the Linux Foundation's computer computing consortium.

01:11.740 --> 01:12.980
We had a nice social event yesterday.

01:12.980 --> 01:20.620
If you haven't heard of that, please look them up, get involved into what they're doing.

01:20.620 --> 01:22.820
It's a great thing.

01:22.820 --> 01:27.740
And at this point, we're going to use their definition.

01:27.740 --> 01:31.300
I think there's many definitions of combat energy computing out there.

01:31.300 --> 01:35.220
There's many ways to see what it's doing, what it's not doing.

01:35.220 --> 01:38.580
There's many opinions to be had, I think, about it.

01:38.580 --> 01:42.620
But we're going to take the definition from them here now.

01:42.620 --> 01:49.220
And we can always have discussions about if that's a sensible definition or not.

01:49.220 --> 01:53.940
And according to that definition, combat energy computing is the protection of data

01:53.940 --> 02:00.820
in use by performing computation in a hardware-based, attested trust execution environment.

02:00.820 --> 02:03.140
I highlighted the things that I think are relevant here.

02:03.140 --> 02:07.300
For me, personally, hardware-based makes a lot of sense, or is important.

02:07.300 --> 02:12.660
Initially, actually, this dev room was called hardware-aided trusted computing dev room.

02:12.660 --> 02:16.620
And now we only renamed it to combat energy computing dev room last year.

02:17.180 --> 02:20.500
Attested, maybe you've heard of it, maybe you haven't.

02:20.500 --> 02:23.460
I think some folks will talk more in depth about attestation later on.

02:23.460 --> 02:27.740
I don't think I will cover it really here in the welcome session.

02:27.740 --> 02:34.820
And then trust execution environment, TEEs, are the things that basically guarantees you this thing,

02:34.820 --> 02:37.980
guarantees you all of these properties.

02:37.980 --> 02:43.380
And data in use is this protection of data in use.

02:43.420 --> 02:47.540
It's one of the lenses to view combat energy computing.

02:47.540 --> 02:56.140
This lens is basically the lens of saying we have data protection at rest by encryption in transit by TLS.

02:56.140 --> 03:03.740
And now we also have it in use by TEEs and combat energy computing.

03:03.740 --> 03:13.140
Now, I'm listing some key properties here just so that you get an idea of what are common between TEEs.

03:13.140 --> 03:17.060
There's still space here, you can come in.

03:17.060 --> 03:21.460
It's not that full, there's more space here on the side.

03:21.460 --> 03:30.660
There are some common properties between TEE implementations, and then there are some contextual properties between TEEs.

03:30.660 --> 03:37.060
So, commonly, most of them, or all of them I think, have data confidentiality.

03:37.060 --> 03:40.220
So they encrypt your data and they keep your data confidential.

03:40.220 --> 03:43.820
They have data integrity to ensure that your data cannot be changed.

03:43.820 --> 03:50.020
And they also have code integrity so that the code that you're running is also the code that you expect to run.

03:50.020 --> 03:52.540
So it's not being changed by the environment.

03:52.540 --> 03:54.740
On top of that, there are contextual properties.

03:54.740 --> 03:58.060
Not all of them, not all of the TEEs have them.

03:58.060 --> 04:09.700
Not all use cases need them, but I think these are properties that make sense to at least the subsets of folks doing these definitions.

04:09.700 --> 04:12.660
With the notable exception of code confidentiality.

04:12.660 --> 04:21.780
Code confidentiality is always, I think, was initially, has a big DRM label on top of it, I think, to me at least.

04:21.780 --> 04:28.820
Of course, maybe not everyone agrees to all of these use cases being good, but I think when looking at TEEs,

04:28.820 --> 04:30.980
these are definitely some properties that are common.

04:30.980 --> 04:34.660
So code confidentiality has been one use case that has been tried in the past.

04:34.660 --> 04:37.420
Authenticated launch.

04:37.500 --> 04:40.860
Now I'm kind of booting up something that you can authenticate.

04:40.860 --> 04:43.460
A programmability that you can change what's running in the system.

04:43.460 --> 04:44.260
It's not locked in.

04:44.260 --> 04:46.980
It's the beginning of launching it.

04:46.980 --> 04:48.540
Attestability again here.

04:48.540 --> 04:53.940
The thing that we can make sure that what is running in there at runtime.

04:53.940 --> 04:56.420
I can also verify that it is running.

04:56.420 --> 05:00.780
And recoverability in case something breaks, I can recover from issues.

05:01.220 --> 05:04.220
All right.

05:04.220 --> 05:10.820
And now I modified one figure from one of their nice white papers.

05:10.820 --> 05:13.780
You should read the white papers if you want to hear more and learn more about that.

05:13.780 --> 05:28.340
Where let's take a look at kind of the common software stack and see what is shielded by what type of computer computing technology.

05:28.900 --> 05:35.300
So for example, Intel SGX is something that many of you may have heard because it's the oldest that has been commercially available.

05:35.300 --> 05:41.300
And that historically, the idea has been that the app data and the library is shielded.

05:41.300 --> 05:44.020
So only kind of the application is shielded.

05:44.020 --> 05:49.580
While the OS and the process and the TSM is kind of in the untrusted part.

05:49.580 --> 05:53.940
So you only draw the protection boundary around the application itself.

05:53.940 --> 06:01.380
That's a good example for that idea or for this like shielding level is Intel SGX.

06:01.380 --> 06:05.260
And then I'm trust on, I said, Intel SGX is the oldest, but I'm trust was actually way older.

06:05.260 --> 06:12.660
It has just been not very accessible to kind of the developers that want to play around with it.

06:12.660 --> 06:16.340
I'm trust on has had this, I think, for over 20 years already.

06:16.340 --> 06:16.740
Not sure.

06:16.740 --> 06:20.020
Maybe always almost 30 years now.

06:20.100 --> 06:25.860
Where you draw the protection boundary around the OS and in the US in a trust zone,

06:25.860 --> 06:28.620
you have a secure world and a not secure world.

06:28.620 --> 06:34.220
And then you suddenly can say, look, I have a switch over to secure world and I have my own whole OS running there.

06:34.220 --> 06:38.340
And I can have multiplications that run on top of my OS.

06:38.340 --> 06:46.540
And this is actually now being picked up, picked up by the next generation of TEs in computer computing,

06:46.540 --> 06:51.820
where we now have, for example, I'm CCA with AMD, SVS and P into DX.

06:51.820 --> 06:56.620
I think you will hear about these technologies a lot also today.

06:56.620 --> 07:02.820
Where we draw the protection boundary again around the virtual machine.

07:02.820 --> 07:07.740
And then we have some, some machine monitors, some hypervisor.

07:07.740 --> 07:15.180
And on top of that, you then spawn up multiple machines, realms, enclaves.

07:15.180 --> 07:17.940
However, you may name them to call it a technology.

07:17.940 --> 07:21.260
And then inside your area, you have your guest OS, maybe some container runtime.

07:21.260 --> 07:24.500
On the top, you have some, some applications, right?

07:24.500 --> 07:32.780
So these are, let's say, multiple levels of depending on how big you draw your box in your technologies that you're using.

07:32.780 --> 07:40.260
But all of them have the idea that you cannot access from the lower levels the data that is running in the higher levels.

07:40.340 --> 07:44.300
So here, for example, the OS or the normal world OS or the TSHIM or VMM,

07:44.300 --> 07:47.740
also don't have access to application data.

07:47.740 --> 07:52.420
And I think that is the core idea for all this confidentiality.

07:52.420 --> 07:59.540
And you can also have a station on top of that, that you can convince remote people that, yes, this is the case,

07:59.540 --> 08:04.220
my host OS does not have access to my data.

08:04.220 --> 08:11.060
And taking a lens at, taking a look at how are we doing this today?

08:11.060 --> 08:14.660
We have three talks that are in this right column.

08:14.660 --> 08:19.020
TDX Deep Dive, and we talk about SV Step and about Mushroom.

08:19.020 --> 08:22.660
Then we have two more talks that are in the other domains.

08:22.660 --> 08:26.380
It's one about FTPM, one about databases.

08:26.380 --> 08:28.980
And then, of course, we always have talks that are really cross-cutting,

08:28.980 --> 08:32.780
that don't really fit into these type of boxes.

08:32.780 --> 08:40.380
That are also about attestation and how do we work with this?

08:43.060 --> 08:50.100
Now, our dev room is, fortunately, unfortunately, has become very popular.

08:50.100 --> 08:55.740
I thank all of you for submitting great talks.

08:55.780 --> 09:00.180
We could only fit eight, and we were hurting for that a lot.

09:00.180 --> 09:05.300
So I want to give some honorable mentions here to folks that we could not fit today.

09:05.300 --> 09:07.940
So there were quite some talks about Project Verizon.

09:07.940 --> 09:10.620
There was a talk by Thomas also last year on that.

09:10.620 --> 09:13.700
Check it out if that sounds interesting to you.

09:13.700 --> 09:19.820
We had suggestions about connected containers, connected clusters on open stack,

09:19.860 --> 09:26.100
about remodestation in telecom, and about formalizing remodestation.

09:26.100 --> 09:27.180
And I put the links here.

09:27.180 --> 09:29.660
The slides are on the schedule.

09:29.660 --> 09:31.220
Check them out.

09:31.220 --> 09:33.380
I think that these are all great.

09:33.380 --> 09:39.100
And we also didn't feel that it's justified to have our own talks up here

09:39.100 --> 09:41.900
if you already had to reject talks.

09:41.900 --> 09:48.380
So we did cool stuff on SGX, some small execution.

09:48.380 --> 09:54.180
And you was trying to build some bare SGX enclaves for the community.

09:54.180 --> 09:55.500
You can also check out these.

09:55.500 --> 09:57.500
If that sounds interesting.

09:57.500 --> 10:03.460
And I hope that we can start some community building around the times

10:03.460 --> 10:04.580
when we are not all here together.

10:06.660 --> 10:09.420
Maybe also keep submitting your talks next year.

10:09.420 --> 10:12.500
We are trying to get a full day dev room.

10:12.500 --> 10:14.620
I think this year didn't work because of all the dev rooms.

10:14.620 --> 10:19.780
But in the apparent success, I think we will get there at some points.

10:19.780 --> 10:24.220
And keep submitting talks and we'll try to get more space from the full-dom organize.

10:24.220 --> 10:24.700
Exactly.

10:24.700 --> 10:28.540
So we hope to have more engagement in the next years

10:28.540 --> 10:35.140
and move bigger to a full day so that we can have more of these talks at the same time.

10:35.140 --> 10:38.740
So this is just a schedule in short.

10:38.740 --> 10:40.700
How do we work for the speakers?

10:40.700 --> 10:43.380
So we always have a five-minute switch over.

10:43.380 --> 10:46.100
And for people to have some breathing room to go in and out,

10:46.100 --> 10:48.380
maybe have some side discussions.

10:48.380 --> 10:54.620
And at the same time, please also leave some room for Q&A.

10:54.620 --> 10:56.420
And so yeah, I think that's from my side.

10:56.420 --> 10:57.140
Welcome.

10:57.140 --> 10:59.060
Not sure if you want to see.

10:59.060 --> 11:00.820
Maybe just a couple of practicalities.

11:00.820 --> 11:05.020
So the room is limited rights.

11:05.020 --> 11:06.700
But there are still spots here and there.

11:06.700 --> 11:09.660
So people who are standing, please feel free to take a spot.

11:09.660 --> 11:11.980
And the logistics are not ideal here.

11:11.980 --> 11:14.940
But if maybe if you see people coming in tight to move to the middle,

11:14.940 --> 11:17.820
or if there is like spaces left, we're not sure.

11:17.820 --> 11:22.180
But the previous deaf rooms were really full and it would be a bit sad to kind of put on the door

11:22.180 --> 11:24.500
that people cannot come in if there is still seats left.

11:24.500 --> 11:28.580
So as long as there is seats left, we will not close the room.

11:28.580 --> 11:31.660
Also in those five-minute breaks, if you want, you can go in and out.

11:31.660 --> 11:36.100
Again, the logistics are not ideal, but we'll make it work.

