WEBVTT

00:00.000 --> 00:12.960
Hello everybody. So for our next speakers we have Nicole and Philip. So Nicole is from

00:12.960 --> 00:18.720
Electomatis and Philip from Bosch and they'll be talking about how open source projects

00:18.720 --> 00:24.840
approach functional safety. Thank you.

00:24.840 --> 00:37.000
Thanks and welcome. As the title says we're talking on how open source projects approach

00:37.000 --> 00:42.920
functional safety. There are so many projects out there so we just took three examples which

00:42.920 --> 00:49.280
will be the Xan Zafire and Linux part. So we do together so just to give you a short

00:49.280 --> 00:55.760
intro on who we are. My name is Philip as introduced. I'm currently a product manager for embedded

00:55.760 --> 01:02.200
open source inside Bosch. But the time where I'm speaking here I mainly do is the chair

01:02.200 --> 01:06.280
of the technical steering committee within the ELISA project which works on enabling

01:06.280 --> 01:12.440
safety and I'm also leading a work group there which basically puts the different pieces

01:12.440 --> 01:17.200
of open source projects together. Then I'm currently also a member of the Linux Foundation

01:17.200 --> 01:23.200
Europe advisory board which has been started last year and personally I'm open source

01:23.200 --> 01:30.600
into the S since like 15-20 years or something where I'm using it mainly. And this gives

01:30.600 --> 01:39.080
time for Nicole directly. Yeah so this works. So yeah I'm Nicole. Yeah I'm mainly a safety

01:39.080 --> 01:45.040
person. I started off in production maintenance so not maintenance like a maintainer that

01:45.040 --> 01:51.040
you might know but really like yeah something breaks and somebody has to fix it. I went

01:51.040 --> 01:55.360
then to software development, been a software developer and tester mainly always with some

01:55.360 --> 02:02.080
safety background in the automotive and the defense industry. And then changed to do more

02:02.080 --> 02:08.160
safety sort of safety centric work. About five years ago we decided we can do things

02:08.160 --> 02:16.160
better and founded ElectroMetres so that's where I'm currently at. Doing safety consulting

02:16.160 --> 02:21.440
a little bit of what we heard before the license compliance stuff. I'm in and out of the open

02:21.440 --> 02:26.920
chain project. I'm mainly involved with the ELISA projects in the system and the medical

02:26.920 --> 02:33.800
group. I'm in the SPDX project in a safety working group. The safety manager of the

02:34.120 --> 02:38.920
SEFA project and so on. So yeah if you want to know about open source and safety maybe

02:38.920 --> 02:44.880
we should talk. Yeah if you talk to me and I won't recognize you again. I'm not arrogant

02:44.880 --> 02:50.120
I just cannot remember your face so please just you know if you know me just tell me

02:50.120 --> 02:56.040
hey we know each other. That's completely normal for me that I won't recognize you again.

02:56.040 --> 03:02.800
So you can also text me so mainly each social media platform. I have the same handle Nick

03:02.880 --> 03:09.880
Pablo so yeah please feel free to reach out. So starting with the real thing. So yeah we're

03:10.560 --> 03:15.880
starting about functional safety so who is in the room familiar with the term functional

03:15.880 --> 03:23.880
safety at all. Oh that looks good. So for those who aren't so we're not talking security

03:23.880 --> 03:29.600
we're talking safety here so that part of the system that should not kill you in case

03:29.680 --> 03:36.680
of an internal fault. So yeah it's mainly it's a do not harm thing that the system behaves

03:43.760 --> 03:50.200
always in a safe way whatever happens whatever input you have whatever thing that breaks

03:50.200 --> 03:55.560
that's a part of safety and the stuff that you need to ship with your product to really

03:55.600 --> 04:01.600
prove that the system cannot kill you or most probably won't kill you let's put it like that.

04:05.720 --> 04:11.720
So with functional safety the main things that you do expect are yeah that software behaves

04:11.720 --> 04:18.720
as specified which implies already that you have a specification that it does not interfere

04:18.720 --> 04:25.720
in any way with the system components you have and all around us events are addressed

04:26.560 --> 04:30.960
somehow so that you even can avoid them or at least detect them and have some mitigation

04:30.960 --> 04:37.960
efforts in there and yeah that you have sufficient evidence that's really proof this. Right and

04:38.640 --> 04:44.440
I guess the next one is for me. So as in the title we talk about the three example projects

04:44.440 --> 04:48.320
so we have one as the Linux representative while there's so much more we'll later see

04:48.320 --> 04:53.640
this. We have a real time OS with Zepfire there are recently also others coming out which

04:53.640 --> 04:58.320
claim to have safety certification and may all be open source but this is the one in

04:58.320 --> 05:03.880
there and we have the last one which the Xen hypervisor has a virtualization solution and

05:03.880 --> 05:10.880
they all run under the Linux foundation projects and to just get an idea on who's in there so

05:10.880 --> 05:17.560
we have a large number of members within the Zepfire a few people in Xen actually and then

05:17.560 --> 05:23.920
the middle size in Elisa and as you could see from my introduction I'm coming from Bosch

05:23.920 --> 05:29.080
so we're doing a lot of automotive work also and with this respect I just wanted to show

05:29.080 --> 05:36.080
how different members are because if you think about like medical devices, automotive, railway,

05:36.480 --> 05:41.560
industrial parts that's where really safety standards come into picture and if you look

05:41.560 --> 05:47.600
into Zepfire it's not really our mobility or ever space member in there it's mainly hardware

05:47.600 --> 05:53.440
driven and so we have microcontroller companies, sensor manufacturers and so which really have

05:53.440 --> 05:59.240
this visibility in there while for the Xen projects you have some mobility suppliers

05:59.320 --> 06:05.320
but it's originated from the server process there's no real car manufacturer in there and

06:05.320 --> 06:10.720
what I had here in my also to mention is that they have a bunch of other members in there

06:10.720 --> 06:16.520
but we're just not supporting the project as a finance while if you look into the Elisa

06:16.520 --> 06:23.520
project there are mobility aerospace system providers in there so from OEM to one supplier

06:23.520 --> 06:29.880
base and so we will now go through the different projects one by one just say where they are

06:29.880 --> 06:35.600
and how they have common parts on safety and how they differ so the next slide goes already

06:35.600 --> 06:42.600
again wants to because she comes from Zepfire. Yeah so I'm not sure how many people in the

06:43.240 --> 06:49.240
room already know about Zepfire so Zepfire is let's say the coolest real time art class

06:49.320 --> 06:53.880
that you can find out there it's open source it's permissively licensed you can bring it

06:53.880 --> 07:00.880
down to a really resource safety as a safety size really even smaller than the Linux kernel

07:05.400 --> 07:12.400
we're currently heading for safety certification we have yeah the safety working group that

07:12.640 --> 07:18.120
now currently preparing and let's say enhancing what's there in the project so that anybody

07:18.160 --> 07:24.360
can take the project artifacts to go through their own certification or qualification or

07:24.360 --> 07:29.400
at least has a look into it to say hey that really brings everything that I need for my

07:29.400 --> 07:36.400
application at the moment yeah the safety awareness honestly in the community is limited

07:37.760 --> 07:44.040
there's a high awareness but quality but yeah safety sometimes really is the hot potato

07:44.040 --> 07:48.760
nobody wants to touch but yeah we have this working group and we're working on it and

07:48.760 --> 07:54.760
we're getting more and more support in the complete community. What's important still

07:54.760 --> 07:59.760
yeah it's posicompatible so for all that that come here from the automotive domain and think

07:59.760 --> 08:06.760
hey we need something it's you can use your posic stuff on that and the main part of Zepfire

08:08.360 --> 08:12.440
is hardware agnostic so there's a very strict hardware abstraction layer so it's really

08:12.480 --> 08:17.480
easily to port from one application or one platform to the other.

08:17.480 --> 08:21.080
So yeah San is you.

08:21.080 --> 08:26.160
And in contrast if you take San so we saw that it's a much smaller community but they

08:26.160 --> 08:32.600
are really coming from a strong security background they were used to have virtualization to isolate

08:32.600 --> 08:39.600
systems so in there from the beginning of the project they had a very strong quality mindset

08:40.320 --> 08:45.720
which you can see that they have every commit tested they have two different CIP pipelines

08:45.720 --> 08:52.720
for this testing they also have a strong rigorous quality process so that they really just have

08:55.600 --> 08:59.800
full commit traceability so from the first commit to the end you can see everything

08:59.800 --> 09:06.160
which happened which is organized there due to having it in official production also data

09:06.200 --> 09:10.280
centered it shows you how much care you need to take because there's a lot of chance for

09:10.280 --> 09:17.280
intrusion there yeah AMD silings are those which are mainly driving the San project they

09:17.280 --> 09:23.440
are also the ones which work on the safety certification and that's also what they said

09:23.440 --> 09:28.400
if you have an open source project you need to do this continuously right because traditional

09:28.400 --> 09:33.240
things are often safety certified for one shot and then you have hard times to update things

09:33.280 --> 09:37.800
so it's a challenge which many have to follow now and what they said in the first phase they

09:37.800 --> 09:42.360
show that actually open source is certifiable that's what they have as the certification

09:42.360 --> 09:47.800
concept approval and then they go for what for an assessment if you want to do the same

09:47.800 --> 09:52.920
thing in Linux just imagine all the distributions out there the flavors how you build create

09:52.920 --> 09:58.880
things life gets much more complicated this is really the open source superlative you

09:58.920 --> 10:05.680
have so many contributors such a large code size and everything and then also very large

10:05.680 --> 10:12.680
community much more flexibility how user use cases and also in this way I just took some

10:12.920 --> 10:17.520
by searching the web some examples from all the companies which making their attempt and

10:17.520 --> 10:24.520
how to do this either together with others or independent and it was having a first

10:24.680 --> 10:28.840
activity with the social Linux and P project so it was roughly a range of 10 years back

10:28.840 --> 10:33.680
already where they worked on it it stopped a little bit it transitioned into the Lisa

10:33.680 --> 10:39.400
project which I'm representing and it recently get a new momentum due to what's called the

10:39.400 --> 10:43.200
software defined vehicle where you have much more centralized high performance compute

10:43.200 --> 10:48.240
cloud connectivity and so on and there is a we want to have more open source usage and

10:48.240 --> 10:53.600
bring more things into the space but then the first question when they come to the Lisa

10:53.600 --> 10:58.800
project they asked to me when will you have a safety certified linux which I can simply

10:58.800 --> 11:05.480
use I was a well that's something which we are not able to provide directly because when

11:05.480 --> 11:11.080
you are in an environment you need to make sure that your system is safe and we cannot

11:11.080 --> 11:16.320
make sure that you do your engineering properly and we cannot also not guarantee that you

11:16.320 --> 11:20.720
follow certain processes which are required we can just give you guidance how to use them

11:20.800 --> 11:25.600
and the last thing is like oh will you just have one snapshot which is then safety certified

11:25.600 --> 11:30.200
and for that this doesn't make sense because you know how many fixes are getting into a

11:30.200 --> 11:34.720
product so there's most likely a vulnerability coming up things are connected you want to

11:34.720 --> 11:39.600
enhance features so we need to go on a continuous path and that's something completely new also

11:39.600 --> 11:46.800
for traditional safety part works and we always put the disclaimer in you cannot be relieved

11:46.880 --> 11:52.960
from your responsibilities so it's like legal notice here but yeah we have different projects

11:52.960 --> 11:57.560
which can provide fast forward and as we share same burdens on regulations that goes together

11:57.560 --> 12:04.080
certification will be the key part of it at the end and this gets complicated because

12:04.080 --> 12:10.320
certification is very expensive so it takes some authorities a lot of checks audits and so on

12:10.320 --> 12:15.680
and how this is financed you can see with three different approaches so there's for Zephyr

12:15.680 --> 12:22.320
their Platinum members which finance it they get the full access for Xanad's AMD Xilinx which is

12:22.320 --> 12:27.600
the business in there they mainly spent the effort in the project and as for Linux there are

12:27.600 --> 12:32.320
integrators so the strongest people in their involved is currently Red Hat and Coating they

12:32.320 --> 12:38.800
are really trying to bring the things forward and you can also see this difference in there on how

12:38.800 --> 12:45.920
open the people are so Nicole mentioned there is the workgroup on safety the safety workgroup

12:45.920 --> 12:50.320
when Zephyr it opened last year so there has been always safety activities from the beginning

12:50.320 --> 12:55.360
considered but to get a wider outreach this was opened also to the non-platinum members so that

12:55.360 --> 12:59.600
there's new inputs new activities the requirements management is a good example which came out of it

13:00.320 --> 13:06.240
and a little bit things keep behind the scenes because it's basically then a benefit also for

13:06.240 --> 13:09.920
the Platinum member to get the commitment and to guarantee that there is financing in

13:11.120 --> 13:18.400
Xan has the approach from AMD they are working on getting code MISRAC compliant which is some

13:18.400 --> 13:25.200
special activity which often was asked by automotive and they also provide documentation

13:25.200 --> 13:32.320
and their parts upstream so later on for Zephyr and for Xanad if you have the software at hand

13:32.400 --> 13:37.520
this is a software which is running on safety systems but you don't know how to use it because

13:37.520 --> 13:41.680
you miss maybe a manual or you miss certain test cases or you don't know how to really bring it

13:41.680 --> 13:48.640
into picture in the ELISA project or so we really focus on the enablement we don't do a safety

13:48.640 --> 13:54.800
certification and it will just enable others so we want to pre-helping pass why we do so

13:55.920 --> 14:00.960
code complexity is one reason of it so if you see we have million lines of code in Linux

14:00.960 --> 14:05.920
and small footprint in the artist in the hypervisor due to the nature of the software

14:06.480 --> 14:13.440
and I don't I put it in here and said it can be easier so I don't say it is easier but due to

14:13.440 --> 14:20.320
the small code size you have a much better chance in reaching these things faster but to get code

14:20.320 --> 14:28.880
coverage testing and so on you need trainings which Nicole for example does a lot with in the past

14:28.880 --> 14:35.760
and currently so maybe Shoddy can give a word on this yeah so yeah asking for what do the people

14:35.760 --> 14:42.400
contributing to the safety element have enough skills it's a it's a frequent question and we have

14:43.360 --> 14:50.240
different approaches in the different projects so in Zephyr we had a training just by a usual

14:50.240 --> 14:56.480
training provider for who was interested some while ago there is the option to have another

14:56.480 --> 15:01.840
training for that and we have two committees we have a safety committee and we have a safety

15:01.840 --> 15:10.400
working group which are full with as a seasoned safety experts that can guide and train and

15:11.440 --> 15:18.800
are just there and to to help people out with open questions the sand project had a little bit of

15:18.800 --> 15:25.520
different approach they are very centric about their code quality and about complying with

15:25.520 --> 15:31.280
coding standards so everybody who wants to contribute needs to know about Misra and they had

15:31.280 --> 15:38.800
even a training by boxing to do so and yeah they have mainly one safety expert that really spreads

15:38.800 --> 15:47.280
the word in Elisa we again have a different approach so for the complete community we have

15:47.280 --> 15:53.200
open web in ours that you can yeah either dial in or watch them again on YouTube

15:55.520 --> 16:00.080
there are the safety experts again in the working groups there are different working groups

16:01.920 --> 16:05.680
so there is no direct training provided but you can have the webinars and you can

16:06.320 --> 16:13.520
yeah just learn as you go from the experts in there right and then if you think well that's a

16:13.520 --> 16:19.040
lot of things which I have to do I just go with the traditional approach I save some money I take

16:19.120 --> 16:25.920
a normal artist but then I just took the Linux example you can read it from the left the right

16:25.920 --> 16:31.360
or from the right to the left so you don't have hard real-time requirements you don't have safety

16:31.360 --> 16:36.160
certification yeah these are some topics but you have a really rich ecosystem portability

16:36.160 --> 16:42.640
features experts any kind of hardware support it's two tackle complex products this something

16:42.640 --> 16:46.240
which you don't have with a certified artist because it's often proprietary and just for a very

16:46.240 --> 16:52.800
limited set of devices so it depends on which point you are you need to tackle both sides you

16:52.800 --> 16:57.040
need to see how does my system look like what do I want to achieve where is my complexity and how

16:57.040 --> 17:02.720
do I want to solve the complexity for this we put together different working groups within Elisa

17:02.720 --> 17:07.760
and created the largest system so it's also why we have this talk here where we really bring an

17:07.760 --> 17:12.880
on a microcontroller micro processor base we're bringing different Linux flavors and all put

17:12.880 --> 17:18.320
things together to showcase this is the reproducible system however you can make use of because

17:19.200 --> 17:26.320
from our mission we say we would like to give you elements processes tools software documentation

17:26.320 --> 17:33.280
which brings things forward and this especially means if you have safety critical systems you need

17:33.280 --> 17:38.800
to get understanding about the systems so this is what you need call wants to take about yeah so

17:39.680 --> 17:45.440
I think everybody here in the room will agree with me to say yeah to assess whether a system is

17:45.440 --> 17:50.480
safe you first need to know about the system you need to understand the complete system to see if

17:51.120 --> 17:57.360
a system or a subsystem in the system is safe enough so then you really need to understand

17:57.360 --> 18:03.440
if this element or subsystem that you want to qualify for safety is in this context of your

18:03.440 --> 18:12.560
complete system in a safe enough or capable enough to do what you want it to do really needs to

18:12.560 --> 18:18.160
yeah choose which features are important for your safety to evaluate them to qualify them and

18:18.160 --> 18:25.200
identify the gaps that you might want needs to fill yourself with your own application with your own

18:25.200 --> 18:33.600
basic software with your own whatever so in safety there's this approach for that called safety

18:33.600 --> 18:43.360
element out of context so I think the market approach is that you have a safe a generically

18:43.360 --> 18:50.480
safety qualified or safety certified system software component whatever that you can integrate

18:50.480 --> 18:56.720
into your system and it has been developed without knowing where it will go into so in fact it's not

18:56.720 --> 19:02.080
a safety element out of context safety element was an assumed context so whatever you do for example

19:02.080 --> 19:09.040
as a sefer or a son you assume what you will need for functional safety and you write this down

19:09.040 --> 19:17.920
and you work according to that so typically these elements are then come with obligations they come

19:17.920 --> 19:23.760
with a safety manual that you need to adhere to you prove that for your assumed context and

19:24.560 --> 19:31.840
that the features that you identified as maybe safety critical for your user that they are developed

19:31.840 --> 19:38.000
efficiently that they have requirements suitable implementation that there is test that there's

19:38.000 --> 19:42.560
completeness that there's planning and that there are these obligations of use when you want to

19:42.560 --> 19:56.640
integrate it to your final system and yeah sounds all very great but we still come over some

19:56.640 --> 20:04.720
community challenges or some general challenges when we want to bring open source to the safety

20:04.720 --> 20:13.520
world so we will we get a lot of pushback still from the safety world that yeah open source is not

20:13.520 --> 20:22.240
behaving like commercial software and we can't do this as a death sentence yeah it's true in the

20:22.240 --> 20:27.440
same in this open source project you have less influence on maintainers you can you're not the

20:27.440 --> 20:36.720
boss you can't tell them do this what you can do is hey I need this and I'll I'll propose the change

20:36.720 --> 20:43.200
to do this and I do it and we will do it together oh yeah it's not it's it's not a top down hierarchical

20:43.200 --> 20:51.760
approach there it's harder to bring skills into the community you can just say hey these 20 developers

20:51.760 --> 20:59.760
will get this training because they just don't care people tell us hey who so often who will be

21:00.400 --> 21:06.640
liable for a certified suffer who will be liable for this who will be liable for that so this is

21:06.640 --> 21:12.960
something that still needs more understanding out there because the community will never be liable

21:12.960 --> 21:21.520
whatever CRA will say we need a development process that somehow is present in the document saying hey

21:21.520 --> 21:25.440
I need to ship this with requirements there needs to be a system architecture there needs to be

21:26.160 --> 21:32.720
auditable code whatever that is so really to map map what a safety integrity standard needs from a product

21:34.720 --> 21:42.000
and how yeah I guess as we approach the last three to four minutes already yeah I just keep this one

21:42.000 --> 21:48.640
short so what we do is we cannot do this alone and we really try to find communities areas where we

21:48.640 --> 21:54.080
can collaborate so that's why the project really reaches out to all the different areas seeing what

21:54.080 --> 22:00.800
are related activities to go through development and really share ideas and for the sapphire for

22:00.800 --> 22:06.960
example can be something to learn from also for other communities yeah so then I also keep this

22:06.960 --> 22:13.760
very short because so yeah we try what we are currently approaching is to apply something like

22:13.760 --> 22:18.640
a v-model as a knowledge model not like as a process model to the sepah project to really have

22:18.640 --> 22:24.080
requirements and traceability and everything that we need so there's a lot of stuff there and there's

22:24.080 --> 22:29.280
a lot of stuff happening so we have already said we have two committees working on that there's this

22:29.280 --> 22:34.560
safety committee consisting of the platinum members that really do the strategic decisions

22:34.560 --> 22:40.880
about a final certification and there's a working group really creating the value for everybody

22:40.960 --> 22:46.720
that you can have all the artifacts and all the information that you need for a safety qualification

22:48.800 --> 22:53.280
this is a current snapshot of our requirements work we do requirements using stricter

22:54.320 --> 22:59.360
stand from stricter is over there and for everybody who wants to know more about that we do have a

22:59.360 --> 23:07.520
talk on sunday in the esbombe deaf room around lunchtime for that we also get asked what to do

23:07.520 --> 23:15.280
if you want to contribute same thing as always just show up please when you show up and you have

23:15.280 --> 23:23.600
ideas you have best practices please share them the communities are all open to that even when you

23:24.480 --> 23:29.600
don't know much about safety just show up because everybody will just tell you hey listen and learn

23:29.600 --> 23:35.600
and we do this together and when you're a safety person that wants to contribute or that wants to

23:35.600 --> 23:42.000
bring open source to their products yeah just become an ambassador for open source and safety because

23:42.000 --> 23:47.680
the quality usually is really high the functionality is very high there's a lot of stuff around that

23:47.680 --> 23:54.480
can be used and where we have the value through collaboration and not just through yeah purchasing

23:54.480 --> 24:02.800
license agreements and all that so we have many value here yeah final thing yeah there is no

24:02.800 --> 24:09.200
certification date set so please don't come to us and ask we can we can collect money and bet on

24:09.200 --> 24:15.440
that when we are ready we are very far in a lot of projects there won't be a certification for

24:15.440 --> 24:21.520
elisa because elisa should help you to certify or to qualify and this yeah elfen and sefer we are

24:21.520 --> 24:28.560
on it we are creating the stuff let's say soon and that's it and before you leave we have a little

24:28.560 --> 24:33.360
bit swag left over there but not the hat this is from someone else

