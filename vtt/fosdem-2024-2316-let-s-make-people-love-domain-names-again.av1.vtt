WEBVTT

00:00.000 --> 00:12.800
Our next speakers whose names I forgot are going to tell us about new developments in

00:12.800 --> 00:14.560
domain management.

00:14.560 --> 00:19.440
So we were supposed to be only 10 persons, so I'm amazed that the room is full.

00:19.440 --> 00:21.480
So Pierre Olivier, are we ready?

00:21.480 --> 00:23.600
Let me check.

00:23.600 --> 00:26.400
No, no.

00:26.400 --> 00:28.400
The server is not responding.

00:29.200 --> 00:32.800
Okay, do we see cute kitten for instance?

00:32.800 --> 00:34.800
One minute.

00:37.800 --> 00:43.800
Oh, yes, our internet is not broken, so I don't know what is happening.

00:43.800 --> 00:45.800
So does it respond to ping?

00:45.800 --> 00:48.800
Let me check.

00:53.800 --> 00:57.800
The audience said, thank you very much.

00:58.200 --> 01:00.200
Check the DNS maybe?

01:06.200 --> 01:09.200
I don't know how to use an NS lookup.

01:09.200 --> 01:11.200
Makes sense.

01:12.200 --> 01:15.200
Okay, will I need to show you a happy domain later?

01:15.200 --> 01:18.200
Oh, oh, oh, wait, I have a clue.

01:28.200 --> 01:32.200
Oh, it works.

01:32.200 --> 01:35.200
It's always DNS.

01:35.200 --> 01:37.200
Thank you very much.

01:37.200 --> 01:42.200
Thanks to the sponsors and first to the volunteers.

01:42.200 --> 01:44.200
We are there thanks to them.

01:44.200 --> 01:47.200
They're from Warmthanku, Peter.

01:47.200 --> 01:52.200
So, I'm going to start with the first question.

01:52.600 --> 01:55.600
Warmthanku, Peter.

01:55.600 --> 02:01.600
So, look at these DNS issues.

02:01.600 --> 02:09.600
You all know them and these are the most known of the big companies.

02:09.600 --> 02:10.600
Big noise.

02:10.600 --> 02:15.600
Although their team are well skilled and are good professionals.

02:16.000 --> 02:25.000
What does it mean that it happens also to small companies all the time to all of you?

02:32.000 --> 02:36.000
So, like you, we face the same technical issues.

02:38.000 --> 02:42.000
The DNS system is complexity is increasing all the time.

02:42.400 --> 02:50.400
Yet, it's invisible, but not for us, but for all the people who type their URL in the navigator.

02:50.400 --> 02:57.400
Those and their answer are often badly set up through ignorance or lack of skills.

02:57.400 --> 02:59.400
Great.

02:59.400 --> 03:02.400
So, there are areas of improvement.

03:02.400 --> 03:09.400
Therefore, we build a team of experts to try and improve the situation.

03:09.800 --> 03:12.800
Your speaker today, Pierre Olivier Mercier,

03:12.800 --> 03:17.800
system engineer and computer professor in a computer science engineering school.

03:17.800 --> 03:24.800
And myself, Frédéric Griteur, contributor to Free Software Project Volunteer.

03:24.800 --> 03:31.800
Since decade and like you, through my voluntary efforts and regular funding,

03:32.200 --> 03:39.200
I'm going to hand read the URL there, 20 for another, etc.

03:41.200 --> 03:45.200
There are a lot of good ideas, nonetheless, in the Internet.

03:45.200 --> 03:47.200
Good stuff to find.

03:47.200 --> 03:50.200
DNS record assistance, for instance.

03:52.200 --> 03:54.200
Tool to test your records.

03:56.200 --> 04:00.200
Your zone, your delegation, your email parameters.

04:00.600 --> 04:05.600
Some services to monitor your domain, for instance, record propagation,

04:05.600 --> 04:08.600
or which domain is soon to expire.

04:11.600 --> 04:16.600
There are also online interfaces, sometimes with good functionalities.

04:17.600 --> 04:21.600
But each provider has its own interface.

04:23.600 --> 04:25.600
What does it mean?

04:26.000 --> 04:30.000
For us, we are managing several providers.

04:30.000 --> 04:32.000
That means learning each interface.

04:32.000 --> 04:38.000
And at the end, we end up using the raw mode and making errors.

04:39.000 --> 04:41.000
I remember a friend, not me.

04:41.000 --> 04:47.000
We missed the final dot at the end of a record.

04:49.000 --> 04:54.000
Another example, meaning it happens to us all the time.

04:55.000 --> 05:01.000
A few months ago, I wanted to add a CAA record to my domain.

05:02.000 --> 05:09.000
CAA record, which is not very well known, yet 10 years old.

05:10.000 --> 05:14.000
So if you didn't do it, do it. It's very easy.

05:15.000 --> 05:19.000
I found an online form, but it didn't support parameters.

05:19.000 --> 05:21.000
So it was useless for me.

05:21.000 --> 05:24.000
I was not open source. I couldn't help and change.

05:25.000 --> 05:27.000
Happy domain is open source.

05:28.000 --> 05:32.000
That means so much time wasted for switching from tools for another looking for solution,

05:32.000 --> 05:38.000
deepening in the RFC documentation, which is not so easy to read.

05:38.000 --> 05:43.000
Or maybe all of you have read all the RFC.

05:43.000 --> 05:45.000
Who has read all the RFC?

05:45.000 --> 05:48.000
One, two, three, four.

05:48.000 --> 05:52.000
Ah, great. Ah, great, great.

05:54.000 --> 05:57.000
I don't. Apologize.

05:58.000 --> 06:06.000
So we would like to offer you a sort of magic wand in the form of modern interface.

06:07.000 --> 06:10.000
And we named it Happy Domain.

06:12.000 --> 06:16.000
It will make settings pleasant, makes the display easy to read,

06:16.000 --> 06:21.000
and we would like to centralize all the men and registrar in one place

06:21.000 --> 06:25.000
and forgives error as much as possible.

06:28.000 --> 06:32.000
So let's Pierre Olivier make a demo.

06:32.000 --> 06:41.000
Let's dig inside the software because it's five o'clock

06:41.000 --> 06:49.000
and you are supposed to be tired.

06:52.000 --> 06:54.000
So tell me, how does it work?

06:54.000 --> 07:01.000
And I would like if you could change for me CAA in the domain.

07:01.000 --> 07:03.000
We're talking about CAA. Could you do that for me?

07:03.000 --> 07:05.000
Okay, okay.

07:06.000 --> 07:10.000
So I go to happydomain.org.

07:10.000 --> 07:13.000
I log in to my personal account.

07:17.000 --> 07:21.000
And here is the domain I managed today.

07:21.000 --> 07:28.000
We will make the modification or domain that is not listed here.

07:29.000 --> 07:34.000
We can see there are several providers on the left.

07:34.000 --> 07:39.000
I can use this provider to filter my domain.

07:39.000 --> 07:44.000
For the demo, I will use a local authoritative server,

07:44.000 --> 07:51.000
Power DNS that run on my local machine.

07:51.000 --> 07:55.000
As it is not already registered in Happy Domain,

07:56.000 --> 08:04.000
I click the provider and I select the domain I want to manage.

08:04.000 --> 08:07.000
So today this is happydomain.test.

08:10.000 --> 08:14.000
Before I forget, I will assign it a group.

08:14.000 --> 08:19.000
This is useful for example if we have several clients or environment.

08:20.000 --> 08:27.000
So here it is on the happydomain group.

08:27.000 --> 08:33.000
And now this is the abstract view of the zone.

08:35.000 --> 08:38.000
Instead of displaying directly the records,

08:38.000 --> 08:43.000
we group them in a kind of services.

08:44.000 --> 08:50.000
For example, we have the origin with the required record

08:50.000 --> 08:56.000
such as the SOA and the NS record.

08:56.000 --> 09:02.000
And as you can see, there is no technical subdomain here.

09:02.000 --> 09:08.000
For example, the DKIM record is not in the list of subdomains here.

09:08.000 --> 09:11.000
It belongs to the email service.

09:11.000 --> 09:17.000
If we look at it, you can see of course the MX record,

09:17.000 --> 09:22.000
but also the SPF1, the DKIM, the DMARC, etc.

09:22.000 --> 09:28.000
And the corresponding records that can be displayed here,

09:28.000 --> 09:35.000
we see that my domain key record is listed here.

09:35.000 --> 09:39.000
This is not my goal.

09:40.000 --> 09:46.000
Frédéric asked me to change our registered certificate authority.

09:46.000 --> 09:50.000
Yes, I would like to use the bypass.

09:50.000 --> 10:00.000
So the certificate authority is in the service certificate authority authorization.

10:00.000 --> 10:12.000
We can see there is a simple form that assists the user with several choices.

10:12.000 --> 10:15.000
Currently, we use let's encrypt,

10:15.000 --> 10:21.000
and Frédéric told me to change it to bypass.

10:21.000 --> 10:24.000
So great, it is in the list.

10:24.000 --> 10:33.000
If it wasn't, I can select other and write the domain names corresponding to the certificate authority.

10:33.000 --> 10:37.000
And we can also provide parameters.

10:37.000 --> 10:44.000
For example, some certificate authority can restrict

10:44.000 --> 10:50.000
which user can generate a certificate for a certain domain name.

10:50.000 --> 10:56.000
So here we can provide a client ID, which is API domain.

10:56.000 --> 11:11.000
And only the API domain account will be able to issue a certificate in the bypass certificate authority.

11:11.000 --> 11:14.000
We can see there are a lot of other settings,

11:14.000 --> 11:18.000
for example to restrict wildcard certificate issuance

11:18.000 --> 11:21.000
or the SMIME certificate issuance.

11:21.000 --> 11:25.000
And at the end of the form, we have the incident response.

11:25.000 --> 11:36.000
We will see a record, provide a way to contact the owner of the domain by mail or via a hook.

11:36.000 --> 11:45.000
Here, if someone in another certificate authority tried to issue a certificate,

11:45.000 --> 11:50.000
we will be alert for a violation of our security policy.

11:50.000 --> 11:59.000
All of that is a summary of the RFCs on the CAA records,

11:59.000 --> 12:05.000
and it's pretty easy to fill for a system administrator.

12:05.000 --> 12:11.000
So the modification here is made,

12:11.000 --> 12:14.000
but only for now on API domain.

12:14.000 --> 12:20.000
We can make several other modifications to make a batch

12:20.000 --> 12:25.000
and ensure the coherence of the zone we published.

12:25.000 --> 12:30.000
So here I just have one modification to make,

12:30.000 --> 12:34.000
so I can directly publish my changes.

12:34.000 --> 12:40.000
The interface asks us to review the change,

12:40.000 --> 12:49.000
so this is a modification for the API domain.test domain for the CAA record,

12:49.000 --> 12:56.000
and it changes from letsancript.org to bypass.com with some parameters.

12:56.000 --> 13:02.000
This is exactly what we want to do.

13:03.000 --> 13:11.000
And like in Git, you can add a log to retrieve it easily later.

13:11.000 --> 13:15.000
So I applied the change, and that's it.

13:15.000 --> 13:18.000
Frédéric, are you happy with that?

13:18.000 --> 13:23.000
Great, but sorry, it's in one month.

13:23.000 --> 13:25.000
I'm really sorry, it's a mistake for me.

13:25.000 --> 13:28.000
Could you roll back this stuff?

13:28.000 --> 13:30.000
With pleasure.

13:30.000 --> 13:40.000
So of course I can do the same modification as there was only one modification.

13:40.000 --> 13:47.000
This is pretty easy, but in case of many more modifications.

13:47.000 --> 13:50.000
As of today, we support 40 providers.

13:50.000 --> 13:57.000
We rely on the DNS control project, which is led by Stack Overflow,

13:57.000 --> 14:02.000
and several providers are added each month to that project.

14:02.000 --> 14:13.000
And also we support a classic authoritative server like Bind, Power DNS, and Not.

14:13.000 --> 14:22.000
We do our best for a facilitated readability, even river zones are supported.

14:22.000 --> 14:28.000
First, you can review your change at a glance before publishing them.

14:28.000 --> 14:34.000
We archive your modifications, therefore users can try and roll back.

14:34.000 --> 14:43.000
If required, you can easily export the record, and also you can import in a standard raw file.

14:43.000 --> 14:48.000
I think on the cake, the interface can be controlled.

14:48.000 --> 14:54.000
For instance, you may need to create a dedicated suit domain for testing,

14:54.000 --> 14:57.000
or before putting a project into production.

14:57.000 --> 15:01.000
Or you can have a local environment for your development,

15:01.000 --> 15:06.000
and then a prep production on a domain hosted by, for instance, Gandhi,

15:06.000 --> 15:10.000
and the production hosted by OVH.

15:10.000 --> 15:14.000
No problem, happy domain talk to every one of them.

15:14.000 --> 15:19.000
There is no need to learn the intricate of everyone's API.

15:19.000 --> 15:24.000
You can just call the same script for all your environments.

15:26.000 --> 15:34.000
Use a pedoman as you wish, first online, or you can easily install it on your server.

15:34.000 --> 15:39.000
We have binaries and docker image for you, so you can use it.

15:40.000 --> 15:45.000
Here is what we have today. You can use it right now, and please welcome.

15:45.000 --> 15:54.000
We're convinced that we can save time and bring a piece of main for teams that manage domain name.

15:56.000 --> 15:59.000
Think 15 seconds right now.

16:02.000 --> 16:04.000
This is your time to work.

16:05.000 --> 16:11.000
Think about what are your main issues, what are your main tasks,

16:11.000 --> 16:15.000
and your greatest interest of improvement.

16:16.000 --> 16:24.000
And then we will do our best according to what you say, and your results.

16:24.000 --> 16:28.000
We don't promise to build it, of course, but we'll do our best.

16:29.000 --> 16:40.000
Some ideas, for instance, now when you use a domain name provider,

16:40.000 --> 16:49.000
you are the only one to have access to the setup.

16:50.000 --> 16:58.000
We could use it with different levels for bringing several people all together

16:58.000 --> 17:02.000
and keep track of their modification.

17:02.000 --> 17:07.000
It could also be used to delegate to part of the system domain,

17:07.000 --> 17:10.000
for instance for the marketing department or whatever.

17:12.000 --> 17:15.000
And testing is really important.

17:16.000 --> 17:21.000
So Apidomen could perform some tests on every record,

17:21.000 --> 17:26.000
not only the delegation with the SOA record.

17:26.000 --> 17:33.000
Of course, we could use and display directly in Apidomen the result of the master,

17:33.000 --> 17:41.000
but for email, we can also perform the count of resolution for the SPF record.

17:41.000 --> 17:49.000
All these tests take time, and Apidomen could save operational teams

17:49.000 --> 17:56.000
a lot of time by aggregating all these tests in the interface.

17:59.000 --> 18:03.000
Apidomen could also constantly monitor your domain names

18:03.000 --> 18:07.000
and notify you when an issue occurs.

18:08.000 --> 18:15.000
And the propagation time is certainly the least understood part of the DNS,

18:15.000 --> 18:24.000
so why not display the theoretical propagation time directly and clearly in the interface?

18:24.000 --> 18:26.000
Yes, please.

18:26.000 --> 18:29.000
We could have also some dashboards.

18:29.000 --> 18:32.000
This is an example for DMARC.

18:33.000 --> 18:40.000
That means at a glance you can see your features and how they are going.

18:40.000 --> 18:50.000
And last but not least, with the effort we put to build the API for Apidomen and the form we build,

18:50.000 --> 18:58.000
we can also imagine using artificial intelligence to create a chat

18:58.000 --> 19:04.000
and interact directly with the OER zone.

19:04.000 --> 19:13.000
This is made possible thanks to function calling in recent models and API.

19:14.000 --> 19:24.000
So please use the Element Network of the first-dem or login our system.

19:24.000 --> 19:33.000
Use your fingers, rate your dreams and priorities and help us to help you.

19:33.000 --> 19:35.000
So thank you very much. Now the questions.

19:35.000 --> 19:37.000
Thank you. We have time for one question.

19:37.000 --> 19:40.000
Okay, one question. What time is it?

19:40.000 --> 19:42.000
No, that's another question.

19:42.000 --> 19:43.000
Please.

19:43.000 --> 19:48.000
So my company will use DNS control to have DNS managed by Git.

19:48.000 --> 19:54.000
Could Apidomains be integrated in that so that both work at the same time,

19:54.000 --> 20:00.000
so that somebody could edit the DNS using the Apidomains and see that they're committed to Git

20:00.000 --> 20:03.000
where someone else follows from it?

20:03.000 --> 20:05.000
I don't know.

20:05.000 --> 20:13.000
So the question is, can Apidomen be linked with DNS control?

20:13.000 --> 20:20.000
Currently not. We does not use JavaScript language used by DNS control,

20:20.000 --> 20:25.000
but perhaps that can be a good idea to go that.

20:25.000 --> 20:27.000
And you're welcome.

20:27.000 --> 20:28.000
Thank you.

20:28.000 --> 20:30.000
Thank you very much.

