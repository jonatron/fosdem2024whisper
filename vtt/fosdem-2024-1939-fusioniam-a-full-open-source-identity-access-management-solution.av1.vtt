WEBVTT

00:00.000 --> 00:07.000
So, we're going to start our next talk.

00:07.000 --> 00:20.000
It's going to be so as to explain what we do and we'll be doing this so that I tell

00:20.000 --> 00:26.000
you fusion I am a full open source identity access management solution.

00:26.000 --> 00:35.000
Bonjour, je suis français but I will speak in English, okay? No problem. Yes.

00:35.000 --> 00:45.000
So, some words about me. So Clément Wido, I work in a French company which is called Vortex

00:45.000 --> 00:52.000
and I'm doing a lot of stuff about identity management of course because I'm here to talk about it.

00:52.000 --> 00:59.000
I'm also doing other things like music. If you want to listen to French music, open source music,

00:59.000 --> 01:06.000
it is a creative commons, you can go on my website and I'm also doing a theater and other things.

01:06.000 --> 01:18.000
Very quick about Vortex, we are a service company and we provide many solutions like collaborative tools,

01:18.000 --> 01:26.000
containers and of course identity access management and I will talk about this thing.

01:26.000 --> 01:37.000
And if you want to not play music but work on open source, you can apply on our website.

01:37.000 --> 01:47.000
So, for the topic today, I will talk about the fusion I am project, explain why we created this project

01:47.000 --> 01:56.000
and which open source component we use to try to build this big solution.

01:56.000 --> 02:05.000
So, we decided to create this with Benoit Martier which is the leader of fusion directory.

02:05.000 --> 02:14.000
I don't know if you know fusion directory product, who knows it? Okay, but many people.

02:14.000 --> 02:22.000
So, it's cool that you come here so you will know about it today and Vortex.

02:22.000 --> 02:30.000
So, we are both people working on open source product around directories and identity management.

02:30.000 --> 02:38.000
The goal was to offer a complete identity and access management solution

02:38.000 --> 02:49.000
because you know that in the propriety solutions, when you buy one, you get all the components of identity and access management.

02:49.000 --> 02:57.000
But if you are using open source tools, most of the times you only get one piece of the full picture

02:57.000 --> 03:01.000
and you need to install them and connect them.

03:01.000 --> 03:14.000
So, our opinion was to say, okay, we know that in open source, each product must do one thing and do it good.

03:14.000 --> 03:21.000
But if we want to be able to go to companies and say we are doing identity and access management,

03:21.000 --> 03:26.000
we must provide a full solution integrity.

03:26.000 --> 03:28.000
So, that's why the reflection.

03:28.000 --> 03:38.000
And we are today working on this project in Vortex with David Coutador and myself.

03:38.000 --> 03:45.000
So, who knows OW2? Okay.

03:45.000 --> 03:55.000
It's normal because it's a French consortium like Eclipse, but you know Eclipse, but you don't know OW2.

03:55.000 --> 03:57.000
So, today you know OW2.

03:57.000 --> 04:04.000
There are a lot of products inside OW2, Blumain, GLPI, and Lemanelda, et cetera.

04:04.000 --> 04:10.000
And so, we are an official project of OW2.

04:10.000 --> 04:20.000
So, one solution when you want to do a new open source software is say, okay, all that exists is mess.

04:20.000 --> 04:28.000
So, I will write everything, but of course, I have a family, so I don't have the time to write everything from scratch.

04:28.000 --> 04:35.000
So, we took all the open source projects that we know and we tried to combine them together.

04:35.000 --> 04:38.000
The one you may know is this one, OpenLDAP.

04:38.000 --> 04:42.000
Who knows OpenLDAP? Okay, yes, one.

04:43.000 --> 04:49.000
Of course, we are not the developers of the OpenLDAP software.

04:49.000 --> 04:55.000
It's something that is managed by a Siamese company and OW2, which is the leader of OpenLDAP.

04:55.000 --> 04:59.000
But we are very implied in the community and we work a lot with OpenLDAP.

04:59.000 --> 05:10.000
So, our choice for the directory server, which is clearly the base of the identity management, is OpenLDAP.

05:10.000 --> 05:13.000
And then, we put a lot of products.

05:13.000 --> 05:16.000
So, Le Mans-Haldap-NG, who knows?

05:16.000 --> 05:18.000
Ah, yes.

05:18.000 --> 05:24.000
And we have the founder of Le Mans-Haldap-NG, which is Xavier Guimard here.

05:24.000 --> 05:29.000
So, we have some of the community here in Fosdame about Le Mans-Haldap-NG.

05:29.000 --> 05:32.000
I will explain all this fusion directory.

05:32.000 --> 05:35.000
So, I said, Haldap Toolbox.

05:35.000 --> 05:37.000
Okay, LSC.

05:37.000 --> 05:40.000
Okay, it's normal because it's the products that I created.

05:40.000 --> 05:45.000
So, okay, it's normal.

05:45.000 --> 05:50.000
Okay, so, these are all community projects, open source projects.

05:50.000 --> 05:56.000
Of course, you know only this one, but you will see how we try to combine them.

05:56.000 --> 06:02.000
Our approach was to say, okay, we can be as IBM, HP, et cetera,

06:02.000 --> 06:08.000
and we can go in your company and say, we have all the components.

06:08.000 --> 06:15.000
So, access management, access manager, the directory server, the directory manager,

06:15.000 --> 06:22.000
synchronization, the connectors, and two other components, white pages,

06:22.000 --> 06:25.000
and service desk, I will present them.

06:25.000 --> 06:31.000
So, that's a typical big proprietary IIM solution, which is, okay.

06:31.000 --> 06:36.000
But we put all the open source software behind the same.

06:36.000 --> 06:40.000
Okay, so, of course, the directory server is open-end app,

06:40.000 --> 06:46.000
but we added some tools in Haldap Toolbox project to better manage open-end app,

06:46.000 --> 06:49.000
to do backups, et cetera.

06:49.000 --> 06:54.000
The directory manager is a fusion directory,

06:54.000 --> 06:59.000
connectors LSC, the access manager is Le Mans-Haldap-NG,

06:59.000 --> 07:03.000
and other tools are some part of the Haldap Toolbox project.

07:03.000 --> 07:10.000
Of course, I will present them, but I know that you know other software to do that.

07:10.000 --> 07:17.000
Typically here, the most open source tool known to be the access manager is Kiklok,

07:17.000 --> 07:19.000
who knows Kiklok?

07:19.000 --> 07:24.000
Of course, everyone knows Kiklok, but I will explain why we do this one.

07:24.000 --> 07:31.000
We have another choice to have a single sign-in product, and this is Le Mans-Haldap.

07:31.000 --> 07:36.000
And for this, of course, Evolvm midpoint, that we just saw before,

07:36.000 --> 07:41.000
is another possibility here for the directory manager, et cetera, et cetera.

07:41.000 --> 07:50.000
So, everyone can choose which technical components it will bring in identity access management.

07:50.000 --> 07:59.000
We did this choice because we are clearly developers of a lot of these components,

07:59.000 --> 08:05.000
so we can act on the roadmaps of these components, and we know how to make them work together.

08:05.000 --> 08:13.000
So, if you choose Fusion IAM, you will take the choice we have done.

08:13.000 --> 08:21.000
If you do not agree, you just can fork and replace the components if you don't like them.

08:21.000 --> 08:31.000
On a technical point of view, if you already install Kiklok and a directory server,

08:31.000 --> 08:35.000
you know that it's quite simple.

08:35.000 --> 08:41.000
All components are linked to the directory server because that's where you have your users,

08:41.000 --> 08:44.000
passwords, groups, et cetera.

08:44.000 --> 08:50.000
And here you have the connectors to be able to synchronize from a database,

08:50.000 --> 08:53.000
from an active directory, for example.

08:53.000 --> 08:55.000
So, it will go into the Haldap server.

08:55.000 --> 09:01.000
These are tools to manage the data.

09:01.000 --> 09:07.000
So, to white pages, just to display the photo, et cetera.

09:07.000 --> 09:10.000
Here is to be able to reset the passwords.

09:10.000 --> 09:13.000
Here is to create icons, et cetera.

09:13.000 --> 09:23.000
And the access manager will also be connected to the directory server to do the authentication.

09:23.000 --> 09:28.000
All these are Haldap, HaldapS flows.

09:28.000 --> 09:34.000
You have just one database used for the access manager to be able to store the configurations

09:34.000 --> 09:41.000
on all the sessions, but the other tools did not need any database.

09:41.000 --> 09:45.000
All the tools are only using the directory server.

09:45.000 --> 09:48.000
And of course, you have here the access manager.

09:48.000 --> 09:56.000
So, a user, the end user will only see the access manager part to be able to access all the data here

09:56.000 --> 10:00.000
and to access also all the components.

10:04.000 --> 10:08.000
So, some explanation on the software.

10:08.000 --> 10:11.000
The first one, everyone knows.

10:11.000 --> 10:14.000
So, like Tynitero said, it's simply the best.

10:14.000 --> 10:18.000
I hope you all have the song now in the head.

10:18.000 --> 10:24.000
It's the best Haldap server in terms of performance of standard,

10:24.000 --> 10:31.000
because the people coding on Haldap have also written a part of the RFC of the Haldap protocol.

10:31.000 --> 10:36.000
So, we're sure that this component is respecting the Haldap standard.

10:36.000 --> 10:46.000
And if you manage your Haldap by yourself, you know that you can add a lot of features with overlays,

10:46.000 --> 10:50.000
like password policy, which is very important in identity and access management

10:50.000 --> 10:55.000
to be able to expire your account, to lock your account, et cetera, et cetera.

10:55.000 --> 11:00.000
And we will see that we bring other tools to be able to manage the open Haldap password policy.

11:00.000 --> 11:08.000
And in the Haldap Toolbox project, we provide some package to be able to install open Haldap

11:08.000 --> 11:11.000
on a different distribution.

11:11.000 --> 11:15.000
You may know, are there people from Red Hat here?

11:15.000 --> 11:18.000
Okay, it's not a problem.

11:18.000 --> 11:26.000
But you may know that Red Hat has chosen to push away open Haldap from the distribution

11:26.000 --> 11:33.000
to be able to use the Red Hat directory server as the main directory server.

11:33.000 --> 11:39.000
So, if you want to install open Haldap with a package on a center-est, et cetera,

11:39.000 --> 11:45.000
you can use the Siamas package or the Haldap Toolbox package.

11:45.000 --> 11:50.000
And of course, we also provide package for Debian Ubuntu, et cetera.

11:50.000 --> 11:53.000
Okay, so the directory is okay.

11:53.000 --> 11:57.000
The directory manager, so we choose a fusion directory.

11:57.000 --> 11:59.000
It's a PHP application.

11:59.000 --> 12:06.000
It's not like PHP Haldap admin, which is a very technical tool in which you browse the tree, et cetera.

12:06.000 --> 12:14.000
Here, you have a functional view of all the objects that are in your Haldap directory.

12:14.000 --> 12:22.000
So, of course, users, groups, but you can also modelize the service icons, applications, et cetera, et cetera.

12:22.000 --> 12:25.000
So, it's a very functional view of this.

12:25.000 --> 12:29.000
And it includes administration delegation.

12:29.000 --> 12:38.000
So, you can say a people is connected to this interface, but it can only manage the people in the service, et cetera, et cetera.

12:38.000 --> 12:42.000
So, it's like the midpoint or all those software like this.

12:42.000 --> 12:55.000
It's just to offer user interface to people to read or edit and illustrate data depending on their why.

12:55.000 --> 12:58.000
The connector, no UI.

12:58.000 --> 13:04.000
It's just a command line, but it's a very powerful tool written in Java.

13:04.000 --> 13:07.000
And it talks with RISTPI.

13:07.000 --> 13:08.000
It talks with databases.

13:08.000 --> 13:10.000
It talks with Active Directory.

13:10.000 --> 13:17.000
So, we are able to easily synchronize Open Haldap and Active Directory with the store.

13:17.000 --> 13:19.000
So, very efficient.

13:19.000 --> 13:21.000
And Lema Haldap ng.

13:21.000 --> 13:23.000
So, the key clock killer.

13:23.000 --> 13:26.000
No, I know it's not, but okay.

13:26.000 --> 13:31.000
It's like key clock, but we provide an application menu.

13:31.000 --> 13:36.000
We manage all the access control.

13:36.000 --> 13:46.000
White pages is an easy way to display the data of your directory for end users to search for phone number or email address.

13:46.000 --> 13:49.000
So, these are only Haldap data.

13:49.000 --> 13:53.000
So, I created an Haldap directory with Star Wars data.

13:53.000 --> 13:58.000
And you can display them, search for the umpires, the Jedi, et cetera, et cetera.

13:58.000 --> 14:00.000
But there is no database.

14:00.000 --> 14:02.000
It's only an Haldap directory.

14:02.000 --> 14:11.000
And ServiceDef is a little tool for the support team because you're able to see first one.

14:11.000 --> 14:15.000
You can see all the password policy data from Open Haldap.

14:15.000 --> 14:25.000
If you work a little with Open Haldap password policy, you know that it's very technical to understand how all the state of the password is managed.

14:25.000 --> 14:28.000
So, here you have all the dates, et cetera.

14:28.000 --> 14:33.000
Here, and you can test the current password.

14:33.000 --> 14:37.000
Of course, you can reset the password.

14:37.000 --> 14:41.000
And you can see if the account is locked, you can unlock the account.

14:41.000 --> 14:43.000
You can see the password is expired, et cetera.

14:43.000 --> 14:52.000
So, it's very easy for a support team to know if an account is expired, it's locked to unlock it, et cetera.

14:52.000 --> 15:01.000
So, moving to the cloud, because that's how we need to work now.

15:01.000 --> 15:14.000
Why? Because before, and we still do it for customers, we have virtual machines and we deploy all the package and we configure all the package.

15:14.000 --> 15:21.000
And we say, okay, Haldap directory is here and you need to connect to this web server, et cetera, et cetera.

15:21.000 --> 15:27.000
And when you want to put the logo of the customer, you need to put the logo in every product.

15:27.000 --> 15:31.000
So, the customer say, okay, it's integrated.

15:31.000 --> 15:32.000
Okay, it's integrated.

15:32.000 --> 15:41.000
But, okay, this still works, but it's a lot of work indeed to reproduce this by every customer.

15:41.000 --> 15:43.000
You need to write that.

15:43.000 --> 15:56.000
And the cloud approach is to say we will move from package to containers, images, and we will try to configure all the images, all the containers through variables.

15:56.000 --> 16:06.000
And indeed, we saw that Haldap server is the same for each component we need to connect to the Haldap server.

16:06.000 --> 16:13.000
So, I only need one parameter, which is Haldap URL for all components.

16:13.000 --> 16:19.000
So, I configure it once and then I can have the full solution.

16:19.000 --> 16:24.000
Of course, you do cloud.

16:24.000 --> 16:27.000
Okay, it's a mess.

16:27.000 --> 16:28.000
Okay.

16:28.000 --> 16:29.000
We need to have pods.

16:29.000 --> 16:31.000
We need to have volumes, et cetera, et cetera.

16:31.000 --> 16:48.000
So, you see that what was a little easy with some bricks and some components is not easy with the cloud because you need to identify which volumes you need to run the containers.

16:48.000 --> 17:02.000
And when you split, you usually split the web application between the front end and the PHP, FPM, or the past Haldap server.

17:02.000 --> 17:17.000
But it's better because we can run all these images and we can have, so, of course, for Haldap, we have a volume for the data, a volume for the configuration.

17:17.000 --> 17:20.000
And also for the certificates, KN certificates.

17:20.000 --> 17:30.000
And so, we identified in the FusionIM project, we identified all of this and we created all of these images and volumes.

17:30.000 --> 17:38.000
So, you just need to do make, run, and it's running.

17:38.000 --> 17:40.000
We have a container registry.

17:40.000 --> 17:42.000
So, it's open source.

17:42.000 --> 17:44.000
It's available.

17:44.000 --> 17:50.000
You can just pick the images and you can run with a Docker podman or a Docker compose.

17:50.000 --> 17:54.000
So, it's very easy to test.

17:54.000 --> 18:02.000
And you can also download the Git and run the Mac, run all with a Mac file and it works.

18:02.000 --> 18:12.000
The only thing you need to do is to initialize the volumes and, of course, put some configuration for your domain, et cetera, et cetera.

18:12.000 --> 18:20.000
But you just have to do this and you will have the full stack of identity and accept management running and configured.

18:20.000 --> 18:23.000
So, it's very easy.

18:23.000 --> 18:32.000
In Vertex, we choose to create a new offer which is called with us, identity as a service.

18:32.000 --> 18:39.000
And we put FusionIM inside of our, in our cloud for our customers.

18:39.000 --> 18:42.000
So, we can run for each customer.

18:42.000 --> 18:46.000
We run one FusionIM project.

18:46.000 --> 18:57.000
And so, a customer don't have any directory, don't have anything, but he can connect all this application through SAML or OpenID Connect.

18:57.000 --> 19:04.000
He has all the applications to manage the data inside the enterprise directory which is inside the cloud.

19:04.000 --> 19:08.000
And we, of course, have a lot of RISC API.

19:08.000 --> 19:14.000
So, we have RISC API for provisioning to create accounts, to create groups, et cetera.

19:14.000 --> 19:17.000
So, you can do all this with RISC API.

19:17.000 --> 19:27.000
And we also have some RISC API here to be able to create a new OpenID client or a new SAML client.

19:27.000 --> 19:37.000
So, you can provision the users, the groups, and you can also provision through RISC API the applications.

19:37.000 --> 19:41.000
And, okay, I know I have five minutes.

19:41.000 --> 19:44.000
Yeah, I can do a demonstration.

19:44.000 --> 19:45.000
Okay.

19:45.000 --> 19:47.000
Ta-da-da!

19:55.000 --> 19:59.000
So, it's not a screenshot, okay?

19:59.000 --> 20:03.000
It's a real, it's a real interface.

20:03.000 --> 20:06.000
So, it's hosted by Vortex.

20:06.000 --> 20:12.000
It's running on OpenShift, which is Kubernetes from Red Hat.

20:12.000 --> 20:21.000
And so, this is the login form.

20:21.000 --> 20:25.000
And so, you see, it's the access manager component, so, LemoneldapNG.

20:25.000 --> 20:30.000
And inside, we plugged all the IIM components.

20:30.000 --> 20:35.000
So, this one is for configuring LemoneldapNG.

20:35.000 --> 20:43.000
So, just the administrative interface.

20:43.000 --> 20:47.000
And, okay, so you get all the parameters.

20:47.000 --> 20:55.000
And here, you have the other components.

20:55.000 --> 21:07.000
So, why?

21:07.000 --> 21:12.000
Of course, it's a demo.

21:12.000 --> 21:13.000
Yes.

21:13.000 --> 21:14.000
Yes.

21:14.000 --> 21:17.000
Yes.

21:17.000 --> 21:24.000
Okay.

21:24.000 --> 21:30.000
So, this is how we manage the users.

21:30.000 --> 21:37.000
So, what you can see is that you can work with departments and branches in the end-up directory.

21:37.000 --> 21:49.000
And we can create, so, I create, for example, a codecobain because, okay, it's 30 years ago.

21:49.000 --> 21:54.000
It dies this year.

21:54.000 --> 21:58.000
So, it's a simple account, okay?

21:58.000 --> 22:03.000
But if I want to, so, I'm an administrator, I have this view, okay?

22:03.000 --> 22:09.000
But if I want to browse the directory, I can see it.

22:09.000 --> 22:17.000
So, I'm an end user, and I want to see the information of codecobain.

22:17.000 --> 22:20.000
So, I can browse it through web pages.

22:20.000 --> 22:23.000
But this is clearly the same.

22:23.000 --> 22:30.000
You see that you can also browse the groups, so, with Brittany.

22:30.000 --> 22:43.000
And this tool is wonderful because we can dynamically use the postal address inside the end-up directory to display people on the map, okay?

22:43.000 --> 22:49.000
So, it's a nice feature for an intranet, for example, when you are all in a remote location,

22:49.000 --> 22:55.000
you just put the postal address of people and you can see them on the map.

22:55.000 --> 22:56.000
It's quite nice.

22:56.000 --> 23:00.000
And, of course, you can click on and see, okay, this one.

23:00.000 --> 23:07.000
And if you are in the support, okay, Brittany Spears has lost his password, okay?

23:07.000 --> 23:10.000
So, Brittany.

23:10.000 --> 23:13.000
Okay, I can reset the password.

23:13.000 --> 23:15.000
I'll say, okay.

23:15.000 --> 23:21.000
Baby, one more time, okay?

23:21.000 --> 23:23.000
And, okay, the password was changed.

23:23.000 --> 23:29.000
We activate the flag, so, she must change the password as the next connection.

23:29.000 --> 23:32.000
All this is managed by the open-end-up password policy.

23:32.000 --> 23:36.000
But, of course, when she will connect through all the components,

23:36.000 --> 23:45.000
the component will respect the password policy and she will be forced to change the password at next level.

23:45.000 --> 23:48.000
Okay, that's all for the demonstration.

23:48.000 --> 23:49.000
Thank you.

23:49.000 --> 23:58.000
Some questions, maybe?

23:58.000 --> 24:00.000
Yes?

24:00.000 --> 24:04.000
Can you change actually directory passwords from this?

24:04.000 --> 24:09.000
It's a feature that we did not implement.

24:09.000 --> 24:14.000
Can we use this component?

24:14.000 --> 24:23.000
This component is an adaptive box service desk to change the passwords on active directory, not yet.

24:23.000 --> 24:27.000
But, all people are saying, okay, this is wonderful, but I don't have open-end-up.

24:27.000 --> 24:29.000
I have active directory and I want to use it.

24:29.000 --> 24:34.000
So, it's in the roadmap, but it's still not available.

24:34.000 --> 24:41.000
But, for information, this one has some hooks, so you can reset the password in open-end-up

24:41.000 --> 24:46.000
and also hook it to a change at the same time in active directory.

24:46.000 --> 24:50.000
If you have both directories, open-end-up and active directory,

24:50.000 --> 24:53.000
you can use the hook to push the password on active directory.

24:53.000 --> 25:00.000
But, if you only have active directory, you can, for the moment, not use it.

25:00.000 --> 25:04.000
But, it will be the case maybe next year.

25:04.000 --> 25:05.000
Maybe next year.

25:05.000 --> 25:06.000
Yes?

25:06.000 --> 25:14.000
Do you support private ACME servers for the certificates for these web services?

25:14.000 --> 25:17.000
Sorry, private, what?

25:17.000 --> 25:18.000
ACME.

25:18.000 --> 25:19.000
ACME.

25:19.000 --> 25:24.000
Let's encrypt.

25:24.000 --> 25:28.000
Do we support ACME or let's encrypt?

25:28.000 --> 25:35.000
Of course, yes, because you just have to run it in the container, yes?

25:35.000 --> 25:42.000
How do you handle applications which cannot use OpenID or Sample?

25:42.000 --> 25:43.000
Okay.

25:43.000 --> 25:49.000
And, where do you use the host headers and authentication?

25:49.000 --> 25:55.000
Yeah, so how we manage applications that are not modern applications

25:55.000 --> 26:00.000
which use either Sample or either OpenID Connect to do single sign-in.

26:00.000 --> 26:05.000
Lemana Lab is also compatible with the CAS protocol.

26:05.000 --> 26:12.000
So, we can also use CAS, but in the cloud, we say that CAS is not secure enough to do the cloud.

26:12.000 --> 26:17.000
And, of course, we can have a component in Lemana Lab.

26:17.000 --> 26:24.000
We have a component called the Angular, which is an agent that you can install remotely on your infrastructure system

26:24.000 --> 26:29.000
and can communicate through REST with the portal in the cloud.

26:29.000 --> 26:34.000
So, you can secure it, some local application with an agent on your side

26:34.000 --> 26:40.000
and let the agent deals with the session, et cetera, through REST API in Lemana Lab.

26:40.000 --> 26:47.000
So, we can do a mixed mode between the cloud and your local applications.

26:47.000 --> 26:48.000
It's over?

26:48.000 --> 26:49.000
Last question.

26:49.000 --> 26:52.000
Last question, a very good question, so.

26:52.000 --> 26:56.000
Can we authenticate users using certificates, personal certificates?

26:56.000 --> 26:59.000
Yes, you can use.

26:59.000 --> 27:03.000
The question is, can we authenticate users with certificates?

27:03.000 --> 27:08.000
Yes, Lemana LAPNG can use certificates, Kiberos.

27:08.000 --> 27:14.000
We are compatible with second factor authentication, WebOTAN, et cetera.

27:14.000 --> 27:16.000
So, we have a lot of methods.

27:16.000 --> 27:19.000
It's like K-Club, but it's French.

27:22.000 --> 27:23.000
Time's up.

27:23.000 --> 27:24.000
Okay, thank you.

27:26.000 --> 27:27.000
Thank you.

