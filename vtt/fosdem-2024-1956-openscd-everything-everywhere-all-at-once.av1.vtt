WEBVTT

00:00.000 --> 00:07.600
So, yes, you can hear me.

00:07.600 --> 00:09.400
Hello, everybody.

00:09.400 --> 00:15.480
And welcome to my talk, OpenSCD, everything, everywhere, all at once.

00:15.480 --> 00:17.160
So my name is Tamar Schuss.

00:17.160 --> 00:22.080
I'm a software engineer and the lead of the domain development at Sprint 1.

00:22.080 --> 00:27.400
We are a software company in Stuttgart in the southwest Germany.

00:27.400 --> 00:31.120
And I would like to talk about...

00:31.120 --> 00:33.120
Hello, hello.

00:33.120 --> 00:34.120
Yes.

00:34.120 --> 00:35.120
Okay.

00:35.120 --> 00:38.640
First of all, what is OpenSCD?

00:38.640 --> 00:43.720
Just to give you context, a brief introduction to the history, how it came to be, and where

00:43.720 --> 00:45.760
is it today.

00:45.760 --> 00:50.200
Then what I would like to do, the goal is the talk, is that I would like to talk about

00:50.200 --> 00:55.720
the challenges we have as a community and which approach we took and which approach

00:55.720 --> 00:57.120
we are thinking about.

00:57.120 --> 01:02.120
So I'm just going to talk about the technical approaches today.

01:02.120 --> 01:04.320
So let's start.

01:04.320 --> 01:05.720
What is OpenSCD?

01:05.720 --> 01:08.560
It's an open substation communication designer.

01:08.560 --> 01:12.720
We're going to get into it later, what that really means.

01:12.720 --> 01:15.440
And it's also an IEC 61-850 tool.

01:15.440 --> 01:19.800
I don't know if everybody knows it, but I'm going to explain in a few sentences what it

01:19.800 --> 01:21.600
is.

01:21.600 --> 01:24.080
It's a progressive web app.

01:24.080 --> 01:28.280
So it's browser-based, and it's also a platform.

01:28.280 --> 01:32.440
So we think about it as a platform rather than an app.

01:32.440 --> 01:34.280
Okay.

01:34.280 --> 01:39.520
So just again for a quick context, probably everybody knows for the...

01:39.520 --> 01:42.960
Or for later, for the recording.

01:42.960 --> 01:47.440
This is a substation, an electrical substation, and it converts high voltage to low voltage

01:47.440 --> 01:49.720
and vice versa.

01:49.720 --> 01:55.920
And IEDs, so intelligent electronic devices, monitor and control the substation, so everything

01:55.920 --> 01:58.720
works as it should be.

01:58.720 --> 02:00.240
And the...

02:00.240 --> 02:08.480
Before I mentioned IEC 61-850 is a communication standard that describes or specifies how these

02:08.480 --> 02:16.360
devices should communicate or how you should design a communication between these devices.

02:16.360 --> 02:25.920
So OpenSD does something with this, and how it came to be is that at Omicron, one of our

02:25.920 --> 02:30.880
good friend Jacob Fogelsang created a Java app first because he wanted to help with the

02:30.880 --> 02:37.880
colleagues and his team to create multi-vendor projects because every vendor had its own

02:37.880 --> 02:42.480
tool and they interpreted everything a bit differently about the standard.

02:42.480 --> 02:45.080
So they try to...

02:45.080 --> 02:51.400
Our Jacob tried to create something where you can agree on a software level, so not just

02:51.400 --> 02:55.880
a specification but also agree on the implementation.

02:55.880 --> 03:01.840
Later on, Christian and Dinka joined the team and they restarted the project as a progressive

03:01.840 --> 03:09.040
web app because they saw just how hard it would have been to deploy and to just distribute

03:09.040 --> 03:10.960
a Java app to everybody.

03:10.960 --> 03:15.600
So they see the web platform as a nice way to distribute the software.

03:15.600 --> 03:18.320
Then the project started to grow.

03:18.320 --> 03:26.480
Alieander RTE joined Transpower from New Zealand and TransNet BW also from South West Germany

03:26.480 --> 03:33.400
and we joined with them and we had to create a few plugins for them.

03:33.400 --> 03:40.160
And now I'd like to think that we are at the scaling phase.

03:40.160 --> 03:45.600
Just last year, a colleague from Alieander, Pascal Wilbrank and I took over the maintenance

03:45.600 --> 03:51.840
of OpenSCD and just last week we have been accepted to LF Energy.

03:51.840 --> 03:57.760
So we are very happy about it and we are looking for the onboarding process and get to know

03:57.760 --> 04:00.160
all the other projects too.

04:00.160 --> 04:06.320
So these scaling of course are the scaling problems I think everybody has.

04:06.320 --> 04:14.280
So we have more interest in usage and more usage and more interest in the project and

04:14.280 --> 04:17.280
we face a few challenges.

04:17.280 --> 04:21.120
First to get back to the title, so everything.

04:21.120 --> 04:27.440
What we see is if a tool doesn't really provide all the tooling to design substations, then

04:27.440 --> 04:31.000
people are going to just use under ones.

04:31.000 --> 04:39.120
And we are right back there where we were at the beginning, that the tool is differently

04:39.120 --> 04:44.560
maybe interpreted as specification and then these designs, so these files are not going

04:44.560 --> 04:49.560
to be as much exchangeable as we would like to have.

04:49.560 --> 04:57.240
So what we see is that in order to be successful, we need to provide all the tooling, all the

04:57.240 --> 04:59.360
features that the users need.

04:59.360 --> 05:05.720
The problem with that is also that we have to provide it everywhere, otherwise a standard

05:05.720 --> 05:06.800
couldn't really work.

05:06.800 --> 05:13.360
It's already too bad that this high EC standard is not accessible for everybody for free,

05:13.360 --> 05:17.760
but even if the software that uses it isn't accessible to everybody, then it's never

05:17.760 --> 05:18.760
going to work.

05:18.760 --> 05:22.440
So at least we are trying to change that what we can.

05:22.440 --> 05:29.320
So we would like to really make it available for everybody.

05:29.320 --> 05:35.880
So all at once means, as you may know, in a multi-stakeholder project where everybody

05:35.880 --> 05:43.680
has its own deadlines, roadmaps and timelines, everybody tries to basically prioritize their

05:43.680 --> 05:48.080
own needs over the others because it makes sense.

05:48.080 --> 05:54.960
So this is also what we are facing with all the TSOs that everybody just has a different

05:54.960 --> 05:57.200
need.

05:57.200 --> 06:05.840
So our approach may be, so not every problem is solvable of course with technical solutions.

06:05.840 --> 06:11.000
We try to do, we try everything out, but today I would like to talk about just the technical

06:11.000 --> 06:15.760
ones because otherwise we would be here wrong.

06:15.760 --> 06:19.320
One is Web standard, it's really important to use them.

06:19.320 --> 06:28.080
We depend on them for the flexibility and performance and of course the long-term maintainability.

06:28.080 --> 06:30.200
Then the plugins, we have a plugin system.

06:30.200 --> 06:34.880
I'll get into these topics deeper in a bit.

06:34.880 --> 06:40.640
The plugin system just helps you customize for every use case you would like.

06:40.640 --> 06:45.920
And also the distribution, it's just one step further that you can have your own version

06:45.920 --> 06:49.920
from the whole system.

06:49.920 --> 06:53.680
So Web standards, how does it help us?

06:53.680 --> 06:56.280
So as I mentioned, it's a progressive web app.

06:56.280 --> 07:03.960
OpenSD is browser-based and what we need also is an offline usage capability because not

07:03.960 --> 07:11.200
every engineer has internet connection at sites or they would like to browser or design

07:11.200 --> 07:13.240
the digital substations on the go.

07:13.240 --> 07:15.880
So this is a really big point for us.

07:15.880 --> 07:20.600
And also that again as mentioned, installing an app, it's not really possible.

07:20.600 --> 07:25.720
It begins the prices and TSOs because the IT just doesn't like to install apps.

07:25.720 --> 07:30.480
So providing it in the browser, it's a nice way if you have internet connection to have

07:30.480 --> 07:31.480
it.

07:31.480 --> 07:36.720
Because it's a progressive web app, you have to visit it once and then you have it and

07:36.720 --> 07:39.720
you can use it at any time.

07:39.720 --> 07:43.600
The next one is custom elements as a web standard.

07:43.600 --> 07:47.840
So we use it for the plugin system and for a few other things.

07:47.840 --> 07:49.560
Why is it important for us?

07:49.560 --> 07:56.440
Because again it's a standard and if you can compile to custom elements or web custom elements,

07:56.440 --> 07:59.960
then we are fine, then you can create your own plugins.

08:00.320 --> 08:05.880
That leads to technology independence because we don't really mind what you are using.

08:05.880 --> 08:14.600
For example, OpenSCD is mainly lit JS based but we have for example, Swed plugins at Sprint

08:14.600 --> 08:20.480
I and so we created for Transnet BW, Swed based plugins and we just compiled it to custom

08:20.480 --> 08:23.320
elements and everything works fine.

08:23.320 --> 08:29.840
So this is also really nice to broaden our perspective and broaden our, let's say the

08:29.840 --> 08:34.640
developer team because no one company or the companies doesn't have to stick to one

08:34.640 --> 08:35.640
technology.

08:35.640 --> 08:39.640
Every company can pick their own or what they are best of it or what they have knowledge

08:39.640 --> 08:41.960
of and they can just use it.

08:41.960 --> 08:47.640
I'm going to show in a bit also how easy it is.

08:47.640 --> 08:50.040
So let's dive into the plugin system.

08:50.040 --> 08:55.680
This is OpenSCD and almost everything is a plugin.

08:55.680 --> 09:03.640
The menu points for example are all plugins and as is the example, the Open project opens

09:03.640 --> 09:08.960
by default, it opens a file locally from your PC.

09:08.960 --> 09:13.960
But for example, in our let's say sister project in Compass, it's also an LF Energy

09:13.960 --> 09:22.400
project, they re-implemented it and they have re-implemented the Open project plugin so

09:22.400 --> 09:25.400
that it opens files from the server.

09:25.400 --> 09:28.240
You can do this with everything else.

09:28.240 --> 09:32.280
So of course saving makes sense too.

09:32.280 --> 09:34.320
Then the next one is the editor plugin.

09:34.320 --> 09:38.880
So this is basically the main content that you see in the middle and also in the tab

09:38.880 --> 09:42.200
bar on the top where you can switch between the plugins.

09:42.200 --> 09:48.760
And the editor plugins are the plugins that can really manage the...

09:48.760 --> 09:50.240
Yes?

09:50.240 --> 09:52.360
Oh yeah.

09:52.360 --> 09:53.360
Yeah.

09:53.360 --> 09:54.360
Thanks.

09:54.360 --> 09:59.120
So editor plugins can really manage and modify the design.

09:59.120 --> 10:03.360
And what you don't see is the good thing, it's a validator plugins.

10:03.360 --> 10:12.040
We have by default the standard XML validators for the standard but you can of course, everywhere

10:12.040 --> 10:17.080
if you want, you can create validators that check for some semantic meaning.

10:17.080 --> 10:21.400
That means if you have for example a naming convention at the company, you can create

10:21.400 --> 10:29.320
a validator for it and then it's going to tell you if a naming of a device is not correct.

10:29.320 --> 10:32.040
Right.

10:32.040 --> 10:36.120
So how can you create plugins?

10:36.120 --> 10:38.400
It's really simple I think.

10:38.400 --> 10:40.880
It's just an unregistered custom element.

10:40.880 --> 10:47.280
So that means, if you can see it hopefully, it's just the standard way of creating custom

10:47.280 --> 10:48.280
balance.

10:48.280 --> 10:49.280
That's everything we need.

10:49.280 --> 10:56.160
We don't really need anything much because this we can load and use.

10:56.160 --> 11:00.720
And basically in this function, you can see almost everything we need.

11:00.720 --> 11:03.760
At the top highlighted, you can see this is a...

11:03.760 --> 11:09.000
Okay, maybe it's too small but in the top, we create a custom plugin tag.

11:09.000 --> 11:13.360
So a custom HTML tag name for every plugin.

11:13.360 --> 11:17.280
This is just to make sure that no plugin are collide.

11:17.280 --> 11:19.680
And we do this by hashing just the source.

11:19.680 --> 11:25.040
So you can have as many instances of your plugin as you want if it's necessary, just

11:25.040 --> 11:29.080
only the source or the source URL has to be different.

11:29.080 --> 11:36.240
In the next step, we just load the custom element, the JavaScript file and define the

11:36.240 --> 11:40.720
custom element with already generated tag name.

11:40.720 --> 11:46.440
And then render the tag, render the element, put in the HTML and the DOM and give it a

11:46.440 --> 11:51.280
few props, a few attributes so it has something to do.

11:51.280 --> 11:54.280
And the result is going to look something like this.

11:54.280 --> 12:01.320
Where you have open SCD and inside it, we have this plugin with random or a hashed generated

12:01.320 --> 12:06.840
HTML tag.

12:06.840 --> 12:11.320
So this is again an other example.

12:11.320 --> 12:15.040
But this is one of the plugins we created on the left.

12:15.040 --> 12:22.080
It's just a small weld component that wraps around another component.

12:22.080 --> 12:29.120
And on the left, we have this relatively small wrapper custom element that the main thing

12:29.120 --> 12:35.400
it does is here just basically deploys or starts this weld component.

12:35.400 --> 12:39.960
And why is it pretty good for this use case because it doesn't really have a runtime.

12:39.960 --> 12:46.000
So even if you have sub-weld, so to say, in every plugin, you are not going to have

12:46.000 --> 12:52.360
anything too big because it just really compiles down to basic JavaScript.

12:52.360 --> 12:57.240
In case it would be also possible something similar with React because React also bootstrap

12:57.240 --> 12:59.200
similar like this.

12:59.200 --> 13:03.200
And the only thing is that then with every plugin you would load React.

13:03.200 --> 13:10.160
Actually as the whole library with it, which sounds like a problem, but to be honest, once

13:10.160 --> 13:17.000
you load it, the plugin then it is cached and you're not going to load it every time.

13:17.000 --> 13:25.920
So even it would be good with React.

13:25.920 --> 13:35.680
So the last thing I think, the distributions, what's one of our solutions we are trying

13:35.680 --> 13:41.360
out currently is for example, it's what already working is that you can already deploy Open

13:41.360 --> 13:42.360
SID.

13:42.360 --> 13:47.200
So you can just take as it is today and deploy it on your own infrastructure.

13:47.200 --> 13:48.480
It is just a web app.

13:48.480 --> 13:51.440
So it's pretty easy.

13:51.440 --> 13:53.680
And it's yours.

13:53.680 --> 13:55.280
The other one is Eddence.

13:55.280 --> 14:01.520
We are currently working on to provide building blocks so you don't have to use everything.

14:01.520 --> 14:03.400
You can use just some of it.

14:03.400 --> 14:07.760
And it's easier to recreate and modify.

14:07.760 --> 14:13.120
For example, the plugin system, there is a history system where you can undo and redo

14:13.120 --> 14:16.760
your actions and also saving the project and editing.

14:16.760 --> 14:22.320
So these everything you could replace yourself and make it like for example that the editing

14:22.320 --> 14:27.040
doesn't happen in the browser but it gets sent to the servers, to the backend and then

14:27.040 --> 14:29.400
everything happens there.

14:29.400 --> 14:34.120
So this is what we are working on to increase again the flexibility.

14:34.120 --> 14:41.680
So again for the Compass project it's necessary to create new Eddence or a new, right now

14:41.680 --> 14:47.600
they are, they use a fork of Open SID but it's not the best solution so we would like

14:47.600 --> 14:55.680
to provide rather building blocks where you can put together your own platform.

14:55.680 --> 14:59.800
And what we saw is creating your own plugins.

14:59.800 --> 15:06.360
You can do it today at any time and the nice thing is that you can load the plugins from

15:06.360 --> 15:13.400
your local PC so you can have your PC and nobody can access to it but of course it's

15:13.400 --> 15:20.120
not the nicest thing to do so you can deploy it anywhere and you can install it in every

15:20.120 --> 15:21.320
distribution.

15:21.320 --> 15:27.400
So we already have a few distributions and we already have few plugins that we use everywhere

15:27.400 --> 15:31.640
even and it's not developed from the same teams.

15:31.640 --> 15:37.240
So it's always a nice way to use the work of others.

15:37.240 --> 15:42.520
Yes, so I was a bit quicker than I thought.

15:42.520 --> 15:46.520
Maybe we have a few questions but if you want to get in contact we have of course the Open

15:46.520 --> 15:49.200
SID organization at GitHub.

15:49.200 --> 15:51.960
We are on the Elephant Energy selection.

15:51.960 --> 15:58.560
We have a website and you can try out Open SID at opensid.github.io.

15:58.560 --> 16:05.720
Thank you.

16:05.720 --> 16:13.880
Is there a question in the room?

16:13.880 --> 16:18.720
The United States we have plenty of time, we have 10 minutes so if you want to ask a

16:18.720 --> 16:25.200
question of course to Tamas but to other speakers are still in the room feel free to ask for

16:25.200 --> 16:27.680
an energy question here.

16:27.680 --> 16:34.600
But of course priority to Open SID.

16:34.600 --> 16:39.680
It's post break, that's why.

16:39.680 --> 16:40.680
Let's break.

16:40.680 --> 16:42.680
Everyone's a bit tired.

16:42.680 --> 16:44.680
We can understand perfectly.

16:44.680 --> 16:47.280
We can ask questions to the audience.

16:47.280 --> 16:48.680
Oh, that's nice.

16:48.680 --> 16:50.680
Let's jump.

16:50.680 --> 16:53.440
Okay, IAC 61A50 right?

16:53.440 --> 16:54.600
You said that.

16:54.600 --> 16:59.200
Does it, apart from explaining, does everybody have any experience with that?

16:59.200 --> 17:01.480
Is that something you know of or not?

17:01.480 --> 17:03.480
Raise your hand.

17:04.480 --> 17:05.480
Okay.

17:05.480 --> 17:09.480
So who works in energy industry?

17:09.480 --> 17:13.480
Okay, about half I guess.

17:13.480 --> 17:15.480
Are you doing something with energy at home?

17:15.480 --> 17:17.480
Home automation maybe?

17:17.480 --> 17:19.480
Okay, yes of course you said.

17:19.480 --> 17:21.480
Okay, yeah.

17:21.480 --> 17:24.480
What if we teach energy that comes where?

17:24.480 --> 17:26.480
It's not industry.

17:26.480 --> 17:27.480
Yeah?

17:27.480 --> 17:28.480
My teaching.

17:28.480 --> 17:29.480
Teaching, teaching.

17:29.480 --> 17:30.480
Oh, education.

17:30.480 --> 17:31.480
Education.

17:31.480 --> 17:35.480
Higher education, primary schools, I don't know.

17:35.480 --> 17:36.480
Yeah, so much things.

17:36.480 --> 17:42.480
We had the own tech of course also.

17:42.480 --> 17:45.480
Has anybody thought of a question now?

17:45.480 --> 17:47.480
Ah, there's a question.

17:47.480 --> 17:48.480
Great.

17:48.480 --> 17:50.480
You're a hero.

17:55.480 --> 17:57.480
I think it's a follow on from your comments.

17:57.480 --> 18:00.480
I'm coming from a telecoms industry.

18:00.480 --> 18:02.480
I think I see a similar problem.

18:02.480 --> 18:04.480
The community is not big enough.

18:04.480 --> 18:10.480
The energy community is not big enough to sustain these types of projects.

18:10.480 --> 18:12.480
I think telecoms industry sees the same.

18:12.480 --> 18:18.480
So is there a way that the projects can be widened to get that their scope is even bigger

18:18.480 --> 18:23.480
so there's a much bigger chance of getting a more sustainable community?

18:31.480 --> 18:33.480
Do you have an opinion on that?

18:33.480 --> 18:34.480
Yeah.

18:34.480 --> 18:35.480
For sure.

18:35.480 --> 18:43.480
So as I mentioned in the beginning, so like it's what we try to do is what I talked about

18:43.480 --> 18:44.480
today is a technical approach.

18:44.480 --> 18:48.480
One was that basically having a desktop app is not going to cut it.

18:48.480 --> 18:53.480
So you need some new solution like the web platform where you can really distribute your

18:53.480 --> 18:55.480
software to everywhere.

18:55.480 --> 19:02.480
And also LF Energy and Alian there already does a great job with supporting the open source

19:02.480 --> 19:04.480
communities and using their project.

19:04.480 --> 19:06.480
It's already really big.

19:06.480 --> 19:13.480
How else you can, I think it's really hard to get amateurs so to say or hobbies I would say to the

19:13.480 --> 19:20.480
projects because the features we develop is not for a week and not for a week.

19:20.480 --> 19:23.480
The results are really long term.

19:23.480 --> 19:28.480
So until we really reach it, it could be years even in the energy industry and in the telecommunication

19:28.480 --> 19:30.480
I think it's similar.

19:30.480 --> 19:37.480
So the technology, how the technology moves in these industries is quite slow so to say or slower

19:37.480 --> 19:40.480
and maybe interesting.

19:40.480 --> 19:48.480
So how you can maintain such a communities I think you have to get through the chasm.

19:48.480 --> 19:58.480
If enough people get to use the project, for example, I think we are either there just before the chasm

19:58.480 --> 20:03.480
because Alian there uses it, Erty uses it and TrustNet BW uses it.

20:03.480 --> 20:09.480
If you can get a few other TSOs on board, then probably we're going to get over the chasm and the

20:09.480 --> 20:15.480
rest of the TSO is going to see this is a nice project and they want to maybe get involved too.

20:15.480 --> 20:20.480
So that's one thing how you can maybe grow the project and how to maintain the project is of course

20:20.480 --> 20:23.480
through foundations and through the companies.

20:23.480 --> 20:29.480
I don't see indeed this industry because it's so specialized and because of the closed source or the closed nature

20:29.480 --> 20:33.480
of this standard doesn't make it easier.

20:33.480 --> 20:39.480
I'm Dan Brown from Linux Foundation Energy and you're exactly right.

20:39.480 --> 20:43.480
There are so many parallels between networking and energy.

20:43.480 --> 20:51.480
I would say networking in telecom is like ten years ahead actually of where energy is right now, believe it or not.

20:51.480 --> 20:58.480
Where things, you know, ten years ago nothing was software defined and that sort of thing in the telecom space

20:58.480 --> 21:00.480
and now it largely is.

21:00.480 --> 21:03.480
So we need to go through exactly that same transition.

21:03.480 --> 21:09.480
I'm not saying telecom is perfect by any means and there definitely are not enough people in energy.

21:09.480 --> 21:16.480
So it's a matter of getting all of these traditional old school suppliers on board as well, the vendors who have been

21:16.480 --> 21:24.480
selling proprietary black box systems to the energy industry to utilities for years.

21:24.480 --> 21:31.480
They need to basically stop doing that and come to it with an open source approach and so they need to bring in the resources

21:31.480 --> 21:37.480
but we also need universities, we need researchers, we need government, we need the utilities themselves.

21:38.480 --> 21:45.480
So it's really a matter of community building and scaling and it's, you know, not an easy task by any means

21:45.480 --> 21:54.480
but that's why we're here in hopes that some of you who may not currently be, you may be developers in other vertical markets

21:54.480 --> 22:01.480
or in horizontal industries, horizontal technology areas who may find this interesting and be inspired

22:01.480 --> 22:07.480
and be inspired to, you know, come and join and start contributing to these sorts of projects.

22:07.480 --> 22:15.480
There's not, you know, an easy solution unfortunately but we're just doing everything that we can to keep building capacity.

22:15.480 --> 22:34.480
How the IAC61-850 market share, in terms of number of items, what part of the market of the substation does it represent?

22:35.480 --> 22:45.480
Meaning on one red electronic site that's deployed, how many are compatible with this protocol?

22:45.480 --> 22:51.480
So I'm not the best person to answer it, I'm not an electrical engineer, right? I'm not sure.

22:51.480 --> 22:59.480
So far what I get is that they are capable of it, so the IEDs, the Intelligent Electronic Devices are capable of it.

23:00.480 --> 23:05.480
I'm pretty sure, at least in you, so I haven't heard that they wouldn't be, so yes.

23:12.480 --> 23:14.480
Any other questions?

23:16.480 --> 23:19.480
Maybe to complete what you asked about.

23:19.480 --> 23:27.480
I think that the two last days some of us were in the Policy Summit for a European Commission.

23:27.480 --> 23:43.480
It was organized by the European Commission and we thought that it's very important to make a big announcement on energy and open source opportunity

23:43.480 --> 23:51.480
because we all rely, our future relies on energy, of course, our business, everything is relying on the energy.

23:52.480 --> 24:02.480
So if we can have fundings and if we organize through foundation to coordinate the effort and not to make efforts there and there and there,

24:02.480 --> 24:09.480
I think we will find a great path to have more and more contributors. Yes, you have a question.

24:10.480 --> 24:12.480
Can you please give the mic?

24:19.480 --> 24:24.480
I just want to compliment, sorry if I stopped abruptly, I'm sorry.

24:25.480 --> 24:34.480
I think that there's a very, in my experience, in my research in software-defined paratronics is that

24:36.480 --> 24:42.480
software-defined energy is much harder to achieve than software-defined data and signal

24:42.480 --> 24:47.480
because of the fact that there's a lot of current, there's a lot of power, there's a lot of issues with that

24:48.480 --> 24:54.480
and different use cases require different types of converters and all that.

24:54.480 --> 25:04.480
So there is, for me, one of the hurdles that we have as a community is that we need more open hardware as well.

25:04.480 --> 25:10.480
I mean, let's try to do some, you know, no code with no computer. It's not possible.

25:11.480 --> 25:14.480
We need to, if we want to do software, we need a computer.

25:14.480 --> 25:17.480
And if you want to do power, you need a power converter.

25:17.480 --> 25:23.480
It kind of goes with the, we abstract the hardware because eventually we want to, but there is a lack of hardware

25:23.480 --> 25:28.480
and I think that's a big frame, that's a very big break on the process

25:28.480 --> 25:34.480
because hardware is not only hard but it's difficult to abstract as well.

25:34.480 --> 25:36.480
We're going to get there.

25:40.480 --> 25:42.480
Thank you.

