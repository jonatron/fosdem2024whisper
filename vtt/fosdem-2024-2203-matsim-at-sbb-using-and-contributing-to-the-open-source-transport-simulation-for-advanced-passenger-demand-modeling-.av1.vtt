WEBVTT

00:00.000 --> 00:07.000
Thank you, Peter.

00:07.000 --> 00:13.000
Yeah. So today I want to talk a little bit about Matzim.

00:13.000 --> 00:19.200
Matzim is a transport simulation software that is being used at SBB, the Swiss Federal

00:19.200 --> 00:27.480
Airways, but it is actually an open source tool that has been around for quite some time.

00:27.480 --> 00:33.160
So obviously there is also a little bit talk about Matzim itself and the software and what

00:33.160 --> 00:39.480
it does and how you could use it if you are ever interested in that.

00:39.480 --> 00:45.640
That's on the agenda, so I'll briefly explain what Matzim does and why we find that useful

00:45.640 --> 00:48.480
at SBB.

00:48.480 --> 00:56.240
And we also contribute actively into the Matzim code and I'll give some examples of that.

00:56.240 --> 01:03.160
And yeah, since you might wonder why on earth are you even bothering, I'll give you some

01:03.160 --> 01:08.800
examples of our work with the software.

01:08.800 --> 01:13.960
So what is Matzim and why is it useful?

01:13.960 --> 01:18.920
If you have that elevator speech moment where you have to explain your work to your CEO

01:18.920 --> 01:26.440
and then they ask you what you're doing, then I tend to say I'm playing SimCity, but

01:26.440 --> 01:31.240
with complex econometric data behind it, so you have all these weird formulas somewhere

01:31.240 --> 01:33.160
in there.

01:33.160 --> 01:40.040
Then the elevator area is over and I have more or less explained what I'm doing and

01:40.040 --> 01:44.600
then the CEO knows that we have some guy playing SimCity all day.

01:45.600 --> 01:50.440
Well, there's a bit more behind it, but in brief that's what you're doing.

01:50.440 --> 01:57.520
So we are simulating transport and we simulate people's behavior using transport during the

01:57.520 --> 02:00.480
day.

02:00.480 --> 02:06.320
Matzim stands for Multi-Agent Transport Simulation and it has been around for roughly 20 years.

02:06.320 --> 02:13.640
It started as a purely academic project between ETH Zurich and TU Berlin.

02:13.680 --> 02:21.200
On a side note, that also explains why a Berlin guy is now living in Switzerland.

02:21.200 --> 02:30.560
So you can kind of imagine my background, but it has evolved over the years and there

02:30.560 --> 02:36.120
are many models around the world and quite a few of them are actually fully built on

02:36.120 --> 02:43.520
open data and are publicly available, not ours for some reasons, but for example there's

02:43.560 --> 02:48.720
quite a scenario about Berlin that you can download and you can see the data where it

02:48.720 --> 02:54.760
comes from and you can start playing with the model.

02:54.760 --> 02:59.560
Whether this is useful for anyone, I can't say, but I guess I think it's useful for some,

02:59.560 --> 03:04.320
even mostly PhD students to be fair.

03:04.320 --> 03:08.440
There are commercial users around the globe as well.

03:09.240 --> 03:17.760
Among us, the SBB, there's Volkswagen who have quite a strong development, also into

03:17.760 --> 03:25.520
the Matzim core, but they're not as open to talk about that as we are probably.

03:25.520 --> 03:32.480
Then there are models in Melbourne, there's one at the Berlin Transit Agency, so it has

03:32.480 --> 03:34.960
some standing right there.

03:35.000 --> 03:42.200
There's a book, there's code, there's a license and for the last couple of weeks there's also

03:42.200 --> 03:46.600
an association that kind of brings the whole thing together.

03:49.240 --> 03:52.040
Now, how does it work?

03:52.040 --> 03:55.080
So imagine you have a lot of data.

03:55.080 --> 04:03.760
You have census data, for example, you register data, you know where people live in a city

04:03.760 --> 04:08.280
or you just make that up, you replace people somewhere.

04:08.280 --> 04:13.040
You have econometric data that is value of times.

04:13.040 --> 04:17.360
You know what a person's intention is.

04:17.360 --> 04:21.720
If they travel by train, then the value of time is maybe six euros per hour and if they

04:21.720 --> 04:27.480
go by car, then it's maybe 10 euros per hour or the other way around.

04:27.480 --> 04:33.000
You have a road network that can come, for example, from OpenStreetMap, that is a very

04:33.040 --> 04:34.040
typical use case.

04:34.040 --> 04:41.800
You have a timetable for public transport, typically GTFS.

04:41.800 --> 04:47.040
You have count data.

04:47.040 --> 04:51.840
Many of the topics discussed in the previous talks are actually input data for us and that

04:51.840 --> 04:54.360
is a lot of input data.

04:54.360 --> 05:03.840
What we do then is we add some generic algorithms that basically randomly decide to tell people

05:03.840 --> 05:10.120
during the day, change your route, change your transport mode when you go from one activity

05:10.120 --> 05:17.800
to another or change your departure time choice and then we let that run the same day.

05:17.800 --> 05:24.480
It's a bit like Groundhog Day, 200 times, 500 times and mix people up and let them try

05:24.480 --> 05:27.600
out new things.

05:27.600 --> 05:36.280
This is what we call the Matsum loop that is also somewhere on my T-shirt.

05:36.280 --> 05:41.160
What comes out of it is actually output data, even more of it.

05:41.160 --> 05:43.360
You have individual daily plans.

05:43.400 --> 05:48.560
You know what your synthetic population is doing during the day, where they go shopping,

05:48.560 --> 05:50.680
what transport modes they use.

05:50.680 --> 05:56.320
You have mode choice for each strip, whether people tend to take car to get from A to B

05:56.320 --> 06:01.360
or public transport, depending on what's the offer.

06:01.360 --> 06:10.400
You have time-sharp traffic loads, so a lot of data to analyze and do your policy planning.

06:10.440 --> 06:15.760
You have distances, you have all kind of aggregate data that you can then use and play with.

06:15.760 --> 06:22.840
Obviously, this calibration process for a model that it really depicts the real world

06:22.840 --> 06:35.200
in an initial stage is kind of what's the long story behind model building.

06:35.200 --> 06:37.240
What can you use the whole thing for?

06:37.240 --> 06:42.920
Of course, transport policy evaluation, what happens if there's a new road, what happens

06:42.920 --> 06:48.280
if there's a new railway line, what happens if there's a new price.

06:48.280 --> 06:52.360
You can do a person specific.

06:52.360 --> 06:58.560
You know who's affected by transport policy because you have this agent-based paradigm

06:58.560 --> 07:00.480
behind it.

07:00.480 --> 07:05.280
You can also calculate, for example, accessibility.

07:05.280 --> 07:11.800
A lot of things are actually happening where MADSIM is being used when it comes to on-demand

07:11.800 --> 07:13.560
transport modes.

07:13.560 --> 07:18.600
You can really do your fleet scheduling, your fleet planning.

07:18.600 --> 07:24.640
You can say, okay, what happens if we have a lot of automated vehicles that replace passenger

07:24.640 --> 07:28.880
cars and what's the advantage of that?

07:28.880 --> 07:39.120
All these kind of future scenarios you can use MADSIM for, well, basically playing SimCity.

07:39.120 --> 07:47.120
The MADSIM project has been around for almost 20 years and historically it has been administered

07:47.120 --> 07:54.480
by the universities, so ETH Zurich and Tew Berlin.

07:55.480 --> 08:01.320
Professor's grow older and at one point they retire and the person that comes next is maybe

08:01.320 --> 08:08.320
not as interested in such transportation simulation anymore.

08:08.320 --> 08:14.680
Since last year, the whole MADSIM project is built on an association level, so that

08:14.680 --> 08:21.960
there's also some funding from other users to maintain build servers and all that stuff.

08:21.960 --> 08:31.840
The association also organizes things like the user meeting that is held annually or keeps

08:31.840 --> 08:40.440
track of all kind of developments, publish a newsletter, all these kind of stuff.

08:40.440 --> 08:48.480
Now at the Swiss Federal Railways, how did we start with that?

08:48.480 --> 08:53.120
It's a very brief timeline on one slide, but I think it's kind of interesting.

08:53.120 --> 09:00.960
In 2016, our CEO saw a presentation about MADSIM and decided we need this at SBB, please

09:00.960 --> 09:02.960
buy MADSIM.

09:02.960 --> 09:09.120
Well, as it happens with open source software models and open source software at all, buying

09:09.120 --> 09:15.280
the whole thing wasn't as easy and the whole procurement process didn't quite work out,

09:15.280 --> 09:22.240
so the task was delegated to the department that deals with classical transport models,

09:22.240 --> 09:28.160
so it's actually part of somewhere in the passenger division, this is also where I'm

09:28.160 --> 09:30.560
working.

09:30.560 --> 09:34.960
It came up with some challenges, for example you needed someone who knows programming Java

09:34.960 --> 09:40.240
and those people didn't exist in that department, but things that can be overcome and you need

09:40.240 --> 09:48.920
like proper computers actually because if you want to run proper big models then having

09:48.920 --> 09:51.280
a nice tiny laptop isn't sufficient.

09:51.280 --> 09:59.440
That was also something to overcome, also thanks to the IT at Peter's department in

09:59.440 --> 10:00.440
the end.

10:00.440 --> 10:02.400
At least we didn't kill it.

10:02.400 --> 10:06.640
At least they didn't.

10:06.640 --> 10:16.280
Yeah, but the whole thing, building a model for Switzerland in MADSIM took three years

10:16.280 --> 10:24.440
and ran from 2017 to 2020 and along the way we noticed that there are several additions

10:24.440 --> 10:29.920
into the code base that need to be made to make this a useful project for us and then

10:29.920 --> 10:35.720
at one point you see okay we need to decide, do we commit this back into the MADSIM core

10:35.720 --> 10:44.120
or do we keep that in our secret chamber and luckily people chose widely and this is

10:44.120 --> 10:52.000
all open source and this was actually a management-backed decision so I'm very happy with that.

10:52.000 --> 10:57.520
So in 2018 the first release of the model that I will present in a moment was released

10:57.520 --> 11:04.080
and since 2020 we have an annual release cycle of a new, of a transport model that is multi-model

11:04.080 --> 11:10.880
and MADSIM based in Switzerland and that can be used for all kind of policy studies.

11:10.880 --> 11:16.640
Our contributions to MADSIM I just want to showcase two.

11:16.640 --> 11:24.920
First of all one that is called oddly the Swiss rail rector so it's an rector based public

11:24.920 --> 11:32.360
transit router that works really fast because if you want to route millions of people within

11:32.360 --> 11:41.280
a reasonable time frame then this is what you need and compared to what we had before

11:41.280 --> 11:51.040
it was like many, many times faster and the whole simulation was actually sped up by factor

11:51.040 --> 12:00.640
three and what is also important to say, the Swiss rail rector is, well it's a Java package

12:00.880 --> 12:05.600
but you don't have to, it's tied to MADSIM, it uses MADSIM data structures but you don't

12:05.600 --> 12:16.200
actually have to use it for MADSIM problems so in a way it's something that can be used

12:16.200 --> 12:20.520
instead of OpenTrip planner but OpenTrip planner has other advantages but if you really need

12:20.520 --> 12:27.360
to route a lot of routes at the same time then it's something to look at.

12:27.360 --> 12:32.960
And then we, yeah now we have a bit of a fancy routing algorithm so it also knows like range

12:32.960 --> 12:40.800
queries, queries and intermodal access and egress and the last point is very, very important

12:40.800 --> 12:47.760
because if you want to model stations you really need to have an idea how many people

12:47.760 --> 12:54.320
arrive by food, how many arrive by bike and so on and that is not an easy question to

12:54.320 --> 12:59.680
answer and apart from the routing problem which is already quite complex it's also a part of the,

12:59.680 --> 13:08.880
you don't have that much empirical data about it so, but it's really one of the most useful

13:08.880 --> 13:16.760
features by now from our model so we're happy to have that and yeah as I said you can use that

13:17.600 --> 13:24.320
kind of independent of the rest of MADSIM so it's well worth checking out.

13:24.320 --> 13:30.440
Then there's another contribution where I was a bit deeply involved, it's basically,

13:30.440 --> 13:36.920
there is a traffic flow simulation in MADSIM that is typically queue based, I didn't go

13:36.920 --> 13:42.520
into detail here because I don't have enough time for that but we replaced this by something

13:42.600 --> 13:49.160
that is just like roughly two times faster for the whole simulation process and it's called

13:49.160 --> 13:57.880
Hermes because well it can fly now but has less plugability so depending on the use case of your

13:57.880 --> 14:06.600
simulation you can use one or the other and they're kind of interoperable and yeah this brings down

14:06.600 --> 14:12.440
simulation run times for Switzerland scenario so both the router and Hermes to something like 24

14:12.520 --> 14:23.640
hours and since these are typically AWS instances it actually saves a lot of money to have models

14:23.640 --> 14:31.880
that run reasonably fast and for calibration process you maybe need 50 of those runs so it's

14:32.200 --> 14:44.920
it's kind of sums up yeah now what we use MADSIM for first of all there's a model called Zimba Mobi

14:44.920 --> 14:54.720
this is where I'm the product owner so I know a lot about it and it literally depicts the everyday

14:54.800 --> 15:01.280
mobility of eight and a half million people in Switzerland so basically the whole population

15:02.560 --> 15:10.560
it includes all major public transport modes so walking cycling taking the bus taking the car

15:12.560 --> 15:18.800
and it has a representation of the transit schedule obviously and also the whole road network

15:19.280 --> 15:28.880
and since it uses MADSIM the whole people's behavior or agents behavior is microscopic

15:30.000 --> 15:39.040
so including first and last mile decisions and hope that video works now

15:39.840 --> 15:47.600
yeah it does so right now imagine it's 8 a.m in Switzerland and you see people

15:48.320 --> 15:54.080
in those blue dots being at home and these light blue dogs people starting their work time

15:54.720 --> 16:02.000
and now we zoom in into a region somewhere in Eurik and see what people do there so to get from

16:02.000 --> 16:07.600
one place to another they need to travel obviously and they could travel by car that then there are

16:07.600 --> 16:12.160
in those little gray boxes or they could take the train or public transport then there are in

16:12.160 --> 16:18.560
those little red boxes and they get from one place to another and obviously you can run your

16:18.560 --> 16:23.360
analysis on that some public transport vehicles are maybe more crowded some are less crowded

16:25.040 --> 16:30.160
and yeah you can sum that up over the day and see what's going on

16:30.480 --> 16:36.880
and now we zoom in again

16:39.440 --> 16:45.840
and what you can do is see who's alighting at certain stations what kind of passenger groups

16:45.840 --> 16:52.000
are they are there do they have a regional subscription do they have a half fare card or

16:52.640 --> 16:59.920
do they have ordinary tickets for example and also on the highway you can see during the day

17:00.480 --> 17:03.840
how many people are currently on their way to work how many people are on their way home

17:05.200 --> 17:11.760
and who's just a truck and who's doing other things and this is all in the model and you can

17:11.760 --> 17:19.520
like analyze a lot of things obviously we are a bit more tied to public transport related analysis so

17:22.960 --> 17:28.720
station access and egress is different at certain points so in Jettikon for example there's more

17:28.720 --> 17:36.320
people arriving by bus to the station than in Aarau or if you have this city in Baden here

17:36.320 --> 17:42.080
then you can see people that reach the stations from nearby typically walk and people that come

17:42.080 --> 17:54.080
from further field further field they take the bus and these kind of analysis is really useful

17:54.800 --> 17:57.040
for example for station design and station planning

18:02.000 --> 18:11.200
and yeah so typically use cases for the model are then also the development of rail lines and

18:12.000 --> 18:18.320
designing of stop locations and time and the effects of timetables so

18:19.280 --> 18:23.600
it's nice that you created a nice timetable but who's going to use it and how many people will

18:23.600 --> 18:31.600
be on the trains this is an answer we can give and we can analyze what's happening around the

18:31.600 --> 18:37.920
stations so that was just the video that I showed and we can also see what's the effect of certain

18:37.920 --> 18:44.160
land use policies for example so we don't only have a model that depicts today but also one for

18:44.160 --> 18:53.520
2030, 2040, 2050 so we kind of know how according to today's assumptions Switzerland is going

18:53.520 --> 19:01.920
to evolve and then we can do policy planning with this yeah and these are kind of future scenarios

19:04.400 --> 19:09.120
yeah and just one example for example over the next 20 years there will be roughly

19:10.160 --> 19:18.240
20 to 30 new railway stations opening up mostly along existing lines and

19:18.720 --> 19:24.960
and very often these stations are being built because there's something happening around them so

19:24.960 --> 19:32.160
there's a new development coming new housing or a new commercial area being built or something like

19:32.160 --> 19:40.080
that and we can just like in Simcity we can add those little houses into the model and add people

19:40.080 --> 19:49.040
there give them daily plans and for example this is now in the city of Sankt Gallen where not a new

19:49.040 --> 19:55.920
station is being planned but the the moving of one station to another place so basically that

19:55.920 --> 20:03.520
station goes from left to the right and then lots of houses are being built there and with the tool

20:03.520 --> 20:10.560
we can say okay what's the beforehand we had at both those stations there are roughly 4 000

20:10.560 --> 20:17.280
passengers a day and now it's roughly 6 000 so that would be the effect of the policy of things

20:17.280 --> 20:23.280
happening there and and these numbers help you to dimension those stops properly

20:24.880 --> 20:31.200
yeah another application that doesn't come from my department so please don't ask me

20:31.760 --> 20:37.280
doesn't question about it but i think it's interesting enough to be presented here is

20:38.320 --> 20:48.400
that we also want to go into deep down knowing what's happening along the railway corridors so

20:49.440 --> 20:56.400
Matsim has a mobility simulation i talked about that earlier and my colleagues decided okay we

20:56.480 --> 21:03.120
can replace this with something that we call Ray Sim and that actually has tracks and signals in there

21:03.120 --> 21:13.920
and blocks and we can start playing around with that and and do roughly also capacity planning

21:15.920 --> 21:23.520
and on a much easier level than it is usually being done so that you still don't need

21:24.480 --> 21:31.680
need to have an idea of every signal that's on the tracks but and of every switch but

21:32.560 --> 21:39.120
of the whole idea roughly you need to know whether a track is single track or double track for example

21:43.760 --> 21:49.440
and so the outcome of this is now also a little video you have two trains

21:49.680 --> 21:50.560
um

21:53.200 --> 22:00.080
one coming from down here it has currently a speed of six six meters per second but it

22:00.080 --> 22:07.760
wants to go it's currently accelerating to 11 meters per second and there you have also a train

22:07.760 --> 22:13.840
that is six meters per second and wants to accelerate to 14 meters per second and this train

22:13.840 --> 22:19.760
wants to go this way and this train wants to go that way and there's a station and they both

22:19.760 --> 22:28.560
interfere at one point so obviously we don't want them to crash so as you can see the train coming

22:28.560 --> 22:36.160
and the red lines are basically the blocks that are being blocked in front of the train so depending

22:36.160 --> 22:42.320
how how fast the train is the train is faster than the braking distance would be longer so

22:42.320 --> 22:49.600
more blocks are being blocked so um and then you can see the train that comes from the right

22:50.240 --> 22:55.760
has the right of way and and and the left train got a red signal and is breaking down

22:57.600 --> 23:05.600
and now that right train is passing switch goes to green and the other train can enter the station

23:06.400 --> 23:12.720
well yeah um and obviously you can connect that with the rest of matzin so you know

23:13.840 --> 23:17.840
how many passengers are on the train and then you can do your policy planning again

23:18.960 --> 23:23.920
if there's um if there's a heavily delayed freight train that but that would generate

23:23.920 --> 23:28.640
you that and that amount of money maybe you want to accelerate it but then you see oh no it interferes

23:28.640 --> 23:33.920
with all of our daily commuters they would be very angry so you can do your policy planning

23:33.920 --> 23:41.040
around this it's still in an early stage the that microscopic railway simulation but ultimately

23:41.040 --> 23:47.840
this is where we want to go to it's also released as as a matzin contribution called rail sim so it's

23:47.840 --> 23:54.560
part of the matzin code everyone can use it and i think it's a way to go in that direction as well

23:55.360 --> 24:00.880
but please don't ask me too many questions about that but i can connect to people who know about it

24:01.600 --> 24:02.880
so to wrap up

24:05.440 --> 24:11.840
matzin has helped sbb massively to to understand customer behavior and

24:12.960 --> 24:20.240
committing to open source in our point of view has really paid off here and it's also the way to go

24:20.240 --> 24:32.000
for us um yeah and these models are very very complex but um that is what they are no matter

24:32.000 --> 24:42.080
whether you use commercial or open source software um oh yeah that one has to come too um and uh yeah

24:42.080 --> 24:47.440
if you want to know more about matzin um there's an annual meeting um this year it will be in

24:48.000 --> 24:56.640
um as part of the heart conference it's a transport conference um on the 17th of june in

24:57.200 --> 25:04.720
in outer university so yeah hey thank you um yeah and um i'm happy for questions

25:05.920 --> 25:07.920
even though i only have five minutes

25:17.440 --> 25:25.520
thanks a lot for the presentation uh quite a bit of the the transport systems have an historical

25:25.520 --> 25:30.400
background for example probably some of them are based on the industrial need back at like

25:30.400 --> 25:35.600
20 years ago or some of them are related to new developments in the city and some of these things

25:35.600 --> 25:40.560
are also presented in fact at open street map in these kind of resources are you able to extract

25:40.560 --> 25:45.840
amenities maybe or an historical sense or is the distributioner and the social demographic

25:45.840 --> 25:52.320
something that you get as a matrix how do you get this kind of distribution and sorry second

25:52.320 --> 26:00.800
yep do you import EFS and these other stuff um yeah both good questions so the first one um so

26:01.600 --> 26:06.960
we do have the census data from the federal office of statistics in switzerland and they also have an

26:06.960 --> 26:11.680
idea how it looks like in the future so we are in a very lucky situation there's a lot of data

26:11.680 --> 26:18.800
available and also publicly um in fact there's also a transport model available for switzerland

26:18.800 --> 26:23.920
publicly but unfortunately with a closed source license where you need a software that costs you

26:23.920 --> 26:32.240
roughly uh 10 000 euros a year so that doesn't help a lot um so we rather build our own models

26:32.240 --> 26:39.520
and the other question is um yeah typically we uh one would use gtfs as an as the main data source

26:39.520 --> 26:45.840
for public transport data since we are the railway operator and we have time tables in all kind of

26:45.840 --> 26:51.280
formats we use a different one but if you were to build a model for matzim typically you would use

26:51.360 --> 26:55.120
opus creed map and and and gtfs um yeah

27:00.480 --> 27:08.160
yep you um what for the model of the swiss transport uh how do you do that there's

27:08.160 --> 27:12.320
three three million agents that are being simulated eight and a half yeah eight and a half

27:13.440 --> 27:18.000
so what's what's the typical like how how much can it scale like how many agents can you have in one

27:18.000 --> 27:28.800
simulation um yeah that um so the the models do scale um but um there's there's an upper limit

27:28.800 --> 27:35.760
to what is useful because um so switzerland is still a useful also in terms of a regional

27:37.600 --> 27:45.120
scope because there you have many long distance commuters um but if you are using matzim to for

27:45.120 --> 27:54.560
example for for really long distance um choices um then you would simply remove everyday commuters

27:54.560 --> 28:00.800
so i also in a previous life i created a model for sweden that also worked but it's also roughly the

28:00.800 --> 28:08.080
same number of people um and but there are simulations for for cities in china which have 20 million

28:08.080 --> 28:15.200
people um and what you can do is you can cut down the number of agents that you simulate and and

28:16.000 --> 28:20.640
increase network capacities and so on so there there are ways to deal with that

28:24.720 --> 28:31.920
yeah so you mentioned that you can feed open street uh uh map data into matzim

28:32.880 --> 28:39.120
but does matzim also provide tools to add new assets or population models how

28:41.280 --> 28:46.560
there are tools that allow the addition of of new people if you don't want to hard code it

28:47.120 --> 28:52.400
some of them are commercial i mean there are some spin-off companies around matzim who provide

28:52.400 --> 28:57.680
this as a service but you can also do it on your own it's just basic java or python code that you

28:57.680 --> 29:05.200
can use for that so um yeah and if you do transport modeling um for public transport you

29:05.200 --> 29:09.600
would probably rather edit the gtfs than editing the matzim schedule

29:14.000 --> 29:18.640
so i think there are a lot of interesting yeah i'm here so sorry

29:20.160 --> 29:26.320
yeah well i think we one short question one question is possible yeah one more

29:28.560 --> 29:35.280
yeah i don't know how do you determine the accuracy of your model ah oh yeah that that is another talk

29:35.280 --> 29:42.960
of of an hour um so getting getting getting models right and calibrating them properly um is um

29:43.840 --> 29:49.200
is mostly countator that you need and in switzerland we have something that's called the microsensors

29:49.200 --> 29:54.960
that where where where we ask people every five years about their mobility behavior and that is very

29:54.960 --> 30:03.920
very accurate and has a lot of data where that is useful to calibrate models but um

30:05.920 --> 30:10.400
it's always a fair question if someone presents you a transport model to ask how is it calibrated

30:12.560 --> 30:14.400
okay so

30:24.960 --> 30:26.420
you

