WEBVTT

00:00.000 --> 00:08.480
Okay, our next talk will be from Pieter Himmer.

00:08.480 --> 00:11.280
This will be on automated documentation.

00:11.280 --> 00:14.280
Please give a warm welcome to Pieter.

00:14.280 --> 00:18.120
Yeah.

00:18.120 --> 00:24.800
Thank you for being here and thanks for the great programming because, yeah, my talk really

00:24.800 --> 00:30.400
follows well, follows up well on the last talk.

00:30.400 --> 00:40.960
So my goal for this presentation is to tell you about how to automatically generate IKEA-style

00:40.960 --> 00:44.280
assembly instructions for open source hardware.

00:44.280 --> 00:49.520
So before I do that, let me just explain a little bit about myself.

00:49.520 --> 00:56.440
I've currently just started as a self-employed software developer or slash researcher and

00:56.440 --> 01:03.440
I'm, my target is to make a living in open source software development.

01:03.440 --> 01:10.480
So I'm currently, I've just had my first contract with Ansel that has been talked about before

01:10.480 --> 01:16.680
and this allows me to work on a really nice project in Freca that's close to my heart,

01:16.680 --> 01:23.200
is managing data for models, so improving parametric design.

01:23.200 --> 01:29.000
I'm also a co-founder of the Open Toolchain Foundation, which is a foundation that aims

01:29.000 --> 01:34.800
to support a whole tool chain for going from a design to a physical product and we've

01:34.800 --> 01:38.440
seen great examples for that.

01:38.440 --> 01:43.640
I come from academia, I've been a researcher in the area of high performance computing,

01:43.640 --> 01:49.560
but a couple of years ago I got a chance to work on actually my passion, open source

01:49.560 --> 02:02.600
software and hardware and I was in a project in Hamburg with which, in which my colleagues

02:02.600 --> 02:07.240
from InMachines in Gratia were creating the OpenLabs starter kit.

02:07.240 --> 02:12.960
So the idea was in a span of one year and a half create eight machines for FabLabs,

02:12.960 --> 02:22.920
3D printers, laser cutters, CNC machines and three versions each, so rapid prototyping

02:22.920 --> 02:28.920
so to populate basically FabLabs and all open source hardware.

02:28.920 --> 02:36.360
But of course there is one problem that a documentation we heard about in the last presentation,

02:36.360 --> 02:41.520
so documentation is really crucial for open source hardware, without documentation no

02:41.520 --> 02:43.400
open source hardware.

02:43.400 --> 02:50.600
And it's for replication but also for collaboration informing people how to improve things.

02:50.600 --> 02:58.000
But as we probably all know here documentation is very labor intensive and it's always out

02:58.000 --> 03:00.880
of date essentially.

03:00.880 --> 03:08.800
So related work, there are two basically two approaches document after the fact you design

03:08.800 --> 03:16.560
your machine or whatever you design and you start documenting with the potential problem

03:16.560 --> 03:24.000
that you miss important things to, for example to tell collaborators the design decisions

03:24.000 --> 03:26.000
that you made.

03:26.000 --> 03:35.240
Another basic approach is document while doing but this has the problem that you may

03:35.240 --> 03:40.400
document much more than you actually need.

03:40.400 --> 03:45.920
So in the current state of the art I think in documentation for open source hardware

03:45.920 --> 03:52.360
is git building and a difference with our approach and git building is, git building

03:52.360 --> 04:01.080
is I would say text first, images second and for our approach is images first and we try

04:01.080 --> 04:03.960
to minimize the amount of text.

04:03.960 --> 04:10.040
And that helps us with something that we find very important is a semantic relation between

04:10.040 --> 04:15.240
the source of the hardware, the CAD files and the documentation.

04:15.240 --> 04:24.080
This is difficult to do in, this is difficult to do in if you have text describing a machine

04:24.080 --> 04:25.480
for example.

04:25.480 --> 04:31.880
So our goal for this research was to integrate a design and a documentation process, generate

04:31.880 --> 04:37.560
assembly instructions automatically and support design evolution.

04:37.560 --> 04:45.200
If the design evolves then we hope that we can just push a button and regenerate a manual.

04:45.200 --> 04:54.560
So my colleagues of Ingressia in machines they created the Fabulaiser Mini and they

04:54.560 --> 05:01.480
spent many months with three persons, a graphic designer, a CAD expert and a machine designer

05:01.480 --> 05:14.400
to create a very high quality IKEA style assembly manual, assembly instructions and this was

05:14.400 --> 05:22.280
really nice but also a huge effort and I believe that when the instructions were done it was

05:22.280 --> 05:26.520
already out of date.

05:26.520 --> 05:32.000
So this was our starting point in trying to automate this process.

05:32.000 --> 05:41.800
So an overview of our approach is that we have a CAD file that we annotate in a CAD-like

05:41.800 --> 05:46.840
manner with, for example, with layers and something that we call layer states and we

05:46.840 --> 05:56.200
have a textual specification and the textual specification relates to the CAD source.

05:56.200 --> 06:05.320
I will show you that later on and we combine that information and generate a PDF assembly

06:05.320 --> 06:06.880
instructions.

06:06.880 --> 06:17.280
So we created a dedicated workbench in FreeCAD to help us annotate the CAD file.

06:17.280 --> 06:23.640
So typically for us the input is a step file and for example we have a button that allows

06:23.640 --> 06:30.320
you to select some screws and then you press the button and then they will automatically

06:30.320 --> 06:34.960
explode and show this red line that you can see on the screen.

06:34.960 --> 06:42.800
Another thing to highlight here is that what I circled here is one of the step layers,

06:42.800 --> 06:49.840
step one detail and that is something that we can refer to from the textual specification.

06:49.840 --> 06:52.280
I will show you later.

06:52.280 --> 07:01.080
And another thing is that the window that you see here with the CAD model, we created

07:01.080 --> 07:08.200
essentially a button that allows you to take an SVG screenshot, high quality image of exactly

07:08.200 --> 07:12.080
what you see here and we can remember the camera position.

07:12.080 --> 07:22.080
So you can essentially move and rotate your model and think, okay, this is how I want

07:22.080 --> 07:23.480
to show this in the manual.

07:23.480 --> 07:29.080
You save the camera position and you can generate an SVG image out of it.

07:29.080 --> 07:32.400
So let's go into the textual specification.

07:32.400 --> 07:39.360
At the left we have a domain specific language that helps us describe the manual and at the

07:39.360 --> 07:50.320
right we see the output and we can specify the title and we have a command for a bill

07:50.320 --> 07:55.720
of materials and this is the only thing that we need to specify and then we get the visual

07:55.720 --> 08:01.280
bill of materials that you can see at the left on the assembly instructions.

08:01.280 --> 08:11.280
We can specify which main image we want and what kind of highlight we want and this is

08:11.280 --> 08:13.600
what I ask you to remember step one detail.

08:13.600 --> 08:19.680
So the image that you see here comes directly from that layer state that we defined in the

08:19.680 --> 08:20.680
CAD program.

08:20.680 --> 08:27.800
This is where you can see the semantic relation between the information in the textual specification

08:27.800 --> 08:37.680
and the annotations, the CAD like annotations in the CAD file and everything that is underlined

08:37.680 --> 08:46.640
rats are basically these references into the CAD file and that allows us to create this

08:46.640 --> 08:49.440
page that you see.

08:49.440 --> 08:59.600
So and we also have some annotations, remarks and how to that references a dedicated how

08:59.600 --> 09:11.480
to page that tells you how to do things for example, combine to profiles for example and

09:11.480 --> 09:17.560
we have commands to add tools to the page.

09:17.560 --> 09:20.000
So what was the result?

09:20.000 --> 09:28.840
So hopefully you are of the same opinion that the original and the generated are very similar.

09:28.840 --> 09:38.720
There are some details that are that we don't have the same flexibility as a graphic designer

09:38.720 --> 09:43.760
for example in the text on the top you see there is a red dot in the text.

09:43.760 --> 09:50.960
Well so we cannot create so or we cannot do the same thing because we generate the page

09:50.960 --> 09:55.080
and we just don't have the flexibility.

09:55.080 --> 10:01.520
This is another page and again here is a problem with the flexibility that a graphic designer

10:01.520 --> 10:07.760
has for example in the bottom you can see there are two options for the same for a tool

10:07.760 --> 10:14.640
and that is difficult to do for us when we generate these pages.

10:14.640 --> 10:22.200
So because the original manual was developed over a course of months with three persons

10:22.200 --> 10:32.440
without any time tracking it was really difficult for us to measure scientifically what the

10:32.440 --> 10:38.760
cost benefits in terms of time are but we tried to give at least an indication and we

10:38.760 --> 10:45.680
didn't have the resources to create this whole manual so but on a small model of about six

10:45.680 --> 10:53.040
steps a small vice and a vertical lathe to really create this manual was about 25 minutes

10:53.040 --> 10:59.440
so but it was us who wrote the software so let's make it a factor two I think it's still

10:59.440 --> 11:05.840
pretty good for creating these kinds of manuals.

11:05.840 --> 11:11.040
So in terms of design evolution going from version N to N plus one we heard about this

11:11.040 --> 11:19.800
in the previous talk so minor changes in the model let's say replacing small screws with

11:19.800 --> 11:26.280
smaller ones do not require any action at all you just push the button and the new manual

11:26.600 --> 11:29.920
has been generated.

11:29.920 --> 11:38.240
If the changes are larger then we can show that because of the abstractions that we use

11:38.240 --> 11:45.720
the changes that you have to make are all limited in scope and for example if you make

11:45.720 --> 11:53.280
a larger version then you probably have to zoom out on one of and store that camera position

11:53.280 --> 11:57.840
but after you've done that you can just push the button and it generates the manual again

11:57.840 --> 11:59.360
for you.

11:59.360 --> 12:10.160
So and the biggest change that yeah the biggest change that you can encounter is if you split

12:10.160 --> 12:15.960
up steps assembly steps or you merge them then you basically have to go all over all

12:15.960 --> 12:18.920
these abstractions.

12:18.920 --> 12:26.120
So before I conclude this talk I would like to acknowledge the people that I've worked

12:26.120 --> 12:32.080
with so the co-author of our paper is JC Mariscal Melgar at the Helmut Schmidt University in

12:32.080 --> 12:38.840
Hamburg the team that created this example manual that was a huge inspiration Daniel

12:38.840 --> 12:46.080
Ingressia, Markola and Liana Sayuri Honda of Inmachines Ingressia and so this project

12:46.080 --> 12:56.480
has been funded in the context of the Interfacer project funded by the EU and to make the professional

12:56.480 --> 13:02.440
to make the software a bit more less research software I received some funding from the

13:02.440 --> 13:09.760
NGI-Dubb C OpenCall as part of the Open Know-How project.

13:09.760 --> 13:14.840
So my conclusion is that well our research proposes a novel solution to the documentation

13:14.840 --> 13:22.360
update problem in the collaborative environment of open source hardware so I'm happy to take

13:22.360 --> 13:24.840
any questions.

13:24.840 --> 13:39.440
Hi, thank you for the presentation.

13:39.440 --> 13:46.040
I wish this existed two years ago when I was writing the documentation.

13:46.040 --> 13:55.680
The question is is there the capability to also add a photo or like an external picture

13:55.680 --> 14:00.520
to this tool?

14:00.520 --> 14:09.680
Yeah so we don't prefer photographs because they tend to get out of date so we prefer

14:09.680 --> 14:22.040
to have 3D renders but yeah I think it would be possible to add that to a layer yes it

14:22.040 --> 14:24.400
needs to be customized a bit.

14:24.400 --> 14:30.560
Okay because I do not want to model glue in Frickad when I need to.

14:30.560 --> 14:38.560
Right thank you.

14:38.560 --> 14:44.520
Is there a reason why the steps are explicitly numbered rather than automatically enumerated

14:44.520 --> 14:49.360
because if you add a step two between step one and current step two you need to rename

14:49.360 --> 14:50.360
all the things.

14:50.360 --> 14:56.440
Yes no there is no reason you can name it whatever you want.

14:56.440 --> 15:11.280
We just did this to make clear that these things represent steps but no you're right.

15:11.280 --> 15:14.840
Hi Peter thank you for the great talk.

15:14.840 --> 15:21.720
I can use this not only with Frickad designs but I can use any step file that I have some

15:21.720 --> 15:25.960
step assembly and take this apart or is it limited to Frickad?

15:25.960 --> 15:31.640
No actually it works better with step files than with for example assemblies in Frickad

15:31.640 --> 15:39.200
because for us it was difficult to choose which assembly because there are so many.

15:39.200 --> 15:48.600
But and the hardware designers in our case used Fusion and the CAD expert took the step

15:48.600 --> 16:00.200
file from Fusion, drew in many more things and used Rhino so for us the input was step.

16:00.200 --> 16:06.800
I have one more question.

16:06.800 --> 16:13.960
I saw the point from the camera was in your code so I saw the point from where you're

16:13.960 --> 16:15.560
looking was in the code.

16:15.560 --> 16:23.440
How do you select which part would be taken out like the screws or the hinge?

16:23.440 --> 16:29.440
Is this done by clicking and selecting or how do we do that?

16:29.680 --> 16:32.600
Very good question.

16:32.600 --> 16:40.600
What you do is you have something so the idea is to create layers in Frickad and we have

16:40.600 --> 16:44.360
a layer for parts for each step.

16:44.360 --> 16:50.040
You have your model and you can select things and then these parts will automatically go

16:50.040 --> 16:54.480
into the layer that you just selected and will disappear so this makes it very easy

16:54.520 --> 17:01.000
for you to basically go down your model and select everything in the right step and that's

17:01.000 --> 17:03.920
the basis for the bill of materials.

17:03.920 --> 17:11.920
Then we have layer states that define which layers are on or off and so you can basically

17:11.920 --> 17:19.240
go from one layer state to another layer state and this positioning for example, the positioning

17:19.240 --> 17:24.440
of the screws is also stored in a layer and if you turn that layer on or off it's straight

17:24.600 --> 17:30.880
switches between the actual view, the assembled view or the exploded view so you can switch

17:30.880 --> 17:33.880
very fast between all those views.

17:33.880 --> 17:35.880
The parts are like manually.

17:35.880 --> 17:41.880
The screws are taken out from the transport menu or are they taken out on the transport

17:41.880 --> 17:42.880
menu?

17:42.880 --> 17:49.880
The question is whether the screws are taken out manually or not.

17:50.320 --> 17:51.760
No, it's automatic.

17:51.760 --> 17:55.880
You just select the screw, you hit a button and we can.

17:55.880 --> 18:02.880
So the technique is we take the center of the bounding box, the center of mass for a

18:03.040 --> 18:09.640
screw that is a bit more, well if the screw is here, the hat and there it's a little bit

18:09.640 --> 18:16.640
to the right so we know which direction to take it out so it's automatic.

18:17.480 --> 18:22.480
Okay, thank you very much for the very interesting talk.

18:22.480 --> 18:23.480
Thank you.

18:23.480 --> 18:24.480
Thank you.

18:24.480 --> 18:25.480
Thank you.

18:25.480 --> 18:26.480
Thank you.

18:26.480 --> 18:27.480
Thank you.

18:27.480 --> 18:28.480
Thank you.

18:28.480 --> 18:29.480
Thank you.

