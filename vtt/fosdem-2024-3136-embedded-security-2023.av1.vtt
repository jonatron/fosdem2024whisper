WEBVTT

00:00.000 --> 00:02.000
last year.

00:10.000 --> 00:16.000
Hello, everyone. Last year, first time, I was talking about

00:16.000 --> 00:22.000
errors in embedded development. And I would like to repeat a part

00:22.000 --> 00:26.000
of the experience that we have had last year.

00:26.000 --> 00:32.000
Please think about an embedded project you are working on

00:32.000 --> 00:38.000
or you have been working on recently. Lock it in your memory.

00:38.000 --> 00:42.000
No cheating. You lock a project.

00:42.000 --> 00:50.000
Now, how many open SSL versions are there in that project?

00:50.000 --> 00:54.000
Raise your hand if that's zero.

00:54.000 --> 00:58.000
Like 10 people.

00:58.000 --> 01:02.000
Raise your hand if there's one.

01:02.000 --> 01:06.000
Like 20 people.

01:06.000 --> 01:10.000
Raise your hand if you are sure there are two or more.

01:10.000 --> 01:16.000
Like less. And raise your hand if you do not know.

01:16.000 --> 01:20.000
That's the majority of the room.

01:20.000 --> 01:26.000
I think there are a little less people who do not know,

01:26.000 --> 01:32.000
but still the majority.

01:32.000 --> 01:38.000
Why the question is important? You will see later.

01:38.000 --> 01:42.000
And a bonus question for people who knew how many versions of

01:42.000 --> 01:46.000
open SSL they had.

01:46.000 --> 01:53.000
Who can list the total, who of you has a full list of

01:53.000 --> 01:57.000
dependencies of that project?

02:00.000 --> 02:05.000
Okay, I round 20 people. Congratulations to you.

02:10.000 --> 02:15.000
Now, who is Marta and why she is talking about such things

02:15.000 --> 02:21.000
and asking such intimate questions?

02:21.000 --> 02:24.000
I'm a security researcher.

02:24.000 --> 02:29.000
And then what to expect from the 2024?

02:29.000 --> 02:34.000
Now, let's talk from regulations.

02:34.000 --> 02:38.000
Regulations that plural are a little bit too much here.

02:38.000 --> 02:44.000
One regulation. Because that's a 25 minutes version of the talk.

02:44.000 --> 02:48.000
So, their regulation is the CRA.

02:48.000 --> 02:53.000
Now, one slight simplification of CRA.

02:53.000 --> 02:57.000
To your lawyers, I am simplifying.

02:57.000 --> 03:05.000
The CRA is adding security, mandatory security requirements

03:05.000 --> 03:10.000
to all products that will be put on the market in the European Union

03:10.000 --> 03:13.000
by the requirement of the C-mark.

03:13.000 --> 03:16.000
The C-mark, you know it, on all electronics you have the C-mark.

03:16.000 --> 03:21.000
It's extending the C-mark to add security, mandatory requirements.

03:21.000 --> 03:25.000
Examples of the things that are mandatory.

03:25.000 --> 03:29.000
No release with known vulnerabilities.

03:29.000 --> 03:31.000
As bonds.

03:31.000 --> 03:34.000
Secure configuration by default.

03:34.000 --> 03:37.000
Updates by default for all users.

03:37.000 --> 03:39.000
And so on and so on.

03:39.000 --> 03:43.000
There are two pages of those requirements.

03:43.000 --> 03:49.000
In the final version, it doesn't apply to open source project themselves.

03:49.000 --> 03:57.000
In most cases, it applies to products that are integrated open source.

03:57.000 --> 03:59.000
All products, in fact.

03:59.000 --> 04:03.000
It will require paperwork.

04:03.000 --> 04:09.000
Mainly risk analysis and the vulnerability management process.

04:09.000 --> 04:14.000
And what this paperwork will be, I cannot tell you right now

04:14.000 --> 04:19.000
because it's going to be defined further.

04:19.000 --> 04:26.000
As for most of the things C-related, you have self-assessment by default.

04:26.000 --> 04:32.000
But there are certain classes of products that will require more.

04:32.000 --> 04:35.000
Including external security audit.

04:35.000 --> 04:40.000
That's an expensive thing if you haven't done one.

04:40.000 --> 04:44.000
And that's hot news because we have a final version.

04:44.000 --> 04:47.000
It's expected to be voted next month.

04:47.000 --> 04:56.000
And from next month, there will be three years till the final implementation.

04:57.000 --> 05:04.000
Now, the current version excludes non-monetized open source project.

05:04.000 --> 05:09.000
That's a big simplification also.

05:09.000 --> 05:14.000
So if you are contributing to an open source project, it doesn't apply to you.

05:14.000 --> 05:22.000
But for all integrators, embedded people are integrating open source in their products.

05:22.000 --> 05:26.000
So basically, it applies to the whole embedded.

05:26.000 --> 05:33.000
There will be risk analysis to do for all components that you include.

05:33.000 --> 05:41.000
And that's why the question of what do you have as components in your project is important.

05:41.000 --> 05:46.000
And now the big question for the whole embedded open source community.

05:46.000 --> 05:51.000
Is everyone going to do this paperwork alone?

05:51.000 --> 05:57.000
Or are we going to do the paperwork the open source way

05:57.000 --> 06:02.000
and share the documentation prepared for each single dependency?

06:02.000 --> 06:07.000
That's a big question for 2024, for all of us.

06:07.000 --> 06:11.000
If you want to know more, if I scared you enough,

06:11.000 --> 06:18.000
I've written an article published at WN last year, so it covers the first version.

06:18.000 --> 06:29.000
And for your trip back from FOSDEM, there's a nice read, the final version of the regulation, just 189 pages.

06:29.000 --> 06:32.000
But it's not boring.

06:32.000 --> 06:37.000
I didn't fall asleep, it's not boring at all.

06:37.000 --> 06:45.000
Now, let's go to trends, apart from the regulation.

06:45.000 --> 06:49.000
CV numbers. What is a CV?

06:49.000 --> 06:56.000
CV is a way to name vulnerabilities, public ones.

06:56.000 --> 07:00.000
It stands for common vulnerabilities and narration.

07:00.000 --> 07:09.000
And the number of registered public vulnerabilities is growing up.

07:09.000 --> 07:19.000
And in 2023, it went up. Yet again, we have yet another year of a record high number of CVs.

07:19.000 --> 07:27.000
I haven't been splitting embedded, non-embeded, but for embedded, that's the same statistics.

07:27.000 --> 07:32.000
The number of vulnerabilities is going high in a very important way.

07:32.000 --> 07:38.000
Now, a complex problem of funding of security work.

07:38.000 --> 07:47.000
In the recent two, three years, and there was a big part of this process happening in 2023,

07:47.000 --> 07:54.000
there are external funds paying for security work in open source projects.

07:54.000 --> 08:05.000
Two main examples of that, OpenSSF Alpha Omega project that funded, I've chosen examples from the embedded field.

08:05.000 --> 08:12.000
OpenSSF Rust, Python, Eclipse Foundation, and the Sovereign Tech Fund that has been

08:12.000 --> 08:20.000
part of the work for the Yocta project and other projects too, but in the embedded field.

08:20.000 --> 08:28.000
Because of this funding, because of the pressure of the regulations that are happening not only in Europe,

08:28.000 --> 08:35.000
in the US there's also different pressure, but in the same direction,

08:35.000 --> 08:40.000
we are seeing the update of processes in different projects.

08:40.000 --> 08:49.000
An example of that, the Yocta project has now a security team and working security process.

08:50.000 --> 09:01.000
In relation to all that, we also have tools that are either being implemented or they are being used more and more frequently.

09:01.000 --> 09:08.000
For example, the S-Bomb generation, either in the Cyclone DX or in the S-Bed X format,

09:08.000 --> 09:12.000
that is getting more and more common option.

09:12.000 --> 09:21.000
In embedded projects, yet another example from our field, S-Bed X is now generated by default

09:21.000 --> 09:26.000
in the Pocky reference distribution in the Yocta project.

09:26.000 --> 09:37.000
And a similar tool link on the dependency checking and CVEs, you have that in the platforms like the Dependable on GitHub,

09:38.000 --> 09:45.000
Standard on Tools also, tools are happening and the pressure to use them is happening too.

09:47.000 --> 09:56.000
And another big question for all of us, all that work, it requires someone to do it.

09:57.000 --> 10:06.000
To do the security work, to do the processes, to look at the results of tooling,

10:06.000 --> 10:10.000
even if they are the CI, you have to have someone looking at the results.

10:10.000 --> 10:16.000
How can we do it long term and especially how we can fund it long term?

10:17.000 --> 10:20.000
Those external forms may disappear one day.

10:21.000 --> 10:23.000
Big question for 2024.

10:24.000 --> 10:34.000
Now, for the events, vulnerabilities and incidents, I had to cut things

10:34.000 --> 10:40.000
because I want to have time for questions and it's only 25 minutes, so I had to cut.

10:41.000 --> 10:45.000
And this is what I have chosen for this year.

10:46.000 --> 10:55.000
HTTP2 Rapid Reset, also known as CV 202344487.

10:56.000 --> 11:03.000
This one was actually exploited in practice between August and October of last year.

11:05.000 --> 11:10.000
And it's a vulnerability in the HTTP2 implementation,

11:10.000 --> 11:14.000
or a little bit in the specification itself also.

11:16.000 --> 11:22.000
And if a client creates a parallel stream,

11:22.000 --> 11:26.000
HTTP2 allows parallel streams for the same connection,

11:26.000 --> 11:35.000
if the client creates a parallel stream and just immediately after sends a message to close that parallel stream,

11:36.000 --> 11:41.000
this is generating a high load on the server.

11:42.000 --> 11:46.000
The creation of stream is pretty expensive.

11:46.000 --> 11:50.000
And as a result, you get a denial of service.

11:52.000 --> 12:03.000
Most HTTP servers have been affected and there was a big number of releases happening in October 2023.

12:04.000 --> 12:17.000
What is interesting in the whole story is that the servers that are more for the embedded market,

12:17.000 --> 12:23.000
so with careful resource allocation, with limitations of number of clients,

12:24.000 --> 12:28.000
or limitations of streams per client,

12:28.000 --> 12:35.000
they had better resources, less vulnerable to this issue.

12:35.000 --> 12:41.000
For example, like HTTP, they clearly state that they are not vulnerable to that issue.

12:42.000 --> 12:47.000
I'm providing a link to the NVID entry for that problem,

12:47.000 --> 12:54.000
with dozens of links for different projects with information,

12:54.000 --> 13:06.000
or what they did, or what they expect users to use as configuration options to prevent such things in the future.

13:09.000 --> 13:12.000
And then a little bit of fun.

13:13.000 --> 13:22.000
It's either funny or it's frightening, depends on how you read it.

13:25.000 --> 13:31.000
The whole thing happened in 2022, but it has been published in 2023,

13:31.000 --> 13:34.000
so we can say we put it in 2023.

13:35.000 --> 13:45.000
This was a long story, but in short, some trains in Poland weren't starting after maintenance.

13:48.000 --> 13:53.000
And the maintenance company took a team to the river engineering company,

13:53.000 --> 13:57.000
and what they figured out that there were things like,

13:58.000 --> 14:06.000
train was locking with a vague error message after staying in one place for a long time,

14:06.000 --> 14:15.000
or the train was reporting errors after staying at some GPS positions,

14:15.000 --> 14:24.000
which by coincidence turned out to be GPS positions of workshops of the competitors of the manufacturer.

14:28.000 --> 14:35.000
Or in some trains there was a log based on a date,

14:35.000 --> 14:41.000
well, related to the CERA, but also related to all the things happening on the market.

14:42.000 --> 14:47.000
Until now, embedded developers were choosing their dependencies.

14:47.000 --> 14:51.000
Well, it does the work, I can take it, if there is a license matters.

14:52.000 --> 14:58.000
In the future, it may be that license matters won't be the only condition.

14:59.000 --> 15:04.000
There may be also a condition that this project have security policy,

15:04.000 --> 15:08.000
is this project providing regular security updates for five years or more,

15:09.000 --> 15:15.000
and there may be the need to do the triage in your dependency list,

15:17.000 --> 15:19.000
in some surprising places also.

15:20.000 --> 15:28.000
On the S-Bomb site, last year we have had S-Bombs being generated in more and more places,

15:28.000 --> 15:35.000
generating S-Bombs at school, but it's even more cool to actually use them for something.

15:37.000 --> 15:40.000
So I think that's going to happen this year,

15:41.000 --> 15:44.000
and then on the pure vulnerability side,

15:44.000 --> 15:55.000
we are still seeing products being developed to be in an internal network,

15:55.000 --> 16:01.000
not connected to the internet, and then someone puts a GSM modem in there.

16:02.000 --> 16:05.000
I am expecting a few funny vulnerabilities like that.

16:06.000 --> 16:10.000
Then the hardware series is going to continue,

16:11.000 --> 16:14.000
not only chips but also firmware.

16:15.000 --> 16:19.000
Have a look at the size of the firmware of your network card,

16:19.000 --> 16:26.000
or your graphic card, or your gpu, or other thing, or phone chipset.

16:28.000 --> 16:31.000
That amount of software means there are bugs.

16:32.000 --> 16:36.000
If there are bugs, they are also likely security bugs.

16:37.000 --> 16:44.000
I expect that, maybe not this year, but sometime in the future,

16:44.000 --> 16:52.000
the future will have a big issue related to firmware in one of those categories.

16:52.000 --> 17:00.000
My personal pick is network cards, a packet to make things funny.

17:01.000 --> 17:07.000
Then there may be also issues in places you do not expect them to.

17:10.000 --> 17:15.000
Quite many open source projects have never issued a CV before.

17:17.000 --> 17:24.000
If they have never issued a CV, users have a tendency to not update them.

17:25.000 --> 17:29.000
Not having a CV does not mean that there are not any bugs.

17:30.000 --> 17:32.000
In fact, quite the contrary.

17:33.000 --> 17:40.000
I expect that we may have an issue of a very serious problem happening

17:40.000 --> 17:45.000
in one of those projects nobody has been looking into before.

17:45.000 --> 17:51.000
Then everyone will be trying to figure out how many copies of that project they have.

17:52.000 --> 17:57.000
To sum up, that is going to be an interesting year.

17:57.000 --> 17:59.000
Do you have questions?

18:16.000 --> 18:18.000
Thank you for the interesting talk.

18:18.000 --> 18:21.000
I have a question about the legislation.

18:29.000 --> 18:35.000
Are there different regulations for real security bugs and denial of service bugs?

18:35.000 --> 18:42.000
If you have some warmable hole in your software, which is network-connected,

18:42.000 --> 18:47.000
or something which is a denial of service, for me it is a different class.

18:47.000 --> 18:52.000
In one case, you probably get my point.

18:53.000 --> 18:56.000
There are two parts of answer for your question.

18:56.000 --> 19:00.000
The CRA is not the only regulation that is currently in progress.

19:01.000 --> 19:06.000
You know that there are European elections in Germany.

19:07.000 --> 19:09.000
Things are being rushed.

19:10.000 --> 19:14.000
There is the CRA, but there is also the PLD.

19:14.000 --> 19:21.000
There is the regulation related to the workings, there is the regulation relating to AI,

19:21.000 --> 19:27.000
and all of them have certain things.

19:27.000 --> 19:31.000
On the typical vulnerability in the US,

19:32.000 --> 19:38.000
if it is an exponential like in the case of that HTTP repeat reset,

19:38.000 --> 19:40.000
it is a vulnerability.

19:40.000 --> 19:45.000
I classify it with a typical vulnerability.

19:46.000 --> 19:50.000
If it were to happen in a network device,

19:50.000 --> 19:54.000
that also enters into other regulations quite probably.

19:54.000 --> 20:00.000
There may be things that apply in different places,

20:00.000 --> 20:05.000
depending on the actual use of the same software.

20:12.000 --> 20:14.000
Thank you very much for this talk.

20:14.000 --> 20:17.000
I think this is probably the most important talk to me,

20:17.000 --> 20:21.000
as I am a designer manufacturer, embedded hardware for startups and SMEs.

20:21.000 --> 20:24.000
I am desperately concerned about the situation.

20:24.000 --> 20:26.000
The timeline you lay out is scary enough,

20:26.000 --> 20:31.000
but you will know that we in the UK have IoT connected device law

20:31.000 --> 20:34.000
coming into power at the end of April.

20:34.000 --> 20:37.000
We have three months to be compliant to this.

20:37.000 --> 20:40.000
There is a £10 million penalty, potentially, to us,

20:40.000 --> 20:43.000
or a percentage of global revenue.

20:43.000 --> 20:48.000
I will say broadly not one of the startups or SMEs we work with,

20:48.000 --> 20:52.000
and indeed ourselves, are in a position to deliver on this stuff,

20:52.000 --> 20:54.000
which scares the heck out of me.

20:54.000 --> 20:57.000
I would love to know who we need to be talking to to work together

20:57.000 --> 20:59.000
to try to look at this.

21:04.000 --> 21:10.000
I haven't shared the scary part of the series about the penalties,

21:10.000 --> 21:15.000
but in all cases, you are not able to pay them, so...

21:20.000 --> 21:22.000
That is another example.

21:22.000 --> 21:28.000
In different places, there are different regulations being brought in the light.

21:32.000 --> 21:34.000
For me, as an open source community,

21:34.000 --> 21:38.000
we have the only way to solve it all together

21:38.000 --> 21:40.000
and prepare the whole paperwork all together.

21:40.000 --> 21:44.000
Otherwise, the big ones will be able to pay the whole paperwork,

21:44.000 --> 21:47.000
but the small ones, well, not really.

21:48.000 --> 21:52.000
I think we are out of time, unfortunately.

21:56.000 --> 21:57.000
Thank you.

