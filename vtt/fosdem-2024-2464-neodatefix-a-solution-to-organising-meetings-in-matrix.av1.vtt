WEBVTT

00:00.000 --> 00:19.880
Now, we will have Milton and then Norgin and then Amat and Mikhail.

00:19.880 --> 00:26.320
They will tell us about the Neo-Date fix and a good solution to organize meetings.

00:26.320 --> 00:27.320
Thank you very much.

00:27.320 --> 00:28.320
The stage is yours.

00:28.320 --> 00:29.320
Thank you.

00:29.320 --> 00:36.440
I'm happy to see everyone of you today here.

00:36.440 --> 00:41.880
As Jan presented, I'm Milton and we're going to talk about Neo-Date fix or previously known

00:41.880 --> 00:42.880
as Matrix meetings.

00:42.880 --> 00:47.520
It was the starting name of the project, but anyway, we'll start by talking a bit about

00:47.520 --> 00:49.520
who we are.

00:49.520 --> 00:52.520
Amat, yes?

00:52.520 --> 00:54.280
Closer talking.

00:54.280 --> 00:59.080
So we are four developers from Norddeck.

00:59.080 --> 01:06.200
We have been doing software development specifically developing web applications on top of Matrix.

01:06.200 --> 01:10.240
We are doing this in the context of the OpenDesk Sovereign Workplace project for the German

01:10.240 --> 01:11.880
public sector.

01:11.880 --> 01:18.880
We have built this suite of web applications that are embedded within Element.

01:18.880 --> 01:21.760
I'll explain a bit about that more later.

01:21.760 --> 01:24.520
But yeah, we have Neo-Date fix, which we'll present here today.

01:24.520 --> 01:29.480
We have Neo-Board, which is a real-time collaborative whiteboard, which is actually what you're seeing

01:29.480 --> 01:30.560
in this presentation.

01:30.560 --> 01:35.200
So we built these slides and they're presenting with the Neo-Board.

01:35.200 --> 01:41.400
We also have voting polls, which is Neo-Choice application that it's not spec-based, but

01:41.400 --> 01:43.400
I won't get into that.

01:43.400 --> 01:49.120
And also, if you were at the Fringe event last Friday, we were using the BarCamp application

01:49.120 --> 01:54.240
to manage the schedule and the speakers and the whole tracks there.

01:54.240 --> 01:55.880
So yeah, what is Neo-Date fix?

01:55.880 --> 02:04.560
Neo-Date fix is a web application that allows you to create meetings and video conferencing

02:04.560 --> 02:09.440
meetings, especially within a Matrix client using the widget API.

02:09.440 --> 02:13.040
So currently, the only client that implements the widget API is Element Web.

02:13.040 --> 02:14.640
So that's what we have to work with.

02:14.640 --> 02:17.600
It is a good thing.

02:17.600 --> 02:20.720
And yeah, what can we do with the application?

02:20.720 --> 02:24.480
We can create these meetings as meeting rooms, as I've said.

02:24.480 --> 02:27.740
The meeting rooms are created with the default widget layout.

02:27.740 --> 02:33.120
So we have the video conference widget expanded and front and center with other widgets that

02:33.120 --> 02:34.120
you can choose.

02:34.120 --> 02:38.120
Typically, it could be whiteboard or some other widget that you want to previously set

02:38.120 --> 02:39.120
up.

02:39.120 --> 02:44.200
So you can pre-configure this for usability and quick action when you get into the meeting.

02:44.200 --> 02:48.720
We can schedule recurring and non-recurring meetings and see them in this calendar view

02:48.720 --> 02:51.240
that we'll show.

02:51.240 --> 02:53.400
It also supports creating breakout sessions.

02:53.400 --> 02:59.200
So if you have larger meetings and want to create sub-meetings when split people between

02:59.200 --> 03:01.240
those meetings, you can do that.

03:01.240 --> 03:05.960
We also support users that don't have an account on the home server.

03:05.960 --> 03:11.680
So we'll bring them in, creating them as temporary guest users, and they'll join the meeting.

03:11.680 --> 03:15.040
And we can also integrate with third-party clients.

03:15.040 --> 03:19.560
So specifically in the open desk project, there's open exchanges.

03:19.560 --> 03:22.360
There's also a calendaring solution.

03:22.360 --> 03:28.880
And when you create a video conference call there, it will create a meeting room in element

03:28.880 --> 03:32.400
with everything set up for that call.

03:32.400 --> 03:37.880
And finally, all of this is fully accessible and with support from multi-language.

03:37.880 --> 03:39.160
Okay.

03:39.160 --> 03:44.440
So going to the widget part, if you're familiar with widgets, you sort of have an idea.

03:44.440 --> 03:49.400
If not, it's a way to embed web applications inside element.

03:49.400 --> 03:55.600
It gives you access to the room events and room state events, and not much more, but

03:55.600 --> 03:58.080
that's the gist of it.

03:58.080 --> 04:04.880
And the way we have built our applications is we built this common layer, which we call

04:04.880 --> 04:12.160
the widget toolkit, that gives you, like these, for example, a React component, which will

04:12.160 --> 04:18.480
inject the widget API client into your React, and you can start using it without having

04:18.480 --> 04:20.680
to do that integration by yourself.

04:20.680 --> 04:25.640
It comes with material UI components.

04:25.640 --> 04:28.200
So you can also have this consistent look and feel.

04:28.200 --> 04:32.360
You can change the theming.

04:32.360 --> 04:37.560
And it also comes with some mocking components for easier testing.

04:37.560 --> 04:45.160
And finally, it comes with a base Docker image that you can use to quickly deploy into your

04:45.160 --> 04:48.920
infrastructure, your widget, based on that.

04:48.920 --> 04:53.400
And finally, it's also not only a widget, but it's also a bot, because the widget API

04:53.400 --> 04:58.200
only gives you access to the room data.

04:58.200 --> 05:00.600
We need to create the room meetings.

05:00.600 --> 05:06.680
We need to set up all of these accessory workflows that we then use the bot to perform

05:06.680 --> 05:07.680
these.

05:07.680 --> 05:15.400
It's built using nodes in TypeScript and in the bot SDK and in the SGS package for the

05:15.400 --> 05:18.200
API that we exposed.

05:18.200 --> 05:20.160
And yeah, this is a broader overview.

05:20.160 --> 05:24.600
Now Mikhail will talk a bit more about the internals, how we are doing this.

05:24.600 --> 05:26.600
Hello, hello.

05:26.600 --> 05:27.600
Thanks, Mutham.

05:27.600 --> 05:28.600
I'm Mikhail.

05:28.600 --> 05:32.200
I would like to continue with a high-level architecture of how it works.

05:32.200 --> 05:36.080
So we have this Neo-DateFix widget that is embedded in the Element Web Client.

05:36.080 --> 05:42.760
It just uses a widget API with a toolkit to send and observe state events and call some

05:42.760 --> 05:44.840
other actions that the API allows.

05:44.840 --> 05:51.480
It all goes past through the Element Client to the Home Server.

05:51.480 --> 05:54.760
And some of these goes to Neo-DateFix bot.

05:54.760 --> 06:01.320
So in Neo-DateFix bot, it looks for some particular message events of some particular types.

06:01.320 --> 06:06.720
And when they are received, it applies certain actions to the rooms.

06:06.720 --> 06:16.120
So besides having metrics API, Neo-DateFix bot also has HTTP API that is used by, again,

06:16.120 --> 06:24.840
Neo-DateFix widget to provide widgets lists and additional configurations that widget

06:24.840 --> 06:26.600
may need.

06:26.600 --> 06:32.440
And additionally, it provides the HTTP API to manage the meetings by external clients,

06:32.440 --> 06:34.240
as I've already said.

06:34.240 --> 06:41.000
Addiction to these components, we also developed several Element Modules that simplifies a

06:41.000 --> 06:43.600
bit this setup.

06:43.600 --> 06:48.840
And also add some additional optional features, like, and this one, like Lifecycle Model,

06:48.840 --> 06:54.600
Guest Model, but these are optional.

06:54.600 --> 06:56.600
And then, we have a new one.

06:56.600 --> 06:58.600
It's a very simple way.

06:58.600 --> 07:05.600
So if user wants to start with Neo-DateFix widget, it has to create a room.

07:05.600 --> 07:12.600
And then he needs to invite bot to this room, bot will auto-cept the invite.

07:12.600 --> 07:16.600
And then user needs to grant moderation rights to this bot.

07:16.600 --> 07:21.600
As soon as it's done, bot adds Neo-DateFix widget to the room.

07:21.600 --> 07:25.600
So he can see calendar and create first meeting.

07:25.600 --> 07:29.600
So he could create single meeting or recurrent meetings.

07:29.600 --> 07:33.600
It all end up with one room for one meeting.

07:33.600 --> 07:36.600
But the meeting room is a special room.

07:36.600 --> 07:42.600
It has type Nordic meetings meeting in M-Rooms create event.

07:42.600 --> 07:48.600
It also connects to the parent room, this calendar room, with M-Space child and M-Space parent events.

07:48.600 --> 07:52.600
There is one too many relationship with the meeting rooms.

07:52.600 --> 07:59.600
The meeting room has widgets and of course it has some other state events that are related to the meeting.

07:59.600 --> 08:03.600
Within the meeting room, user could create a breakout session room.

08:03.600 --> 08:07.600
It also would be a separate room, but with its own breakout session type.

08:07.600 --> 08:13.600
And it also has a connection to the meeting room where it was created.

08:13.600 --> 08:18.600
So we use message events and state events obviously from the metrics.

08:18.600 --> 08:23.600
And all the message events there are prefix weeks, not Nordic meetings prefix.

08:23.600 --> 08:27.600
So they are the events that are sent by the widget.

08:27.600 --> 08:33.600
So just to manage the meetings, to create, change permissions, pages, participants,

08:33.600 --> 08:36.600
Tomstone the meeting or send some messages.

08:36.600 --> 08:39.600
The state events are used to store the state of the meeting.

08:39.600 --> 08:44.600
Mostly there are metrics ones, but in addition there is a

08:44.600 --> 08:49.600
net Nordic meetings metadata. It contains calendar information.

08:52.600 --> 08:58.600
So this is an example of this calendar information from the meeting metadata event.

08:58.600 --> 09:03.600
So for the single meeting, it is a list of just one entry that has

09:03.600 --> 09:08.600
certain end fields with a date time stamp together with a time zone.

09:08.600 --> 09:10.600
And so it's quite simple.

09:10.600 --> 09:15.600
And for occurring, in the case like it could be excluded dates and overrides,

09:15.600 --> 09:21.600
it has besides frequency rules, it's frequency daily interval one.

09:21.600 --> 09:27.600
It has exclude dates, to exclude some particular dates from this recurrence.

09:27.600 --> 09:32.600
And as well to, it could have several overrides to change some

09:32.600 --> 09:35.600
particular occurrences of this recurrent meeting.

09:37.600 --> 09:42.600
Yeah, this is all regarding the slides and I would like to hand over to

09:42.600 --> 09:45.600
Nurjin to show some of the features.

09:45.600 --> 09:49.600
Thank you. Thank you, Mikhail. Hey, Bill. It's Nurjin.

09:49.600 --> 09:54.600
So yeah, hopefully after the all talk you'd be teased enough to see some actions, some demo.

09:54.600 --> 09:59.600
So here, me and Ahmed will try to demo quick the basic features.

09:59.600 --> 10:03.600
So yeah, first we need to create a new room.

10:03.600 --> 10:05.600
We call it a calendar room.

10:05.600 --> 10:15.600
And yeah, so we need the bot to be added to the room and give him the correct exact right as a moderator above.

10:15.600 --> 10:21.600
So the bot would be able to configure the room for us and add the widget.

10:21.600 --> 10:27.600
Yeah, here we can see the bot added the widget into the room, pinned it in the middle.

10:27.600 --> 10:38.600
Yeah, so we can schedule meetings while, yeah, here you can see there are the information that you can create for the meetings.

10:38.600 --> 10:40.600
You can add participants.

10:40.600 --> 10:46.600
You can also allow or not allow messaging in these meeting rooms.

10:46.600 --> 10:49.600
And also we have a set of configured widgets by the bot.

10:49.600 --> 10:53.600
You can add, remove whatever you want.

10:53.600 --> 10:59.600
We will create an example of a single meeting and a recurring meeting.

10:59.600 --> 11:01.600
So it's basically the same.

11:01.600 --> 11:04.600
We can add the recurring meeting.

11:04.600 --> 11:15.600
We say if it's an open-end meeting or if it's end after specific time or yeah, after specific recurrences, for example.

11:16.600 --> 11:21.600
Yeah, here we can see we have first the list view, which are the meetings are shown as cards.

11:21.600 --> 11:29.600
Each card contains the information with extra buttons for the participants and also the share meeting.

11:29.600 --> 11:37.600
We can share it with the meeting with a link or by email or we can download it and as an ICS file and important into other libraries.

11:37.600 --> 11:43.600
We are also able to edit, delete the meeting and of course go directly to the meeting room.

11:44.600 --> 11:48.600
Yeah, other than the list view, we have also this calendaring view.

11:48.600 --> 11:54.600
We have the day view, the work week and week and the monthly view.

11:54.600 --> 12:02.600
And of course in each of these views, if we click on the calendar entry, we would be able to edit the meeting.

12:02.600 --> 12:12.600
So for example, here we can try to edit the whole series by switching or just edit like the whole series or one recurrence.

12:13.600 --> 12:17.600
We can edit here one instance, for example, save.

12:17.600 --> 12:24.600
And if we go back to the calendar, so the changes are reflected into the calendar, this deviates from the others regarding timing.

12:24.600 --> 12:28.600
So we can also join the meeting.

12:28.600 --> 12:35.600
We can see that the bot already configured the room with the widgets that we chose with a specific layout configurations that we set.

12:35.600 --> 12:40.600
Here we set that new board and the JITC are now configured.

12:40.600 --> 12:46.600
We also see that the bot sends notifications to the room with every change that we make.

12:46.600 --> 12:51.600
And also besides those, we have the near-date fix details.

12:51.600 --> 12:56.600
It's basically just another detailed information about this meeting room.

12:56.600 --> 13:00.600
Also we can do other actions with it, edit it or delete it.

13:00.600 --> 13:04.600
We can also go back to the parent room of this meeting room.

13:04.600 --> 13:16.600
And as Milton already talked about the breakout sessions here in the meeting rooms, we can create breakout sessions as many as much as we would want or need.

13:16.600 --> 13:22.600
Here we can select, they are divided into groups, named defaultly by group one, group two.

13:22.600 --> 13:32.600
We can distribute the whole users randomly or we can select them manually, whichever we would like.

13:32.600 --> 13:41.600
So, yeah.

13:41.600 --> 13:44.600
Yeah, here we can see the breakout sessions are created.

13:44.600 --> 13:52.600
They are also as cards and extra we can check that we can send a message to all breakout sessions.

13:52.600 --> 14:00.600
As an organizer, you want to notify all breakout sessions, yeah, let's be back to the meeting room or whatever.

14:00.600 --> 14:02.600
So we can send it.

14:02.600 --> 14:09.600
We can go to other user and here we can see that he got all the invitations.

14:09.600 --> 14:20.600
For example, this for the daily, if we view the message maybe, or go to it, yeah.

14:20.600 --> 14:29.600
Yeah, we can, so basically the message of this invitation contains also the recurrence rules, information when it occurs and when and who you are added by.

14:29.600 --> 14:41.600
And yeah, you can see here, for example, in the breakout sessions where Alice sent hello word or hello, the, yeah, the message was sent to the room and also breakout sessions are configured with Jitsi.

14:41.600 --> 14:44.600
Yeah, I guess that's all. Thank you.

14:44.600 --> 14:50.600
I will hand over to Milton.

14:50.600 --> 14:53.600
Thank you for the demo. Hope you guys liked it.

14:53.600 --> 15:00.600
Just to finish our presentation, we have a couple of interesting things that we find that want to share with you.

15:00.600 --> 15:11.600
So the first thing is that as you imagine creating lots of meetings and these temporary users creates, I mean, it's not, it's relatively cheap to have these resources, but we want to keep things clean.

15:11.600 --> 15:27.600
So we have these additional features where you can clean up the temporary users using a signups module and also have this sort of hackish room reaper that will go through the finished meetings in the past.

15:27.600 --> 15:38.600
According to their, there's a field that will tell you tell the bots when they should be deleted and it will clean up after himself, which is a good thing.

15:38.600 --> 15:44.600
And also we have, can you move to the next slide?

15:44.600 --> 16:04.600
And also we have what we believe is a very good end to end test suite because as you may know, besides units and integration testing, end to end tests allow you to script the full interaction from the browser to the element web to the widget and how it then interacts with the bot.

16:04.600 --> 16:14.600
So we have a fully automated way to have the environments being created, tested on, then destroyed.

16:14.600 --> 16:21.600
And this is obviously a preconditioned for us to have releases when these tests pass and they covered most of the features.

16:21.600 --> 16:30.600
So if you want to see a good example of using playwrights and test containers as a way to do end to end testing, please check out the repo.

16:30.600 --> 16:34.600
There are obviously still room for improvement.

16:34.600 --> 16:44.600
We are just finishing and should have soon, should be releasing support for encrypted meeting rooms and encrypted control rooms or the calendar room.

16:44.600 --> 16:50.600
We've had a slight issue here because we are clients, requires us to deliver to this special IBM Z platform.

16:50.600 --> 16:53.600
There weren't any bindings for the crypto rust.

16:53.600 --> 16:58.600
That's the case. So we're, I think we have that in order for soon release.

16:58.600 --> 17:02.600
Also make the bot clean the rooms instead of that hacky script.

17:02.600 --> 17:09.600
Support element call also when it becomes a defect host and they're there.

17:09.600 --> 17:12.600
Also have space scoped calendars.

17:12.600 --> 17:19.600
So in the demo you saw that there's a single calendar room and it will create the meeting rooms in your top level.

17:19.600 --> 17:30.600
So if you could have it create within spaces so the meetings would be within that space and who couldn't maybe manage different teams or different groups with different calendars, that would be a good thing.

17:30.600 --> 17:41.600
And yeah, and finally we can get meetings in publishing them out to another in another calendar in client would be a great thing to wrap up.

17:41.600 --> 17:44.600
Here are some of the resources, the links to our repos.

17:44.600 --> 17:48.600
I mentioned, I think it's an open source Apache to licensed applications.

17:48.600 --> 17:51.600
So be sure to check them out.

17:51.600 --> 17:54.600
Yeah, I think we're ready for questions.

17:54.600 --> 18:01.600
Yes.

18:01.600 --> 18:08.600
There was one question on the internet. Do you have support for entry of the rooms and if not is there plans to do so?

18:08.600 --> 18:15.600
Yes. So as I said a few minutes ago, we currently don't support it, but we are soon releasing that.

18:15.600 --> 18:18.600
So it's a matter of days.

18:18.600 --> 18:28.600
And the question was do we support encrypted rooms? Sorry.

18:28.600 --> 18:30.600
Yes.

18:30.600 --> 18:36.600
Yes, this is the Neil boards. This is maybe can can you show maybe a couple of features.

18:36.600 --> 18:44.600
So this is the this is a widget that allows you to have a real time collaborative whiteboard draw.

18:44.600 --> 18:55.600
It's an initial feature set, but it's if you went or if you participated in the summer, the matrix community summit in Berlin last September, we did a full presentation.

18:55.600 --> 18:59.600
It's online. You can check it out for more details there.

18:59.600 --> 19:28.600
So the question is what is how are we implementing the invitation page when we show them to the invited user with the information about the meeting.

19:28.600 --> 19:30.600
Do you want to?

19:30.600 --> 19:40.600
Yes. So it works like first of all, in invitations, there is a message itself, but it's of course constructed just inside of a member member.

19:40.600 --> 19:45.600
There is invite text, but so it's unfortunate we didn't show it, but it's there isn't there.

19:45.600 --> 19:55.600
But besides that, there is not this metadata event, for instance, it's we configured it separately in synopsis.

19:55.600 --> 20:01.600
Share it in the strip state. So when you go to invitation, it's already shared and you can see it already in calendar.

20:01.600 --> 20:04.600
So if you have calendar as a second user, you would see it there already.

20:04.600 --> 20:09.600
So we just yeah, we added to the strip state.

20:09.600 --> 20:13.600
So it's a bit. Yeah, exactly.

20:13.600 --> 20:21.600
Did I understand correctly that it only supports.

20:21.600 --> 20:27.600
The question is if we only support jitzy meetings and not in app meetings. What do you mean by in app meetings.

20:27.600 --> 20:33.600
I mean, most of the clients have own meeting functionality.

20:33.600 --> 20:38.600
And I just wanted to give the chance to use that.

20:38.600 --> 20:44.600
So if the answer to that is if there is a widget for it, we can support it.

20:44.600 --> 20:56.600
So if there are other alternatives for video conferencing, it's a matter of just developing a widget that supports it and setting up the bot configuration to then include it in the room.

20:56.600 --> 20:59.600
It can be implemented as a separate.

20:59.600 --> 21:06.600
So if not supported as a widget, so in theory, you can develop the widget is a toolkit and edit as another widget to the meeting.

21:07.600 --> 21:17.600
Okay, the question is what is the Docker container part that I mentioned.

21:17.600 --> 21:21.600
So in order to deploy widgets, they are a web application.

21:21.600 --> 21:24.600
So they need to run on a web server.

21:24.600 --> 21:35.600
So we have this Docker file template based on engine X that it's already prepared for you to just auto include in your base Docker image.

21:35.600 --> 21:36.600
For your app.

21:36.600 --> 21:49.600
So you just instead of including Debian or node based image, you include the widget server image in your Docker file and just copy over the build release distribution assets there.

21:49.600 --> 21:52.600
That's the main accelerator for that.

21:52.600 --> 21:57.600
So it's ready to use base image for widgets.

21:57.600 --> 22:02.600
Any further questions.

22:02.600 --> 22:17.600
You can download an ICS file.

22:17.600 --> 22:25.600
The question is, can we can we integrate with Google Calendar and other calendar publishing platforms?

22:25.600 --> 22:32.600
We only support downloading in the ICS file for recurring or single instance meeting.

22:32.600 --> 22:38.600
The inner format that Mikal showed it's restoring an I cal.

22:38.600 --> 22:39.600
I cal format.

22:39.600 --> 22:42.600
So the storage is using that.

22:42.600 --> 22:47.600
But yeah, we don't export any data out currently, but that would be a good thing.

22:47.600 --> 22:49.600
The community is open source.

22:49.600 --> 22:53.600
You can contribute with support for that.

22:53.600 --> 22:54.600
As well.

22:54.600 --> 22:55.600
Yeah.

22:55.600 --> 23:03.600
If you go to maybe can go to the resources page.

23:03.600 --> 23:04.600
You can.

23:04.600 --> 23:06.600
Well, not the widget, but the Neo board.

23:06.600 --> 23:10.600
Yes, we have a live widget demo for having this.

23:10.600 --> 23:11.600
Sure.

23:11.600 --> 23:20.600
The question is, how can you can you include and use this right now in your element web client because it's a widget and the bot you have to host it somewhere.

23:20.600 --> 23:26.600
So you would need to download and deploy it to some server or VM.

23:26.600 --> 23:29.600
It's not included in this time that I don't know.

23:29.600 --> 23:36.600
And it's, yeah.

23:36.600 --> 23:37.600
Thank you.

23:37.600 --> 23:38.600
Thank you very much.

