WEBVTT

00:00.000 --> 00:10.000
Hello, welcome at the lightning talks here at Fosterman Brussels.

00:10.000 --> 00:16.000
I want to introduce to you Valerio and with us talk about Unpacked Fabricator

00:16.000 --> 00:22.000
Welcome Forge forking the optionated open source collaboration suite

00:22.000 --> 00:28.000
and give him a warm welcome and applause and the stage is yours.

00:28.000 --> 00:34.000
Thank you so much and so welcome again at Fosterman, it's Sunday morning.

00:34.000 --> 00:39.000
So thank you everybody for your time and there are some well-known communities

00:39.000 --> 00:45.000
loving Forge and I see some community members here from Mozilla, from Wikimedia

00:45.000 --> 00:51.000
and from FreeBSD. So thank you everybody and there are many curious here so

00:51.000 --> 00:57.000
I started as curious as well and so I'm Valerio, I'm a volunteer board director

00:57.000 --> 01:03.000
in Italian Linux society, some Italian members here maybe no maybe not

01:03.000 --> 01:09.000
and Wikimedia Italy take commission volunteer also both maintainer also

01:09.000 --> 01:14.000
volunteer for Wikimedia projects and I love also editing OpenStreetMap

01:14.000 --> 01:22.000
and in my personal life and at work also in Wikimedia indeed I use a fabricator

01:22.000 --> 01:28.000
and Forge intensively and so I would like to share this interest with you

01:28.000 --> 01:34.000
because I know you love Forge or fabricator so by the way why I started

01:34.000 --> 01:40.000
loving Forge in the company I work for they assist production plants about food

01:40.000 --> 01:47.000
indeed also Hazelnuts included so it seems that Italy for some reasons produces

01:47.000 --> 01:53.000
a lot of hazelnuts so if you eat hazelnuts please also thank Forge because

01:53.000 --> 01:59.000
Forge somehow handles management of hazelnuts I don't know why I've put the

01:59.000 --> 02:05.000
screen out in the slide. By the way some of us in me included started handling

02:05.000 --> 02:10.000
in weird ways software management like final version of the directory

02:10.000 --> 02:15.000
final really final really version 2 final really version 3 and indeed also the

02:15.000 --> 02:21.000
Linux kernel started in this way in 1991 it was in that way really then

02:21.000 --> 02:27.000
Bitkeeper was who knows Bitkeeper maybe some users here yeah and Bitkeeper

02:27.000 --> 02:33.000
was started as a proprietary solution to do serious software version control

02:33.000 --> 02:39.000
unfortunately is what it was a proprietary tool so then the interesting thing

02:39.000 --> 02:46.000
is that in 2005 the world exploded with free very interesting and powerful tools

02:46.000 --> 02:52.000
to manage software versioning including Git, Mercurial and GlueBazaar

02:52.000 --> 02:56.000
mostly GlueBazaar for Ubuntu you know and Mercurial is still used nowadays

02:56.000 --> 03:00.000
in some projects can you raise your hand if you use Mercurial in production

03:00.000 --> 03:05.000
for something right one two three four okay it's still alive instead you know

03:05.000 --> 03:12.000
Git it's the backbone for most things popular things and so but most people

03:12.000 --> 03:19.000
nowadays think that there is Git hub and is not aware that the backbones of the

03:19.000 --> 03:26.000
the world is also included in other tools like Mercurial and Subversion and Bazaar

03:26.000 --> 03:34.000
etc and so what about trying to discovering the platforms based on the

03:34.000 --> 03:39.000
the previous tools so it's interesting that source forge you know source forge

03:39.000 --> 03:43.000
was very popular but then Git Hub started spreading in the planet and

03:43.000 --> 03:49.000
focus it just on Git so no Mercurial no Bazaar no Subversion just on Git

03:49.000 --> 03:55.000
so from a fancy interface proprietary indeed you collaborate on software and

03:55.000 --> 04:01.000
also without knowledge of Git actually and then GitLab started as now open

04:01.000 --> 04:08.000
source and you see Fabricator in 2010 was started 14 years ago and so it's

04:08.000 --> 04:14.000
interesting to see that in this historical moment a lot of web platform

04:14.000 --> 04:20.000
for collaboration started to be widely adopted also this is maybe not so much

04:20.000 --> 04:26.000
famous Apache Allura but it was the backbone of source forge and it is

04:26.000 --> 04:32.000
to be honest and then you see forge in more recent years and Git the other

04:32.000 --> 04:40.000
platforms so by the way after the slides there are some links to do to find the

04:40.000 --> 04:45.000
data and this kind of visualization by the way Fabricator in 14 seconds what is

04:45.000 --> 04:49.000
Fabricator Fabricator was started as collaboration platform for a big blue

04:49.000 --> 04:54.000
social network a proprietary social network indeed and as you know this kind

04:54.000 --> 04:59.000
of big projects needs many repositories many software version controls like

04:59.000 --> 05:06.000
Mercurial why not let's use Mercurial and many many many people many

05:06.000 --> 05:15.000
many emails because as you see as you can see source forge started in 1999 but

05:15.000 --> 05:21.000
in the middle of nothing the web was not created GitLab was not created so you

05:21.000 --> 05:26.000
know that also nowadays some teams collaborate with emails so you send

05:26.000 --> 05:32.000
patches of emails somebody receives the email and so it's still something already

05:32.000 --> 05:40.000
done somewhere and also in that period so in 2010 even pricey created Fabricator

05:40.000 --> 05:46.000
to avoid this kind of workflows email based and so let's stop sending emails

05:46.000 --> 05:51.000
everywhere let's start having a web application called Fabricator and so

05:51.000 --> 05:56.000
Fabricator was started and adopted by Facebook Mozilla and Wikimedia

05:56.000 --> 06:03.000
Foundation that is maybe a really really active and lovely platform for looking

06:03.000 --> 06:10.000
at how powerful Fabricator is and unfortunately just to keep this really

06:10.000 --> 06:14.000
really clear and short Fabricator was no longer actively maintained this is

06:14.000 --> 06:19.000
strange for open-source software and sometimes we see companies closing the

06:19.000 --> 06:27.000
project this is not the case just they stopped working on it and so you may

06:27.000 --> 06:32.000
ask okay but why nowadays we should continue to fork Fabricator because they

06:32.000 --> 06:37.000
stopped any contribution so why we should continue this development

06:37.000 --> 06:42.000
why we should create something new called forge and well I would like to say that

06:42.000 --> 06:47.000
forge has a lot of weird features but it's very easy to host if you know how to

06:47.000 --> 06:52.000
install a Jumla or our press for a Drupal you already probably know how to

06:52.000 --> 06:59.000
install forge because it's really a matter of that and also try to install

06:59.000 --> 07:05.000
a GitLab owner Raspberry PI right right I have tried many times it's not you

07:05.000 --> 07:12.000
have you need some computational resources for large platforms like

07:12.000 --> 07:17.000
GitLab or something like that instead forge require minimal resources and

07:17.000 --> 07:23.000
this is really interesting and also attractive for some some some users of

07:23.000 --> 07:28.000
forge and Fabricator because I like that the bug tracker of forge and Fabricator

07:28.000 --> 07:34.000
is non repository centric I mean if you are on GitLab you need first a repository

07:34.000 --> 07:40.000
and then attach issues but on forge instead you just have issues and then you

07:40.000 --> 07:46.000
attach tags I don't know so you have an issue about my computer exploded so you

07:46.000 --> 07:50.000
attach some tags related to infrastructure related to Valerio that has a

07:50.000 --> 07:55.000
dedicated tag or attached a tag dedicated to Linux I don't know and then you

07:55.000 --> 08:01.000
can have a sub task without anything related like let's buy another computer

08:01.000 --> 08:07.000
for this person that has the laptop completely exploded so with a tag like

08:07.000 --> 08:12.000
so I don't know a shopping center for computer materials so this is the

08:12.000 --> 08:17.000
thing you don't need to be a developer to have issues on forge you just need

08:17.000 --> 08:23.000
to file a task and then attach tags and this is really interesting for

08:23.000 --> 08:28.000
companies and for organizations that because it's not really not everything

08:28.000 --> 08:34.000
can be filed in repositories in time and so I like it honestly also a killer

08:34.000 --> 08:39.000
feature is honestly that you can host Git subversion and Mercurial repositories

08:39.000 --> 08:44.000
all in one place you see your history you see your things and I see that this

08:44.000 --> 08:48.000
is also a killer feature in my company we have a couple of Mercurial repositories

08:48.000 --> 08:53.000
very legacy and why not keeping them alive so you can see the history you can

08:53.000 --> 08:59.000
see so we avoid any migration we avoid anything that we just have them there

08:59.000 --> 09:07.000
archived it's amazing also you can another nice thing is somehow different

09:07.000 --> 09:12.000
that nowadays trends is a local linting and local unit testing so your

09:12.000 --> 09:18.000
developer has facilities to have very easy local hints and local unit tests

09:18.000 --> 09:24.000
with results mirrored on the website on the patch page and this is also to speed

09:24.000 --> 09:30.000
up development because we have not to wait for a remote to build there to do

09:30.000 --> 09:35.000
those things in hours I don't know your laptop is often faster for most tasks

09:35.000 --> 09:42.000
sometimes and it encourages forking this is not banal most software like

09:42.000 --> 09:47.000
WordPress like jumella like github like whatever online platform you can think

09:47.000 --> 09:54.000
about with whatever different user use case or is often read only for production

09:54.000 --> 09:59.000
you download it if you have a change you have to download a completely different

09:59.000 --> 10:04.000
copy from git and start doing things instead for has not any difference

10:04.000 --> 10:10.000
between the relays and the development branch you just get pulled the bring the

10:10.000 --> 10:15.000
development branch of forge and that is your production you check out the stable

10:15.000 --> 10:22.000
that it's online you don't have to compile anything or so it's very easy to fork

10:22.000 --> 10:30.000
and people do that and so you may be you may know this this was the first component

10:30.000 --> 10:35.000
of a breakator historically and so people stop it to collaborate over emails

10:35.000 --> 10:40.000
and started collaborating online with this face interface and then they introduce

10:40.000 --> 10:44.000
at the work board so and in gitlab take an inspiration from from a

10:44.000 --> 10:49.000
fabricator to have their interface there is a really nice article from gitlab

10:49.000 --> 10:54.000
if you search for if you look for gitlab and fabricator online on the official

10:54.000 --> 10:59.000
website of gitlab they are very lowly in about describing how they take inspiration

10:59.000 --> 11:06.000
from fabricator so as I already said this is a work board not development oriented

11:06.000 --> 11:11.000
for example this is just about a single tag dedicated to fundraising backlog

11:11.000 --> 11:16.000
related to Wikimedia foundation and not related to a repository so you don't

11:16.000 --> 11:24.000
have to create a dummy repository just to work on like this and another thing

11:24.000 --> 11:31.000
I like of related to forge and fabricator is that you can have custom forms to create tasks

11:31.000 --> 11:36.000
and issues and whatever so you can have a simple form to ask people simple things

11:36.000 --> 11:41.000
and just okay if you know some tags put some tags but or just the title it's maybe

11:41.000 --> 11:47.000
just okay to organize your work or maybe have a nightmare form with a super

11:47.000 --> 11:53.000
detailed the fields about whatever aspect of your of your issue or your idea

11:53.000 --> 11:59.000
maybe you want your task visible only to yourself so you prepare the stub and then

11:59.000 --> 12:05.000
you release the issue so you maybe you want the task disabled just by you and your boss

12:05.000 --> 12:10.000
and your co-workers cannot edit anything this is a bit weird sometimes but it's

12:10.000 --> 12:16.000
very very powerful in in about how to managing permissions visibility and this

12:16.000 --> 12:24.000
kind of things and also another thing I like it is that once in search is really

12:24.000 --> 12:28.000
is really an advanced search so you find all the fields or custom fields if you

12:28.000 --> 12:34.000
added a custom field on your issue tracker you can on forge at the custom field

12:34.000 --> 12:39.000
like a favorite dinosaur I don't know and you find that field on the search engine

12:39.000 --> 12:45.000
indexed and ready to scale so the user has already all the fields on the

12:45.000 --> 12:51.000
advanced search and that you can organize the full search for your teams and

12:51.000 --> 12:57.000
organize all the full searches in your website easy to access and this kind of

12:57.000 --> 13:03.000
things also I like the calendar honestly in the company work for these a lot of

13:03.000 --> 13:09.000
this feature to for example they they had a Google calendar to plan each one

13:09.000 --> 13:15.000
I think if I am on for them I was filing a Google calendar with Valerius on

13:15.000 --> 13:22.000
for them instead now we have whatever calendar each worker has imported in

13:22.000 --> 13:28.000
forge so everyone see each one calendar and integrated in forge and this is also

13:28.000 --> 13:36.000
I think also another powerful tool is a herald herald is a is a strange to have

13:36.000 --> 13:41.000
a definition of herald but it's kind of have conditions and do actions so for

13:41.000 --> 13:46.000
example here you can tell to herald hey herald please in my forge installation

13:46.000 --> 13:54.000
if somebody does a commit please if the branch is my main and if a file is

13:54.000 --> 14:00.000
called foo.txt please send me an email or send or block the commit or add an

14:00.000 --> 14:05.000
auditor or I don't know and you can do really really advanced things like

14:05.000 --> 14:12.000
blocking people with very weird messages and so don't do this please read the

14:12.000 --> 14:18.000
documentation don't push directly master I don't know so also it's really

14:18.000 --> 14:24.000
really extensive as I already said this because it has a component to generate

14:24.000 --> 14:30.000
memes it has no sense but if you are frustrated at work you have 60 seconds

14:30.000 --> 14:35.000
to deploy in production you want to say that their vision is just good so let's

14:35.000 --> 14:40.000
approve their vision and you want just to say seems good to me just to say seems

14:40.000 --> 14:48.000
good to me and generate your automatic meme and so really I cannot describe

14:48.000 --> 14:54.000
all the platform in 15 minutes please visit with foo.txt this is a low platform

14:54.000 --> 15:00.000
to be honest in my opinion we need designers we are not so much skilled

15:00.000 --> 15:06.000
in designing to be honest but we are PHP developers somehow skilled in how well

15:06.000 --> 15:11.000
done PHP application should be done and so if you would like to contribute to

15:11.000 --> 15:20.000
maybe FlatHub or Docker image to speed up the deployment to forge on a

15:20.000 --> 15:27.000
production and development form you are welcome and so thank you for your time

15:27.000 --> 15:32.000
and thank you for your interest in forging for your interest in Xfabricator

15:32.000 --> 15:36.000
and let's continue this journey

15:36.000 --> 15:40.000
okay thank you very much

