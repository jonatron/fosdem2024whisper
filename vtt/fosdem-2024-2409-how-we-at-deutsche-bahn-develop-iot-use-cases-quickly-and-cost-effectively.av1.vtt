WEBVTT

00:00.000 --> 00:05.000
Okay.

00:05.000 --> 00:11.000
Yeah.

00:11.000 --> 00:12.000
So great.

00:12.000 --> 00:14.000
We managed to set up everything.

00:14.000 --> 00:16.000
We have a demo, so we needed to do this.

00:16.000 --> 00:23.000
So without further ado, I'm very happy that Olga is here to tell us a little bit about the ISU case and what it's done.

00:23.000 --> 00:31.000
A little bit of less time, so please condense it as much as you can, but take your time.

00:31.000 --> 00:32.000
Yeah.

00:32.000 --> 00:33.000
Thank you very much.

00:33.000 --> 00:38.000
I will give my best that we just in time arrived to finish off this lot.

00:38.000 --> 00:40.000
But let us start.

00:40.000 --> 00:48.000
My name is Horace Koch and I'm working for DB Suster, the IT company of Deutsche Bahn.

00:48.000 --> 00:53.000
And I'm the product owner of IoT. We works with applied IoT.

00:53.000 --> 01:02.000
And if I make not IoT, then I'm a member of Aka Open Source of Bitcoin, the chairman take a look.

01:02.000 --> 01:09.000
Digital association, Bitcoin and pushing forward the open source ID.

01:09.000 --> 01:14.000
And some words about my employer.

01:14.000 --> 01:25.000
The visitor is a 100 person subsidiary of Deutsche Bahn AG and is the digitalization partner for all Deutsche Bahn companies.

01:25.000 --> 01:33.000
And we have currently 7000 employees and managed over 500 projects and services in the cloud.

01:33.000 --> 01:38.000
And if you are looking for a new challenge, please take a look at dbd.com.

01:38.000 --> 01:42.000
Okay, let's start.

01:42.000 --> 01:44.000
What is Internet of Things?

01:44.000 --> 01:51.000
Here's the definition from the Wikipedia, but I would like to describe it with my own words.

01:51.000 --> 02:01.000
The aim of things, the aim of Internet of Things is to measure some conditions in the real world and to link and evaluate it.

02:01.000 --> 02:08.000
And this information and ultimately to derive the measures from it.

02:08.000 --> 02:22.000
And we have unfortunately only a little time, but I will try to give you a very deep insight in practical usage of IoT and for example,

02:22.000 --> 02:29.000
so we realize a practical project in this talk.

02:29.000 --> 02:34.000
We would like to measure the air quality inside of this room.

02:34.000 --> 02:40.000
And yeah, I think also it's a quite funny topic.

02:40.000 --> 02:44.000
And yeah, we will touch the theme.

02:44.000 --> 02:47.000
Where can I get the sensors?

02:47.000 --> 02:49.000
How can I transmit the data?

02:49.000 --> 02:55.000
And finally, how will be this process stored and visualized and so on.

02:55.000 --> 02:57.000
So let's start with the sensors.

02:57.000 --> 03:01.000
Where do the sensors come from?

03:01.000 --> 03:08.000
Yeah, after understanding the customer's problem and determining suitable matrix,

03:08.000 --> 03:16.000
the question arise which sensors can be used to reliable determine the matrix.

03:16.000 --> 03:22.000
And normally we try to buy this from the market, use standard sensors,

03:22.000 --> 03:28.000
but from time to time there are no sensors available for this topic.

03:28.000 --> 03:36.000
And then we give contracts to our DB company, DB-Con T, or DB System Technique,

03:36.000 --> 03:42.000
or maybe external partners to develop the sensoric after our specifications.

03:42.000 --> 03:50.000
And from time to time we make some in-house development and for this we use some sensor platforms.

03:50.000 --> 03:55.000
For example, other foods, fever, V-MOS, or Tinkerforge.

03:55.000 --> 04:01.000
For our project to measure the air quality inside of this room, we use the Tinkerforge

04:01.000 --> 04:10.000
and take a look inside the portfolio from Tinkerforge and found two interesting sensors.

04:10.000 --> 04:13.000
One is the air quality bricklet.

04:13.000 --> 04:22.000
This sensor measures the air temperature pressure, humidity, and an air quality index.

04:22.000 --> 04:31.000
The air quality index measures some gases and other values and gives us a calculated value for this.

04:31.000 --> 04:35.000
And the second sensor is a particulate metal bricklet.

04:35.000 --> 04:45.000
This measures the particles inside of the air, for example fine dust.

04:45.000 --> 04:52.000
Both sensors are connected to the master brick and the master brick makes the communication

04:52.000 --> 04:57.000
between my laptop and both sensors and we can now take a look.

04:57.000 --> 05:03.000
I connect it to my laptop and hopefully you can see this.

05:03.000 --> 05:14.000
We fire up the Tinkerforge bricklet fever, making a connect and we see all the bricklets and bricks.

05:14.000 --> 05:22.000
They are connected together and we can see some values from it.

05:23.000 --> 05:30.000
Without code, some lines or something, you can make first analysis.

05:30.000 --> 05:35.000
Is this possible to measure with this sensoric the right values?

05:35.000 --> 05:40.000
And is this worth to go further on?

05:40.000 --> 05:46.000
Okay, let's go back to the presentation.

05:46.000 --> 05:48.000
The next step is connectivity.

05:48.000 --> 05:52.000
How was the data sent to our back end systems?

05:52.000 --> 06:00.000
And for this, there are a lot of transmission protocols in the IoT environment available.

06:00.000 --> 06:04.000
Here are the four important protocols.

06:08.000 --> 06:16.000
But it's really difficult to take the right one because some need further infrastructure.

06:16.000 --> 06:24.000
For example, gateways or other costs, monthly pay or something.

06:24.000 --> 06:36.000
And you also must look for data, for example, bandwifes, coverage, energy consumption and so on.

06:36.000 --> 06:41.000
For our example, we only use the Wi-Fi connection of my laptop.

06:41.000 --> 06:43.000
So it's really easy.

06:43.000 --> 06:53.000
Normally, we use NeoBand IoT because we can't use the standard one.

06:53.000 --> 07:03.000
And NeoBand IoT based on LTE is more or less available.

07:04.000 --> 07:07.000
Okay, we use the MQTT protocol.

07:07.000 --> 07:12.000
MQTT is more or less a producer-consumer model.

07:12.000 --> 07:17.000
The producer writes some data into a topic.

07:17.000 --> 07:22.000
On the message broker, a topic is directory structure also.

07:22.000 --> 07:27.000
And the consumers can subscribe exactly this directory, this topic.

07:27.000 --> 07:33.000
And if the producer sends some data, the consumer can read it.

07:33.000 --> 07:37.000
Or got it pushed from the message broker immediately.

07:37.000 --> 07:42.000
Okay, we use AWS Core IoT for this.

07:42.000 --> 07:45.000
And there is a product IoT Core.

07:45.000 --> 07:56.000
And IoT Core is a perfect MQTT broker for us because it's full-managed and co-ops, auto-skating.

07:56.000 --> 08:00.000
And so on, and you have to work with this.

08:00.000 --> 08:05.000
Okay, then let's take a closer look into the code of this.

08:05.000 --> 08:11.000
I'm not a programmer, but it's so easy, anybody can work with this.

08:11.000 --> 08:18.000
Tinkerforge has a lot of examples, and it's more or less intelligent copy and paste.

08:18.000 --> 08:23.000
You take an example, you write a unique ID for every sensor,

08:23.000 --> 08:28.000
so you can connect more air quality index sensors together or something.

08:28.000 --> 08:34.000
Anybody has his own ID, imports some libraries, and here is the important part.

08:34.000 --> 08:40.000
We take our certificates for the MQTT protocol communication,

08:40.000 --> 08:51.000
and we create two callback functions, one for the air quality sensor and one for the particular meta sensor.

08:51.000 --> 08:59.000
And here you can see it's easy, one call to libraries,

08:59.000 --> 09:03.000
and you get all information from the sensors.

09:03.000 --> 09:09.000
Here we have a little bit formatting, print out, or write it to MQTT.

09:09.000 --> 09:12.000
The same for the particular meta sensors.

09:12.000 --> 09:17.000
It's really easy, there are examples everywhere available for this.

09:17.000 --> 09:23.000
And we can fire up this.

09:23.000 --> 09:28.000
We start this Python program, and here we can see the values.

09:28.000 --> 09:34.000
The values will be formatted into a JSON format and then sent to our MQTT program.

09:34.000 --> 09:39.000
Okay, let's come back to Fing Sport.

09:39.000 --> 09:44.000
Fing Sport is a relatively new software, it started in 2016,

09:44.000 --> 09:56.000
but in shortly the time it's more or less the market leader in open source IOT platforms.

09:56.000 --> 10:01.000
One question around, who has any heard from Fing Sport?

10:02.000 --> 10:04.000
One, two, three.

10:04.000 --> 10:07.000
Okay, perfectly.

10:07.000 --> 10:12.000
It's an open source software with open Apache license,

10:12.000 --> 10:17.000
and it is all in one solution.

10:17.000 --> 10:23.000
All aspects of IOT is available, API agree,

10:23.000 --> 10:30.000
so it's really easy to configure your system and so on,

10:30.000 --> 10:33.000
reporting, scheduling, visualization, and so on.

10:33.000 --> 10:36.000
And the best thing is the root chain.

10:36.000 --> 10:39.000
The root chain is a little bit like Node-RED,

10:39.000 --> 10:45.000
and there you can configure whatever you want to control a backend system.

10:45.000 --> 10:50.000
For example, if the error is too bad, then open the window.

10:51.000 --> 10:56.000
Okay, next step, it's always a good idea if you use an open source software

10:56.000 --> 10:59.000
to take a look at an open hub.

10:59.000 --> 11:02.000
And here are...

11:05.000 --> 11:07.000
Oh, five minutes left.

11:07.000 --> 11:11.000
Okay, it's a good software, it's perfect, insecure.

11:11.000 --> 11:15.000
It's a microservice architecture,

11:15.000 --> 11:19.000
and it's really easy to install it.

11:19.000 --> 11:26.000
And I will show you a little demo.

11:26.000 --> 11:30.000
Okay, here's our Fing Sport system.

11:30.000 --> 11:35.000
I fired up, and first we must create an integration.

11:35.000 --> 11:40.000
Integration is the part to subscribe an MQTT topic from the pro-car.

11:40.000 --> 11:43.000
Maybe you remember.

11:43.000 --> 11:47.000
I prepared it before, so I don't make it now.

11:47.000 --> 11:51.000
And the next way to create a converter,

11:51.000 --> 11:55.000
a converter is for preparation of the data.

11:55.000 --> 11:58.000
Sometimes the data are in grad Fahrenheit,

11:58.000 --> 12:02.000
and you would like to do it in grad Celsius or something,

12:02.000 --> 12:11.000
so you can prepare the data for the storage and so on.

12:11.000 --> 12:15.000
Okay, dashboard.

12:15.000 --> 12:22.000
So we try to create a new dashboard first.

12:22.000 --> 12:30.000
It's insert, and we add a new widget, temperature, temperature,

12:30.000 --> 12:33.000
and a quality sensor.

12:33.000 --> 12:38.000
We select the device from which we would like to visualize the data

12:38.000 --> 12:44.000
and which data case we want, a quality index,

12:44.000 --> 12:52.000
and for the first step we would like the temperature.

12:52.000 --> 12:58.000
And go on, and so we create our first widget on our dashboard,

12:58.000 --> 13:07.000
and this you should be repeat sometimes, and then it looks so.

13:07.000 --> 13:13.000
Okay, I let it running, and we take a look in three minutes on it.

13:14.000 --> 13:18.000
Because the system needs some minutes to measure the correct values,

13:18.000 --> 13:22.000
the sensor is a little bit of self-calibrating.

13:22.000 --> 13:26.000
Okay, we come back to our presentation,

13:26.000 --> 13:29.000
and I would like to speak about some use cases.

13:29.000 --> 13:32.000
From time to time we make some IoT hackathon,

13:32.000 --> 13:37.000
for example with our customers to better understand their requirements

13:37.000 --> 13:48.000
or to find possible solution very quickly and to make some tests with this.

13:48.000 --> 13:56.000
And from time to time we make this also for HR to get new employees

13:56.000 --> 14:01.000
or to work with studies, for example,

14:01.000 --> 14:06.000
some digital resummon school or similar events.

14:06.000 --> 14:13.000
Okay, here's an example of our environmental sensor.

14:13.000 --> 14:19.000
For example, this is measuring temperature, humidity, pressure,

14:19.000 --> 14:23.000
and the best is it measures the particles.

14:23.000 --> 14:29.000
The count of the particles in the air and the mass of the particles

14:29.000 --> 14:32.000
and vibrations.

14:32.000 --> 14:39.000
And why we make this,

14:39.000 --> 14:46.000
some employees, some colleagues of digital signal boxes told us

14:46.000 --> 14:52.000
maybe there's a connection between pollution, fine dust and so on,

14:52.000 --> 14:58.000
and air hours occurred in our signal boxes.

14:58.000 --> 15:03.000
And I have here a screenshot, it's really actual.

15:03.000 --> 15:09.000
Did anybody has ID, what is wrong with this?

15:09.000 --> 15:12.000
Okay, it's difficult to see.

15:12.000 --> 15:15.000
New year, exactly.

15:15.000 --> 15:22.000
20 minutes after New Year's Eve we have a massive growing up,

15:22.000 --> 15:24.000
defined us in our signal boxes.

15:24.000 --> 15:28.000
Nobody knows how can it be.

15:28.000 --> 15:32.000
At the moment 300 sensors are rolled out,

15:32.000 --> 15:40.000
but 50, 15, 20 signal boxes shows this.

15:40.000 --> 15:45.000
And now we have to make some evaluation, how can it be,

15:45.000 --> 15:50.000
and maybe it's a good idea to power off the air condition

15:50.000 --> 15:53.000
or the ventilation system or something,

15:53.000 --> 15:58.000
or take a look at the windows open, what is wrong with this.

15:58.000 --> 16:05.000
And here is another example, another use case, PESC.

16:05.000 --> 16:13.000
Okay, PESC control, we can measure the red visits

16:13.000 --> 16:19.000
and so we can reduce the amount of very toxic baits.

16:19.000 --> 16:24.000
And another example, Samurai,

16:24.000 --> 16:28.000
things what is a perfect open source software

16:28.000 --> 16:33.000
if you like to realize IoT project really cost efficiency.

16:33.000 --> 16:35.000
Okay, thank you very much.

16:35.000 --> 16:42.000
APPLAUSE

16:42.000 --> 16:46.000
We don't have time for questions, but I do want to see the diagram.

16:46.000 --> 16:48.000
Yeah, yeah, yeah.

16:48.000 --> 16:52.000
What does it mean?

16:52.000 --> 16:54.000
Please?

16:54.000 --> 16:56.000
What does it mean?

16:56.000 --> 16:59.000
What does it mean?

16:59.000 --> 17:01.000
Yeah.

17:01.000 --> 17:03.000
No, no, no, no, no, no.

17:03.000 --> 17:09.000
This is below 50, it's really good.

17:09.000 --> 17:16.000
But I think I'm not sure how long does it take

17:16.000 --> 17:20.000
until the sensor is recalibrating.

17:20.000 --> 17:22.000
Yeah, yeah, yeah.

17:22.000 --> 17:27.000
I think the air is too poor for this value,

17:27.000 --> 17:30.000
so maybe we should wait half an hour or so.

17:30.000 --> 17:32.000
Okay.

17:32.000 --> 17:34.000
Okay.

17:34.000 --> 17:36.000
Thank you very much.

17:36.000 --> 17:38.000
Thank you.

17:38.000 --> 17:40.000
And this thing was bought.

17:40.000 --> 17:42.000
Yeah, is it a bit like this?

17:42.000 --> 17:45.000
Yeah, the next thing you do is get up.

17:45.000 --> 17:51.000
Basically, it's a competition to open up and all the other stuff.

17:51.000 --> 17:54.000
Now, open up is more or less...

