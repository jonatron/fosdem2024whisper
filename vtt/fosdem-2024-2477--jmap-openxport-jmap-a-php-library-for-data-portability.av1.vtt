WEBVTT

00:00.000 --> 00:10.000
All right, we head on with the next talk.

00:10.000 --> 00:12.000
All right.

00:12.000 --> 00:15.000
Floss is yours, yours.

00:15.000 --> 00:21.000
So let's wait for the room to cool down a bit.

00:21.000 --> 00:26.000
So I'm one of the lucky ones having only five minutes for my talk.

00:26.000 --> 00:28.000
So I'm going to keep it very brief.

00:28.000 --> 00:30.000
I hope you can hear me.

00:30.000 --> 00:32.000
Good. So I'm Joris.

00:32.000 --> 00:34.000
I work at Rodrigo.

00:34.000 --> 00:38.000
We do quite a lot of work on data portability.

00:38.000 --> 00:41.000
And that's how we came to JMAP.

00:41.000 --> 00:46.000
So Ricardo already did a quite good job of, well, presenting what it's all about.

00:46.000 --> 00:51.000
For us, the main thing what we wanted for is having a unified API.

00:51.000 --> 00:56.000
So I think there was one slide where he said we add files and calendars and contacts

00:56.000 --> 00:59.000
and whatnot, own extensions for that.

00:59.000 --> 01:02.000
And it's really well for that, actually.

01:02.000 --> 01:09.000
Yeah. So I'm just going to skip that slide because I don't have much time.

01:09.000 --> 01:11.000
Yes.

01:11.000 --> 01:17.000
So in the end, one thing that was not mentioned in the previous talk is that

01:17.000 --> 01:24.000
JMAP, the JMAP calendars and JMAP contacts is built upon Cardiff and Kaldiff,

01:24.000 --> 01:28.000
which themselves, they build upon iCalendar and vCard.

01:28.000 --> 01:32.000
So there is a replacement, a modern replacement for iCalendar and vCard,

01:32.000 --> 01:34.000
called JS Calendar and JS Contact,

01:34.000 --> 01:37.000
and a modern replacement for Cardiff-Kaldiff,

01:37.000 --> 01:40.000
which is called JMAP Contacts and JMAP Calendars.

01:40.000 --> 01:46.000
And that's what we are mostly using heavily.

01:46.000 --> 01:54.000
And yeah, in addition to a bunch of other data types that we also added.

01:54.000 --> 02:00.000
So the work that we did is we, first of all, we have a client, we have a server.

02:00.000 --> 02:06.000
We move data from one service to another, data portability.

02:06.000 --> 02:11.000
So the client is using, it's a Java client.

02:11.000 --> 02:14.000
So we collaborate with Danny Gulch here.

02:14.000 --> 02:19.000
We have added a lot of features to the library already.

02:19.000 --> 02:24.000
We still need to work out how to combine that well with what is already there,

02:24.000 --> 02:29.000
because we also would like to see that the JMAP Java library is the go-to library

02:29.000 --> 02:34.000
for JMAP in the Java world.

02:34.000 --> 02:39.000
And on the other side, on the server side, we have our own software.

02:39.000 --> 02:45.000
It's called JMAP Open Export, which basically makes it very,

02:45.000 --> 02:50.000
or is supposed to make it very easy to add a JMAP API to PHP-based systems.

02:50.000 --> 02:53.000
We already added support for quite a lot of data types,

02:53.000 --> 02:59.000
or verticals, files, calendars, contacts, and so on.

03:00.000 --> 03:09.000
So it can also be used to lift files that are on a...

03:09.000 --> 03:15.000
It's an ongoing project that you could attach a JMAP API to files

03:15.000 --> 03:22.000
that are somewhere on a server, and then you can migrate those away.

03:22.000 --> 03:26.000
And obviously, we support JS Contact and JS Calendar.

03:26.000 --> 03:30.000
There is an RFC in progress right now to convert...

03:30.000 --> 03:33.000
RFC for JS Contact and VCAD is already existing.

03:33.000 --> 03:37.000
How to convert between those two, and another one is work in progress

03:37.000 --> 03:40.000
to convert between iCalendar and JS Calendar,

03:40.000 --> 03:45.000
so it's to make it easy for developers to start with those formats.

03:45.000 --> 03:50.000
Yeah, so basically, that's what we extended.

03:51.000 --> 03:56.000
Right now, we have a JMAP API for NextCloud, RunCube,

03:56.000 --> 03:59.000
and Ancient System Squirrel Mail,

03:59.000 --> 04:02.000
and Horder is more or less Ancient System, I would say.

04:02.000 --> 04:07.000
Yeah, we already use it in large-scale migration projects

04:07.000 --> 04:09.000
with a lot of users.

04:09.000 --> 04:14.000
Yeah, so let's finish with the last slide out of time.

04:14.000 --> 04:19.000
Yeah, so there's also a JMAP Dart client from LinaGora

04:19.000 --> 04:22.000
that we are extending currently,

04:22.000 --> 04:27.000
and building a JMAP CLI around that.

04:27.000 --> 04:31.000
Yes, so there are also other specifications that you could read upon.

04:31.000 --> 04:34.000
Didn't finish quite in time, I'm sorry for that.

04:34.000 --> 04:36.000
Oh, fine, thank you.

04:36.000 --> 04:49.000
Looking around, here's one.

04:49.000 --> 04:53.000
How many lines of code is your Java JMAP client,

04:53.000 --> 04:58.000
and what does it require in direct dependencies?

04:58.000 --> 05:02.000
So we might even relay it to the next speaker, I think.

05:02.000 --> 05:06.000
Yeah, but our client is quite big, actually,

05:06.000 --> 05:10.000
but it's a library that we're using, which is quite lean, I would say.

05:10.000 --> 05:20.000
Now I don't feel bad at all.

05:20.000 --> 05:22.000
Any further questions?

05:22.000 --> 05:25.000
Otherwise, I think the next speaker may come,

05:25.000 --> 05:29.000
which is actually Daniel Gutsch, the author of the state,

05:29.000 --> 05:32.000
the JMAP Java library, and some tools.

