WEBVTT

00:00.000 --> 00:13.880
Okay, next up we have Stéphane who will be talking to us about his project to build an

00:13.880 --> 00:16.200
open source Braille printer.

00:16.200 --> 00:20.840
So please give a warm welcome to Stéphane.

00:20.840 --> 00:26.000
Hello everybody.

00:26.000 --> 00:28.000
Thank you for attending this session.

00:28.000 --> 00:37.000
We are here to talk about a project, an open source open hardware project which is called Braille Wrap.

00:37.000 --> 00:50.000
And we will explain the story of the project, basically the technical subtlety of the machine.

00:50.000 --> 01:00.000
And talking about some questions the machine is asking to us.

01:00.000 --> 01:04.000
First we will talk a little about Braille.

01:04.000 --> 01:14.000
Braille has been imagined in 1829 by Louis Bray, he is a French guy.

01:14.000 --> 01:25.000
We build a system with six dots grid that you can read with your finger.

01:25.000 --> 01:40.000
It's a tactile system for excited people with a well defined dimension that you must respect if you want to call it Braille.

01:41.000 --> 01:51.000
Basically each combination of the six dots correspond to a letter in the alphabet.

01:51.000 --> 01:54.000
Very simple.

01:54.000 --> 02:04.000
But with six dots you have a very limited combination for a style.

02:04.000 --> 02:10.000
So every country in the world have adopted a different system.

02:10.000 --> 02:17.000
The grid of six dots remain but the signification is slightly different.

02:17.000 --> 02:27.000
Even from French or from English, for a basic letter you can have the same.

02:27.000 --> 02:33.000
A is just one dot in French, just one dot in English.

02:33.000 --> 02:39.000
If you have a capital A this is slightly different.

02:39.000 --> 02:45.000
If you have a number it's different in French and in English.

02:46.000 --> 03:03.000
About that, making Braille documents is a subject, a topic in the maker's movement a long time ago.

03:03.000 --> 03:13.000
You have many projects in open source movement to make Braille documents or Braille labels.

03:14.000 --> 03:19.000
I think the first one was Braille Go.

03:19.000 --> 03:26.000
It was a teenager who built Braille and Bosse with Lego bricks.

03:26.000 --> 03:35.000
You have also open Braille from Carlos Campos.

03:35.000 --> 03:43.000
This was a project with a recycled printer.

03:43.000 --> 03:53.000
Many of these projects were successful because you can use it to produce Braille documents.

03:53.000 --> 04:00.000
But they are proof of concept because they are very hard to reproduce.

04:00.000 --> 04:11.000
If you want to build a Braille Go you have one or two pages of documents of how to build it.

04:11.000 --> 04:17.000
If you want to build a system from Carlos Campos, open Braille,

04:17.000 --> 04:26.000
you need to find the good old printer and deal with his document to produce it.

04:30.000 --> 04:38.000
In 2016, my name is Kit. It's a French nonprofit organization.

04:38.000 --> 04:48.000
Basically it's a fab lab oriented to technical solutions for disables.

04:48.000 --> 04:56.000
They start to test making Braille with different solutions.

04:56.000 --> 05:09.000
In Hackathon, they customized a 3D printer just putting a Braille needle at the end of the 3D printer.

05:09.000 --> 05:18.000
They write a piece of software to translate text into Braille and the Braille into G code.

05:18.000 --> 05:25.000
This was functioning about an hour.

05:25.000 --> 05:40.000
You need to customize your printer and you always need to do things for the device to continue functioning.

05:40.000 --> 05:45.000
It's based on 3D printer so it's not very fast.

05:45.000 --> 05:54.000
Just to make a dot, you have a stepper motor so it takes some time to push the paper.

05:54.000 --> 06:06.000
If you need to make 600 Braille dots on a piece of paper, it takes about an hour.

06:06.000 --> 06:23.000
In 2018, we take all this project, think it's proof of concept, and start a project.

06:23.000 --> 06:28.000
Open source.

06:28.000 --> 06:34.000
Actually Braille is less than 1.2.

06:34.000 --> 06:37.000
Easy to build in a fab lab.

06:37.000 --> 06:46.000
The idea was to have a device that everyone can build, not to have the better device of the world.

06:46.000 --> 07:08.000
With widely available parts, we wanted to have something that not very specific parts that will be hard to approximate.

07:09.000 --> 07:16.000
The first point of the project was how to make Braille dots.

07:16.000 --> 07:28.000
All the projects we have seen are using a Braille needle, pushing the paper on some kind of soft material.

07:28.000 --> 07:33.000
Sometimes a mouse pad, sometimes a piece of plastic.

07:33.000 --> 07:41.000
They always use stepper motors or something like that.

07:41.000 --> 07:54.000
We think that using a solid needle would be a better choice because they are strong, fast, cheap, and you just have to make an on-off.

07:54.000 --> 07:57.000
It's really easy to operate.

07:57.000 --> 08:12.000
We put a Braille needle at the end of the solenoid, and it's working incredibly well if you put an anvil on the other side of the paper.

08:12.000 --> 08:22.000
You have the solenoid on the bottom with the Braille needle at the top.

08:22.000 --> 08:27.000
We have the sheet of paper on the other side.

08:27.000 --> 08:38.000
You have just an anvil just to control the shape of the dots you are making.

08:38.000 --> 08:44.000
Once you have that, you have a tool to make Braille dots.

08:44.000 --> 08:51.000
You just need to move the tool around the paper sheet.

08:51.000 --> 08:56.000
You just need to have an X and Y system.

08:56.000 --> 08:59.000
This is a very standard design.

08:59.000 --> 09:05.000
Every numerical machine, 3D printers, CNC are doing that.

09:05.000 --> 09:12.000
They are moving a tool in X and Y space.

09:12.000 --> 09:16.000
Actually, this is what is a Braille wrap.

09:16.000 --> 09:20.000
This is a numerical machine, but something like a wrap wrap.

09:20.000 --> 09:28.000
If you remind of the first 3D printer, it was a 3D printer that you can build yourself.

09:28.000 --> 09:37.000
It's a wrap wrap with an embossing tool, and not with a hot hand with plastic provisioning.

09:37.000 --> 09:41.000
The frame is built with laser cut.

09:41.000 --> 09:46.000
You can do it in many materials.

09:46.000 --> 09:53.000
The most popular one is plywood or PMMA acrylic sheet.

09:53.000 --> 09:57.000
You can do it with any single one.

09:57.000 --> 10:02.000
All mechanical parts are 3D printed parts.

10:02.000 --> 10:15.000
All the bearing, linear rails, the stappers, and also all the electronics.

10:15.000 --> 10:24.000
We chose to use a 3D printer controller with customized firmware

10:24.000 --> 10:30.000
just to have some specialized functions to handle the paper.

10:30.000 --> 10:41.000
Finding the edge of the paper is not really the same as doing a reference course in a numerical machine.

10:41.000 --> 10:46.000
It's very little.

10:46.000 --> 10:58.000
Because making a machine that is working well, easy to build, easy to build for everyone,

10:58.000 --> 11:01.000
we make workshops with the machine.

11:01.000 --> 11:09.000
You can see that the first version, the image on the left,

11:09.000 --> 11:14.000
is not the same as the last version, the image on the right.

11:14.000 --> 11:22.000
The message starts small, but starts.

11:22.000 --> 11:29.000
The main problem probably was handling the paper sheets,

11:29.000 --> 11:34.000
because paper is very strange.

11:34.000 --> 11:39.000
When you handle it in your hand, you imagine a very soft material,

11:39.000 --> 11:45.000
but if you lock it in the good position, you can jam a printer,

11:45.000 --> 11:54.000
you can see it in the 3L1, and you can jam a sheet of paper in a bright wrap.

11:54.000 --> 12:06.000
What I wrote is you can lock a stapper with just a piece of paper if you put it in the good situation.

12:06.000 --> 12:14.000
This time, we learned that you must not force a piece of paper to go where you want it to go.

12:14.000 --> 12:25.000
You just have to tell him gently where to go and everything will go fine.

12:25.000 --> 12:29.000
The next aspect is the software.

12:29.000 --> 12:37.000
Once you have a good device, you can print, make dots on paper,

12:37.000 --> 12:42.000
but you still have the problem of the braille.

12:42.000 --> 12:52.000
At the start of the project, we made a piece of software in a hackathon,

12:52.000 --> 13:03.000
so in a few days, you know, with a start of braille translation, only in French.

13:03.000 --> 13:12.000
And the software that generates G-code files that you need, another software to send to the printer.

13:12.000 --> 13:19.000
It works, but it was not very user-friendly, you know.

13:19.000 --> 13:24.000
A few months later, we used NadBri.

13:24.000 --> 13:29.000
NadBri is an open source braille translation software.

13:29.000 --> 13:35.000
It's available on the Internet. It's a French project.

13:35.000 --> 13:46.000
So the braille translation is still in French, but we were able to modify the software to put a driver

13:46.000 --> 13:50.000
and just to have a print button in the software.

13:50.000 --> 13:58.000
So you write your text, you translate it into braille, you put a print and you have the result and the embosser.

13:59.000 --> 14:10.000
So for the user, it's a big improvement, but we had some problems due to the evolution of Java

14:10.000 --> 14:18.000
and the lack of maintenance on the NadBri project.

14:18.000 --> 14:23.000
So we start our own software.

14:24.000 --> 14:35.000
Looking in the Internet how to translate braille, we find a wonderful project that's called Libre.

14:35.000 --> 14:48.000
Libre starts many years ago and is a fork of a project that is called Braility Onlinex.

14:49.000 --> 14:55.000
This project started in 1995, you know.

14:55.000 --> 15:01.000
So it is widely available, free, open source.

15:01.000 --> 15:09.000
Many developers contribute to have a good translation in many languages.

15:09.000 --> 15:15.000
So you have 200 braille standard translations available in Libre.

15:15.000 --> 15:25.000
You have everything you want, French, Italian, Spanish, Chinese, Swiley, Arabic, many, many.

15:27.000 --> 15:36.000
So we use this to make the translation and also we made an accessible software.

15:37.000 --> 15:46.000
Software Access Braille Wrap has been tested with what we call a screen reader.

15:46.000 --> 15:54.000
This is software that the Insighted use to use a computer.

15:54.000 --> 16:02.000
You know, this is basically something that read the screen to tell them what is written.

16:03.000 --> 16:10.000
When you want to write accessible software, it's not just reading the screen.

16:10.000 --> 16:20.000
You must imagine the scenario and putting just the information you want to be told by the computer

16:20.000 --> 16:25.000
for the Insighted people to use it easier.

16:26.000 --> 16:32.000
We have some projects for the future.

16:32.000 --> 16:44.000
USB Braille, this is basically a Wi-Fi extension to use the embosser just with a smartphone.

16:44.000 --> 16:47.000
You know, you connect it to the Wi-Fi.

16:47.000 --> 16:50.000
No software to install on the phone.

16:50.000 --> 16:53.000
You just have a web application.

16:53.000 --> 17:03.000
You write a piece of text, you put print and you have a label, a piece of braille on the embosser.

17:03.000 --> 17:10.000
This project is funded by another organization, Moolove Open Source.

17:10.000 --> 17:12.000
This is a CCLab.

17:13.000 --> 17:18.000
We have another project that is called Desktop Braille Wrap.

17:18.000 --> 17:28.000
The idea is to mix vector graphics to make tactile schematics and Braille.

17:28.000 --> 17:38.000
The idea behind this is to build a metro plan, a building plan, something like that.

17:39.000 --> 17:44.000
We made some tests and it's working very well.

17:48.000 --> 17:59.000
Since 2088, as we put the project on the internet,

17:59.000 --> 18:03.000
we have people on the other side of the world sending mail,

18:03.000 --> 18:07.000
okay, we have build one. It's working well.

18:07.000 --> 18:14.000
We made some operations with the machine, Braille Wrap Cameroon,

18:14.000 --> 18:21.000
where we built six Braille Wrap in Cameroon in four workshops in four cities.

18:21.000 --> 18:37.000
One guy built one in Fab83 in Bhutan with his team and earned the public price of Fab83.

18:37.000 --> 18:41.000
It's interesting.

18:42.000 --> 18:48.000
The best reason for this project to have been reproduced

18:48.000 --> 18:55.000
is that we are working hard on the documentation and the assembly guide.

18:55.000 --> 18:59.000
Of course, it's a never-ending story.

18:59.000 --> 19:06.000
We need to work on it on every evolution of the hardware.

19:07.000 --> 19:17.000
Nowadays, it's more than 100 pages of documentation, step-by-step assembly guide.

19:17.000 --> 19:25.000
What we have learned with that is that sometimes using 3D rendering in the documentation

19:25.000 --> 19:35.000
is better than using photo, you know, because you don't want to take photo like you build the prototype

19:35.000 --> 19:41.000
and once you have build one, you don't want to build another machine just to take the photo.

19:41.000 --> 19:51.000
The other reason is that when you're making 3D rendering, you choose what you want to show.

19:51.000 --> 19:58.000
So you can hide some parts just to focus on some parts.

19:59.000 --> 20:06.000
I'm at the end.

20:06.000 --> 20:12.000
Bright availability is still an issue even in our country.

20:12.000 --> 20:25.000
So the question asked in this machine is how an open source solution can spread in the population where they need it.

20:25.000 --> 20:31.000
Can FabLab contributed?

20:31.000 --> 20:41.000
And more widely, what can we do with open source for promoting a more inclusive world?

20:41.000 --> 20:50.000
And as the time is over, there is some details on the project issue.

20:51.000 --> 21:00.000
Download the presentation that I have uploaded on the software for the first time.

21:00.000 --> 21:02.000
Thank you.

21:12.000 --> 21:16.000
So thank you. We'll have questions out in the hallway.

21:16.000 --> 21:22.000
If anyone has any questions, you can meet out in the hallway.

21:22.000 --> 21:26.000
We're going to set up for our next presentation, which will be starting momentarily.

21:26.000 --> 21:36.000
As you come into the dev room, please do try to move into the center of the rows and leave the outside seats available for other people to follow.

21:36.000 --> 21:40.000
Is Pieter here?

21:40.000 --> 21:42.000
Oh, yes.

22:06.000 --> 22:08.000
Thank you.

