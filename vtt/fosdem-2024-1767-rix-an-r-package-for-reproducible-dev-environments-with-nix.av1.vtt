WEBVTT

00:00.000 --> 00:12.960
Alright, hello everyone. My name is Bruno. I'm a statistician and data scientist, data

00:12.960 --> 00:20.200
janitor, whatever you call it, in Luxembourg. Are there some people that use the R programming

00:20.200 --> 00:24.360
language here? Statistics? I will see some of you. Okay, cool. Maybe this will interest

00:24.360 --> 00:30.880
you then. So what is R very quickly? So R is this programming language that's been

00:30.880 --> 00:36.240
around for 30 years. It's like a floss implementation of S and it's mainly used and mostly used

00:36.240 --> 00:41.000
for statistics, machine learning, data science and all that kind of thing. And it comes with

00:41.000 --> 00:46.840
all these built-in objects that we like very much when we work with these things, which

00:46.840 --> 00:52.680
is data frames, matrices, formulas, models, etc. So that's all built into the language.

00:52.680 --> 00:58.640
There is like a little hello world. You can, with the base language, do linear regressions

00:58.640 --> 01:04.320
so you can load data frames or CSV files very easily. You have formulas that define like

01:04.320 --> 01:09.360
your model very easily and you can do that with the base language. But you can also extend

01:09.360 --> 01:14.240
the language with packages and these are really called packages. So you have deeplier, you

01:14.240 --> 01:19.560
have tidier, these are very popular packages for data manipulation but there's many others.

01:19.560 --> 01:24.960
And this here is like a typical data manipulation pipeline in R. So you start with your data

01:24.960 --> 01:30.080
frame and you keep passing functions to that with arguments and you do your aggregations,

01:30.080 --> 01:37.920
you do whatever you want. And so we have, as of writing, around 23,000 packages that

01:37.920 --> 01:45.520
are available through the two biggest main package sets if you want, CRAN and Bioconductor.

01:45.520 --> 01:49.760
I wrote that all are available through NICS packages. I don't think that's fairly accurate.

01:49.760 --> 01:54.920
I think not all packages are available but most of them are available. Personally, I've

01:54.920 --> 01:59.880
never found a package that wasn't available through NICS packages. So what this means

01:59.880 --> 02:06.400
then is that we could use NICS to set up an environment with R, with our packages that

02:06.400 --> 02:14.240
we need, etc. and use that to work. But that's not really a thing in the R ecosystem like

02:14.320 --> 02:18.640
this per project environment. If you use Python like for data science, very typically you

02:18.640 --> 02:23.360
will see people start with a virtual environment with a specific version of Python, specific

02:23.360 --> 02:28.080
versions of packages. That's not really a thing. At most what people do or our users

02:28.080 --> 02:33.280
do, they do like per project libraries of packages, right? That's a thing. And if you

02:33.280 --> 02:37.440
need more, people would typically use Docker and there's been the Rocket project for that

02:37.520 --> 02:45.720
that really popularized the use of Docker in the R ecosystem. That being said, I wrote

02:45.720 --> 02:50.880
with a colleague called Philipp Bauman. We wrote the Rix package. So Rix is itself an

02:50.880 --> 02:57.640
R package which provides this really familiar interface to R users. It's a standard function.

02:57.640 --> 03:02.120
You can specify the R version that you want. You can specify the packages that you want.

03:02.120 --> 03:06.920
These packages can come from CRAN, can come from Bioconductor. They can come from GitHub

03:07.400 --> 03:11.120
as well. If they are hosted on GitHub only, you can set up tech packages without typically

03:11.120 --> 03:16.000
a thing that R programs want as well. And system packages, we called it like this. Maybe

03:16.000 --> 03:19.240
it's not the best thing, but this would be kind of other tools if you need Git, if you

03:19.240 --> 03:24.840
need whatever, you can add it there as well. And you can specify IDEs because for R Studio,

03:24.840 --> 03:29.560
which is a popular ID for R programming, there's like a wrapper that needs to be installed

03:29.560 --> 03:33.480
as well. So this would take care of that. And it generates that expression that I'm not

03:33.520 --> 03:37.920
going to show you, but it's like a Nix expression that will install all of these things. It will

03:37.920 --> 03:43.280
look automatically for the right revision. And if you put in Git packages as well, it

03:43.280 --> 03:49.560
will also generate for you the hash because there's like a little server that we set up

03:49.560 --> 03:56.960
that downloads the package there, computes the hash and then sends it back to the user.

03:56.960 --> 04:03.960
You can also use this with Nix function within R. So you could execute any function or any

04:05.120 --> 04:12.120
R script inside like a sub shell with a specific version of R. And you could then within your

04:12.440 --> 04:17.160
interactive session that you are currently running, you can then get that result back

04:17.160 --> 04:23.520
and continue working with it. So this is useful if you are like doing a reproducibility study

04:23.560 --> 04:29.200
and you just want to execute one particular function from a paper, for example, and you

04:29.200 --> 04:35.080
just want to get that result. So you can do that as well quite transparently. If you're

04:35.080 --> 04:40.400
interested, there's this website that you can check out. It's still not released on

04:40.400 --> 04:47.000
CRAN or on CRAN, but we are aiming at doing that in a couple of weeks. Thank you for your

04:47.000 --> 04:47.400
attention.

04:53.520 --> 04:54.520
Thank you.

