WEBVTT

00:00.000 --> 00:02.000
Thank you.

00:02.000 --> 00:04.000
Thank you.

00:04.000 --> 00:06.000
Thank you.

00:06.000 --> 00:08.000
You can hear me?

00:08.000 --> 00:10.000
Yes.

00:10.000 --> 00:12.000
Good afternoon.

00:12.000 --> 00:16.000
Thank you very much for joining the open source for sustainable and long lasting

00:16.000 --> 00:20.000
fun stock with Luca and Agnes.

00:20.000 --> 00:22.000
Thank you very much for being here.

00:22.000 --> 00:24.000
I will be helping you here, helping you with your talk.

00:24.000 --> 00:26.000
Should you need anything?

00:26.000 --> 00:28.000
The stage is yours.

00:28.000 --> 00:30.000
Thank you.

00:30.000 --> 00:32.000
Who knows Fairfun?

00:32.000 --> 00:34.000
Wow.

00:34.000 --> 00:36.000
Happy.

00:36.000 --> 00:44.000
So we are super happy to be here with Luca today to speak about how open source is helping us at Fairfun.

00:44.000 --> 00:46.000
We'll speak about software, but not only.

00:46.000 --> 00:50.000
In this talk, it's not a super-taky talk.

00:50.000 --> 00:56.000
We'll try to speak about all the stuff that we do at Fairfun, which kind of report, which kind of data we open-publish to the public.

00:56.000 --> 01:00.000
We open-publish to push the industry to change.

01:00.000 --> 01:04.000
But first, let's introduce ourselves.

01:04.000 --> 01:06.000
I'm Agnes.

01:06.000 --> 01:12.000
I've been working at Fairfun for the last six years now, and I'm leading the IT and software longevity team.

01:12.000 --> 01:18.000
Software longevity means that we are maintaining the fund for longer.

01:18.000 --> 01:26.000
We are a small team, but the goal of this team is to make sure that we can have long-lasting funds from a software perspective.

01:26.000 --> 01:30.000
And I'm also involved in some collectives.

01:30.000 --> 01:36.000
I founded a company first in France called Ninja Squad, focused on open source, but more on the web layers.

01:36.000 --> 01:42.000
I'm also part of a collective called Duchesse France, which promotes women in tech.

01:42.000 --> 01:48.000
I founded also a smaller conference compared to the first dem called Mixit.

01:48.000 --> 01:54.000
And Mixit is a conference in Lyon, in the center of France, focused on tech and ethics.

01:54.000 --> 02:00.000
And the last but not the least, I'm part of the RézoMutu.

02:00.000 --> 02:06.000
I launched a website in my city, Saint-Etienne, in the center of France called Le Numéro Zéro.

02:06.000 --> 02:12.000
You have also an antenna of Le RézoMutu in Brussels, stu.info.

02:12.000 --> 02:20.000
And those websites are alternative to the mass media owned by billionaires.

02:20.000 --> 02:26.000
You can publish some information about UView on the local news.

02:26.000 --> 02:30.000
And all those websites are built on open source software.

02:30.000 --> 02:34.000
So I invite you to have a look on that.

02:34.000 --> 02:37.000
Luca Froyo.

02:37.000 --> 02:40.000
Hello. So my name is Luca Weiss.

02:40.000 --> 02:43.000
I work as an end-of-platform engineer at Fairphone.

02:43.000 --> 02:48.000
And on the side, I'm a free-time also do a bunch of Linux kernel development.

02:48.000 --> 02:54.000
I maintain the project called OpenRazor, which is an open source driver for Razor peripherals.

02:54.000 --> 03:03.000
And I'm also one of the core maintainers of the Post-Marketers project, which is a Linux distribution for mobile phones.

03:03.000 --> 03:05.000
A few words about Fairphone.

03:05.000 --> 03:09.000
Even if a lot of people here know Fairphone.

03:09.000 --> 03:13.000
So Fairphone started as a awareness campaign on conflict minerals.

03:13.000 --> 03:16.000
I will come back on that just after.

03:16.000 --> 03:22.000
In 2010, and only in 2013, we launched our own company called Fairphone.

03:22.000 --> 03:29.000
And the overall angle of Fairphone is to push forward change in the electronic industry to make it fairer.

03:29.000 --> 03:34.000
It's not an easy game, but we have been doing that for almost 10 years now.

03:34.000 --> 03:40.000
And how we did start on the next slide, please.

03:40.000 --> 03:41.000
Thank you.

03:41.000 --> 03:47.000
So as I mentioned just before, so we started as an awareness campaign on conflict minerals.

03:47.000 --> 03:57.000
And at that time, Fairphone was just a group of activists in between the DRC, Democratic Republic of Congo, and Amsterdam.

03:57.000 --> 04:08.000
And this campaign was to more or less raise awareness about the social damages in DRC linked to the mining industry.

04:08.000 --> 04:16.000
And at that time, a bit of context on that, a US law was passed called the Dot-Fronk Act.

04:16.000 --> 04:20.000
And this law, initially speaking, was good, right?

04:21.000 --> 04:33.000
It required US companies from the US stock exchange to disclose whether or not their products did contain some conflict minerals.

04:33.000 --> 04:43.000
But the immediate consequence of this law was the fact that some big players started to seek resources outside the DRC.

04:43.000 --> 04:53.000
And then people in the DRC, the miners then, were a bit stuck and started to go back to the smuggling activities.

04:53.000 --> 05:01.000
So this campaign was really, really focusing on that, to show a bit what did happen behind the scene.

05:02.000 --> 05:13.000
So after two or three years of campaigning, we decided to change a bit in the next slide, please, to change a bit the way of working.

05:13.000 --> 05:20.000
So we decided to be part of the industry, to try to push for a change from the inside out.

05:20.000 --> 05:25.000
And to do that, we were incubated by a nice place.

05:25.000 --> 05:28.000
I'm not sure if you know this foundation.

05:28.000 --> 05:34.000
This is called the Warf Foundation. So the J is pronounced R in Dutch.

05:34.000 --> 05:41.000
So the Warf Foundation, if you see the tagline making technology and society more open, fair and inclusive.

05:41.000 --> 05:47.000
So yeah, that's not a random incubator, like the French tech in France, which I don't like that much.

05:47.000 --> 05:52.000
So that's really, really focusing on fair technology.

05:53.000 --> 05:58.000
And this is in the center of Amsterdam, in the Red District. You have this castle.

05:58.000 --> 06:01.000
And the Warf Foundation is within this castle.

06:01.000 --> 06:05.000
So we were incubated in this incubator.

06:05.000 --> 06:11.000
And then Fairfun BV, so the company itself, was born in 2013.

06:13.000 --> 06:15.000
This is a social enterprise.

06:15.000 --> 06:19.000
So social enterprise means it's a bit like the scope in France.

06:20.000 --> 06:29.000
That small, the financial profitability is just a means to achieve all the goals, environmental and social goals.

06:31.000 --> 06:40.000
And in 2013, when we launched this company, we started a crowdfunding campaign, which was quite cool,

06:40.000 --> 06:48.000
because in the end, we managed to sell some funds in total, something like 50K funds, which is not that bad,

06:48.000 --> 06:53.000
without any marketing, the website was built by our own team, etc.

06:54.000 --> 07:04.000
And if you see the tagline on this screenshot, it says that a seriously cool smartphone that puts social values first,

07:04.000 --> 07:11.000
it shows again that Fairfun really, really started as a social activity.

07:11.000 --> 07:20.000
And we wanted to show how it is difficult in this industry to be a miner in DRC, etc.

07:21.000 --> 07:32.000
So perhaps some of you people have heard about how it is important to be more ecological friendly in this industry,

07:32.000 --> 07:40.000
but we do think that the real issue is the issue that you have on the people side.

07:41.000 --> 07:51.000
So if we pretend to build an ethical fund, we think that we should have a decolonial approach.

07:52.000 --> 08:00.000
We think that we should focus on the people, not in the western countries, but far away from us.

08:01.000 --> 08:09.000
We think that we need to respect the miners in DRC, and the people, the workers in the assembly line.

08:11.000 --> 08:13.000
But why a phone, Luca?

08:16.000 --> 08:18.000
Yeah, so why a phone?

08:19.000 --> 08:24.000
So as you, I think, are aware that the digital industry is causing a lot of greenhouse gas emissions,

08:24.000 --> 08:31.000
that's about 4% of the global greenhouse gas emissions, and of that 84% is actually going into device production.

08:32.000 --> 08:37.000
And the remaining 16% goes into running it, like networks and data centers.

08:40.000 --> 08:43.000
And yeah, electronic waste is really the world's fastest growing waste stream.

08:44.000 --> 08:50.000
With over 50 million tons per year, it is a really big problem in the world.

08:50.000 --> 08:58.000
Most of it is not recycled. Some of the phones, for example, are just kept and drawn, or thrown away to landfills.

09:01.000 --> 09:05.000
It serves like 1.2 billion phones a sort every year, which is a huge amount.

09:06.000 --> 09:11.000
And since most of them are only kept for 2 to 3 years, most are thrown away afterwards.

09:12.000 --> 09:16.000
And then 20% are recycled and the rest are just dumped somewhere.

09:17.000 --> 09:23.000
And also in the world, millions of people are working to dispose of this electronic waste that is not recycled properly.

09:24.000 --> 09:32.000
And this of course can cause a lot of environmental and problems to the people that actually work in this sector.

09:34.000 --> 09:41.000
So kind of where Fairf don tries to kind of make things better is in the materials, so in the mining sector,

09:41.000 --> 09:48.000
in the factories where the phones are produced and the components for the phones, longevity so you can actually keep the phone for longer,

09:49.000 --> 09:55.000
and then also reuse and recycling. So what happens to the device after the user is done with it, let's say.

09:57.000 --> 10:03.000
So kind of how we try at Fairf don to actually change something in the industry to not just be another smartphone company,

10:04.000 --> 10:06.000
is to try to change things.

10:06.000 --> 10:11.000
So we try to raise awareness to tell people about this issue, like in the stock we are doing today.

10:12.000 --> 10:20.000
We also want to set an example. So we want to show other companies and we want to show the industry that it's actually possible to do it differently and to do it better.

10:21.000 --> 10:28.000
And by doing this we want to motivate them to actually also come along, because of course if only Fairf understood the things that we are doing,

10:29.000 --> 10:35.000
not much happens in the world, but then if bigger companies like Samsung, they actually also implement the same programs,

10:36.000 --> 10:38.000
I think we could change a lot in the world.

10:40.000 --> 10:46.000
So in the last 10 years that Fairf don has existed, we have launched 5 smartphones.

10:47.000 --> 10:53.000
So we started with the Fairf don 1 in 2013 and then kind of had a phone every 2 years, more or less.

10:54.000 --> 11:01.000
Fairf don 3 and 3 plus are a bit of also great examples where if you have a Fairf don 3,

11:02.000 --> 11:09.000
you could actually just upgrade the cameras in the Fairf don 3 and have a Fairf don 3 plus and then just have better camera quality.

11:11.000 --> 11:15.000
At least starting with the Fairf don 2 we are also really focusing on software updates.

11:16.000 --> 11:23.000
So we had 7 years of software support for the device, so starting with Android 5 and upgrading it all the way to Android 10.

11:29.000 --> 11:36.000
And for example for our latest device, the Fairf don 5, which launched mid of last year,

11:37.000 --> 11:43.000
we want to provide software, or we are promising software updates until at least 2031, so 8 years of software updates,

11:43.000 --> 11:49.000
but hopefully also aiming for being able to provide updates for 10 years until 2033.

11:52.000 --> 11:59.000
So now let's look at the hidden side of how it is difficult to build a long lasting phone,

12:00.000 --> 12:06.000
how we can try to fight off-sodience and we will try to speak a bit about software and also about hardware.

12:07.000 --> 12:14.000
So why it is so important to do to reach longevity?

12:15.000 --> 12:22.000
So speaking about the stuff that we open publish, for every device that we build,

12:23.000 --> 12:27.000
we open publish what we call a NELCA, Lifecycle Assessment.

12:28.000 --> 12:37.000
So this is a methodology to assess the environmental impacts linked to each stages of your life cycle of the product,

12:38.000 --> 12:43.000
so production, transportation, usage and life.

12:45.000 --> 12:51.000
And we hope that at one point all the manufacturers will be obliged to publish such a report.

12:52.000 --> 12:57.000
This one is done by an academic partner called the Fraunhofer in Germany.

12:58.000 --> 13:04.000
And if you read this report, it shows that if you keep your phone longer than the average,

13:05.000 --> 13:08.000
the average being 3 years for the Android stack,

13:09.000 --> 13:16.000
if you keep it 5 years, you can cut global warming by 31%,

13:16.000 --> 13:21.000
and it goes to 44% if you keep your device 7 years.

13:22.000 --> 13:25.000
So this is key, this is really key to keep your device longer.

13:26.000 --> 13:27.000
And how we do that?

13:30.000 --> 13:36.000
So first of all, I will come back on that just after, but when you see a fair phone,

13:37.000 --> 13:41.000
you will see that you can easily open it and change some spare parts,

13:42.000 --> 13:49.000
because in the end, the obsolescence comes from the fact that it's super hard to repair your phone, right?

13:50.000 --> 13:57.000
If your display is broken, if you want to change the battery, sometimes it's screwed,

13:58.000 --> 13:59.000
and you cannot do that easily.

14:00.000 --> 14:05.000
So that's the first fact, the hardware aspect, I will come back on that after.

14:06.000 --> 14:10.000
But on the software side, perhaps some of you people have seen this message,

14:11.000 --> 14:20.000
the app is not compatible with your device, it means that apparently your app is not compatible with OS running on your phone,

14:21.000 --> 14:26.000
and probably it means that the OS is not resaving any security updates.

14:27.000 --> 14:35.000
So if we go to the next slide, so let's look at the device, so you will see a fair phone 3 in the middle of this slide.

14:36.000 --> 14:40.000
And on this fair phone 3, you have several components, right?

14:41.000 --> 14:49.000
And as a manufacturer, we need to choose some components, so a fingerprint sensor, a camera, a sock, system on a chip.

14:50.000 --> 15:01.000
And those components are not built by the same supplier, and it's quite difficult to have access to the code, the firmware running on those components.

15:01.000 --> 15:11.000
So as a manufacturer, you have not a lot of options, you can either contract long term support with those suppliers, right?

15:12.000 --> 15:15.000
But it's not always easy, because some of them are not at all willing to do that.

15:16.000 --> 15:24.000
For example, for fair phone 3, I put this device on purpose because we failed on fair phone 3 with the fingerprint sensor.

15:25.000 --> 15:31.000
We didn't manage to have a long term support agreement with the fingerprint sensor manufacturer.

15:32.000 --> 15:45.000
And when we wanted to upgrade to a great 1.13, then it means that for some people, for some users, they were obliged to use a pin cut and not to use their fingerprint, right?

15:46.000 --> 15:47.000
So it was not super nice.

15:48.000 --> 15:52.000
So sometimes we fail, but it's also something that we are not ashamed to mention.

15:53.000 --> 16:00.000
So you can either contract long term support agreement with your suppliers, or you can try to have access to some code.

16:02.000 --> 16:07.000
And obviously the second part is the most interesting part that we want to do.

16:08.000 --> 16:13.000
And if I look at just the Android part, so Android is just running on the CPU.

16:14.000 --> 16:19.000
You see the sock on the right, so on the sock you have plenty of subcomponents.

16:19.000 --> 16:22.000
You have the CPU, the GPU, the modem, etc.

16:23.000 --> 16:33.000
And if I look at just the Android part, if we go to the next slide, perhaps you have heard that Android is open source, but Android is not fully open source.

16:34.000 --> 16:38.000
Just AOSP, Android Open Source Project is open source, but the rest is not open source.

16:39.000 --> 16:47.000
So if you look at the orange layer or the purple layer, the hardware abstraction layer or the native daemons and libraries, this is not open source.

16:47.000 --> 16:53.000
So it comes with all the downside that I mentioned before about the lack of longevity.

16:54.000 --> 17:06.000
But on the older layers, close to the high level layers, you can find also some closed source, and it could be even worse.

17:07.000 --> 17:15.000
Speaking about some SDK, so if you are an app developer, perhaps you can have the willingness to integrate some SDK,

17:15.000 --> 17:20.000
because it could facilitate your development for your app, for example.

17:21.000 --> 17:24.000
So you can integrate Facebook SDK for your base whatsoever.

17:25.000 --> 17:34.000
And the second big black spot could be that those SDK could be big data artists.

17:35.000 --> 17:38.000
So that's the second issue that you see with those kind of SDK.

17:38.000 --> 17:44.000
It's not only an issue about software obsolescence, but that's also an issue for your own privacy.

17:48.000 --> 17:51.000
Yeah, I think we don't have a good slide, but that's okay.

17:52.000 --> 17:55.000
I wanted to skip this slide, but in the end I will speak about it.

17:56.000 --> 18:08.000
Just, yeah, it's a bit, that's a sad story about Facebook disclosing some private message between a mom and her daughter about an abortion that this daughter wanted to do.

18:09.000 --> 18:14.000
And Facebook disclosed all the private message to the justice, the American justice.

18:15.000 --> 18:21.000
So that's another, that's an example of how it could be better to have all you data in the big giant.

18:22.000 --> 18:30.000
If we go to the next slide, so let's speak now about the software updates that we do at Fairfax.

18:31.000 --> 18:35.000
As Luca mentioned just before, for Fairfax 2 we reached 7 years.

18:36.000 --> 18:46.000
And for Fairfax 5, which is the last device that we launched, we hope to do 10 years with a strong promise of doing 8.

18:51.000 --> 19:10.000
So I think I'm preaching a bit to the wrong audience to explain why we need software updates, but just to make sure, of course, there are any software that is out there kind of has issues and decisions need to be patched.

19:11.000 --> 19:14.000
There's always new security vulnerabilities found.

19:14.000 --> 19:23.000
So for example, in the Android world, Google is publishing a security bulletin every month with a bunch of new security issues that should be fixed on the devices.

19:24.000 --> 19:30.000
And of course, with new Android updates, with new Android versions, you can get new features which Google has implemented.

19:31.000 --> 19:35.000
So for example, better auto-fill or better permission management.

19:36.000 --> 19:44.000
So bringing Android to devices is quite a complex effort that is between multiple stakeholders.

19:45.000 --> 19:49.000
So any Android release starts out as AUSP by Google.

19:50.000 --> 20:01.000
This thing is taken by the SoC manufacturer, so in our example Qualcomm, which then modifies the AUSP code to actually make it compatible with the given SoC.

20:02.000 --> 20:12.000
And after they're done, then finally the device manufacturer can get this code and can integrate their changes in top, which makes the software work on the specific device.

20:13.000 --> 20:18.000
So for example, adding support for the display or for the touchscreen that's on the specific phone.

20:19.000 --> 20:24.000
Still, there needs to be implemented a bunch of changes for operators.

20:25.000 --> 20:33.000
So for example, to make voice of a LTE work correctly or make some settings be according to their requirements.

20:34.000 --> 20:46.000
And then kind of the last step is that you actually need to get launch approval by both Google, which is done by running millions of tests in the compatibility test suite and other test suites.

20:47.000 --> 20:52.000
And every single one of these tests needs to pass to actually be able to get launch approval.

20:53.000 --> 21:00.000
But also the operators test the software and make sure that it conforms to their standards.

21:04.000 --> 21:13.000
The process for security updates and normal updates are not a major version upgrade, but just on the same Android version look a bit differently.

21:14.000 --> 21:22.000
So every month, as I said, Google is providing security updates. The same is also happening from Qualcomm and some other parties.

21:23.000 --> 21:28.000
Network operators may have new requirements and new, for example, new app updates that need to be integrated.

21:29.000 --> 21:34.000
And then the device manufacturer is responsible to actually pulling all of this together to make sure it still works correctly.

21:35.000 --> 21:42.000
And then to go through the whole process of the approval again, so running many, many tests and making sure that everything works correctly.

21:44.000 --> 21:50.000
This process can be followed for about three years, which is kind of how long Google is maintaining any given Android version.

21:51.000 --> 21:58.000
And after that, or hopefully already before that, the manufacturer needs to update to a new Android version, otherwise you're out of support.

22:01.000 --> 22:08.000
So, yeah, as was mentioned already, while Android itself is actually open source, now as some modifications by Qualcomm,

22:08.000 --> 22:12.000
there's a lot of other proprietary components going into the system.

22:14.000 --> 22:22.000
So on a modern system or a modern SOC, there's a lot of code processes that handle a lot of different tasks.

22:22.000 --> 22:26.000
So for example, audio or modem or GPU.

22:27.000 --> 22:29.000
And these are run proprietary codes.

22:29.000 --> 22:34.000
So one where either only the device manufacturer can access the code,

22:34.000 --> 22:38.000
or actually for some even only the SOC manufacturer.

22:41.000 --> 22:43.000
So what happens if actually this chain is broken?

22:43.000 --> 22:45.000
So when the SOC manufacturer...

22:51.000 --> 22:55.000
When the SOC manufacturer doesn't provide support for the new Android version anymore.

22:56.000 --> 23:01.000
Well, this is generally where support in the industry stops, where device manufacturers no longer can provide any updates.

23:04.000 --> 23:14.000
So for this, we can look at Fevon 2, which was our device launched in 2015 with Android 5 in 2016, got an Android 6 update,

23:14.000 --> 23:17.000
but already back then the SOC went end of life.

23:17.000 --> 23:21.000
So other devices with the same SOC stopped...

23:28.000 --> 23:33.000
So other devices with the same SOC, so for example Nexus 5, stopped receiving software updates.

23:34.000 --> 23:42.000
But still in 2018, we managed to launch an Android 7 update in 2021 Android 9 upgrade and in early 2022 Android 10 upgrade.

23:43.000 --> 23:47.000
And to understand how we achieved this, we actually need to dig a little bit deeper.

23:49.000 --> 23:52.000
So we took over the role of Qualcomm a bit.

23:53.000 --> 23:56.000
We reused some proprietary parts from Android 6.

23:57.000 --> 24:08.000
And we looked at the Codel Rural Forum and the order name for Codel Rural, so where Qualcomm is releasing their open source changes.

24:09.000 --> 24:16.000
And we looked at some of that codes to give us a reference to how it really could work correctly.

24:18.000 --> 24:22.000
The kernel is also quite an important part that we needed to take a look.

24:23.000 --> 24:29.000
But yeah, for this we also looked at Linear Trials, which also provided some...

24:36.000 --> 24:41.000
Yeah, for Linear Trials also because they have a great reference of how the code could work together.

24:41.000 --> 24:45.000
And also provided quite a lot of fixes for some components in the system.

24:46.000 --> 24:53.000
So to enable communities like Linear Trials, we try to open source whatever code that we can do.

24:54.000 --> 24:57.000
Of course all of our devices also have an unlockable boot loader.

24:58.000 --> 25:02.000
And we share all of our code on our platform code.ferfn.com.

25:05.000 --> 25:14.000
Of course, open source is also great for a lot of other projects, like post marketers, which are more involved in.

25:15.000 --> 25:19.000
Which is a real Linux distribution for phones and other mobile devices.

25:19.000 --> 25:23.000
You can still check out the standard in the AW building to learn a bit more.

25:36.000 --> 25:41.000
So for Android as we said, normally ASP itself is open source,

25:41.000 --> 25:46.000
but normally all the changes that the manufacturer does to it are not open source.

25:47.000 --> 25:50.000
So the legal minimum that any manufacturer needs to publish is the kernel sources.

25:51.000 --> 25:54.000
So the Linux kernel which license another TPL license.

25:56.000 --> 26:00.000
But on top of that we also try to publish the full Android sources wherever we can.

26:01.000 --> 26:08.000
So for example, for Fevon 3 and Fevon 2, we had the complete Android source code

26:08.000 --> 26:11.000
with the proprietary components as pre-built.

26:19.000 --> 26:25.000
This version was then without the proprietary Google services and DRM and a few things like this.

26:26.000 --> 26:30.000
But essentially you can just download all of the code, compile it yourself and then flash on the device.

26:30.000 --> 26:38.000
And you have essentially a relatively similar build on your device than what we provide for regular users.

26:40.000 --> 26:47.000
For our new devices for Fevon 4, we currently only published all of the Android source code

26:48.000 --> 26:52.000
that our manufacturing partner, our ODM, produces.

26:53.000 --> 26:57.000
Unfortunately, the way that Qualcomm has structured the source tree normally

26:57.000 --> 27:04.000
makes it not possible that regular users without Qualcomm proprietary sources can compile this.

27:05.000 --> 27:07.000
But still we think it's really important to have this public as a reference.

27:08.000 --> 27:14.000
Because for things like the audio hire, still people can look at it and see what was changed for this device

27:15.000 --> 27:19.000
and then take over some of these changes for example for custom ROMs like linear joys.

27:21.000 --> 27:25.000
And we also managed to get permission to get the kernel divest tree sources public.

27:26.000 --> 27:30.000
This was quite a struggle because by default they are part of the proprietary package.

27:31.000 --> 27:39.000
But we managed to convince Qualcomm to allow us to publish them also because a bunch of other manufacturers also published them.

27:42.000 --> 27:47.000
So one problem that we also have with the software on our devices is that the chipset manufacturer

27:48.000 --> 27:53.000
provides us with a kernel version that is normally already by the time the device launches multiple years old.

27:54.000 --> 28:01.000
And it's never really updated to any newer version so the Linux kernel version that the device was launched with

28:02.000 --> 28:04.000
was basically the one that it stuck with.

28:05.000 --> 28:13.000
This means after a while that security patching can become quite tedious because there's a lot of changes on top of the Linux kernel release also.

28:14.000 --> 28:22.000
And of course also if the kernel releases end of life upstream then it becomes even more difficult to backport security fixes.

28:24.000 --> 28:29.000
Generally being stuck on this Linux kernel version doesn't make too much difference to a user.

28:30.000 --> 28:35.000
But especially lately we've seen that also new Android versions require new features in the Linux kernel.

28:36.000 --> 28:42.000
And if we are not able to update the Linux kernel, yeah we cannot really update to a new Android version then.

28:43.000 --> 28:51.000
So we can try to instead push the device in the SoC and device-specific support to the mainline kernel so upstream to kernel.org.

28:52.000 --> 29:01.000
With this done in the perfect word you can take any recent kernel release, put it on the device and have everything working.

29:02.000 --> 29:10.000
Unfortunately currently it's still far from feature complete but it is really cool and still can be used for a lot of purposes.

29:11.000 --> 29:16.000
There were also lots of great talks yesterday in the Boston Mobile Devices classroom. You can watch the recordings later.

29:16.000 --> 29:21.000
So some of the other things that we do.

29:22.000 --> 29:27.000
So we try to provide team-win recovery project builds, so TWP builds for the devices.

29:28.000 --> 29:34.000
For example for the FF5 we managed to get the build public on day one when the device was announced.

29:35.000 --> 29:38.000
We have factory packages on our support page.

29:38.000 --> 29:47.000
This is quite useful for third-party ROM developers so they can just take the new build and extract the proprietary components from it and integrate into their build.

29:49.000 --> 29:58.000
Also where possible we try to support third-party ROM developers so try to answer some questions and help them with some problems where possible.

29:59.000 --> 30:08.000
We think that default OS is great for regular users but for some users that prefer to have a bit more privacy oriented or security oriented operating systems.

30:09.000 --> 30:15.000
For example for VOD Google services we think that custom ROMs are really important for users.

30:16.000 --> 30:21.000
Hopefully OS is soon the app for our Fairbats XL headphones will be open source.

30:22.000 --> 30:27.000
A few words about the reparability on the hardware side.

30:28.000 --> 30:32.000
As I mentioned before it's quite easy to prepare a fairphone.

30:33.000 --> 30:36.000
If you look at this screen you can see a Fairphone 5.

30:37.000 --> 30:43.000
You have 10 modules on Fairphone 5 so if you break your screen you display you can easily change it.

30:44.000 --> 31:00.000
We also want to have an accessible decent price for that because one of the downsides of the reparability is the fact that sometimes a repair cost could be super high.

31:01.000 --> 31:08.000
For a display for example the cost replacement is on average 44% of the original price.

31:09.000 --> 31:17.000
It results in the fact that the users want to buy a new phone and not to just repair their display.

31:21.000 --> 31:29.000
The battery is the same. I'm not sure by heart the cost of our battery but for Fairphone 4 I think it is 20 or 29 euros.

31:30.000 --> 31:37.000
We really want to make sure that it's not super costly for one of our users to buy a new battery.

31:38.000 --> 31:46.000
Of course the batteries are not glued. I personally think that it should be forbidden to have glue on a phone.

31:48.000 --> 32:01.000
So we really really strive for having more modularity on the phone and we also fight or we try to do some lobbying to push the older manufacturers to do the same.

32:01.000 --> 32:14.000
We were part of some discussions at the European level or the French government level to have modularity as a criteria to define the coming index of reparability.

32:17.000 --> 32:26.000
And the last but not the least we do also an extension of the warranty from 2 years to 5 years for free to convince people to keep their phone longer.

32:26.000 --> 32:28.000
And we also publish the schematics.

32:38.000 --> 32:42.000
So about those schematics we just published the Fairphone 5 once a few days ago.

32:44.000 --> 32:51.000
So when you discuss with the competitors they can mention some reasons that it's not possible to publish those schematics.

32:52.000 --> 32:58.000
And the reasons are for example some intellectual property issue or some security issue.

32:59.000 --> 33:03.000
And this is all bullshit right. This is all bullshit. They cannot pretend.

33:04.000 --> 33:09.000
So intellectual property this is hard choice. If we want to publish those schematics right.

33:10.000 --> 33:15.000
If we want to not hold back on the intellectual property it's possible.

33:16.000 --> 33:24.000
And for the security reasons this is not the right clue to explain why open source is not an issue in terms of security.

33:25.000 --> 33:40.000
But you have to know that when you speak with some people at the European level or the French government whatsoever some lobbying from the big tech could convince those people that security could be an issue with open sourcing.

33:40.000 --> 33:45.000
So yeah that's something that we want to highlight today to show that it's possible.

33:52.000 --> 34:00.000
Yeah so let's talk a bit about the materials in the factories where we also try to improve the situation.

34:01.000 --> 34:13.000
So a smartphone contains over 50 different materials. One of those we selected 14 so called focus materials so where we think that's where improving things can have the biggest impact for now.

34:14.000 --> 34:19.000
We try to integrate these materials into the supply chain so they actually end up in the product.

34:20.000 --> 34:31.000
We also have for different materials we look into a bit more in the recycling part in the so trying to use recycled materials and for some other trying to get fair version materials.

34:35.000 --> 34:42.000
So we also try to map the journey of the materials and we publish this on our website so you can look at it.

34:43.000 --> 34:50.000
Why we want to do this is because we want to scale the fair sources we want to get more of these into our products.

34:51.000 --> 35:04.000
But also again we want to follow us we want to see that other companies see what we're doing and actually can look into exactly how we're doing this and then hopefully they are following us and also implementing this.

35:05.000 --> 35:18.000
For example here you can see the map of some of the materials in the FFIV and if we click on one of them for example for Tangsten here you can see it is mined from a town in Rwanda.

35:19.000 --> 35:32.000
Then it is processed in a I think it's a smelter in Austria and then goes to a different manufacturer in China and then finally to the final assembly manufacturer in China where the phone is actually being put together.

35:34.000 --> 35:43.000
We have a very long list of all of the suppliers, smelters and refiners also in these documents so you can see exactly what companies are involved here.

35:46.000 --> 36:02.000
What about the fair factories and just about the list of suppliers so the ultimate end goal is to convince the competitor to use the same list right because we have been doing this work of convincing the suppliers to act more responsibly so we hope that the competitors could do the same.

36:02.000 --> 36:27.000
What about the fair factories so I'm not sure if you have heard about Foxconn, that's a big factory owned by a Taiwanese company called Foxconn and this is one of the largest employer in the world, almost one million of employees and this company is known for bad working conditions, bad revenue etc.

36:27.000 --> 36:33.000
So what we try to do is to collect the workers voice.

36:34.000 --> 36:55.000
We don't want to pretend that we know better than them what is a good working condition right this is a decolonial approach also so we have Chinese employers working with the assembly line workers to make sure that we understand what are the best working conditions for them.

36:56.000 --> 37:07.000
We disclosed also in terms of open source we disclose a methodology about how you can implement leaving wage in the factories.

37:08.000 --> 37:16.000
So in this toolkit you have plenty of things to calculate this leaving wage you have some templates for the agreement for the workers etc.

37:17.000 --> 37:28.000
And I'm speaking about this notion of leaving wage so if you speak with the workers they will tell you that the most important thing for them is to have a leaving wage, a decent wage.

37:29.000 --> 37:36.000
If you look at the daily wage for an assembly line worker this is approximately $13 per day.

37:37.000 --> 37:51.000
And if they want to have a decent wage to avoid to do extra hours for example they will tell you that they need the double more or less right so $28.

37:52.000 --> 37:57.000
So you have a big gap right between the daily wage and the leaving wage.

37:57.000 --> 38:04.000
So what we have done at Fairphone we have paid this gap right we have paid those $28 per day.

38:05.000 --> 38:22.000
And the ultimate consequence for us in terms of price was to dedicate even less than $2 per phone to be able to pay those people correctly.

38:23.000 --> 38:35.000
So in this lobbying that we have done about the leaving wage, this toolkit, of course we have tried to convince all the manufacturers to do the same so far this is a big failure.

38:36.000 --> 38:46.000
But we are still hoping that it will work at one point because let's imagine that all the manufacturers could do that right, it would be super nice for the people there.

38:46.000 --> 38:50.000
We can go to the next slide.

38:55.000 --> 39:02.000
Yeah, so a lot of companies have recently also put recycling very big on their front covers.

39:03.000 --> 39:08.000
So for example, Apple, Samsung or nothing they are very big on the recycling.

39:09.000 --> 39:20.000
Unfortunately the way that recycling is being done is also of course sometimes not great but also just the way that the economy works.

39:21.000 --> 39:27.000
You cannot take a phone, recycle everything and then get 100% of the materials back to put into a new phone.

39:27.000 --> 39:43.000
There will always be a big junk that actually goes to waste and which you can't recycle because either it's made into alloys which you can't separate anymore or just different components where it's either not worth getting the tiny amounts of gold back out or anything.

39:44.000 --> 39:52.000
So there will always be new mining needed and somebody needs to look into this to actually make it better.

39:53.000 --> 40:00.000
But also kind of what we are doing with e-waste in Europe is sometimes shipping them to places in Africa.

40:01.000 --> 40:06.000
So here are some pictures from Akra Bloschi which is in Akra and the capital of Ghana.

40:07.000 --> 40:18.000
And you can see kind of where teenagers are burning some copper cables to get the plastic or to burn the plastic off to get the copper back to actually recycle the copper.

40:19.000 --> 40:24.000
And yeah of course you can't imagine that this is healthy for anything in the area.

40:25.000 --> 40:37.000
And also recently I think Ghana has also done a bit to clean up this area a bit but of course it's just going to happen somewhere else and it's probably happening in a million other places.

40:40.000 --> 40:42.000
Okay, time for the conclusion.

40:43.000 --> 40:50.000
So yeah the conclusion that we wanted to know if Luca was to speak about techno discernment and social justice.

40:51.000 --> 40:57.000
So we will use a quote from a person called Ivan Illich.

40:58.000 --> 41:02.000
I really like this guy not because he's Austrian like you Luca.

41:03.000 --> 41:09.000
But yeah I mean I started to read this philosopher a few years ago.

41:10.000 --> 41:15.000
And yeah he influenced my life as a software engineer.

41:16.000 --> 41:21.000
He wrote this book in the 70s called Tools for Conviviality.

41:22.000 --> 41:32.000
And if you look at this quote he's saying more or less that the modern tools, so if you extrapolate a bit think about your daily work.

41:32.000 --> 41:44.000
The modern tools should not be at the service only about a small group of experts but at the service of all the people, a bigger group.

41:45.000 --> 41:51.000
Right? So more or less how cool today with Luca.

41:52.000 --> 41:54.000
We don't want to speak only about fair fun right?

41:54.000 --> 42:04.000
We want also to invite you to step aside from your daily work and from your expert position.

42:05.000 --> 42:08.000
Of course open source is great right? We are in a super nice conference.

42:09.000 --> 42:11.000
I would like to force them by the way to the organizers.

42:12.000 --> 42:13.000
That's super great.

42:14.000 --> 42:19.000
Open source is a super good lever for responsible projects.

42:19.000 --> 42:24.000
But open source doesn't make automatically a project responsible right?

42:25.000 --> 42:31.000
So that's an invitation for you people to think about broader right?

42:32.000 --> 42:33.000
From a broader perspective.

42:34.000 --> 42:37.000
It's always good to do open source for sure.

42:38.000 --> 42:40.000
But where the code will run right?

42:41.000 --> 42:47.000
When we think about the hardware we spoke about about the social damages behind the cobalt right?

42:47.000 --> 42:51.000
Behind the extractivism in general.

42:52.000 --> 43:07.000
So we really need as experts to think about how products and we really need to ask ourselves if this product will really empower people.

43:08.000 --> 43:17.000
And also this is an invitation to think not only about how people, how community, but people far away from you.

43:18.000 --> 43:21.000
People far away from our western countries.

43:22.000 --> 43:23.000
Thanks.

43:37.000 --> 43:38.000
Thank you.

43:47.000 --> 43:48.000
You guys have any questions?

43:49.000 --> 43:50.000
Here is.

43:56.000 --> 43:58.000
Thank you for the great talk.

43:59.000 --> 44:06.000
You have told a lot about software upgrades and updates and support of your phones.

44:07.000 --> 44:10.000
But what about hardware updates?

44:11.000 --> 44:19.000
Because the most important part for the pollution is hardware waste, but not software.

44:20.000 --> 44:33.000
And if you, for example, if you upgrade your phone, I don't mean the main parts like CPU, but maybe displays or cameras or whatever on your current models.

44:34.000 --> 44:38.000
Maybe it would reduce the electronic waste as well.

44:39.000 --> 44:40.000
And did you think about it?

44:44.000 --> 44:45.000
Yeah.

44:46.000 --> 45:00.000
So for kind of reusing old phones, there's actually a project by a Belgian company ongoing where they are looking into kind of how they can reuse old FFM2s to actually do something with and use them for example for some IoT use cases.

45:01.000 --> 45:04.000
Yeah, some of the problems still apply there.

45:05.000 --> 45:09.000
Of course, the software support is gone for the old devices.

45:11.000 --> 45:17.000
And also, yeah, then the same applies to kind of the old firmware on the device.

45:18.000 --> 45:27.000
So you cannot, it's tricky to kind of make a secure product out of the old phone because all of the proprietary software support is just stopped.

45:28.000 --> 45:33.000
In terms of kind of keeping modules between different phones, which I think was kind of part of the question.

45:34.000 --> 45:43.000
It is definitely something we are thinking about, but we also currently can't really limit ourselves to kind of keeping the exact same form factor, for example, for the cameras.

45:44.000 --> 45:49.000
So the camera modules are compatible between the different phones.

45:55.000 --> 45:56.000
Hi.

45:56.000 --> 46:02.000
I have a fair phone here and it's five years old or so and maybe I want to buy a new battery for it.

46:03.000 --> 46:04.000
It's still fine, so I don't need it now.

46:05.000 --> 46:08.000
So I think I would want to buy a new battery.

46:10.000 --> 46:14.000
Would it be a battery that is produced last year or so?

46:15.000 --> 46:24.000
Or would it be a battery that has been laying on the shelf for many years and I think keeping a battery lying around,

46:25.000 --> 46:28.000
without tension, is not very good for such a long time.

46:29.000 --> 46:35.000
So how do you ensure the quality of batteries is still okay after five years?

46:38.000 --> 46:46.000
I mean, for Fairfond 3, for example, we have car suppliers to produce batteries over four years.

46:47.000 --> 46:48.000
We are still producing the battery.

46:48.000 --> 46:51.000
Oh, by the way, we stopped a few months ago.

46:52.000 --> 47:00.000
So we make sure that we are not buying all the stock ones and we make sure that the supplier is still around.

47:01.000 --> 47:15.000
That's also for us quite critical for the software updates because that's, to be honest, ultra tricky because normally speaking, in the industry, when you stop to buy the spare parts or whatsoever,

47:15.000 --> 47:19.000
the supplier is not willing to work with you anymore.

47:20.000 --> 47:30.000
So for us, you know, still buying batteries after years and years, it helps us also to have them still around for the software part,

47:31.000 --> 47:34.000
especially for the Qualcomm preparatory components.

47:35.000 --> 47:39.000
For Fairfond 3, for example, we don't have access to the source code of those components.

47:40.000 --> 47:44.000
So we needed the supplier to do that, the assembly, what we call the ODM.

47:46.000 --> 47:51.000
So we are still buying batteries over the time. This is what we try to do.

47:52.000 --> 47:54.000
We have time for one more question.

48:01.000 --> 48:06.000
Hi. Quickly, so one question was on the business model. How do you stay afloat in such a market?

48:07.000 --> 48:10.000
Is it coming from the premium price of the devices which I was happy to pay?

48:10.000 --> 48:21.000
That could be one factor, but I was wondering if you have investors who are particularly interested in sustainability and stuff like that, or where does the money come from?

48:22.000 --> 48:27.000
And the other one was how do you guarantee the 10 years of updates?

48:28.000 --> 48:33.000
Do you think you'll be able to force Qualcomm into giving you a 10-year long-term support?

48:33.000 --> 48:35.000
Long-term support or?

48:38.000 --> 48:44.000
For the 10 years of support, the Fairfond 5 is actually using an IoT chip set,

48:45.000 --> 48:53.000
so long-term support where we actually have from Qualcomm at least for way more years than with a normal phone processor.

48:54.000 --> 49:00.000
It works very similar. It's just a different product line from their side.

49:01.000 --> 49:03.000
What was the first part again?

49:04.000 --> 49:05.000
The business model.

49:06.000 --> 49:10.000
Of course, we want to attract new customers, of course.

49:11.000 --> 49:13.000
I think it's also...

49:14.000 --> 49:18.000
I mean, we don't need a single customer buying a new phone every two years.

49:19.000 --> 49:24.000
We are also happy with them if they keep the current phone for six years or eight years, and then come back to us.

49:25.000 --> 49:31.000
And I think there's a lot of room for expansion in just making people keep the phone for longer.

49:32.000 --> 49:39.000
People are already keeping their phones for longer, not just because of longers of the support from the manufacturers,

49:40.000 --> 49:48.000
but also because the life cycle of the improvement of the smartphone industry has a bit slowed down.

49:49.000 --> 49:53.000
So the phone that you buy now is not that different to one that you bought four years ago.

49:54.000 --> 49:56.000
It also helps in keeping them.

49:57.000 --> 50:05.000
We know it's just better for the environment, so we try to convince people to keep the phones for as long as possible.

50:06.000 --> 50:07.000
Thank you. Let's go.

50:09.000 --> 50:11.000
Thank you very much. The time is up.

50:12.000 --> 50:13.000
Thank you.

50:14.000 --> 50:15.000
Thank you.

50:24.000 --> 50:25.000
Thank you.

