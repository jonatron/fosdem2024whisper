WEBVTT

00:00.000 --> 00:07.000
Okay, so this is the Matrix Dev Room on FOSDEM 24, I guess, in case you are in the wrong

00:10.820 --> 00:17.820
room then take the chance now and leave. And we have an afternoon packed full of information

00:19.840 --> 00:26.120
about Matrix. It's only an afternoon, so if you want to look up more information in the

00:26.120 --> 00:32.560
air is an internet full of it. But if you are lazy and don't want to collect all the

00:32.560 --> 00:38.920
information yourself then there is this wonderful people, they collected the information for

00:38.920 --> 00:45.200
you and will give you a presentation now about the state of the union. Matthew and

00:45.200 --> 00:49.200
Amadin give them a warm welcome and the stage is yours.

00:49.200 --> 00:52.480
Thank you Jan.

00:53.240 --> 00:58.440
So we honestly weren't sure what to talk about because if folks came to the main stage

00:58.440 --> 01:03.800
talking Jan's in this morning, basically the first 25 minutes was the state of the union

01:03.800 --> 01:10.800
of Matrix. So we have a bit of a question mark on the subject here. Also Jan just promised

01:10.800 --> 01:14.960
that we will transfer the contents of the internet into your brains which we also hadn't

01:14.960 --> 01:19.600
really prepared for. Anyway, basically if you don't know who we are, I am Matthew, I

01:19.720 --> 01:24.720
am the technical co-founder side of Matrix, day job CEO at Element.

01:24.720 --> 01:30.720
Amadin, the non-technical co-founder side of Matrix and day job COO at Element.

01:30.720 --> 01:36.120
But we would like to at least try to tell you something new about what's going on here.

01:36.120 --> 01:42.240
And actually realized that we have never done a brief history of Matrix which begins before

01:42.240 --> 01:47.240
many of you were born in the year 2000 and free.

01:47.240 --> 01:51.960
Now seriously, the actual backstory is a bunch of us were at the University together at Cambridge

01:51.960 --> 01:57.160
and we were messing around and instant messaging on a project called Project Foxtrot. Now the

01:57.160 --> 02:02.920
idea of Foxtrot is that it was written in Java 1.3, new fresh off the books or something

02:02.920 --> 02:07.400
at that point in the late 90s. And what it did was to serialize hunks of Java, put it

02:07.560 --> 02:14.560
over TCP sockets except it was end to end encrypted using manually written Diffie Hellman

02:14.560 --> 02:20.720
RSA exchanges. So that is where I at least got the bug for Matrix and instant messaging

02:20.720 --> 02:27.720
and after we either got kicked out or left or graduated from Cambridge we ended up working

02:27.720 --> 02:34.720
at the little company doing APIs for the PSTM. So that's 2003. Fast forward rapidly to 2010.

02:35.720 --> 02:41.440
Well, my company were doing mobile app development and Matthew's company both got acquired about

02:41.440 --> 02:46.640
a month apart by a big telco vendor. You would find them in the depth of AT&T doing all their

02:46.640 --> 02:52.280
billing systems. So small startups having fun getting into a very big company.

02:52.280 --> 02:55.720
After a few years of rattling around inside Amdox, I'm not sure why we're not mentioning

02:55.720 --> 03:00.600
Amdox by name but it was Amdox, we discovered a new found desire to burn the phone network

03:00.680 --> 03:06.200
to the ground and annihilate it and replace it with something that would be open and decentralized

03:06.200 --> 03:10.960
and federated that anybody can join rather than the cabal of the phone companies where

03:10.960 --> 03:15.320
it's almost impossible to connect into them. And so that was where the idea of Matrix came

03:15.320 --> 03:22.320
from. We basically took the combined folks in Hren and London went to Amdox and said,

03:22.320 --> 03:26.280
hey, a little bit of a crazy idea but what if we build an entirely new communications

03:26.360 --> 03:31.000
protocol and if we pull it off, then you, my friends at Amdox, can go and sell it to AT&T

03:31.000 --> 03:35.040
and many other big telcos and you can replace the PSTN. And meanwhile, at the same time,

03:35.040 --> 03:39.720
the rest of the world would get a big benefit of the existence of Matrix. And amazingly,

03:39.720 --> 03:44.120
they said yes, with no strings attached, they allowed us to go and switch the business unit

03:44.120 --> 03:49.560
from selling clones of WhatsApp and Skype to telcos to instead building out Matrix. And that's

03:49.560 --> 03:57.160
what we did from starting depressingly in May 2014. So we are a couple of months off having

03:57.160 --> 04:03.200
been doing this for 10 years. Not sure whether that's something to celebrate or not in the grand

04:03.200 --> 04:11.560
scheme of things. What happened in 2014? So 2014, we all gathered in Hren and sat down and had a big

04:11.560 --> 04:18.840
brainstorm on how this thing would look like and ended up with mostly what Matrix is today.

04:19.160 --> 04:23.560
Not much has changed in terms of overall idea and architecture and these sort of things.

04:25.080 --> 04:31.720
We started in May and the goal was, September 2014, we're going to launch this. Like four months

04:31.720 --> 04:36.520
to figure out a high-level working Matrix proof of concept. And we did it.

04:36.520 --> 04:43.080
Yeah, it was a disaster really because we rushed incredible speeds. It was like the best gig

04:43.080 --> 04:46.520
possible that your day job is suddenly told you and all your mates at work that you can

04:46.520 --> 04:50.920
suddenly go wild to create something like Matrix and everybody's sprinted in slightly different

04:50.920 --> 04:56.040
directions naming no names. We might have ended up with three different versions of synapse at

04:56.040 --> 05:00.440
first. We had the bit that taught the client server API. We had the bit that spoke the server to

05:00.440 --> 05:04.760
server API and we had the bit in the middle that sort of meant to funnel stuff around the place.

05:05.480 --> 05:10.040
Each one had a different database schema. Each one had a different object model. They were all

05:10.040 --> 05:14.680
written in Python which was honestly a win but it's possible we might have sprinted a little

05:14.680 --> 05:19.240
too over enthusiastically into this and spent about six years playing off the technical debt

05:19.240 --> 05:23.160
that we accumulated in those three months and then ran up to launching synapse.

05:24.040 --> 05:29.080
Worth noting the end-to-end encryption wasn't there on day one but we did start in 2015 and we

05:29.080 --> 05:34.360
always designed as part of the protocol because if you are going to replicate data equally over

05:34.360 --> 05:39.480
many, many home servers, obviously it needs to be end-to-end encrypted such that if one gets owned

05:39.480 --> 05:44.440
all the messages don't go out the door. Then in 2016 it says we launched Element. I'm not sure

05:44.520 --> 05:49.480
I pulled the slide from but it definitely wasn't called Element. Basically when we launched we

05:49.480 --> 05:55.080
were using Matrix console at the beginning and then we said okay we need a very glossy app to

05:55.080 --> 06:00.200
actually drive the usage of this. We launched something which became Element at some point

06:00.200 --> 06:05.480
but initially was called Vector. What was the second name? Okay let's quiz the audience. What

06:05.480 --> 06:15.800
was the second name of Vector before Element? Yay well done and here we go. Element now is the

06:15.800 --> 06:26.280
flagship client and still growing there. Eventually in 2017 we set up shop as properly independent

06:26.280 --> 06:34.440
both like we started with the commercial company Element and also a bit later like in 2019.

06:35.800 --> 06:40.520
Yeah I think technically the foundation I think was incorporated in 2018 but we didn't do anything

06:40.520 --> 06:44.680
with it until 2019 to try to make sure that there is a clear split between Governance,

06:44.680 --> 06:49.800
the open source project and the protocol versus us practically trying to fund the bloody thing,

06:49.800 --> 06:54.360
Element running around, doing commercial stuff but that was the point where things started

06:54.360 --> 07:01.640
to split properly into your classic open source foundation versus startup trying to build stuff

07:01.640 --> 07:08.120
on top. We eventually turned on and went encryption by default in 2020 alongside Matrix 1.0

07:08.120 --> 07:15.560
which I guess was June 2019 and then fast forward to 2023 when we announced the idea of Matrix 2.0

07:15.560 --> 07:21.880
as showcase development X last foster and here we are today in 2024 the year of mainstream

07:21.880 --> 07:28.360
Matrix. Who knows maybe if you saw the DMA bit of the talk earlier it may or may not be getting the

07:29.320 --> 07:33.160
but yeah we'll talk a bit about it and Travis afterwards is going to have an amazingly very

07:33.160 --> 07:37.640
deeply technical talk all about everything you wanted to know about DBA. DBA? Well you could

07:37.640 --> 07:43.000
do one on DBA or you could do one on DMA up to you. I haven't asked permission for any other

07:43.000 --> 07:49.160
people in this photo to put this photo up but this is the original Matrix team on our way to REN

07:49.160 --> 07:55.080
from the London side playing Magic the Gathering or something. No it was all of us. Yeah that point

07:55.080 --> 08:00.760
the front and side is all in REN. Yes because we hadn't got to France yet. We're literally at some

08:00.760 --> 08:07.240
crappy travel lodge I think in Luton or Gatwick or somewhere on the way through to REN and so

08:07.240 --> 08:14.120
yeah basically that was the vibe at the beginning of Matrix back in May 2014 and more of a vibe

08:14.120 --> 08:20.760
is this which was the whiteboard in the Jupiter project room in the offices in REN where we

08:20.760 --> 08:26.840
basically drew up the possible architectures that we could use for Matrix. You will notice

08:26.840 --> 08:32.520
that there are four if not five architectures here the simplest one is just client to server to

08:32.520 --> 08:36.520
client and this was almost just mapping out the various options we had on the table but at that

08:36.520 --> 08:41.320
point we hadn't really decided how decentralized it would be. Then we had the one that honestly

08:41.320 --> 08:46.760
I came into this with which was assuming that it would be a little bit like SMTP and IMAP that

08:46.760 --> 08:51.400
you'd have like or just SMTP your client would talk to a home server that would cash in rooms

08:51.400 --> 08:54.840
which would talk to another home server that would be a single point of failure that would talk to a

08:54.840 --> 09:01.800
client. I mean it's a bit like a mark in XMPP sounds pretty easy. What I did not expect was for

09:01.800 --> 09:05.720
some of the folks on the previous slide to turn out looking really excited saying you know I think

09:05.720 --> 09:10.360
we might be able to do it like it we can actually go and replicate this between the home servers

09:10.360 --> 09:16.520
which I christened at the time the distributed sink nightmare in terms of active active replicated

09:16.520 --> 09:21.880
version of a protocol and then there is another one down here when you've got sort of two inboxes

09:21.880 --> 09:27.080
that sort of synchronize ish together but you basically have queues rather than DAGs and you

09:27.080 --> 09:33.000
had this one which has got lots of double arrows and I have no idea oh it's a mix net I think is

09:33.000 --> 09:37.400
basically all that was talking about you'd have a personal home server you have a bunch of relays

09:37.400 --> 09:42.440
which trusted maybe or not trusted I don't know I can't remember it was 10 years ago but either way

09:42.440 --> 09:46.840
that was the level of sort of whiteboard diagram that we were playing with at that point.

09:49.560 --> 09:57.640
So basically as Matthew said earlier fast forward almost 10 years now 2023 was very much

09:57.640 --> 10:06.600
focusing on the basics to work well thanks to the limits of funding which is good sometime

10:06.600 --> 10:11.480
like if you have a bit less money then you do focus on the thing more important. So we have

10:11.480 --> 10:14.600
posed a lot of things how do you want to do this do you want to go through the list Matthew?

10:15.240 --> 10:23.080
We have no you don't. I do it okay I will do it so the focus was very much on 2.0 CNAPs the SDKs

10:23.800 --> 10:32.680
Rust and GS SDK the otherwise peer-to-peer matrix is on the side pseudo IDs as well crypto IDs

10:32.680 --> 10:38.760
accountability however we still hope like very very soon we'll be able to get back to all of this

10:38.840 --> 10:45.160
low bandwidth as well and some of the done right work funded by Elements. The legacy

10:45.800 --> 10:54.440
Elements apps and dsdk that are based on are just put on bug fixes only and hopefully we'll

10:54.440 --> 11:02.440
be able to switch to everything to Rust soon and LiboM as well now that we have those amounts

11:02.440 --> 11:10.520
taking over and PortoDrum is on the side waiting for someone to take it and bring it up to

11:11.160 --> 11:16.760
what it all the power it can do. Yeah third room is particularly frustrating we got an email from

11:16.760 --> 11:22.600
the W3C after we announced that we had had to lay off the team element who are working on it and

11:22.600 --> 11:28.680
that nobody picked it up saying what this is meant to be our promised land of Web SG the Web

11:28.680 --> 11:34.440
scene graph API that we created I thought this was how the future of the spatial web as Apple

11:34.440 --> 11:39.960
would call it is meant to be and I said well I'm really sorry but we literally could not find anybody

11:39.960 --> 11:44.680
to fund it whatsoever even people like Rolls Royce who promised that they really needed this and would

11:44.680 --> 11:49.160
fund it then proceeded well first of all to lay off the team that we were talking to on their side

11:49.160 --> 11:57.880
and be not funded at all anyway it's been a really fun year so that said I'm gonna disgrace myself

11:57.880 --> 12:02.520
as you probably expect by wanting to talk a little bit about the projects which are shelved

12:02.520 --> 12:07.080
because it's really frustrating that an awful lot of work went into them last year until around

12:07.080 --> 12:14.760
November they got forcibly parked one of them is some pseudo IDs MSC4014 so this is the project

12:14.760 --> 12:21.800
to replace MXIDs with arbitrary identifiers per room now the reason for doing this is well first

12:21.800 --> 12:27.640
of all GDPR at the moment MXIDs get baked into the conversation history of your room and they are

12:27.640 --> 12:32.280
things like at Matthew got on matrix.org whereas if you had a different unique identifier on a per

12:32.280 --> 12:36.920
room basis that problem goes away and it's up to me whether I want to publish a mapping of my matrix

12:36.920 --> 12:42.280
ID onto the sender key or not the idea of this MSC is that it works out of the box with existing

12:42.280 --> 12:47.560
clients no code change is needed because the CS API maps the sender keys back to MXIDs when it

12:47.560 --> 12:52.600
hands it to the client however this does not provide account portability it's just replacing

12:52.600 --> 12:57.320
the MXIDs and it got implemented in dendrite in June of last year and if you're feeling particularly

12:57.400 --> 13:01.800
creative go and turn on the feature flags on dendrite and have a play with it but as I said

13:01.800 --> 13:07.000
unfortunately it is currently on ice I'm not going to force Amundoon to do the crypto ID one

13:07.000 --> 13:12.920
for the sake of alternating slides so for crypto IDs is an extension of pseudo IDs highly experimental

13:12.920 --> 13:18.040
the idea is that your sender keys become your end-to-end encrypted identity so we finally unite

13:18.040 --> 13:24.360
together end-to-end encryption in matrix with the idea of your MXIDs so the idea is that when you

13:24.360 --> 13:28.840
join a room for the first time you get a crypto ID generated for that room interestingly and

13:28.840 --> 13:34.360
perhaps controversially your client then signs everything it does or the events with the crypto ID

13:35.720 --> 13:40.120
so that you can basically prove that you own those events and as you move between servers in

13:40.120 --> 13:44.840
future you can prove that it came from me as an individual Matthew rather than being signed by

13:44.840 --> 13:48.920
your home server which you don't really care about if you're migrating between home servers

13:49.000 --> 13:54.920
this has the gbs side effect that we no longer have cryptographic deniability because by definition

13:54.920 --> 13:59.240
you would be able to see that a given client owned by a given user has sent a given message

13:59.240 --> 14:03.240
so there's going to be an interesting trade-off to be had there right now we do technically

14:03.240 --> 14:10.200
have cryptographic deniability but practically speaking it really depends on the trust model

14:10.200 --> 14:14.680
I'm not sure just how useful it really is other than on paper whereas this would obviously throw it

14:14.680 --> 14:19.720
away again implemented in dendrite and was just being drafted in Rust SDK when it got shelved in

14:19.720 --> 14:25.400
November the idea is that if you take pseudo IDs and add crypto IDs and add some magic glue which

14:25.400 --> 14:29.800
probably means storing account data in a room so it can replicate between servers then you would

14:29.800 --> 14:34.520
have client controlled account portability also a prerequisite for peer-to-peer matrix which is also

14:34.520 --> 14:40.600
on hold and again is currently on hold how am I doing on time Jan?

14:41.560 --> 14:43.640
More than 15 minutes?

14:47.480 --> 14:50.440
No no no no I am don't worry I am can I do a demo then?

14:51.880 --> 14:56.200
Okay so whilst we're talking about daily departed projects I know this is probably going to piss

14:56.200 --> 15:00.200
off a bunch of people but I really want to very briefly show the final bits that the third room

15:00.200 --> 15:08.200
guys did before they got killed so here's our third room using OIDC as oh that's a great start

15:09.160 --> 15:14.520
this is what happens if something is busy a bit rotting away let me try to sign into this

15:15.720 --> 15:19.960
using OIDC because third room was the first thing that we used to test out native OIDC

15:19.960 --> 15:23.880
we might have to wait a little minute for that server to wake up because I haven't logged in very

15:23.880 --> 15:28.920
recently so this is definitely a dangerous demo talk amongst yourselves imagine that a server is

15:28.920 --> 15:33.960
actually working here which it is right so where we left you last year at Fozden was that this

15:34.040 --> 15:37.320
thing had just launched and the next big thing was actually to make the whole thing

15:37.320 --> 15:43.880
scriptable and do fun stuff with it and it got to the point here where you could go and enter

15:43.880 --> 15:50.360
a world like this and this is just a matrix room stored in gltf with the sorry with the world data

15:50.360 --> 15:56.840
stored in gltf itself but what Robert and AJ implemented is if you press the tilt button

15:56.840 --> 16:02.680
at any point you go and get an inworld inspector up you can go and select things like buildings

16:02.680 --> 16:06.360
and you can do things like move them around and manipulate them in real time I think I

16:06.360 --> 16:11.400
showed this last year the next thing though was to make the entire thing scriptable by Wasm

16:11.400 --> 16:15.640
so you have a script editor now built in here which gives you a little bit of javascript

16:16.280 --> 16:21.000
what you can do is to go in and grab something like the buildings you just drop it straight in

16:21.000 --> 16:25.400
there and it right see the javascript to grab the buildings and then for every time the world

16:25.400 --> 16:32.120
updates you get a delta timestamp and absolute timestamp and I can go in there and do I do not

16:32.120 --> 16:38.760
know what this API is how back in this go let's assume it has a translation button and say that

16:38.760 --> 16:45.240
y is going to be what 10 units times or the sign of the current timestamp that will work right

16:45.880 --> 16:52.360
and if you head um save as run what it will do is compile the javascript down to Wasm using quickjs

16:52.360 --> 17:01.720
written by the amazing Fabrice Miller and reload the world and there you go

17:02.120 --> 17:03.560
let's upload in your dance I think

17:06.360 --> 17:11.320
this is so cool this is so cool you can see why w3c got in touch afterwards saying

17:12.120 --> 17:17.160
hang on this is how the future of the web is meant to be and where are the people and it's like

17:17.160 --> 17:21.800
well this is what it is so if you're watching this and you think this deserves to exist well first

17:21.800 --> 17:25.240
of all I'm not sure I'm gonna ever persuade the guys to work on it again because they feel pretty

17:25.240 --> 17:29.960
pissed off obviously that the project collapsed but the code is all there still and it's so

17:30.040 --> 17:35.800
antelizingly close to being absolutely amazing right sorry back on to what we're talking about

17:37.720 --> 17:39.480
cryptoidies or yeah

17:42.200 --> 17:42.920
what's the next time

17:43.800 --> 17:48.920
matrix 2.0 I mean who was in the thing in Nansen this morning do I need to go through this again

17:49.480 --> 17:55.400
oh crap yeah only about half of you yeah yeah perhaps we should have done that at the beginning

17:55.400 --> 18:00.840
of the talk in 20 minutes through anyway right so matrix 2.0 very quickly first of all this is not

18:00.840 --> 18:07.000
a spec release this is a state of mind a bit like web 2.0 it's made up of various MSCs and the status

18:07.000 --> 18:12.680
is sliding sink so instant launch and instant logging and instant sink it kicks ass but it's too

18:12.680 --> 18:16.840
fiddly we are currently performing slidectomy which is the technical term for removing the sliding

18:16.840 --> 18:24.520
bit from sliding sink and there is in fact a PR against the Rust SDK which basically shifts all

18:24.520 --> 18:29.320
of the ordering onto the client rather than doing it on the server and this is all my fault being

18:29.320 --> 18:34.200
stupid and over enthusiastic going and trying to do this over optimized implementation where the

18:34.200 --> 18:39.000
server figures out the best possible ordering and then the client tweaks it at the end and it turns

18:39.000 --> 18:43.240
out that having two different things fighting over control of the order of a list doesn't work very

18:43.240 --> 18:48.680
well so we've basically said the client gets to order it entirely the server does a very approximate

18:48.680 --> 18:53.960
probably based on time stamp thing and the good news is that it is just a subset of the current

18:53.960 --> 18:59.400
API so it's not a yes or no rewrite it's just basically simplifying the API so it's easier to

18:59.400 --> 19:05.080
implement then you've got end to end encrypted VoIP which again kicks ass we demoed it and Janssen

19:05.080 --> 19:13.080
and it worked this morning need to update the MSC because it's on its 6 or 7th iteration now and I

19:13.080 --> 19:18.040
think it's stabilized enough that we should actually spec it properly faster joins so synapse

19:18.120 --> 19:21.800
rapidly joining rooms and other home servers for that matter if they implemented them

19:23.400 --> 19:28.680
incrementally lazy loading the data in it would kick ass if we actually finished it so we got the

19:28.680 --> 19:33.960
hard bit done the kind of infrastructure and made rooms non-atomic in synapse and then actually

19:33.960 --> 19:40.200
didn't get to the point where we would get it to go faster significantly faster and then IDC which

19:40.200 --> 19:45.000
does kick ass but it's going to be a big migration as we need basically everything to support it

19:45.000 --> 19:50.200
before we start turning it on our matrix org etc but there is lots of stuff in progress if I have

19:50.200 --> 19:57.480
more time and try to show the QR single hop login demo which is super cool then Rust SDK is the brave

19:57.480 --> 20:02.200
new world that goes and wraps us all together on the client side and as of Friday as I mentioned in

20:02.200 --> 20:09.000
Janssen the JS SDK and therefore Element Web and anything else using JS SDK now uses Rust SDK for

20:09.000 --> 20:15.320
crypto so we are finally at the point where the old Le Bon c++ library is in maintenance mode and

20:15.320 --> 20:21.480
then some whereas Vadosmats the Rust implementation is our brave new future and I spoiled that Demir

20:21.480 --> 20:29.400
has already produced a post quantum PR draft for Vadosmats using the kyber primitives wrapped around

20:29.400 --> 20:35.720
I think curve 25519 so a kind of hybrid approach which should be compatible with the signal and

20:36.680 --> 20:44.360
PQXDH and key exchange stuff and what else are we doing in Vadosmats it was another big thing

20:44.360 --> 20:49.000
but I can't remember what it was another PR that landed basically we fixed all the crypto bugs in

20:49.000 --> 20:54.360
one place and a huge huge focus in the coming months is making the crypto finally suck a lot

20:54.360 --> 21:03.000
lot less. Should I keep going on MLS you can do the whole end bit of it okay on MLS people might

21:03.000 --> 21:06.520
be wondering hey it's not talking about MLS anymore what's that all about first of all we are

21:06.520 --> 21:11.240
still doing this you can track the progress on our MLS yet.com MLS is the group encryption that

21:11.240 --> 21:16.280
scales much much much better than normal double ratchet and almond Vadosmats we have it largely

21:16.280 --> 21:21.640
working on matrix has huge key bundles you have to store the keys and the media repository they're

21:21.640 --> 21:27.240
so big at the moment however there's been a lot of discussion on the meme side which we'll talk

21:27.240 --> 21:32.040
about briefly and Travis will talk about a lot more in a few minutes in terms of what if you

21:32.120 --> 21:37.320
actually used MLS to synchronize everything so rather than having a matrix tag for tracking

21:37.320 --> 21:42.760
no synchronizing data between servers what if you just chuck everything into MLS. TBD so there's

21:42.760 --> 21:49.160
a little bit of a do you put MLS over matrix or do you put matrix or meme over MLS and debate going

21:49.160 --> 21:56.600
on right your slides. Yeah basically as we said at the beginning 2024 could really be the year

21:56.600 --> 22:02.920
where our prediction was the convention would come to and the prediction was this that this is a

22:02.920 --> 22:09.880
slide taken off investor pitch deck saying in 2019 in five years everyone will communicate over

22:09.880 --> 22:15.080
matrix that's why we did this right. In 2019 it said 10 years and now because we're five years later

22:15.080 --> 22:21.000
and now it says five years just saying also this is written in R and it's real traffic from 2019

22:21.000 --> 22:26.200
showing the I think the top 100 home servers talking to one another just saying if you're

22:26.200 --> 22:32.920
investor decks aren't written in R you're doing it wrong. So basically killing email and the phone

22:32.920 --> 22:38.920
network so why the digital market tag you may have heard of it they demand the big communication

22:38.920 --> 22:45.400
services called gatekeepers to actually interoperate with the rest of the world. Two of them have been

22:45.960 --> 22:50.840
named so far WhatsApp and Facebook Messenger iMessage is pushing back saying no no no we're not a

22:50.840 --> 23:00.520
gatekeeper but let's see where it goes. To the business yeah business to a user. So last year

23:00.520 --> 23:06.120
it was coming into force in the 7th of March they will have to actually expose these APIs as

23:06.120 --> 23:11.400
production ready and anyone in here who actually wants to interoperate with WhatsApp because they

23:11.400 --> 23:15.400
don't want to create an account there will be able to come to them and say hello can I please

23:16.200 --> 23:21.800
integrate against your APIs to talk to your users. She's a little bit ironic because it starts to look

23:21.800 --> 23:27.480
an awful lot like the PSTN in terms of you have great big telecoms providers and you go to someone

23:27.480 --> 23:33.320
at AT&T and said hello please can I talk SS7 to you so my little telco can talk to the big telco

23:33.320 --> 23:37.000
and they make you sign a massive contract and there's all sorts of back and forth to happen.

23:37.000 --> 23:42.520
Obviously we can't say what that will look like with method but there may be a risk oh well there

23:42.520 --> 23:46.520
could be entire spectrum between open federation versus closed federation versus everything in

23:46.520 --> 23:54.360
between and we just don't know what will happen. Let's see in a month and basically yeah one we

23:54.360 --> 23:59.800
may get to a point where matrix becomes the glue and between all the communication system and

23:59.800 --> 24:05.880
matrix them together. Yeah I mean I'm not counting on it honestly on this architecture particularly

24:05.880 --> 24:10.280
because everybody would need to agree both on the same dialect of double ratchet as well as the

24:10.280 --> 24:14.840
content payloads within but you never know if we get critical mass in some places perhaps everybody

24:14.840 --> 24:23.240
will follow. So yes we mentioned it this morning already still a lot a lot a lot of things to do

24:23.800 --> 24:28.440
especially on the core making sure the core is funded we're trying to put a big call out for

24:28.440 --> 24:34.200
fundraising and honestly the goal is really to get the big guys who actually are using it for

24:34.280 --> 24:42.040
hundreds of thousands of users millions of users without contributing a sense to the project itself

24:42.040 --> 24:47.800
and funding the core trying to raise the alarm. At the same time there is a public policy dev room

24:47.800 --> 24:52.280
there where we're trying to figure out how do we get the proven source projects actually funded so

24:52.280 --> 25:00.600
I'm going to run there to try to solve that problem very shortly after this. Cool. Thank you guys so

25:00.600 --> 25:06.680
this morning a lot of people actually let's go thank you to everyone who is supporting it and

25:06.680 --> 25:12.680
everyone who jumped in live this morning during the talk to actually become a member of the

25:12.680 --> 25:19.160
foundation and thank you to all the already how do we call them supporters organizational

25:19.160 --> 25:24.920
supporters as well in here. Yeah honestly if your organization is just happening to use element

25:24.920 --> 25:29.720
and matrix as its common system it really doesn't cost that much to put some money behind the bar

25:29.800 --> 25:35.560
to keep it going like we met x wiki on Friday and said oh how's it going and they said

25:35.560 --> 25:40.200
stuck notifications are the bane of my life and he said oh well if you actually want us to have more

25:40.200 --> 25:44.440
member to go and work on certain notifications and perhaps you can become a silver member of the

25:44.440 --> 25:51.000
matrix.org foundation and that is why there is a x wiki logo and a cryptpad logo on the slides there

25:51.000 --> 25:57.000
seriously it's meant to be relatively modest but if we get all the organizations doing it as well

25:57.000 --> 26:02.040
as the individuals then if nothing else is really a lot easier to go to the really big people like

26:02.040 --> 26:07.560
the EU and say look we've got already got 800 people supporting this this is an important thing it

26:07.560 --> 26:14.840
matters therefore you should match 20 fold 50 fold 100 fold and as a narrative it may work.

26:16.040 --> 26:22.280
So yeah meanwhile we have an awesome community a lot a lot a lot of things are happening around

26:22.600 --> 26:27.160
and this is the menu for this afternoon where everyone will be able to tell us a bit more

26:27.160 --> 26:30.200
about what they're working on looking forward to it thank you everyone.

26:39.320 --> 26:42.840
Any questions? Two I'm allowed two questions but they can't come from me.

26:44.760 --> 26:45.240
Kim.

26:53.000 --> 27:00.440
Excellent question. So the excellent question which I shall repeat is where the hell is

27:00.440 --> 27:05.640
multiple accounts support in element. Now most of the best of clients out there have it already

27:05.640 --> 27:11.160
however we've never got round to it in either element or element x there's not a good reason for it

27:11.160 --> 27:15.720
other than everything else taking slightly higher priority we did have it in matrix console the very

27:15.720 --> 27:20.680
first matrix client that we wrote before producing vector and riot or whatever it is now.

27:22.280 --> 27:27.720
Yeah no good answer other than we need to add it and element x would be a great time to do that

27:27.720 --> 27:30.200
it's built with it in mind we just haven't put it in the UI yet.

27:32.680 --> 27:34.280
Everyone can do it apart from element pretty much.

27:35.080 --> 27:44.040
Is there any indication that other assorted governments are looking at following on something

27:48.040 --> 27:53.240
So the question is whether other governments are going to take inspiration from the digital

27:53.240 --> 28:00.600
market tax there are some movements in the US around it trying to remember the name it's not

28:00.600 --> 28:06.360
the interoperability bill but something along these lines so there is definitely it's like

28:06.360 --> 28:13.480
GDPR then has been looked at by the US and European Europe is leading on these sort of things and

28:13.480 --> 28:15.080
yeah there is movement in that direction.

28:15.480 --> 28:35.080
So yeah the question is whether we are lobbying within the EU to make the API's the gatekeeper

28:35.080 --> 28:41.640
offer open so the DMA is forcing gatekeepers to open their APIs the big lobbying we've been doing

28:41.640 --> 28:47.880
in the last four years has been please please please don't ask them to only open their APIs

28:47.880 --> 28:53.560
but try to converge towards an open standard so that as small companies who want to integrate

28:53.560 --> 28:59.240
with these people I don't have to build a polyglot messenger which speaks what's up Facebook

28:59.240 --> 29:07.080
messenger Google blah blah blah all of them in parallel please please please so so far we don't

29:07.080 --> 29:12.920
really know what this is going to be the in the law of the DMA in the text it doesn't say you have

29:12.920 --> 29:18.040
to use an open standard but like basically we continue working with everyone the European

29:18.040 --> 29:23.400
Commission's and the gatekeepers and all the big corporations trying to convince everyone that

29:23.400 --> 29:30.120
that's the best way to go. I think the US equivalent of DMA is American Innovation and Choice

29:30.120 --> 29:35.960
Online Act maybe one of Senator Wyden's initiatives perhaps but you don't need to go and look it up

29:36.520 --> 29:41.080
and there was something I wanted to add to that but I've gotten what it was just the lobbying

29:41.080 --> 29:46.040
try to get everybody on a single it was it would have been amazing if we'd persuaded the Commission

29:46.040 --> 29:50.920
to basically put into law you have to speak an open standard the reason that they didn't is first

29:50.920 --> 29:56.920
of all it's not really their job as politicians to dictate the actual technical implementation

29:56.920 --> 30:01.560
they need to say what the outcome should be like a more competitive environment without massive

30:01.560 --> 30:07.880
anti-trust behavior but it's up to us literally up to us a lot in this room to figure out what that

30:07.880 --> 30:16.600
should really look like and the other big problem is that there isn't a standard that is suitable

30:16.600 --> 30:22.200
like matrix is great it's looked after the matrix org standard foundation but it's not an internationally

30:22.200 --> 30:27.000
recognized standards body so if we're gone through ITF already then perhaps that would have worked

30:27.400 --> 30:32.040
it's not like they can just tap on the wall and say use matrix even though it has some traction

30:32.760 --> 30:37.320
I would say this is an amazing segue to travestalk right now unless there are any other questions

30:37.320 --> 30:46.520
which I can cram in but I'm not allowed to no thank you very much

