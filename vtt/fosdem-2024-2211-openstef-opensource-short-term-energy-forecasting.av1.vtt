WEBVTT

00:00.000 --> 00:10.760
Hi everyone. Thank you for having some patience with me. Computers are not my strong suit,

00:10.760 --> 00:17.240
although I am in IT. So my name is Sunita Rijder. I am the Community Manager of Open

00:17.240 --> 00:23.640
Staff. And I work at Alieander. So let's get into a little bit of background. So Alieander

00:23.640 --> 00:29.160
is a distributed grid operator. So we are responsible for the distribution of energy

00:29.160 --> 00:36.920
in both electricity and gas in about a third of the Netherlands. So I think we all know

00:36.920 --> 00:41.960
these kinds of gas. So this is energy consumption on some place in the Netherlands. However,

00:41.960 --> 00:46.440
we have no idea what's going to happen in the future. Well, this is where Open Staff

00:46.440 --> 00:53.400
comes in. Open Staff stands for Open Short-term Energy Forecast. So instead of our question

00:53.400 --> 00:59.640
mark, we actually know what's going to happen. So after this very short introduction, let's

00:59.640 --> 01:03.880
tell, let's talk about what I'm going to talk about today. So first of all, I'll start with

01:03.880 --> 01:09.160
the challenges on the grid and why we actually need Open Staff. Then I'll talk about Open

01:09.160 --> 01:16.720
Staff, of course. And finally, I really want to discuss our recent developments and collaborations.

01:16.720 --> 01:22.600
So the challenges on the grid. So when everything was still good and easy on the electricity

01:22.600 --> 01:27.320
grid, it looks like this. So on the left, you see one big producer, just one direction

01:27.320 --> 01:33.920
energy flow, and then we have our consumers. Fairly easy. However, due to the energy transition,

01:33.920 --> 01:40.200
I think you're all aware, it looks like this. So very chaotic. So on the production side,

01:40.200 --> 01:45.880
we have a distributed production due to our solar and wind, both on the mid and low voltage,

01:45.880 --> 01:51.240
but also at our consumers. And on the consumption side, we have the issue that our consumption

01:51.240 --> 01:56.440
has exponentially increased. We had a lot about EV charging over here. Well, those electrical

01:56.440 --> 02:05.360
vehicles need electricity through the grid. And this is where our capacity issues start.

02:05.360 --> 02:10.600
So this is a map of the Netherlands. And I think you can all guess that red is bad. So

02:10.600 --> 02:15.960
on the red parts, we actually have no capacity available. So let's say that you want to start

02:16.040 --> 02:21.520
a company of one of these areas, we cannot connect you. So you get no power from us because

02:21.520 --> 02:27.280
we just simply have none to give. But of course, we're all very smart and over the people.

02:27.280 --> 02:33.080
So we have some solutions. So one of these solutions is actually to shave the peak. If

02:33.080 --> 02:40.000
we expect grid limitations to be surpassed. So on this left image, you see a forecast

02:40.000 --> 02:45.200
on the load on, for example, a transformer. We see a very clear peak. And this is where

02:45.200 --> 02:52.160
our grid limitations are surpassed. So our solution is just to say shave the peak. So

02:52.160 --> 02:57.040
for example, if this is production, we just ask one of our solar farms to just shut off

02:57.040 --> 03:02.240
for a little while. Of course, they can money for this, but that's something else. And then

03:02.240 --> 03:09.680
this is the result. So our grid limitations are not surpassed and nothing breaks. So great.

03:10.640 --> 03:18.320
But then able to do this, we do need to know just left image. So we actually need accurate forecasts.

03:20.080 --> 03:28.000
And this is where we have open step. So again, open step stands for open short term energy

03:28.000 --> 03:33.920
forecasting. And let me a little bit explain a little bit more about it. So first of all,

03:33.920 --> 03:38.800
what the hell is it? Well, it's a complete software stack to forecast the load on the

03:38.880 --> 03:42.560
electricity grid. But it's energy forecast. So it could also do it for heat.

03:43.760 --> 03:48.960
And it's automated machine learning pipelines. So it's a step by step process, which is automated

03:48.960 --> 03:57.040
to make a forecast. So in these dark blue boxes is all everything that open stuff can do. And

03:57.040 --> 04:04.000
I'll talk a little bit more about it. So what does the software look like? So first of all,

04:04.000 --> 04:08.400
you need a database. This is one that you have to make yourself, of course. But we do have

04:08.480 --> 04:14.960
open step DBC, open step database connector. And this is able to get all of your data from your

04:14.960 --> 04:22.000
database. And then we get into open step already talked about pipelines. So of course, these are

04:22.000 --> 04:29.040
in the software overview. And these are part of the tasks orchestration. Then we have data preprocessing,

04:29.920 --> 04:35.040
which includes data validation. So for example, if you see a little flat line, as we're able to

04:35.680 --> 04:41.120
cancel these out of your input data, and there was something very interesting, feature engineering.

04:41.120 --> 04:45.680
So in this feature engineering, we're, for example, able to calculate the wind speed at the height of

04:45.680 --> 04:51.920
a windmill from the wind speed on the ground. And we're also able to calculate the lag load

04:51.920 --> 04:58.080
for one time stamp. And then of course, we're machine learning pipelines. So we have some

04:58.080 --> 05:03.360
machine learning in there. So we're using open source models such as XG boost to make our machine

05:03.360 --> 05:09.600
learning models. So we're able to train, optimize hyper parameters, of course, make a forecast.

05:09.600 --> 05:15.200
And we're also able to make a split forecast to our Dazzles model. And finally, we are able to

05:15.200 --> 05:23.280
evaluate our forecasts, store our model, and do some post processing. So let's look into the

05:23.280 --> 05:30.560
methodology on a really high level. So on the left, we have our target load. This is where we

05:30.640 --> 05:36.240
actually want to forecast. Then we have some external predictors. So we have our weather forecast,

05:36.240 --> 05:42.880
market prices, and typical profiles of companies and households. From these external predictors,

05:42.880 --> 05:47.840
we can actually calculate our derived features. So this is the feature engineering I just talked

05:47.840 --> 05:53.360
about. So we're able to calculate lag loads for each time stamp, but also to have some derived

05:53.360 --> 05:59.120
weather features, such as, for example, the wind speed at the height of a windmill. And for the

05:59.120 --> 06:04.800
more calendar info, it really matters if you're are forecasting on a Sunday or Christmas compared

06:04.800 --> 06:12.960
to a Monday. And then we can train a single model for all our lead times. So here you can see what

06:12.960 --> 06:18.960
the data, for example, looks like. So if a daytime with increments of 15 minutes, our targets,

06:20.000 --> 06:25.280
and external predictors, you can also see here that we have the Dutch energy prices in there.

06:25.280 --> 06:32.960
So if you have multiple training horizons, we just simply do pick late our data and use this

06:32.960 --> 06:40.080
for our training horizons. And then if there are questions about it, please ask me in the break,

06:40.080 --> 06:46.320
but I don't have time to go into this in 15 minutes. We can with our trained model now actually make

06:46.320 --> 06:54.880
this forecast. And of course, we want it to look nice. So we have this beautiful Grafana dashboard,

06:54.880 --> 07:00.640
which actually summarizes all of the information that you need for your forecast. So let's look

07:00.640 --> 07:07.760
into it. First and foremost, our forecast. So the red line on the left is actually the low that

07:07.760 --> 07:13.360
has been historically measured. And then we see here the yellow lines is our forecast. Well,

07:13.360 --> 07:18.000
now you see that there are a lot of yellow lines. What do those mean? Well, those are actually the

07:18.000 --> 07:24.240
quantiles. So you have actually a certainty in your forecast. And this can be actually useful if we're

07:24.320 --> 07:29.440
a certain location. You're quite sure what your forecast is going to be. You can go into

07:29.440 --> 07:33.280
another quantile. Then if you have a location where you have a lot of factors that you actually

07:33.280 --> 07:41.600
don't know anything about. And also very nice our feature importance plot. So here in the feature

07:41.600 --> 07:48.800
importance plot, we can see our lag loads and some other features. And this is actually

07:49.760 --> 07:54.320
nice. So you can see for every location, which features are important for your forecast.

07:54.320 --> 07:58.800
So for example, here we see radiation. I don't think it's readable for you, but it says radiation.

07:58.800 --> 08:05.280
So you know that there are quite some solar parks or solar panels behind, for example, your substation.

08:07.680 --> 08:11.600
Wind speeds nowhere to be seen. So probably no windmills in that area.

08:12.400 --> 08:18.880
So this was really short about open staff. Let me see how much time I have left.

08:21.200 --> 08:27.120
Six minutes. Perfect. Okay. So community and upcoming events. One of the main things that has

08:27.840 --> 08:34.480
really changed in open staff this last year is our community. So before it was just Alliander

08:34.480 --> 08:41.680
who actually created it together with RTE, working on open staff. And now it looks like this. So let

08:41.680 --> 08:47.040
me go over every company really quick. So Alliander, that's where I'm from, talked about that enough.

08:47.040 --> 08:51.520
RT actually working on open staff for quite a while and they're actually ready to implement it very

08:51.520 --> 08:56.720
soon. RT International just joined us this year. They have a very nice proof of concept and they're

08:56.720 --> 09:02.640
going to work on it further. Fidel has actually been using open staff quite a long. I've heard

09:02.640 --> 09:10.720
some terms, leeches this today. Well, that was a feed on up to actually a month ago. So we contacted

09:10.720 --> 09:15.280
them and they were like, oh yeah, we found some bugs. We fixed it. We can implement this. So they

09:15.280 --> 09:20.160
actually joined our community as of this year. Sigelman still working on a proof of concept

09:20.160 --> 09:24.880
and seeing if they want to replace their own forecasting model with open staff. And Shell is

09:24.880 --> 09:30.320
working on open staff DBC and seeing if they can use their method of data important.

09:32.720 --> 09:39.120
Now, I hope everyone feels like they want to try open staff. Well, you're in luck because we are

09:39.120 --> 09:46.160
organizing a workshop. So on the Friday, the first of March from two to four, we were organizing a

09:46.160 --> 09:51.680
workshop. And I would like everyone who's interested to join. So you'll get a better

09:51.680 --> 09:54.800
introduction to open staff and also a little bit more of the technical details.

09:56.560 --> 10:01.440
It will be virtual. And you will get really a hands on experience. So you get some example

10:01.440 --> 10:05.840
notebooks from us where you have to make your own exercises and you can actually make your own

10:05.840 --> 10:12.000
forecast with open staff and see how easy it is. If you want to sign up, just scan the QR

10:12.000 --> 10:17.120
card over here. And it will be very nice. I also have it on the next slide for people who are too

10:17.120 --> 10:24.400
slow. So want to know more about open staff, maybe even before you sign up for the workshop,

10:24.400 --> 10:30.880
we of course have our GitHub website documentation, etc. You're only one command away from using open

10:30.880 --> 10:37.440
staff. And if there's anything you want to ask or give some comments or anything, you can just

10:37.440 --> 10:43.920
send me an email or send me a message on LinkedIn. So thank you for your time and I welcome any

10:43.920 --> 10:44.400
questions.

10:50.800 --> 10:52.080
Who's running the microphone?

10:52.880 --> 10:56.800
I'll try to do my best. Please feel free to guess to find the best path.

11:00.880 --> 11:08.400
Hello. First of all, thank you so much. This was very interesting. And I have no experience,

11:08.400 --> 11:13.440
I have never heard of open staff before reading on the FOSTA website. I have one question about

11:13.440 --> 11:18.960
the data collection. Do you provide like some examples or standards on how and where to fetch

11:18.960 --> 11:22.080
data because the data source is very, I tried, I looked.

11:31.200 --> 11:40.400
So very good question, I think this is something that a community indeed struggles with. So for the

11:40.400 --> 11:44.640
Netherlands, we actually do have those sources because we are using them ourselves for other

11:44.640 --> 11:49.120
countries who are working on it to see if we can find some open data for everyone.

11:50.320 --> 11:54.880
But if you're interested, you can always send me an email and I'll see what we have. Yeah, great.

11:55.680 --> 12:02.240
Hi, it's Miné. I'm from Red Hat. So obviously I will ask the question about scaling this, right? How

12:02.240 --> 12:07.040
will you standardize and scale this because it's a project. It sounds super interesting. But how

12:07.040 --> 12:13.840
are we going to scale this to 49,000 substations or millions of smart meters at home?

12:15.600 --> 12:19.760
Very good question. This is actually something we're working on right now. So we are actually

12:20.400 --> 12:26.000
employing our open step stack on Dexter probably anytime soon and seeing if you can actually scale

12:26.000 --> 12:31.600
from that. Currently we have it scaled up at I think 100 substations. And if you're curious how we

12:31.600 --> 12:36.960
have a reference implementation on our GitHub and you can see all the information there on how we

12:37.120 --> 12:39.920
deploy this. Thanks.

12:41.920 --> 12:42.800
Yeah, yeah, sure.

12:49.920 --> 12:58.160
I have a question about the data sources. Is there any thought given to adding geographical

12:58.160 --> 13:03.680
information systems data into the system for forecasting models? Because especially stuff

13:03.680 --> 13:09.680
like wind and solar radiation also not just depend on the time of day and the wind speeds,

13:09.680 --> 13:11.120
but the location itself.

13:16.240 --> 13:21.600
Great question. Yeah, actually for our system, it just connects to the closest K and MI. So that's

13:21.600 --> 13:27.520
the Royal Dutch Weather Organization. So it's able to find the closest station to where you actually

13:27.520 --> 13:32.800
want to forecast. So it definitely takes a location to account. We have a prediction job

13:32.800 --> 13:36.640
class where you can put in all of the information for your forecast and in there you also put the

13:36.640 --> 13:42.800
latitude and longitude of your location. So it does take that into account. Question over there.

13:53.680 --> 13:58.000
Thanks for the question about the geographic data because I was thinking about an approach of

13:58.000 --> 14:04.080
just using cheap raspberry weather stations in Austria and distributing them across some locations

14:04.080 --> 14:08.720
to fetch the data because I have the Google Weather API and the Open Weather API or whatever as

14:08.720 --> 14:14.960
comparison values. And for the geographic thing, thanks for the question. How would you connect

14:14.960 --> 14:19.440
that? Like is this a plan of open stuff? Did I miss this?

14:28.560 --> 14:32.720
Yeah, thanks for the kind of difficult question because I don't know the answer.

14:33.600 --> 14:38.560
So I'll ask my colleagues who actually made this part of the open stuff and I'll get back to you

14:38.560 --> 14:42.720
if we connect afterwards. So then you'll know. But it's very interesting to do with the Raspberry

14:42.720 --> 14:44.800
Price things. Thanks.

