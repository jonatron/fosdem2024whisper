WEBVTT

00:00.000 --> 00:10.800
And I will now like to introduce our next speaker to you.

00:10.800 --> 00:14.800
I would say he needs no introduction because you're already running his code.

00:14.800 --> 00:15.800
But he might need an introduction.

00:15.800 --> 00:16.800
This is a new...

00:16.800 --> 00:19.120
Sorry, could I have some silence in the room, please?

00:19.120 --> 00:20.120
Thank you.

00:20.120 --> 00:27.000
You're already running his code and he's telling a story of which I am, for some reason, after

00:27.000 --> 00:29.000
running the Go Dev Room for five years.

00:29.000 --> 00:33.320
Still I'm curious about, because I haven't contributed the Go project yet.

00:33.320 --> 00:34.320
And he has.

00:34.320 --> 00:35.440
I'm jealous of him.

00:35.440 --> 00:38.000
So round of applause for a Go contributor.

00:38.000 --> 00:39.600
Thank you.

00:39.600 --> 00:44.120
Can you hear me okay?

00:44.120 --> 00:46.240
Is the microphone on a good spot?

00:46.240 --> 00:47.240
Yep.

00:47.240 --> 00:48.400
So quick show of hands.

00:48.400 --> 00:50.920
Who here is a Go contributor?

00:50.920 --> 00:53.640
Is contributed to the standard library, the compiler.

00:53.640 --> 00:58.160
I see one, two, three, four, shows hands, five.

00:58.160 --> 01:01.360
Who here would like to be, like Marcia, who would like to be a Go contributor?

01:01.360 --> 01:05.600
There's a lot more hands.

01:05.600 --> 01:08.520
Who of you who wants to be is afraid to become a Go contributor?

01:08.520 --> 01:12.640
Who thinks it's intimidating or complicated or you just don't know enough about Go routine

01:12.640 --> 01:14.560
scheduling or something like that?

01:14.560 --> 01:15.560
Okay.

01:15.560 --> 01:20.440
This talk is for you folks who have your hands up right now.

01:20.440 --> 01:21.440
So my goals for the talk...

01:21.440 --> 01:22.440
Oh, first of my agenda.

01:22.440 --> 01:27.720
I'm going to talk about goals, who I am, and I'm going to tell my story of how I became

01:27.720 --> 01:31.840
a Go contributor and talk a little bit about how you can too.

01:31.840 --> 01:34.760
So that's my goal.

01:34.760 --> 01:36.360
My goals today, tell my story.

01:36.360 --> 01:41.520
And ultimately to encourage you to be less intimidated about becoming a Go contributor.

01:41.520 --> 01:43.160
My non-goals are to be exhaustive.

01:43.160 --> 01:48.400
I'm not going to do a deep dive into how the proposals work or how Garrett works or all

01:48.400 --> 01:49.400
the technical stuff.

01:49.400 --> 01:51.480
And I'm not going to show you a lot of code.

01:51.480 --> 01:55.000
There's a little bit of code, but you don't even have to be a Go developer to understand

01:55.000 --> 01:57.000
the code I'm going to show you.

01:57.000 --> 01:58.000
Who am I?

01:58.000 --> 02:01.000
I'm a Go contributor, technically.

02:01.000 --> 02:03.160
I'm a fractional Gofer.

02:03.160 --> 02:04.840
Fractional CTOs are all the rage these days.

02:04.840 --> 02:05.840
I'm not that.

02:05.840 --> 02:06.840
I'm a fractional Gofer.

02:06.840 --> 02:07.840
I work for different clients.

02:07.840 --> 02:10.240
You can hire me if you want some help with your Go.

02:10.240 --> 02:13.320
I also do Go mentoring and career mentoring, hire me.

02:13.320 --> 02:17.920
I'm also the co-organizer of the Go Amsterdam meetup.

02:17.920 --> 02:20.360
And I'm a podcast host and YouTuber.

02:20.360 --> 02:25.680
I hit that word, but I put videos on YouTube, so I am one.

02:25.680 --> 02:28.400
So some of you may know me through the Cup of Go podcasting.

02:28.400 --> 02:30.040
Listeners here in the room today?

02:30.040 --> 02:31.040
All right.

02:31.040 --> 02:32.040
A couple.

02:32.040 --> 02:33.040
I hope there's a lot more after this.

02:33.040 --> 02:34.280
I have stickers, by the way.

02:34.280 --> 02:35.280
They'll be over there.

02:35.280 --> 02:39.320
If you like Brewster, our little Gofer mascot for the Cup of Go podcast, get a sticker for

02:39.320 --> 02:41.560
your laptop a little bit later.

02:41.560 --> 02:43.640
So how did I become a contributor?

02:43.640 --> 02:47.160
Well, first I needed an idea.

02:47.160 --> 02:52.080
So long ago, I wrote this public open source library called Kivik.

02:52.080 --> 02:53.080
It's for CouchDB.

02:53.080 --> 02:57.480
It's sort of like database SQL, but for CouchDB.

02:57.480 --> 03:01.560
So if you wanted to be document store stuff.

03:01.560 --> 03:05.520
And I had a request from a user of my library.

03:05.520 --> 03:12.360
They were trying to send a regular expression as JSON to CouchDB because it's a JSON store.

03:12.360 --> 03:17.480
And it was just submitting an empty object rather than meaningful data.

03:17.480 --> 03:21.400
So they said, hey, could you make your library do this thing the right way and send a regular

03:21.400 --> 03:22.400
expression string?

03:22.400 --> 03:25.400
It's like, that's a really great request, but I don't feel like it's my library's

03:25.400 --> 03:26.400
responsible to do that.

03:26.400 --> 03:28.260
That should go in the standard library.

03:28.260 --> 03:30.960
So I created a request, which we'll talk about.

03:30.960 --> 03:32.880
But first, here's the problem they were explaining.

03:32.880 --> 03:33.880
So here's the code.

03:33.880 --> 03:36.960
I think this is the only slide in the presentation of code.

03:36.960 --> 03:39.960
So imagine you have this regular expression, food question mark.

03:39.960 --> 03:45.520
So it would match fo or foo, pretty simple.

03:45.520 --> 03:49.480
And you call JSON Marshall on something that contains that.

03:49.480 --> 03:52.320
This is the output you would get.

03:52.320 --> 03:53.720
Not very useful.

03:53.720 --> 03:58.520
This is the output the user of my library wanted and what I thought made sense.

03:58.520 --> 04:02.360
So I created a proposal on the Go issue tracker on GitHub.

04:02.360 --> 04:06.880
Now this is a great point to mention that there is a process, a proposal process.

04:06.880 --> 04:08.320
Some of you are probably familiar.

04:08.320 --> 04:12.320
If you listen to the Go podcast I just mentioned a couple of Go, we talk about proposals fairly

04:12.320 --> 04:17.280
frequently and we talk about, oh, this one's in the accept phase or this one's been declined

04:17.280 --> 04:19.560
or this one is possibly accepted and so on.

04:19.560 --> 04:21.840
That's all relates to this.

04:21.840 --> 04:26.600
Now this is a very simple proposal, so it didn't need the design doc, which some do,

04:26.600 --> 04:31.680
like generics had a design doc, actually multiples of design docs in the end.

04:31.680 --> 04:32.680
So this is a very simple proposal.

04:32.680 --> 04:34.080
I mean, I just explained it to you.

04:34.080 --> 04:37.080
I don't need a design doc to explain what I just explained on the last slide.

04:37.080 --> 04:38.400
So this didn't need that.

04:38.400 --> 04:43.400
So I just created a little, you can see there, that's the entire issue there, right?

04:43.400 --> 04:44.400
That's what I wanted.

04:44.400 --> 04:45.600
I showed the code that I just showed you.

04:45.600 --> 04:49.240
I showed the current behavior, the expected behavior and a little bit of conversation about

04:49.240 --> 04:52.560
my reasoning.

04:52.560 --> 04:59.640
And so that happened in 2021, May 13, if I can read that correctly.

04:59.640 --> 05:04.880
And then that kicked off this proposal process or a truncated miniature version of it anyway.

05:05.880 --> 05:07.880
So we had some discussion.

05:07.880 --> 05:12.640
One of the first comments came from Daniel Marti, who said, this would also be useful

05:12.640 --> 05:17.240
for this other thing and tagged Joe Sy, who was working on another issue that it would

05:17.240 --> 05:18.360
be relevant to.

05:18.360 --> 05:27.640
I don't know who this person's name, I didn't look it up, but they said, losing the options

05:27.640 --> 05:28.920
feels like a deal breaker.

05:28.920 --> 05:32.040
What that was referring to, there's actually two flags you can put on a regular expression

05:32.040 --> 05:33.040
in the Go library.

05:33.240 --> 05:39.560
You can say it's a POSIX regular expression and you can say it's, is it longest match?

05:39.560 --> 05:44.800
So at the end of two Boolean flags you can set on a regular expression and those are

05:44.800 --> 05:48.760
not expressed when you call the dot string method on the regular expression.

05:48.760 --> 05:51.400
So those flags would be lost.

05:51.400 --> 05:55.000
And so this person said that feels like a deal breaker.

05:55.000 --> 05:59.600
And there were some other comments too, but ultimately Russ Cox came in and said on June

05:59.600 --> 06:03.000
9, so this is almost two months later, said it looks like this is probably going to be

06:03.040 --> 06:08.960
declined based on the fact that it would be a lossy expression of the regular expression.

06:08.960 --> 06:12.640
That was sad.

06:12.640 --> 06:15.560
Not really sad because this isn't a feature I wanted, I just was kind of excited to see

06:15.560 --> 06:19.680
a feature I proposed, you know, get through the process.

06:19.680 --> 06:23.840
And then Roger Pepe, I think is his name, came in and said, I think it would be fine

06:23.840 --> 06:25.160
if we went ahead and did this.

06:25.160 --> 06:29.160
You know, just use the equivalent of string, it's already lossy, why don't we just go

06:29.160 --> 06:31.160
with that and so on, gave his reasoning.

06:31.320 --> 06:38.320
And so this is just a month later now, we're into July 2021, Russ says, so this is the

06:38.680 --> 06:42.800
current idea, we're going to have Marshall and un-Marshall do exactly the same thing

06:42.800 --> 06:46.680
that string does, blah, blah, blah, and then it looks like it's going to be likely accept

06:46.680 --> 06:47.680
now.

06:47.680 --> 06:48.680
So, cool.

06:48.680 --> 06:50.680
Happy about that.

06:50.680 --> 06:56.520
Fingers crossed, let's see if it really becomes accepted.

06:56.520 --> 07:03.200
A week later, no change in consensus, so it became accepted, yay.

07:03.200 --> 07:06.040
So who's going to do the work?

07:06.040 --> 07:10.920
Sadly, just having your proposal accepted and go doesn't mean it's done, someone has

07:10.920 --> 07:12.280
to actually do the work.

07:12.280 --> 07:16.320
Now this isn't a lot of work, in fact Russ said, even before it was accepted, I'll do

07:16.320 --> 07:20.440
the implementation and see if I come up with anything surprising.

07:20.440 --> 07:25.120
I don't know if he ever did, if he did he never mentioned it on the issue tracker.

07:25.120 --> 07:27.240
If I ever had the chance to interview him, I'm going to ask him, did you ever do that

07:27.240 --> 07:29.360
thing?

07:29.360 --> 07:33.600
So I said, January, this is six months after it was accepted, I said I'm interested in

07:33.600 --> 07:37.320
working on this and nobody really responded except somebody gave me a heart and I thought

07:37.320 --> 07:41.480
I felt good, but.

07:41.480 --> 07:48.480
And then three months later, four months later, Joe Sy says, hey are you going to do this,

07:48.480 --> 07:49.480
Russ?

07:49.480 --> 07:50.480
I can actually use it now.

07:50.480 --> 07:55.040
And Cricket's from Russ, he's a busy guy, no shame on him, but you know, so more weight

07:55.040 --> 07:57.880
eating ensues.

07:57.880 --> 08:02.320
So I decided I was going to go ahead and do it and I decided to, I don't remember exactly

08:02.320 --> 08:06.600
when, we'll see the dates in a few moments, but so I decided to go ahead and do the code.

08:06.600 --> 08:09.240
Now this is a good time to talk about the contribution guide.

08:09.240 --> 08:14.160
This is probably the part, at least I felt, was the scariest part of contributing to go,

08:14.160 --> 08:18.720
so I'm not going to talk in detail about it, but the TLDR is you have to create a Google

08:18.720 --> 08:23.760
account, you probably already have one unless you're intentional about not having one for

08:23.760 --> 08:27.560
security or ethical reasons or whatever.

08:27.560 --> 08:31.000
If you want to contribute to go, you have to have one, I'm sorry to say, so if you're

08:31.000 --> 08:35.720
avoiding that bandwagon for ethical reasons, maybe go, contribution isn't for you, I understand

08:35.720 --> 08:40.880
your reasons, but you have to have a Google account, you have to set it up a Garrett account

08:40.880 --> 08:42.320
with a Google account.

08:42.320 --> 08:43.320
What's Garrett?

08:43.320 --> 08:45.520
Who's used Garrett, I'm curious?

08:45.520 --> 08:48.880
Who doesn't even know what the word means?

08:48.880 --> 08:50.000
All right.

08:50.000 --> 09:01.160
So think of like GitHub except an open source version of GitHub from 1992, that's what it

09:01.160 --> 09:06.560
looks like, but it's really powerful in ways that I can't really comprehend or explain

09:06.560 --> 09:12.240
because I haven't used it that much, but it's not bad, so don't be afraid of it, but they

09:12.240 --> 09:13.240
use Garrett for that.

09:13.240 --> 09:17.000
Now actually I lied a little bit, they do use Garrett for that, but you can do this through

09:17.000 --> 09:22.520
GitHub also, and I've not done that process, but if you're really afraid of Garrett and

09:22.520 --> 09:26.200
you can't read the documentation and follow the instructions, you can also use it, create

09:26.200 --> 09:30.000
a GitHub pull request, so that's an option open to you if you're really afraid of this,

09:30.000 --> 09:32.400
but don't be, it's not that bad.

09:32.400 --> 09:36.400
So 11 months later I finally wrote the code, I created my Google account and all that stuff

09:36.400 --> 09:39.640
and the Garrett account and I wrote the code, this is my change, this is what I added to

09:39.640 --> 09:44.280
the standard library, plus some tests and a couple other metadata things.

09:44.400 --> 09:48.360
It's like 20 lines of code if you count the comments in the blank space, the blank lines,

09:48.360 --> 09:49.600
that's not a big deal.

09:49.600 --> 09:53.240
I was really hurt though that Marcia didn't mention this in the Go 121 changes because

09:53.240 --> 10:00.240
I know it just barely threw under your radar.

10:00.240 --> 10:05.240
I actually got this yesterday evening, you're going to find it.

10:05.240 --> 10:07.880
Yes, yes, okay.

10:07.880 --> 10:11.080
And you knew I was going to talk about it, so why mention it twice?

10:11.080 --> 10:16.840
So really simple, I guess I lied, there's two slides of code, but it calls the string

10:16.840 --> 10:20.760
method and turns it into a byte slice, that's all it does to Marshall, to Marshall, your

10:20.760 --> 10:23.320
regular question, and then to un-Marshall it, it does the same thing in reverse with an

10:23.320 --> 10:28.760
extra error check, super simple code.

10:28.760 --> 10:32.640
So I pushed that up and then I, this is a screenshot of Garrett by the way, like I said,

10:32.640 --> 10:35.040
1992 GitHub, that's what it looks like.

10:36.040 --> 10:39.040
And I got some code review.

10:39.040 --> 10:41.760
And then it was time for some humility.

10:41.760 --> 10:45.960
I kind of pride myself in writing tests and writing good tests, I usually write them before

10:45.960 --> 10:53.400
my code, first comment, make sure the test pass.

10:53.400 --> 10:57.880
I failed to, I mean I tested my code but I didn't run the entire test suite, which takes

10:57.880 --> 11:02.040
10 minutes or something on my machine, and it was failing.

11:02.040 --> 11:05.800
The reason it was failing is because I failed to add some metadata about public API changes,

11:05.800 --> 11:10.120
it wasn't a big deal, it was easy to fix, but it made me feel a little bit silly for

11:10.120 --> 11:14.360
like, not writing, not running the test suite before I asked other people to waste their

11:14.360 --> 11:16.880
time reading my code.

11:16.880 --> 11:24.040
I had learned the project style, this was my original commit message, I don't see anything

11:24.040 --> 11:29.000
particularly wrong with it, but it wasn't the style that they wanted, they wanted something

11:29.000 --> 11:33.440
much shorter, they didn't want me to, they didn't want a long paragraph explaining, like

11:33.440 --> 11:39.960
they felt like, I say they, Ian felt like add these functions was enough, I didn't need

11:39.960 --> 11:47.560
a paragraph explanation, so I followed his style guide and ended up something shorter.

11:47.560 --> 11:53.880
The tests, he wanted some changes in the test, I called t.fatal, but it was a for loop, so

11:53.880 --> 11:58.600
if one test failed, the other test wouldn't run, so he wanted me to do t.error instead.

11:58.600 --> 12:01.200
Cool, makes sense.

12:01.200 --> 12:08.000
And then Godoc recently, I don't know how recently, recently in my mind because I used

12:08.000 --> 12:11.520
it before this, but they recently added these square brackets to do hyperlinks and stuff,

12:11.520 --> 12:14.080
and I didn't do that, so I needed to add that.

12:14.080 --> 12:21.960
Yeah, little nitpicky things, plus I forgot to run the test.

12:22.280 --> 12:24.640
That was kind of it.

12:24.640 --> 12:29.000
That was my thing.

12:29.000 --> 12:36.040
It got merged on March 27, so just over two years after the original, was that right?

12:36.040 --> 12:40.560
Just under two years after the original issue was opened, it got merged, and then it was

12:40.560 --> 12:43.400
in the Go 121, yay!

12:43.400 --> 12:45.000
My name's not there.

12:45.000 --> 12:50.840
It's in, it's in Git somewhere, but whatever.

12:51.840 --> 12:56.120
It still felt good.

12:56.120 --> 12:57.600
So I think I just breezed through that.

12:57.600 --> 12:58.600
I have a lot of time here.

12:58.600 --> 12:59.600
We have a time for questions here.

12:59.600 --> 13:04.200
I mean, I have a few more slides, but this is the point of my talk, really.

13:04.200 --> 13:07.240
What does it take to become a Go contributor, and what does it not take?

13:07.240 --> 13:10.120
So non-requirements are you don't need mad hacker skills.

13:10.120 --> 13:12.440
I mean, you saw the simplicity of that code I wrote.

13:12.440 --> 13:16.320
Now I've written much more complicated code, at least I like to think so, but not at the

13:16.320 --> 13:17.320
Go project.

13:18.320 --> 13:22.480
I've spoken to people who contribute to Go just by adding those square braces to Go

13:22.480 --> 13:23.480
doc.

13:23.480 --> 13:24.480
That's cool.

13:24.480 --> 13:25.480
That helps.

13:25.480 --> 13:26.480
I mean, that's valuable, right?

13:26.480 --> 13:28.240
It's not cheating.

13:28.240 --> 13:30.720
That gives me hyperlinks when I go to the Go doc for that package.

13:30.720 --> 13:31.960
I can click on a hyperlink now.

13:31.960 --> 13:32.960
That's useful.

13:32.960 --> 13:35.640
So if that's what you want to do to contribute to Go, that's all you need to do.

13:35.640 --> 13:37.880
All you need to know is how to type square brackets.

13:37.880 --> 13:42.000
You don't need to know about zombie Go routines and whatnot.

13:42.000 --> 13:45.040
You don't need deep Go knowledge.

13:45.040 --> 13:46.800
What do you need to be a Go contributor?

13:47.360 --> 13:50.960
I think the main thing I learned from this process is that for me to be a Go contributor,

13:50.960 --> 13:51.960
I need patience.

13:51.960 --> 13:58.200
I mean, a lot of that wall clock time was me not doing anything.

13:58.200 --> 14:03.360
If I had been trying and pushing the process forward, I probably could have truncated that

14:03.360 --> 14:06.280
down to maybe three or four months.

14:06.280 --> 14:09.720
But that's a long time to get 20 lines of code implemented, I think.

14:09.720 --> 14:14.560
I mean, relative to what I do at my day job anyway, where I do that 15 times a day or

14:14.560 --> 14:15.560
something.

14:15.560 --> 14:17.040
So it takes patience.

14:17.040 --> 14:21.360
But if you're willing to put in the time, you can become a Go contributor.

14:21.360 --> 14:25.240
It takes a little humility, especially when it comes to learning a new project style.

14:25.240 --> 14:28.200
I mean, I don't know if you've contributed to other open source projects before.

14:28.200 --> 14:29.200
I have.

14:29.200 --> 14:32.040
Each one has their own flavor, their own style.

14:32.040 --> 14:33.240
You need to learn that.

14:33.240 --> 14:39.720
You need to be willing to learn that and not, yeah, just put your ego on the side.

14:39.720 --> 14:40.720
That's not the point.

14:40.720 --> 14:47.600
It's just to do something useful according to the community's guidelines.

14:47.600 --> 14:49.400
And to learn some new things.

14:49.400 --> 14:54.360
Yeah, I think I'll breeze through this.

14:54.360 --> 14:59.000
Those of you who raised your hand that you were intimidated earlier, any of you feel

14:59.000 --> 15:01.000
less intimidated now?

15:01.000 --> 15:03.000
One, two, three.

15:03.000 --> 15:05.520
Okay, my talk was a success.

15:05.520 --> 15:09.840
That was my goal.

15:09.840 --> 15:14.360
If you're interested in learning other ways, one of my goals is to make Go less scary for

15:14.360 --> 15:15.360
people.

15:15.360 --> 15:20.560
That's part of the Cup of Go podcast idea where we talk about the weekly Go news.

15:20.560 --> 15:23.960
It's part of my YouTube channel, Boldly Go, if you want to watch that.

15:23.960 --> 15:26.400
If you have questions, reach out.

15:26.400 --> 15:28.400
You can find me at boldlygo.tech.

15:28.400 --> 15:30.480
That's my Go themed website.

15:30.480 --> 15:35.920
You can find all my socials and contact details there.

15:35.920 --> 15:36.920
Any questions?

15:36.920 --> 15:37.920
I don't know.

15:37.920 --> 15:38.920
Do we have, we can do questions, right?

15:39.000 --> 15:40.000
We have enough time for questions.

15:40.000 --> 15:42.000
We have time, so yeah.

15:42.000 --> 15:43.520
I will hand you the microphone.

15:43.520 --> 15:46.400
If you're too far away, you'll have to shout and he has to repeat.

15:46.400 --> 15:49.000
Hi, thanks for your talk.

15:49.000 --> 15:50.760
I want to do a Cup of Go listener.

15:50.760 --> 15:51.760
Wonderful, thanks.

15:51.760 --> 15:54.520
Shout out to the podcast.

15:54.520 --> 15:59.240
My question is, are there other ways to become a Go contributor like, you know, good first

15:59.240 --> 16:03.440
issues or stuff and get up?

16:03.440 --> 16:06.520
Other ways, other than introducing a proposal?

16:06.520 --> 16:07.840
Yes, definitely.

16:07.840 --> 16:10.720
You can find one of the existing bug fixes or proposals.

16:10.720 --> 16:15.320
So this was the first code I wrote that was implemented to Go.

16:15.320 --> 16:19.440
I had participated in the sense of filing bug reports and stuff like that previously

16:19.440 --> 16:21.920
that others then fixed.

16:21.920 --> 16:25.400
And many that had been just like closed as invalid or something that happens too.

16:25.400 --> 16:27.200
There's that humility part that comes in.

16:27.200 --> 16:29.440
But yes, there are a lot of open issues.

16:29.440 --> 16:32.480
There are some tagged as good first issues.

16:32.480 --> 16:37.040
You can find typo fixes, typo, I actually have an open CL.

16:37.040 --> 16:39.680
It's the Garrett terminology for a PR.

16:39.680 --> 16:44.080
Open for a documentation fix in a package in the center library.

16:44.080 --> 16:45.080
Things like that.

16:45.080 --> 16:46.080
There's a lot of things you can do.

16:46.080 --> 16:48.800
You don't need to file either a bug report or a feature request.

16:48.800 --> 16:50.800
You can find one that's already there.

16:50.800 --> 16:53.560
Hello, thank you for your talk.

16:53.560 --> 16:54.560
Yeah.

16:54.560 --> 17:00.400
I've tried several times during Octoberfest to do some contribution.

17:00.400 --> 17:06.080
And the big part of it was to find an easy issue to begin with.

17:06.120 --> 17:09.440
Do you have some tips for that?

17:09.440 --> 17:10.440
Not really.

17:10.440 --> 17:15.520
I mean, there is a, I believe there's a tag on GitHub on the issue tracker for like good

17:15.520 --> 17:16.920
first issue or needs help.

17:16.920 --> 17:18.760
I know there's a needs help.

17:18.760 --> 17:19.760
You could look at that.

17:19.760 --> 17:25.520
I think there's a good first issue, but I might be confused about the different project.

17:25.520 --> 17:35.520
One thing that is understandable but frustrating to me about the Go project is it's not really

17:35.960 --> 17:37.960
designed for newcomers.

17:37.960 --> 17:41.880
That's one thing I hope to help change with this.

17:41.880 --> 17:47.560
Help at least lower the mental barrier that you might have individually to doing this.

17:47.560 --> 17:51.640
But I say it's understandable because they're trying to build a professional quality, high

17:51.640 --> 17:56.560
quality language and standard library.

17:56.560 --> 18:03.440
And that requires one set of skills and guardrails around the project.

18:03.480 --> 18:08.080
Being open to all new contributors is a different one and requires very different types of open

18:08.080 --> 18:09.080
source management.

18:09.080 --> 18:18.080
So Go, I think, mostly intentionally has moved to that side of high barrier to entry for

18:18.080 --> 18:19.640
reasonably good reasons.

18:19.640 --> 18:21.920
But that is frustrating for this question.

18:21.920 --> 18:24.160
How do you find something you can do to contribute?

18:24.160 --> 18:31.160
I don't really have a great answer except look through the issue tracker and find something.

18:31.160 --> 18:33.760
In front.

18:33.760 --> 18:36.760
Become a Fotherm organizer, get fitness for free.

18:36.760 --> 18:41.760
Yeah, hello.

18:41.760 --> 18:48.760
So you had this requirement at the beginning and this sparked the problem and the solution

18:48.760 --> 18:50.080
in the library.

18:50.080 --> 18:52.000
But what did you do in the meanwhile?

18:52.000 --> 18:54.880
Because this took three years, right?

18:54.880 --> 19:01.880
So what did I do about this in the two years in this thing between issue, file, and I didn't

19:01.880 --> 19:04.360
do anything, honestly.

19:04.360 --> 19:08.040
The person using the library, I'm assuming they had their own work around.

19:08.040 --> 19:11.560
I mean, so there are work arounds for this sort of thing.

19:11.560 --> 19:14.000
Suppose that you want to, suppose this already exists.

19:14.000 --> 19:21.520
Now you're using Go 122, but you want a different version of the regular expression to be presented.

19:21.520 --> 19:23.000
You have the same problem, right?

19:23.000 --> 19:28.480
So you probably would end up wrapping the regular expression, reg x dot reg x type and

19:28.480 --> 19:30.360
put your own custom marshal on it, for example.

19:30.360 --> 19:32.560
That's probably what they were doing.

19:32.560 --> 19:37.560
I do that with time dot time or time dot duration fairly frequently depending on the application

19:37.560 --> 19:38.560
needs.

19:38.560 --> 19:41.480
So that's probably what I would do.

19:41.480 --> 19:51.800
Are there any differences in the main Go code versus like the Go X modules?

19:52.800 --> 20:02.400
Yeah, that's a good question.

20:02.400 --> 20:07.600
I haven't contributed to the X stuff, so I don't have experience to go on from there.

20:07.600 --> 20:09.480
I think it's pretty much the same process though.

20:09.480 --> 20:14.560
I do think the requirements for inclusion in the X packages are lower.

20:14.560 --> 20:21.760
So if you want to add, say something to X slices, you want to add, I don't know, change

20:21.760 --> 20:25.000
color or something, you know, some ridiculous thing there.

20:25.000 --> 20:28.480
There's lower barrier to entry to get in there because it's considered experimental.

20:28.480 --> 20:32.480
So you're like, if you want to do it in the center library, they have a high standard.

20:32.480 --> 20:36.040
Like we want to make sure that we're never going to regret doing this.

20:36.040 --> 20:39.040
In the experimental they're like, yeah, we don't know if it's a good idea, but let's try it.

20:39.040 --> 20:45.160
So in that sense it's easier, lower barrier to entry.

20:45.160 --> 20:47.440
Any last questions?

20:47.440 --> 20:48.760
Okay.

20:48.760 --> 20:54.640
I think this can mean one thing, but it was an amazing talk with not too many questions

20:54.640 --> 20:55.640
left.

20:55.640 --> 20:56.840
Round of applause everyone.

