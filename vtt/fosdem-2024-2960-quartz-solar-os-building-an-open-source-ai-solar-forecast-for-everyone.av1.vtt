WEBVTT

00:00.000 --> 00:09.900
Welcome. I'm Rachel Tipton and this is my colleague, Zach Watts. Can everybody hear

00:09.900 --> 00:15.920
me in the back? I'm not used to talking in a microphone. Yes, it's good, okay. So today

00:15.920 --> 00:20.240
we're going to be presenting Open Quartz, building an open source AI solar forecast

00:20.240 --> 00:25.600
for everyone. I'm a full stack developer. I work for Open Climate Fix. I'm going to

00:25.600 --> 00:31.640
introduce myself and then Zach will introduce himself. I'm a career change developer. So

00:31.640 --> 00:38.320
before working in climate tech, I was teaching English in France. I got a little bit tired

00:38.320 --> 00:45.760
of teaching 18 year old French students the present perfect. So I decided to, the French

00:45.760 --> 00:50.640
people, huh? Because it isn't. Yeah, because it isn't. It's not perfect. And I'm not a

00:50.640 --> 00:55.520
perfectionist. So I decided that I was going to channel my love for languages into learning

00:55.520 --> 01:02.400
code languages. I completed boot camp about a year and a half ago and that's why I landed.

01:02.400 --> 01:07.200
This is why I'm here. I landed in climate tech and I'm quite happy. Zach.

01:07.200 --> 01:11.560
Thank you, Rachel. Yeah, I'm Zach Watts. If anyone's noticed, my last name is Watts.

01:11.560 --> 01:17.960
So I think I was destined to work in power of an energy of some sort. I recently finished

01:17.960 --> 01:22.080
my masters in physics two years ago where I was trying to make cells dance using acoustic

01:22.120 --> 01:26.800
sound waves. And then I kind of fell in love a bit with AI and then joined open climate

01:26.800 --> 01:31.760
fix about a year ago where I do some of our machine learning implementation and data science.

01:33.440 --> 01:38.920
All right. So what to expect from our talk? I'll introduce open climate fix. We'll talk

01:38.920 --> 01:44.560
a little bit about why solar forecasting is important to balancing a power grid and some

01:44.560 --> 01:51.040
of the use cases that we use it for. We have a live solar forecasting service called court

01:51.080 --> 01:57.480
solar and derived from that is the open source court solar model that we'll be talking about

01:57.480 --> 02:02.600
and Zach's going to present that today because he's worked on that model. And then hopefully

02:02.600 --> 02:07.720
we'll have time for questions at the end. And this is a sneak preview of the code that

02:07.720 --> 02:11.120
we'll have you guys run at the end of the presentation. And we're hoping that the demo

02:11.120 --> 02:18.600
works, but we'll see. Open climate fix was founded in 2019. We're a London based company.

02:18.640 --> 02:23.280
I'm based in the north of France, so getting to be in Brussels is kind of more my home territory.

02:23.760 --> 02:30.960
This photo is from the sustainable work ventures office in London where we work. We're a

02:30.960 --> 02:37.120
nonprofit product lab developing open source solutions to decarbonize the power grid and

02:38.080 --> 02:45.160
generating solar forecast is part of that work. All right. So we see ourselves as like a, I'd

02:45.200 --> 02:50.960
say like a middle man or like the traverse between ML researchers and the energy industry. So we

02:50.960 --> 02:57.080
want to make our data available to researchers and we want to make the research ML researchers are

02:57.080 --> 03:04.800
doing available to the energy industry. And how do we do that? So all of our code is available on

03:04.800 --> 03:11.280
GitHub. We also have models and data sets that are available on hugging face. Does everybody know

03:11.320 --> 03:17.160
what hugging face is? I'm assuming this crowd does know. Yes. Okay. We know what this is. So a lot of

03:17.160 --> 03:24.640
the data sets are from NWP data or numerical weather predictions. And up to date, we have 500

03:24.640 --> 03:28.960
people who have signed up to download those data sets. So we like to say that we're making an

03:28.960 --> 03:35.640
impact in that way. We also make available the EU met set data that we collect from where connected

03:35.680 --> 03:42.280
to a live service of like we get data from the satellite itself while we're generating our

03:42.280 --> 03:47.800
forecasts. And then we're actually putting that data into the ZAR file format and making that

03:47.800 --> 03:56.120
available to ML researchers. And that data has been downloaded 16,000 times so far from the

03:56.120 --> 04:02.240
Google public data sets site. So that's a way in which we're having an impact. The data has also

04:02.400 --> 04:10.360
been used to forecast rain, like to do rain predictions in Sweden, storm evolution in Taiwan.

04:10.360 --> 04:15.080
So it's been used for a lot of different purposes. And most recently, there was like a graduate

04:15.080 --> 04:24.720
paper that was published on, I think it was like day ahead PD forecasting. All right. So moving on

04:24.800 --> 04:33.000
to why solar forecasting important. The weather is unpredictable. The sun doesn't always shine. The

04:33.000 --> 04:38.520
wind doesn't always blow. If any of you have listened to a podcast on decarbonization, you've

04:38.520 --> 04:48.200
probably heard that phrase before. So moving into the future, our basically our power generation is

04:48.200 --> 04:53.600
going to be dependent on weather dependent energy sources like solar and wind. So in this chart,

04:53.600 --> 05:03.560
you can see by 2050, about 75% of the world's primary energy source is going to be based off

05:03.560 --> 05:10.360
of renewable resources. And then the resources at the bottom are gas and coal. These are what are

05:10.360 --> 05:15.600
called dispatchable resources. So you can you can burn X amount of coal and get X amount of

05:15.640 --> 05:21.240
electricity, you'll burn X amount of gas and get X amount of electricity. This is a basic concept

05:21.240 --> 05:26.720
that I'm presenting. But it's important to think about, because you don't have that predictability

05:26.720 --> 05:36.480
with solar or with wind. And that's where our predictions come in. So does anybody know what

05:36.480 --> 05:41.280
this is, this image that is on the screen? I'm sure there's somebody who knows more about it than I

05:41.320 --> 05:55.360
do. Peter, would you? No. Huh? Somebody else? Anybody? Yeah, it's a gas powered turbine. Thank you.

05:55.360 --> 06:03.120
So it's again. This is a gas powered turbine. I'm using it to introduce the idea of spinning

06:03.160 --> 06:12.200
reserves. So a power grid is, as we've seen, there's a lot of calculations, as well as a lot of,

06:12.200 --> 06:21.160
it's complex to balance a power grid. And so what we're doing with our work is, we're helping

06:21.160 --> 06:28.200
power grid operators balance the power grid by providing them with a PV solar forecast that

06:28.800 --> 06:34.440
indicates how much solar energy is going to be on the grid. If they don't have that energy, what ends

06:34.440 --> 06:39.640
up happening is they have something called spinning reserves that they keep running. And that spinning

06:39.640 --> 06:46.120
reserve is running at 50% capacity. And so it's running at 50% efficiency. And so you're actually

06:47.160 --> 06:53.880
burning fossil fuels just to ensure that there is electricity that could be generated to be on

06:53.880 --> 06:59.920
the grid. If you don't know how much solar energy is going to be on the grid, it makes it more likely

06:59.920 --> 07:05.640
that you're going to have a greater amount of spinning reserves that are functioning or running at

07:05.640 --> 07:11.640
a given time. So I'm just introducing this to explain how our solar forecasts are actually

07:11.640 --> 07:20.320
decreasing carbon emissions currently with our work with national grid. So our main solar forecast

07:20.360 --> 07:26.480
is a national forecast that's run for national grid ESO, which is the electricity system operator

07:26.480 --> 07:32.320
in the UK. This is a picture of the control room. If you've never seen the picture of a control

07:32.320 --> 07:39.880
room, this is what the national grid control room looks like. And our national forecast is in

07:39.880 --> 07:47.720
operation in the national grid control room. So this is what a solar forecast looks like. You have

07:47.760 --> 07:53.400
the dotted line here. So the dotted line, that's your forecast. And then the solid line behind

07:54.280 --> 08:00.280
where it says 1130 is basically the history of the forecast itself. And I'm just using this to show

08:00.280 --> 08:07.000
you the information that national grid is given. And then they're able to make balancing decisions

08:07.000 --> 08:13.160
based off of this information. So if they see that there's 3.5 gigawatts of energy that is guaranteed

08:13.240 --> 08:17.840
to be on the grid, then they can reduce the spinning reserves that are running at that time. And

08:17.840 --> 08:24.000
therefore, decreased balancing costs for themselves. And then they also are diminishing carbon

08:24.000 --> 08:31.800
emissions at the same time. The other model that we have in production is a sites model. And this

08:31.800 --> 08:38.520
is what the open courts model is based off of. And so this is a model that's not necessarily

08:39.240 --> 08:44.920
generating a solar forecast for the power grid itself or for an entire country, but it could be

08:44.920 --> 08:53.000
like for a solar farm or like a smart home operator. And Zach is going to tell us how it all works.

08:55.240 --> 08:59.800
Great. Thank you very much, Rachel. So as said, we've taken a lot of the information that we've

08:59.800 --> 09:04.280
learned from building these kind of larger, more complex models and distilled this down into a site

09:04.280 --> 09:10.040
model. But essentially what we're doing when we're trying to do a forecasting problem in general,

09:10.040 --> 09:14.760
we want to start by providing as much information as we can about the problem we're trying to solve.

09:14.760 --> 09:20.840
So we start that by providing a diverse set of solar historic generation data. That just means

09:20.840 --> 09:25.800
we can capture all sorts of different types of conditions that might occur across a different

09:25.800 --> 09:32.280
location. We then provide multiple numerical weather predictions. These are forecasts made by

09:32.280 --> 09:38.440
large supercomputers of different countries, forecasting things such as cloud cover, temperature,

09:38.440 --> 09:45.160
rain, irradiance. And not all of these numerical weather predictions are equal. Some of them have

09:45.160 --> 09:50.040
slightly different biases. So we try to incorporate as many as possible to try and capture that

09:50.040 --> 09:55.240
information. We also utilize satellite imagery. As Rachel said earlier, we've made that data set

09:55.240 --> 10:01.240
public on Google data sets. That's really useful for helping with kind of near term cloud formation,

10:01.240 --> 10:06.680
not only that the satellite imagery, because it's a satellite up in space, it can take a picture every

10:06.680 --> 10:13.080
five, 10, 15 minutes. So you have a higher resolution of data going into the model, whereas the numerical

10:13.080 --> 10:19.480
weather predictions, they're run on quite resource intensive, quite slow to run supercomputers with

10:19.480 --> 10:24.680
much lower resolutions. We also then provide some topographic data about the terrain in which we're

10:24.680 --> 10:29.080
forecasting. And we feed all of this data into machine learning model. And if you've dealt with any

10:29.080 --> 10:33.960
data on this kind of order of magnitude of 60 terabytes of satellite imagery, you would know

10:33.960 --> 10:40.040
some of the pains in creating batches and the slow processing times involved there. And out of this,

10:40.040 --> 10:45.000
we're able to create a national, a regional, and an individual sites level forecast, which I'll be

10:45.000 --> 10:52.280
talking about today. So as we said earlier, we've been doing some work with the National Grid ESO,

10:52.280 --> 10:57.960
which we started a couple years ago. They were our first pilot project with our forecasts. And we

10:57.960 --> 11:02.120
managed to generate a forecast, which was three times better than their existing in-house forecast.

11:02.120 --> 11:07.960
So that gives you a key to kind of the bar that was set when we kind of started this, trying to

11:07.960 --> 11:12.680
getting an error, which is three times better. And this chart we can see to the right here,

11:12.680 --> 11:17.240
this is from one of our latest models, which we call PVNet2. And you're looking at mean absolute

11:17.240 --> 11:23.400
error as a percentage per forecast horizon. Now I've used this to demonstrate the value of using

11:23.400 --> 11:27.960
satellite imagery combined with these numerical weather predictions. The light blue line that

11:27.960 --> 11:31.880
you can see here is if we train the model just using the satellite imagery, you can see it's

11:31.880 --> 11:39.480
quite good early on, but the error relative increases quite a bit. Whereas just using the NWPs,

11:39.480 --> 11:44.680
which is this dark green line here, very kind of horizontal consistent error. And then by combining

11:44.680 --> 11:49.800
the two data sources, we get this, what I find a quite satisfying convergence where the models

11:49.800 --> 11:58.120
learn to take the information it needs from both data sources. So moving on to our site level

11:58.120 --> 12:03.240
forecast, just curious here, if you have solar panels, could you just raise your hands now?

12:04.600 --> 12:08.840
All right, now keep your hand raised if you also have a battery pack in your house.

12:09.560 --> 12:16.280
Now, are any of you using solar forecasts in any way at all at the moment? You are, nice. So this

12:16.280 --> 12:21.080
is where we see the kind of site level forecast that we've generated to be open source being really

12:21.080 --> 12:27.800
useful. There's a bit of a shift going on in the past couple years as consumers and kind of home

12:27.800 --> 12:32.200
households are realizing that there's these technologies available that can help them

12:32.200 --> 12:37.720
optimize their energy consumption. And it's not just the consumers as well, it's the smart home

12:37.720 --> 12:44.440
operators who are looking to participate in these energy flexibility markets. Now, as we've heard,

12:44.440 --> 12:50.200
there's been lots of really great presentations today about how to manage a grid. The grid,

12:50.200 --> 12:56.760
the electricity grids really need a lot of more infrastructure that needs to be built on to the

12:56.760 --> 13:01.400
grids to meet electricity demands going forward. And one way they're trying to tackle this is by

13:01.400 --> 13:08.040
increasing flexibility through things like smart home management. So one way this could possibly

13:08.120 --> 13:14.440
be used is when a smart home operator has access to many, many households, they can incentivize

13:14.440 --> 13:19.160
households to turn up electricity or turn down during different times. And this provides a

13:19.160 --> 13:26.200
flexibility to the grid. Now, from a consumer perspective, you might have an electric vehicle

13:26.200 --> 13:32.280
and you might want to charge your EV at times when you know you've got the lowest cost to you,

13:32.280 --> 13:36.440
which is when you'd have solar generation. So you can look at a forecast and say,

13:36.440 --> 13:40.360
I want to drive my EV tomorrow. I can look at my solar forecast and be like, well,

13:40.360 --> 13:44.440
it's really sunny today and really cloudy tomorrow. So I'm going to charge my car up

13:44.440 --> 13:47.640
fully today and then I can drive it tomorrow and it'll be lowest cost to me.

13:48.360 --> 13:54.280
So we see this being used by smart home operators. We're already speaking to a few startups in this

13:54.280 --> 13:59.240
space who are trying to integrate this into this smart home optimization sort of systems.

14:00.120 --> 14:04.760
Experts in battery optimization, research and academics, and just general hobbyists who might

14:05.480 --> 14:09.640
want to incorporate solar forecasts into their current situations.

14:12.040 --> 14:18.040
So to create this model, we've used a data set of over a thousand household UK sites,

14:18.040 --> 14:23.960
which can see on the right here. And we've trained quite a simple model, just a gradient

14:23.960 --> 14:30.280
boosted tree, which essentially tries to separate out the data into different buckets. This is quite

14:30.360 --> 14:37.080
a crude example, but say the clouds are less than 25%, you might predict 100% PV. If not,

14:37.080 --> 14:40.600
then try and create another branch that will then split the data up further.

14:41.720 --> 14:48.200
And what we're able to do by using kind of a wide range of different sites spread out all across the

14:48.200 --> 14:57.080
UK is forecast anywhere in the UK. So we can now plug in our specific latitude and longitude

14:57.800 --> 15:01.800
information about the site we want to forecast for and forecast for anywhere and

15:01.800 --> 15:07.560
hypothetically globally as well, depending on what data we have available. So this brings us

15:07.560 --> 15:13.000
to open courts, which is the open source solar forecast we're presenting here today. This uses

15:13.000 --> 15:19.800
open NWPs. Now there's two primary open ones. There's a few, but the GFS, which is the American

15:19.800 --> 15:27.960
global forecasting system, and the ICON, which is created by the German weather service DWD,

15:27.960 --> 15:34.120
and is widely regarded as the most accurate free to use weather service. So we take things such as

15:34.120 --> 15:39.400
cloud cover, temperature, visibility, and we pull this data from open Meteo, and we're using our

15:39.400 --> 15:45.160
pre-trained model that we previously showed. And by doing this, we're able to create a forecast

15:45.160 --> 15:50.520
up to 48 hours ahead at a 15-minute resolution and do all this in four lines of code.

15:52.200 --> 15:56.280
And we're able to get a pretty good error doing this. In comparison to some of our other models,

15:56.280 --> 16:02.600
which use slightly more up-to-date information, the error is not too much worse. Now you might

16:02.600 --> 16:06.920
notice that there isn't satellite imagery involved here, and that's because this model itself is

16:06.920 --> 16:12.360
something that you can run on your computer using our pre-trained model and by pulling the data yourself

16:12.440 --> 16:16.600
in just a couple of lines of code. Now when you involve satellite imagery, you need licenses and

16:16.600 --> 16:22.360
stuff to have that data live. The repository, the data storage that we keep has a two-day lag,

16:22.360 --> 16:31.320
I think, on live real-time data. So we were going to do a demo, but we've had to do a last-minute

16:31.320 --> 16:35.720
swap of computers. So instead, I'm just going to talk through this with everyone. But if you do

16:35.720 --> 16:41.160
want to do the demo, you can follow along. So if you head over to our GitHub repository, which is

16:41.800 --> 16:48.040
GitHub-OpenClimateFix, I've pinned the repo, open-source-court-solar-forecast, so you won't have

16:48.040 --> 16:53.880
to type in that mouthful of the name of a repo. And if you head to the example folder, there is an

16:53.880 --> 16:59.080
example notebook you can follow through, which will lead you to creating a solar forecast. But

16:59.080 --> 17:05.720
essentially, all you need to do is pip install-court-solar-forecast that we have here. And then

17:05.720 --> 17:10.920
once you have that installed, these are the four lines of code we tempted you with at the beginning,

17:10.920 --> 17:17.240
but essentially, you want to first import the function, which we'll be using to run the forecast.

17:17.240 --> 17:23.400
Next, we import this PVSight class that we use. We then want to create the class. So in this case,

17:23.400 --> 17:28.200
we're going to specify the latitude and the longitude of the specific house or site that we

17:28.200 --> 17:35.320
want to forecast for, and then the capacity of our solar panels. Next, we just run that, we use

17:35.320 --> 17:42.360
that run forecast function, passing in our site as an object, and then specifying a time in which

17:42.360 --> 17:48.520
we want the forecast to start from. So using this time here, it would create a forecast starting

17:48.520 --> 17:56.040
at midnight on that night, going out 48 hours from that point onwards. And what does the results look

17:56.040 --> 18:02.680
like? Well, we get a nice, so this is where I click demo done, and it would nice graph and smooth,

18:03.080 --> 18:09.080
but we get the best results out of this anyway. So we get our solar forecast, which looks, as we

18:09.080 --> 18:14.680
might expect, kind of peaking around midday. There's some bumps in the road here. This could be due

18:14.680 --> 18:20.600
to some clouds that are coming over or storm. And we've got our forecast from midnight out to 48

18:20.600 --> 18:25.720
hours ahead. So hypothetically speaking, with the demo running, I could have shown you what it looked

18:25.720 --> 18:31.480
like exactly at this location here today, looking out for the next two days, and we could have seen

18:31.480 --> 18:37.000
today. But running it on my computer, it didn't look too great. And that's kind of reflective on

18:37.000 --> 18:45.080
if you look outside the window today, it's a bit cloudy, and not the nicest. So I'm going to pass

18:45.080 --> 18:52.040
back to Rachel now to talk about the robot. All right. So moving forward, the idea for the open,

18:52.040 --> 18:58.600
the Quartz open source forecast is that other people can use it. You could potentially input

18:58.600 --> 19:06.200
different types of data, so different NWP data could be input or PV data. And also just anybody

19:06.200 --> 19:12.840
who wants to do a bit of ML experimentation, this would be a place to start with that. As a company,

19:12.840 --> 19:18.040
we're looking to build our community as an open source company. It's something that we're kind of

19:18.040 --> 19:25.560
trying to put in place. So if people use the model, hook it up to an API or a database, and actually

19:25.560 --> 19:31.320
start generating a regular forecast for themselves, we'd love to know about it. So I don't know if we

19:31.320 --> 19:35.480
have any time left for questions, but yeah.

19:43.560 --> 19:50.200
Too many questions. The prediction, does it assume like you can specify the capacity, but can you

19:50.200 --> 19:55.720
specify things like south facing versus east west facing, that kind of stuff? And how does this

19:55.720 --> 20:02.120
contrast with forecast.solar, which provides for home users a similar API?

20:07.560 --> 20:13.000
Sure. Thank you very much for the question. So in providing features like tilt and orientation,

20:13.000 --> 20:17.320
that's something that we have built into the model and needs a little bit of a tweak to get it working.

20:17.400 --> 20:23.480
So originally, with this model, it was based off a model that we have in production, which we run for

20:24.120 --> 20:30.440
a thousand household sites in the UK. And we found that the tilt and orientation data that is generally

20:30.440 --> 20:35.480
provided is not always that good and that accurate, because oftentimes with a solar installation,

20:35.480 --> 20:39.560
the builder might have noted it down, but it's not that accurate. And when we ran experiments,

20:39.560 --> 20:44.600
hard coding the tilt and orientation, versus letting a user kind of specify exactly,

20:44.600 --> 20:50.200
we got slightly better results if we assumed it was a perfectly south facing and at 30 degrees.

20:50.200 --> 20:55.800
But that is something that is a little tweak and is I think one of our kind of issues to work on.

20:56.360 --> 21:00.520
And your next question about using kind of another provider, what was it again, the name of the

21:02.520 --> 21:08.440
forecast.solar. So I think what differentiates what we're doing compared to other people,

21:08.440 --> 21:13.880
this is something that you can run like locally on your computer and do it yourself. And we're

21:13.880 --> 21:19.160
also forecasting generation. I think a lot of these other APIs, they're forecasting things like

21:19.160 --> 21:24.360
solar irradiance, and then it's down to the user to basically interpret that irradiance value

21:24.360 --> 21:29.880
into a generation value. Maybe forecast or solar is different, but I think that's what we do,

21:29.880 --> 21:42.280
maybe slightly different if that makes sense. How do you handle so this issue of the solar,

21:42.360 --> 21:49.960
long term solar weather and recent critical events quite like volcanoes or dust balls,

21:49.960 --> 21:59.080
which can affect the yield for the solar partners? Yeah, so things like volcanic eruptions, they

22:00.040 --> 22:04.120
definitely do affect the solar. And a lot of time, I think that information generally

22:05.160 --> 22:11.000
is helped out. So the numerical weather predictions that we use, sometimes they tried to capture in

22:11.080 --> 22:15.320
that information. I did see some research papers on how they actually don't capture in things like

22:15.320 --> 22:21.240
volcanic eruptions. And the researcher, I suppose, who was saying, we need to improve these models

22:21.240 --> 22:25.960
to capture things like that. One other data set that we're looking to incorporate is aerosol

22:26.600 --> 22:32.680
data sets. So that does include information like that. And is something which I think we're doing

22:32.680 --> 22:37.080
with some of our other models. And at some point, I guess, we'd like to do with this model as well,

22:37.080 --> 22:39.720
which should help to capture extra information like that.

22:51.320 --> 22:58.680
Hi, thanks for the talk. So I wanted to ask, what is the geographic extent of this? You're using

22:58.680 --> 23:04.680
models which might cover more than, say, Eukaryurop. Or if it's confined to Eukaryurop, do you have

23:04.680 --> 23:09.400
plans to expand it to a wider region in the future? Thanks.

23:16.120 --> 23:22.600
Hi, thanks for the question. So this model in particular, because it's sort of dependent on

23:23.240 --> 23:29.160
the weather data that you have available. So we're using IKON's global weather forecast.

23:29.160 --> 23:33.320
That essentially means that this model can be used anywhere in the world, because that forecast

23:33.320 --> 23:39.960
is a global forecast. The only issue you might encounter is because the training set that we've

23:39.960 --> 23:46.200
used is just for the UK, there might be some sort of bias towards the UK household sites that we've

23:46.200 --> 23:52.360
not really looked into yet. So I think one of the things that we do want to do is to create maybe

23:52.360 --> 23:58.680
a more robust global model is to have a PV data set, which does cover the whole world.

23:59.560 --> 24:06.760
But I think so this is very recently, we've pushed this out. And since we've done that,

24:06.760 --> 24:10.840
there was someone reaching out to us from Indonesia who was testing it out there. I think

24:10.840 --> 24:16.120
they got it working. So it does have global coverage. Some of our other models, which we provide

24:16.680 --> 24:22.200
as a product and service, they are quite specific to the UK, but we're expanding out to India at

24:22.200 --> 24:27.960
the moment and some other European regions. And that's mainly down to the satellite imagery

24:28.040 --> 24:33.000
data that we have access to, because we're using the European geostationary one. So

24:33.000 --> 24:36.680
it's easier for us to build on that, how it is at the moment.

24:42.040 --> 24:47.640
Thank you, everyone.

