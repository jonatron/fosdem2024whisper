WEBVTT

00:00.000 --> 00:09.520
The first good thing, welcome.

00:09.520 --> 00:15.880
My name is Marcel Kotzman from, you see my company, Robert Bosch, but what is more important

00:15.880 --> 00:22.720
is I think my community and I have also some chokers in the audience for the questions later,

00:22.720 --> 00:26.240
so I'm happy that you're also here.

00:26.240 --> 00:29.320
And well, that went too fast.

00:29.320 --> 00:36.880
Our community was formed a few years ago already, so what we're doing here, I think

00:36.880 --> 00:39.400
we were ten people in the beginning.

00:39.400 --> 00:44.920
Also we had exactly the same discussion we had this morning some years ago, so it's

00:44.920 --> 00:47.520
good that we have now a bigger audience.

00:47.520 --> 00:52.600
And this is also my, if you want to go out and have a takeaway then please have this

00:52.600 --> 00:57.680
takeaway, please join us in our tooling community, sharing creates value.

00:57.680 --> 01:04.080
I really like that name from the beginning because that's really what we are here for

01:04.080 --> 01:07.960
and I think this is an all over non differentiating thing, right?

01:07.960 --> 01:15.520
So we all profit from having here a better as bomb tooling processes, etc.

01:15.520 --> 01:21.760
The title of my talk is about doing this at scale, so here's where my organization comes

01:21.760 --> 01:31.720
in because we're not doing this for fun or yeah, it's more hygiene topic, so every developer

01:31.720 --> 01:34.320
says yay.

01:34.320 --> 01:39.640
But nevertheless, what is important for my company is be good citizen in the open source

01:39.640 --> 01:40.640
community.

01:40.640 --> 01:46.120
So that means on the one side if you use something we want to give back, so therefore we also

01:46.120 --> 01:51.680
doing open source on our own, so that's what we called from the beginning, eat your own

01:51.680 --> 01:57.680
dog food, so if our developers need to suffer doing all this open source paperwork, we

01:57.680 --> 02:00.280
should also have a clue about that.

02:00.280 --> 02:06.720
And so in the beginning we also that you know beginning doesn't mean not for Bosch,

02:06.720 --> 02:12.480
Bosch began much, much earlier, but when we started with this automation, our journey

02:12.480 --> 02:15.920
began here with typical Java Maven project.

02:15.920 --> 02:21.560
So before I can tell you all the details, I just said okay, I make this fact sheet and

02:21.560 --> 02:29.200
this will also accompany us through the presentation and that you just get the idea on the left

02:29.200 --> 02:35.400
side, no right side, here we have also a fact sheet that I took from the NASA and that made

02:35.400 --> 02:40.400
it really complicated now for the presentation preparation because that's so interesting

02:40.400 --> 02:46.800
once you dive into this you get distracted very, very quickly, so here I also put the

02:46.800 --> 02:47.800
link.

02:47.800 --> 02:53.800
So now we got the idea, for me Java Maven this is a community, so we have projects approach

02:53.800 --> 02:59.360
us okay we need some kind of support to doing this S-bomb stuff in the beginning and mainly

02:59.360 --> 03:04.960
triggered by the license compliance and so in the beginning we didn't have that fact

03:04.960 --> 03:09.840
sheet right, so we just started on and then we're done.

03:09.880 --> 03:14.640
We were done, we said okay now we created the S-bomb automatically, the FOSS compliance

03:14.640 --> 03:16.200
bundles etc.

03:16.200 --> 03:20.680
So I said okay mission completed, no.

03:20.680 --> 03:28.320
So then the next wave came up right, so oh yeah here web apps, JavaScript, NPM, blah,

03:28.320 --> 03:35.720
blah, blah, so here again fact sheet, so some things looked similar and also here the build

03:35.720 --> 03:40.600
mode is very important because you could ask why should you automate all this stuff if

03:40.600 --> 03:45.800
you release once a year for something, no, but we had this high requirement from the

03:45.800 --> 03:53.680
beginning to do this CI CD, but here for JavaScript our paradigms didn't work right because as

03:53.680 --> 04:00.240
most of you potentially know if you use it or my previous speakers use one dependency

04:00.240 --> 04:06.080
you get thousands of transitives right, so that didn't work, also this that you have

04:06.080 --> 04:14.440
this one to one, yeah one source is one binary didn't work, so we had hard time but we somehow

04:14.440 --> 04:23.120
well 80%, 90% so here I would rather use my chokers later but I think we handle it now

04:23.120 --> 04:24.620
somehow.

04:24.620 --> 04:29.600
Also when we started to do this we said okay because as I said the developers were not

04:29.600 --> 04:36.600
super keen on doing this, we tried to push this by centralizing that, so looking now

04:36.600 --> 04:43.960
from the end that was perhaps not that good idea rather to decentralize this because

04:43.960 --> 04:49.040
now we also centralize all the problems that we already here heard the whole morning and

04:49.040 --> 04:52.880
the whole afternoon right, so this is all on our desks.

04:52.880 --> 04:59.960
And here this was also the biggest learning when we said we had a vendor solution at that

04:59.960 --> 05:06.960
time still, said we need this, we need that, so it was hard, so this is also where the

05:06.960 --> 05:13.000
community the open source really helped us because then we could also do what we needed

05:13.000 --> 05:14.840
at that point.

05:14.840 --> 05:22.360
The other thing so here I put Mars, yeah is that we still had all the other projects

05:22.360 --> 05:26.880
right, so we couldn't just say okay now a mission completed but they also continued

05:26.880 --> 05:34.040
and doing new things, well this is innovation right, so you will never stop so we were going

05:34.040 --> 05:40.720
from one orbit to another and also this little wordplay there is intended because most of

05:40.720 --> 05:45.000
the time you will know that we use OSS River to get this.

05:45.000 --> 05:52.280
And that you know so who is the crew in this, this is I'm not the developer, so therefore

05:52.280 --> 05:58.000
my joke is later and I'm rather looking from the process perspective but we also had then

05:58.000 --> 06:03.080
the development team, we had developers, we needed to talk about this and here the next

06:03.080 --> 06:09.680
stop was then embedded C cone and thing, so okay that is a completely different planet

06:09.720 --> 06:16.360
right, so here and also I learned where Saturn is a gas planet so there is no even a surface

06:16.360 --> 06:20.920
where it can land on so you need to stay continuously in the orbit having some probes

06:20.920 --> 06:25.640
that you send out and also again differences so also you don't need to read all this stuff

06:25.640 --> 06:31.560
it's just for giving you the idea and here I made an, I went back in the history and

06:31.560 --> 06:38.760
get okay when we came in because also Thomas and Sebastian they were pretty, well busy

06:38.800 --> 06:46.000
already in the beginning where we had this starting point which was already supported

06:46.000 --> 06:52.320
in the beginning and then you see also the history so even more planets coming up and

06:52.320 --> 07:00.240
I'm still convinced that this is not the end here at the right side and now this is at

07:00.240 --> 07:06.760
scale because this is just the background right at scale for me means with all those

07:06.840 --> 07:13.880
planets there is a scaling then in the horizontal if you want because as central as I said earlier

07:13.880 --> 07:21.800
we centrally supported here our two teams that we needed then to scale in the horizontal

07:21.800 --> 07:27.080
really supporting this ideally for all the teams with all their different planets and

07:27.080 --> 07:33.280
here from the experience that we had in the team is it was very helpful then within the

07:33.320 --> 07:37.640
team but also with the customers to have those fact sheets so this always developed more and

07:37.640 --> 07:43.000
more to say okay for onboarding say what are we talking about right so what are you doing there

07:43.000 --> 07:49.880
so either as well for the for the developers that we contacted as well for us in Germany

07:49.880 --> 07:56.880
that was very helpful on the other side also the when we started talking with them so how do

07:56.920 --> 08:04.500
you do it today we started the in the documentation why because we needed to have we also having

08:04.500 --> 08:10.200
teams from automotive right they need to have audit rails all this reproducible documentation so

08:10.200 --> 08:17.840
we documented it that was good because then we also could reuse the concepts but then we

08:17.840 --> 08:25.440
iteratively improve them and came finally to say okay hey that's good this we can standardize

08:25.480 --> 08:31.400
we can reuse this and then this is the evolution then you can also once you'd standardized then

08:31.400 --> 08:35.480
you can start automating you cannot start automating directly from the beginning so you

08:35.480 --> 08:42.800
should have this information and the other thing is if you especially if you say okay I started

08:42.800 --> 08:49.200
from from sketch again then you might reinvent the wheel but the other thing is with all the

08:49.240 --> 08:57.400
tools also I think Anthony showed it earlier so you have a list of of of links several tools so

08:57.400 --> 09:03.600
which one is this the right one so also here the concept documentation was very important as

09:03.600 --> 09:11.360
all with the help of fact she's then to see okay what is then the correct the correct solution for

09:11.360 --> 09:18.800
my for my problem and our next stop you see embedded IoT Linux so here's also invitation join

09:18.880 --> 09:25.240
us here we still have a lot of fun in front of us to manage this because here again we have

09:25.240 --> 09:31.600
completely when when we had built less approaches where we could say we had this discussion earlier

09:31.600 --> 09:37.480
okay source code is the truth perfect this would be then we just take the repository analyze it but

09:37.480 --> 09:43.160
here we obviously have a build based approach that we need because the build also does a lot of

09:43.200 --> 09:51.120
things and I just learned also compiler blah blah blah all this other stuff and then coming back to

09:51.120 --> 09:58.320
the to the point and it's the last point here in the background so now the learning is we need here

09:58.320 --> 10:05.480
those fact sheets in order to not lose time in upfront to say okay we're what we are talking

10:05.480 --> 10:12.840
about then we also came to a generic architecture model and this is also what you see then in our

10:12.880 --> 10:18.840
tooling group so that ideally we use the same wording for that and the standardized representation

10:18.840 --> 10:25.000
but the other thing is once I have this so where can I find find this if if I have a good

10:25.000 --> 10:33.080
match and then I took here this example from online shopping if you take want to shop close and

10:33.080 --> 10:39.720
I that I found what was a nice thing I say okay I would love to have this also for us right so am

10:39.800 --> 10:46.320
a man woman or a kid do I need clothes or shoes and check its blah blah blah and then you get

10:46.320 --> 10:53.400
the selection of what you can buy but at that point where you need also to give now to narrow

10:53.400 --> 10:59.080
down the selection okay you need to measure okay what size do you have and now okay this looking

10:59.080 --> 11:06.600
at my belly this is then exactly where he said you here you need the the semantics okay where do

11:06.680 --> 11:12.200
I measure this right and this is what is then where we need the genetic architecture model for

11:12.200 --> 11:21.960
yeah now you see the story what we do we prepared this already the our new project eclipse

11:21.960 --> 11:31.560
up oapses so and I as I said it has several aspects so for those who are not familiar with what is

11:32.040 --> 11:39.560
up oapses I also copy pasted the definition again if you dive into this world you will probably

11:40.920 --> 11:50.520
need some some hours even or days because that's very very interesting but I also liked the link

11:50.520 --> 11:57.400
here so therefore I also put the two definitions so up the abscess is that fast fast from the center

11:57.400 --> 12:03.400
of attraction right the high point in an orbit and up oapses the other thing is then

12:05.000 --> 12:11.240
the fast fastest away from the body it is orbiting so therefore I made this little picture it's

12:11.240 --> 12:18.120
it's potentially wrong so please but then you just say there you here you have the center of attraction

12:18.120 --> 12:23.800
left side and the up oapses is this point so the really when you in the orbit that is fast away

12:24.680 --> 12:31.880
from this planet and I think that fitted very well because if we switch between the different

12:31.880 --> 12:36.840
plans you need to switch the orbit and that's the best point because then the attraction of the

12:36.840 --> 12:43.960
original is is so low and here you will not really find a lot of contents yet because this will be

12:43.960 --> 12:50.280
in the next days and weeks but the also the proposal the text here I put the link so what is inside

12:50.280 --> 12:58.200
so this is more or less the trailer of a film if you want so you can see the film later we I also

12:58.200 --> 13:04.840
give you some hints in the in at the end but just that you know what we are talking about and therefore

13:04.840 --> 13:11.720
I saw as I'm the process guy I said sorry I had also I also wanted to be a part of this projects

13:12.360 --> 13:18.120
and collaborate so therefore there are some process level documents on and that would rather

13:18.200 --> 13:25.480
cover this horizontal scaling right so that you can say okay now let's have a common way how we can

13:26.200 --> 13:33.960
map this the other thing is that we are using a lot the OSS review toolkit and here that would be

13:33.960 --> 13:39.800
then the vertical level because here we need to scale also as we need to run really really a lot

13:39.800 --> 13:46.280
of scans every every day and here we have performance issue in the way we use it past

13:46.360 --> 13:53.000
and here you see this would be also some code contribution that we would do is that you can

13:53.000 --> 14:01.400
expect and the upper part as I try to use the the icons a little bit is then really the idea what is

14:01.400 --> 14:09.480
the goal that you can just come say okay what are my needs and what is already there so to really

14:09.480 --> 14:15.480
jump start your process definition ideally just copy pasting then the the the templates and you

14:15.480 --> 14:21.560
can directly start ideally then via our tooling group mapping the tools that are available

14:22.600 --> 14:29.400
on the technical level so here we're using word so if you are a single project then

14:29.400 --> 14:35.720
anyway not in a target group of my talk today so then just go to or page or then if you have

14:35.720 --> 14:41.560
built based issue then you join us in the tooling group you will find your solution if you have an

14:41.560 --> 14:46.440
organization that has the same issues than my organization that you really need to use that

14:46.440 --> 14:53.640
at scale then you would invite you also then to join us in the eclipse apoapsis project

14:54.600 --> 15:03.800
and here there the old server you can what what we will contribute there you can really just take

15:03.800 --> 15:10.920
it and build up your own service in-house to automate then this software composition analysis

15:11.960 --> 15:17.000
we're coming heavily from the open source compliance but we also have security aspects and

15:17.000 --> 15:22.760
we heard also safety export control so everything that will be there and this is also why I said

15:22.760 --> 15:28.120
okay this is important that this is not this is just another puzzle piece if you want but this

15:28.120 --> 15:35.160
very important is the cooperation with the spdx here we also call for action invitation we have

15:35.240 --> 15:41.560
this new operations profile workgroup so we are invited also to join us there

15:43.000 --> 15:48.520
that will start in the next days I think the first first meeting on the one side and we have this

15:49.560 --> 15:57.080
dependencies to the open chain tooling group where we do the capability map so also that we do not

15:57.080 --> 16:02.520
need to reinvent all the wording so this is already there so you can already check it out

16:03.080 --> 16:09.160
and on the technical level here this is also where the maintainers are the same right

16:09.800 --> 16:16.840
in the uss3v toolkit where we have strong connections and then also you can see the technical dependencies

16:16.840 --> 16:23.720
but as I'm the process guy and I have a lot of chokers in the room but we have not that much time

16:23.720 --> 16:31.320
I will tell you later I explicitly asked my colleague so for those who are interested I have an offer

16:31.320 --> 16:39.880
later to you so on the process level side so this will be then this is just a work in

16:39.880 --> 16:46.680
progress thing where we have the generic architecture that we map against the capability map from

16:46.680 --> 16:53.160
that we already developed with the with the tooling group so that we have then the ideally the same

16:53.160 --> 16:59.480
semantics so just that you have this picture in mind as I said we're coming from open source

16:59.480 --> 17:07.320
compliance so therefore the current capability map is open source compliance related so for if we

17:07.320 --> 17:14.040
then also go further with security then I think we also need to define further capabilities then

17:14.040 --> 17:20.120
the question is if we do this in our group or in other groups but we will do it together well

17:20.120 --> 17:25.480
that's that's for sure the other thing is this and therefore I originally called this abstraction

17:25.480 --> 17:32.280
layer so it's abstraction layer not in the sense of a software that we create but rather on a

17:33.320 --> 17:39.160
process level that you say okay we have different stakeholders we have different products and here

17:39.160 --> 17:45.320
this is where the operations a work group from spdx then will will it will help yeah to say okay

17:45.320 --> 17:52.840
to rather say am I a man woman kid etc so where I'm in on the one side on the other side also

17:52.920 --> 18:00.280
having some standardization to have those fact sheets so is this the perfect solution or next to

18:00.280 --> 18:05.800
a perfect solution or at least something I can start with because here and this is where my

18:05.800 --> 18:11.640
organization is potentially special here we are in the middle of a supply chain typically in the

18:11.640 --> 18:17.080
automotive industry so we also we are not alone we cannot just say okay we will use this or we

18:17.080 --> 18:24.840
have legacy therefore we have to have flexibility for you that would be then the possibility to

18:24.840 --> 18:30.440
still keep the flexibility and say okay I have just as Anthony showed I have choice right and

18:30.440 --> 18:36.040
that's not bad of the on the other side and therefore we started this touring group is that

18:36.760 --> 18:42.760
we are only we were only a small group so we said we cannot maintain thousands of redundant things

18:42.840 --> 18:48.520
so we should focus and especially if we still have gaps on the other side so then rather say okay

18:48.520 --> 18:54.120
let's consolidate on the one side and then use the resources rather on another place

18:55.880 --> 19:01.640
then also the blueprints as I said so we're here we have everything we heard today beginning with

19:01.640 --> 19:08.120
deja-court from from Philippe now a phosology I saw here the colleagues also software c60

19:09.080 --> 19:15.320
or obviously false light so there are so many things where you you're totally lost right so

19:15.320 --> 19:21.240
there hey I know there's a solution but I don't know does it fit for me or not so I this is something

19:21.240 --> 19:27.000
we should tackle and the other thing that's funny because we also talked about this also the question

19:27.000 --> 19:33.320
so who am I right so am I rather developer I need rather this for my use case or or I'm rather

19:33.880 --> 19:42.680
try to manage this thing or audit thing so here this is important that we document that somewhere

19:42.680 --> 19:47.800
so I would offer to the start here but I'm open also to do this somewhere else especially as this

19:47.800 --> 19:54.120
will be necessary also for us to do the testing later because with a well-defined use case it's

19:54.120 --> 20:03.880
easy then to start then the test case yep thank you the test case definitions and the better the

20:03.880 --> 20:11.320
test the better than the solutions the on the technical output so the ord server what will that

20:11.320 --> 20:18.040
be so the goals of the server is that we have a unified API that you can use so if you run really

20:18.120 --> 20:25.000
at scale from your CI CD you can just call this API and it will all do do all the rest more or less

20:26.920 --> 20:33.480
easy setup integration you can read it on your own what we do not have yet but is one of the goals

20:33.480 --> 20:41.400
is frontend because this was typically then the the issue if especially if we were compared as

20:41.400 --> 20:46.280
those as River to a kid community with the vendors the vendors typically come up with a new and find

20:46.280 --> 20:52.360
ceo I blah blah bling bling bling and we will just well we have a tool that just does the do the

20:52.360 --> 20:59.000
business right but so we we know it's it's important and you see then later in the outlook and here I

20:59.000 --> 21:06.760
would potentially also have a choker then in the in the audience what what will come so that you see

21:06.760 --> 21:12.200
how would such a setup look like so you have a development team who wants to use this software

21:12.200 --> 21:18.440
composition analysis service so they can just use the API the ord server would do the rest of

21:18.440 --> 21:25.560
here you see then the different workers Martin called that from ord ord analyze the downloader

21:25.560 --> 21:31.480
scanner so these are the typical steps that you need then ending then with a reporter but we have

21:31.480 --> 21:38.840
teams that only needed parts of that then also sometimes the one thing uses a lot of performance

21:38.840 --> 21:42.840
so therefore the balancing is very important and that's what what you can then do

21:43.960 --> 21:50.040
with the server here we have some usage blueprints that we already will prepare with the project

21:50.040 --> 21:56.760
also in the use case collection the things that we use then for testing it and then another use case

21:56.760 --> 22:01.560
as I mentioned would then also be those those dashboards those your eyes people that want to

22:01.560 --> 22:09.240
know more this will also work then with the server just here the MVP that you will be able to expect

22:09.240 --> 22:14.760
then in the next weeks to be in our repository the repository was already there so we're preparing

22:14.760 --> 22:21.480
currently the initial contribution and this is the next step and that was I said so now you would

22:21.480 --> 22:28.280
say I want to know more about this ord server how does that work so there's an invitation we have

22:28.440 --> 22:34.920
twice a month the tooling group meetings every first and third one Wednesday the first

22:34.920 --> 22:41.800
Wednesday in the morning for the rather Asia Pacific region the third Wednesday era and the

22:43.160 --> 22:50.680
european sorry the european afternoon will also to cover better the time zones with 50 us and

22:51.560 --> 22:57.320
yeah so please check out the open chain global calendar so if you if you're interested and the

22:57.320 --> 23:03.320
next one I will moderate and Martin will be there so for all detailed questions regarding the technical

23:03.320 --> 23:11.800
stuff and we can also discuss the the other parts so I would really be glad if we could have some

23:11.800 --> 23:18.360
follow-up discussions in our existing communities then as I said this is yeah depending also on the

23:18.360 --> 23:26.040
on the load the initial contribution that we prepare ideally we should have it ready then for the

23:26.600 --> 23:32.680
community days so we plan ord community days beginning of March I hope I have put the right

23:32.680 --> 23:38.680
link so please register if you're interested because then we have also a detailed session about that

23:38.680 --> 23:43.560
and about the front end so we will not provide the front end in the beginning but we already in

23:43.560 --> 23:49.480
discussion with double open project so that they are also interested in providing something but as

23:49.480 --> 23:55.640
this is an api so everyone would be welcome to have their python shawasaki whatever you want

23:56.520 --> 24:02.840
but yeah at least we will care that we have a cool server in the background thank you very much

24:04.040 --> 24:09.480
stay tuned so here are all the links especially so really the who didn't know about this especially

24:09.480 --> 24:14.760
Anthony I would really welcome you if you also could present your your benchmark that you did

24:14.760 --> 24:21.400
that was really great because we also have the python inspector in the ord analyzer how we would

24:21.400 --> 24:26.040
get there and these are things that we really do in the tooling group thank you very much

24:32.760 --> 24:34.040
we'll have to answer a few questions

24:45.480 --> 24:52.280
address that noise yeah so the question is that we have a lot of noise and transitive dependencies

24:53.400 --> 24:59.080
I would directly rephrase that so you have dependencies in the build scoped in the test

24:59.080 --> 25:04.200
scope whatever and then you get the build of materials with thousands of things and there are

25:04.200 --> 25:11.160
irrelevant repositories that's how we call them so here this is a process level thing right this

25:11.160 --> 25:17.880
is where we typically come in and check with the teams please unscope that so here we have

25:17.880 --> 25:25.080
configuration as code is in the in the ord principle so you can directly silence down that

25:25.080 --> 25:30.840
that noise by just excluding then scope things like that but also that depends which planet you're

25:30.840 --> 25:43.480
coming from right at scale um at scale this is uh yeah so I would forward you to my joker here

25:44.920 --> 25:50.760
which is thomas so again here we should talk about which planet you're coming from right and

25:51.560 --> 25:57.560
we can also reuse a lot of this uh in a in a central database this is where also the previous

25:57.560 --> 26:04.600
talks were about sharing then creations package configurations uh here you're also more than

26:04.600 --> 26:16.520
welcome to uh all collaborate thank you thank you again

