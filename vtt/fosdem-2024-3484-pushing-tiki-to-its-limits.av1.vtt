WEBVTT

00:00.000 --> 00:12.680
Hello, so Tiki provides a very powerful and flexible database abstraction layer.

00:12.680 --> 00:17.000
Thanks to a concrete example which expanded for three years.

00:17.000 --> 00:18.800
We have learned a lot.

00:18.800 --> 00:24.880
As we start a similar project, we have time to reflect on lessons learned, pitfalls to

00:24.880 --> 00:26.480
avoid.

00:26.480 --> 00:30.680
And why not share everything with us, with you.

00:30.680 --> 00:36.560
So first I described the context, what the project was about, how we did it, what the

00:36.560 --> 00:41.480
challenges were, and what we learned as a summary.

00:41.480 --> 00:43.640
So I'm Jean-Marc Kipps.

00:43.640 --> 00:48.440
I discovered free software last century.

00:48.440 --> 00:53.040
I'm in the Tiki community since 2006, live in Strasbourg.

00:53.040 --> 01:02.000
I'm alone in front of you, but I don't want to believe that I did all that alone.

01:02.000 --> 01:04.600
It was a team project.

01:04.600 --> 01:09.640
It was headed by Evoludata, and a lot of people helped.

01:09.640 --> 01:12.720
Some of them are in the room.

01:12.720 --> 01:19.000
The customers were the peak team from the Institut Nationale et santé publique du

01:19.000 --> 01:20.000
Québec.

01:20.960 --> 01:25.600
The end users are medical testing laboratories.

01:25.600 --> 01:26.880
So that's the website.

01:26.880 --> 01:34.000
As you can see, everything is in French, but I'll translate as much as I can, and I translated

01:34.000 --> 01:35.560
before I did the screenshots.

01:35.560 --> 01:37.560
It's a way of cheating.

01:37.560 --> 01:41.000
This is the team, it's quality control, actually.

01:41.000 --> 01:47.120
And what I do is that every year they produce by medical samples.

01:47.120 --> 01:53.760
They ship them to registered labs, so peak ships, and the labs have to register.

01:53.760 --> 01:58.320
They have to register because not all the labs do the same analysis.

01:58.320 --> 02:00.680
It depends on the machines they own.

02:00.680 --> 02:11.040
They have to be certified for all the analyses they can do, and so they have to choose them.

02:11.040 --> 02:17.880
Then they do the test, and they send results, and peak analyses, the results, sales reports,

02:17.880 --> 02:19.360
and recommendations.

02:19.360 --> 02:24.880
And this is what they call one campaign, and there are many campaigns which are linked

02:24.880 --> 02:29.200
to group together in the program, et cetera.

02:29.200 --> 02:31.480
That's one of the processes.

02:31.480 --> 02:34.240
They used to do that using faxes.

02:34.240 --> 02:38.200
So at first you think, hey, how hard is it to be better than fax?

02:38.200 --> 02:41.240
It actually faxes hugely flexible.

02:41.240 --> 02:50.760
So for example, different medical disciplines did things in different ways for totally valid

02:50.760 --> 02:51.760
reasons.

02:51.760 --> 02:56.200
So we had to adapt, but there were also clever people.

02:56.200 --> 03:03.880
So they also used that project in order to kind of streamline and make their processes.

03:03.880 --> 03:05.960
So we met in the middle.

03:05.960 --> 03:07.800
Everybody improved.

03:07.800 --> 03:11.720
And of course there are other processes, but I don't have time to explain everything.

03:11.720 --> 03:12.840
That's just an example.

03:12.840 --> 03:20.000
So yes, they also have every year to draft, review, approve, and publish the programs

03:20.000 --> 03:25.040
that the people can register afterwards and manage those registrations.

03:25.040 --> 03:26.840
So in general, that's the website.

03:26.840 --> 03:31.280
If you don't have an account, and if you're not involved in a process, it does not match

03:31.280 --> 03:36.480
in it for you, even if you understand French.

03:36.800 --> 03:43.000
What's in it is this is, for example, the example of what I mentioned, that's the management

03:43.000 --> 03:44.840
of the program.

03:44.840 --> 03:46.800
So they have all the interface they need.

03:46.800 --> 03:47.960
They can edit it.

03:47.960 --> 03:49.920
They can view it.

03:49.920 --> 03:54.320
They can go and edit the campaign which are linked to the subprogram.

03:54.320 --> 03:58.440
They can go to other pages.

03:58.440 --> 04:00.240
There's a lot of it.

04:00.240 --> 04:05.080
Every table, as you can guess, is actually data linked to this program, but in other

04:05.080 --> 04:10.040
tables and sometimes in all other tables and other tables.

04:10.040 --> 04:11.360
So it's not simple.

04:11.360 --> 04:13.480
This isn't too hard.

04:13.480 --> 04:15.880
That's the process where they approve.

04:15.880 --> 04:17.080
They discuss on it.

04:17.080 --> 04:21.800
That's just comments, and then they validate it when they agree together.

04:21.800 --> 04:26.600
This is actually the same subprogram, but that's the end user view.

04:26.600 --> 04:33.400
So we have that flexibility, and also that's where they actually click when they want to

04:33.400 --> 04:39.160
register, as I said, they would.

04:39.160 --> 04:44.280
But there are lots of variety.

04:44.280 --> 04:47.080
Here is another program that you have plenty more combined.

04:47.080 --> 04:52.000
You can click on them because it's not the time of the year when they register.

04:52.000 --> 04:55.520
So as I said, it's rather complex.

04:55.520 --> 04:57.520
How we did it.

04:57.520 --> 05:01.600
Tiki, in case you don't know, has plenty of features, and you have to choose the ones

05:01.600 --> 05:03.400
you want for each project.

05:03.400 --> 05:11.480
So basically, we use the wiki pages in Tiki in order to embed widgets, which we call plugins,

05:11.480 --> 05:14.200
in the wiki pages, and that's where the logic is.

05:14.200 --> 05:18.120
Well, you can also use them for documentation.

05:18.120 --> 05:20.280
We have file galleries.

05:20.280 --> 05:23.680
We don't use them a lot.

05:23.680 --> 05:26.400
But there are some documents to share.

05:26.400 --> 05:30.120
Trackers is the huge thing.

05:30.120 --> 05:34.840
Trackers is the Tiki name for the database abstraction layer, because it's starting

05:34.840 --> 05:40.760
it, it's starting, started as a bug tracker with grew and grew and grew, and now it's

05:40.760 --> 05:46.920
a full-fledged database abstraction, but it's hard to rename things afterwards.

05:46.920 --> 05:53.040
The fact each tracker item still has a status, open, pending, et cetera, and we use it.

05:53.040 --> 06:00.040
The categories are useful because that's what we use for the permission system.

06:00.040 --> 06:01.600
The scheduler, I'll get back to it.

06:01.600 --> 06:07.840
It will be simpler.

06:07.840 --> 06:16.760
The performance-related features, the main one is that, well, when you have a lot of

06:16.760 --> 06:23.280
data, the important thing is how you set and index it, and the default is MySQL full

06:23.280 --> 06:28.840
text, but you really need to install elastic search for that.

06:28.840 --> 06:34.680
We really had to because there are too many limitations, especially in the number of fields

06:34.680 --> 06:38.800
that MySQL can do.

06:38.800 --> 06:43.920
And the rest are basically, we had to raise everything, and it's easy to do because we

06:43.920 --> 06:45.680
do it within Tiki.

06:45.680 --> 06:46.680
It's just configurable.

06:46.680 --> 06:53.080
So all the time we doubled some memory limits, et cetera.

06:53.080 --> 06:56.000
So trackers.

06:56.000 --> 07:03.680
Trackers are basically, you can think about trackers as tables.

07:03.680 --> 07:05.480
Each tracker is a table.

07:05.480 --> 07:12.200
We have 86 of them so far and still growing.

07:12.200 --> 07:19.000
This is the tracker admin view, which end users don't see, but the customers love it

07:19.000 --> 07:20.840
because they feel empowered.

07:20.840 --> 07:22.240
They can see what's going on.

07:22.240 --> 07:23.880
They can edit stuff.

07:23.880 --> 07:26.080
We have activated inline editing.

07:26.080 --> 07:32.400
So when you see that, you can click on any of those little widgets and edit what's there,

07:32.400 --> 07:41.920
correct typo, a filter on what you want to see, sort on every column, et cetera.

07:42.480 --> 07:49.560
So that goes out of, that allows to do a lot of things without bothering to set up a whole

07:49.560 --> 07:54.200
workflow and it's really useful.

07:54.200 --> 07:59.880
So I said that trackers are like tables and tables have fields.

07:59.880 --> 08:05.960
So there are plenty of kind of fields and these are also, you can just add them, et cetera.

08:05.960 --> 08:14.960
So the useful ones or the auto increment was, is really practical because it allows to access

08:14.960 --> 08:20.600
and display the item ID of each tracker item.

08:20.600 --> 08:23.680
Item link, it's super powerful.

08:23.680 --> 08:30.720
The item link, well, if you're familiar with SQL, think about foreign keys.

08:30.720 --> 08:34.280
The item link links to another tracker.

08:34.280 --> 08:39.760
So when you edit the item, you have a selection of item from the other tracker and you can

08:39.760 --> 08:43.040
link track, well, two trackers.

08:43.040 --> 08:47.880
You can link tracker items from one tracker to tracker items to another tracker.

08:47.880 --> 08:55.800
Once you manage to link those, items, it is super useful because it does the other thing.

08:55.800 --> 08:59.440
For example, as we said, these are the campaign.

08:59.440 --> 09:05.400
Each campaign is linked to one subprogram and once it's linked to the subprogram, I

09:05.400 --> 09:08.400
mean, the subprogram has a year of the subprogram.

09:08.400 --> 09:14.160
So the campaign just gets the year from the associated subprogram.

09:14.160 --> 09:18.160
You don't have to do a double entry, et cetera.

09:18.160 --> 09:19.480
So you get those data.

09:19.480 --> 09:25.040
It's all indexed together and when you display the campaign, you have all these, all these

09:25.040 --> 09:29.040
values from other trackers.

09:29.040 --> 09:35.440
So when you start to link trackers, as you can guess, yeah, it starts to look like, you

09:35.440 --> 09:39.480
know, database schematic.

09:39.480 --> 09:42.840
That's a schematic I did.

09:42.840 --> 09:52.560
By the way, in a wiki page, in a tiki page with a draw widget, I needed it for a workflow

09:52.560 --> 09:55.720
because otherwise I couldn't figure out what to do.

09:55.720 --> 10:02.600
And so this is, I linked all the item links and the item lists and I put color because

10:02.600 --> 10:13.840
the color is about the fact that, about the fact that when you link tracker items and you

10:13.840 --> 10:24.000
delete or change the status of a tracker item, you may want the related tracker item to be

10:24.000 --> 10:28.720
also deleted or its status to change or not.

10:28.720 --> 10:34.440
That's configurable and that's why I wanted to keep track of it.

10:34.440 --> 10:39.640
Yeah, still not 86 trackers.

10:39.640 --> 10:41.120
That was, yeah.

10:41.120 --> 10:45.320
So how it dealt with source management.

10:45.320 --> 10:51.200
We had three, not four environments.

10:51.200 --> 10:56.120
We set up a dedicated private GitLab repo.

10:56.120 --> 11:02.960
We had our branches and we stuck dev and test on those branches.

11:02.960 --> 11:10.120
So every commit would instantly update the site.

11:10.120 --> 11:18.080
We get from one to the other by merging and terrific and production is not locked in production.

11:18.080 --> 11:23.520
Then the staging environment we called test is approved.

11:23.520 --> 11:29.040
We create a tag with the date and we run that in production.

11:29.040 --> 11:37.040
And so that means that, well, we have auditability about our versioning system tells us what

11:37.040 --> 11:42.880
we were running at what time, how it evolved, what we had in production at a given time

11:42.880 --> 11:52.560
if we want to recreate production at a former date when you hit a bug and you try to figure

11:52.560 --> 12:01.120
out is that a regression or is it something we missed last year and it was already there.

12:01.120 --> 12:02.920
All our commits were very careful.

12:02.920 --> 12:08.480
We put that we do not edit the Tiki files as much as we can.

12:08.480 --> 12:17.920
We add our templates in our theme or in the custom translation.

12:17.920 --> 12:24.160
That means that when we do a merge and we want to get the novelties from the Tiki community

12:24.160 --> 12:35.440
called and the security improvements, we do not get merge conflicts.

12:35.440 --> 12:44.640
The database management is just the opposite flow because the reference is in production.

12:44.640 --> 12:49.760
That's where we have the real data.

12:49.760 --> 12:53.720
Some of this data has been entered by end users.

12:53.720 --> 13:01.840
Some of it is those wiki pages we edit in order to show you later why we have code in

13:01.840 --> 13:03.720
our wiki pages.

13:03.720 --> 13:08.400
The nice thing is that we can try that.

13:08.400 --> 13:11.440
We synchronize test and dev from that.

13:11.440 --> 13:13.000
Then we do experiments.

13:13.000 --> 13:15.400
Then we get that to be validated.

13:15.400 --> 13:18.600
If it's okay, that's the approved edit.

13:18.600 --> 13:20.960
Then we synchronize.

13:20.960 --> 13:29.560
Tiki takes care of keeping a history of changes in the wiki pages, in the tracker items.

13:29.560 --> 13:36.600
There's an activity log and that's how we get our auditability for that part.

13:36.600 --> 13:44.200
I just said that all our environments are running the same database.

13:44.200 --> 13:52.320
You may get how this is an issue.

13:52.320 --> 14:00.240
What we do is that one single file here is not a versioned.

14:00.240 --> 14:07.640
This one is specific to each Tiki because this is the one which has the database credentials

14:07.640 --> 14:16.200
and it also has a link to configuration file which can be versioned because we have an

14:16.200 --> 14:22.480
item for a section in the configuration file.

14:22.480 --> 14:30.720
That means that in the same configuration file, each environment uses another section.

14:30.720 --> 14:35.920
In this section, we can override any Tiki preference.

14:35.920 --> 14:38.600
This has two very big advantages.

14:38.600 --> 14:48.160
The first one is that all the security preferences and others can be set in that file and cannot

14:48.160 --> 14:53.440
be accidentally modified through the Tiki admin panel.

14:53.440 --> 15:00.040
The other is that we can have different things in different sections.

15:00.040 --> 15:07.600
That allows us, for example, to ensure that only the production server can send email

15:07.600 --> 15:09.280
notifications.

15:09.280 --> 15:16.120
You do not want your end users to get notifications from a test server or a dev server that I'm

15:16.120 --> 15:21.200
not supposed to know about.

15:21.200 --> 15:22.200
What else?

15:22.200 --> 15:25.320
Yes, and you can change the browser's title.

15:25.320 --> 15:33.880
You can change the theme options and end up having your browser tabs like this to have

15:33.880 --> 15:39.440
different colors when you are working in production or in staging or in dev.

15:39.440 --> 15:47.040
That avoids big mistakes when you are editing a site where you want to be sure that you're

15:47.040 --> 15:53.520
not editing fraud when you want to do stuff in dev.

15:53.520 --> 16:01.720
So there's still the part about how you do that.

16:01.720 --> 16:09.520
So Tiki has a no-code, low-code approach, but at some stage you just have to accept that

16:09.520 --> 16:16.280
the project is really complex and abundant.

16:16.280 --> 16:22.800
The great thing is that there are options for doing really complicated stuff.

16:22.800 --> 16:32.440
These are basically the list widgets which we call plugin because the list widget is

16:32.440 --> 16:38.760
super useful because that's what allows you to display stuff which come from anywhere

16:38.760 --> 16:44.320
in Tiki, but here we are only interested in the tracker items.

16:44.320 --> 16:48.240
List execute is very similar to list, but that's not for displaying.

16:48.240 --> 16:54.040
That's for listing stuff and doing things for on a whole bunch of tracker items at the

16:54.040 --> 16:59.080
same time like deleting them or changing their status.

16:59.080 --> 17:07.680
Custom search is also closely related and this is for allowing people to do searches,

17:07.680 --> 17:14.880
to filter, to end user have control in this case.

17:14.880 --> 17:20.160
So that's a list widget example.

17:20.160 --> 17:25.680
You are not going to understand how it works like we don't have the time.

17:25.680 --> 17:28.640
We ourselves have that documentation page.

17:28.640 --> 17:30.000
We spent a lot of time.

17:30.000 --> 17:32.480
It's plenty of info.

17:32.480 --> 17:34.640
Everything is there, there are examples and all that.

17:34.640 --> 17:37.640
We spent a lot of time in it.

17:37.640 --> 17:44.240
Basically the general idea is that this is something we can put in a web page.

17:44.240 --> 17:50.400
There is a section which says what filters, what we are going to display.

17:50.400 --> 17:55.640
There is a section about how we want to output it.

17:55.640 --> 18:01.960
The more there are predefined templates, but if we want full control, you just give a smart

18:01.960 --> 18:07.640
ETPL file and then you can code whatever you like.

18:07.640 --> 18:12.200
You can even change the formatting before it gets to the template.

18:12.200 --> 18:18.880
And if your filter doesn't match anything, there is an alternate in order to an alternate

18:18.880 --> 18:19.880
section.

18:19.880 --> 18:25.240
So that allows you to do all the pages you saw before.

18:25.240 --> 18:31.280
You have to realize that when I say you can do whatever you like in the template, one

18:31.280 --> 18:36.120
of the things you can do in the template is call another list plugin.

18:36.120 --> 18:40.920
The syntax is slightly different from the web page.

18:40.920 --> 18:48.760
And that allows you to collect information to trackers which are linked to other trackers,

18:48.760 --> 18:49.760
etc.

18:49.760 --> 18:53.080
And you can go on and on and on and on if you like.

18:53.080 --> 18:59.040
There are no limits at this point.

18:59.040 --> 19:11.400
So that's basically what we used nearly all the time for all the pages, for all the workflows.

19:11.400 --> 19:20.120
The scheduler is also really useful because sometimes some processes are just too complex.

19:21.080 --> 19:24.120
There are two special cases and all that.

19:24.120 --> 19:29.320
And we had especially like the scoring system.

19:29.320 --> 19:35.320
We just wrote a script which was directly doing the calculation and updating the values

19:35.320 --> 19:37.120
in the database.

19:37.120 --> 19:43.560
And the scheduler is our way of ensuring that things can run whenever you like.

19:43.560 --> 19:51.280
For example by night because luckily neither our customers or the end users really wanted

19:51.280 --> 19:54.520
to work outside of working hours.

19:54.520 --> 20:02.720
So we can run everything we like during the night, especially nightly script for calculating

20:02.720 --> 20:10.160
scoring things or index rebuilds, whatever.

20:10.160 --> 20:15.520
So what were the challenges?

20:15.520 --> 20:26.240
One of the challenges we had was that page because that page was awesome because we had

20:26.240 --> 20:28.400
lots of information.

20:28.400 --> 20:35.360
It doesn't show here but actually those columns have related information which are in different

20:35.360 --> 20:36.760
trackers.

20:36.760 --> 20:43.400
So that's one of the cases where you have those templates which call another list plugin,

20:43.400 --> 20:46.920
which call another list plugin, which call another list plugin.

20:46.920 --> 20:53.680
So obviously the first year everything was great and you had everything here.

20:53.680 --> 20:55.360
We were using table sorter.

20:55.360 --> 20:58.160
You can sort on any column.

20:58.160 --> 21:03.240
You can filter in these places and you can move the pagination around.

21:03.240 --> 21:16.800
It was all client side, meaning all the data was in the page and after the third year it

21:16.800 --> 21:21.720
starts to get you cloud player timeouts.

21:21.720 --> 21:29.200
So we have rewritten the templates in order to optimize to do some caching ourselves in

21:29.200 --> 21:32.320
the code.

21:32.320 --> 21:38.040
And then we had to raise the memory limit because you know, trade-offs.

21:38.040 --> 21:47.600
But that's not a solution which is going to last forever.

21:47.600 --> 21:53.000
So it's solved for this year and they want to have five years of data, I understand.

21:53.000 --> 21:55.520
We'll see that.

21:55.520 --> 22:02.080
So basically this will need to be rewritten using custom search and just paginate.

22:02.080 --> 22:07.760
Or here they have the download button because they will all those information in CSV so

22:07.760 --> 22:09.960
that they can do more data mining.

22:09.960 --> 22:19.800
So we will provide, we will rewrite that but let them download subsets of the data.

22:19.800 --> 22:22.280
And that should solve that.

22:22.280 --> 22:28.880
And figure out, I'll talk about CSV extract here.

22:28.880 --> 22:31.680
That was another issue we have.

22:31.680 --> 22:45.000
That's a, every link here generates a CSV file which again gets data from plenty of trackers.

22:45.000 --> 22:52.720
So for the big labs we did have some timers and we were about to do the same thing, you

22:52.720 --> 22:56.720
know, rewrite the optimize, the TPL, etc.

22:56.720 --> 23:03.800
But luckily we had another idea which is to talk with the customers who explained that,

23:03.800 --> 23:08.440
well, that those data hardly ever change.

23:08.440 --> 23:12.960
So the solution is not to calculate them when you click on the button.

23:12.960 --> 23:19.320
We are just going to use some caching and have a nightly mechanism or, you know, generate

23:19.320 --> 23:25.240
the caches at the right time and just link to a file.

23:25.240 --> 23:27.200
Yeah.

23:27.200 --> 23:35.120
So mainly our lessons and improvements meaning that since I said that we are going to have

23:35.120 --> 23:40.200
a similar project which is about to start.

23:40.200 --> 23:44.480
We wanted to see what we, well, essentially it worked.

23:44.480 --> 23:48.040
The customers were happy but we can still improve stuff.

23:48.040 --> 23:53.320
So what we are going to improve is use more sophisticated Tiki permission mechanisms which

23:53.320 --> 23:55.520
is called templated groups.

23:55.520 --> 23:59.680
That's for the permissions about what people are allowed to see depending on the groups

23:59.680 --> 24:01.680
they are in.

24:02.240 --> 24:10.880
We just used a simple way and then we had to add another layer of security in the smarty

24:10.880 --> 24:11.880
templates.

24:11.880 --> 24:14.040
We want to avoid that in the new project.

24:14.040 --> 24:17.160
Make sure all the layers of data are present in the design.

24:17.160 --> 24:25.520
Well, that's always hard because, well, it's always hard to realize that there is a missing

24:25.520 --> 24:28.400
table or tracker.

24:28.400 --> 24:33.000
It makes a lot of extra work to discover that too late.

24:33.000 --> 24:37.880
Then again, I'm totally convinced that it would be even worse if we were working in

24:37.880 --> 24:41.640
real SQL.

24:41.640 --> 24:48.400
The other thing is, as I said, the other lesson is, well, table sorter is not a tool for data

24:48.400 --> 24:50.760
mining huge data sets.

24:50.760 --> 24:52.400
That's the summary of it.

24:52.400 --> 24:59.920
So you have to get your customers to accept that sometimes they have to use pagination

24:59.920 --> 25:05.560
and not have everything available and there are technical limits.

25:05.560 --> 25:09.560
Same thing for identifying huge CSVs.

25:09.560 --> 25:12.280
And also we have taken advantage of this.

25:12.280 --> 25:18.680
We are going to improve the list plugin which will be expanded with sublist sections which

25:18.680 --> 25:26.880
basically will allow us to do joins without having to do that in TPL files.

25:26.880 --> 25:30.600
And that's about it.

25:30.600 --> 25:31.120
Thank you, Jean-Marc.

