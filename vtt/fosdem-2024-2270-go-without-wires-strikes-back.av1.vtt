WEBVTT

00:00.000 --> 00:15.000
Go to an internet search of springy LED and you will only find things that I have posted.

00:15.000 --> 00:17.000
Okay Ron, I will quickly introduce you.

00:17.000 --> 00:24.000
Well Ron is the introduction, he is the guy that flies drones over my head every single year and every single year I survive.

00:24.000 --> 00:29.000
Last year we did Go Without Wires, where we launched illegal weather balloons above China.

00:29.000 --> 00:34.000
I mean above Brussels, completely illegal by the way.

00:34.000 --> 00:37.000
And this year he strikes back.

00:37.000 --> 00:41.000
Ron, why are you striking back? Go ahead.

00:41.000 --> 00:42.000
A plus!

00:47.000 --> 00:58.000
So before I get started I just want to say a big thank you to Marcia, the organizers, the staff, all of the people who work really hard to create this amazing labor of love called FOSTA.

00:58.000 --> 01:00.000
Ron, let's give it up for them.

01:08.000 --> 01:10.000
I'm missing one cable.

01:10.000 --> 01:12.000
Here we go.

01:12.000 --> 01:14.000
I know there's always a cable.

01:14.000 --> 01:16.000
Alright.

01:18.000 --> 01:27.000
At FOSTA 2021 we learned Go Without Wires and we introduced the Go Bluetooth package.

01:27.000 --> 01:38.000
Then at FOSTA 2022 we learned to go further without wires and we showed lots of interesting local area networking with Wi-Fi.

01:38.000 --> 01:48.000
Then last year at FOSTA 2023 we went to go even further without wires and in an incredible cliffhanger ending,

01:48.000 --> 01:55.000
despite the fact that I accidentally reset my long range router to factory settings right before my talk,

01:55.000 --> 02:02.000
somehow despite all of that we managed to release Tiny Global 1 the next day.

02:02.000 --> 02:08.000
It was in hack a day and all of us are still walking around so it couldn't have been that illegal, right?

02:08.000 --> 02:11.000
So yeah, it was an amazing experience.

02:11.000 --> 02:16.000
Now it's FOSTA 2024 and Go Without Wires strikes back.

02:16.000 --> 02:19.000
So I am Ron Evans, technologist for hire.

02:19.000 --> 02:24.000
I run a boutique consultant called the Hybrid Group where we create the software that makes your hardware work.

02:24.000 --> 02:28.000
And we work on some open source projects such as TinyGo.

02:28.000 --> 02:34.000
So it turns out our secret plans for Go wireless communication are no longer secret.

02:34.000 --> 02:39.000
Something to do with doing a series of talks at an open source conference where it's all streamed on video.

02:39.000 --> 02:41.000
People actually watch this stuff.

02:41.000 --> 02:42.000
It's amazing.

02:42.000 --> 02:45.000
So let's talk about space.

02:45.000 --> 02:48.000
These are all the different network types by spatial scale.

02:48.000 --> 02:54.000
At the lowest we have nano which would be like body sensors that are like injected into your bloodstream.

02:54.000 --> 03:02.000
We have body area networks which would be like your pulse oxidometer or your diabetes, blood sugar monitors.

03:02.000 --> 03:08.000
We have personal area networking which would be Bluetooth, local area networking, wide area networking.

03:08.000 --> 03:10.000
You get the idea.

03:10.000 --> 03:14.000
There's a whole universe of frequencies still to explore.

03:14.000 --> 03:19.000
And thanks to the amazing community around TinyGo we are doing exactly that.

03:19.000 --> 03:23.000
So let's go back in time and see what's been happening.

03:23.000 --> 03:26.000
We'll start with the personal area that we can go Bluetooth.

03:26.000 --> 03:29.000
So of course it runs on Linux.

03:29.000 --> 03:34.000
Actually there's a new release coming where it will run on many different versions of Linux because we got rid of the cgo dependencies.

03:34.000 --> 03:36.000
Mac OS of course.

03:36.000 --> 03:38.000
Windows, yes it runs on Windows.

03:38.000 --> 03:40.000
There are Windows people out there.

03:40.000 --> 03:45.000
And bare metal on Nordic Semiconductor microcontrollers like you saw during ICAS demo.

03:45.000 --> 03:54.000
So we now have new bare metal support that we're just introducing where we support the Bluetooth host controller interface.

03:54.000 --> 03:56.000
Host controller interface.

03:56.000 --> 04:03.000
You're probably wondering some of you, what does that mean then?

04:03.000 --> 04:08.000
So a quick overview of a typical wireless embedded device architecture.

04:08.000 --> 04:10.000
Hello, there we go.

04:10.000 --> 04:16.000
So we have an embedded device and a lot of the more professional, serious devices will have two microcontrollers, two processors,

04:16.000 --> 04:20.000
the primary one which is going to communicate with your sensors and displays,

04:20.000 --> 04:23.000
and then the secondary which is going to do your wireless communication.

04:23.000 --> 04:27.000
Because these microcontrollers generally only have a single core.

04:27.000 --> 04:30.000
So how do we do multitasking on single core?

04:30.000 --> 04:32.000
It's not easy.

04:32.000 --> 04:34.000
So many boards use this exact setup.

04:34.000 --> 04:39.000
Boards from Arduino, boards from Adafruit, boards from Seed Studio, many other boards.

04:39.000 --> 04:47.000
And most of them use the ExpressF ESP32 which is a very common little chip that supports both Wi-Fi and Bluetooth.

04:47.000 --> 04:53.000
So it's so common that there is actually firmware they put on that called NINA FW,

04:53.000 --> 04:57.000
NINA firmware created by Arduino and supported by a lot of community members.

04:57.000 --> 05:02.000
And the way that we use that is that TinyGo runs on your application microcontroller

05:02.000 --> 05:06.000
and then using this HCI protocol over the UART using the serial interface,

05:06.000 --> 05:09.000
we can communicate with the wireless microcontroller.

05:09.000 --> 05:14.000
So now we have Bluetooth support on all of these boards right out of the box today, right now,

05:14.000 --> 05:16.000
well, if you run the DevBatch.

05:16.000 --> 05:18.000
So how Bluetooth works?

05:18.000 --> 05:20.000
The too long didn't read edition.

05:20.000 --> 05:21.000
So we have central.

05:21.000 --> 05:25.000
Central's are like your notebook computer, your tablet, your mobile phone.

05:25.000 --> 05:27.000
They go scanning looking for stuff out there.

05:27.000 --> 05:28.000
Then we have peripherals.

05:28.000 --> 05:30.000
Peripherals advertise their services.

05:30.000 --> 05:31.000
I'm a heart rate monitor.

05:31.000 --> 05:32.000
I'm a printer.

05:32.000 --> 05:34.000
I'm a smart light bulb.

05:34.000 --> 05:38.000
So central connect to the peripherals and say, so what do you got?

05:38.000 --> 05:41.000
What are your services and characteristics that you offer?

05:41.000 --> 05:44.000
And the services and characteristics, some of them are well known like, you know,

05:44.000 --> 05:46.000
your heart rate monitor, et cetera.

05:46.000 --> 05:52.000
That way different companies and different manufacturers and different projects can use these same services and characteristics.

05:52.000 --> 05:55.000
So let's take a look at something.

05:55.000 --> 05:57.000
Tiny scan, our first demo.

05:57.000 --> 06:00.000
So it's a Bluetooth war scanner as a conference badge.

06:00.000 --> 06:02.000
So where's my conference badge?

06:02.000 --> 06:09.000
So I do not have this running on the Gopher badge because I need some extra pins to actually connect.

06:09.000 --> 06:15.000
But it's an A to the fruit pie badge, which is a microchip AT-SAM D51 processor.

06:15.000 --> 06:18.000
It only has 256 K of memory.

06:18.000 --> 06:22.000
Yes, 256 kilobytes of memory.

06:22.000 --> 06:26.000
So you know your typical hello world in regular go is 1.4 megabytes.

06:26.000 --> 06:29.000
And so luckily we have time to go.

06:29.000 --> 06:33.000
And then we're going to use the A to the fruit air lift Wi-Fi feather wing,

06:33.000 --> 06:40.000
which is a little daughter board, sister board, friend board for the badge that contains the ESP32 processor.

06:40.000 --> 06:42.000
So let's take a quick look.

06:42.000 --> 06:45.000
Hopefully my, I forgot to check my video.

06:46.000 --> 06:48.000
Let's see if it works.

06:48.000 --> 06:53.000
I know that some people talked about how they don't like make.

06:53.000 --> 06:55.000
I really like make.

06:57.000 --> 06:58.000
All right.

06:58.000 --> 07:00.000
So there's my camera.

07:00.000 --> 07:03.000
So let's take a look here real fast.

07:03.000 --> 07:06.000
So here's the badge here on the back.

07:06.000 --> 07:12.000
You can see the little board with the ESP32 microcontroller.

07:12.000 --> 07:16.000
So let's go back over to our code.

07:16.000 --> 07:19.000
Let's take a look at the code actually.

07:19.000 --> 07:21.000
Yes, I have internet.

07:21.000 --> 07:22.000
Amazing.

07:22.000 --> 07:23.000
Can you see this?

07:23.000 --> 07:25.000
It's kind of small.

07:25.000 --> 07:26.000
All right.

07:26.000 --> 07:31.000
So it looks just like your regular go program because it in fact is a regular go program.

07:31.000 --> 07:36.000
We're even importing like your basic gigantic memory consuming packages like font.

07:36.000 --> 07:38.000
Just a show we can.

07:38.000 --> 07:40.000
And we're using the tiny go Bluetooth package.

07:40.000 --> 07:44.000
And then we're using another package called tiny term, which is part of the tiny go ecosystem.

07:44.000 --> 07:51.000
It's just a relatively simple terminal for run on any of these displays, not as cool and anti alias though.

07:51.000 --> 07:55.000
So what we're going to do is first we're going to initialize the terminal.

07:55.000 --> 07:57.000
We're going to output some information on that.

07:57.000 --> 07:58.000
We're doing it.

07:58.000 --> 08:01.000
We're going to enable the Bluetooth adapter.

08:01.000 --> 08:03.000
Then we're going to start scanning.

08:03.000 --> 08:07.000
When we do the scanning, whenever we find a device, we're just going to print out what the device is doing.

08:07.000 --> 08:10.000
We're going to print out what the device is addressing.

08:10.000 --> 08:14.000
It's relative signal strength indicator and if it has a name and then output that.

08:14.000 --> 08:16.000
So that's all this is going to do.

08:16.000 --> 08:20.000
So let's see if this is going to work.

08:20.000 --> 08:23.000
So let's see make.

08:23.000 --> 08:24.000
Tiny scan.

08:24.000 --> 08:26.000
Let's plug in the badge.

08:26.000 --> 08:31.000
Let's actually plug in the cable because that works a lot better.

08:31.000 --> 08:34.000
Who here has forgotten to plug in a cable during?

08:34.000 --> 08:36.000
Who here has not forgotten to plug in?

08:36.000 --> 08:39.000
Who has not raised your hand or a liar?

08:39.000 --> 08:45.000
That's what we had for a while.

08:45.000 --> 08:51.000
Touché.

08:51.000 --> 08:54.000
Some people got that joke within the joke.

08:54.000 --> 08:55.000
All right.

08:55.000 --> 09:00.000
So here now we see I flash the board and it's a little blurry.

09:00.000 --> 09:05.000
Let's get some focus here.

09:05.000 --> 09:09.000
So you can see there's the MAC addresses of some devices.

09:09.000 --> 09:12.000
Anybody have a Bluetooth device they want to turn on?

09:12.000 --> 09:13.000
Let's see.

09:13.000 --> 09:14.000
I'll turn on my phone.

09:14.000 --> 09:19.000
What could go wrong with that?

09:19.000 --> 09:20.000
All right.

09:20.000 --> 09:26.000
So I have some Bluetooth stuff on my phone and I have a little advertiser that I can turn on.

09:26.000 --> 09:31.000
And you'll see here in a minute.

09:31.000 --> 09:37.000
In a minute.

09:37.000 --> 09:42.000
It's been over a minute.

09:42.000 --> 09:43.000
So they enable Bluetooth.

09:43.000 --> 09:45.000
Yes, I enable Bluetooth.

09:45.000 --> 09:46.000
All right.

09:46.000 --> 09:52.000
Well, you saw some other devices so hopefully my phone is going to work though because I'm going to need that in a minute.

09:52.000 --> 09:54.000
All right.

09:54.000 --> 09:57.000
I have to unplug my battery.

09:57.000 --> 09:59.000
Let us continue, my friends.

09:59.000 --> 10:00.000
Let us continue.

10:00.000 --> 10:02.000
We have very little to do and lots of time.

10:02.000 --> 10:03.000
Now wait.

10:03.000 --> 10:04.000
Strike that.

10:04.000 --> 10:07.000
Reverse it.

10:07.000 --> 10:08.000
All right.

10:08.000 --> 10:09.000
So we saw this very good.

10:09.000 --> 10:10.000
We saw the code.

10:10.000 --> 10:11.000
We saw a demo.

10:11.000 --> 10:12.000
All right.

10:12.000 --> 10:14.000
Cube life.

10:14.000 --> 10:17.000
So now we saw what a central can do, right?

10:17.000 --> 10:19.000
Can scan, look for stuff.

10:19.000 --> 10:24.000
So now let's see Conway's Game of Life as an LED cube with Bluetooth control.

10:24.000 --> 10:30.000
So now if you don't know about Conway's Game of Life, it's in the category of mathematics known as cellular automata.

10:30.000 --> 10:31.000
It's basically a zero player game.

10:31.000 --> 10:33.000
It plays against itself.

10:33.000 --> 10:38.000
And I'm using a package called Vita from friend and collaborator, Alessandro Cipata.

10:38.000 --> 10:40.000
And I'll give you a quick demo.

10:40.000 --> 10:42.000
It's a very cool package written in Go.

10:42.000 --> 10:44.000
I need to slow it down because it's way too fast.

10:44.000 --> 10:48.000
So this is written in TinyGo and compiled to WebAssembly and running in your web browser.

10:48.000 --> 10:50.000
But I don't have time to talk about that right now.

10:50.000 --> 10:54.000
Just suffice to say we're going to play six parallel games of life.

10:54.000 --> 11:04.000
And we're going to use Go channels to do it, to communicate between these six different universes that are all running on this same processor,

11:04.000 --> 11:09.000
which is an Adafruit Metro M4 airlift with six Hub 75 displays.

11:09.000 --> 11:13.000
So the Adafruit Metro is pretty much the same processor as the badge.

11:13.000 --> 11:16.000
It just has slightly less RAM.

11:16.000 --> 11:20.000
And it has an onboard ESP32 processor.

11:20.000 --> 11:28.000
So then the Hub 75 panel is a typical LED panel that you see on billboards and other installations.

11:28.000 --> 11:31.000
And what we're going to do, let's take a quick look at our architecture here.

11:31.000 --> 11:35.000
Our primary processor is running the code to play the games of life.

11:35.000 --> 11:40.000
Then our UART is going to communicate via Bluetooth using the built-in ESP32.

11:40.000 --> 11:49.000
Then with the SPI, SPI interface, we're going to communicate with all of these six different panels so that they can communicate with each other.

11:49.000 --> 11:51.000
Let's take a very quick look at the hardware.

11:51.000 --> 11:53.000
Wait, where did my camera go?

11:58.000 --> 12:00.000
I probably unplugged it.

12:00.000 --> 12:01.000
Okay.

12:01.000 --> 12:05.000
So this is the LifeCube, CubeLife.

12:06.000 --> 12:09.000
And I left the front panel open so that you could see it,

12:09.000 --> 12:12.000
because it's very hard to fit everything in there and the battery.

12:12.000 --> 12:15.000
But you can see here is the ESP32 chip.

12:15.000 --> 12:18.000
This is the Metro board.

12:18.000 --> 12:25.000
So let's plug this in without destroying it.

12:25.000 --> 12:29.000
This is like where I'm sawing the lady in half.

12:29.000 --> 12:30.000
Okay.

12:30.000 --> 12:32.000
So far it's plugged in.

12:32.000 --> 12:33.000
It didn't do anything.

12:33.000 --> 12:35.000
It's because we haven't flashed it yet.

12:35.000 --> 12:36.000
All right.

12:36.000 --> 12:37.000
So let's take a quick look at some of the code.

12:37.000 --> 12:40.000
We don't have time to look at all of it because there's quite a bit.

12:40.000 --> 12:45.000
But you can see we're bringing in the game package, which is part of the VDAP package.

12:45.000 --> 12:50.000
We've got our multiverse, which is a slice of parallel universes.

12:50.000 --> 12:52.000
We've got our colors defined.

12:52.000 --> 12:57.000
And then I've got two Go variables, one for the LED color,

12:57.000 --> 13:00.000
and one to track the number of frames per second.

13:00.000 --> 13:01.000
You'll see why we need those in a minute.

13:01.000 --> 13:04.000
So our main program, we initialize Bluetooth again,

13:04.000 --> 13:05.000
same as what we did before.

13:05.000 --> 13:07.000
We enable the adapter.

13:07.000 --> 13:10.000
We create our multiverse, which is out of these six universes.

13:10.000 --> 13:11.000
We connect them up.

13:11.000 --> 13:14.000
We set the first color for the cube.

13:14.000 --> 13:18.000
And then as quickly as we can, we draw the cube.

13:18.000 --> 13:19.000
We display it.

13:19.000 --> 13:23.000
We execute the universes against each other using a weight group.

13:23.000 --> 13:26.000
And then once per second, we display the stats.

13:26.000 --> 13:29.000
And then once per minute, we change the color.

13:29.000 --> 13:30.000
All right.

13:30.000 --> 13:34.000
So let's just take a very quick look at the Bluetooth side of this code,

13:34.000 --> 13:39.000
since that's what, in fact, this talk is about.

13:39.000 --> 13:43.000
So we can see here, it's basically the same as what we saw before.

13:43.000 --> 13:47.000
We have the default adapter, which is the built-in Bluetooth adapter on the board.

13:47.000 --> 13:50.000
And we have a couple of services and characteristics,

13:50.000 --> 13:52.000
which are custom ones I defined.

13:52.000 --> 13:54.000
These are not well known ones, like your heart rate.

13:54.000 --> 13:57.000
This is the Conway Game of Life cube service and characteristic.

13:57.000 --> 14:00.000
So we'll try and establish it as a standard later.

14:00.000 --> 14:02.000
So we initialize our Bluetooth.

14:02.000 --> 14:03.000
We set our connection handler.

14:03.000 --> 14:05.000
So when we connect, we're going to do something.

14:05.000 --> 14:07.000
We enable our stack.

14:07.000 --> 14:09.000
Then this is, remember, this is the advertising side.

14:09.000 --> 14:11.000
It's saying, what can I do?

14:11.000 --> 14:14.000
It's going to say, my name is the tiny go life cube.

14:14.000 --> 14:16.000
I'm going to start advertising.

14:16.000 --> 14:25.000
And my characteristic for the color here, we can see that it's got a unique identifier to say, yes, I am that color.

14:25.000 --> 14:28.000
The value, remember that LED variable?

14:28.000 --> 14:30.000
You'll see why we're going to use that in a minute.

14:30.000 --> 14:35.000
Our flags, which say we can read, write, and that's about it.

14:35.000 --> 14:42.000
And then when we write to it, we're going to change the color to the ones that were sent to it from the other side,

14:42.000 --> 14:46.000
the mobile phone in this case, and then reset the cube.

14:46.000 --> 14:52.000
And then once per minute, if you recall, we're going to, sorry, once per second,

14:52.000 --> 14:55.000
we're going to sand the number of frames per second.

14:55.000 --> 14:58.000
That way we can see how well is this thing rendering.

14:58.000 --> 14:59.000
All right.

14:59.000 --> 15:01.000
Let's flash some code.

15:01.000 --> 15:03.000
See what happens.

15:05.000 --> 15:10.000
Let's see, make cube life.

15:10.000 --> 15:14.000
So now it's flashing it, and I'm connected to the monitor,

15:14.000 --> 15:19.000
so it should show me once it reboots that, in fact,

15:19.000 --> 15:23.000
it is working on how many frames per second it's able to read.

15:27.000 --> 15:32.000
All right, let's turn on the cameras so you can actually see how cool that looks.

15:32.000 --> 15:37.000
So this is Conway's Game of Life, and each one of these panels is a separate universe,

15:37.000 --> 15:42.000
and they're using these gull routines and weight groups in order to communicate with each other.

15:42.000 --> 15:50.000
I have to be very gentle because it's been through hard journeys this cube.

15:50.000 --> 15:53.000
Somebody say Borg, go ahead, I dare you.

15:53.000 --> 15:55.000
All right.

16:00.000 --> 16:09.000
So now I'm going to use my phone, which I might be able to show at the same time.

16:09.000 --> 16:18.000
If the gods are kind, which generally they are not, but when they are, when they are, let's see.

16:20.000 --> 16:22.000
I forgot to change.

16:22.000 --> 16:24.000
Let's see.

16:24.000 --> 16:30.000
This is in 2024, and that would be make show phone.

16:33.000 --> 16:35.000
I've got a loose cable in there.

16:36.000 --> 16:41.000
Well, when in doubt, reboot the cube.

16:41.000 --> 16:47.000
All right, so when I say show phone, oh, I forgot to plug in the phone.

16:47.000 --> 16:49.000
Let's plug in.

16:49.000 --> 16:52.000
Again, you said without wires.

16:54.000 --> 16:57.000
Okay, it should be good.

16:57.000 --> 17:00.000
I tried to get this to work without wires, but it wouldn't.

17:00.000 --> 17:02.000
All right, so there's my phone.

17:03.000 --> 17:05.000
And let's see, where's the cube?

17:06.000 --> 17:08.000
Cube didn't move.

17:16.000 --> 17:19.000
I think I really do have a short in there.

17:19.000 --> 17:22.000
I shouldn't have moved it quite so roughly.

17:22.000 --> 17:24.000
Let's just flash it again real quick.

17:25.000 --> 17:28.000
Just because, you know, that always works.

17:33.000 --> 17:39.000
So you'll notice that we do not optimize for compilation time.

17:39.000 --> 17:41.000
I have a very loose cable in there.

17:43.000 --> 17:46.000
Let's just pull some stuff out and it'll be fine.

17:53.000 --> 17:55.000
You saw love coding before.

17:55.000 --> 17:57.000
Have you ever seen live connecting of wires?

17:57.000 --> 17:59.000
It's even more stressful.

17:59.000 --> 18:02.000
Well, let's just change the color anyway, because, you know.

18:05.000 --> 18:11.000
Is this a time to remind you that the emergency exits are located in front and in back of the room?

18:11.000 --> 18:14.000
Please locate your nearest exit.

18:15.000 --> 18:17.000
Well, there are a lot of Bluetooth devices in here.

18:17.000 --> 18:19.000
Let's see if we can find this one.

18:24.000 --> 18:26.000
Somewhere, somehow.

18:26.000 --> 18:28.000
Is there a search function?

18:28.000 --> 18:30.000
You know, there probably is.

18:30.000 --> 18:32.000
I just don't know how to use it.

18:32.000 --> 18:34.000
I don't know how to use a mobile phone.

18:34.000 --> 18:36.000
I just saw my watch.

18:36.000 --> 18:38.000
There it is, the tiny go life cube.

18:38.000 --> 18:40.000
All right, so let's connect to it.

18:40.000 --> 18:42.000
We'll see if it'll actually connect.

18:42.000 --> 18:44.000
Sorry about that loose cable.

18:44.000 --> 18:46.000
It makes it look really neat though.

18:46.000 --> 18:49.000
We need to combine this with the MIDI demo.

18:49.000 --> 18:51.000
Then we're getting into something.

18:52.000 --> 18:56.000
Okay, it's thinking because it has to render all the frames at the same time

18:56.000 --> 18:59.000
and it also has to communicate, so that's kind of pushing it.

19:01.000 --> 19:03.000
Plus, there's a lot of wires between me and the antenna now.

19:03.000 --> 19:06.000
I'm probably just left it out.

19:06.000 --> 19:08.000
Oh, there it is.

19:08.000 --> 19:14.000
All right, so let's go and we can see the current color is supposed to be red.

19:14.000 --> 19:18.000
And let's turn on our notifications and we can see right now it is rendering at

19:19.000 --> 19:26.000
6.4 hex frames per second and it's able to play 0 C hex games per second.

19:26.000 --> 19:29.000
And you see those numbers changing, it's pretty real.

19:29.000 --> 19:34.000
Let's go and change the color, which let's go and make it like a really psychedelic color.

19:34.000 --> 19:37.000
224488.

19:39.000 --> 19:42.000
Yeah, I'm feeling that, you know.

19:42.000 --> 19:44.000
All right.

19:48.000 --> 19:50.000
Why?

19:56.000 --> 19:58.000
Is this actually correct?

19:58.000 --> 20:00.000
It's fine. Yes.

20:00.000 --> 20:02.000
Really? Yes.

20:02.000 --> 20:06.000
Well, then I got cheated in the beginning.

20:06.000 --> 20:08.000
I cheated myself.

20:08.000 --> 20:12.000
All right, so let's take a quick look here at,

20:12.000 --> 20:15.000
I guess we'll make our last demo.

20:18.000 --> 20:20.000
So I was going to show you,

20:20.000 --> 20:23.000
well, maybe I can probably pull it off.

20:23.000 --> 20:26.000
I want to show you flying the drone with my badge.

20:26.000 --> 20:28.000
So I've got two different drones.

20:28.000 --> 20:32.000
One is a Bluetooth drone, so we're going to talk from the badge to the Bluetooth drone.

20:32.000 --> 20:34.000
And let's take a quick look at the cut.

20:34.000 --> 20:36.000
You've seen the hardware, it's that same badge.

20:36.000 --> 20:38.000
Like it's literally the same badge.

20:38.000 --> 20:43.000
So what we're going to do here is we're going to connect to the drone, right?

20:43.000 --> 20:47.000
We're scanning for it, we find it, and then we start sending it commands,

20:47.000 --> 20:51.000
which will basically go forward and backward based on how I press the game pad keys.

20:53.000 --> 20:56.000
All right, so let's go back to the beginning.

20:56.000 --> 21:01.000
So if we make mini drone, also let's try,

21:01.000 --> 21:03.000
let's not try that.

21:03.000 --> 21:05.000
All right, I have the badge.

21:05.000 --> 21:07.000
The badge is plugged in.

21:07.000 --> 21:09.000
I can flash it.

21:09.000 --> 21:11.000
No, I cannot.

21:11.000 --> 21:13.000
Oh, I'm sorry.

21:17.000 --> 21:24.000
There we go.

21:24.000 --> 21:26.000
Yeah, that's it.

21:26.000 --> 21:29.000
All right, no, not cube life, sorry.

21:29.000 --> 21:32.000
Make mini drone.

21:32.000 --> 21:34.000
Go mini drone, go!

21:34.000 --> 21:36.000
Now we have to actually turn on the drone.

21:36.000 --> 21:41.000
No, I connected a little camera to it,

21:41.000 --> 21:46.000
which I'm not sure if we, no, we can actually do it.

21:46.000 --> 21:48.000
We can maybe pull it off.

21:48.000 --> 21:55.000
So it's a little first person video camera that actually is analog connected to this toy parrot drone,

21:55.000 --> 21:59.000
because they won't let me have real drones anymore after that last time.

21:59.000 --> 22:04.000
That was not my fault.

22:04.000 --> 22:06.000
I mean, I don't think it was.

22:06.000 --> 22:07.000
Honestly, I'm not sure.

22:07.000 --> 22:10.000
It might have been my fault.

22:10.000 --> 22:13.000
Okay, so let's stop this video.

22:13.000 --> 22:15.000
All right, and let's plug in.

22:15.000 --> 22:16.000
Where's my camera?

22:16.000 --> 22:17.000
There's that camera.

22:17.000 --> 22:22.000
Let's plug in the drone video just because, I mean, hell, what could go wrong?

22:22.000 --> 22:25.000
Drones with cameras.

22:25.000 --> 22:28.000
All right, yeah, and that's you.

22:28.000 --> 22:36.000
All right, so now let's go and flash, did I flash the, yes, I flashed the badge.

22:36.000 --> 22:38.000
It looks like.

22:38.000 --> 22:41.000
Let's restart it.

22:41.000 --> 22:44.000
I guess we'll find out if we're going to have connectivity.

22:44.000 --> 22:48.000
It says flight badge on there in cool ASCII font.

22:48.000 --> 22:51.000
Wow, there really are a lot of devices.

22:51.000 --> 22:59.000
It's still thinking.

22:59.000 --> 23:01.000
That really is a lot of devices.

23:01.000 --> 23:04.000
Geez.

23:04.000 --> 23:08.000
Hmm.

23:08.000 --> 23:17.000
Well, when in doubt reboot because maybe it'll come up earlier in the list.

23:17.000 --> 23:20.000
Enabling Bluetooth adapter scanning.

23:20.000 --> 23:25.000
Searching for, oh, so many devices.

23:25.000 --> 23:31.000
Wow, I really, I mean, there are really a lot of devices.

23:31.000 --> 23:42.000
I didn't, I actually did not think about how many devices would be in that scan list.

23:42.000 --> 23:47.000
Got that proper analog flicker, though, doesn't it?

23:47.000 --> 23:49.000
Hmm.

23:49.000 --> 23:59.000
One last try to reboot the badge and then I'll fly the other drone because that's Wi-Fi and that will for sure work better, right?

23:59.000 --> 24:01.000
Oh, wait, I think it found it.

24:01.000 --> 24:03.000
No, wait, no.

24:03.000 --> 24:07.000
Oh my God, it's just like, there must be like 100 Bluetooth devices in here.

24:07.000 --> 24:10.000
I guess we found out that it doesn't fail.

24:10.000 --> 24:14.000
It just doesn't work.

24:14.000 --> 24:23.000
Well, let's try the other drone then real fast because, you know, we don't have a lot of time here.

24:23.000 --> 24:26.000
So I'll unplug the adapter.

24:26.000 --> 24:32.000
Let's plug in this one.

24:32.000 --> 24:39.000
Put the original camera back.

24:39.000 --> 24:41.000
That was going to be so fun, too.

24:41.000 --> 24:43.000
Well, this is actually going to be pretty fun as well.

24:43.000 --> 24:46.000
All right, so this is the Tello drone.

24:46.000 --> 24:50.000
Tello is a drone from DJI, which is one of their toy drones.

24:50.000 --> 24:54.000
Again, I told you they won't let me have real stuff anymore.

24:54.000 --> 25:02.000
I do have a small unmanned aerial systems license from the FAA, which means I'm supposed to know better.

25:02.000 --> 25:06.000
That obviously is not true.

25:06.000 --> 25:09.000
All right, and so let's see.

25:09.000 --> 25:16.000
I'm going to, this is the same code, but instead of using Bluetooth, it's using a Wi-Fi interface using our new net package,

25:16.000 --> 25:21.000
which gives us much more compatible networking support in tiny go.

25:21.000 --> 25:25.000
So this regular garden variety go code that uses networking will probably work now.

25:25.000 --> 25:29.000
Let's see if that's actually true.

25:29.000 --> 25:36.000
So we'll flash the Tello.

25:36.000 --> 25:45.000
Well, now it's working because it will flash.

25:45.000 --> 25:49.000
You get to see my cool ASCII art.

25:49.000 --> 25:53.000
Okay, now it's scanning for the drone, which, where do I have it?

25:53.000 --> 25:56.000
Oh, right here.

25:56.000 --> 25:57.000
Oh, it started.

25:57.000 --> 25:58.000
Drone started.

25:58.000 --> 26:00.000
Okay, it's ready.

26:00.000 --> 26:03.000
All right, so let's see here.

26:03.000 --> 26:05.000
What should happen?

26:05.000 --> 26:12.000
Oh, yeah, so this drone is a lot more advanced.

26:12.000 --> 26:16.000
And yeah, I can fly the round with my badge.

26:16.000 --> 26:18.000
Look, Ma.

26:18.000 --> 26:19.000
Wait.

26:19.000 --> 26:21.000
Oh, man.

26:21.000 --> 26:29.000
If I plug in the battery while it's flying, what will happen?

26:29.000 --> 26:31.000
The batteries plugged in.

26:31.000 --> 26:34.000
Let's unplug the power.

26:34.000 --> 26:36.000
Can I still fly it?

26:36.000 --> 26:37.000
Yes.

26:37.000 --> 26:43.000
No wires.

26:43.000 --> 26:45.000
So this is pretty real.

26:45.000 --> 26:47.000
Now this drone does some neat stuff.

26:47.000 --> 26:48.000
It's got tricks.

26:48.000 --> 26:54.000
Like it can do flips.

26:54.000 --> 27:01.000
They told me I should never do what I'm about to do ever again.

27:01.000 --> 27:11.000
I clearly did not understand the simple instructions.

27:11.000 --> 27:13.000
There actually is a dance function.

27:13.000 --> 27:14.000
I just didn't get it to work.

27:14.000 --> 27:15.000
But you know what?

27:15.000 --> 27:24.000
I feel like I've really pushed my limits of what's safe by a pretty...

27:24.000 --> 27:25.000
Come on, little drone.

27:25.000 --> 27:27.000
It's okay.

27:27.000 --> 27:37.000
Thank you, Ron.

27:37.000 --> 27:42.000
If it takes off by itself, I swear that's not my code.

27:42.000 --> 27:43.000
All right.

27:43.000 --> 27:44.000
Wow.

27:44.000 --> 27:45.000
Well, I went a little over.

27:45.000 --> 27:46.000
All right.

27:46.000 --> 27:48.000
Sorry about that.

27:48.000 --> 27:50.000
But it was really fun.

27:50.000 --> 27:51.000
You know, we did Wi-Fi.

27:51.000 --> 27:53.000
We have a major rewrite.

27:53.000 --> 27:54.000
I told you all that.

27:54.000 --> 27:55.000
More flight testing.

27:55.000 --> 27:57.000
We just did that.

27:57.000 --> 28:00.000
So there's so much more happening.

28:00.000 --> 28:03.000
TinyGo has over 14,000 stars on GitHub now,

28:03.000 --> 28:05.000
and we're doing 150 contributors,

28:05.000 --> 28:07.000
over 100 different boards supported,

28:07.000 --> 28:10.000
over 100 different sensors, displays,

28:10.000 --> 28:14.000
and other peripherals supported, Bluetooth, Wi-Fi, LoRa.

28:14.000 --> 28:16.000
There is so much happening.

28:16.000 --> 28:19.000
More wireless chips, more wireless protocols.

28:19.000 --> 28:23.000
So connect all the things using Go without wires.

28:23.000 --> 28:24.000
That's all we want.

28:24.000 --> 28:26.000
Thank you, Ron.

28:26.000 --> 28:28.000
Thank you.

