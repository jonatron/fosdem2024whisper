WEBVTT

00:00.000 --> 00:05.000
Hey everyone.

00:05.000 --> 00:08.000
Everyone's ready for some,

00:08.000 --> 00:11.000
learning about some sustainable open source development.

00:11.000 --> 00:13.000
What?

00:13.000 --> 00:15.000
What?

00:15.000 --> 00:17.000
Okay, cool.

00:17.000 --> 00:21.000
Hey, so I'm going to be talking today about human essentials,

00:21.000 --> 00:24.000
and that's how you can find it on GitHub.

00:24.000 --> 00:27.000
A little bit about some of the best practices we've done,

00:27.000 --> 00:30.000
hopefully have a little bit of a discussion at the end.

00:30.000 --> 00:32.000
I tried to save a little time in the talk.

00:32.000 --> 00:35.000
So hi, I'm Sean Marcia.

00:35.000 --> 00:37.000
I'm a software engineer on GitHub's social impact team.

00:37.000 --> 00:40.000
I'm also part of Ruby for Good.

00:40.000 --> 00:43.000
I love baking. I'm a Zimergist.

00:43.000 --> 00:45.000
I'll let you Google that.

00:45.000 --> 00:47.000
And I'm from the Washington DC area,

00:47.000 --> 00:49.000
so if any of you are planning on coming to Washington DC,

00:49.000 --> 00:51.000
or you're from there, reach out.

00:51.000 --> 00:53.000
I'd love to take you out for a coffee or tea,

00:53.000 --> 00:56.000
or whatever your beverage of choice is.

00:56.000 --> 00:58.000
I guess everyone found out I was speaking,

00:58.000 --> 01:00.000
because they're all rushing in.

01:00.000 --> 01:05.000
And I'm going to be talking about the Human Essentials app.

01:05.000 --> 01:08.000
It's a couple of fun things.

01:08.000 --> 01:10.000
We are a digital public good.

01:10.000 --> 01:12.000
Got our certification last year.

01:12.000 --> 01:18.000
We won the 2022 Pizzagatti prize from N10.

01:18.000 --> 01:21.000
And so audience participation.

01:21.000 --> 01:27.000
Who's familiar with the concept of an Essentials bank?

01:27.000 --> 01:30.000
Okay, there's one person.

01:30.000 --> 01:32.000
A co-worker of mine.

01:32.000 --> 01:36.000
So Essentials banks, well, that's actually not why she's familiar,

01:36.000 --> 01:39.000
but Essentials banks are things like diaper banks,

01:39.000 --> 01:43.000
peer supply banks, adult and continence banks.

01:43.000 --> 01:46.000
They operate on the same concept of like a food bank,

01:46.000 --> 01:48.000
where they don't give food directly to the public.

01:48.000 --> 01:50.000
They give it to organizations.

01:50.000 --> 01:52.000
They give it to the public.

01:52.000 --> 01:54.000
So like a diaper bank collects diapers and things like that,

01:54.000 --> 01:58.000
and gives it to like homeless shelters, women's shelters,

01:58.000 --> 02:00.000
like high school programs, things like that,

02:00.000 --> 02:04.000
that are distributing directly to the public.

02:04.000 --> 02:10.000
And these are the organizations that Human Essentials software serves.

02:10.000 --> 02:14.000
And just a couple of quick facts about diaper banks in the U.S.

02:14.000 --> 02:19.000
is just last year, 40% of the families in the United States

02:19.000 --> 02:23.000
relied on or had diaper need.

02:23.000 --> 02:26.000
And like the last time they did the survey was in 2010,

02:26.000 --> 02:28.000
and it was 33% of the families.

02:28.000 --> 02:31.000
So things are maybe getting a little bit worse.

02:31.000 --> 02:34.000
And of those families suffering from diaper need,

02:34.000 --> 02:37.000
25% of them had to miss work because of that.

02:37.000 --> 02:41.000
And the reason why they miss work is you can't put your kid into daycare

02:41.000 --> 02:43.000
unless you have diapers for the kid.

02:43.000 --> 02:45.000
And if you don't have diapers, you can't put them in daycare.

02:45.000 --> 02:47.000
Well, then you can't go to work, and then you don't have money,

02:47.000 --> 02:50.000
and you have less money, and it's this vicious, you know,

02:50.000 --> 02:51.000
negative feedback loop.

02:51.000 --> 02:54.000
And the same thing too, like 28% of these families

02:54.000 --> 02:57.000
often had to choose between buying food for their kids or diapers.

02:57.000 --> 03:03.000
And just, it's not a good situation for families in this situation.

03:03.000 --> 03:06.000
And so like our software, some facts about it.

03:06.000 --> 03:10.000
Now we have over 240 banks across the United States,

03:10.000 --> 03:13.000
and some in Canada now registered using it.

03:13.000 --> 03:15.000
And like I said, they're on the partner system,

03:15.000 --> 03:17.000
and so we have about 5,000 community partners.

03:17.000 --> 03:22.000
Our project started in 2015, and it's now helping over 3 million kids a year

03:22.000 --> 03:27.000
and over 500,000 period supply recipients.

03:27.000 --> 03:31.000
We've had over 300 contributors on GitHub, which is pretty cool.

03:31.000 --> 03:34.000
We're endorsed by the National Diper Bank Network

03:34.000 --> 03:35.000
and the Alliance for Period Supplies.

03:35.000 --> 03:38.000
These are the two big national networks in the United States.

03:38.000 --> 03:42.000
We're digital public good, like I said, which we're super stoked about.

03:42.000 --> 03:44.000
And we're 100% volunteer driven.

03:44.000 --> 03:47.000
Like we've never had a paid person, and we don't charge anything

03:47.000 --> 03:51.000
to all the diaper banks and peer supply banks using the software.

03:51.000 --> 03:54.000
So yeah, like are we a unicorn?

03:54.000 --> 03:55.000
Like how did we do this?

03:55.000 --> 03:57.000
Like how did we get here?

03:57.000 --> 04:02.000
And so kind of first of like background before we kind of get into that,

04:02.000 --> 04:07.000
some background information, basic kind of things,

04:07.000 --> 04:11.000
is like we have like a team etiquette, which really is three things.

04:11.000 --> 04:17.000
It's to be patient with people, be helpful, and be kind.

04:17.000 --> 04:22.000
Like we really believe that it's much better to be kind than to be right.

04:22.000 --> 04:25.000
And so, you know, like kindness really matters,

04:25.000 --> 04:31.000
and like that is our ethos with our teams and our contributors,

04:31.000 --> 04:36.000
which I think, you know, is why we have so many people.

04:36.000 --> 04:41.000
And also like just kind of like some basic like stats to like, you know,

04:41.000 --> 04:44.000
we have a readme and GitHub, we, you know, we have a contributing guy,

04:44.000 --> 04:49.000
like all the little things to make it easy for someone to come to the project

04:49.000 --> 04:51.000
and just get started.

04:51.000 --> 04:54.000
And importantly, we have a code of conduct.

04:54.000 --> 04:57.000
Just like, you know, they said there's a FOSDEM code of conduct.

04:57.000 --> 05:01.000
A lot of people don't realize that if a project doesn't have a code of conduct,

05:01.000 --> 05:07.000
some companies are actually prohibit their employees from contributing to those projects.

05:07.000 --> 05:10.000
So if you have one of these projects, make sure you have a code of conduct.

05:10.000 --> 05:14.000
And it's the right thing to do.

05:14.000 --> 05:17.000
And, you know, I think we highlight this in our contributing guide.

05:17.000 --> 05:20.000
Like, you know, we start off like, hey, code of conduct is important,

05:20.000 --> 05:23.000
but then like you see this like, like, hey, if you're unsure of anything,

05:23.000 --> 05:26.000
just submit a pull request or an issue and just ask.

05:26.000 --> 05:27.000
No one's going to yell at you.

05:27.000 --> 05:30.000
We're not one of those evil open source projects.

05:30.000 --> 05:34.000
Because, you know, open source can be intimidating for people for the first time.

05:34.000 --> 05:37.000
And so, you know, we just say, hey, give it your best effort,

05:37.000 --> 05:42.000
and we're going to make this a welcoming place for you.

05:42.000 --> 05:45.000
And GitHub also makes this really easy for projects.

05:45.000 --> 05:49.000
Like, if you've ever been on the Insights tab and the community standards,

05:49.000 --> 05:51.000
like it lets you know if you have all these things.

05:51.000 --> 05:55.000
And if you've never been in the Insights tab, like I'd say, go check it out today,

05:55.000 --> 05:59.000
especially if you're data driven, because there's a lot of really good information

05:59.000 --> 06:02.000
just about like the cadence of your project and just what's happening.

06:02.000 --> 06:08.000
And it'll really, yeah, give you some insights that you may not be aware of.

06:08.000 --> 06:14.000
And like another kind of background thing is, it's important to know who is contributing

06:14.000 --> 06:16.000
to your project and why they're contributing.

06:16.000 --> 06:19.000
And, you know, like we've had over 300 contributors to our project,

06:19.000 --> 06:23.000
and like, we've tried to talk to them and understand why they come and contribute.

06:23.000 --> 06:25.000
And we've found that it's really for four reasons.

06:25.000 --> 06:30.000
Like, the first reason is, is like they want real world experience working in software.

06:30.000 --> 06:32.000
You know, like they can build to do apps or they can build things,

06:32.000 --> 06:36.000
but like there's no replacement for, you know, like your resume

06:36.000 --> 06:39.000
or if you want to show, like highlight work, then a real project.

06:39.000 --> 06:43.000
You know, because maybe they're coming from like C++ or Rust or some other language

06:43.000 --> 06:46.000
and they want real world, you know, Ruby on Rails experience.

06:46.000 --> 06:48.000
And so like this gives it to them.

06:48.000 --> 06:51.000
Some people are here because, you know, just like everyone at Fosdm,

06:51.000 --> 06:54.000
they believe in open source software and they want to contribute to open source software.

06:54.000 --> 06:58.000
Some people are here because they believe in the mission

06:58.000 --> 07:02.000
and like, like perhaps they, they benefited from a diaper bank at some point

07:02.000 --> 07:07.000
or they have a family that has or a friend and they want to contribute for that reason.

07:07.000 --> 07:10.000
And the final reason is people just want to be part of a community.

07:10.000 --> 07:13.000
Like they want a group of friends because, you know, we are all friends

07:13.000 --> 07:15.000
on the kind of the maintainer team.

07:15.000 --> 07:18.000
We get together on regular cadence, we chat and zoom.

07:18.000 --> 07:21.000
And so, you know, they want to be friends with like-minded people.

07:21.000 --> 07:25.000
And I think these are the best people around.

07:25.000 --> 07:32.000
And on the other side of that is like, what's important for a maintainer of a project like this?

07:32.000 --> 07:37.000
And like for us, a maintainer is someone who doesn't write code.

07:37.000 --> 07:41.000
A maintainer is someone who makes it easy for other people to contribute

07:41.000 --> 07:46.000
and to write code and to, you know, write assets and to manage a project.

07:46.000 --> 07:51.000
Like our general belief is a maintainer should be writing code 10 to 20% of the time

07:51.000 --> 07:56.000
and the other 80 to 90% of the time they should be facilitating everyone else being successful.

07:56.000 --> 08:01.000
Because, you know, rather than just being one person, they can be a force multiplier for a lot of people.

08:07.000 --> 08:11.000
And then the last kind of bit of background information is, you know,

08:11.000 --> 08:14.000
it's important to understand the type of project it is too.

08:14.000 --> 08:18.000
Like this is a, like human essentials is a SAS. It's not a library.

08:18.000 --> 08:22.000
Like when you're maintaining a library, there's a lot of things to think about like

08:22.000 --> 08:27.000
backward compatibility and like does it run in all the different versions of the language,

08:27.000 --> 08:30.000
all the different frameworks. But we're a SAS.

08:30.000 --> 08:34.000
Like the number one thing we have to be concerned about is user data.

08:34.000 --> 08:37.000
Because, you know, we're dealing with such like vulnerable populations.

08:37.000 --> 08:43.000
So we have to keep that data safe. And so that guides all of our decisions.

08:45.000 --> 08:49.000
Okay. Now that we've got the background of the way, like what works?

08:49.000 --> 08:53.000
And again, this is what works for us. And so your mileage may vary.

08:56.000 --> 09:00.000
So the biggest thing that I think that works for us is the human impact.

09:00.000 --> 09:04.000
Like there are a lot of amazing open source projects out there,

09:04.000 --> 09:08.000
like talking to a bunch of them just in the hall before I came in here earlier.

09:08.000 --> 09:12.000
Like there's a lot. But these type of projects, like, you know,

09:12.000 --> 09:18.000
these digital public goods, like we have something that all these other open source projects don't have.

09:18.000 --> 09:23.000
Is we have like the human angle, the human impact that no one else can,

09:23.000 --> 09:28.000
like those other projects can't in my opinion, compete with.

09:28.000 --> 09:31.000
So we take advantage of that. Like when we're writing our issues.

09:31.000 --> 09:36.000
You know, we could write an issue that says, hey, when we click this button, it sends an email.

09:36.000 --> 09:40.000
Which is, you know, is accurate. But, you know, like we'll always tie our issues.

09:40.000 --> 09:44.000
Or we try to always tie our issues back to the human impact.

09:44.000 --> 09:47.000
So contributors know who they're helping and how they're helping.

09:47.000 --> 09:54.000
So, you know, when we click this button, it sends an email to remind a family to come, you know, pick up their diaper supplies.

09:54.000 --> 09:59.000
You know, so, you know, so they're able to get to work that week or be able to work that week.

09:59.000 --> 10:06.000
Maybe that's a little contrived. But we're always trying to write, like highlight the human benefit.

10:06.000 --> 10:13.000
And the other side of that is, you know, we try and facilitate as much stakeholder interaction as we can.

10:13.000 --> 10:18.000
So we have regular meetings with different diaper banks, period supply banks.

10:18.000 --> 10:27.000
So contributors, you know, can meet, can talk to, and really understand, like, this code they're writing and contributing to,

10:27.000 --> 10:29.000
who it's helping and how it's helping them.

10:29.000 --> 10:35.000
Because, like I said, like there's no substitute for actually hearing from the people you're helping, how you're making their lives better.

10:36.000 --> 10:47.000
Consistency, like, again, like being consistent has really helped us maintain our contributors.

10:47.000 --> 10:53.000
Like we have, you know, we have a public calendar. We list all of our meetings on there.

10:53.000 --> 10:57.000
We have regular check-ins with our stakeholders. We have regular office hours.

10:57.000 --> 11:00.000
We do deploy same time every week.

11:00.000 --> 11:05.000
Like, even if we don't have a deploy, we send emails out, like letting people know why.

11:05.000 --> 11:08.000
Maybe it was Christmas or maybe we're in the middle of something large.

11:08.000 --> 11:13.000
But, like, always regular communication, both the stakeholders with contributors.

11:17.000 --> 11:21.000
Another thing we benefit from is being part of Ruby for Good.

11:21.000 --> 11:26.000
And Ruby for Good is a nonprofit that builds software for other nonprofits.

11:26.000 --> 11:34.000
Like, maybe Code for America or Code for France, or like these organizations that run several software projects.

11:34.000 --> 11:41.000
And they have a couple big events each year where they get a lot of, think of them as code retreats for nerds,

11:41.000 --> 11:44.000
where they get a bunch of nerds together at a site.

11:44.000 --> 11:46.000
It's kind of like all-inclusive.

11:46.000 --> 11:50.000
So, like, they do coding during the day, and then at the night they do a lot of community building,

11:50.000 --> 11:56.000
like playing board games, seeing karaoke, sitting around a campfire, making s'mores.

11:56.000 --> 12:02.000
But so, there's a lot of community building around the teams, as well as doing good.

12:02.000 --> 12:06.000
And it's also a great time for the teams to do a lot of, like, in-person, like, road map,

12:06.000 --> 12:11.000
and just, like, the deep work needed for these projects.

12:13.000 --> 12:17.000
And as well as, like, the Ruby for Good kind of events or conferences,

12:17.000 --> 12:22.000
we submit the Human Essentials Project to a lot of Ruby and Rails conferences,

12:22.000 --> 12:24.000
because, like, it's a Ruby and Rails project.

12:24.000 --> 12:31.000
So, like, RailsConf, RubyConf, RailsWorld, we'll submit it as a workshop event where we will create 20 or 30,

12:31.000 --> 12:38.000
like, really small issues for people to contribute to, and run the workshop for people to contribute,

12:38.000 --> 12:40.000
make their first open-source contribution.

12:40.000 --> 12:44.000
And so, they will come out, we will facilitate them, like, writing code,

12:44.000 --> 12:49.000
making an open-source contribution to Human Essentials.

12:49.000 --> 12:53.000
And generally, we start these with also with bringing, like, someone from a diaper bank out

12:53.000 --> 12:59.000
or peer supply bank, and giving them, like, a five or 10-minute, like, just a little talk on Human Essentials,

12:59.000 --> 13:01.000
on, like, diaper banks and what they do.

13:01.000 --> 13:04.000
And again, like, to tie these people, like, to the work they're doing,

13:04.000 --> 13:07.000
and, again, putting a human face, like, hey, like, I'm going to write this code today,

13:07.000 --> 13:13.000
and it's going to help this person, which, again, like, I think is a really special thing about,

13:13.000 --> 13:16.000
um, what we're doing.

13:16.000 --> 13:19.000
Uh, Slack, we're heavy users of Slack.

13:19.000 --> 13:22.000
Like, we, uh, we're part of the Ruby for Good Slack, which is really nice,

13:22.000 --> 13:24.000
because there's all these projects in there.

13:24.000 --> 13:27.000
And so, if we're ever stuck on something, we can put out, like, a call for help,

13:27.000 --> 13:34.000
hey, we need, we need advice on this, and people from other teams will come and, you know, help us.

13:34.000 --> 13:39.000
Um, but we have a public channel, we have, like, a bot channel that talks,

13:39.000 --> 13:44.000
the bot channel is really spammy, but it's talking about the pull requests and issues and everything coming up.

13:44.000 --> 13:46.000
We have a lead channel.

13:46.000 --> 13:51.000
Uh, the other thing we did is we set up a Slack, a separate Slack instance for the banks and their partners,

13:51.000 --> 13:57.000
which, which actually turned out to be a really good idea, because, like, now that there's so many of them,

13:57.000 --> 14:02.000
uh, like, initially it was just kind of a, like, in their minds a place to come and get tech support,

14:02.000 --> 14:05.000
but, but now it's kind of turned into, like, a community for them,

14:05.000 --> 14:10.000
and it's actually, we're, we're now, like, kind of flies on the wall in there, like, listening to them, talk to each other,

14:10.000 --> 14:16.000
and, and more interestingly, like, we hear how they're using the software, because it's not always how we built it,

14:16.000 --> 14:22.000
or we intended it to be used, and so, but, like, this lets us help them, uh, you know, in a way we weren't intending,

14:22.000 --> 14:28.000
because, like, oh, this is how they're actually using it, so, you know, so we can make, you know, this, this, and this better for them.

14:29.000 --> 14:37.000
Uh, you know, we're big fans of continuous integration, uh, every, every bit of code that gets submitted gets run through,

14:37.000 --> 14:44.000
like, a battery of tests, and linting, and, you know, um, breakman, like, security vulnerability checks, all, all that kind of thing,

14:44.000 --> 14:49.000
because, again, like, we don't want to protect the data, we want to make sure nothing bad is coming in.

14:49.000 --> 14:56.000
Uh, in, in fact, we use GitHub pretty much extensively for all of the, uh, parts of the project,

14:56.000 --> 15:03.000
uh, like, dependabot for keeping all our dependencies up to date, and security, uh, continuous integration, like I said,

15:03.000 --> 15:09.000
uh, project management, like all the, like, we're not using Jira or anything like that, uh, workflows, talk about workflows in a second,

15:09.000 --> 15:16.000
love workflows, uh, you know, Wiki for information, pull request templates, issue templates, like, all the things in one place,

15:16.000 --> 15:25.000
it's just been really nice for us, and workflows, like, workflows have turned out to be my, my favorite part of, like, the GitHub experience,

15:25.000 --> 15:34.000
because, like, for us, it really allows us to, uh, like, offload a lot of the emotional labor, uh, of this, and, like, there's a lot of,

15:34.000 --> 15:43.000
I see nodding heads, like, there's a lot of emotional labor to, to, uh, maintaining, like, a, a project, like, you know, someone claims an issue,

15:43.000 --> 15:49.000
and then are they still working on it, and then you have to, like, pester them, hey, are you still doing this, and, and, that, that's hard,

15:49.000 --> 15:56.000
and, and, like, it's hard to, like, you know, to, you know, bug people or pester people, but, like, GitHub allows us to, like, automate that,

15:56.000 --> 16:03.000
like, we have a, like, a bot that, after 30 days, if, if an issue is, uh, stale, like, someone's claimed it, and they're not doing anything,

16:03.000 --> 16:09.000
it'll just say, like, hey, this is, nothing's happening, we're gonna, we're gonna take you off this in seven days, then seven days later,

16:09.000 --> 16:15.000
they get unassigned, it gets remarked, help wanted, and then somebody else can work on it, and then, like, all that, that pain of having to, like,

16:15.000 --> 16:22.000
you know, try and, like, pester this person is gone, and also, like, the good emotion of labor, too, that maybe sometimes we forget to do,

16:22.000 --> 16:31.000
we, um, you know, like, like, someone, here's a poll request that happened, and, you know, K-man had got merged, and then, uh, when the,

16:31.000 --> 16:39.000
when the deploy went out, we automatically, the bot automatically notifies this, this, this gentleman that, uh, hey, your, uh, your code was included in the deploy,

16:39.000 --> 16:47.000
and now it's out there, it's out there helping these, uh, these Depper Banks, which is awesome, um, and one just tiny little example,

16:47.000 --> 16:54.000
uh, like, our workflows, our workflows are also, you know, if something gets merged in, okay, changes on the, uh, one of the project boards,

16:54.000 --> 17:04.000
uh, and this, this is probably gonna be controversial for some, some of the people here, but we really feel that branches are better than forks,

17:04.000 --> 17:14.000
uh, and, like, the, uh, and the reason for that is, uh, like, oftentimes, like, a poll request will come in, and it's, like, 99% of the way there,

17:14.000 --> 17:22.000
like, it's just missing, like, some tag or some, uh, like, it's just missing something minor, and we could go back and forth with, with the contributor,

17:22.000 --> 17:29.000
but, like, we found it's just easier for a maintainer to, whatever, add, you know, add in that tag or add in that one little missing thing,

17:29.000 --> 17:36.000
and quickly merge it in, because then you get, like, a faster, like, like, feedback loop and, like, faster results for the contributors,

17:36.000 --> 17:42.000
and, like, they're happy that this, this thing got merged really quick, and then, you know, then they're gonna pick something else up and, and,

17:42.000 --> 17:49.000
and, uh, and get it going. But again, uh, I know that this is very controversial, some people probably, uh, think that's terrible.

17:49.000 --> 17:58.000
Um, uh, we're also very opinionated about the code we let in, like, all, all code gets linted that comes in, we require tests,

17:58.000 --> 18:06.000
uh, we're, we're very also opinionated on what libraries come in, we want all the libraries coming in to be boring, like, we don't, like,

18:06.000 --> 18:12.000
if there's a JavaScript framework that's four days old, and someone wants to add it to the project, we're probably not gonna let them,

18:12.000 --> 18:19.000
because, you know, because then it's up to the maintainers for the next however many years to maintain this thing, and it's also harder for contributors,

18:19.000 --> 18:25.000
like, so if we are using, like, standard libraries, standard packages, uh, like, very, like, standard conventions, it makes it easy,

18:25.000 --> 18:32.000
you know, it makes it more welcoming, more people can, can contribute, can contribute, like, regardless, uh, you know, of their level,

18:32.000 --> 18:40.000
they don't have to know all these, uh, specialized, uh, uh, libraries. Uh, and then the other thing is, like, we use realistic seed data in the,

18:40.000 --> 18:53.000
uh, uh, like, when you spin the app up locally, and so when you're, um, oh, everyone liked the joke. Uh, uh, uh, yeah, so our seed data is realistic,

18:53.000 --> 19:01.000
so then if you are running the app locally, like, you can, you get the same, uh, look and feel and experience as, uh, as a bank, uh, who uses it.

19:07.000 --> 19:16.000
Uh, we're also very intentional about how we build, uh, our teams, like, our maintainer teams, like, uh, in the early years, it was just software engineers on it and developers,

19:16.000 --> 19:26.000
uh, but we, we quickly realized that that's a really terrible idea, uh, like, because one, because engineers don't always speak, uh, non-profit,

19:26.000 --> 19:34.000
uh, and so, but so, you know, we've, we've made it, made it a point to add in, you know, product, product managers, designers, and really, like, anyone,

19:34.000 --> 19:41.000
it doesn't even matter if you're technical or not, like, if you want to be a, be a part of the team and you just want to do good, like, we, we will find a way to bring you

19:41.000 --> 19:49.000
under the team and help, and help, because, you know, uh, good people are good people. Yeah.

19:51.000 --> 20:03.000
Uh, but again, it's, it's not all, like, uh, uh, sunshine and roses, like, there are, there are challenges to, to, uh, you know, uh, uh, maintaining a project like this,

20:03.000 --> 20:13.000
and, um, uh, like, the big one is kind of like institutional knowledge or, like, project memory, like, like I said, our project has been going since 2015, which is nine, nine years now,

20:13.000 --> 20:22.000
wow, uh, and so, like, it's hard to remember, like, after nine years, like, hey, why was this decision made, and why, uh, why did you do that instead of this,

20:22.000 --> 20:36.000
and, um, uh, and, you know, like, we, we have Wiki, we have Slack history, you know, we can go look at old Git commits and, and our GitHub issues and, and, and things like that, but, like, a lot of times there's conversation in the room,

20:36.000 --> 20:49.000
and we just don't know why things have happened the way they did, and so if anyone has a solution to this or anyone, and I know, like, there's architectural decision records and things like that, but, uh, if anyone has solved this problem, find me later,

20:49.000 --> 20:51.000
because, you know, I would love to know.

20:51.000 --> 21:12.000
Another challenge we have is, is tests and testing, like, um, like, you know, like, unit tests, integration tests, system tests, like, um, you know, like, obviously, we'd love to have all system tests, you know, because they really approximate a user using the application,

21:12.000 --> 21:32.000
but then that slows your test suite down, and it slows down your feedback loops, and, um, but again, like, where, where are those borders, and, like, we're always struggling with, you know, the testing, um, and, like, and contributor feedback, like I said, like, we've had over 300 contributors now, like, we've talked to a bunch of them,

21:32.000 --> 22:01.000
but sometimes people come, and, like, they're really gung-ho to contribute, and, you know, they submit this amazing pull request, and, you know, we merge it in, and then they disappear, and I don't know why, it bothers me, like, did we do something, because, you know, we want people to come and be welcome, because, you know, like, um, happy supported contributors, you know, these become our long-term contributors, um, and the other, the other, obviously, thing, uh, challenging thing was, like,

22:02.000 --> 22:21.000
you know, we're struggling with a project like this is cost, like, uh, again, like, we don't charge anything, we don't pay anyone anything, but like, there still are, kind of, like, fixed costs with a project, and, so, like, how do we do it? Like, uh, like, luckily we're, we're really fortunate that, like, Microsoft gives a free Azure credits to nonprofits, so if you don't know about that, definitely take advantage of it.

22:21.000 --> 22:26.360
advantage of it. I think it's like 3,000-ish a year, which is more than enough because

22:26.360 --> 22:32.240
again, we're not operating on GitHub or Google scale. It's got our production server, our

22:32.240 --> 22:37.440
staging servers, and that's pretty much it. So it's great for us. We get free email via

22:37.440 --> 22:44.040
SendGrid for nonprofits, free air purger via bug snag. And so I think the only thing we

22:44.040 --> 22:49.720
really pay for is our domain name, which is awesome. But I know that's a challenge, because

22:49.720 --> 22:53.800
again too, we're also a little worried every year, like, well, what if the Microsoft for

22:53.800 --> 22:59.360
nonprofits goes away or any of these things? How do we pay for it?

22:59.360 --> 23:06.080
So now, if you aren't aware, I'd like to introduce you all to you for good first issue. It's

23:06.080 --> 23:11.400
a new site we've launched on GitHub, and it's defined projects like human essentials or

23:11.400 --> 23:18.080
like most of the digital public goods are listed on there. If you contribute to a project

23:18.080 --> 23:22.600
or you want to contribute to a project like this, you should definitely come and check

23:22.600 --> 23:27.080
it out. And there's a little recommended project there where you can submit your project to

23:27.080 --> 23:33.640
be added or like I said, just find projects and it will by default list any issue in your

23:33.640 --> 23:41.120
project that you've tagged help wanted or good first issue. So this open terms archive

23:41.120 --> 23:47.600
here will like open up and list a bunch of the help wanted and good first issue tags

23:47.600 --> 24:05.080
or issues. And I saved five minutes for questions. Are there any questions?

24:05.080 --> 24:06.080
Thank you.

24:06.080 --> 24:12.080
Not a question, just a comment. So in regards to the idea around contributor feedback where

24:12.080 --> 24:16.080
you're like, well, we have people, they do all this work, they submit their first poll

24:16.080 --> 24:21.080
request and then they disappear into the ether. Something I've seen work in the Kubernetes

24:21.080 --> 24:27.080
project and the other project is having really clearly defined roles that you effectively

24:27.080 --> 24:32.080
have a job description for and you can say like, we're looking for somebody to fill this

24:32.080 --> 24:39.080
out. You know, like we're looking for somebody to help us do the issue triage where every

24:39.080 --> 24:42.080
time somebody has a new issue, you go in, you ask the person, you give me more details,

24:42.080 --> 24:47.080
because they very much say, people say, something's broken and they walk away, that's their issue.

24:47.080 --> 24:52.080
And that's like not useful as a maintainer, right? So you say like, we need to do this

24:52.080 --> 24:57.080
once a week, we need to do triage new issues. These are all the things involved with triaging

24:57.080 --> 25:01.080
new issues. And like very often that's a way of getting, it's a little bit secure that

25:01.080 --> 25:06.080
a good first issue, like that was the problem that we found in most of the C&C projects

25:06.080 --> 25:10.080
actually, was like, you can get people to do that good first issue, but like giving them

25:10.080 --> 25:17.080
to do a good second issue, much, much harder. But having roles helps and like really defining

25:17.080 --> 25:23.080
the boundaries of how, of a very specific path, how somebody can deal with you, like

25:23.080 --> 25:29.080
typically the commits follow after that. Like if somebody is engaged in say, triaging issues

25:29.080 --> 25:35.080
once a week, it's very likely that in the course of that triage, they say like, oh, I can do that in

25:35.080 --> 25:39.080
five minutes, I'll just do that. And then like, in the back of those, they can take on something

25:39.080 --> 25:43.080
harder, we're going, oh, that takes a little more context, we can't try to go as a good person,

25:43.080 --> 25:48.080
and you're like, but I can take care of it. And so that's like a way of kind of getting people to

25:48.080 --> 25:54.080
stick, and it's also that way of like mentoring your leadership in the project. And it's also a good

25:54.080 --> 25:58.080
way for them to communicate with work that they're doing the project externally, which has

25:58.080 --> 26:04.080
effects on like how their, the work that they do for your open source project can help their

26:04.080 --> 26:11.080
careers, which is realistically a thing that people want. Awesome. Yeah, no, thank you.

26:11.080 --> 26:16.080
Also, just some comments on that. I think that it works very well with Kubernetes where it's like a multi-faceted

26:16.080 --> 26:21.080
infrastructure with different companies at the end, so having a very clear defined role, often both,

26:21.080 --> 26:25.080
because people do want to get involved in that, maybe because a lot of interest from their work

26:25.080 --> 26:31.080
and work, but a lot of the time in very open communities, it may not work. One thing that we

26:31.080 --> 26:37.080
tried at the RR project a few years ago is, in the way you get in the project, you do something,

26:37.080 --> 26:42.080
and you find people, you interact with them in one of the community forums, and you make friends

26:42.080 --> 26:46.080
in the new state, most of the projects we participate in because people there, there's a real

26:46.080 --> 26:52.080
life-minded people. So we try to reverse that angle with having a funnel of getting into the project,

26:52.080 --> 26:57.080
don't talk to people in this channel, make friends, and then we find, after talking,

26:57.080 --> 27:01.080
then we find something that I'll be able to use. I'm going to, because I don't think the people on the

27:01.080 --> 27:07.080
thing can hear the conversation going on. Oh, sorry, okay. So I'll open up for more questions,

27:07.080 --> 27:14.080
and I'll try to repeat the questions too. Yeah. My question is, the platform that you built,

27:14.080 --> 27:20.080
is it primarily targeted for these audiences, or can it also be used for other countries?

27:20.080 --> 27:26.080
Oh, no. So the question was, can the platform be used for other countries? So it is, obviously it can

27:26.080 --> 27:31.080
specialize, like, and the language inside it is specialized for diaper banks and peer supply

27:31.080 --> 27:37.080
banks, but if you go to the repo, like, we have actually an entire file in there on, like, if you were

27:37.080 --> 27:43.080
running, I don't know, like, a tool bank, or like, any kind of like donation bank platform,

27:43.080 --> 27:47.080
you could use, like, we talk about how, like, hey, you could take this and use it right for a

27:47.080 --> 27:52.080
tool bank, or a medical equipment bank, or, like, all these different banks that are, are exist.

27:52.080 --> 27:56.080
When quick follow-up question, is it only in English?

27:56.080 --> 28:03.080
Yes, the project is only in English. Yes. But if you want to translate, we'd, yeah.

28:03.080 --> 28:13.080
You mentioned it's all 100% volunteer driven, and I was wondering if you could talk about that.

28:13.080 --> 28:21.080
Why did you make that decision? Have you considered paying contributors in the nonprofit, I mean?

28:21.080 --> 28:30.080
Yeah. Well, so the, so the nonprofit is also, like, fully volunteer driven, like, it's not a, like, so, like, there is no, so I

28:30.080 --> 28:35.080
guess we have to, like, yes, we thought about, like, the, so the question is, like, have we thought about paying people, and, like,

28:35.080 --> 28:41.080
ideally that would be great, and also to, like, kind of just giving the software to, like, if it crashed, and something really bad

28:41.080 --> 28:46.080
happened, like, that's something that goes through my mind, because, again, like, these are all volunteers, and if things go down,

28:46.080 --> 28:52.080
like, how, you know, we can't tell, we can't tell someone to call in sick from work to, you know, get this fixed.

28:52.080 --> 28:58.080
I think a lot of the people in our team would, because, you know, they really care about it, but, but yes, but if you have a

28:58.080 --> 29:01.080
way for us to get a lot of money to do this and pay for this.

29:01.080 --> 29:03.080
It's just a funding issue, yeah.

29:03.080 --> 29:09.080
Yeah, like, we've just, like, right, we've just kind of followed this path, and, like, ideally I think there'd be people that would

29:09.080 --> 29:12.080
work on this full time if, you know, there was funding, but, yeah.

29:12.080 --> 29:13.080
Right.

29:13.080 --> 29:14.080
Are we done?

29:14.080 --> 29:15.080
It's time.

29:15.080 --> 29:16.080
It's cool.

29:16.080 --> 29:17.080
Thank you, Sean.

29:17.080 --> 29:18.080
Thank you.

29:18.080 --> 29:19.080
Thank you.

