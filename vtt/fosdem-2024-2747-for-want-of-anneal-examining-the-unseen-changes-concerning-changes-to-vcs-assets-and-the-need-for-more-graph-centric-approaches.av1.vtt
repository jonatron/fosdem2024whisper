WEBVTT

00:00.000 --> 00:12.600
So we're just in a knowledge management setup for me. This is just the K-Outliner document.

00:12.600 --> 00:19.200
I did have a bit of an epistemic funk, so there's going to be a bit of bouncing around

00:19.200 --> 00:25.960
in terms of this. But just to sort of clarify things, I'm going to be presenting things

00:25.960 --> 00:32.120
regarding version control and logic from more of a wider perspective in the context of my work.

00:32.120 --> 00:37.560
And there's some very distinct pillars in terms of that, and unfortunately it does involve me

00:37.560 --> 00:43.120
quickly going through some of the things I've done historically. I got into technology as a

00:43.120 --> 00:49.200
consequence of doing some work on the government, which was looking at modern ICT systems for

00:49.200 --> 00:55.080
breaking down silos. It seemed very perverse to be looking at Conway's law later on and

00:55.080 --> 01:00.800
realizing that apparently that's the wrong thing to be doing, that I made the folly of

01:00.800 --> 01:08.760
thinking that the organization should be below what the capabilities of communication are.

01:08.760 --> 01:18.360
I later had the opportunity to assemble and aggregate lots of focusonomies using delicious,

01:18.960 --> 01:28.400
which gave me the autonomy to just use the non-alpha numeric characters that sit on the

01:28.400 --> 01:35.520
right hand side of a keyboard and use that as a form of creating logic rather than just going

01:35.520 --> 01:42.680
through a list of 26 characters and deciding which one is closest to A. It seems a very perverse

01:42.840 --> 01:49.640
way of being quick on a computer and being rational and orderly, both for input as well as

01:49.640 --> 01:58.160
recall. I had some fun later on once I realized that I probably should be doing coding with things,

01:58.160 --> 02:07.520
and so I looked into things regarding using logical forms to recognize what text is as well as

02:08.520 --> 02:18.680
be able to make transformations starting out with things like all can said and more recently

02:18.680 --> 02:29.640
doing things with regards to TXR, which is a list which does some very interesting passing. Some

02:29.680 --> 02:39.240
things which I've been developing over the last 10 years is key, which is my desiring to order

02:39.240 --> 02:45.680
things within the buttons which sit at the middle of the home row rather than obviously the

02:45.680 --> 02:53.160
inelegant aspect of just using my right hand for the non-alpha numeric keys forming things. I did a

02:53.160 --> 02:59.120
bit of DJing last night, I used to do that a lot and one of the things with collecting records as

02:59.240 --> 03:07.320
a physical object is that you have boxes and if you like to put things in boxes you reach a limit

03:07.320 --> 03:14.360
and if you're a bit too chaotic you end up putting all of the wrong things in the boxes and that

03:14.360 --> 03:23.920
doesn't help you in terms of things. Having done things with regards to folksonomies and aggregating,

03:24.880 --> 03:30.680
aggregating about 200 random people on the internet for things, you get a kind of idea that

03:30.680 --> 03:37.680
people's perspective on things are different and distinct and they can converge but it might need

03:37.680 --> 03:44.200
of various things like that. So I've really been sort of exerting myself and doing things as a,

03:45.200 --> 03:53.840
I've been truiting it out of what I've been doing as a body language and where I'd be providing

03:53.840 --> 04:01.440
annotations for what I call key as a recursive modeling language where there may be a point of

04:01.440 --> 04:11.760
precision but you have the ability to drill down on things and work on things later, perhaps having

04:11.800 --> 04:19.040
a sense of definition and compounding things just as with body language you might combine multiple

04:19.040 --> 04:27.240
gestures and people might not understand and you can put clarifications. So I started from the point

04:27.240 --> 04:32.800
of just doing things for separating things within a document just with headers with a

04:32.800 --> 04:40.360
classification then I started separating configs and documentation and just even attacking things.

04:40.480 --> 04:48.400
So for instance I separated them across the file structure and various things like that but I've

04:48.400 --> 04:57.480
done this so much that I have about a thousand directories in my home folder which are sort of,

04:57.480 --> 05:07.600
I have two annotation forms, there's the classics syntax which is based upon 36 of one type and

05:07.720 --> 05:13.040
then there's another thing which is bloom which I consider to be like a kind of, I refer to it as

05:13.040 --> 05:19.680
like a kind of plant sexual organ that there's a kind of propagating thing and it allowed me in

05:19.680 --> 05:28.280
my mind to think of rather than the home folder being the root that in effect it was the budding

05:28.280 --> 05:35.080
of an information systems concept and that everything in terms of the files and the subsets

05:35.120 --> 05:42.280
within a file are the roots, the things pushing down deep into the soil and I've been looking at

05:42.280 --> 05:47.160
intersecting things because obviously if you partition things out then you have to have

05:47.160 --> 05:54.040
these things flowing across and so in many respects I've spent a lot of time building in terms of

05:54.040 --> 06:00.360
what my perspective on information systems and how it should operate on a spatial aspect and

06:01.360 --> 06:12.000
trying to get in terms of passing of time in the context of things is very important in terms of

06:12.000 --> 06:20.080
things. As you can imagine I have been liable to make mistakes and having to reassess things as

06:20.080 --> 06:26.800
well as the fact that I have improved on things so for instance I rather than just having the

06:27.400 --> 06:33.440
classic annotation I would give it a sort of hub nucleus which would sit to exist in terms of two

06:33.440 --> 06:40.560
main forms in terms of a normative thing in terms of somebody having an opinion whether it's somebody

06:40.560 --> 06:46.400
else or yourself exerting an opinion as well as positivists where it's got more of a general

06:46.400 --> 06:55.560
thing and I would use the same sort of character to also provide an emphasis on whether something is

06:55.760 --> 07:02.400
coming in or coming out or as well as being destroyed and so that was a kind of evolution of

07:02.400 --> 07:08.880
concept which needs some clarification and being somebody who appreciates folksonomies and actually

07:08.880 --> 07:16.600
doing tasks as well as the joy of improvisation and free improvisation which has fantastic

07:16.600 --> 07:25.520
applications regarding how individuals communicate in a live setting but there's a

07:26.040 --> 07:33.480
sense of order and perspective but it does need a tiny bit of calibration and so for instance

07:33.480 --> 07:40.880
you have I would like to retrospectively deal with things as well as just as when people do

07:40.880 --> 07:48.320
things in say the geek's environment to repurpose thing and put a definition of everything

07:48.440 --> 07:55.840
calibrating behind and for me logic programming is is is one of the ways in which I can represent

07:55.840 --> 08:02.640
that and for instance one of the joys in terms of RDF is which is one of the kind of midway

08:02.640 --> 08:10.040
points is that I don't have to be trapped within these silos of each git database within each

08:10.040 --> 08:17.720
repository as well as the potential pitfalls of having a mega git database across an entire system

08:18.120 --> 08:24.840
that I could be using the RDF to acknowledge what something is but also point towards the fact

08:24.840 --> 08:31.840
that that might be an obsolete thing and that there's and that they and that there's something

08:31.840 --> 08:35.960
more ideal in which it should be considered in terms and that way you're not necessarily

08:35.960 --> 08:41.920
raising the thing but just in maturity realizing various things I'm gonna I'm gonna actually

08:41.920 --> 08:47.400
make use of this green so I'm gonna I'm gonna I'm gonna type in rainbow because that's I would

08:47.400 --> 08:53.000
have just jumped in terms of things but for some reason the word rainbow is yes rainbow

08:53.000 --> 09:02.080
there we go rainbow so this is a nice thing in emacs which so I click on that and it's gonna

09:02.080 --> 09:08.120
jump into the other folder which let's see if it jumps back give me give me a rainbow

09:08.120 --> 09:25.040
have we lost the rainbow I'm sorry but it's no rainbow okay well I never expected that

09:25.760 --> 09:33.120
the this is live presenting but okay one of the main points I was I had a picture of a rainbow

09:33.120 --> 09:37.640
you can imagine it and there was a rock in the middle ground and there was a rock in the foreground

09:37.640 --> 09:44.120
and one of the things which RDF does is having an open world that if I'm describing the middle

09:44.120 --> 09:50.800
ground rain rock formation it doesn't exclude that there might be other rocks in the environment

09:50.840 --> 09:57.080
whereas something like prologue would be expecting that if there's reference to one other thing

09:57.080 --> 10:02.040
then there is only one other thing and that's just worth dealing with and I wanted to talk

10:02.040 --> 10:09.760
about disjointed classes because that in terms of the aspect of the rainbow which you are imagining

10:09.760 --> 10:18.520
on this screen that for five left okay and my annotation system because it's based upon certain

10:18.560 --> 10:27.640
forms I can automatically have a reference which acknowledges that there are that there are

10:27.640 --> 10:36.640
distinctions within just the pattern of typing the main set for the bloom is 36 which within a

10:36.640 --> 10:44.440
semantic model works very nicely and the 2 to 15 characters for the annotations to exist as a

10:45.040 --> 10:51.520
representative form would be something like half a million I've already done about dictionaries of

10:51.520 --> 10:59.800
about with the text to the annotation about 2002 wiki data and I'll be dealing with that in terms of

10:59.800 --> 11:07.600
forming with things I'm going to briefly deal with bio make because this is this is you're not

11:07.760 --> 11:16.120
on the screen I'm gonna because this for me is very fascinating I was this is a form which

11:16.120 --> 11:24.160
allows you to have sets in terms of various things so that you're not just operating off input

11:24.160 --> 11:30.160
output in terms of things but having a collection as well as pulling in some of these logical

11:30.200 --> 11:38.320
forms and for me that's very significant regarding the the work I'm doing I should just briefly jump

11:38.360 --> 11:57.920
back to the the make file oh yeah there's I've been using remake for dealing with things regarding

11:58.640 --> 12:08.760
that so I've been using I've been using these annotations within the documents so I will

12:08.760 --> 12:21.520
yeah right so this is my make file where I've been using these annotations

12:22.440 --> 12:28.600
representatives so for instance I would have the arrogance of creating say 20 aliases for print

12:28.600 --> 12:34.360
so then I'm using the annotation within the print form to provide an inference within the script

12:34.360 --> 12:43.720
but this is this is how I build out scripts and coding and I'm going to be using an intersection

12:43.720 --> 12:49.120
of logic and forms for intersecting things so it all looks like that across different languages

12:49.240 --> 12:55.360
and I could use something like remake which would output the genuine code which exists and I'm just

12:55.360 --> 13:02.080
spending the time providing descriptions and because of the accumulation of forms and the

13:02.080 --> 13:08.800
fact that they congregate I have just like with an and system the ability to grow smarter and

13:08.800 --> 13:15.880
smarter of each form that my own orientation will feed into a wider network which can point around

13:16.160 --> 13:20.920
and because I have this chain of descriptions within the files and everything if you point to

13:20.920 --> 13:28.240
something somewhere else you can have that very large mesh of inheritances and various forms

13:28.240 --> 13:36.160
I'm going to hopefully have some experiments with using RDF with a transport agents who'd be doing

13:36.160 --> 13:43.160
federal best related content so one could be exerting things both from the perspective of

13:43.600 --> 13:49.560
version control and then forming responses for interacting things and you could be building

13:49.560 --> 13:56.680
business logic in terms of state as well as having having different criteria there's a there is a

13:56.680 --> 14:06.200
machine that I did load up which is a position of an architect adapting ideas from Aristotle the

14:06.200 --> 14:12.440
idea that rather than a straight line corridor that you are having to orientate and deal with

14:12.440 --> 14:17.240
things one of the great tragedies of our modern ages that we're forced to be distracted and

14:17.240 --> 14:27.280
things like this is a way of having a directed force in a logical more orderly way the below

14:27.280 --> 14:36.000
diagram is a impression of how this was done for a an architectural place for radiologists and I

14:36.000 --> 14:41.720
thought the feedback that they made the quiet room smaller so that the senior radiologists

14:41.920 --> 14:47.200
couldn't hide away from the juniors to be quite an interesting feedback loop in which I'm sure

14:47.200 --> 14:57.440
any logical that system in in an informatic system would be commensurable okay yeah and that's a

14:57.440 --> 15:07.360
nice diagram but we don't have time for some digression I suppose that's it yes good sorry for

15:07.360 --> 15:31.400
the rainbow I can be your mic stand if you prefer as well I can just stand yeah questions

15:38.320 --> 15:46.640
there there in effect you could you could make an inference from just creating a list of various

15:46.640 --> 15:52.040
things and seeing how it relates my my feelings that it would be better to once I've mastered the

15:52.040 --> 15:58.200
logical intersection of this stuff is to compile a mega dictionary based upon a collection of

15:58.200 --> 16:03.600
things and I think that's just efficient and I ever there's lots of people have been watching this

16:03.640 --> 16:09.520
will be very delighted once I push a button and an API springs up but like with most employment

16:09.520 --> 16:14.800
things there's a question of five or ten concepts and you can start in and deal with things that

16:14.800 --> 16:22.160
these are these are 36 odd things so that's just two page manual if needs be just to get somebody

16:22.160 --> 16:40.280
going yeah all right I've been just treating it as as a as a as a alternative to shell and a way of

16:40.280 --> 16:46.640
breaking things into ways of breaking problems things into smaller problems as well as a form of

16:47.240 --> 16:55.120
building coding against other subsets upstream so it's just a giant sandbox I'm going to be

16:55.120 --> 17:02.840
putting that into dedicated libraries and I think SWI prologue will be a very apt choice for that for

17:02.840 --> 17:08.600
a range of reasons yes thank you

17:16.640 --> 17:17.920
you

