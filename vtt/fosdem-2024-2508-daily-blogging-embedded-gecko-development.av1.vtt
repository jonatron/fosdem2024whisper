WEBVTT

00:00.000 --> 00:18.800
Next up, we have David from Sailfish OS talking about daily blogging, embedded gecko development.

00:18.800 --> 00:26.920
Have a big round of applause, please.

00:26.920 --> 00:32.920
So thanks very much for having me here in the FOSA mobile devices dev room.

00:32.920 --> 00:35.920
It's great to be here in front of everyone.

00:35.920 --> 00:41.920
So yeah, so I'm David Llewellyn Jones and I'm going to talk about some of my experiences,

00:41.920 --> 00:49.920
essentially upgrading the browser for Sailfish OS from one version to the next version of the gecko engine.

00:49.920 --> 00:51.920
And I'll also talk about my experiences.

00:51.920 --> 00:57.920
So one of the things that I did as part of that was I did a daily blog about my experiences performing that development.

00:57.920 --> 00:59.920
And so I'll talk a little bit about that as well.

00:59.920 --> 01:01.920
So first of all, a little bit about me.

01:01.920 --> 01:05.920
So until a year ago, I was a software engineer at YOLA.

01:05.920 --> 01:11.920
And I know it was exactly a year ago because my last day was at FOSDEM when I was at YOLA.

01:11.920 --> 01:15.920
So that was my last day of working there and then I started on the Monday at my next job.

01:15.920 --> 01:21.920
And now I am working for an organization called the Alan Turing Institute as a research data scientist.

01:21.920 --> 01:25.920
But it means that I have some background with Sailfish OS and the development of Sailfish OS.

01:25.920 --> 01:30.920
So for those of you that don't know, YOLA is the company that develops Sailfish OS,

01:30.920 --> 01:35.920
which is a Linux variant that runs on mobile devices, on phones.

01:35.920 --> 01:39.920
I'll explain a little bit more about Sailfish OS in a second.

01:39.920 --> 01:41.920
But now I'm a community member.

01:41.920 --> 01:45.920
I still use Sailfish OS daily as my daily driver, as my main phone.

01:45.920 --> 01:51.920
And so it's nice to have the opportunity to develop for it as a member of the community.

01:51.920 --> 01:57.920
And I put up my avatar there because I guess on the internet I'm known as Flypig

01:57.920 --> 02:02.920
and my website is called flypig.co.uk and that's where I'm doing my daily blogging.

02:02.920 --> 02:06.920
And there will be a little bit of relevance for that later.

02:06.920 --> 02:10.920
So Sailfish OS, like I said, is a Linux distribution.

02:10.920 --> 02:12.920
That runs on smartphones.

02:12.920 --> 02:16.920
It was first released in 2012 on the YOLA 1 phone.

02:16.920 --> 02:19.920
That was a big release at the time.

02:19.920 --> 02:26.920
And it is a busy box and G-Lib C-based Linux OS, so it's not an Android derivative.

02:26.920 --> 02:31.920
It runs on libhybris and also natively on things like the Pine phone.

02:31.920 --> 02:36.920
YOLA is the company that develops the operating system.

02:36.920 --> 02:38.920
It is free for there.

02:38.920 --> 02:41.920
So there are ports of it onto other devices that are community ports.

02:41.920 --> 02:45.920
But there is also a commercial layer that you can pay for to get Android app support

02:45.920 --> 02:48.920
to run Android device, Android apps on top of it as well.

02:48.920 --> 02:54.920
When I was at YOLA I worked on a whole bunch of different things including the sync support.

02:54.920 --> 02:57.920
I worked on some user interface stuff.

02:57.920 --> 03:00.920
I worked on the email client, a whole bunch of different things.

03:00.920 --> 03:05.920
One of the things that I worked on was the Gecko rendering engine which is used for the browser.

03:05.920 --> 03:09.920
So that's something that I gained a bit of experience with.

03:09.920 --> 03:15.920
And that's called Selfish Browser and that is essentially what I'm going to be talking about today.

03:15.920 --> 03:20.920
So I mentioned that Selfish Browser uses the Gecko engine for its rendering.

03:20.920 --> 03:24.920
And I'm sure a lot of you will be familiar with Gecko, but again for those of you that aren't,

03:24.920 --> 03:29.920
Gecko is Mozilla's rendering engine that is used for Firefox.

03:29.920 --> 03:34.920
So it is a rendering engine that is underneath Firefox and it is a little bit like these other rendering engines

03:34.920 --> 03:39.920
that I've listed there like Blink which is the rendering engine that is developed essentially by Google

03:39.920 --> 03:41.920
and that is used in Chrome.

03:41.920 --> 03:47.920
It's used in, I guess it's used in Edge.

03:47.920 --> 03:49.920
It's used in a bunch of other browsers.

03:49.920 --> 03:52.920
Brave, Vivaldi browsers like that.

03:52.920 --> 03:53.920
It's quite widely used.

03:53.920 --> 03:58.920
Webkit which is the one that Apple forked from the KDE Webkit browser

03:58.920 --> 04:01.920
which is primarily I guess used in Safari.

04:01.920 --> 04:05.920
And I think Epiphany, no browser uses it as well.

04:05.920 --> 04:07.920
I've also put Netscape up on there.

04:07.920 --> 04:09.920
Have any of you used Netscape?

04:09.920 --> 04:10.920
Yeah, okay.

04:10.920 --> 04:11.920
Wow, that's impressive.

04:11.920 --> 04:12.920
Okay, that's really good.

04:12.920 --> 04:15.920
So I mean I remember Netscape from the, sorry.

04:15.920 --> 04:16.920
Netscape.

04:16.920 --> 04:17.920
Okay, Netscape.

04:17.920 --> 04:19.920
Sorry, so I said Netscape.

04:19.920 --> 04:21.920
Have any of you used Netsurf?

04:21.920 --> 04:23.920
I beg your pardon, that's a different question.

04:23.920 --> 04:25.920
Yeah, okay, there's still a bunch of you that have used Netsurf.

04:25.920 --> 04:27.920
So I remember Netsurf from its days on Risco S.

04:27.920 --> 04:30.920
So it's actually a very, very, had a long history,

04:30.920 --> 04:33.920
but it's a nice engine as well.

04:33.920 --> 04:35.920
So Gecko is like one of those engines,

04:35.920 --> 04:36.920
but it is used for Firefox.

04:36.920 --> 04:38.920
And it was released in 2000, as it says there.

04:38.920 --> 04:40.920
Netscape 6 was when it was released.

04:40.920 --> 04:44.920
So it's had quite a long history.

04:44.920 --> 04:47.920
And it has also had quite a long history on selfish OS.

04:47.920 --> 04:51.920
So it's quite unusual for mobile browsers to be using Gecko.

04:51.920 --> 04:56.920
I think selfish OS might be unique amongst the mobile delivery.

04:56.920 --> 04:59.920
The mobile derivatives in using Gecko.

04:59.920 --> 05:02.920
And part of the reason for that is because it's not really set up

05:02.920 --> 05:05.920
for embedded development, but I'll come back to that.

05:05.920 --> 05:09.920
The history is that it's not a fact of when selfish OS was

05:09.920 --> 05:12.920
essentially a development of MIMO,

05:12.920 --> 05:15.920
which was the Nokia operating system that ran on the N900.

05:15.920 --> 05:17.920
And it had a browser called MicroB that was Gecko based.

05:17.920 --> 05:20.920
And at that point in time, WebKit wasn't really as developed as it is now.

05:20.920 --> 05:24.920
So Gecko was perhaps a more natural choice.

05:24.920 --> 05:27.920
And essentially there is this thing called embedLight,

05:27.920 --> 05:33.920
which is the Gecko method of embedding a browser into other applications,

05:33.920 --> 05:37.920
which is used in selfish OS to allow this to happen.

05:37.920 --> 05:40.920
And I'll talk a little bit about embedLight later.

05:40.920 --> 05:44.920
But it essentially allows you to run Gecko, the rendering engine,

05:44.920 --> 05:48.920
as either a thread or a process in another app.

05:48.920 --> 05:51.920
So WebKit is well set up for this.

05:51.920 --> 05:55.920
That's why you have things like Electron, which are using WebKit as the back end.

05:55.920 --> 05:59.920
But Gecko is not so well set up for this.

05:59.920 --> 06:02.920
And it's not particularly supported by Mozilla.

06:02.920 --> 06:04.920
In fact, I have this quote here.

06:04.920 --> 06:06.920
So this is a quote from a guy called Chris Lord.

06:06.920 --> 06:09.920
It's an old quote from 2006.

06:09.920 --> 06:12.920
At that point in time, Chris Lord was working for Mozilla.

06:12.920 --> 06:15.920
So he's not anymore, as I understand it, but this is from his blog,

06:15.920 --> 06:16.920
and this was from when he was.

06:16.920 --> 06:18.920
And he says, Gecko has limited embedding capability

06:18.920 --> 06:21.920
that's not well documented, not well maintained,

06:21.920 --> 06:23.920
not heavily invested in.

06:23.920 --> 06:25.920
And at various points in its history,

06:25.920 --> 06:28.920
there have been embedding APIs and capabilities,

06:28.920 --> 06:31.920
but they've either been dropped or left to bit rot.

06:31.920 --> 06:32.920
And it mentions IPCLight.

06:32.920 --> 06:35.920
IPCLight is another name for embedLight.

06:35.920 --> 06:37.920
So it's the same thing.

06:37.920 --> 06:41.920
So as you can see, essentially, it's something that Mozilla doesn't really support.

06:41.920 --> 06:44.920
And that has, over time, caused increasing difficulty

06:44.920 --> 06:47.920
in making sure that this browser is working on selfish OS.

06:49.920 --> 06:51.920
I want to talk a little bit about the structure,

06:51.920 --> 06:53.920
because it's actually quite interesting.

06:53.920 --> 06:55.920
So working with Gecko, so as I said,

06:55.920 --> 06:57.920
I have some history from YOLO working with Gecko,

06:57.920 --> 07:02.920
but it's actually a really nice set of technologies to work with.

07:02.920 --> 07:05.920
In selfish OS, there is the structure where it works.

07:05.920 --> 07:07.920
Gecko is at the bottom.

07:07.920 --> 07:11.920
Zool runner, XUL runner, is the library that is built for embedding

07:11.920 --> 07:13.920
from the Gecko source.

07:13.920 --> 07:16.920
And on top of that, we have this layer called cuteMozEmbed,

07:16.920 --> 07:19.920
which was also at one point in time in Mozilla technology,

07:19.920 --> 07:22.920
but is now essentially maintained by YOLO,

07:22.920 --> 07:23.920
I think that's fair to say.

07:23.920 --> 07:29.920
And it provides a cute widget that embeds the browser inside it.

07:29.920 --> 07:30.920
That's all.

07:30.920 --> 07:33.920
And then on top of that, you have embedLightComponents,

07:33.920 --> 07:38.920
which is a set of JavaScript shims that run inside the Gecko JavaScript engine

07:38.920 --> 07:41.920
and provide support for the user interface.

07:41.920 --> 07:44.920
And then finally, you have the selfish browser executable,

07:44.920 --> 07:46.920
which is actually the app that you run,

07:46.920 --> 07:49.920
and it's the user interface that you see when you run the app.

07:49.920 --> 07:51.920
So there's quite a stack there.

07:51.920 --> 07:53.920
And it's built of a whole bunch of different technologies.

07:53.920 --> 07:57.920
So Gecko itself is made up of primarily C++ with a bunch of Rust.

07:57.920 --> 07:59.920
It's gradually converting to Rust.

07:59.920 --> 08:02.920
A big chunk of JavaScript as well in there,

08:02.920 --> 08:04.920
and also this small IPC layer,

08:04.920 --> 08:07.920
which provides inter-process communication.

08:07.920 --> 08:09.920
CuteMozEmbed is, I think, all C++,

08:09.920 --> 08:12.920
and embedLightComponents is all JavaScript.

08:12.920 --> 08:17.920
And then on top of that, selfish browser is a mixture of C++ and QML.

08:17.920 --> 08:19.920
So it's a cute-based browser.

08:19.920 --> 08:22.920
So you can see there's a whole bunch of really interesting technologies

08:22.920 --> 08:24.920
that are being used for it.

08:24.920 --> 08:30.920
So for me, it's a really nice thing to be working with.

08:30.920 --> 08:33.920
But as I said, there is a problem with Gecko,

08:33.920 --> 08:37.920
which is essentially providing this route for upgrade of the browser.

08:37.920 --> 08:41.920
So there is this upgrade problem that means that it's actually quite hard

08:41.920 --> 08:45.920
to upgrade the browser from one version to the next.

08:45.920 --> 08:52.920
So to give an example, when I was working at YOLA last year and before that,

08:52.920 --> 08:56.920
so in February 2021, we upgraded it to ESR60.

08:56.920 --> 09:01.920
So ESR is Mozilla Terminology for Extended Service Release.

09:01.920 --> 09:02.920
I think I have that right.

09:02.920 --> 09:04.920
I think it's not support, but I always say it wrong.

09:04.920 --> 09:06.920
I think it's extended service release.

09:06.920 --> 09:13.920
So it's essentially releases that have bug fixes and security updates for 12 cycles,

09:13.920 --> 09:17.920
so 12 normal Firefox releases or thereabout, so I understand it.

09:17.920 --> 09:22.920
And YOLA tends to upgrade to the next ESR release

09:22.920 --> 09:24.920
because that provides longer-term support,

09:24.920 --> 09:26.920
and it means that you don't have to keep up with all of the versions

09:26.920 --> 09:28.920
all the time, which is very difficult.

09:28.920 --> 09:30.920
But it takes a long time to do these jumps.

09:30.920 --> 09:34.920
So in February 2021, it was upgraded to 60 in March 2022.

09:34.920 --> 09:37.920
A year later, it was up for doing it again.

09:37.920 --> 09:41.920
And because I knew it was going to be quite a big job,

09:41.920 --> 09:44.920
I also felt like I didn't really want to do it alone,

09:44.920 --> 09:47.920
so that's one of the reasons why I decided to blog about it.

09:47.920 --> 09:53.920
I would decide to do this daily blog that would not only allow me to draw people in,

09:53.920 --> 09:58.920
but also keep the community informed about where things were at.

09:58.920 --> 10:01.920
So I'll talk a little bit about this dev diary.

10:01.920 --> 10:02.920
So what is a dev diary?

10:02.920 --> 10:05.920
I'm sure you probably already know, but let me give you a quote.

10:05.920 --> 10:08.920
So this is a quote from Jay Wilson, who is a person on the Internet.

10:08.920 --> 10:09.920
And he says,

10:09.920 --> 10:12.920
A developer diary is where you write about developer things.

10:12.920 --> 10:14.920
It can be the record of what you worked on last,

10:14.920 --> 10:17.920
some decisions made by stakeholders in the product,

10:17.920 --> 10:20.920
or a neat way to accomplish this task.

10:20.920 --> 10:24.920
It really comes down to what you want to put into it.

10:24.920 --> 10:27.920
Okay, so essentially it can be anything,

10:27.920 --> 10:30.920
but my experience with dev diaries was with game development,

10:30.920 --> 10:34.920
because I used to follow, I think originally it was prison architects

10:34.920 --> 10:36.920
that had these video diaries.

10:36.920 --> 10:38.920
They were a crowdsource funded game,

10:38.920 --> 10:39.920
and I really enjoyed them.

10:39.920 --> 10:40.920
I thought they were fantastic.

10:40.920 --> 10:42.920
But they worked really well for game developers,

10:42.920 --> 10:45.920
because they're actually, to a larger centre, marketing tool,

10:45.920 --> 10:47.920
because they have a lot of really great assets that they can share

10:47.920 --> 10:49.920
whilst they're doing the development of graphics,

10:49.920 --> 10:50.920
things like that, screenshots.

10:50.920 --> 10:53.920
So they worked really well as developer diaries.

10:53.920 --> 10:57.920
But for me, it was more about kind of capturing the process

10:57.920 --> 10:59.920
and making me think about the process

10:59.920 --> 11:02.920
and motivating me to try and actually carry on working on it,

11:02.920 --> 11:05.920
which I think is what I put on this slide, hopefully.

11:05.920 --> 11:07.920
So yeah, an aid memoir.

11:07.920 --> 11:09.920
So I found it useful to write about this stuff,

11:09.920 --> 11:10.920
so that I could refer back to it.

11:10.920 --> 11:12.920
So if I write what I've done, it means essentially

11:12.920 --> 11:14.920
I actually have this massive text file

11:14.920 --> 11:15.920
where I've written all of this stuff,

11:15.920 --> 11:19.920
and I can just search it to find out what particular changes.

11:19.920 --> 11:20.920
I made a wish particular point.

11:20.920 --> 11:22.920
My memory is not always so great,

11:22.920 --> 11:25.920
so it's very helpful for me to do that.

11:25.920 --> 11:27.920
It helped me to structure my thoughts

11:27.920 --> 11:29.920
in terms of architecting what changes I was making.

11:29.920 --> 11:32.920
It made me kind of think through it in a logical and consistent way.

11:32.920 --> 11:35.920
And it also motivated me to work on it on a daily basis,

11:35.920 --> 11:38.920
which was actually a really big deal for me,

11:38.920 --> 11:40.920
because otherwise I would drift.

11:40.920 --> 11:43.920
So that was actually really important.

11:43.920 --> 11:46.920
But there are some downsides as well.

11:46.920 --> 11:49.920
Ah, am I coming onto downsides?

11:49.920 --> 11:51.920
Okay, before I get to the downsides,

11:51.920 --> 11:54.920
it was also a way to involve the community in the process.

11:54.920 --> 11:56.920
So like I said, it was...

11:56.920 --> 11:58.920
So these browser upgrades are something

11:58.920 --> 12:00.920
that the community rightly sees as important.

12:00.920 --> 12:02.920
When you have an alternative operating system on your phone,

12:02.920 --> 12:04.920
you can't run...

12:04.920 --> 12:07.920
I appreciate I'm telling you all stuff that you already know,

12:07.920 --> 12:09.920
but you can't necessarily run all of the Android apps

12:09.920 --> 12:12.920
that you might want to be able to run.

12:12.920 --> 12:15.920
And in that case, having a good web browser is really important,

12:15.920 --> 12:18.920
because that provides you access to the services that you need.

12:18.920 --> 12:21.920
So an update browser is really important.

12:21.920 --> 12:25.920
And so keeping users aware of how things were developing

12:25.920 --> 12:28.920
was much nicer than just like after a year,

12:28.920 --> 12:30.920
saying, you know, here's a new version.

12:30.920 --> 12:32.920
It was actually much nicer, I thought,

12:32.920 --> 12:34.920
to see that process through.

12:34.920 --> 12:36.920
And also to maybe get other people to come in

12:36.920 --> 12:39.920
and help with some stuff.

12:39.920 --> 12:42.920
But as I said, there are some downsides as well.

12:42.920 --> 12:45.920
So for example, I find that taking...

12:45.920 --> 12:48.920
writing and coding at the same time takes about twice as long

12:48.920 --> 12:49.920
as just coding.

12:49.920 --> 12:51.920
You know, I think that's probably not too bad.

12:51.920 --> 12:53.920
That's probably what I'd expect.

12:53.920 --> 12:56.920
Like I said, there are benefits to keeping a record.

12:56.920 --> 12:58.920
Daily updates are a motivation,

12:58.920 --> 13:00.920
but they're also an incredible bind.

13:00.920 --> 13:03.920
So when you get home late from work and you've had a really long day

13:03.920 --> 13:05.920
and you know you've got to get a blog post out,

13:05.920 --> 13:07.920
you still have to get it out, right?

13:07.920 --> 13:09.920
That's the idea.

13:09.920 --> 13:13.920
So there are certain times, so I feel like the balance is in favour of...

13:13.920 --> 13:15.920
it makes me motivated in a positive way.

13:15.920 --> 13:17.920
There have been a few times I've been a bit grumpy about it.

13:17.920 --> 13:21.920
But overall, I think it's been a very positive experience for that.

13:21.920 --> 13:23.920
And what I found was that it works really well

13:23.920 --> 13:25.920
in certain parts of the coding process.

13:25.920 --> 13:29.920
So it works well when you've got small tasks that can split me split up daily.

13:29.920 --> 13:32.920
If you have a particularly long task that's going to take five days

13:32.920 --> 13:35.920
of just pure thought to work through the architecting of it,

13:35.920 --> 13:40.920
it's a bit of a disaster because you're writing the same stuff in cycles over and over again.

13:40.920 --> 13:46.920
So I guess those were like learning things that I had as I went along.

13:46.920 --> 13:51.920
And also, blogging, daily dev-diring, I guess,

13:51.920 --> 13:54.920
is also really good if you have visual assets to share.

13:54.920 --> 13:58.920
So I was mentioning about game development there, it's really good for stuff.

13:58.920 --> 14:03.920
But if you have graphics that you can share, that's also really helpful.

14:03.920 --> 14:07.920
All right, so very briefly, this is the timeline that I went through.

14:07.920 --> 14:10.920
So the reason I was telling you about this is about dev-diring

14:10.920 --> 14:13.920
is because I recommend it as a thing to go through if you're developing something.

14:13.920 --> 14:14.920
I think it's really helpful.

14:14.920 --> 14:17.920
This is the timeline. So I've now been doing it for 149 days.

14:17.920 --> 14:20.920
I took two weeks off, I think, in August or thereabouts,

14:20.920 --> 14:24.920
and I've taken two weeks off over FOSDN because otherwise my head would have exploded.

14:24.920 --> 14:27.920
But otherwise, I've been doing it daily for this long.

14:27.920 --> 14:31.920
And you can see that it took 45 days just to get the build working.

14:31.920 --> 14:34.920
And that was a real problem because you're developing completely blind, right?

14:34.920 --> 14:38.920
You're just making changes and you just don't know whether they're going to work until it builds.

14:38.920 --> 14:42.920
And then it took another five days before it would actually execute,

14:42.920 --> 14:46.920
and then a whole bunch more days it took up to 83 days before the rendering was working,

14:46.920 --> 14:48.920
which was quite an experience, I have to say.

14:48.920 --> 14:50.920
Getting it working was quite nice.

14:50.920 --> 14:54.920
And then after that, changes came a bit quicker,

14:54.920 --> 15:00.920
and I'm now back to kind of figuring things out at getting sites to render.

15:00.920 --> 15:08.920
So, you know, that's been quite an interesting experience.

15:08.920 --> 15:11.920
But the community response, I have to say, has been utterly overwhelming,

15:11.920 --> 15:13.920
and I've been really astonished by it.

15:13.920 --> 15:17.920
So people have just been incredibly generous and incredibly nice about all this stuff

15:17.920 --> 15:21.920
in a way that I, you know, these diaries are really dull, I can assure you,

15:21.920 --> 15:24.920
and yet people still read them and they still comment about them.

15:24.920 --> 15:26.920
And I sometimes feel like I joined the wrong internet.

15:26.920 --> 15:30.920
You know, everyone in the media seems to say that the internet is full of trolls

15:30.920 --> 15:36.920
and full of scammers and full of, you know, foreign agents that are trying to swindle you in some way or another.

15:36.920 --> 15:37.920
My experience is not that.

15:37.920 --> 15:39.920
You know, I'm sure those people are out there.

15:39.920 --> 15:43.920
I'm not saying they don't exist, but for me, I've just had positive experiences all the way.

15:43.920 --> 15:46.920
So that's been really nice.

15:46.920 --> 15:47.920
All right.

15:47.920 --> 15:52.920
And one thing in particular is that there is one community member called Thig,

15:52.920 --> 15:56.920
and he routinely generates art for me to put in the blog, which I find really,

15:56.920 --> 15:58.920
which is just wonderful.

15:58.920 --> 16:00.920
This is one of the images that he created.

16:00.920 --> 16:03.920
And yeah, so I just use them, and I think it's really cute.

16:03.920 --> 16:06.920
Although I feel like it's not a fair fight.

16:06.920 --> 16:07.920
I'm not sure.

16:07.920 --> 16:10.920
I feel like the Fox and the Gecko team me up on me there.

16:10.920 --> 16:13.920
But anyway, so a shout out to him.

16:13.920 --> 16:15.920
I think that's really good stuff.

16:15.920 --> 16:17.920
And also to Ulva.

16:17.920 --> 16:20.920
Have I got time to do a quick demo?

16:20.920 --> 16:21.920
Yep.

16:21.920 --> 16:22.920
Okay.

16:22.920 --> 16:23.920
Okay.

16:23.920 --> 16:24.920
I'm getting nodding.

16:24.920 --> 16:25.920
That's good.

16:25.920 --> 16:26.920
So very quick demo.

16:26.920 --> 16:27.920
So it does work.

16:27.920 --> 16:28.920
There in my slide.

16:28.920 --> 16:30.920
You don't want to see those.

16:30.920 --> 16:34.920
So let me run it.

16:34.920 --> 16:39.920
So what I discovered when I just try this a second ago, so it will crash probably,

16:39.920 --> 16:43.920
but was that the network connectivity down here is really poor.

16:43.920 --> 16:48.920
But as you can see, it does render, and it's pretty okay.

16:48.920 --> 16:52.920
So this site is full of SVGs, and yet they're working okay.

16:52.920 --> 16:58.920
One thing I'm particularly happy about is the fact that WebGL is working.

16:58.920 --> 17:00.920
So hopefully, there we go.

17:00.920 --> 17:03.920
So this is a little bit of shader code that's running in the browser.

17:03.920 --> 17:11.920
So I appreciate the applause, but I have to say it just worked.

17:11.920 --> 17:13.920
I just did the upgrade and it worked.

17:13.920 --> 17:16.920
And let me run this.

17:16.920 --> 17:18.920
So there's a bunch of stuff that's still turned off.

17:18.920 --> 17:20.920
So this is not up as high.

17:20.920 --> 17:25.920
So for example, WebRTC is off, is disabled, and there's a bunch of other stuff to get it to work.

17:25.920 --> 17:29.920
So hopefully this number will go higher, but it's still looking okay.

17:29.920 --> 17:32.920
So just finally, that's the demo.

17:32.920 --> 17:34.920
I just want to say, closing thoughts.

17:34.920 --> 17:37.920
So writing Dev.io I found was a really good experience.

17:37.920 --> 17:38.920
I recommend it.

17:38.920 --> 17:41.920
If you're going to do it, bear in mind it's literature, not code.

17:41.920 --> 17:43.920
Just write your thoughts.

17:43.920 --> 17:46.920
Work a couple of days in advance so that you've got a bit of a buffer,

17:46.920 --> 17:48.920
and stick to a really strict cadence.

17:48.920 --> 17:52.920
And write about what you think your tomorrow self is going to want to know

17:52.920 --> 17:55.920
about what you're doing today.

17:55.920 --> 17:57.920
And then finally, I just want to say, like I said,

17:57.920 --> 18:01.920
I had this overwhelmingly positive experience from the community,

18:01.920 --> 18:04.920
so I just wanted to thank all the people that have been reading the post.

18:04.920 --> 18:07.920
This slide took a long time to prepare, I have to tell you.

18:07.920 --> 18:11.920
But like I say, it's been really overwhelming, and I really appreciate it.

18:11.920 --> 18:14.920
And if I have forgotten you from this slide, I really do apologize.

18:14.920 --> 18:15.920
I tried my best.

18:15.920 --> 18:17.920
Thanks very much.

18:17.920 --> 18:23.920
APPLAUSE

18:23.920 --> 18:24.920
Great talk.

18:24.920 --> 18:26.920
Let's do the questions.

18:26.920 --> 18:29.920
I'm sorry, this is not related to blogging.

18:29.920 --> 18:34.920
Is it really using WebKit much easier than using Gekko?

18:34.920 --> 18:37.920
So essentially, should selfish be using WebKit?

18:37.920 --> 18:38.920
Is your question?

18:38.920 --> 18:40.920
Yeah, I mean, it's a very natural question.

18:40.920 --> 18:41.920
It's a very natural question.

18:41.920 --> 18:47.920
So what I would say is that my understanding is that it has been thought about,

18:47.920 --> 18:51.920
and the decision is that it would be more effort to do that.

18:51.920 --> 18:55.920
So all of those layers on top of the rendering engine that I showed,

18:55.920 --> 18:58.920
they are doing stuff that is selfish-y, right?

18:58.920 --> 19:01.920
And in the user interface, they are providing links between the two.

19:01.920 --> 19:04.920
There is a lot of interaction there, which is one of the reasons why this upgrade is so hard.

19:04.920 --> 19:09.920
But re-implementing all of those things for WebKit would actually be a lot of work as well.

19:09.920 --> 19:13.920
Because I've heard some complaints from other projects,

19:13.920 --> 19:19.920
I think some browser-based browser has moved from Gekko to WebKit.

19:19.920 --> 19:20.920
Right, yeah.

19:20.920 --> 19:24.920
So like I said, WebKit is set up for embedding, so it is a natural choice, I think.

19:24.920 --> 19:27.920
But I have to say, I'm actually very proud of the fact that selfish still uses Gekko.

19:27.920 --> 19:31.920
I guess most people don't care about the rendering engine,

19:31.920 --> 19:36.920
but I kind of think that is one of its attractive properties.

19:36.920 --> 19:41.920
But it is a very fair point.

19:41.920 --> 19:46.920
Since you are not working for Joll anymore, are they also somewhat involved in this process?

19:46.920 --> 19:49.920
I mean, I guess they are interested in what you are doing,

19:49.920 --> 19:52.920
and I'm guessing they will use this.

19:52.920 --> 19:53.920
Sure, well.

19:53.920 --> 19:55.920
But what is kind of to say to Stereo?

19:55.920 --> 19:56.920
That's a really good question.

19:56.920 --> 19:59.920
So I would say there are some Jolla people up on this slide.

19:59.920 --> 20:04.920
And so I still have contact with the people I worked with previously,

20:04.920 --> 20:07.920
and so this has not been done without their input.

20:07.920 --> 20:10.920
Yeah, I mean, they've been super helpful.

20:10.920 --> 20:13.920
People from Jolla have been helping me all the way through,

20:13.920 --> 20:18.920
and I don't mean just encouragement, they've been making co-changes as well to help.

20:18.920 --> 20:22.920
But I haven't had a discussion with them about what will happen eventually.

20:22.920 --> 20:25.920
So maybe eventually they'll say, actually, we don't want it with.

20:25.920 --> 20:26.920
Let's see.

20:26.920 --> 20:30.920
But yeah, so yeah, I have a lot of really good support from them.

20:33.920 --> 20:34.920
Yeah, hello.

20:34.920 --> 20:38.920
So first of all, I'm one of those Jolla people,

20:38.920 --> 20:42.920
but I'm not involved in it, but I'm going to say we follow it.

20:42.920 --> 20:45.920
And it's great that it does the work, so it's really awesome.

20:45.920 --> 20:47.920
And I forgot to speak in this microphone.

20:47.920 --> 20:53.920
And one thing I want to say, or I'm not sure if it's really a question even,

20:53.920 --> 20:57.920
I think you asked, should we use this WebKit?

20:57.920 --> 21:01.920
You have to first think WebKit or Blink.

21:01.920 --> 21:07.920
There's a big difference, and I think there are big advantages of using

21:07.920 --> 21:09.920
what's embedded, a converter versus using Blink, even,

21:09.920 --> 21:14.920
because the engine is faster, in my opinion, and doesn't use so much memory.

21:14.920 --> 21:18.920
And I was thinking, couldn't also other users contribute to it,

21:18.920 --> 21:21.920
they're not necessarily using save features,

21:21.920 --> 21:24.920
because the whole API stack, except the service browser,

21:24.920 --> 21:26.920
is not really service specific either.

21:26.920 --> 21:28.920
Is this a point?

21:28.920 --> 21:30.920
Yeah, no, I mean, that is a really good point.

21:30.920 --> 21:34.920
So in theory, it is not selfish specific.

21:34.920 --> 21:36.920
It is an embeddable version of Gecko.

21:36.920 --> 21:38.920
So I think that's true.

21:40.920 --> 21:43.920
So I have to be honest, I wouldn't know where to go to, though,

21:43.920 --> 21:47.920
to find those users who would be interested in doing that.

21:47.920 --> 21:49.920
I'm not saying they're not out there.

21:49.920 --> 21:52.920
I'm just saying I lack the experience to know, I think, it's part of the problem.

21:52.920 --> 21:56.920
My community is the selfish community, so that's what I know about.

21:56.920 --> 21:58.920
Yeah, it's a really good point, though.

21:58.920 --> 22:01.920
Yeah, I know. I just suggest, because in my opinion,

22:01.920 --> 22:06.920
healthy Web is important, and having just any variation of WebKit on it

22:06.920 --> 22:10.920
is just not healthy, in my opinion, and just try it.

22:10.920 --> 22:15.920
It's not so far off, I would say, if people take in the effort, of course.

22:15.920 --> 22:18.920
Yeah, interesting point. Thanks.

22:18.920 --> 22:21.920
Any more questions?

22:21.920 --> 22:24.920
Yeah, come around.

22:34.920 --> 22:36.920
Yeah, hi. Have you talked to Mozilla people,

22:36.920 --> 22:40.920
if they are happy to accept some of your patches even behind the flag,

22:40.920 --> 22:43.920
just to help you out and to elaborate the process?

22:45.920 --> 22:47.920
So that's a good question.

22:48.920 --> 22:50.920
I have to ask.

22:50.920 --> 22:52.920
Okay, so Bjorn has asked.

22:52.920 --> 22:55.920
I have asked about it because I have a feeling it's kind of weird

22:55.920 --> 22:58.920
that they talk about mobile, but then they just read Android,

22:58.920 --> 23:03.920
because, well, they have no iOS, because they just ask.

23:03.920 --> 23:07.920
But I don't think there's entirely interest in this idea, specifically,

23:07.920 --> 23:09.920
but just interest in mobile.

23:09.920 --> 23:11.920
I'm not sure.

23:11.920 --> 23:15.920
They say they go where the users are, so go somewhere else,

23:15.920 --> 23:18.920
and write their name.

23:18.920 --> 23:21.920
Right, so I guess it's something that we should probably push harder on,

23:21.920 --> 23:23.920
in that case. It looks like there is...

23:23.920 --> 23:27.920
And someone is not even able to know about it anymore.

23:27.920 --> 23:29.920
Yeah.

23:29.920 --> 23:33.920
Yeah, it's probably something that we could try harder to do, actually.

23:33.920 --> 23:35.920
It's a good idea.

23:35.920 --> 23:37.920
I think the biggest problem is that we are behind head,

23:37.920 --> 23:39.920
so we're not...

23:39.920 --> 23:44.920
I think we would have to push patches that we couldn't then test.

23:45.920 --> 23:47.920
Essentially.

23:47.920 --> 23:51.920
Yeah, well, my personal opinion is that Mozilla developers would love to help,

23:51.920 --> 23:54.920
because Jekyll Aging is not very popular,

23:54.920 --> 23:57.920
especially compared to other engines.

23:57.920 --> 24:02.920
So having somebody to use it, it's a good thing for them.

24:02.920 --> 24:06.920
Actually, yeah, but it would be nice to try.

24:06.920 --> 24:08.920
Give a round of applause for David.

24:08.920 --> 24:10.920
Thank you so much.

24:15.920 --> 24:17.920
Thank you.

