WEBVTT

00:00.000 --> 00:02.060
you

00:30.000 --> 00:32.060
you

01:00.000 --> 01:02.000
you

01:10.000 --> 01:16.760
Okay, I start again. No, I'm not only 15 minutes. So the S-bomb thing piece is an obligation

01:17.520 --> 01:23.640
Right and more than that, you know, it's not actually that you've got one artifact in your product

01:23.640 --> 01:27.440
You've got actually multiples and multiple artifacts, right?

01:28.080 --> 01:32.640
Some have to our containers. They are on an OCI registry some are Java files

01:32.640 --> 01:36.600
They are landing in in an Maven repo and so on and so

01:37.320 --> 01:46.040
You got all these things and then additionally you got salsa. Obviously, it's about getting security from the producer to the consumer

01:46.040 --> 01:48.040
and we were actually also

01:49.600 --> 01:55.320
Thinking about this problem and started to say hey in order to ship a product

01:55.320 --> 02:01.040
We have all these different artifacts. We and S-bombs are an additional artifact, right?

02:01.080 --> 02:08.720
So how about can we create can we use the S-bomb initiative to create an S-bomb around all these artifacts?

02:08.760 --> 02:16.760
Can we use it to describe actually more transport metadata about our product and can we more or less make it an

02:17.480 --> 02:18.520
give it an

02:18.520 --> 02:23.400
operational purpose because then the obligation is not a site initiative anymore

02:23.400 --> 02:29.480
But it's part of your intrinsic product and you can't do without and that's how you get hundred percent quality into them, right?

02:29.480 --> 02:32.880
And obviously you got to do this technology agnostic

02:33.040 --> 02:40.820
So with that we started a little bit even earlier before S-bomb became a big thing something that we now open sourced as well as

02:41.760 --> 02:43.760
open component model and

02:44.040 --> 02:46.040
I'll talk about this

02:46.440 --> 02:48.440
Again in these slides this way

02:48.520 --> 02:53.800
So we actually wrap the open component model around all the artifacts. How does it look like?

02:54.440 --> 02:59.000
Essentially, it's a piece of Yammel file forget about the syntax. It doesn't actually matter

02:59.000 --> 03:07.800
It's a semantics that's important and it's a graph of pointing to to other component models and to the artifacts to binary artifacts as well

03:07.800 --> 03:09.800
And also including

03:10.360 --> 03:12.080
The S-bombs as well

03:12.080 --> 03:18.160
So what can we do with that and I totally relate to the panel discussion because naming is important and some of the things are

03:18.360 --> 03:19.520
intrinsic

03:19.520 --> 03:21.960
Contents and some of the things are extrinsic

03:22.800 --> 03:29.360
Extrinsic content so what we can do is we can build a compliance data lake and put a compliance dashboard

03:29.360 --> 03:35.360
Now we have an identifier and connect all these scans and everything like that is bn code

03:35.400 --> 03:38.760
That's what we are actually doing. We are also having some stuff which we

03:39.480 --> 03:46.440
Which we open source around this in the same area the next thing what we can do obviously these component models are

03:47.040 --> 03:50.960
hierarchically built so we can connect internal teams and not to

03:51.080 --> 03:56.040
Reinvent the wheel anymore not to do the compliance checking over and over ten times again

03:56.040 --> 03:59.120
We just say you've got it done sign it attest it

03:59.120 --> 04:03.600
We can use it and we can also do it in with third parties

04:03.600 --> 04:05.920
So if we can get that kind of

04:06.720 --> 04:08.720
Attestation from a third-party vendor

04:09.280 --> 04:14.000
Using in standard like S-bom then yes, we we don't need to do it again

04:14.000 --> 04:21.840
We trust that a station to some degree right and now one of the inbuilt tooling for why we built ocm was

04:22.000 --> 04:24.000
We were able to do

04:24.800 --> 04:31.360
Calculate the transit of all of the artifacts that we have linked and we can actually transport the stuff from one

04:32.480 --> 04:36.440
repository or multiple repository on the public cloud

04:36.720 --> 04:43.280
Take take that as an example into the private cloud no more missed artifact right because that's the source of truth

04:43.480 --> 04:44.960
right and

04:44.960 --> 04:51.800
And with the metadata we can actually give the consumer something in hand the deja code and so on is a good example

04:52.240 --> 04:59.360
They can actually trust us, but then can verify this is in the context of a commercial product obviously right and

04:59.720 --> 05:05.240
But the other thing which is much more important here is you know all about the CI CD

05:05.240 --> 05:11.920
How do you do CI CD in order to a private cloud where your deaf people do not have access to right?

05:12.000 --> 05:18.920
So you know what we did is we basically use the same tooling because if you can do push you can also do pull and

05:19.040 --> 05:26.000
Now all of a sudden you can actually decouple CI from CD from the deployment part right and

05:26.680 --> 05:28.680
Now the question is because

05:29.280 --> 05:37.160
Got it because now you we can deliver the continuous D stands for delivery, but how do we do continuous deployment?

05:37.400 --> 05:41.740
So think about this you got to take your deaf ops thinking

05:42.280 --> 05:49.080
package it and transport it into a private or regulated environment right and be able to reproduce it and

05:49.360 --> 05:54.640
So therefore obviously you can ship all your infrastructure as code stuff in there

05:55.080 --> 05:57.800
The best thing is you do it in a declarative way

05:57.800 --> 06:04.040
And you got to do two things in order to make continuous deployment happen first of all the localization

06:04.280 --> 06:09.800
Because now you're not loading from public dot cloud or Docker hub or whatnot

06:09.800 --> 06:18.520
It's the private cloud and Docker private hub right so all of a sudden you got to say my my my container comes from that OCI

06:18.760 --> 06:20.760
repository so that's about localization

06:21.240 --> 06:22.640
right and

06:22.640 --> 06:29.040
Second is you got to in inject the configuration my secret you know all that stuff has to happen

06:29.040 --> 06:34.480
These are two things you have to do to do in order to do continuous deployment and the way we did this is

06:35.160 --> 06:40.020
Or no, I got to talk about the operational source of it now all of a sudden this S-bomb piece

06:40.020 --> 06:43.120
What we you know we by the way call it software bill of delivery

06:43.840 --> 06:51.680
The Ocm thing becomes our operational source of truth because that thing knows where every piece of component sticks in and so we obviously

06:51.800 --> 06:53.800
use git for local

06:54.400 --> 06:59.960
For for configuration and use tools like flux to do the localization with

07:00.440 --> 07:04.200
Modern github's mechanisms and then instead of doing

07:04.840 --> 07:11.760
Infrastructure as code we try to do infrastructure or configuration as data. I've heard some talks to this this

07:12.520 --> 07:18.840
Yesterday about that as well and with that we actually get to continuous deployment in arbitrary clouds

07:19.320 --> 07:20.600
and

07:20.600 --> 07:22.600
Yeah, I would say

07:23.240 --> 07:25.240
Again not my slides

07:25.440 --> 07:34.080
Colleagues slides and what we wanted to convey with this is S bombs can be actually your ring to control them all right you got just

07:34.440 --> 07:36.560
Yeah, you just got to make them

07:37.720 --> 07:41.840
Operationally valuable right now you're on an obligatory path

07:41.880 --> 07:45.920
You just have to do it nobody likes to do it, but you've got to do it

07:45.920 --> 07:52.440
And if you make this an operational source of truth, that's what we think it is and for us

07:53.160 --> 07:57.640
Ocm yeah, we're part of the puzzle. I think we're the syntax does not matter

07:57.800 --> 08:05.720
We can actually inject our stuff into the S bond specification cyclone DX or spdx, but you know we it's a parallel thing

08:06.320 --> 08:08.600
I'm gonna do it very quickly. There's some unique

08:10.240 --> 08:12.240
Characteristics which we have

08:12.560 --> 08:16.840
I'm almost out of time so I'm gonna wrap it up where technology as

08:17.440 --> 08:24.240
Agnostic we describe a software bill of delivery. We're not interested what's inside because that S bombs take care of we're only

08:25.040 --> 08:32.680
Interested about the product description and last not least we do not replace the stuff. We just wrap things have a look

08:33.400 --> 08:36.640
Ocm dot software and yeah, that's it

08:36.720 --> 08:38.720
Thank you

08:42.800 --> 08:46.920
One question yeah, okay made it in 15 minutes and I'm

