WEBVTT

00:00.000 --> 00:07.000
Hey guys, thanks for attending this talk about Calculang.

00:08.360 --> 00:11.840
Calculang is a language for calculations.

00:11.840 --> 00:15.400
So calculations, Calculang.

00:15.400 --> 00:19.280
And in Calculang we write pure functions

00:19.280 --> 00:23.480
but outside effects. So if you've probably heard that sound bite before,

00:23.480 --> 00:27.320
and no side effects means because

00:27.640 --> 00:31.280
I try to develop Calculang to be flexible.

00:31.280 --> 00:37.320
Now, I use a lot of terminology whenever I describe

00:37.320 --> 00:41.160
functions, but pure functions are similar

00:41.160 --> 00:44.240
to formulas and spreadsheets.

00:44.240 --> 00:47.440
I'm not the first person to say that. So you'll hear me

00:47.440 --> 00:51.160
mix up those terms, formulas and functions.

00:51.160 --> 00:54.880
And I want to show you the Calculang

00:55.000 --> 00:58.400
website, which is Calculang.dev.

00:58.400 --> 01:01.760
So here's the logo,

01:01.760 --> 01:05.760
and here are the things that are important. And down below we have some examples.

01:05.760 --> 01:12.760
So there are some finance examples

01:13.920 --> 01:18.040
that are simple computationally.

01:18.040 --> 01:22.240
Some simulations that are simple computationally.

01:22.840 --> 01:27.000
Some maths art examples. And some other demos

01:27.000 --> 01:31.200
of things. And I want to show you some of these.

01:31.200 --> 01:34.320
We'll start with the savings calculator, but I want to use

01:34.320 --> 01:37.000
a new experimental website.

01:37.000 --> 01:41.480
This is this. So here we're looking at

01:41.480 --> 01:45.760
savings calculator, a visualization. We're saving

01:45.760 --> 01:49.040
1000 every year for five years. We're getting interest

01:49.240 --> 01:52.520
2%. And we end up at 5,308.

01:52.520 --> 01:56.560
And over here, separate

01:56.560 --> 01:59.480
to the visualization. This visualization uses numbers from

01:59.480 --> 02:03.280
Calculang model, which is separate. And we have the formulas here

02:03.280 --> 02:06.600
and the inputs here. So we have formulas, input,

02:06.600 --> 02:11.160
output. And I want to show you the formulas.

02:11.160 --> 02:14.320
Formulas are the building blocks

02:14.320 --> 02:18.160
of calculations here. So

02:19.160 --> 02:22.600
look at the balance, the savings balance. This is the most important

02:22.600 --> 02:26.760
output here. Apart from some edge cases,

02:26.760 --> 02:30.520
the balance, the savings balance is the previous year's

02:30.520 --> 02:34.080
savings balance plus deposits, new deposits,

02:34.080 --> 02:39.360
plus interest. And we can look at interest.

02:39.360 --> 02:44.600
And it's the balance from the previous year, the previous year's balance

02:44.760 --> 02:48.280
times interest rate. So

02:48.280 --> 02:51.600
now I'll point out some things about this code.

02:51.600 --> 02:55.520
First of all, you might notice it looks like JavaScript.

02:55.520 --> 03:00.080
It looks like JavaScript because based on JavaScript, it compiles into JavaScript.

03:00.080 --> 03:04.280
Secondly, there's only two new primitives to know about Calculang

03:04.280 --> 03:08.000
formulas and inputs. Here,

03:08.000 --> 03:11.520
balance is a formula and it's blue, although you can't really see it here.

03:11.560 --> 03:15.400
And interest rate is an input and it's pink.

03:15.400 --> 03:20.120
And although balance is a formula

03:20.120 --> 03:25.240
and interest rate is an input, we can change it up here,

03:25.240 --> 03:29.200
balance is the formula we just saw.

03:29.200 --> 03:33.200
Their formulas and inputs are both implemented

03:33.200 --> 03:36.480
as JavaScript functions. So we call them,

03:36.480 --> 03:41.280
we call interest rate like it's a function.

03:41.320 --> 03:45.120
Fourthly,

03:45.120 --> 03:48.400
everything being a function is a nice uniformity,

03:48.400 --> 03:52.560
but it means there's a lot of

03:52.560 --> 03:57.120
calls and there's a lot of brackets. We've got brackets, brackets, brackets,

03:57.120 --> 04:00.760
brackets, brackets. Mostly these brackets are empty

04:00.760 --> 04:05.600
and that's because the Calculang compiler will analyze how inputs are used

04:05.600 --> 04:09.560
and it will populate brackets for you.

04:09.600 --> 04:13.120
Those last two properties

04:13.120 --> 04:17.600
are motivated by flexibility, which is something I'll speak more about

04:17.600 --> 04:21.040
tomorrow in particular today. I'm going to focus more on

04:21.040 --> 04:25.960
interactions. So we can interact with this model also

04:25.960 --> 04:30.600
from over here.

04:30.600 --> 04:33.960
These formulas. And if we double click a number,

04:33.960 --> 04:38.840
we get this overlay of the numbers that we used

04:38.880 --> 04:43.080
to calculate the number. So 508 is 5204 plus 104.

04:47.280 --> 04:49.920
And if we can navigate here,

04:49.920 --> 04:53.920
104 is 5204 times 2%.

04:58.560 --> 05:02.040
So we can see the whole

05:02.040 --> 05:06.160
workings of a calculation and dependencies.

05:09.840 --> 05:15.840
So this is showing you

05:16.040 --> 05:19.480
a visualization of numbers

05:19.480 --> 05:23.600
and interacting with the workings

05:23.600 --> 05:28.000
and the formulas. But numbers that are on this

05:28.000 --> 05:31.520
in this website. So what about meeting numbers where they are?

05:31.520 --> 05:34.960
For this next example, I'm going to ask you to use your imagination

05:35.000 --> 05:38.760
a little bit.

05:38.760 --> 05:42.960
So we can imagine this is a piece of paper somewhere. It's got these numbers on it.

05:42.960 --> 05:46.240
100,000, 4%,

05:46.240 --> 05:51.760
10 years. And it's alone and there's a repayment amount

05:51.760 --> 05:54.760
12,000, 3,000, 2,9 per year.

05:54.760 --> 05:59.080
So this 12,000, 3,000, 2,9,

05:59.080 --> 06:02.320
it was calculated so

06:02.360 --> 06:06.880
it has workings. It was probably calculated

06:06.880 --> 06:10.360
on a computer and I know it was because I calculated it with

06:10.360 --> 06:13.640
calculating. And with just this,

06:13.640 --> 06:17.640
which links

06:17.640 --> 06:21.320
the formulas and the inputs, then I can share

06:21.320 --> 06:24.320
not just the number but also the workings.

06:27.840 --> 06:30.320
So where that brings you is

06:33.320 --> 06:37.320
it's 12, 3, 2, 9. What that brings you is

06:37.320 --> 06:40.320
here, 12, 3, 2, 9.

06:40.320 --> 06:43.320
Repayment amount.

06:45.320 --> 06:49.320
And you can check the factors that are used.

06:49.320 --> 06:53.320
And I don't want to convince you if this is right

06:53.320 --> 06:56.320
or wrong. The answer might be

06:56.320 --> 07:00.320
that it depends. But just to show

07:00.320 --> 07:04.320
you a way to share workings along with a number.

07:09.320 --> 07:14.320
So this interacting with numbers and seeing the workings behind a number

07:14.320 --> 07:18.320
and sharing it is something we can debate at being useful for

07:18.320 --> 07:22.320
one person or another. But it's something we can debate for all

07:22.320 --> 07:26.320
users of numbers. And that brings me to developers.

07:27.320 --> 07:31.320
And numbers are a lot of what we do on computers, I think.

07:31.320 --> 07:36.320
So this example is a bar chart.

07:42.320 --> 07:44.320
You might

07:44.320 --> 07:48.320
anticipate what will happen. But we can move around.

07:48.320 --> 07:51.320
It's a projection of a reward.

07:52.320 --> 07:54.320
And

07:56.320 --> 07:59.320
how does this work then?

07:59.320 --> 08:02.320
There's a map.

08:03.320 --> 08:06.320
2D map.

08:11.320 --> 08:15.320
And a player in it. And there's walls. And there's a field of view.

08:22.320 --> 08:26.320
And I'll turn around and look at this direction.

08:29.320 --> 08:31.320
And

08:36.320 --> 08:39.320
this, the calculations behind this

08:39.320 --> 08:43.320
to show you how the bar chart works, it's a

08:46.320 --> 08:50.320
we split the field of view. To produce this image,

08:50.320 --> 08:54.320
we split this field of view into many different directions.

08:54.320 --> 08:59.320
And we cast imaginary rays in every direction until they hit a wall.

08:59.320 --> 09:04.320
And then we calculate a distance. And for rays that travel far,

09:04.320 --> 09:08.320
that have a long distance, like these ones, then we give them

09:08.320 --> 09:14.320
small bars. And for rays which are interrupted by a wall at a short

09:14.320 --> 09:19.320
distance, then we give them big bars.

09:21.320 --> 09:25.320
And these bars here are very big because they catch this

09:25.320 --> 09:28.320
green block right beside us.

09:30.320 --> 09:35.320
Now, we can go deeper and we can,

09:35.320 --> 09:40.320
with a few clicks, see the workings as we interact with this.

09:43.320 --> 09:48.320
And look at the formulas for the distance.

09:48.320 --> 09:53.320
So, this distance is,

09:53.320 --> 09:56.320
there's two distances here.

09:57.320 --> 10:01.320
We can see the steps of the algorithm by highlighting here.

10:01.320 --> 10:04.320
This is the force intersection with the horizontal grid line.

10:04.320 --> 10:07.320
There's no wall. This is the second. There's no wall.

10:07.320 --> 10:10.320
This is the toward. And there's a wall. So we stop.

10:10.320 --> 10:13.320
We can calculate the distance.

10:14.320 --> 10:20.320
Now, there was a bug here. I don't know if you saw it.

10:20.320 --> 10:25.320
If we go back, so we can travel back to our gameplay.

10:28.320 --> 10:32.320
Here. There's something wrong with,

10:32.320 --> 10:35.320
this should be a smooth edge.

10:35.320 --> 10:38.320
At least this bar should not be so small.

10:38.320 --> 10:42.320
From the map, it looks like, from the time here,

10:42.320 --> 10:46.320
it looks like the ray is going through this corner, which it shouldn't.

10:46.320 --> 10:49.320
And so, can we figure out why?

10:49.320 --> 10:52.320
If we go through the workings.

10:57.320 --> 11:00.320
There was a check here. No wall, no wall, no wall.

11:00.320 --> 11:08.320
Wall. But, here, there should be a wall.

11:08.320 --> 11:12.320
So this check looks wrong. Let's look at what's going on in here.

11:15.320 --> 11:19.320
So X is like two and a little bit, and Y is three.

11:19.320 --> 11:23.320
X two and a little bit, three is a blue wall.

11:23.320 --> 11:26.320
So, that seems wrong.

11:26.320 --> 11:29.320
This formula, there are checks for the boundaries at the edges.

11:29.320 --> 11:32.320
So, that's not relevant here.

11:32.320 --> 11:36.320
And we have this lookup against the map to find the walls.

11:36.320 --> 11:43.320
And there is a subtraction here of a little value, which is a fudge.

11:43.320 --> 11:49.320
And it looks like our X is just very close to two.

11:49.320 --> 11:52.320
And that fudge throws it down to one, and then it doesn't find a wall.

11:52.320 --> 11:55.320
So, we're hit with this bug.

11:55.320 --> 12:01.320
Now, I'm going to show you how we can fix that by making the fudge smaller,

12:01.320 --> 12:05.320
and I won't remove it because it says it's necessary.

12:06.320 --> 12:11.320
So...

12:21.320 --> 12:23.320
Okay, thanks.

12:23.320 --> 12:30.320
So now we can compile with our change, and we can hot reload.

12:31.320 --> 12:34.320
So now we can see a fixed wall.

12:34.320 --> 12:40.320
In case we missed it, we can go back and forward.

12:40.320 --> 12:43.320
So before, after.

12:43.320 --> 12:50.320
We can travel through more gameplay just to make sure there's no regressions with that.

12:50.320 --> 12:55.320
And these things are fine, so...

12:55.320 --> 13:00.320
So that's our change met, and we're happy with that.

13:05.320 --> 13:10.320
So here we saw interacting with a visualization,

13:10.320 --> 13:15.320
but a simulation of a world,

13:15.320 --> 13:22.320
and some developer things like hot reload, time travel,

13:22.320 --> 13:26.320
which I think are well suited to functional programming,

13:26.320 --> 13:29.320
which Caglang is close to.

13:29.320 --> 13:34.320
And one more example.

13:34.320 --> 13:39.320
Whereas this one is a bar chart, this next example is a scatterplot.

13:39.320 --> 13:46.320
We've got stars, and we can travel through them.

13:47.320 --> 13:50.320
I can speed this up.

13:56.320 --> 14:05.320
And we can say that the state of this visualization is calculated by Caglang,

14:05.320 --> 14:11.320
and on the left we can see the state and the workings for that state.

14:11.320 --> 14:13.320
And up this in real time.

14:13.320 --> 14:18.320
And I was watching this from start to finish,

14:18.320 --> 14:21.320
and then I noticed that there is some redundant code here.

14:21.320 --> 14:24.320
This condition is never false.

14:30.320 --> 14:33.320
Now, in these examples...

14:34.320 --> 14:46.320
In these examples, I showed some interactions with numbers and their formulas and their workings,

14:46.320 --> 14:51.320
and a way to share numbers with the workings.

14:51.320 --> 14:58.320
We looked at numbers in the world, imaginary,

14:59.320 --> 15:04.320
and we looked at numbers for a simulated world.

15:04.320 --> 15:13.320
But the enabler for all of Verben I showed is this.

15:13.320 --> 15:18.320
It's the separation of concerns and it's the pure functions,

15:18.320 --> 15:23.320
which is the same enabler for the aims of Caglang,

15:24.320 --> 15:28.320
which to be shareable and communicable,

15:28.320 --> 15:31.320
it helps to not have programming mixed in with your numbers,

15:31.320 --> 15:35.320
to be shareable and communicable as far as numbers is concerned.

15:35.320 --> 15:42.320
To be transparent, it helps to work with different views to be interoperable,

15:42.320 --> 15:45.320
so that tools can give different perspectives.

15:45.320 --> 15:47.320
To be verifiable, it helps to be pure,

15:47.320 --> 15:50.320
so that the same inputs going into a function,

15:50.320 --> 15:53.320
you can expect a predictable output.

15:53.320 --> 15:58.320
Flexibility and reusability is this.

15:58.320 --> 16:01.320
These two are things I'm going to talk about tomorrow

16:01.320 --> 16:06.320
in declarative and minimalistic computing, dev room.

16:06.320 --> 16:09.320
That's all for my talk today.

16:09.320 --> 16:14.320
Now, if there are any questions, I'll be happy to take some.

16:20.320 --> 16:23.320
Thank you.

