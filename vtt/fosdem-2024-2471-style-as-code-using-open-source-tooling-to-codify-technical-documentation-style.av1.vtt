WEBVTT

00:00.000 --> 00:13.000
Sorry for everyone who heard nothing.

00:13.000 --> 00:14.800
So reading good documentation is easy.

00:14.800 --> 00:16.600
I'd say deceptively easy.

00:16.600 --> 00:19.680
You don't really realize you're reading good documentation.

00:19.680 --> 00:22.320
You only realize when you're reading bad stuff.

00:22.320 --> 00:24.320
Writing good documentation is easy to read.

00:24.320 --> 00:25.320
It's hard.

00:25.320 --> 00:28.680
That sentence, it was kind of hard to write and read.

00:28.680 --> 00:31.280
I think I said it right.

00:31.280 --> 00:34.160
And so I wanted to lay out a few things that I think make

00:34.160 --> 00:37.440
good documentation and talk about how Vail helps me

00:37.440 --> 00:38.200
achieve these.

00:38.200 --> 00:40.360
So correctness, for sure.

00:40.360 --> 00:42.760
Your doc should actually represent the thing that

00:42.760 --> 00:44.040
they're documenting.

00:44.040 --> 00:47.400
But I think that they also need to be clear.

00:47.400 --> 00:50.920
And that means not using confusing language.

00:50.920 --> 00:54.120
And also being consistent, I think, helps clarity.

00:54.120 --> 00:57.320
So if you can enforce style across your documentation,

00:57.320 --> 01:02.280
you can have your readers experience the same thing

01:02.280 --> 01:03.440
wherever they are in your docs.

01:03.440 --> 01:07.440
And they can scroll down this bit and find that information

01:07.440 --> 01:10.840
given the text that they're used to see.

01:10.840 --> 01:12.400
And also it needs to be inclusive.

01:12.400 --> 01:15.880
And we're writing docs for people primarily.

01:15.880 --> 01:17.200
I'm sure crawlers as well.

01:17.200 --> 01:20.040
But people are reading these.

01:20.040 --> 01:24.200
We shouldn't have cultural biases, stereotyping of race,

01:24.200 --> 01:28.720
gender, or any cultural stereotypes in our documentation.

01:28.720 --> 01:30.640
And accessibility is part of that.

01:30.640 --> 01:33.520
I think from the Google Style Guide, the World Health

01:33.520 --> 01:37.520
Organization estimates that 15% of people have an

01:37.520 --> 01:39.120
accessibility need.

01:39.120 --> 01:41.120
That's about 1 billion plus people.

01:41.120 --> 01:46.160
And if you write with that in mind, not just that 15%

01:46.160 --> 01:50.200
benefit, everyone benefits from more accessible docs.

01:50.200 --> 01:53.120
So I'm sure, again, preaching to the choir, we all know what

01:53.160 --> 01:55.320
a good doc should be.

01:55.320 --> 01:57.040
But how do you achieve that?

01:57.040 --> 01:58.640
You could use a style guide.

01:58.640 --> 02:01.320
You could use one of the many style guides.

02:01.320 --> 02:02.640
They're all huge.

02:02.640 --> 02:06.080
And they all are constantly updated.

02:06.080 --> 02:07.840
And you've got to pick one or many.

02:07.840 --> 02:11.920
And maybe they're not perfect for your job.

02:11.920 --> 02:14.920
And I think there's three major challenges for using them.

02:14.920 --> 02:16.920
You've got to memorize all of those rules.

02:16.920 --> 02:20.040
And there are too many.

02:20.040 --> 02:23.040
Even our sort of smaller Grafana style guide, there's

02:23.040 --> 02:25.160
too many rules to remember.

02:25.160 --> 02:27.120
You need to be able to explain them.

02:27.120 --> 02:29.360
And that's, to yourself first, justify the rule.

02:29.360 --> 02:31.960
But also, when you're sharing knowledge with your peers, you

02:31.960 --> 02:34.960
want to say, you should do this because not you should do

02:34.960 --> 02:36.080
this.

02:36.080 --> 02:39.120
You don't want to be punishing people, I think, of the

02:39.120 --> 02:41.200
shellcheck linter for bash.

02:41.200 --> 02:42.920
That esoteric language is awful.

02:42.920 --> 02:45.280
But shellcheck kind of makes you feel like you're learning

02:45.280 --> 02:46.920
how to write good bash.

02:46.920 --> 02:50.040
So you want explanation of style.

02:50.040 --> 02:51.160
And you need exceptions.

02:51.160 --> 02:52.640
It's a creative task.

02:52.640 --> 02:55.920
There's known exceptions for all of the style rules.

02:55.920 --> 02:59.160
And then there are going to be times where you as a writer

02:59.160 --> 03:03.200
or anyone as a writer might want to either subvert the

03:03.200 --> 03:05.720
rule or just break it in a small instance.

03:05.720 --> 03:09.240
So it's got to be easy to get out of these style.

03:09.240 --> 03:11.280
You can't block your entire CI because somebody wrote in

03:11.280 --> 03:14.160
passive voice.

03:14.160 --> 03:17.200
So this is where Veil comes in.

03:17.200 --> 03:19.520
And I'm going to let Veil speak for itself.

03:19.520 --> 03:22.360
This is its own words for why he should use it.

03:22.400 --> 03:24.160
It enforces your own style.

03:24.160 --> 03:26.840
And it goes beyond traditional writing related rules.

03:26.840 --> 03:31.480
And we'll look at how you can write your own style in Veil.

03:31.480 --> 03:33.640
It understands markup really well.

03:33.640 --> 03:35.640
So it doesn't matter if you're writing in Markdown or

03:35.640 --> 03:37.880
ASCII Doc or Restructured Text.

03:37.880 --> 03:40.200
You won't be suffering for that.

03:40.200 --> 03:42.640
And you won't be punished for the special syntactic

03:42.640 --> 03:44.320
elements in each of those language.

03:44.320 --> 03:46.000
Veil cares about the pros.

03:46.000 --> 03:50.400
So short codes in Hugo do not affect readability indexes

03:50.400 --> 03:51.800
when you use them in Veil.

03:51.840 --> 03:53.680
And it's 100% offline.

03:53.680 --> 03:55.520
You never get sent to a remote server.

03:55.520 --> 03:58.560
It's just a CLI tool that you can run in continuous

03:58.560 --> 03:59.080
integration.

03:59.080 --> 04:01.640
So you have exactly the same experience locally as you

04:01.640 --> 04:03.920
would have in your CI.

04:03.920 --> 04:06.160
Not that all cloud services are bad.

04:06.160 --> 04:08.680
I think some are very important.

04:08.680 --> 04:09.600
It's fast.

04:09.600 --> 04:10.920
It can be used anywhere.

04:10.920 --> 04:14.120
And yeah, in CI and CD.

04:14.120 --> 04:18.800
So let's get started with Veil.

04:18.800 --> 04:21.120
So Veil uses styles.

04:21.120 --> 04:25.360
A collection of rules that you define or can borrow from

04:25.360 --> 04:27.080
other packages.

04:27.080 --> 04:29.280
And I'm going to talk a little bit about each of the major

04:29.280 --> 04:32.160
extension points to introduce you to the kind of rules you

04:32.160 --> 04:36.320
could write and then show you some of our Grafana rules.

04:36.320 --> 04:38.320
And then we'll look at how you can set it up in a project

04:38.320 --> 04:39.320
as well.

04:39.320 --> 04:41.600
So the most simple rule is existence.

04:41.600 --> 04:45.120
That is just, is this word somewhere in the page or in the

04:45.120 --> 04:46.800
scope?

04:46.800 --> 04:49.320
And perhaps you don't want certain words to appear.

04:49.360 --> 04:51.320
This is when you would use that rule.

04:51.320 --> 04:54.840
In a slightly extended example, if you want to replace that

04:54.840 --> 04:58.200
word with another, you use substitution.

04:58.200 --> 05:00.960
For Grafana, I think probably the most important one is

05:00.960 --> 05:03.640
alert manager, which can be spelt at least four different

05:03.640 --> 05:07.400
ways, but should only be spelt one.

05:07.400 --> 05:09.560
Then you have occurrence, which checks that you have a

05:09.560 --> 05:12.920
minimum or maximum number of times of an occurrence of a

05:12.920 --> 05:14.840
token.

05:14.840 --> 05:17.440
I haven't written any rules for this yet, but maybe you want

05:17.440 --> 05:19.840
to make sure you say please a certain number of times, but

05:19.840 --> 05:24.280
not too many times so that the compiler cares.

05:24.280 --> 05:25.880
Consistency.

05:25.880 --> 05:29.080
So this one is pretty useful for if you've got that

05:29.080 --> 05:32.240
British-English, American-English divide.

05:32.240 --> 05:36.000
But also other words can just be confusing, like advisor,

05:36.000 --> 05:37.040
advisor.

05:37.040 --> 05:39.920
I'm not actually sure which side of the Atlantic, which one

05:39.920 --> 05:40.880
is correct.

05:40.880 --> 05:43.240
And this just says, if you've used one in the document, you

05:43.240 --> 05:44.200
can't have used the other.

05:44.200 --> 05:46.800
So just stick with one of the two.

05:46.840 --> 05:50.360
We do use US-English in ours, but that you can enforce with

05:50.360 --> 05:52.440
dictionaries as well.

05:52.440 --> 05:56.560
Conditional is most commonly used for abbreviations, I

05:56.560 --> 05:57.760
would say.

05:57.760 --> 06:01.400
If you present an abbreviation in the doc, you need to have

06:01.400 --> 06:03.880
first explained it elsewhere.

06:03.880 --> 06:08.080
So you can write rules for exactly that.

06:08.080 --> 06:12.240
Capitalization, headings typically have sentence

06:12.240 --> 06:13.000
casing.

06:13.000 --> 06:14.880
Well, they do at Grafana.

06:14.880 --> 06:16.960
You can also enforce title casing.

06:16.960 --> 06:19.360
I don't think you can enforce arbitrary programming

06:19.360 --> 06:23.920
casing, like snake casing, pascal casing.

06:23.920 --> 06:24.440
Maybe.

06:24.440 --> 06:25.920
I haven't tried to write the rule yet, but haven't

06:25.920 --> 06:27.920
needed to.

06:27.920 --> 06:29.040
And then sequence.

06:29.040 --> 06:30.960
I think this is one of the most powerful ones that I

06:30.960 --> 06:32.640
haven't yet used.

06:32.640 --> 06:37.360
Vale tokenizes every word and also applies the natural

06:37.360 --> 06:39.680
language token to each of those words, too.

06:39.680 --> 06:43.240
So you can write rules that are not just don't use that

06:43.240 --> 06:48.760
word, but don't use an adjective and a noun in

06:48.760 --> 06:52.160
this particular grammatical context.

06:52.160 --> 06:55.920
I've not written any yet, but it helps you write much more

06:55.920 --> 06:58.320
appropriate rules with fewer exceptions than if you're just

06:58.320 --> 07:01.280
focusing on the raw text.

07:01.280 --> 07:04.720
And finally, if none of these are suitable, there's also a

07:04.720 --> 07:08.520
scripting language in the Tango scripting language, and you

07:08.520 --> 07:09.960
can use that for arbitrary logic.

07:10.000 --> 07:13.480
And I skipped one, which is metric.

07:13.480 --> 07:15.760
There's a bunch of built-in variables that Vale exposes

07:15.760 --> 07:18.200
like the counter words, the number of syllables, the

07:18.200 --> 07:19.960
number of sentences, paragraphs.

07:19.960 --> 07:21.520
And you can use those to implement

07:21.520 --> 07:23.480
readability indexes.

07:23.480 --> 07:26.200
I think all of the major readability indexes are

07:26.200 --> 07:29.320
already implemented in some form.

07:29.320 --> 07:29.600
Cool.

07:29.600 --> 07:32.600
So whistle stop tour of pretty much everything you can do

07:32.600 --> 07:34.120
to write your own styles.

07:34.120 --> 07:37.800
I thought I'd show off a couple that we have at Grafana.

07:37.800 --> 07:39.080
This one just checks.

07:39.080 --> 07:40.920
It's one of the most simple rules for the existence of the

07:40.920 --> 07:44.320
word will and says, don't use that.

07:44.320 --> 07:45.880
Engineers have a habit of talking about what a

07:45.880 --> 07:48.800
process will do when it's actually doing it.

07:48.800 --> 07:52.240
So we should talk in the present tense.

07:52.240 --> 07:58.280
And I think this highlights, so first I can talk about the

07:58.280 --> 07:58.880
structure here.

07:58.880 --> 08:02.080
It's a YAML file, so not only engineers can write it, but

08:02.080 --> 08:05.520
technical writers, every contributor.

08:05.520 --> 08:09.440
You may have reservations about YAML, but it is a lot of

08:09.440 --> 08:12.200
places, so a lot of people can read and write it.

08:12.200 --> 08:14.200
This one extends the existence rule.

08:14.200 --> 08:17.920
It sets a warning level, which is one of the three levels

08:17.920 --> 08:18.920
you can have.

08:18.920 --> 08:22.800
Suggestion, warning, and error.

08:22.800 --> 08:25.960
Typically, what my recommendation would be, have

08:25.960 --> 08:28.480
suggestions on when you're developing locally, but don't

08:28.480 --> 08:29.520
let CI block on that.

08:29.520 --> 08:32.120
Again, passive voice is not a reason to not build your site.

08:32.120 --> 08:34.760
But you might want to be reminded that, yeah, you just

08:34.760 --> 08:37.600
keep writing in passive voice.

08:37.600 --> 08:41.680
Here we provide a link to the reasons for the existence of

08:41.680 --> 08:42.920
this rule.

08:42.920 --> 08:46.000
Grafana, we default to the Google style guide, but have

08:46.000 --> 08:46.880
our own rules as well.

08:46.880 --> 08:49.760
So in this case, the Google style guide is exactly what we

08:49.760 --> 08:51.400
do.

08:51.400 --> 08:54.440
And the message field, I think, is the most important, going

08:54.440 --> 08:56.040
back to explanation.

08:56.040 --> 09:00.200
This is your opportunity to tell your users why the rule

09:00.200 --> 09:01.120
should exist.

09:01.160 --> 09:05.680
And so when the bot in CI says you've done a thing wrong,

09:05.680 --> 09:08.560
they hopefully can understand why they should make the

09:08.560 --> 09:10.440
change.

09:10.440 --> 09:12.360
My experience with bots is actually the

09:12.360 --> 09:13.800
opposite of yours.

09:13.800 --> 09:16.440
I feel like if I were to say, in a poor request, please,

09:16.440 --> 09:18.480
could you do this, people will listen.

09:18.480 --> 09:22.480
But if a bot says you've done this wrong, it feels like a

09:22.480 --> 09:24.320
punishment.

09:24.320 --> 09:26.400
So I'm trying to make the bots as friendly as possible.

09:26.400 --> 09:28.800
And so you've got to write friendly messages.

09:28.800 --> 09:30.440
And there's substitution in there as well.

09:30.440 --> 09:33.280
But we've only got one token, so that percent s is always

09:33.280 --> 09:35.520
will in this rule.

09:35.520 --> 09:37.520
We've got a slightly more complicated one here, which

09:37.520 --> 09:39.640
extends substitution rules.

09:39.640 --> 09:42.640
And we've agreed at the company to use dialogue box

09:42.640 --> 09:48.000
instead of modal or Google recommends dialogue.

09:48.000 --> 09:50.320
But I feel like more generally, people understand the

09:50.320 --> 09:54.320
window that pops up as a dialogue box.

09:54.320 --> 09:56.920
This one, because the Google style is different, we link

09:56.920 --> 09:59.320
to our own open source documentation, right?

09:59.320 --> 10:01.720
This is the first tool kit, where we have our entire

10:01.720 --> 10:03.920
Grafana style documented.

10:03.920 --> 10:08.520
And this rule has a swap field, which says if you see the

10:08.520 --> 10:11.600
thing on the left, replace it with the one on the right.

10:11.600 --> 10:12.960
Dialogue box appears.

10:12.960 --> 10:14.600
Should be dialogue box opens.

10:14.600 --> 10:16.520
A modal should be a dialogue box.

10:16.520 --> 10:19.480
And then a nice feature of Vale is it's written in go,

10:19.480 --> 10:23.480
which means RE2 syntax for regular expressions, except

10:23.480 --> 10:26.440
they've also extended their engine with a positive look

10:26.440 --> 10:29.200
head, negative look head, and their look

10:29.200 --> 10:30.360
behind equivalents.

10:30.360 --> 10:34.360
So you can write much more expressive rules more easily.

10:34.360 --> 10:37.160
So this says look for dialogue as long as it's not

10:37.160 --> 10:41.720
followed by box, and replace it with dialogue box.

10:41.720 --> 10:43.800
Cool.

10:43.800 --> 10:44.920
How do I do for time?

10:44.920 --> 10:47.560
I'm rushing a little bit, I think.

10:47.560 --> 10:48.880
14 minutes.

10:48.880 --> 10:51.800
OK, well, we'll just have time for questions.

10:51.800 --> 10:56.280
So let's configure Vale for a project.

10:56.280 --> 10:58.600
This is the configuration file.

10:58.600 --> 11:02.720
And I think this shows the difference between what you

11:02.720 --> 11:04.720
expect the engineer to work with and what you expect all

11:04.720 --> 11:06.440
your other contributors to work with.

11:06.440 --> 11:10.560
Vale uses YAML for its rules, but it uses INI files for

11:10.560 --> 11:12.320
its configuration, because that's what the engineers have

11:12.320 --> 11:12.800
to write.

11:12.800 --> 11:14.960
And it's a better format.

11:14.960 --> 11:19.680
So here we've got a definition of packages.

11:19.680 --> 11:22.800
These are all preexisting styles that you can use, and

11:22.800 --> 11:25.880
immediately start linting your documentation with.

11:25.880 --> 11:29.360
I've put a bunch up, Microsoft, Google, Red Hat.

11:29.360 --> 11:33.000
Hugo is a config package, which I haven't talked about in

11:33.000 --> 11:36.600
this presentation, but it tells Vale how to ignore certain

11:36.600 --> 11:39.600
Hugo tokens, like the syntactic elements that are not

11:39.600 --> 11:41.520
important to the language.

11:41.520 --> 11:45.160
And shamelessly, I've put the very, very first release of

11:45.160 --> 11:48.720
the Grafana style up there as well if you want to use it.

11:48.720 --> 11:51.680
You can set many, many other configuration things, but here

11:51.680 --> 11:55.000
is the minilevel is set to warning.

11:55.040 --> 11:58.640
And styles path is where Vale stores the packages when it

11:58.640 --> 12:02.040
gets them, because it's got a handy command to just pull

12:02.040 --> 12:05.920
these for you, so you don't have to worry.

12:05.920 --> 12:10.200
And then that final section is how you control individual

12:10.200 --> 12:13.000
rules for different file kinds.

12:13.000 --> 12:15.720
So in this case, I say all files are treated the same.

12:15.720 --> 12:17.440
I say use just the Grafana style.

12:17.440 --> 12:19.760
So even though I've collected all of these packages, I'm

12:19.760 --> 12:22.800
only concerning myself with the Grafana one at the moment.

12:22.800 --> 12:26.640
And even though this is nonsensical, I wanted to show

12:26.640 --> 12:29.720
how you would turn off a rule globally if you wanted.

12:29.720 --> 12:32.560
So this is turning off the exclamation mark rule for

12:32.560 --> 12:33.720
Google.

12:33.720 --> 12:36.000
Since I'm only using the Grafana style, that's not

12:36.000 --> 12:39.040
important anyway, but replace Google for Grafana, and it

12:39.040 --> 12:41.320
would do that.

12:41.320 --> 12:41.880
Cool.

12:41.880 --> 12:46.160
So demo time, just so I have an excuse to get Emacs out.

12:46.160 --> 12:50.840
Can I make this full screen?

12:50.840 --> 12:51.520
Cool.

12:51.560 --> 12:53.640
And well, that's the whole demo spot there.

12:56.160 --> 13:00.240
If I hit here, we're in the directory.

13:00.240 --> 13:02.440
And you can see I've got a test file.

13:02.440 --> 13:05.040
I've got my veil.ino file.

13:05.040 --> 13:07.000
I've got a hidden folder, which is where veil's storing

13:07.000 --> 13:09.080
its stuff in case the network goes down.

13:09.080 --> 13:13.240
And I can't sync and then get, because everybody should be

13:13.240 --> 13:14.120
doing Docs' code.

13:14.120 --> 13:16.560
Sorry, I wrote this talk prerequisite, sort of like

13:16.560 --> 13:17.520
Docs are already code.

13:17.520 --> 13:21.640
So it's good that we followed from the DocOps talk.

13:21.640 --> 13:22.680
So here's my test file.

13:22.680 --> 13:25.120
And I have written a markdown file that says, testing the

13:25.120 --> 13:25.520
veil.

13:25.520 --> 13:27.520
Then to whoops, I've made a typo.

13:27.520 --> 13:30.080
Grafana is cool exclamation mark.

13:30.080 --> 13:31.520
All of those things are true.

13:34.080 --> 13:38.400
And here is my actual configuration for veil in this

13:38.400 --> 13:39.480
little repo.

13:39.480 --> 13:41.440
I'm going to pull the Hugo one.

13:41.440 --> 13:44.760
I didn't use any Hugo, but it's just default for me now.

13:44.760 --> 13:46.720
I'm going to pull the Google package.

13:46.720 --> 13:50.000
And I'm also going to use that Grafana style that I've got.

13:50.000 --> 13:51.600
I'm going to include suggestions, although I don't

13:51.600 --> 13:54.920
think I made any suggestion mistakes.

13:54.920 --> 13:56.840
And I'm going to use both of those styles in this.

13:56.840 --> 14:00.480
So I can head back to the command line.

14:00.480 --> 14:04.040
And I can run the first command, veil sync.

14:04.040 --> 14:06.360
And that's showing up OK.

14:06.360 --> 14:09.240
So this is how you get all your packages.

14:09.240 --> 14:10.840
It's very easy.

14:10.840 --> 14:13.200
Now I can suddenly lint all of my documentation with all of

14:13.200 --> 14:15.000
the Google style guide.

14:15.000 --> 14:17.280
And I'm going to run it on that test file.

14:17.280 --> 14:19.720
And here's the output that kind of exists on that title

14:19.720 --> 14:20.800
slide.

14:20.800 --> 14:22.440
You can see it's quite human readable.

14:22.440 --> 14:24.160
It tells you the rule on the right.

14:24.160 --> 14:26.560
It tells you exactly where it is on the file on the left.

14:26.560 --> 14:28.840
And then it gives you the message.

14:28.840 --> 14:29.960
It's very human readable.

14:29.960 --> 14:31.040
It's not very machine readable.

14:31.040 --> 14:34.200
There's other output formats that are machine readable.

14:34.200 --> 14:37.120
So if you want to do things with this output, you would use

14:37.120 --> 14:37.800
those.

14:37.800 --> 14:41.400
You can also, I think, provide go templates and do very

14:41.400 --> 14:44.760
expressive output with that.

14:44.760 --> 14:45.400
Cool.

14:45.400 --> 14:50.840
Let's go back to the presentation, which is in here.

14:50.840 --> 14:52.280
Where is my presentation?

14:56.920 --> 14:58.000
There we go.

14:58.000 --> 15:00.080
Cool.

15:00.080 --> 15:00.600
Right.

15:00.600 --> 15:02.800
So I wanted to talk a little bit.

15:02.800 --> 15:04.160
I know this is about veil.

15:04.160 --> 15:05.360
Thank you.

15:05.360 --> 15:11.160
About an additional tool, DocOps tool, ReviewDog, which if

15:11.160 --> 15:14.240
you are trying to introduce style to an organization that

15:14.280 --> 15:17.800
has documentation a lot, or even a little, but certainly if

15:17.800 --> 15:20.200
it has a lot, you need a way of making those changes

15:20.200 --> 15:21.400
incrementally.

15:21.400 --> 15:24.000
And you could do that one rule at a time across the Docs,

15:24.000 --> 15:26.200
but that's quite painful too.

15:26.200 --> 15:29.640
Or you can do it as people make changes.

15:29.640 --> 15:33.520
I only want to make sure that anything new is conforming to

15:33.520 --> 15:34.200
the style.

15:34.200 --> 15:36.800
And hopefully, eventually, everything gets churned and

15:36.800 --> 15:39.720
you now have perfectly styled documentation.

15:39.720 --> 15:41.960
And ReviewDog lets you do that.

15:41.960 --> 15:44.600
It's a command line tool again, similar to veil.

15:44.600 --> 15:46.280
You don't need to run it in the cloud.

15:46.280 --> 15:48.400
You can run it locally and in CI.

15:48.400 --> 15:52.000
And it takes as input, linting output from any tool.

15:52.000 --> 15:56.480
And it is also aware of unified diffs.

15:56.480 --> 15:58.880
And I'll talk a bit about that.

15:58.880 --> 16:02.880
And it can comment on all of the major forges, so GitHub,

16:02.880 --> 16:06.640
GitLab, others that I can't remember the name of.

16:06.640 --> 16:11.920
And you can tell it to post comments on pro requests.

16:11.920 --> 16:14.160
So you can get that response automatically.

16:14.160 --> 16:15.200
Almost human response.

16:15.200 --> 16:17.840
It's got a little icon.

16:17.840 --> 16:20.240
Especially in GitHub, it will give you suggestions as well.

16:20.240 --> 16:23.960
If you provide ReviewDog the action to fix the problem, it

16:23.960 --> 16:26.600
will post that suggestion automatically for the user.

16:26.600 --> 16:28.160
And it knows about diff context.

16:28.160 --> 16:31.520
So if you've only added and modified these three lines, it

16:31.520 --> 16:33.320
will only comment on those three lines.

16:33.320 --> 16:38.320
It will ignore the swans of other linting output that

16:38.320 --> 16:40.560
Veil might have thrown.

16:40.560 --> 16:42.840
I can show you a little picture of what that looks like.

16:42.840 --> 16:46.240
This is on GitHub.

16:46.240 --> 16:49.080
It's not documentation, but it's a bit of linting from

16:49.080 --> 16:49.840
Golint.

16:49.840 --> 16:53.840
If that was a formatting thing, it could tell you to, it

16:53.840 --> 16:54.560
would give you a suggestion.

16:54.560 --> 16:56.920
You can just commit a suggestion.

16:56.960 --> 17:03.400
Hayabusa is the lead maintainer of this project.

17:03.400 --> 17:08.200
And I think, so going back to the CI part, one of the other

17:08.200 --> 17:12.600
powerful parts of ReviewDog is that if you've got CI jobs,

17:12.600 --> 17:16.120
or if you've got generated files or formatted files, the

17:16.120 --> 17:19.520
CI workflow just becomes run that thing, that generation in

17:19.520 --> 17:21.280
CI, and then tell ReviewDog about it.

17:21.280 --> 17:25.960
Because it just runs a diff on the Git directory and uses

17:26.000 --> 17:28.680
that output to give you the suggestions automatically.

17:28.680 --> 17:33.040
So you don't have to write any of that glue.

17:33.040 --> 17:37.600
So I wanted to throw a shout out to Joseph and Hayabusa.

17:37.600 --> 17:41.400
And also everyone here that has contributed to Veil, it's

17:41.400 --> 17:45.440
been brilliant using the two projects.

17:45.440 --> 17:48.600
And I wanted to thank everyone here for coming.

17:48.600 --> 17:50.080
I did not expect it to be a full room.

17:50.080 --> 17:52.360
I should have done.

17:52.360 --> 17:55.120
We have some plugs here.

17:55.120 --> 17:58.360
The right is Toolkit that Grafana uses to maintain its

17:58.360 --> 17:59.360
style.

17:59.360 --> 18:01.520
If you want some pointers for style, I think that's a great

18:01.520 --> 18:02.840
place to start.

18:02.840 --> 18:04.120
It's an open source repository.

18:04.120 --> 18:08.000
If you do use it or have any issues with it, do raise them

18:08.000 --> 18:09.640
there and we'll try and fix them.

18:09.640 --> 18:13.360
And also as a company, we have a Docs channel in our

18:13.360 --> 18:16.240
community Slack.

18:16.240 --> 18:17.280
I think that's everything.

18:17.280 --> 18:20.680
So a little quick, but plenty of time for questions,

18:20.680 --> 18:21.680
hopefully.

18:22.360 --> 18:24.360
Thank you.

18:24.360 --> 18:26.360
Thanks.

18:26.360 --> 18:28.360
Thanks, guys.

18:28.360 --> 18:30.360
Thanks.

18:30.360 --> 18:31.360
All right.

18:31.360 --> 18:32.360
There's one right over there.

18:32.360 --> 18:35.360
The question is, how do you suppress warnings?

18:35.360 --> 18:39.360
So for example, I'm using exclamation mark and I have very

18:39.360 --> 18:41.360
reason for using it.

18:41.360 --> 18:42.360
Yes.

18:42.360 --> 18:44.360
And can I do this while I make specific comments and ask

18:44.360 --> 18:46.360
you, Dr.

18:46.360 --> 18:47.360
I'm so glad you asked that question.

18:47.360 --> 18:50.360
So the question is, I have broken a rule in my document

18:50.360 --> 18:53.360
and I want to tell Vale ignore that instance.

18:53.360 --> 18:54.360
I did it on purpose.

18:54.360 --> 18:58.360
And in my review note, in my speaker notes that I didn't have

18:58.360 --> 19:01.360
up, I had exactly this covered.

19:01.360 --> 19:04.360
So Vale, you can turn off individual rules for individual

19:04.360 --> 19:05.360
files.

19:05.360 --> 19:06.360
You can turn them off globally.

19:06.360 --> 19:07.360
But I see your head go down.

19:07.360 --> 19:10.360
But also it knows in each of the source files the comment

19:10.360 --> 19:11.360
syntax.

19:11.360 --> 19:15.360
So in markdown, which is the one I know best, HTML comments

19:15.360 --> 19:18.360
that have a special form, Vale rule equals no, turns it off

19:18.360 --> 19:19.360
at that point.

19:19.360 --> 19:22.360
And then as soon as you re-enable it with another HTML

19:22.360 --> 19:23.360
comment, it can restart.

19:23.360 --> 19:25.360
So you can isolate single lines.

19:25.360 --> 19:28.360
And with things like markdown, that's usually enough.

19:28.360 --> 19:31.360
And so you can turn off individual rules for very

19:31.360 --> 19:32.360
specific cases.

19:32.360 --> 19:33.360
Thank you.

19:33.360 --> 19:37.360
I think I've missed the point of using review dot.

19:37.360 --> 19:41.360
Because if you can integrate Vale in SSS in smart

19:41.360 --> 19:44.360
terminal, why would you use review dot?

19:44.360 --> 19:45.360
That's true.

19:45.360 --> 19:46.360
Yeah, so.

19:46.360 --> 19:47.360
Can you repeat it for people there?

19:47.360 --> 19:48.360
Of course, yeah.

19:48.360 --> 19:52.360
So the question is, given that you're running Vale in

19:52.360 --> 19:55.360
continuous integration anyway, where does review dog

19:55.360 --> 19:57.360
provide additional value?

19:57.360 --> 20:03.360
And for me, that's in the sort of conversational nature of

20:03.360 --> 20:04.360
the tool.

20:04.360 --> 20:06.360
I worked primarily in GitHub.

20:06.360 --> 20:10.360
And that framework of reviews on poor requests allows the bot

20:10.360 --> 20:14.360
to, instead of having CI feedback in, you know, you go to

20:14.360 --> 20:17.360
this tab or this check or your different CI system and find

20:17.360 --> 20:20.360
the error, you get it on your poor request in the same way

20:20.360 --> 20:23.360
that I as a maintainer would do if I remembered the rule

20:23.360 --> 20:24.360
myself.

20:24.360 --> 20:27.360
And I would say, please do this or here's a suggestion.

20:27.360 --> 20:31.360
And I think having that feedback in your forge, whether it

20:31.360 --> 20:35.360
be GitHub or GitLab, is more effective than going out and

20:35.360 --> 20:37.360
finding it in a bread.

20:37.360 --> 20:38.360
You're right.

20:38.360 --> 20:39.360
I hope that because you can do that.

20:39.360 --> 20:41.360
And maybe, for example, you can.

20:41.360 --> 20:42.360
Yes, yeah, absolutely.

20:42.360 --> 20:43.360
Yeah.

20:43.360 --> 20:47.360
You can use the comment action in GitHub, yeah.

20:47.360 --> 20:48.360
Exactly, yeah.

20:48.360 --> 20:49.360
Thank you.

20:49.360 --> 20:51.360
Another question.

20:51.360 --> 20:54.360
Congratulations on surviving your first time.

20:54.360 --> 20:55.360
Yeah, thank you.

20:55.360 --> 20:56.360
I'm very sweaty.

20:56.360 --> 21:05.360
We'd like to some style guides and show how they can be

21:05.360 --> 21:06.360
imported.

21:06.360 --> 21:08.360
And you also mentioned the Chicago banal style.

21:08.360 --> 21:12.360
Is there a Vale plugin for the Chicago banal style?

21:12.360 --> 21:13.360
I don't think so.

21:13.360 --> 21:15.360
Yeah, I think not yet.

21:15.360 --> 21:17.360
But they are.

21:17.360 --> 21:19.360
I think people have asked that.

21:19.360 --> 21:21.360
And I think it is under copyright.

21:21.360 --> 21:24.360
Well, it's obvious that the copyright has been passed.

21:24.360 --> 21:29.360
We have touched this subject before and had problems.

21:29.360 --> 21:33.360
So I will remind myself to look into it again.

21:33.360 --> 21:37.360
Yeah, so I should say that the packages of style guides

21:37.360 --> 21:39.360
you've seen, like the ones that you've seen,

21:39.360 --> 21:42.360
the ones of style guides you've seen,

21:42.360 --> 21:46.360
like Google and Microsoft, are themselves openly licensed

21:46.360 --> 21:49.360
in a way that Vale can write those rules.

21:49.360 --> 21:52.360
I don't know how many people have contributed to the production

21:52.360 --> 21:54.360
of those styles, but there's a lot of rules across them.

21:54.360 --> 21:57.360
And I didn't even demonstrate, I think, half of the sets.

21:57.360 --> 22:02.360
There's one specifically for accessibility kind of concerns.

22:02.360 --> 22:07.360
There's one that's got some very odd rules about certain language

22:07.360 --> 22:09.360
that you might not want to use in job posts.

22:09.360 --> 22:12.360
But if you don't want to see bro in your language,

22:12.360 --> 22:14.360
then you can use job lint for that.

22:14.360 --> 22:18.360
Or, of course, write your own ones for anything you're missing.

22:18.360 --> 22:21.360
I think I have time for one more.

22:21.360 --> 22:22.360
OK, yep.

22:22.360 --> 22:23.360
Oh, I saw you first.

22:23.360 --> 22:24.360
Sorry.

22:24.360 --> 22:26.360
No, they're here.

22:26.360 --> 22:32.360
We have a lot of, or we have almost only non-native English speakers

22:32.360 --> 22:34.360
in our documentation.

22:34.360 --> 22:36.360
That's something that Vale can help with,

22:36.360 --> 22:39.360
because we see that for language group,

22:39.360 --> 22:42.360
you see certain patterns which make it very difficult

22:42.360 --> 22:44.360
for another language group to understand.

22:44.360 --> 22:48.360
So having a lot of non-native speakers writing your documentation,

22:48.360 --> 22:51.360
is that somewhere that Vale can help?

22:51.360 --> 22:54.360
And again, my speaker notes, so next time,

22:54.360 --> 22:56.360
I'll make sure these are available.

22:56.360 --> 22:59.360
I wanted to talk about the importance of the privilege I have

22:59.360 --> 23:02.360
as a native English speaker and how I find it hard to write documentation

23:02.360 --> 23:05.360
and the additional challenge of being a non-native English speaker.

23:05.360 --> 23:08.360
I think that's why you've got to be compassionate in the rules.

23:08.360 --> 23:12.360
You can definitely write rules that are specific to those patterns

23:12.360 --> 23:15.360
that you might see in non-native speakers English.

23:15.360 --> 23:18.360
We have one to that effect, I think, like allows to,

23:18.360 --> 23:22.360
is commonly come up, so we have allows you to as a replacement.

23:22.360 --> 23:27.360
And you want that to be fed back to the contributor

23:27.360 --> 23:29.360
in a way that is not punishing,

23:29.360 --> 23:34.360
but helps them know that they are writing a better form of documentation.

23:34.360 --> 23:36.360
So thank you very much.

23:36.360 --> 23:38.360
Is there a single second more?

23:38.360 --> 23:42.360
I was wondering, do you know if people are also using Vale

23:42.360 --> 23:45.360
to style-link comments in code?

23:45.360 --> 23:48.360
Oh, are people using Vale to link comments in code?

23:48.360 --> 23:51.360
I've actually been asked that once already today,

23:51.360 --> 23:52.360
and I don't know the answer.

23:52.360 --> 23:53.360
They are.

23:53.360 --> 23:54.360
Yeah, brilliant.

23:54.360 --> 23:56.360
Because there's been lots of issues about people

23:56.360 --> 23:59.360
asking for certain configuration fit to do that.

23:59.360 --> 24:00.360
Brilliant.

24:00.360 --> 24:03.360
So yes, definitely is.

24:03.360 --> 24:04.360
Cool.

