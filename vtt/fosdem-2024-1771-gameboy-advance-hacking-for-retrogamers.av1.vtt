WEBVTT

00:00.000 --> 00:11.000
We're right on time to start with you, Daniele, with Game Boy Advance Hacking for RetroGamers.

00:11.000 --> 00:13.000
That's what we are, RetroGamers here.

00:13.000 --> 00:15.000
Okay. Thank you.

00:15.000 --> 00:20.000
So, okay.

00:20.000 --> 00:23.000
I don't have so much time because there are a lot of things to say,

00:23.000 --> 00:26.000
but the slides are already online, so you can find all the links or whatever.

00:26.000 --> 00:30.000
So, I have to rush some stuff, but you can use Internet.

00:30.000 --> 00:34.000
I think that you know how it works, so you can use it to find everything.

00:34.000 --> 00:36.000
So, let's start.

00:36.000 --> 00:39.000
About me, I am part of the Italian League of Society.

00:39.000 --> 00:43.000
I am a Bozzilla volunteer contributor, so I am a few years old.

00:43.000 --> 00:44.000
That's a work press.

00:44.000 --> 00:49.000
I have an Italian podcast and wrote a book about auto-contribute to open source buzz

00:49.000 --> 00:53.000
and the experience in these projects in the last decade, I think.

00:53.000 --> 00:54.000
I am old.

00:55.000 --> 01:00.000
But let's just start about talking about the Game Boy Advance.

01:00.000 --> 01:02.000
So, these are the technical details.

01:02.000 --> 01:05.000
There are a lot of fun, interesting things.

01:05.000 --> 01:10.000
I think that for time reason, we can just say which are the most important things.

01:10.000 --> 01:14.000
That's the fact that can support four players by cable.

01:14.000 --> 01:19.000
And also, the output of the cable just can support a ROM.

01:19.000 --> 01:23.000
I mean, you can share a ROM to the Game Boy Advance and read it from the memory as an example.

01:23.000 --> 01:30.000
There are also the peculiarity of two different CPUs because it supports also the Game Boy Pocket and Color games.

01:30.000 --> 01:36.000
So, when you insert a different cart, you use a different hardware stuff.

01:36.000 --> 01:43.000
So, it is more interesting for other gamers because with a single device, you just have also all the games for the Game Boy Pocket and Color,

01:43.000 --> 01:45.000
not just only the Game Boy Advance.

01:45.000 --> 01:51.000
And also, there are also emulators, we will see it for other console.

01:51.000 --> 01:57.000
And one of the other things that the maximum capacity for the games was 32 megabytes.

01:57.000 --> 02:04.000
These lights are like 32 megabytes, just to have an idea of the difference of size at the time.

02:04.000 --> 02:14.000
And also, supported the first 3D, but in a screen, very time like this is not, I mean, so much beautiful for a lot of games.

02:14.000 --> 02:15.000
It depends on the technology.

02:15.000 --> 02:18.000
There were also the first games of this kind of thing.

02:18.000 --> 02:26.000
So, it's just amazing that this device that's today, you can find it in your closet on a bay for, I don't know, 30 euros.

02:26.000 --> 02:32.000
You can do it a lot of fun and doing a lot of things because for me, it was very fun during the COVID pandemic,

02:32.000 --> 02:40.000
just digging more, hacking, changing things, modding software because it's something that everyone can do because it's very cheap today.

02:40.000 --> 02:42.000
And probably you have also some of them at home.

02:42.000 --> 02:47.000
I don't bring with them all the collection, but I think that there are people that saw someone with the Game Boy there.

02:47.000 --> 02:49.000
So, I think that we understand.

02:49.000 --> 02:55.000
So, in this case, the first things that you can do as mod are changing the shell.

02:55.000 --> 02:57.000
It's not something difficult after all.

02:57.000 --> 03:01.000
There is also, you can do USB-C battery right there.

03:01.000 --> 03:10.000
They can put, instead of the battery that was at the time that you want to take the battery from the remote, the TV remote because you need the battery.

03:10.000 --> 03:13.000
Now, you can have a rechargeable battery, technology.

03:13.000 --> 03:19.000
And also, there are more cheap to get the HDMI high output, but they're very horrible.

03:19.000 --> 03:29.000
There is also, you can use it as an SNS controller, a cartridge with an SD card with all the games that you want, on-brew whatever you want.

03:29.000 --> 03:35.000
You can also change the speaker because one of the issues was the speaker that was very cheap.

03:35.000 --> 03:36.000
You can change it.

03:36.000 --> 03:39.000
And also, you can put an amplifier that improved the audio quality.

03:39.000 --> 03:46.000
And also, the first things to do in this case of the Game Boy Vadan, but also the pocket and the color was the lights.

03:46.000 --> 03:50.000
It's very horrible when you have the sun there and you don't see anything.

03:50.000 --> 03:52.000
And it's still there, the same problem.

03:52.000 --> 03:56.000
You can change it in these cases with a bit of the wiring.

03:56.000 --> 04:02.000
It's very fun because you can get the screen for the GBA SP and put it there.

04:02.000 --> 04:06.000
So you can have the back lights with very 20 or something like that.

04:06.000 --> 04:14.000
And there are also modes that can let you to change the brightness of the screen.

04:14.000 --> 04:17.000
Just moving something like that, you change the brightness.

04:17.000 --> 04:21.000
There are a lot of modes around that you can install on your Game Boy.

04:21.000 --> 04:22.000
Advanced, but also color.

04:22.000 --> 04:25.000
I mean, a lot of these things are also for the color.

04:25.000 --> 04:27.000
You just know to check the modes.

04:27.000 --> 04:33.000
There's also other things like the Bluetooth controller remote with a specific cartridge with the Bluetooth.

04:33.000 --> 04:39.000
And also, it's a cartridge with Wi-Fi so you can do it with a remote controller.

04:39.000 --> 04:43.000
There are people that get, I have a lot of time, I mean, like us.

04:43.000 --> 04:45.000
So, on view.

04:45.000 --> 04:51.000
Okay, you can have with this cartridge, there are a lot of around emulators.

04:51.000 --> 04:53.000
So you can have NES games here.

04:53.000 --> 04:56.000
You can have Game Boy Pocket, Game Boy Color.

04:56.000 --> 04:58.000
You can have the Sega Master System games there.

04:58.000 --> 05:05.000
There are also other emulators for other games, but the capacity of these not let run also for issues of the screen.

05:05.000 --> 05:07.000
This is very tiny.

05:07.000 --> 05:12.000
There is also option that you can have because there are people we don't view that did that.

05:12.000 --> 05:13.000
It's not by me.

05:13.000 --> 05:17.000
Game with Wi-Fi support with the remote, with the Raspberry.

05:17.000 --> 05:22.000
So you can have this game multiplayer there by internet.

05:22.000 --> 05:23.000
And media output.

05:23.000 --> 05:26.000
You can use it for Shift-Tan as a synthesizer.

05:26.000 --> 05:31.000
So you could connect these to the keyboard and play out the sound exit there.

05:31.000 --> 05:34.000
And there's also the Retro-Pie streaming.

05:34.000 --> 05:42.000
I mean, there, I don't know how much sense has, but you can play with the Retro-Pie and the Crash Bandicoot or PlayStation 1 there.

05:42.000 --> 05:44.000
I don't know much sense, but there is.

05:44.000 --> 05:45.000
That's the funny part.

05:45.000 --> 05:54.000
And there is also a huge database, ROM hacking, that you can find patches to a lot of ROMs around tools to mod ROM, a lot of things.

05:54.000 --> 05:56.000
This is something that I didn't remember.

05:56.000 --> 05:57.000
I was a kid.

05:57.000 --> 05:58.000
I didn't know that.

05:58.000 --> 06:00.000
In Italy, it wasn't so much famous.

06:00.000 --> 06:05.000
I don't know in other countries, but this was this video format called a GBA video.

06:05.000 --> 06:13.000
So you can have in a cart, I mean, Disney Toons, SpongeBob Toons in some episodes in a cart.

06:13.000 --> 06:15.000
And look it there, because it's very famous.

06:15.000 --> 06:18.000
They sold millions of those.

06:18.000 --> 06:26.000
And someone on the Internet, because I say that game people a lot of time, put a 10-bit movie in a cartridge.

06:26.000 --> 06:30.000
There is the video, so just there.

06:30.000 --> 06:31.000
I'm not joking.

06:31.000 --> 06:32.000
It's there.

06:32.000 --> 06:38.000
So, MGBA, in my opinion, is the best emulator for a lot of reasons.

06:39.000 --> 06:41.000
It's everywhere basically.

06:41.000 --> 06:43.000
It's integrated as a retro rock.

06:43.000 --> 06:48.000
And it's a part open source because there are some little for Game Boy that are there aren't.

06:48.000 --> 06:55.000
As an interesting website that explained the issues they had on fixing some emulation issues with specific video games.

06:55.000 --> 06:59.000
So, you know, there is an illogical version in Japan that created issues.

06:59.000 --> 07:03.000
We have no idea, but it's explained where there was the problem.

07:03.000 --> 07:07.000
So you can find a lot of these interesting posts in this website.

07:07.000 --> 07:12.000
But also, for getting fun, there is also a scripting giant inside the emulator.

07:12.000 --> 07:16.000
So you can do fun meetings.

07:16.000 --> 07:19.000
And it's also the debugging giant that is important.

07:19.000 --> 07:25.000
So, for recent times I have a video recorded, but you can do it at home, I mean.

07:25.000 --> 07:31.000
And in this case I choose this game because Metal Slug, I think that everyone knows except Pokemon.

07:31.000 --> 07:33.000
I think it's the most famous game.

07:33.000 --> 07:37.000
And so, this is the video.

07:37.000 --> 07:40.000
The game is starting with MGA.

07:40.000 --> 07:43.000
I'm just opening the memory search.

07:43.000 --> 07:51.000
I will look for the ammo points of the gun because I want to change it like infinity.

07:51.000 --> 07:55.000
Like a trainer with today, we call it trainer at the time of the word cheat.

07:55.000 --> 07:57.000
Now we are playing a bit.

07:57.000 --> 08:01.000
We now with which gun I pose the game.

08:01.000 --> 08:05.000
I have now a value I will search in the memory of the game.

08:05.000 --> 08:08.000
Now I will change a bit the points.

08:08.000 --> 08:12.000
I will search again, but this is just in this subset of memory.

08:12.000 --> 08:16.000
So, from now I will get the memory.

08:16.000 --> 08:20.000
So now these are the two, probably the values where it is the ammo points.

08:20.000 --> 08:27.000
Now I'm getting the memory and changing the value there.

08:27.000 --> 08:30.000
It's funny, I made a lot of like.

08:30.000 --> 08:33.000
And now we have ammo.

08:33.000 --> 08:37.000
So, and we can see from these that the memory is changing.

08:37.000 --> 08:43.000
Very basically we are, it's something that we, everyone knows with memory, with the mullet, it works this way.

08:43.000 --> 08:46.000
But it's very simple to do it with a lot of consoles or whatever.

08:46.000 --> 08:48.000
With Gameboy it's more simple.

08:48.000 --> 08:53.000
So, this is the Lua script that for MGA that does the same thing.

08:53.000 --> 08:55.000
Automatically.

08:55.000 --> 08:57.000
On MGA you can load this Lua script.

08:57.000 --> 09:00.000
You see it's not simple, it's more simple.

09:00.000 --> 09:05.000
We can, we have something that is executed not every single frame,

09:05.000 --> 09:08.000
because there are too many frames in the game.

09:08.000 --> 09:15.000
We just put like a maximum and we will write the console of the game and change the ammo.

09:15.000 --> 09:19.000
In this way we have the maximum ammo points for the game.

09:19.000 --> 09:20.000
So, it's an easy win.

09:20.000 --> 09:24.000
And there are already scripts for Pokemon, these kind of things already in the repository of MGA.

09:24.000 --> 09:30.000
You can develop it very easily because we can just set the memory address, write, read.

09:30.000 --> 09:31.000
So, it's Lua.

09:31.000 --> 09:37.000
I mean, it's a very simple script and joining that you can do a lot of things.

09:37.000 --> 09:42.000
Well, I don't think there is anything else to explain.

09:42.000 --> 09:46.000
So, this is a tool that I did during the pandemic.

09:46.000 --> 09:48.000
I will say, okay, I'm on Linux.

09:48.000 --> 09:53.000
I want to patch my ROM to have cheats because I want to get fun.

09:53.000 --> 09:58.000
And there was this tool very old with wine to get in running.

09:58.000 --> 10:01.000
I said, it would be very cool for me to learn a bit,

10:01.000 --> 10:03.000
C++ getting the source code,

10:03.000 --> 10:07.000
and updated for Linux and Mac OS and Windows with QT.

10:07.000 --> 10:09.000
And I did it.

10:09.000 --> 10:12.000
And at the end I got the source code, but the problem was very old.

10:12.000 --> 10:18.000
So, before I had to get running on Windows XP in a virtual machine without error.

10:18.000 --> 10:24.000
So, it was a very long task, but I did a new tool with a new interface that does the same things,

10:24.000 --> 10:29.000
but is a multiplatform that let you inject into a game a trainer.

10:29.000 --> 10:34.000
So, without doing the emulator before the starting game, you have the trainer.

10:34.000 --> 10:35.000
You have to run.

10:35.000 --> 10:37.000
So, this is on-brew development.

10:37.000 --> 10:39.000
There are various tools to develop games.

10:39.000 --> 10:41.000
This is a GB Studio.

10:41.000 --> 10:43.000
There is a module for GBA.

10:43.000 --> 10:48.000
There is also more languages that you can use to develop a ROM today.

10:48.000 --> 10:56.000
You can have Rust, NIM, Zig, obviously C++, and Lua again.

10:56.000 --> 10:59.000
But Lua is a scripting engine.

10:59.000 --> 11:01.000
It's not something that you can compile.

11:01.000 --> 11:04.000
Well, it's only one because Astyme did it.

11:04.000 --> 11:09.000
So, we have now an engine that lets you to do a Lua game in a ROM.

11:09.000 --> 11:12.000
So, basically you can write your script in Lua.

11:12.000 --> 11:17.000
You build a ROM with inside your script Lua and run it in the emulator.

11:17.000 --> 11:21.000
So, you can have a simple game with inside it.

11:21.000 --> 11:23.000
So, you can get the crash of Lua inside the screen.

11:23.000 --> 11:27.000
Something very strange, but you get that because this is a Lua.

11:27.000 --> 11:32.000
And, you know, automatically you can have the assets, audio, images, this kind of things.

11:32.000 --> 11:36.000
So, you have a tiny, horrible demo, not video game because it will be.

11:36.000 --> 11:39.000
And there is also the code of GitHub, in my case.

11:39.000 --> 11:42.000
This is a demo they did a few years ago.

11:42.000 --> 11:45.000
This is me, horrible, I'd say.

11:45.000 --> 11:51.000
But it's there that we have moving an image with any Lua inside.

11:51.000 --> 11:53.000
And this works also here because you have the cart there.

11:53.000 --> 11:56.000
So, the game works also in a real game by advanced.

11:56.000 --> 11:58.000
It's not just the emulator.

11:58.000 --> 12:01.000
So, this is the code of the game.

12:01.000 --> 12:04.000
I don't know how much you can see, but it's very simple.

12:04.000 --> 12:06.000
I will go very quickly.

12:06.000 --> 12:11.000
We have, first of all, setting some texture.

12:11.000 --> 12:16.000
We are setting the function to draw the image with the coordinates.

12:16.000 --> 12:21.000
We have also a way to clean up the screen because when I have to switch the image,

12:21.000 --> 12:25.000
I have to clean up all the screen, otherwise it will be like Liars.

12:25.000 --> 12:31.000
Some stacks over there, we are just in case when press some buttons,

12:31.000 --> 12:38.000
we are moving the images, rating the data like FPS, RAM, whatever.

12:38.000 --> 12:42.000
That is not perfect because the join is worse.

12:42.000 --> 12:46.000
So, the data that's saying with this function are not so much trustable,

12:46.000 --> 12:48.000
but it's working.

12:48.000 --> 12:53.000
So, someone did already the games with that.

12:53.000 --> 12:55.000
And so, let's move on.

12:55.000 --> 12:59.000
Also, for the game advanced, there are a lot of communities around.

12:59.000 --> 13:02.000
We are talking about prototypes because at the time,

13:02.000 --> 13:05.000
I don't know many remember, magazine, video games magazine,

13:05.000 --> 13:10.000
the writers got usually games in advice to review it.

13:10.000 --> 13:15.000
So, around there are cartridges with the demo, with alpha, beads, whatever,

13:15.000 --> 13:18.000
so people are collecting them and put online.

13:18.000 --> 13:22.000
So, we have here a prototype of Metal Slug for game advanced,

13:22.000 --> 13:25.000
the XOBEDE V-FREV of the game we saw.

13:25.000 --> 13:29.000
Robocop, never released, and this is QuakeTree,

13:29.000 --> 13:33.000
rewritten from scratch for game advanced, never released,

13:33.000 --> 13:35.000
with the source code is online.

13:35.000 --> 13:39.000
And we have different projects that collect them, but also documenting them.

13:39.000 --> 13:43.000
So, what there is inside the ROM that was unused as an example,

13:43.000 --> 13:47.000
incomplete, they document everything, also for other consoles.

13:47.000 --> 13:48.000
So, moving on.

13:48.000 --> 13:52.000
We have also the compilations, people that have a lot more time,

13:52.000 --> 13:57.000
want to do a compilation one-on-one to a game to generate a complete copy of the game

13:57.000 --> 13:59.000
from a complete new code.

13:59.000 --> 14:03.000
There was also for, it was Famous Mario 64 as an example,

14:03.000 --> 14:05.000
but there are also for Game Boy.

14:05.000 --> 14:09.000
And Pokemon people are more, has a lot more time than me,

14:09.000 --> 14:14.000
and development again, all the games in G++, one-on-one,

14:14.000 --> 14:18.000
all the games for Game Boy, also the Pimbal game for the Pokemon.

14:18.000 --> 14:20.000
And there are also other games that they compilated,

14:20.000 --> 14:25.000
so you can create your version in cheat code instead of assembly.

14:25.000 --> 14:27.000
So, I think that is better.

14:28.000 --> 14:31.000
So, there is also competition online every year, and a lot of them.

14:31.000 --> 14:36.000
In this case, there is also the GBA gem with practice.

14:36.000 --> 14:39.000
There is also this case, Community on Discord.

14:39.000 --> 14:45.000
And there is also this one, the Retro Platform Gem, also for Windows 95,

14:45.000 --> 14:48.000
these kind of things, and this included also the Game Boy Advance as an example.

14:48.000 --> 14:52.000
So, if you have more time, you can do that, so games.

14:52.000 --> 14:56.000
So, let's go fast with some examples of those.

14:56.000 --> 14:58.000
We have this one.

14:58.000 --> 15:04.000
It is an Open City building for GBA and Linux, with Nc++.

15:04.000 --> 15:10.000
We have this one, a 60-PS game run 3D in C++.

15:10.000 --> 15:13.000
This one is very cool, not because it's a localized in Italy,

15:13.000 --> 15:17.000
but because it's so crazy that the Game Boy is amazing.

15:17.000 --> 15:19.000
Your name is a Game Boy, it's cool.

15:19.000 --> 15:24.000
But the point is that it is written in Lisp, so there is a compiler for Lisp.

15:24.000 --> 15:29.000
There is Linux, Windows, GBA and PlayStation Portable, with multiplayer support on GBA,

15:29.000 --> 15:32.000
in a game that is procedurally generated.

15:32.000 --> 15:34.000
At the time, there wasn't something like,

15:34.000 --> 15:37.000
okay, we have random maps every time, everything.

15:37.000 --> 15:40.000
Now, you have Indigaboy Advance 2024.

15:40.000 --> 15:44.000
So, you can have levels generated in Procedure.

15:44.000 --> 15:48.000
It is the same one that brought the engine in Lua.

15:48.000 --> 15:51.000
This one is the same after for this game.

15:51.000 --> 15:54.000
In this case, it's written again in Lisp.

15:54.000 --> 15:58.000
This one right on the screen, a QR code so you can share the map of the game

15:58.000 --> 16:04.000
in a community online, of course, with a smartphone.

16:04.000 --> 16:06.000
There is also Open Lara,

16:06.000 --> 16:13.000
at the compilation of Lara Croft, one running on the Game Boy Advance.

16:13.000 --> 16:15.000
But, of course, Doom is everywhere.

16:15.000 --> 16:17.000
Why not again in GBA?

16:17.000 --> 16:20.000
Because Doom, there was for GBA, in this case,

16:20.000 --> 16:25.000
is the modern Pierre Doom, Boom, Port, compiled for GBA,

16:25.000 --> 16:30.000
but it wasn't enough because someone added the support to create a GBA ROM

16:30.000 --> 16:32.000
with your mods of the time.

16:32.000 --> 16:36.000
So, you can start wars mod on GBA.

16:36.000 --> 16:42.000
You have Counter Strike mod for Doom in your Game Boy Advance.

16:42.000 --> 16:44.000
Time.

16:44.000 --> 16:45.000
So, we are at the end.

16:45.000 --> 16:48.000
I was russian, so I guess there are questions.

16:48.000 --> 16:50.000
Just to say, these are true projects.

16:50.000 --> 16:53.000
They can help you to understand because I have no idea how it works.

16:53.000 --> 16:56.000
Assemblies, I studied these to understand.

16:56.000 --> 17:01.000
And the idea, this is a Game Boy guide from modern game developer.

17:01.000 --> 17:03.000
It's complete. There is a lot of things.

17:03.000 --> 17:05.000
And this one is for Game Boy Color.

17:05.000 --> 17:07.000
We are working on it, so localizing in Italian.

17:07.000 --> 17:10.000
And we know from the community because this is the Game Boy dev community,

17:10.000 --> 17:12.000
they organize all these gems.

17:12.000 --> 17:17.000
And it's used from university to explain how it works as CPU

17:17.000 --> 17:19.000
because at the end, the Game Boy is very simple.

17:19.000 --> 17:21.000
Everyone can play with that.

17:21.000 --> 17:25.000
So, it's very easy to teach how it works, assembly, basically.

17:25.000 --> 17:29.000
So, you can find the tutorial step by step, or to write a Pong game.

17:29.000 --> 17:31.000
And now I think there are asteroid, I think.

17:31.000 --> 17:37.000
So, it's something from the community that can teach you how it works at Game Boy at the end.

17:37.000 --> 17:42.000
And I think that for someone that never developed with C++,

17:42.000 --> 17:47.000
it was interesting to understand how it worked at the time to do all these kind of things.

17:47.000 --> 17:50.000
There are a lot of people that works a lot on the Game Boy.

17:50.000 --> 17:55.000
You can find on Twitter, GitHub, a lot of people that develop game emulators,

17:55.000 --> 17:58.000
but also developing a lot of games.

17:58.000 --> 18:02.000
So, if you are just interested to understand how it is easy to do retro gaming,

18:02.000 --> 18:07.000
that's so hacking because I say it's cheap, so I change the amplifier,

18:07.000 --> 18:13.000
I change the screen, I change the battery, I change a lot of things just for fun.

18:13.000 --> 18:15.000
I just understand how it works, a console.

18:15.000 --> 18:20.000
But at the end, when you do these kind of things, you learn how it works as a computer, basically.

18:20.000 --> 18:24.000
So, you can get fun just doing these kind of things and learning,

18:24.000 --> 18:29.000
getting fun that is not okay, and getting fun developing a framework,

18:29.000 --> 18:35.000
JavaScript that no one ever used, but something like, okay, I'm hacking a Game Boy.

18:35.000 --> 18:38.000
So, you can say, okay, I'm not care of the Game Boy.

18:38.000 --> 18:42.000
So, I just invite you to check the emulation world, what you can do.

18:42.000 --> 18:45.000
The various communities around that are very active.

18:45.000 --> 18:50.000
And just to get fun with something from Cheat Dude, but it was still today.

18:50.000 --> 18:52.000
So, thank you.

18:54.000 --> 18:56.000
Thank you.

19:01.000 --> 19:05.000
We have time for one question or two, Maximum.

19:05.000 --> 19:07.000
Anybody?

19:07.000 --> 19:09.000
There is a question.

19:09.000 --> 19:11.000
That's too far.

19:18.000 --> 19:21.000
Hello, this is actually not a question at all.

19:21.000 --> 19:23.000
Sorry, in the front of the camera.

19:24.000 --> 19:27.000
So, this is actually not a question at all.

19:27.000 --> 19:31.000
This is actually, I am the maintainer of the GBAsim tutorial.

19:31.000 --> 19:33.000
Oh, cool.

19:40.000 --> 19:46.000
And we actually have a bunch of people from the Game Boy and Game Boy Color development community in the back

19:46.000 --> 19:48.000
who are currently saying hi.

19:49.000 --> 19:51.000
Cool, cool.

19:52.000 --> 19:55.000
So, we are very thankful for the shout outs.

19:55.000 --> 20:00.000
And we would like to say that there is a lot of interaction between the Game Boy and Game Boy Advanced communities.

20:00.000 --> 20:05.000
So, if you would like to use more high level languages, the Game Boy Advanced is great.

20:05.000 --> 20:06.000
It's very modern.

20:06.000 --> 20:09.000
If you want to use older languages, the Game Boy is also really nice.

20:09.000 --> 20:12.000
And yeah, we have a lot of resources.

20:12.000 --> 20:14.000
So, thank you everyone.

20:14.000 --> 20:17.000
And hopefully, we will be the ones giving a talk next year.

20:18.000 --> 20:19.000
Perfect.

20:21.000 --> 20:22.000
Okay, finish it.

20:22.000 --> 20:24.000
Okay, thank you everyone.

