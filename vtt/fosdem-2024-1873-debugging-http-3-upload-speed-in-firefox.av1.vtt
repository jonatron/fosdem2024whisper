WEBVTT

00:00.000 --> 00:10.600
Okay, I think we can roll it.

00:10.600 --> 00:15.540
And we are moving now to debugging HTTP 3 upload speed in Firefox and I'm more than

00:15.540 --> 00:20.200
happy to welcome Manuel Buschard for it.

00:20.200 --> 00:22.200
Hello.

00:22.200 --> 00:28.080
I'm Manuel Buschard.

00:28.080 --> 00:30.080
I'm Manuel.

00:30.080 --> 00:41.400
I'm working at Mozilla in the networking team called Necro and we work on Firefox networking.

00:41.400 --> 00:49.080
And in this talk I'm going about our debugging of HTTP 3 and HTTP 2 upload speed.

00:49.080 --> 00:54.120
And for this I'm going to give you some background information first.

00:54.120 --> 01:01.080
Then I'll cover the HTTP 2 upload speed problem that we investigated last year.

01:01.080 --> 01:08.280
And afterwards I'll go over to the HTTP 3 upload speed problem that we investigated afterwards.

01:08.280 --> 01:14.040
So yeah, first to the Necro team.

01:14.040 --> 01:22.800
We in general focus on security, privacy, but always also on performance.

01:22.800 --> 01:33.800
And our protocols that we work on is mostly HTTP but also DNS, web socket, web transport.

01:33.800 --> 01:38.000
And we also own the caching and the proxy feature.

01:38.000 --> 01:44.000
So this is what we generally work on.

01:44.000 --> 01:52.760
And when we think about networking performance, we usually think about it in terms of how

01:52.760 --> 02:00.320
long does it take from clicking a link to seeing the result.

02:00.320 --> 02:10.280
And for this we usually just need download speed.

02:10.280 --> 02:20.080
For other use cases like uploading large files like videos, we generally also need the upload

02:20.080 --> 02:22.280
speed.

02:22.280 --> 02:28.480
And in this talk I'm going about the HTTP 2 and HTTP 3 upload speed.

02:28.480 --> 02:32.120
Those protocols are more in focus.

02:32.120 --> 02:36.400
They are relatively newer than the HTTP 1.

02:36.400 --> 02:39.360
They got introduced in the past decade.

02:39.360 --> 02:49.680
And yeah, so for HTTP 2 upload, first what's the difference in HTTP 2 to HTTP 1.

02:49.680 --> 03:00.200
In HTTP 2 we allow to make multiple HTTP requests via one TCP socket.

03:00.200 --> 03:06.280
And this TCP socket is handled by the operating system.

03:06.280 --> 03:15.760
And real quick, the bug in our HTTP code that caused the slow upload was that we configured

03:15.760 --> 03:21.360
the socket to have a fixed size buffer of 110 to 80 kilobytes.

03:21.360 --> 03:28.680
And this fixed size buffer became a bottleneck in high bandwidth situations.

03:28.680 --> 03:40.960
And yeah, for the fix we just needed to adjust this TCP socket to not set the fixed size

03:40.960 --> 03:46.280
buffer and let the operating system handle the buffer size.

03:46.280 --> 03:55.400
And this shows that the operating system is responsible for the upload speed or the performance

03:55.400 --> 03:57.680
of upload.

03:57.680 --> 04:06.840
And this is a stark difference to HTTP 3 upload.

04:06.920 --> 04:20.200
And with this fix of just not setting the fixed size buffer, we can take a look at Chrome

04:20.200 --> 04:26.920
upload speed, Firefox before the fix, in red and in yellow Firefox after the fix.

04:26.920 --> 04:40.000
And we see that in certain configurations like high bandwidth and also from low to higher

04:40.000 --> 04:46.640
round trip times we have upload speed improvements up to like four times the speed.

04:46.640 --> 04:49.800
So we only have to wait a fourth of the time.

04:49.800 --> 04:59.960
And we are on par here with Chrome, which is using all the bandwidth you can use for

04:59.960 --> 05:01.600
the upload.

05:01.600 --> 05:14.160
So with this fixed last year, we took a more in depth look at upload speed in general.

05:14.160 --> 05:23.560
And we also had bug reports about slow HTTP 3 upload and with HTTP 2 seeing very good

05:23.560 --> 05:33.000
results, we made it a high priority for us as well and took a look there.

05:33.000 --> 05:45.200
So for the fix or seeing how much it changed, we introduced some high level telemetry.

05:45.200 --> 05:55.760
And these are person tiles of user reported upload speed.

05:56.760 --> 06:03.920
We have different versions, 114 on the left side is around one year ago.

06:03.920 --> 06:16.160
And in 115 to 16, we rolled out the HTTP 2 upload speed fix and we can see the improvements

06:16.160 --> 06:21.360
in the high level telemetry about upload speed.

06:21.360 --> 06:32.760
It's an improvement like in the higher parts, it's roughly doubled and not quite, but it's

06:32.760 --> 06:36.680
very visible.

06:36.680 --> 06:40.920
So now two difference to HTTP 3 upload.

06:40.920 --> 06:45.520
HTTP 3 upload is widely different.

06:45.520 --> 06:53.400
HTTP 3 uses a different transport layer.

06:53.400 --> 07:05.200
We don't use TCP anymore, but Qwik was standardised alongside with HTTP 3 and just relatively

07:05.200 --> 07:06.200
recently.

07:06.200 --> 07:15.240
So the standardisation was finalised in 2021, which is two to three years from now, right

07:15.240 --> 07:17.640
now.

07:17.640 --> 07:25.960
And Firefox also included HTTP 3 upload around the time in 2021.

07:25.960 --> 07:38.200
The work started in 2019, which is all relatively recent in comparison to TCP and HTTP 2.

07:38.200 --> 07:44.240
HTTP 2 is around a decade now, all.

07:44.240 --> 07:51.680
And the problem is different here because the operating system is responsible for the

07:51.680 --> 07:53.960
TCP stack.

07:53.960 --> 08:06.760
It is responsible for sending all the data performant and in Qwik we have to implement

08:06.760 --> 08:17.000
the same congestion control in Firefox and the Firefox application, so it's not the

08:17.000 --> 08:21.120
responsibility shifted to Firefox or the application.

08:21.440 --> 08:30.320
TCP is already decades old, it was done about 50 years ago and it's operating since 30

08:30.320 --> 08:35.040
years and got a lot of eyes on it.

08:35.040 --> 08:40.720
And our Firefox implementation is really new and we were kind of the first ones to look

08:40.720 --> 08:47.920
into upload speed performance here, so we had a lot of low hanging fruits here to work

08:47.920 --> 08:49.400
on.

08:49.400 --> 08:58.080
And I wanted to visualise this a bit, like we have HV 2 and HV 3, which are very similar.

08:58.080 --> 09:06.040
In HV 3 we rely on Qwik and Qwik is also implemented by us.

09:06.040 --> 09:21.240
In HV 2 we have TCP and TCP is provided by the operating system.

09:21.240 --> 09:35.200
So I want to go into a few findings that we had in our presentation, in our IO graphs

09:35.200 --> 09:37.560
and other tooling that we took.

09:37.560 --> 09:45.600
The most useful tool for us was IO graphs where we just printed within the application,

09:45.600 --> 09:55.200
like with logging, when we send packets, when we receive packets, how big our congestion

09:55.200 --> 10:01.080
is and everything.

10:01.080 --> 10:05.280
So the first problem we have, what does this graph show?

10:05.280 --> 10:14.440
So this graph is our congestion window over time.

10:14.440 --> 10:15.680
What is the congestion window?

10:15.680 --> 10:27.000
So the congestion, well, I would like to go over this.

10:27.000 --> 10:30.040
We don't want to overload the network.

10:30.040 --> 10:37.560
And overloading the network is called like congestion control, well, not overloading

10:37.560 --> 10:39.120
the network.

10:39.120 --> 10:46.680
And this is the responsible of the transport layer, which is TCP or Qwik.

10:46.680 --> 10:54.120
And all the bugs that we had were in this congestion control, or most of the bugs.

10:54.120 --> 11:03.640
And the congestion window that we have is the estimate of how fast we can upload right

11:03.640 --> 11:05.480
now.

11:05.480 --> 11:10.240
And this changes over time.

11:10.240 --> 11:17.600
With every packet that we receive, we think we can upload more.

11:17.600 --> 11:26.720
So we have a graph like here where we steadily increase the congestion window over time with

11:26.720 --> 11:29.240
all the packets that we receive.

11:29.240 --> 11:35.080
And when we detect that packets got lost, we are assuming that the network is overloaded

11:35.080 --> 11:39.360
and we reduce the congestion window by half.

11:39.360 --> 11:43.880
And this is like one of the early graphs that we had.

11:43.880 --> 11:48.320
And orange are like the bytes in flight that we have.

11:48.320 --> 11:52.080
They circulate from top to bottom.

11:52.080 --> 11:57.160
Increasing again, blue is the congestion window.

11:57.160 --> 12:09.160
And what we see at the drop points is that the congestion window doesn't half.

12:09.160 --> 12:14.600
We would expect it to half during a congestion event.

12:14.600 --> 12:18.080
Instead it drops almost to zero.

12:18.080 --> 12:21.440
And this was one of the bugs that we had.

12:21.440 --> 12:24.240
We just dropped to zero.

12:24.240 --> 12:29.960
Each packet that we detected was lost, half the congestion window.

12:29.960 --> 12:35.280
And normally you would only do this once, but we did it multiple times for each packet.

12:35.280 --> 12:42.200
So essentially we dropped to almost zero on all congestion events here.

12:42.200 --> 12:44.720
This was one of the first fix.

12:44.720 --> 12:45.720
Later...

12:45.720 --> 12:46.720
Yeah.

12:46.720 --> 12:47.720
Later.

12:47.720 --> 13:09.880
This is the same graph.

13:09.880 --> 13:17.080
With the congestion window problem fixed, we had to investigate further.

13:18.080 --> 13:20.840
There were more problems.

13:20.840 --> 13:28.760
Here, like all these drops of packets going down, we want to stay with our bytes in flight

13:28.760 --> 13:32.440
as high as possible, with our upload speed as high as possible.

13:32.440 --> 13:36.360
But we dropped down quite some times.

13:36.360 --> 13:43.360
And if we...

13:43.360 --> 13:48.720
Yeah.

13:48.720 --> 13:53.800
For this problem, we need a bit of background information.

13:53.800 --> 14:02.960
And this background information was this slide, which I apparently put a bit later.

14:02.960 --> 14:09.160
And I'll go back to the background about Cric first before going over the next problem.

14:09.160 --> 14:11.160
So Cric got introduced.

14:11.160 --> 14:15.760
Sorry about the mix up here.

14:15.760 --> 14:19.480
Cric, the new transport layer protocol.

14:19.480 --> 14:21.480
What is Cric?

14:21.480 --> 14:31.600
Cric is on the same layer as TCP, but conceptually you can have multiple TCP connections at once

14:31.640 --> 14:34.760
over one quick connection.

14:34.760 --> 14:41.480
And we have other benefits, like TLS being integrated, so that the connection setup phase

14:41.480 --> 14:48.960
takes less time, only one round trip time instead of two round trip times.

14:48.960 --> 14:49.960
Yeah.

14:49.960 --> 14:58.640
And now we get back to the introduction of the concept of congestion control.

14:58.640 --> 15:07.640
Traction control is for us handles like not overloading the network from all participants

15:07.640 --> 15:08.640
in the internet.

15:08.640 --> 15:16.440
So everyone makes sure that we don't overload the network and keep it usable for everyone.

15:16.440 --> 15:22.680
And the congestion window is one of the concepts that we looked at the first graph and also

15:22.680 --> 15:24.480
in the second graph.

15:24.480 --> 15:29.360
This is our estimation at how much can we upload at a time.

15:29.360 --> 15:36.640
What is our upload speed to the destination server?

15:36.640 --> 15:42.240
And so our estimation depends on us receiving packets.

15:42.240 --> 15:50.000
And we want to increase the congestion window only if we are sure that we are using the

15:50.000 --> 15:51.000
congestion window.

15:51.000 --> 15:58.520
Like we are sending as much data as we have in the congestion window because otherwise

15:58.520 --> 16:08.680
we are not sure if our estimate is correct if we are sending less data than what is that

16:08.680 --> 16:10.840
we estimate we could.

16:11.160 --> 16:22.120
And this detection on whether a packet was sent during the utilization of the congestion

16:22.120 --> 16:26.000
window like sending as much data as we could.

16:26.000 --> 16:40.120
This had a bug as well and made us mark packets as not utilizing the congestion window for

16:41.000 --> 16:47.360
50 to 75 percent of the packets which meant that we didn't increase the congestion window

16:47.360 --> 16:49.360
as fast as we could.

16:49.360 --> 16:57.800
This is another simple incremental fix for our HPE 3 upload speed problem.

16:57.800 --> 17:01.360
And after fixing this the graph looks like this.

17:01.360 --> 17:07.400
It has a steeper curve, steeper line.

17:07.400 --> 17:12.920
Here we also see that the first problem that we had got fixed.

17:12.920 --> 17:20.920
We don't drop to zero with the congestion window but have it halfway here.

17:26.680 --> 17:33.400
With these steady increases we can also see them in our high level telemetry that we introduced

17:33.400 --> 17:38.600
for our HPE 2 upload speed problem.

17:38.600 --> 17:49.600
In HPE 3 in the higher network bandwidth we have already an increase of three times.

17:49.600 --> 17:58.840
We are three times as fast as before tackling the problem from around 31 megabits per second

17:58.840 --> 18:00.920
to 93 megabits per sentence.

18:00.960 --> 18:05.160
This is the 95 percentiles.

18:05.160 --> 18:13.160
This is a network speed of better than 95 of all clients.

18:17.480 --> 18:23.040
Also visible from the high level telemetry.

18:23.040 --> 18:30.040
For the current state we are still working on this.

18:30.040 --> 18:42.560
We have more bugs that we are aware of and are also in contact with or in collaboration

18:42.560 --> 18:51.200
with contributors who can upload or request logs from them to have a look at their network

18:51.200 --> 18:52.800
condition.

18:53.040 --> 19:03.120
This is the diagram from before but from the contributors log where we can identify which

19:03.120 --> 19:13.120
problems are present from our machines in comparison to their network location.

19:13.200 --> 19:25.200
With the logging mechanism which we also included in Firefox this became a bit easier

19:27.200 --> 19:29.200
about logging.

19:29.760 --> 19:37.440
A few of the further works that we are currently still aware of is that the

19:38.240 --> 19:44.240
upload has a few CPU bottlenecks.

19:44.240 --> 19:49.240
Mostly profiling.

19:49.240 --> 20:00.240
The QuickStack made us aware that not the cryptography part of Quick is taking most of the time

20:00.800 --> 20:06.800
but some other parts which is unexpected.

20:06.800 --> 20:14.800
We have already identified a few code tests that can be improved and are improving these.

20:15.600 --> 20:18.600
We will also continue with profiling this.

20:18.600 --> 20:23.600
We also have similar to the HDP case we have a fixed size buffer.

20:23.920 --> 20:33.920
This will get to be a problem at some point at much higher bandwidth than with HP2 upload

20:33.920 --> 20:43.920
speed problem because we have a buffer that is 8 times as high, 1 megabyte instead of 128 kilobyte.

20:45.920 --> 20:52.920
We are also aware of the problem that when we are in package reordering networks we detect

20:53.920 --> 20:57.920
these package reordering as losses too frequently.

20:57.920 --> 21:07.920
There are ways around this in TCP specifications like REC or Forward Egg that we are taking a look at

21:07.920 --> 21:19.920
and investigating which one we want to implement and which proves to be the best of the options.

21:20.480 --> 21:27.480
We are also setting up CIS to catch regressions in the future and also have a detailed view

21:31.640 --> 21:38.640
from different networking conditions, how they look.

21:40.800 --> 21:47.800
We have seen where we got improvements in HDP3 already, it is now at a similar level to the HDP2 upload.

21:50.920 --> 22:03.920
It is looking already a lot better but we are still on it and we are aware of a few bugs and we will investigate further.

22:04.920 --> 22:13.920
We want to make it as good as we can to see all the benefits that HDP3 can provide for us.

22:14.920 --> 22:23.920
A lot of this was in cooperation with contributors reporting bugs.

22:28.920 --> 22:31.920
One specific bug is the HDP3 upload speed bug.

22:31.920 --> 22:37.920
If you want to take a look at our work there you can follow the investigations there.

22:37.920 --> 22:44.920
You can reach us at the Metrics channel if you want to get in contact with the NECO team.

22:44.920 --> 22:51.920
We have a NECO specific documentation also about creating logs.

22:54.920 --> 23:03.920
If you are interested in the NECO team we are making ourselves a bit more transparent by providing our meeting nodes

23:04.920 --> 23:07.920
and having a blog.

23:09.920 --> 23:17.920
If you need help with fixing bugs or want to get in contact like contributing,

23:18.920 --> 23:26.920
we also are going to provide office hours where you can talk to us directly and get in touch.

23:29.920 --> 23:31.920
Thanks for listening.

23:31.920 --> 23:33.920
Thank you.

23:37.920 --> 23:40.920
We might have time for one or two questions.

23:45.920 --> 23:47.920
Hi, thanks for talking.

23:47.920 --> 23:54.920
I just wanted to ask if there is any chance of Quick being brought into the Linux kernel or Windows kernel or wherever else Firefox runs.

23:55.920 --> 24:02.920
The question is whether Quick is going to be implemented in the operating system with the Shokut APIs.

24:03.920 --> 24:07.920
I am expecting that it will be implemented at some point.

24:07.920 --> 24:12.920
We do have, I have seen some TLS integration.

24:12.920 --> 24:17.920
This is one of the stoppers probably that TLS has to be integrated into the kernel as well.

24:18.920 --> 24:23.920
Quick is so new that it didn't have time to be integrated into the operating system.

24:23.920 --> 24:30.920
I think as soon as operating systems provide APIs we will start using them.

24:34.920 --> 24:39.920
They are not here right now but in the future I would assume yes.

24:40.920 --> 24:45.920
Two years of being standardized is like nothing.

24:45.920 --> 24:50.920
TCP is like for 30 years already.

24:50.920 --> 24:55.920
Last question, I see a lot of people coming in and for sure Manu will be available outside, no?

24:55.920 --> 24:56.920
Yes.

24:56.920 --> 24:58.920
Making promises is your name.

24:58.920 --> 25:04.920
My question is just which congestion control did you implement in Firefox?

25:04.920 --> 25:05.920
Yes.

25:06.920 --> 25:09.920
We are using Qubic by default.

25:09.920 --> 25:25.920
We have also implemented new Reno and we are looking also at BBR because this is also exciting for our lack.

25:25.920 --> 25:28.920
It's better for lower latencies.

25:29.920 --> 25:38.920
We didn't have a plan to implement it right now but it's like in the future we probably will tackle that too.

25:38.920 --> 25:40.920
Thank you so much Manu.

25:48.920 --> 25:53.920
I didn't count some of them but I took photos and we can count at different rates.

25:59.920 --> 26:05.920
I saw the sticker you have on your water bottle.

26:05.920 --> 26:06.920
Yalazila.

26:06.920 --> 26:07.920
Yalazila.

26:07.920 --> 26:08.920
Yalazila.

26:08.920 --> 26:09.920
Yalazila.

26:09.920 --> 26:10.920
Yalazila.

26:10.920 --> 26:11.920
Yalazila.

26:11.920 --> 26:12.920
Yalazila.

26:12.920 --> 26:14.920
And I think also this is a no?

26:14.920 --> 26:15.920
Yes.

26:15.920 --> 26:16.920
No.

26:16.920 --> 26:17.920
Yes.

26:17.920 --> 26:18.920
Yes.

26:18.920 --> 26:19.920
Yes.

26:19.920 --> 26:20.920
Yes.

26:20.920 --> 26:21.920
Yes.

26:21.920 --> 26:22.920
Yes.

26:22.920 --> 26:23.920
Yes.

26:23.920 --> 26:24.920
Yes.

26:24.920 --> 26:25.920
Yes.

26:25.920 --> 26:26.920
Yes.

26:26.920 --> 26:27.920
Yes.

26:27.920 --> 26:28.920
Yes.

26:28.920 --> 26:29.920
Yes.

26:29.920 --> 26:30.920
Yes.

26:30.920 --> 26:31.920
Yes.

26:31.920 --> 26:32.920
Yes.

26:40.920 --> 26:41.920
Yes.

26:41.920 --> 26:42.920
Yes.

26:42.920 --> 26:43.920
Yes.

26:43.920 --> 26:44.920
Yes.

26:44.920 --> 26:45.920
Yes.

26:45.920 --> 26:46.920
Yes, yes.

26:46.920 --> 26:47.920
Yes.

26:47.920 --> 26:50.920
This is all about the politics.

26:50.920 --> 26:52.920
I'd say about the politics.

26:52.920 --> 26:54.920
Call me to be disturbed.

26:54.920 --> 26:56.920
I'd like to work with you.

26:56.920 --> 26:58.920
Yeah, except...

26:58.920 --> 27:01.920
I used to... my mother told me how to...

27:01.920 --> 27:04.920
You know, like when they had to mess up with this.

27:04.920 --> 27:07.920
Yeah, I mean, it's funny when we're not having a discussion.

27:07.920 --> 27:09.920
Do you think there's a few...

27:09.920 --> 27:11.920
...sci-fi sites?

27:11.920 --> 27:13.920
No.

27:13.920 --> 27:15.920
Yeah.

27:15.920 --> 27:17.920
I don't know about that.

27:17.920 --> 27:19.920
Sorry, it was on.

27:19.920 --> 27:21.920
Yeah.

27:21.920 --> 27:23.920
Yeah.

27:23.920 --> 27:25.920
Yes.

27:39.920 --> 27:42.920
You're stuck with me for two minutes or so.

27:42.920 --> 27:46.920
Carmen needs another adapter and we are looking over it.

27:46.920 --> 27:48.920
It's coming.

27:48.920 --> 27:50.920
We're fixing everything.

27:54.920 --> 27:59.920
Is anyone that already got the t-shirt from the booth or the collapsible mug?

27:59.920 --> 28:01.920
Oh, good.

28:01.920 --> 28:03.920
You're saving the world.

28:03.920 --> 28:05.920
I'm there for it.

28:05.920 --> 28:07.920
I also like it.

28:07.920 --> 28:09.920
Someone else is doing steps today.

28:09.920 --> 28:11.920
This is how you stay in shape.

28:11.920 --> 28:13.920
You moderate the dev room, you run.

28:13.920 --> 28:15.920
All good.

28:15.920 --> 28:17.920
We are first.

28:17.920 --> 28:19.920
Also a big thank you to Konstantina.

28:19.920 --> 28:21.920
She organized the booth, by the way.

28:21.920 --> 28:23.920
Konstantina and Mozilla, if you want to...

28:23.920 --> 28:25.920
Yes.

28:25.920 --> 28:27.920
Yes.

28:27.920 --> 28:29.920
Do you want to?

28:29.920 --> 28:31.920
She brought more stickers here,

28:31.920 --> 28:33.920
especially this stock is related to MDN.

28:33.920 --> 28:35.920
We have the sticker here, if you want.

28:35.920 --> 28:37.920
And we have the cute llama.

28:37.920 --> 28:39.920
I heard it.

28:39.920 --> 28:41.920
Gold.

28:41.920 --> 28:43.920
It's here, waiting.

28:43.920 --> 28:45.920
One is mine.

28:45.920 --> 28:47.920
And if you want to learn more about

28:47.920 --> 28:49.920
llama, the project, not the animal,

28:49.920 --> 28:51.920
we have a guide here

28:51.920 --> 28:53.920
with all things related to Mozilla and AI.

28:53.920 --> 28:55.920
Grab the...

28:55.920 --> 28:57.920
And the first one is from the first talk

28:57.920 --> 28:59.920
about support.

28:59.920 --> 29:01.920
Grab these papers

29:01.920 --> 29:03.920
and you can have more information.

29:03.920 --> 29:05.920
Are we ready?

29:05.920 --> 29:07.920
Let me go then.

29:07.920 --> 29:09.920
Without further ado, ladies and gentlemen,

29:09.920 --> 29:11.920
Chris will

29:11.920 --> 29:13.920
introduce us to the MDN curriculum.

29:13.920 --> 29:15.920
Yay!

29:15.920 --> 29:17.920
Hi.

29:17.920 --> 29:19.920
APPLAUSE

29:19.920 --> 29:21.920
So, hello everyone.

29:21.920 --> 29:23.920
Nice to see you all.

29:23.920 --> 29:25.920
Thanks for coming.

29:25.920 --> 29:27.920
My name is Chris Mills and I'm going to take you through

29:27.920 --> 29:29.920
a new MDN project

29:29.920 --> 29:31.920
soon to be released called the MDN Curriculum.

29:31.920 --> 29:33.920
Take you through a little bit about

29:33.920 --> 29:35.920
who I am to begin with.

29:35.920 --> 29:37.920
I describe myself

29:37.920 --> 29:39.920
as a death metal hippie.

29:39.920 --> 29:41.920
I love documentation

29:41.920 --> 29:43.920
and I love the open web

29:43.920 --> 29:45.920
and I love tinkering with open standards.

29:45.920 --> 29:47.920
I used to work for Mozilla.

29:47.920 --> 29:49.920
For quite a while I was the content lead

29:49.920 --> 29:51.920
and team manager for MDN.

29:51.920 --> 29:53.920
But I left

29:53.920 --> 29:55.920
and did some other stuff and now I've come back

29:55.920 --> 29:57.920
as a contractor and this is the current thing

29:57.920 --> 29:59.920
that I've been working on with the MDN team.

29:59.920 --> 30:01.920
Another thing to add is that

30:01.920 --> 30:03.920
I'm a heavy metal drummer

30:03.920 --> 30:05.920
so if you want to ask me a question later on

30:05.920 --> 30:07.920
please speak slowly.

30:11.920 --> 30:13.920
A little bit about this talk.

30:13.920 --> 30:15.920
We are going to talk about, first of all,

30:15.920 --> 30:17.920
some of the problems that myself and I

30:17.920 --> 30:19.920
was perceived with Frontend Development

30:19.920 --> 30:21.920
in 2024, particularly

30:21.920 --> 30:23.920
in terms of education

30:23.920 --> 30:25.920
and the skills that new web developers

30:25.920 --> 30:27.920
are bringing to the table when they come

30:27.920 --> 30:29.920
and get jobs.

30:29.920 --> 30:31.920
I'm going to take you through the thoughts

30:31.920 --> 30:33.920
of how a curriculum,

30:33.920 --> 30:35.920
a new curriculum could solve some of these problems

30:35.920 --> 30:37.920
and some of the research that we did

30:37.920 --> 30:39.920
to try and prove out some of our theories about this.

30:41.920 --> 30:43.920
I'll then talk to you a little bit about the actual curriculum

30:43.920 --> 30:45.920
that we came up with and kind of its structure,

30:45.920 --> 30:47.920
its approach, some of its goals

30:47.920 --> 30:49.920
and then I'll talk to you about possible next steps,

30:49.920 --> 30:51.920
some of the things that we can then go on to do

30:51.920 --> 30:53.920
with this curriculum as a basis.

30:55.920 --> 30:57.920
Now, first of all, I'm going to talk to us about,

30:57.920 --> 30:59.920
talk to you about something that we're very good at

30:59.920 --> 31:01.920
in open source communities,

31:01.920 --> 31:03.920
problems and complaining.

31:03.920 --> 31:05.920
Yay, Mr. Brexits, back in the UK government,

31:05.920 --> 31:07.920
I'm so pleased.

31:07.920 --> 31:09.920
No, not those kind of problems.

31:11.920 --> 31:13.920
Really, we're talking about problems with Frontend Development,

31:13.920 --> 31:15.920
kind of what skills are

31:15.920 --> 31:17.920
new web developers missing when they come

31:17.920 --> 31:19.920
into the industry? What's the effect of web,

31:19.920 --> 31:21.920
what's the state of web education,

31:21.920 --> 31:23.920
what kind of effects are these problems

31:23.920 --> 31:25.920
having on, you know, the web

31:25.920 --> 31:27.920
in general and the quality of sites that we build?

31:29.920 --> 31:31.920
One thing that

31:31.920 --> 31:33.920
I've talked to quite a lot of hiring managers

31:33.920 --> 31:35.920
about, and this will also

31:35.920 --> 31:37.920
be mentioned in the research that I'll talk about later,

31:37.920 --> 31:39.920
is just lack of general core

31:39.920 --> 31:41.920
principles of new developers coming into the industry.

31:41.920 --> 31:43.920
I mean, a short anecdote that I'll share with you

31:43.920 --> 31:45.920
is a couple of years ago,

31:45.920 --> 31:47.920
a friend of mine called me into his company,

31:47.920 --> 31:49.920
he worked for a large agency at the time

31:49.920 --> 31:51.920
and he wanted me to talk to all of his Frontend teams

31:51.920 --> 31:53.920
and he wanted me to talk to all of his Frontend teams

31:53.920 --> 31:55.920
about accessibility.

31:55.920 --> 31:57.920
Really basic accessibility, you know,

31:57.920 --> 31:59.920
just kind of use headings and paragraphs

31:59.920 --> 32:01.920
and use alt text, that kind of stuff.

32:01.920 --> 32:03.920
And I went in there

32:03.920 --> 32:05.920
and did a 20 minute talk

32:05.920 --> 32:07.920
and I was thinking, do I really need to talk

32:07.920 --> 32:09.920
to these folks about this?

32:09.920 --> 32:11.920
And it was like a revelation to them.

32:11.920 --> 32:13.920
They were all like, whoa,

32:13.920 --> 32:15.920
so that's why you have to do this stuff?

32:15.920 --> 32:17.920
I was just blown away. I was like,

32:17.920 --> 32:19.920
I thought we'd kind of largely won this battle

32:19.920 --> 32:21.920
and moved on. It kind of blew my mind

32:21.920 --> 32:23.920
about how little they knew about this stuff.

32:23.920 --> 32:25.920
And I kind of feel that

32:25.920 --> 32:27.920
with a lot of the new developers community industry,

32:27.920 --> 32:29.920
you know, they're not really learning

32:29.920 --> 32:31.920
core languages and old school standards

32:31.920 --> 32:33.920
as much as just kind of, well,

32:33.920 --> 32:35.920
I want to get a job so I'm going to learn React

32:35.920 --> 32:37.920
and I'm not going to turn this into a massive winch,

32:37.920 --> 32:39.920
but you know, that kind of results

32:39.920 --> 32:41.920
in not knowing these core principles

32:41.920 --> 32:43.920
and best practices quite as well as

32:43.920 --> 32:45.920
perhaps they could.

32:47.920 --> 32:49.920
The next thing to talk about is lack of core language skills.

32:49.920 --> 32:51.920
This is another thing that hiring managers

32:51.920 --> 32:53.920
have talked to me about a lot.

32:53.920 --> 32:55.920
So people learn React

32:55.920 --> 32:57.920
and other frameworks,

32:57.920 --> 32:59.920
but they don't maybe take the time

32:59.920 --> 33:01.920
to learn the core JavaScript language

33:01.920 --> 33:03.920
as much as they could. So, you know,

33:03.920 --> 33:05.920
they can build

33:05.920 --> 33:07.920
websites that work great and have a good

33:07.920 --> 33:09.920
look in UIs, but maybe

33:09.920 --> 33:11.920
their problem-solving skills

33:11.920 --> 33:13.920
aren't quite as good as

33:13.920 --> 33:15.920
they could be when they suddenly need to get

33:15.920 --> 33:17.920
brought onto a problem that requires

33:17.920 --> 33:19.920
not writing some code inside a framework.

33:21.920 --> 33:23.920
And also, we kind of

33:23.920 --> 33:25.920
worry that maybe this is not so good

33:25.920 --> 33:27.920
for people's long-term employability,

33:27.920 --> 33:29.920
because, you know, if they just learn React,

33:29.920 --> 33:31.920
what then happens if all of a sudden

33:31.920 --> 33:33.920
the company goes, well, now we're going to do all of this stuff

33:33.920 --> 33:35.920
in a different framework, or, you know,

33:35.920 --> 33:37.920
another framework suddenly becomes really popular

33:37.920 --> 33:39.920
and every employer wants to use it on their projects.

33:43.920 --> 33:45.920
This is probably the biggest one that

33:45.920 --> 33:47.920
I've heard from employers is just

33:47.920 --> 33:49.920
general lack of soft skills from UIs.

33:49.920 --> 33:51.920
So, and I know,

33:51.920 --> 33:53.920
you know, you could make the argument that

33:53.920 --> 33:55.920
this kind of stuff comes of experience,

33:55.920 --> 33:57.920
but it really would be great to try and promote

33:57.920 --> 33:59.920
that learners spend more time

33:59.920 --> 34:01.920
thinking about skills such as research

34:01.920 --> 34:03.920
and kind of

34:03.920 --> 34:05.920
basic critical thinking and problem-solving

34:05.920 --> 34:07.920
and also

34:07.920 --> 34:09.920
working on having this constant learning

34:09.920 --> 34:11.920
mindset that you kind of need to have

34:11.920 --> 34:13.920
to succeed in this industry, because things are just

34:13.920 --> 34:15.920
always changing all the time.

34:19.920 --> 34:21.920
So, who's to blame for any of these problems?

34:21.920 --> 34:23.920
Well, not really anybody, I would say.

34:23.920 --> 34:25.920
I'm not going to point the finger at anyone in particular,

34:25.920 --> 34:27.920
because, you know, you've got all of this

34:27.920 --> 34:29.920
ideological thinking that says everything

34:29.920 --> 34:31.920
should be accessible all the time, and this should happen,

34:31.920 --> 34:33.920
and then this should happen. But actually,

34:33.920 --> 34:35.920
people just want to get a job,

34:35.920 --> 34:37.920
so it's no wonder that people go, well,

34:37.920 --> 34:39.920
all of these job adverts are saying,

34:39.920 --> 34:41.920
I need to know this framework, so I'm just going to take

34:41.920 --> 34:43.920
the quickest path I can to get employment

34:43.920 --> 34:45.920
and be able to pay my mortgage and buy food.

34:47.920 --> 34:49.920
Coding boot camps

34:49.920 --> 34:51.920
that I've reviewed largely tend to focus

34:51.920 --> 34:53.920
on this kind of stuff, you know, and again,

34:53.920 --> 34:55.920
I'm not blaming them, I'm not saying it's a terrible thing,

34:55.920 --> 34:57.920
but they tend to be, the

34:57.920 --> 34:59.920
attitude tends to be, you know, we will take you

34:59.920 --> 35:01.920
from nothing to getting your first job in three months

35:01.920 --> 35:03.920
or six months or whatever, and that's

35:03.920 --> 35:05.920
a perfectly reasonable way

35:05.920 --> 35:07.920
to frame what you're offering to people,

35:07.920 --> 35:09.920
but there is the problem that

35:09.920 --> 35:11.920
maybe the best practices and the background skills

35:11.920 --> 35:13.920
aren't maybe being as taught as well as they could be,

35:13.920 --> 35:15.920
and of course, courses become out of date

35:15.920 --> 35:17.920
very quickly.

35:17.920 --> 35:19.920
Particularly, this tends to be a problem

35:19.920 --> 35:21.920
with

35:21.920 --> 35:23.920
university courses that I've come across.

35:23.920 --> 35:25.920
I know a lot of lecturers that really struggle

35:25.920 --> 35:27.920
to kind of keep up with all of the stuff that they've got to do,

35:27.920 --> 35:29.920
which isn't just learning about technology,

35:29.920 --> 35:31.920
they struggle to put the time in

35:31.920 --> 35:33.920
to keep their skill set current

35:33.920 --> 35:35.920
with all of the stuff that's going on in the industry.

35:35.920 --> 35:37.920
So, I think that's a good point.

35:37.920 --> 35:39.920
I think that's a good point with all of the stuff that's going on in the industry.

35:41.920 --> 35:43.920
And then, I'm also going to

35:43.920 --> 35:45.920
just say a few things about

35:45.920 --> 35:47.920
interview processes, and again, this definitely isn't

35:47.920 --> 35:49.920
the fault of

35:49.920 --> 35:51.920
the actual learners trying to come into the industry.

35:51.920 --> 35:53.920
But because

35:53.920 --> 35:55.920
people don't tend to have a

35:55.920 --> 35:57.920
consistent set of skills,

35:57.920 --> 35:59.920
a lot of interview processes

35:59.920 --> 36:01.920
tend to kind of be, well,

36:01.920 --> 36:03.920
we're looking for this kind of unicorn

36:03.920 --> 36:05.920
that knows these ten things really well,

36:05.920 --> 36:07.920
that are all really complicated.

36:07.920 --> 36:09.920
And all of the people that we're talking to have kind of got

36:09.920 --> 36:11.920
about four of these things definitely

36:11.920 --> 36:13.920
shown up on their CV.

36:13.920 --> 36:15.920
So, we've got to do a whole bunch of whiteboard interviews

36:15.920 --> 36:17.920
and coding interviews and huge, long,

36:17.920 --> 36:19.920
convoluted interview processes to check

36:19.920 --> 36:21.920
whether this person

36:21.920 --> 36:23.920
can do this job that we're trying to hire for.

36:23.920 --> 36:25.920
Another interesting

36:25.920 --> 36:27.920
thing to make mention of AI,

36:27.920 --> 36:29.920
which has already been talked about today,

36:29.920 --> 36:31.920
is it fascinated me that in the last

36:31.920 --> 36:33.920
maybe six months to a year

36:33.920 --> 36:35.920
or so, I've started to hear

36:35.920 --> 36:37.920
multiple hiring managers talk about the fact that

36:37.920 --> 36:39.920
oh, we had to put a load of

36:39.920 --> 36:41.920
extra processes in and the interviews have become

36:41.920 --> 36:43.920
even more complicated now because

36:43.920 --> 36:45.920
a lot of our candidates are trying to cheat

36:45.920 --> 36:47.920
using AI. I've literally heard about people

36:47.920 --> 36:49.920
having chat GPT open in another window

36:49.920 --> 36:51.920
whilst they're doing an interview and just typing

36:51.920 --> 36:53.920
all of the interview questions into it and then

36:53.920 --> 36:55.920
parroting back the answers to the interviewers.

36:55.920 --> 36:57.920
And it's like, that's a bit

36:57.920 --> 36:59.920
nightmarish and

36:59.920 --> 37:01.920
it's difficult to really think about what to do about

37:01.920 --> 37:03.920
that. But I kind of think, well, if these people

37:03.920 --> 37:05.920
were maybe more confident

37:05.920 --> 37:07.920
in their skill sets in the first place, maybe

37:07.920 --> 37:09.920
they wouldn't have to think to rely on that quite as much.

37:09.920 --> 37:11.920
Another

37:11.920 --> 37:13.920
interesting thing is that

37:13.920 --> 37:15.920
something that we're sort of looking

37:15.920 --> 37:17.920
to do with some kind of curriculum

37:17.920 --> 37:19.920
would maybe to have

37:19.920 --> 37:21.920
some kind of industry standard benchmark

37:21.920 --> 37:23.920
certification, eventually. This is kind of

37:23.920 --> 37:25.920
pie in the sky, often the future.

37:25.920 --> 37:27.920
But maybe this certification could kind of say,

37:27.920 --> 37:29.920
you know, anybody that's got this

37:29.920 --> 37:31.920
certification,

37:31.920 --> 37:33.920
it's a trusted certification, you know,

37:33.920 --> 37:35.920
in the same way that

37:35.920 --> 37:37.920
industries such as law or architecture

37:37.920 --> 37:39.920
have trusted bodies who have

37:39.920 --> 37:41.920
these certifications that everybody gets to prove

37:41.920 --> 37:43.920
that they know what they're talking about.

37:43.920 --> 37:45.920
But we don't really have that for our industry.

37:45.920 --> 37:46.920
And

37:46.920 --> 37:48.920
employers don't really trust some random

37:48.920 --> 37:50.920
certificate from some, you know,

37:50.920 --> 37:52.920
whatever boot camp, you know, I'm not

37:52.920 --> 37:54.920
saying those boot camps are bad or not trustworthy,

37:54.920 --> 37:56.920
but employers just have a hard time

37:56.920 --> 37:58.920
trusting them.

37:58.920 --> 38:00.920
And as makes perfect sense,

38:00.920 --> 38:02.920
they value demonstrable

38:02.920 --> 38:04.920
experience and portfolios a lot more.

