WEBVTT

00:00.000 --> 00:19.280
Thank you. All right. So I would like to start with this very controversial sometimes notion,

00:19.280 --> 00:24.680
which is I want to convince you all a bit that that sentence that is up there that bad

00:24.680 --> 00:31.920
UX is bad security is actually true because I get often people who tell me that complete

00:31.920 --> 00:38.840
bollocks I will later talk a bit also about cubes but I don't want to start with this.

00:38.840 --> 00:46.320
I would like to start with the general principles. So why UX matters for security? The thing is

00:46.320 --> 00:53.360
very often when I talk with hackers about security people come to me like but we don't

00:53.360 --> 01:00.840
actually need usability. People can figure it out if you care about security you will figure it out

01:00.840 --> 01:07.080
and that's not a good approach. One thing is of course it's not like security and privacy are

01:07.080 --> 01:11.600
things that you should be you should have to deserve to work for them not everybody deserves only

01:11.600 --> 01:19.000
the smart people but the other thing is it doesn't matter if it's the fault of the user if it's

01:19.000 --> 01:25.880
the fault of the software if we get compromised if we get harmed the harm is done and I would

01:25.880 --> 01:33.680
personally like there to be less harm less damage to the users and that's that means making things

01:33.680 --> 01:39.640
more usable for people taking into account how humans work how human brains work this is of

01:39.640 --> 01:46.400
course sometimes a controversial concept but we are all human here and we make mistakes like people

01:46.440 --> 01:53.120
like humans who make mistakes user errors are a real vector of attack and a very important vector

01:53.120 --> 02:00.760
of attack when we read about compromises and for example big corporations very often the initial

02:00.760 --> 02:08.400
vector of attack was oh somebody clicked on the link or somebody answered the phone somebody talked

02:08.400 --> 02:14.240
to somebody and said what they shouldn't somebody made a stupid password so we cannot just say well

02:14.280 --> 02:22.040
I did the tech side all the problems there are user errors not my department this is not a good

02:22.040 --> 02:28.720
attitude it's like if the UX for the door or for the door control process is terrible and you end

02:28.720 --> 02:35.640
up doing oh nobody can remember the code just put the sticker next to the door then the person who

02:35.640 --> 02:42.160
designed the security system failed yes people shouldn't put sticker with the password next to

02:42.160 --> 02:48.600
the door but also the person who designed the process did a bad thing this is not good and also

02:48.600 --> 02:55.720
we are not mothers and fathers of our users we should not be like oh you have to deserve this you

02:55.720 --> 03:02.200
have to work harder why are you not paying attention chair a bad user we need to treat our users

03:02.200 --> 03:07.000
seriously like adults who also sometimes have different priorities than our programs not like

03:07.040 --> 03:16.880
children because the thing is humans make mistakes this is a thing this is a this is a truth

03:16.880 --> 03:22.680
universally acknowledged we all do we will make mistakes we may have other priorities than making

03:22.680 --> 03:29.000
using the software perfectly like very few people just want to use the software as good as possible

03:29.000 --> 03:35.000
they want to use the software to do something and also the problem is our brains were not exactly

03:35.000 --> 03:42.440
optimized for using computers also controversial our brains brains have a lot of heretics a lot of

03:42.440 --> 03:51.080
shortcuts that they take all the fascinating optical illusions just tell us this our brain is not

03:51.080 --> 03:58.480
perfect at perceiving the universe and reacting to what's happening we have a lot of iffy things in

03:58.920 --> 04:04.840
our brains and this is something that we as people who make software need to take into account

04:04.840 --> 04:14.560
people also do shortcuts they do it like they want to do things fast and if you keep noticing that

04:14.560 --> 04:22.840
your users keep doing a shortcut that is for example a secure less reasonable terrible there is

04:22.880 --> 04:31.680
a need to do we cannot be just like well stop doing that this is bad bad user no no if for

04:31.680 --> 04:37.520
example people people keep people keep walking on the grass then they probably get need to get

04:37.520 --> 04:44.200
somewhere and maybe that's not how this square should have looked like you have to take this into

04:44.200 --> 04:50.920
account that people will want to get close to their goal not necessarily in the way that we would

04:50.960 --> 04:59.800
like them to do it and again even the smartest person in the room can be in a hurry you can have a

04:59.800 --> 05:08.600
bunch of brilliant engineers brilliant physicists and they may make stupid decisions and they may sit

05:08.600 --> 05:15.960
and be like yeah and it can't be that bad right this one time what could possibly go wrong it's not

05:16.000 --> 05:24.840
that terrible or something exploded oops we have to take this into account we cannot be just making

05:24.840 --> 05:29.560
the software that we make with the assumption that people want to make mistakes you want to get

05:29.560 --> 05:37.200
perfect users this is just impossible that's that's not how humans work one of the big things that I

05:37.200 --> 05:44.840
find very important for designing things security related security related processes is in attention

05:45.720 --> 05:53.480
that is we generally just notice the thing we care about we don't notice everything that happens in

05:53.480 --> 06:00.120
the background this is not a bad thing this is very useful for our brains that's called cocktail

06:00.120 --> 06:06.320
party phenomenon when a human being can actually for most humans understand conversation in a very

06:06.320 --> 06:12.080
busy room and a cocktail party because our brain is very good at being like this thing I care about

06:12.280 --> 06:19.160
all the rest not important not my thing but this is very annoying when you are trying to design a

06:19.160 --> 06:26.040
good process for security because this means that a small red blinking light may be ignored the

06:26.040 --> 06:32.000
error message may not be read because the person just cares about one thing and I really like to

06:32.000 --> 06:38.400
refer to you to a psychological experiment that demonstrates this is how humans work it's called

06:38.440 --> 06:46.120
the invisible gorilla and the experiment was people were asked to watch a short film where a bunch of

06:46.120 --> 06:52.560
people was playing ball passing ball and told count how many times the balls is passed at the end of

06:52.560 --> 06:59.280
the short film people asked okay how many times the ball was passed cool did you notice the man in

06:59.280 --> 07:05.720
gorilla suit walking around and 50% of the participants did not notice the man in the gorilla

07:05.760 --> 07:12.800
suit because they didn't care about it they were told to count the passing of the ball so gorilla

07:12.800 --> 07:21.160
was there a gorilla and that's how humans work we cannot design our secure processes thinking

07:21.160 --> 07:27.440
yes people will pay perfect attention to everything all of the time that's just not how our brains

07:27.440 --> 07:34.520
work and I like to show it on the example of the error message this is liberal office error message

07:35.280 --> 07:41.480
this is what a designer program a sees there's an error message as an explanation what happens

07:41.480 --> 07:51.000
all very useful things and this is what a lot of users see because what they want is to get to

07:51.000 --> 07:55.640
the file and there are some words and they're annoying because they are stopping them from

07:55.640 --> 08:02.960
getting to the file please give me my file so it's just a bunch of annoying red stuff and a big

08:03.000 --> 08:08.240
button that says oh go do my thing and then the person opens the file and be like I cannot edit

08:08.240 --> 08:14.280
it something's wrong what happened is there an error message and this is I know this is annoying

08:14.280 --> 08:18.640
when we are designing things and making things is just like just read the error message why are

08:18.640 --> 08:26.360
you not reading the error message people want we have to think about communicating things not just

08:26.360 --> 08:32.080
in the error messages because a lot of people would ignore them because they don't care about them in

08:32.200 --> 08:39.320
the moment the error appears okay so this is my introduction this is my introduction on human

08:39.320 --> 08:46.360
brains complicated what is the thing I'm working on this is keeps us a reasonably secure operating

08:46.360 --> 08:53.000
system we don't we don't say it's perfectly secure because nothing is perfectly secure don't use

08:53.000 --> 08:59.600
computers if you want perfect security and cubes is a fairly complicated thing it's sort of a

08:59.640 --> 09:04.560
meta operating system which means that it has a bunch of virtual machines talking to each other

09:04.560 --> 09:10.440
everything's isolated this is my virtual machine that has my devices this is my virtual machine with

09:10.440 --> 09:18.440
my work everything is compartmentalized and the thing is we are trying to make it actually usable

09:18.440 --> 09:25.400
for people because you could have done the thing of partitioning things into virtual machines manually

09:25.680 --> 09:31.280
but it would be such a pain to actually make it work cubes provides the layer that allows you to

09:31.280 --> 09:39.920
actually use it to get all the security of really strongly isolating the things you're doing but

09:39.920 --> 09:44.960
also being able to use it without writing pages and pages and pages and pages of shell scripts

09:44.960 --> 09:54.000
this is a slightly cut but mostly visible diagram of how cubes works so you can see a lot of

09:54.040 --> 10:03.800
different virtual machines called cubes because we are funny like that and there is for January for

10:03.800 --> 10:10.200
the user there is a bunch of system stuff that does all the important system things and there is a

10:10.200 --> 10:16.720
bunch of user things like this is my cube for work stuff I have my browser my liberal office

10:16.720 --> 10:21.560
whatever I have my social media cube and those two cubes those two virtual machines don't know

10:21.600 --> 10:26.600
about each other they can talk they can share things if I click on a stupid link on my Facebook

10:26.600 --> 10:34.200
account it won't compromise my work which would be very nice so that whole idea of providing this

10:34.200 --> 10:43.240
separation is very very nice but it leads to a very complex usability situation because you don't

10:43.240 --> 10:49.360
have just one operating system you have a bunch of them smushed together that's not easy that's

10:49.400 --> 10:56.560
why we are providing a lot of interesting tools to make the process of using those things together

10:56.560 --> 11:03.280
a bit easier but also to still maintain some security and I want to discuss two things that we

11:03.280 --> 11:09.840
are doing that I think show interestingly how this can be done how you can make things usable

11:09.840 --> 11:17.560
but also think about security and the thing is the first thing is copying and pasting so in the

11:17.600 --> 11:23.720
normal system Linux Windows whatever you select text you press control C or select copy whatever

11:23.720 --> 11:30.640
text goes to clipboard control file V then the text goes to a new place this is of course terrible

11:30.640 --> 11:37.680
from the security standpoint mostly there is a bunch of attacks that are your clibbert that steal

11:37.680 --> 11:43.560
things from your clibbert put some things in your clibbert that should really not be there cubes

11:43.560 --> 11:50.720
makes it a bit more complicated sorry for the slight cutoff this is some technical problem first

11:50.720 --> 11:58.280
you copy text but this lands in the clipboard of the virtual machine you copied it from and all

11:58.280 --> 12:04.080
the virtual machines don't know about it to actually move it to another virtual machine because for

12:04.080 --> 12:08.880
example on your private Facebook you found this fascinating link that you have to share with your

12:08.920 --> 12:17.880
co-worker you have to press control shift plus C copy to the global cubes clipboard and then control

12:17.880 --> 12:25.800
shift V to copy it to another VM this is a bit more complex and yes we theoretically could have

12:25.800 --> 12:32.760
done this is more easily right we could be just like us always copy everything but that what goes

12:32.760 --> 12:38.440
all the security problems that would cause all the issues where one thing could steal the clipboard

12:38.480 --> 12:44.880
from other thing that's not what we want does the introduction of this separate step it also means

12:44.880 --> 12:51.640
that when people are trying to copy and paste things in cubes between different virtual machines

12:51.640 --> 12:58.800
they have to stop for a moment and think do I need to do that this is what I want why am I doing

12:58.800 --> 13:04.520
this this is something that forces you to stop and to pay attention for a second to this process

13:04.720 --> 13:11.080
and that leads to slightly better decisions with relationship to security of course it's not

13:11.080 --> 13:18.120
perfect some people get very much used to it they get it becomes also like automatic for them yeah

13:18.120 --> 13:25.200
this is yet another step just press the keys very quickly but and that means that of course further

13:25.200 --> 13:32.040
security is still needed that means we have to provide more layers of configuration of information

13:32.080 --> 13:40.880
of what's going on we do have a whole complex policy that allows the user to configure it and the

13:40.880 --> 13:47.600
thing is there's a lot of text here and a lot of you will be like nobody reads that yes that's why

13:47.600 --> 13:53.400
we put it in the settings so only the people want to customize what's going on actually go and read

13:53.400 --> 13:59.560
it the other people probably want because they don't care but only if you actually care enough to want

13:59.600 --> 14:05.520
to learn a bit about what's going on then you go to the settings and read it and then you can

14:05.520 --> 14:13.040
specify for example what can copy to where and how to control it so it is making the process so we

14:13.040 --> 14:18.880
are making the process of copying and pasting adding this additional step to make things a bit

14:18.880 --> 14:26.760
more secure by leveraging those two mechanisms technical one but also making people think for

14:26.800 --> 14:32.480
a second about what's going on the other thing that we are doing that I think is very interesting

14:32.480 --> 14:39.640
this is current work I could say devices things you connect to your computer they are evil like a

14:39.640 --> 14:46.320
lot of them can be very malicious you never know what actually happens within the thing that you

14:46.320 --> 14:52.720
are connecting to your computer maybe it is actually a USB stick or maybe not maybe it's

14:53.680 --> 14:59.240
some more malicious device that's just masquerading as a USB stick you know it's very complicated with

14:59.240 --> 15:06.640
them and even those devices that are not evil they very often can do far too much for example

15:06.640 --> 15:14.200
microphone camera they are very powerful things they can record a lot of things that we really

15:14.200 --> 15:22.040
would not like them to record and of course our browsers our programs are swearing to us that

15:22.040 --> 15:29.160
nothing malicious is ever happening but some people don't think this is sufficient level of

15:29.160 --> 15:36.400
security and for many people well attacks can happen and we would like to be protected about it

15:36.400 --> 15:43.520
that's because that's why QPSOS isolates all the devices in their own cube and the user can

15:43.520 --> 15:49.240
decide okay my camera I want to connect it to this cube this virtual machine from which I'm

15:49.280 --> 15:55.920
making calls but not to one from work because I want my boss to have absolutely no chance to see

15:55.920 --> 16:02.000
that I'm working in my pajamas or my microphone can only be connected to this cube not to the

16:02.000 --> 16:08.800
other and the problem with devices is that the initial user interface for handling them was made

16:08.800 --> 16:18.400
by engineers and it's not very friendly there are small things there is a list of stuff a lot of

16:18.440 --> 16:24.840
complicated technical details of what's coming from where one for example one USB stick can

16:24.840 --> 16:30.200
appear multiple times for very good and sensible technical reasons but it's very annoying when

16:30.200 --> 16:35.240
you have to figure out okay which one of them is the thing I actually want to use you have a list

16:35.240 --> 16:43.720
of cubes you want to connect to which is also very small and I ended up with this and I decided to

16:43.760 --> 16:51.840
ask my users okay does this work for you is it good and a lot of people said no this is terrible

16:51.840 --> 16:59.920
because I keep making mistakes because I I want to connect for example my USB stick to my

16:59.920 --> 17:06.280
development cube but I keep connecting it to my work cube because those things are very small

17:06.320 --> 17:13.520
and it's very easy to click on the wrong one and the thing is yes it's a user error it's not

17:13.520 --> 17:20.760
the fault of the system that the user clicks on the on the wrong thing but we would like

17:20.760 --> 17:26.640
the errors to be less common I know it's a user error but I still think we could make it

17:26.640 --> 17:32.440
easier for users to make less errors good decisions and that's why we're working on

17:32.480 --> 17:40.320
redesigning it and I think this is a decent example this is not yet working in cubes this

17:40.320 --> 17:50.160
is incoming will happen very soon once I finish working on it so extremely soon we we are changing

17:50.160 --> 17:57.920
things to one provide more information which is another thing that a lot of users told me when

17:57.960 --> 18:04.080
I started talking to them actually doing user interviews like yeah I know I should know that

18:04.080 --> 18:10.040
but I have no idea which of the devices I see listed is my camera because they all have like

18:10.040 --> 18:16.320
names that consists of numbers and letters randomly maybe we should we can actually show people

18:16.320 --> 18:20.680
which one of the things is the camera which one of the things is the microphone that's why

18:21.320 --> 18:27.760
icons actually show what's happening that's why there is much more space between different

18:27.760 --> 18:33.640
options and that's why the options are actually described not guess what it's going to happen

18:33.640 --> 18:42.840
no now I'm using actual full sentences to describe what the thing is doing and yes this is

18:42.960 --> 18:51.720
basically a visual update right this is not a technical change this is not deep delve into

18:51.720 --> 18:59.640
the back end of the USB of how cubes handles USB stack but this is a change that a lot of people

18:59.640 --> 19:06.400
when they saw it all of you said oh wow now I think I will make less mistakes now this will fix a

19:06.480 --> 19:14.480
bit of me problem but at the end we will have a more secure system everything will be better for me

19:14.480 --> 19:19.280
as a user even though it's just a visual change of course some people are like and this is terrible

19:19.280 --> 19:26.440
too big why it takes up so much space but unfortunately you can never have everybody be very happy

19:27.400 --> 19:38.440
this is basically the same okay so as a final word on these two examples and generally I would

19:38.440 --> 19:45.480
like to say a bit about how to design with security on your mind if you're a designer or if you're a

19:45.480 --> 19:51.880
programmer making a secure things that want to be secure designed for human error designed for

19:51.880 --> 19:58.280
mistakes not just for success take into account that people will do things badly people will be in

19:58.280 --> 20:04.280
the hurry if you if you ever want to design a process for a thing that's supposed to be used by human

20:04.280 --> 20:11.160
imagine that your user is currently having their six month old baby yelling and they're cut puking

20:11.160 --> 20:17.480
at the one at the other side and you want to design a thing that will not completely compromise them

20:17.480 --> 20:22.600
even if that unpleasant situation does happen the things that are secure should be easy making

20:22.600 --> 20:29.720
things in security should be harder making a shortcut the shortcut the easy way should be the secure way

20:29.720 --> 20:36.040
going around because people will sometimes go around also we are open source people we like to go around

20:36.040 --> 20:43.880
sometimes so the going around the insecure way should be harder design for actual human beings

20:44.840 --> 20:51.240
don't don't think that if it's a user error then it's not our fault because unfortunately

20:52.280 --> 20:56.120
user error is also our fault not just the user thank you

21:05.320 --> 21:08.520
five minutes for questions please

21:13.880 --> 21:16.520
yes

21:16.680 --> 21:22.600
isn't it creating more friction in the process and rather than focusing on adding more layers to

21:23.560 --> 21:30.600
like force people to go to read the like all the security issues rather than that why is there

21:30.600 --> 21:36.760
not a focus on the display of the error messages that makes them read it makes the user read them

21:36.760 --> 21:45.720
more properly okay so the question is why why are the more friction instead of just making better

21:46.440 --> 21:54.520
user errors so two reasons one reason is that sometimes it's difficult to tell a part user

21:54.520 --> 22:01.400
error for what user wanted if I copied what I wanted into a wrong cube this is a user error

22:01.400 --> 22:08.840
but it's not an obvious error that can be detected by the system and the other thing is friction is

22:08.840 --> 22:14.920
not always bad we like to think that friction in design is always a bad thing but friction also

22:15.320 --> 22:22.680
forces people to stop to think for a moment and at some sometimes when we design the system

22:23.480 --> 22:30.120
so that people have to make certain choices we give them a large variety of choices but

22:31.000 --> 22:36.520
there are some choices we have to give them a chance to actually make those choices and friction

22:36.520 --> 22:41.960
allows us for the stop to make a choice I don't want to add friction to every copy and paste

22:41.960 --> 22:47.320
within a single VM there is no friction it's just when you're going outside and the friction is by

22:47.320 --> 22:54.680
design to also show that this should not be a common operation to decrease on the making shortcuts

22:54.680 --> 22:57.080
thing yes

22:57.080 --> 23:04.440
Do you have some methods to encourage users for secure behavior for example let's say

23:05.480 --> 23:10.840
what prevents me to log to social media on my work cube

23:11.960 --> 23:17.480
so the question is how to prevent users from making bad decisions security wise for example logging

23:17.480 --> 23:25.000
into social media and work so in short we don't have a technical solution for it we have just a

23:25.000 --> 23:33.240
solution of describing like tutorials how can you use it sharing the setups of the developers of the

23:33.880 --> 23:39.960
core users so like educating people encouraging people to use different colors for different

23:40.040 --> 23:46.840
environments you also if you want to do it like you can limit yourself by limiting network access

23:46.840 --> 23:51.400
of different cubes so be like okay this is firewall and cannot access Facebook or whatever

23:53.080 --> 24:00.440
we don't have a good solution like system-wide this is still a decision that the user can make

24:00.440 --> 24:06.840
it has to make also because the user needs to divide their work into those virtual machines

24:06.840 --> 24:09.880
themselves this is something that the user generally has to do

24:25.800 --> 24:33.960
No so the question is do I have any favorite examples of UX oh this is a very difficult question

24:34.920 --> 24:41.560
security yeah oh I don't know I'd say that I really like how

24:44.200 --> 24:51.480
those usb tokens pass for u2f authentication work so I really like this process which adds

24:51.480 --> 24:56.600
just the perfect amount of friction with the need to press a button so I think this is my favorite

24:56.600 --> 24:59.800
example we have to finish

25:03.960 --> 25:05.420
you

