WEBVTT

00:00.000 --> 00:12.880
I better not touch anything anymore.

00:12.880 --> 00:16.200
Okay, nine minutes off.

00:16.200 --> 00:18.200
Okay, cool.

00:18.200 --> 00:20.200
Hi.

00:20.200 --> 00:22.200
Technical stuff.

00:22.200 --> 00:24.200
Right.

00:24.200 --> 00:26.200
Let's start this.

00:26.200 --> 00:28.200
I am Daniel.

00:28.200 --> 00:30.200
I work on curl all day.

00:30.200 --> 00:32.200
I work for Wolfers & Sells.

00:32.200 --> 00:34.200
I do curl stuff all day.

00:34.200 --> 00:36.200
I am going to talk a lot about curl.

00:36.200 --> 00:39.200
I always talk a lot about curl, but today as well.

00:39.200 --> 00:44.200
I don't think I am going to present a lot of new things here.

00:44.200 --> 00:48.200
You are going to hear me reproduce and repeat the things you already know.

00:48.200 --> 00:50.200
But cliches are cliches for a reason.

00:50.200 --> 00:53.200
I am going to just let you know that some of them are actually true.

00:53.200 --> 00:55.200
At least from my point of view.

00:56.200 --> 00:59.200
I work on curl since a long time.

00:59.200 --> 01:02.200
It runs in a few things these days.

01:02.200 --> 01:09.200
You can actually probably not walk very far without using curl knowingly or not.

01:09.200 --> 01:13.200
It is in a lot of different devices, things, services.

01:13.200 --> 01:16.200
Since a few years back on more than one planet as well.

01:16.200 --> 01:17.200
Right?

01:17.200 --> 01:19.200
A favorite slide of mine.

01:19.200 --> 01:21.200
Anita, squeeze it in.

01:21.200 --> 01:23.200
I am sorry.

01:23.200 --> 01:31.200
A few years ago I also got this gold medal from the Swedish king here for my work on curl.

01:31.200 --> 01:33.200
And actually...

01:36.200 --> 01:39.200
But not a single gold medal since then.

01:39.200 --> 01:41.200
It is kind of a disappointment.

01:41.200 --> 01:47.200
But anyway, these days we estimate there is roughly 20 billion installations of curl.

01:47.200 --> 01:49.200
Quite a few.

01:49.200 --> 01:51.200
We don't actually know that it is 20 billion.

01:51.200 --> 01:53.200
It is roughly open source, we don't know.

01:53.200 --> 01:59.200
But definitely there cannot be that many other open source programs in general.

01:59.200 --> 02:03.200
Software anywhere that runs in many more instances.

02:03.200 --> 02:05.200
I am pretty sure.

02:05.200 --> 02:07.200
Pretty decent thing, I think.

02:07.200 --> 02:11.200
But you know, everything really didn't start out like that.

02:11.200 --> 02:13.200
It has been taking quite a while.

02:13.200 --> 02:17.200
Because in my project, our project Curl stuff...

02:17.200 --> 02:23.200
We of course started somewhere.

02:23.200 --> 02:28.200
And it was a long and sort of an effort.

02:28.200 --> 02:33.200
And a long journey from something that was really not very good until what it is today.

02:33.200 --> 02:36.200
Which could possibly be good.

02:36.200 --> 02:41.200
So in November 1996, it's a long time ago, I turned 26.

02:41.200 --> 02:42.200
Fun.

02:42.200 --> 02:44.200
So I started with a little project.

02:44.200 --> 02:46.200
It was more like that.

02:46.200 --> 02:48.200
Very silly toy.

02:48.200 --> 02:51.200
160 lines of code.

02:51.200 --> 02:54.200
Just a few screen folds.

02:54.200 --> 02:56.200
And what do you do with that?

02:56.200 --> 02:58.200
You start with playing with it, it makes it something.

02:58.200 --> 03:00.200
You start fiddling with it.

03:00.200 --> 03:02.200
And you know, start small.

03:02.200 --> 03:04.200
Do what you want to do.

03:04.200 --> 03:07.200
Give it a lot of time and have fun.

03:07.200 --> 03:09.200
That's how you start an open source project.

03:09.200 --> 03:11.200
You have a niche, you start scratching.

03:11.200 --> 03:15.200
And as long as it is fun, why not work on it?

03:15.200 --> 03:19.200
And in my case, I worked on it for about two years.

03:19.200 --> 03:23.200
I actually recalled it Curl then in 1998.

03:23.200 --> 03:25.200
So it started with another name.

03:25.200 --> 03:26.200
But that's a long story.

03:26.200 --> 03:32.200
Anyway, two years later, December 1998, what an awesome success.

03:32.200 --> 03:35.200
300 downloads of my software.

03:35.200 --> 03:40.200
I have this screenshot from the website that I had back then.

03:40.200 --> 03:46.200
Because I think it's a cool reminder that actually getting 300 downloads of your software is pretty cool.

03:46.200 --> 03:49.200
That's way more than all your friends.

03:49.200 --> 03:52.200
All those who just did it because they know you.

03:52.200 --> 03:54.200
Actually started to reach out.

03:54.200 --> 03:55.200
And that's cool.

03:55.200 --> 04:00.200
It is cool with 300 downloads, even compared to 20 billion today.

04:00.200 --> 04:06.200
And I also want to emphasize that this was two years later, right?

04:06.200 --> 04:09.200
Two years later, 300 downloads.

04:09.200 --> 04:11.200
Yay, a good one somewhere.

04:11.200 --> 04:17.200
I mean, in 20 years, we could have 3000.

04:17.200 --> 04:19.200
So yeah, keep working at it.

04:19.200 --> 04:27.200
And finding your goal or you find a project to work on, of course, it's a good thing, right?

04:27.200 --> 04:28.200
It's fun and work on it.

04:28.200 --> 04:33.200
And maybe, sure, you want to make it easy for others to help.

04:33.200 --> 04:38.200
But you can be sure that, I mean, the world is drowning in open source projects and good ideas, right?

04:38.200 --> 04:40.200
It's not a problem to find good ideas.

04:40.200 --> 04:42.200
It's not a problem to find open source projects.

04:42.200 --> 04:46.200
But how do you actually get anyone else interested in your little project?

04:46.200 --> 04:49.200
Because you think it's fun and interesting and serves a purpose.

04:49.200 --> 04:51.200
Probably not.

04:51.200 --> 04:58.200
Probably you're just going to have to realize that it's you and your project for a while until it's proven to be something.

04:58.200 --> 05:01.200
So as long as it's fun, why not keep at it, right?

05:01.200 --> 05:05.200
And spend the time because it's not going to be an immediate success.

05:05.200 --> 05:08.200
Very few things are an immediate success.

05:08.200 --> 05:13.200
So yeah, spend time on it.

05:13.200 --> 05:17.200
People often ask me what I've done in Curl mostly.

05:17.200 --> 05:21.200
But I think what I'm mostly done on Curl is spend time, right?

05:21.200 --> 05:25.200
1996, I started this.

05:25.200 --> 05:30.200
And also learn to use the time.

05:30.200 --> 05:34.200
I told you, I was 26 years when I started this.

05:34.200 --> 05:36.200
I didn't have any kids.

05:36.200 --> 05:39.200
I've had kids since then and they have grown up pretty big since then too.

05:39.200 --> 05:45.200
And all of that, we're all having lives, families, other things than just open source, right?

05:45.200 --> 05:49.200
But how do you actually get time to spend on your projects?

05:49.200 --> 05:57.200
In many cases, you maybe need to do a little less of something else or a little bit less sleep or whatever.

05:57.200 --> 06:02.200
In my case, I sort of, yeah, maybe if you really want to spend time,

06:02.200 --> 06:05.200
as I say, you need to spend time on your project to get somewhere,

06:05.200 --> 06:09.200
maybe you have to do a little bit less of something else, right?

06:09.200 --> 06:15.200
And people actually sometimes don't believe me when I say that I never ever play computer games, right?

06:15.200 --> 06:19.200
That's just, that's an easy thing to rip out of your life and save hours

06:19.200 --> 06:22.200
and spend that on your open source project instead.

06:22.200 --> 06:25.200
I mean, you can cut down on sleep as well.

06:25.200 --> 06:31.200
And I do that to Firmum, but that has its downsides as well.

06:31.200 --> 06:38.200
Just accept the fact that for long periods of time, you might just be the only person, right?

06:38.200 --> 06:42.200
You, of course, you make it easy for anyone to contribute and you know,

06:42.200 --> 06:46.200
load the bars and accept pull requests and everything, but, you know,

06:46.200 --> 06:52.200
there are many open source projects out there and we're all competing with the same developers, right?

06:52.200 --> 06:56.200
And all those developers, they also play computer games.

06:56.200 --> 07:02.200
They watch TV, they have families, they have other priorities in life before your open source project.

07:02.200 --> 07:08.200
But I can spend time on my project. I can control at least to some degree what I spend time on.

07:08.200 --> 07:14.200
So sure, just accept the fact that, yeah, yeah, yeah, I make pull requests in my own project, right?

07:14.200 --> 07:19.200
I put them up there, someone can comment on them, someone might review them, but if they don't,

07:19.200 --> 07:23.200
I go ahead and much and continue with the next one.

07:23.200 --> 07:27.200
Because in the end, it doesn't really matter. Looking back at your project,

07:27.200 --> 07:32.200
you don't care if I started my project 10 years ago, 15 years ago, or two years ago,

07:32.200 --> 07:36.200
as long as the project is good, it's there, it fulfills the purpose.

07:36.200 --> 07:43.200
So in a way, time doesn't really matter in the end.

07:43.200 --> 07:48.200
And of course, reaching somewhere, accomplishing something with your project,

07:48.200 --> 07:52.200
there is really no silver bullet here. There is just engineering.

07:52.200 --> 07:57.200
And there's just open source stuff that we all know how to do. We've all been doing for a long time.

07:57.200 --> 08:01.200
There is just hard work and keeping at it. And of course, having fun.

08:01.200 --> 08:07.200
Because if you're not having fun when doing it, you probably won't endure.

08:07.200 --> 08:11.200
So in the code project, right, it started in 1996.

08:11.200 --> 08:19.200
Number of lines of code is basically zero.

08:19.200 --> 08:25.200
So I actually started a project with someone else's code, so I didn't write those first 160 lines of code.

08:25.200 --> 08:31.200
And then I became a maintainer a few months later. And then we started the journeys.

08:31.200 --> 08:37.200
And then we, so now we're at 160k something.

08:37.200 --> 08:43.200
And yes, a fascinating linear growth too. Kind of unbelievable.

08:43.200 --> 08:49.200
So yeah, I'm just saying that keeping at it, things might develop.

08:49.200 --> 08:55.200
And making sure that others can contribute is of course, crucially important.

08:55.200 --> 09:01.200
And that's why it's open source. We want to enable others to contribute,

09:01.200 --> 09:07.200
even if in many times maybe they don't, but there's still that opportunity, right, and availability.

09:07.200 --> 09:15.200
And if you're doing things right and you happen to be accepted by others, maybe someone will contribute.

09:15.200 --> 09:20.200
And now everyone is looking at that bump in 2005 and thinks, what happened?

09:20.200 --> 09:28.200
And it's quite boring. I actually just went back and sort of filled in names that I have missed out from the list before.

09:28.200 --> 09:32.200
So I just went back, so it's actually not supposed to be there.

09:32.200 --> 09:37.200
But it's my script count number of names in the list.

09:37.200 --> 09:42.200
So over time you might get a lot of help if you're successful enough.

09:42.200 --> 09:47.200
But success is obviously not given, right? There are a lot of open source projects.

09:47.200 --> 09:50.200
I mean, and they're adding every day, right? So there are hundreds of thousands.

09:50.200 --> 09:55.200
Just look at GitHub or whatever. We're drowning in open source projects.

09:55.200 --> 10:02.200
And yeah, it's certainly not a guarantee that whatever we do is a success and going to be popular or anything.

10:02.200 --> 10:09.200
But if you don't give it enough time, if you don't spend your efforts and really make sure,

10:09.200 --> 10:14.200
I get a lot of questions or people say, yeah, yeah, I spend a lot of time on my 47 projects.

10:14.200 --> 10:18.200
I did them for several months and nobody used it.

10:18.200 --> 10:23.200
So sure, if you don't spend enough time, if you don't polish it enough,

10:23.200 --> 10:26.200
maybe it doesn't stick out among all the others, right?

10:26.200 --> 10:32.200
So maybe you actually have to spend more time to get somewhere.

10:32.200 --> 10:37.200
And it needs to be fun. But whatever you do and whatever anyone does,

10:37.200 --> 10:42.200
there will be times when you're sort of, when you just run into something that wasn't supposed to happen,

10:42.200 --> 10:50.200
like a security problems or whatever. And it's bound to happen to anyone who's doing software,

10:50.200 --> 10:55.200
maybe more to some than less to others. But still, everyone is doing mistakes.

10:55.200 --> 10:58.200
It doesn't matter how long we're doing this or how much we have done it.

10:58.200 --> 11:01.200
As long as we keep developing, we keep changing things.

11:01.200 --> 11:06.200
There will be mistakes and mistakes will lead to security problems every once in a while.

11:06.200 --> 11:11.200
In Curl, it looks like this. The green ones are bars.

11:11.200 --> 11:17.200
When we fix security problems, the red ones are when we introduce them because I tracked them down.

11:17.200 --> 11:22.200
So of course, we introduced them before we fixed them.

11:22.200 --> 11:26.200
But anyway, I'm just meaning that, yeah, we work really hard, of course,

11:26.200 --> 11:29.200
to make sure that we don't introduce bugs, we don't introduce security problems,

11:29.200 --> 11:34.200
but can be sure that they will creep in anyway because it's tough.

11:34.200 --> 11:37.200
And you all know that, right?

11:37.200 --> 11:41.200
Nothing new here.

11:41.200 --> 11:45.200
But what do you do? You just own your mistakes because they are going to happen

11:45.200 --> 11:49.200
and try to learn from them, which I think is really, really hard, right?

11:49.200 --> 11:52.200
Because every time you get a security problem, it feels like,

11:52.200 --> 11:55.200
this is a one-off, we should never have done this stupid thing.

11:55.200 --> 11:59.200
But try to learn from it, adapt, move on, add more tests,

11:59.200 --> 12:04.200
and make sure that we at least don't reproduce the exact same problem again in the future.

12:04.200 --> 12:09.200
And yeah, I've done that still several times actually, it's kind of stupid.

12:09.200 --> 12:14.200
Yeah. And keep having fun because if it's not fun, it's not going to,

12:14.200 --> 12:18.200
you're not going to spend all that time on it.

12:18.200 --> 12:21.200
And no one else is going to do it either.

12:21.200 --> 12:23.200
And of course, everyone makes mistakes.

12:23.200 --> 12:26.200
And it's really a matter of how you handle the mistakes.

12:26.200 --> 12:29.200
It's not sort of the amount of mistakes or how critical they are,

12:29.200 --> 12:33.200
but how you take care of them, how you take care of the people who actually made the mistakes.

12:33.200 --> 12:38.200
In my case, it's easy to take care of the people because almost all of them were my mistakes.

12:42.200 --> 12:49.200
And there's no denying that it's sort of soul-crushing

12:49.200 --> 12:51.200
when you have your software in 20 billion installations

12:51.200 --> 12:56.200
and you have one of these things that you know can end up really, really bad for the users.

12:56.200 --> 13:01.200
Yes, that can make it a little bit harder to go to sleep at night.

13:02.200 --> 13:06.200
But yeah, again, we all do mistakes.

13:06.200 --> 13:09.200
We try to learn from them and move on, right?

13:09.200 --> 13:16.200
And in our case, in pretty much everyone's case, we just have to do what we can do, right?

13:16.200 --> 13:18.200
Engineering, we write readable code.

13:18.200 --> 13:21.200
You should be able to understand the code in any language.

13:21.200 --> 13:23.200
Whenever you read code, it should be understandable.

13:23.200 --> 13:26.200
If you can't understand the code, it's the wrong code, right?

13:26.200 --> 13:29.200
And you document everything clearly a lot.

13:29.200 --> 13:33.200
And another thing with working stuff, or working stuff for a long time,

13:33.200 --> 13:38.200
is that you have a long time to write the documentation as well, ideally, right?

13:38.200 --> 13:42.200
And a lot of tests too, because the more time, the more tests.

13:42.200 --> 13:45.200
And you analyze your code, of course, you threw every tool at it

13:45.200 --> 13:48.200
and make sure that the tools, they don't complain on your code.

13:48.200 --> 13:52.200
And then when you have sort of fulfilled all these steps,

13:52.200 --> 13:55.200
yeah, you know, it's pretty decent and you can throw fuzzing at it.

13:55.200 --> 14:00.200
And in our case, I also like to offer bug bounty as well,

14:00.200 --> 14:03.200
because I'm fortunate enough to have someone who pays for it.

14:03.200 --> 14:07.200
So we offer a lot of money to people who can point out the security problems.

14:07.200 --> 14:12.200
And yes, then you get a lot of bogus crap as well, sort of, yeah, there's a security problem.

14:12.200 --> 14:18.200
But still, also get a lot of quality people spending a lot of time and effort

14:18.200 --> 14:21.200
actually trying to find security flaws.

14:21.200 --> 14:24.200
So in my experience, this works really well.

14:24.200 --> 14:31.200
It's a pretty cheap way to get a lot of help to find your most stupid mistakes.

14:31.200 --> 14:37.200
But, okay, there might be other people involved in open source sometimes.

14:37.200 --> 14:39.200
You're not alone all the time.

14:39.200 --> 14:45.200
And really, over time, you learn that it's code is easy, right?

14:45.200 --> 14:49.200
Code is easy, you can just debug it, try it again, write a new algorithm,

14:49.200 --> 14:52.200
but the people, they are never easy.

14:52.200 --> 14:55.200
People are sort of what the challenges are.

14:55.200 --> 14:58.200
And the longer you work in an open source project, the more you maintain,

14:58.200 --> 15:05.200
you know that the challenges, what you need to sort of,

15:05.200 --> 15:10.200
what you face on a day-to-day basis is the problems with communicating

15:10.200 --> 15:15.200
and talking to people from different areas of life, cultures, languages and everything.

15:15.200 --> 15:21.200
And you can be sure that they are going to be less-to-friendly at times.

15:21.200 --> 15:25.200
So over time, we do less and less coding and more and more interfacing with humans

15:25.200 --> 15:32.200
and other things as a maintainer of some stuff, right?

15:32.200 --> 15:39.200
And, right, so negative feedback is sort of the default.

15:39.200 --> 15:43.200
It's a little bit depressing, but you know, as long as things work, sure,

15:43.200 --> 15:48.200
20 billion installations, no one says a single word, sort of, yeah, it works, cool.

15:48.200 --> 15:53.200
And someone finds a little bug somewhere and you can be sure that that is what you are told about,

15:53.200 --> 15:59.200
especially if it appears stupid or silly or something, because then someone is very upset

15:59.200 --> 16:02.200
that surely it should have worked since a long time ago.

16:02.200 --> 16:05.200
You've been working on this for so much.

16:05.200 --> 16:09.200
So that is, of course, and I know you all know this, that's the default.

16:09.200 --> 16:13.200
You basically never hear when things are good, because that's the default.

16:13.200 --> 16:15.200
Everyone assumes everything is good all the time.

16:15.200 --> 16:18.200
When something is bad, you get told about it.

16:18.200 --> 16:25.200
So people often ask me what the difference is in curl back in the days with 2,000 lines of code

16:25.200 --> 16:30.200
with 300 users compared today with 20 billion installations.

16:30.200 --> 16:35.200
There's really no difference, because in the little development community, people raise their bugs,

16:35.200 --> 16:38.200
they complain, they have problems.

16:38.200 --> 16:42.200
All the ones that are successful, they shut up, they are somewhere else.

16:42.200 --> 16:46.200
So it doesn't really look different today.

16:46.200 --> 16:56.200
And a lot of lessons in what you do when you realize over time that contributors rarely stick around.

16:56.200 --> 17:03.200
In curl, I have lowered the bars and the friction for new contributors, I think, a lot.

17:03.200 --> 17:11.200
So we get a lot of contributors even fixing a spelling error or typos in a comment somewhere.

17:11.200 --> 17:13.200
People contribute that.

17:13.200 --> 17:16.200
And I think any contribution is a good contribution.

17:16.200 --> 17:19.200
It doesn't really matter if you fix a typo that makes it hard to read.

17:19.200 --> 17:20.200
Yes, it's an improvement.

17:20.200 --> 17:24.200
So I accept it, but do the contributors stick around?

17:24.200 --> 17:32.200
Out of all, I mean, today we have, I think, 1,240 authors who have written code commits in curl.

17:32.200 --> 17:35.200
That's an amazing number of people.

17:35.200 --> 17:40.200
Over 65% of them did it once and never again.

17:40.200 --> 17:45.200
So, and I don't think I'm unique in that, and I don't think it's special.

17:45.200 --> 17:47.200
I think it's more like that's how people work, right?

17:47.200 --> 17:51.200
They show up, they find a problem, they submit it, and they move on to something else.

17:51.200 --> 17:56.200
Because it's not their primary interest in helping my project, they just found a problem and fixed it and moved on.

17:56.200 --> 18:04.200
And sure, it's okay for them, it's okay for me too, but just the realization that most people who show up,

18:04.200 --> 18:10.200
they will show up there a few times maybe if you're lucky and then never again.

18:10.200 --> 18:16.200
And maybe every once in a while, of course, you get a new contributor who will actually stick around for a long time and contribute a lot.

18:16.200 --> 18:18.200
And you will be happy for those.

18:18.200 --> 18:21.200
And of course, I mean, there actually is the reverse too, right?

18:21.200 --> 18:23.200
There are a lot of newcomers.

18:23.200 --> 18:31.200
And I've never heard of, you never saw this person before in your life, and they show up suddenly one day with an amazing patch showing that they understand everything.

18:31.200 --> 18:43.200
And you can sort of be amazed that someone just shows up on your doorstep one day and have a perfect understanding of your architecture and design style and code style and everything.

18:43.200 --> 18:49.200
So suddenly, open source is open and ready for surprises in every direction.

18:49.200 --> 18:52.200
And that's part of the fun, right?

18:52.200 --> 19:05.200
Less fun is perhaps that sometimes when being a little bit public about things, things can go in the other direction.

19:05.200 --> 19:11.200
So I actually never really...

19:11.200 --> 19:21.200
So this email from, well, soon three years ago, was actually the first one that sort of hit me.

19:21.200 --> 19:27.200
Hit me like this.

19:27.200 --> 19:31.200
Yeah, so my email address is in the current license.

19:31.200 --> 19:34.200
And the current license then appear in a lot of products.

19:34.200 --> 19:43.200
And this person quite clearly had been attacked in some way and saw some traces of curl in some leftovers somewhere.

19:43.200 --> 19:45.200
And that was obviously my fault.

19:45.200 --> 19:49.200
He had lost his family's life and job and everything.

19:49.200 --> 19:55.200
Completely confused person, but it was all my fault.

19:55.200 --> 19:58.200
That was tough.

19:58.200 --> 20:07.200
But, okay, open source, this fun thing with open source, open source, the term was coined in 1998, right?

20:07.200 --> 20:08.200
Exactly the same.

20:08.200 --> 20:12.200
Actually the month before I started renamed it to curl.

20:12.200 --> 20:14.200
So it's sort of open source and curl.

20:14.200 --> 20:20.200
And it's been hand in hand going for a while and still just 25 years, right?

20:20.200 --> 20:23.200
Before we did open source before we called it open source too, right?

20:23.200 --> 20:26.200
Because we still worked exactly the same way.

20:26.200 --> 20:35.200
We just didn't use the term then because then mostly we talked about free software, but it was a little bit more confusion than what it actually was.

20:35.200 --> 20:41.200
But anyway, so today is much easier to do open source because everyone knows about open source.

20:41.200 --> 20:46.200
If you approach a developer today working in any field, people actually know what open source is.

20:46.200 --> 20:51.200
Back in 1998 or 96, no one knew about open source in general.

20:51.200 --> 20:55.200
It was just a niche click of weirdos.

20:55.200 --> 20:57.200
And today everyone is using open source, right?

20:57.200 --> 21:06.200
There's not a single project, single user, single developer anyway who doesn't use open source at least to some extent willingly or not.

21:06.200 --> 21:07.200
It's just going to be there.

21:07.200 --> 21:14.200
And we're all going to work with open source in ways that we suddenly did not 25 years ago.

21:14.200 --> 21:20.200
And we all, I mean, there's so, so many more contributors to open source today than before, right?

21:20.200 --> 21:23.200
There are literally millions and millions of possible contributors today.

21:23.200 --> 21:27.200
Back in 1998, there were not millions and millions of contributors.

21:27.200 --> 21:34.200
In 1998, the total internet population was, I think, estimated to like 40 million.

21:34.200 --> 21:38.200
That's basically the amount of open source developers today, right?

21:38.200 --> 21:44.200
And of course, we're many, many more maintainers of open source today than we ever were before.

21:44.200 --> 21:47.200
So there's also a lot of equals among us, right?

21:47.200 --> 21:54.200
We all know, I can talk to you like today, we who maintain open source and you are all a lot of open source maintainers.

21:54.200 --> 21:57.200
I don't have to even pretend.

21:57.200 --> 22:00.200
So there's a lot of good things.

22:00.200 --> 22:05.200
So it's of course also much easier and much better place to do open source today than ever before.

22:05.200 --> 22:11.200
And I think it's going to be much easier and better going forward as well because all of this is just going to improve.

22:11.200 --> 22:21.200
We're just going to do more open source and it's way, way easier to do open source today too, thanks to infrastructure, tooling, funding, whatever.

22:21.200 --> 22:24.200
But I think we're into in for a bright future.

22:24.200 --> 22:35.200
But anyway, I've done this and worked on a single project for so long and people ask me then, don't you ever get bored?

22:35.200 --> 22:40.200
The same project for 27, 28 years, yes.

22:40.200 --> 22:42.200
And of course, I get bored.

22:42.200 --> 22:45.200
Everyone gets bored every once in a while, right?

22:45.200 --> 22:46.200
Lack of motivation.

22:46.200 --> 22:48.200
How fun is it to work on the same thing all the time?

22:48.200 --> 22:50.200
Of course, the motivation comes and goes.

22:50.200 --> 22:51.200
That goes for everyone.

22:51.200 --> 22:54.200
And that's just natural part of life, right?

22:54.200 --> 23:04.200
Whatever you do, there will be periods in your life when you don't feel the same sort of, yes, it's going to be great to work on this documentation today again.

23:04.200 --> 23:09.200
Sometimes you just have to, you know, do something else, spend more time with your family.

23:09.200 --> 23:18.200
In my case, I like to sort of move around, do something silly and some less important part of the code or do a slight less curl for a while.

23:18.200 --> 23:22.200
I've just come to realize that lack of motivation is just a natural thing.

23:22.200 --> 23:23.200
It's just sort of an endless cycle.

23:23.200 --> 23:32.200
Sometimes you come in and then come back and it doesn't really matter as long as you sort of let it play out and maintain your overload.

23:32.200 --> 23:37.200
One of these things is very commonly brought up, right?

23:37.200 --> 23:46.200
If you're being that single person and you feel that a lot of users are depending on your work, maybe you sometimes work a little more than you should.

23:46.200 --> 23:51.200
And I think this is a real problem and it's a real, it can affect us for real.

23:51.200 --> 23:56.200
But it is important to separate you from your project, of course.

23:56.200 --> 23:59.200
I'm not sure I manage that always, but I do try.

23:59.200 --> 24:12.200
And there's a little this of, you know, if your code run in a lot of places, can you really ever be sure when you release a version that is not going to sort of bring down half the internet?

24:12.200 --> 24:13.200
I don't know.

24:14.200 --> 24:17.200
I think you just come to, you have to deal with it.

24:17.200 --> 24:26.200
In my case, I think I'm actually pretty good with this because I feel that we have enough tests, enough eyeballs, enough people involved that crossing my fingers.

24:26.200 --> 24:29.200
It might not happen too often at least.

24:29.200 --> 24:32.200
So I think it works really well.

24:32.200 --> 24:34.200
That's from my case at least.

24:34.200 --> 24:42.200
But I want to emphasize and I think this is true for many people that the thing about imposter syndrome, it doesn't really ever go away.

24:42.200 --> 24:47.200
It doesn't matter if you have those 20 billion installations, you can still experience periods of that.

24:47.200 --> 24:54.200
Did I, did I, do I even know this sort of who am I to tell them how things work?

24:54.200 --> 25:00.200
I mean, come on, this protocol doesn't actually work like this.

25:00.200 --> 25:09.200
But what one of my skills, I think when it comes to doing open source is just make sure to use the time slots you get.

25:09.200 --> 25:16.200
I have that a lot, you know, you have a family, you have a life, you have friends, but sometimes you have 20 minutes for yourself.

25:16.200 --> 25:19.200
Can you spend those 20 minutes on your open source project?

25:19.200 --> 25:25.200
I've become very good at it, which makes me very good at, you know, if I get 20 minutes here and 20 minutes there, that's actually 40 minutes.

25:25.200 --> 25:33.200
And I'm not complaining about, yeah, I need an hour to get prepared first because then I would never do anything at all.

25:33.200 --> 25:38.200
And I don't split my attention between all, a lot of sort of many other tiny things.

25:38.200 --> 25:43.200
Sure, I do a lot of other projects as well, but I give them much less attention.

25:43.200 --> 25:49.200
And again, time might feel important sometimes, but it really doesn't.

25:49.200 --> 25:55.200
In most cases, it doesn't matter if you're done today or tomorrow or next week or the week after that.

25:55.200 --> 25:56.200
Who cares, right?

25:56.200 --> 26:00.200
Sure, it's not in this release, you're going to do another release soon again anyway.

26:00.200 --> 26:07.200
And down the line, it didn't matter if you were done last week or next week.

26:07.200 --> 26:12.200
So, let it take some more time.

26:12.200 --> 26:18.200
And of course, I'm a true believer in release early, release often, so that everyone has a chance to get your latest code as soon as possible,

26:18.200 --> 26:29.200
because it just makes maintaining and everything easier and contributors have a much easier time to actually work on your latest code better.

26:29.200 --> 26:36.200
Yeah, so reduce contributor fiction to get people to help out better and have fun.

26:36.200 --> 26:39.200
Of course, we need to just remember that we're all different.

26:39.200 --> 26:46.200
I can stand here and say how I work, but I'm sure that you all have sort of objections and say, yeah, it doesn't work for me.

26:46.200 --> 26:53.200
It doesn't work for my case because I mean, spare time, as I'm talking about spare time working on open source,

26:53.200 --> 27:00.200
you can of course, in my case, I work on open source work hours and spare time hours, that sort of maximize.

27:00.200 --> 27:05.200
But working on anything, spare time is of course a luxury, right?

27:05.200 --> 27:14.200
If you're working on something on your spare time, maybe someone else in your family is doing, you know, the laundry or cooking or taking care of the kids or whatever.

27:14.200 --> 27:18.200
So of course, that's a luxury. If you have that position, it's a luxury. I don't deny that.

27:18.200 --> 27:23.200
So in many cases, you don't have that luxury. And of course, then it's much harder.

27:23.200 --> 27:27.200
And there's of course an unequal privilege here, right?

27:27.200 --> 27:29.200
If you're rich enough to do this, you can do this.

27:29.200 --> 27:36.200
If you have to work two works and take care of the rest of your extended family, maybe you can't do this.

27:36.200 --> 27:43.200
Yeah, just have to be aware that of course it's a luxury. We're all different. We're all unique.

27:43.200 --> 27:50.200
And of course, what is success? I consider 300 downloads a success in 1998.

27:50.200 --> 27:53.200
We all have a different way to measure success, right?

27:53.200 --> 27:57.200
So we don't have to have 20 billion installations.

27:57.200 --> 28:04.200
It's fine if all your friends are happy with your tool and you can just have fun. That's also success.

28:04.200 --> 28:09.200
In my case, I have mentioned already my email address in the Curl license.

28:09.200 --> 28:18.200
This gives me an excellent opportunity to learn about people's agonists in life.

28:18.200 --> 28:25.200
Like if they don't know how to install their GPS in their car, they email me and ask me.

28:25.200 --> 28:32.200
And you can imagine the amount of anger in this user.

28:32.200 --> 28:38.200
He couldn't install the GPS. He's been scrolling through that open source license screen in his car.

28:38.200 --> 28:41.200
Found an email. I'm going to email this person.

28:42.200 --> 28:48.200
So I get a lot of car questions.

28:48.200 --> 28:59.200
So then you learn, yeah, Sean, so my email is apparently in a lot of cars and people have problems with cars.

28:59.200 --> 29:01.200
So I have no idea.

29:01.200 --> 29:10.200
But not only cars, actually.

29:10.200 --> 29:14.200
So I can learn about other things too.

29:14.200 --> 29:22.200
And usually my way, this is the best way I have to actually learn about where people are using Curl.

29:22.200 --> 29:24.200
So wow.

29:24.200 --> 29:26.200
So I have to Google.

29:26.200 --> 29:29.200
Often I don't even understand the question. I have to Google it. What are you talking about?

29:29.200 --> 29:35.200
Oh, great. Are they using Curl too?

29:35.200 --> 29:37.200
It's confusing.

29:37.200 --> 29:45.200
I sort of stopped replying to them because...

29:45.200 --> 29:49.200
You know, the first... She asked me when I started.

29:49.200 --> 29:53.200
You want to help out? You want to be friendly? Someone ask you questions?

29:53.200 --> 29:56.200
Obviously completely lost.

29:56.200 --> 30:01.200
No, sir. This is how it works. I just wrote a little component.

30:01.200 --> 30:06.200
No, no, no, no. That's not how it works. Just ask your friends and help me fix this car now.

30:06.200 --> 30:12.200
So I have this example. This is a great one. It's a little bit convoluted, but I'll explain.

30:12.200 --> 30:17.200
I got an email from a woman. She said her Instagram account was hacked.

30:17.200 --> 30:22.200
So what are you asking me about that?

30:22.200 --> 30:26.200
Sad for you. Okay.

30:26.200 --> 30:30.200
But she showed me the proof that I'm involved.

30:30.200 --> 30:33.200
Instagram? My name.

30:33.200 --> 30:41.200
Now I should just head over and talk to the guys and tell them to help her with her account that had been hacked.

30:41.200 --> 30:45.200
And I told her, cool. They're using Curl. That's in my code, right?

30:45.200 --> 30:49.200
And try to explain the concept of open source. I never talked to these persons.

30:49.200 --> 30:53.200
I didn't know the use, Carl. For me, it was like a revelation.

30:53.200 --> 30:56.200
Cool. Instagram, right? That's like a billion installs suddenly.

30:56.200 --> 31:01.200
She didn't really see it the same way.

31:01.200 --> 31:08.200
Now, she emailed me back. She found my name again in her phone.

31:08.200 --> 31:14.200
Exhibit two.

31:14.200 --> 31:18.200
But it cannot be a coincidence.

31:18.200 --> 31:22.200
Your name cannot be twice in my phone.

31:22.200 --> 31:26.200
For any good reason, right?

31:26.200 --> 31:35.200
So she threatened to contact them and tell me that I'm an Instagram and Spotify hacking.

31:35.200 --> 31:42.200
I don't know if she did actually.

31:42.200 --> 31:46.200
So maybe they don't know this yet.

31:46.200 --> 31:50.200
No, I'm exposing myself.

31:50.200 --> 31:55.200
So when I work on this stuff, I just, what I'm trying to say here is I'm not special.

31:55.200 --> 31:59.200
I didn't do anything genius like I've just been working on this a long time.

31:59.200 --> 32:03.200
I just had an idea. I think it's fun. So this is what I do.

32:03.200 --> 32:08.200
And I think this is sort of the best you can do.

32:08.200 --> 32:10.200
And I wanted a tool to do the internet transfer.

32:10.200 --> 32:13.200
It does look a little bit more these days than it did from the beginning.

32:13.200 --> 32:18.200
And I endured. I kept going at it because I didn't know anything else and didn't know better.

32:18.200 --> 32:21.200
I think it's fun. And keep polishing.

32:21.200 --> 32:24.200
If you spend a lot of time on something, it can actually become pretty good.

32:24.200 --> 32:29.200
And make it possible for others to contribute if they want to.

32:29.200 --> 32:32.200
And you can just hope and wish that they will contribute.

32:32.200 --> 32:35.200
In my case, they did to a pretty hard degree.

32:35.200 --> 32:37.200
And this is really the most fun I can imagine.

32:37.200 --> 32:42.200
Yes, I'm living the dream. I work on my spare time project full time and getting paid for it.

32:42.200 --> 32:45.200
What else can you ask?

32:45.200 --> 32:49.200
So, is that easy? I think you can do it too.

32:49.200 --> 32:53.200
And pretty much that's sort of what I wanted to tell you.

32:53.200 --> 32:58.200
I've written about these things a little bit before in this book-like thing

32:58.200 --> 33:03.200
if you wanted to read more about my thoughts on this topic.

33:03.200 --> 33:06.200
So, thank you. I'm done.

33:06.200 --> 33:09.200
APPLAUSE

33:16.200 --> 33:19.200
I think we have a few minutes for questions.

33:19.200 --> 33:22.200
If you have a question, raise your arm and someone will run with it.

33:22.200 --> 33:26.200
There's a question.

33:26.200 --> 33:29.200
The mic will come flying.

33:37.200 --> 33:39.200
Hi, thanks for the talk.

33:39.200 --> 33:41.200
I have a question regarding...

33:41.200 --> 33:44.200
You mentioned that you have lots of contributors nowadays.

33:44.200 --> 33:47.200
And how do you deal with their PRs, basically?

33:47.200 --> 33:49.200
I was wondering two questions.

33:49.200 --> 33:54.200
One is how nitpicky you are and how you...

33:54.200 --> 33:59.200
Basically, based on your experience, how nitpicky can you be

33:59.200 --> 34:03.200
without discouraging people from contributing?

34:03.200 --> 34:08.200
Like being overly pedantic on comments and stuff like that?

34:08.200 --> 34:12.200
I'm having a little bit of a hard time to hear your question.

34:12.200 --> 34:18.200
So, it's regarding how nitpicky you are in your PR reviews.

34:18.200 --> 34:21.200
So, how pedantic you can be

34:21.200 --> 34:27.200
not to discourage people from contributing to such an important piece of software?

34:27.200 --> 34:31.200
So, do you tend to just let things through or are you very strict?

34:31.200 --> 34:36.200
And you still get lots of contributors, even though you're strict in your reviews.

34:36.200 --> 34:39.200
Because I guess when you get a diverse set of contributors,

34:39.200 --> 34:42.200
it can happen that lots of people have different coding styles

34:42.200 --> 34:48.200
and different levels of detail that they go into, code comments and stuff.

34:49.200 --> 34:54.200
I don't think I have any sort of general rule there.

34:54.200 --> 34:57.200
I try to...

34:57.200 --> 35:02.200
Sometimes, I think there are contributors who are clearly,

35:02.200 --> 35:06.200
maybe newcomers struggling with the language or the culture or everything.

35:06.200 --> 35:10.200
And of course, I try to be a little bit more welcoming,

35:10.200 --> 35:13.200
maybe more forgiving and helping out.

35:13.200 --> 35:17.200
But it depends also a little bit about load and everything.

35:17.200 --> 35:21.200
Usually people, no matter culture, language, anything,

35:21.200 --> 35:25.200
people understand code and following code styles

35:25.200 --> 35:28.200
and making sure the test case works and everything like that.

35:28.200 --> 35:32.200
So, usually I don't have to consider that to any greater amount.

35:32.200 --> 35:34.200
Okay, that's interesting.

35:34.200 --> 35:38.200
Most people are developers. They understand this from the beginning.

35:38.200 --> 35:42.200
The other bit of question was regarding... similar, but regarding documentation.

35:42.200 --> 35:44.200
So, have you found that...

35:44.200 --> 35:47.200
Documentation is roughly the same.

35:47.200 --> 35:50.200
Documentation in the code comments.

35:50.200 --> 35:55.200
So, if you've seen that being over-documented,

35:55.200 --> 35:59.200
has that helped you or are you not doing it?

35:59.200 --> 36:01.200
Because when you get such a...

36:01.200 --> 36:04.200
Over-documented, that's a rare thing.

36:04.200 --> 36:07.200
Well, over already means it's too much.

36:07.200 --> 36:11.200
But when you know... you could go overboard and you could...

36:11.200 --> 36:15.200
You can, but in my experience that is very rare and sure.

36:15.200 --> 36:18.200
I mean, we can have a discussion.

36:18.200 --> 36:21.200
Sure, you mentioned this as a comment,

36:21.200 --> 36:24.200
but then below the code is exactly the same thing.

36:24.200 --> 36:26.200
Assign A to 2.

36:26.200 --> 36:27.200
No, yeah, of course.

36:27.200 --> 36:29.200
Maybe you don't have to say that in a comment,

36:29.200 --> 36:31.200
and then we just had a discussion.

36:31.200 --> 36:32.200
So, of course.

36:32.200 --> 36:35.200
But I think that's very rare, actually.

36:35.200 --> 36:37.200
Usually it's in the other direction.

36:37.200 --> 36:41.200
Maybe you could explain a little comment here why this is happening,

36:41.200 --> 36:43.200
and not just have a huge blob of code.

36:43.200 --> 36:44.200
Right, right.

36:44.200 --> 36:49.200
I guess what I'm referring to is when you have such a long story in your software,

36:49.200 --> 36:53.200
and you want to leave traces of some design choices

36:53.200 --> 36:56.200
and why some things were implemented some way rather than the other,

36:56.200 --> 36:59.200
because other people, especially contributors who are one-time contributors,

36:59.200 --> 37:02.200
are not going to have enough context.

37:02.200 --> 37:05.200
So, I'm just asking regarding your style.

37:05.200 --> 37:10.200
Do you try to leave traces of context like this was done this way because of this reason?

37:10.200 --> 37:13.200
That reason, please do not change it, blah, blah, blah, stuff like that.

37:13.200 --> 37:18.200
Sometimes, but it's hard to leave traces of sort of to leave it for history

37:18.200 --> 37:20.200
because things change.

37:20.200 --> 37:24.200
So, leaving traces like that also just risks that you leave traces of your former design

37:24.200 --> 37:28.200
or former decisions that maybe were not enlightened enough.

37:28.200 --> 37:33.200
So, I don't make a concerned effort to do that

37:33.200 --> 37:35.200
because everything is in git anyway.

37:35.200 --> 37:40.200
We can always go back and look at the history if we want to.

37:40.200 --> 37:44.200
Was there any question left or should I shut up?

37:48.200 --> 37:50.200
I have a couple of questions.

37:50.200 --> 37:56.200
One is how much time you were spending on the project before being able to work on it?

37:56.200 --> 37:58.200
Sorry, can you repeat it a little louder?

37:58.200 --> 38:04.200
Yeah, sorry. How much time you were spending on the project before you were working on it full-time?

38:04.200 --> 38:14.200
I have a long-standing tradition in my family that I spend every night on curl.

38:14.200 --> 38:19.200
So, when the rest of the family goes to bed, I stay for another two hours working on curl.

38:19.200 --> 38:23.200
So, I've done that since 1996 basically.

38:23.200 --> 38:28.200
That's two hours every day, every week, every month, every year for 27 years.

38:28.200 --> 38:31.200
Now I've just added my full-time work as well.

38:31.200 --> 38:37.200
So, now it's just instead of two hours per day, it's now 10 hours for work days.

38:47.200 --> 38:49.200
Do you delegate maintenance?

38:49.200 --> 38:50.200
Sorry, again.

38:50.200 --> 38:52.200
Do you delegate maintenance?

38:52.200 --> 38:54.200
So, do you have many...

38:56.200 --> 39:04.200
Do you delegate maintenance of your project to someone else and how many...

39:05.200 --> 39:08.200
Or you maintain everything yourself?

39:08.200 --> 39:10.200
Because there's much maintenance overhead.

39:10.200 --> 39:13.200
Well, I'm the lead developer here.

39:13.200 --> 39:15.200
I'm not the sole maintainer.

39:15.200 --> 39:21.200
We're a whole team. There's a lot of people, apart from me, who can merge code and who does.

39:21.200 --> 39:26.200
I just think I do the bulk part of it because I'm the only one who works on it full-time.

39:26.200 --> 39:32.200
I do it much more than they, but if I would stay in a conference the whole weekend,

39:32.200 --> 39:38.200
someone else can still merge code while I'm away or if I'm just absent.

39:38.200 --> 39:40.200
So, there's a whole team actually.

39:45.200 --> 39:48.200
You

