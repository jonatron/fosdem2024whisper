WEBVTT

00:00.000 --> 00:11.400
Okay, finally we're set up.

00:11.400 --> 00:13.240
Many thanks for your patience.

00:13.240 --> 00:18.840
Let us kick off immediately with NetBSD 10.

00:18.840 --> 00:27.600
So as you probably know, NetBSD turned 30 years old, or 30 years young last year.

00:27.600 --> 00:34.560
We've tremendous improved in the security support of CPU, GPU and stuff like that.

00:34.560 --> 00:39.960
Also NetBSD is quite known for its package system.

00:39.960 --> 00:42.040
We have here Benny with us.

00:42.040 --> 00:47.040
Benny has been a developer for more than 10 years on NetBSD.

00:47.040 --> 00:55.400
He's been as well with us many times at the NetBSD developer room here at FusDem.

00:55.400 --> 01:01.920
So who better than him could talk about the 30 years of NetBSD.

01:01.920 --> 01:10.680
So ladies and gentlemen, please welcome Benny Siegert.

01:10.680 --> 01:12.960
Thank you for the kind words of introduction.

01:12.960 --> 01:15.200
So welcome to this talk today.

01:15.200 --> 01:17.200
I have mainly three topics for you.

01:17.200 --> 01:18.640
30 years of BSD.

01:18.640 --> 01:23.320
I want to talk about the new NetBSD release, NetBSD 10.

01:23.320 --> 01:27.960
And are we at 50 years of BSD yet?

01:27.960 --> 01:31.880
And that's what I want to start with.

01:31.880 --> 01:35.840
And the answer is maybe, depending on how you count.

01:35.840 --> 01:46.200
So one BSD, the first Berkeley software distribution was released in 1978, so that's not 50 years.

01:46.200 --> 01:52.960
However, the work on BSD started in 1974 when the computer science research group at Berkeley

01:53.000 --> 02:00.040
University got a PDP 11 and they installed Unix on it and they started hacking on it.

02:00.040 --> 02:02.240
In fact, they didn't have sole possession of it.

02:02.240 --> 02:05.320
They had shared with the mathematicians and they were using a different OS.

02:05.320 --> 02:14.600
So twice a day they had to switch the stack of disks and reboot.

02:14.600 --> 02:18.440
So one BSD, I don't know, isn't that interesting?

02:18.440 --> 02:20.240
It's mostly like a collection of utilities.

02:20.240 --> 02:23.920
You already need Unix installed and you can install some BSD stuff on it.

02:23.920 --> 02:30.960
Two BSDs may be the interesting one, which came out in 1979 because it's kind of a full system.

02:30.960 --> 02:36.960
And what I find amazing is that two BSD is still maintained today.

02:36.960 --> 02:44.080
So there's a collection of some crazy folks on the internet, obviously, that are pushing out patches

02:44.080 --> 02:45.640
for two BSD every once in a while.

02:45.640 --> 02:49.880
The last one was less than a year ago.

02:49.880 --> 02:58.680
And so like one BSD, two BSDs only for the PDP 11, but you can emulate one.

02:58.680 --> 03:06.120
You can use SimH, run a PDP 11 emulator and run 2.11 BSD and see what it's like.

03:06.120 --> 03:10.360
You can even go one step further if you're willing to do this and buy this thing here,

03:10.360 --> 03:12.440
which is called a Pi DP 11.

03:12.440 --> 03:20.920
It is the front panel from a PDP 11 model 70, except shrunk by a factor of three.

03:20.920 --> 03:23.000
So it's not quite as bulky.

03:23.000 --> 03:27.200
And in the back you stick a Raspberry Pi and it runs a PDP 11 emulator.

03:27.200 --> 03:32.920
And all the lights and all the switches and all the key switch even work do the right thing.

03:32.920 --> 03:40.040
So you can do this and run any of the PDP 11 operating systems, including 2.11 BSD in 2024,

03:40.040 --> 03:45.400
that's your thing.

03:45.400 --> 03:53.000
And then three BSD made a major change that they did, they ported it to Vax.

03:53.000 --> 03:58.360
And at the time it was still single architecture, so PDP 11's board vanished, instead was replaced

03:58.360 --> 04:01.440
by Vax and 4BSD was kind of the same.

04:01.440 --> 04:03.520
By the way, this will be very abridged.

04:03.520 --> 04:05.680
I will not go into all the details.

04:06.040 --> 04:11.160
BSD history would be its own talk and other people such as Marshall Kirk McKewsick have

04:11.160 --> 04:13.080
done this much better than I could.

04:13.080 --> 04:21.280
But anyway, so I want to highlight one release, which is a bit weird.

04:21.280 --> 04:24.760
Frankly like Berkeley is terrible at naming.

04:24.760 --> 04:35.360
4.3 BSD Tahoe was named because in addition to the Vax it supported the new Tahoe architecture.

04:35.360 --> 04:38.440
Now you probably have not heard of the Tahoe architecture.

04:38.440 --> 04:42.120
That's because it was a colossal failure.

04:42.120 --> 04:44.720
And the only, this is what the workstations look like.

04:44.720 --> 04:52.160
The only company manufacturing these workstations went out of business about two months later.

04:52.160 --> 04:55.200
So there are practically no surviving machines.

04:55.200 --> 04:58.280
I don't think anybody knows much about these.

04:58.280 --> 05:03.680
Apparently Pixar had one and they used it for special effects running BSD.

05:03.680 --> 05:08.520
What was special about this release is that it was both for the Vax and the Tahoe.

05:08.520 --> 05:13.600
So they separated all the bits that are specific to an architecture support.

05:13.600 --> 05:18.120
So people took this and said like, I don't care about Tahoe, I want to run it on something

05:18.120 --> 05:21.480
else so they ported it to all sorts of other architectures.

05:21.480 --> 05:33.120
And this is sort of the origin of the multi-architecture nature of modern BSD operating systems.

05:33.120 --> 05:36.400
And then again I'm leaving out a few steps.

05:36.400 --> 05:37.400
Then it gets very messy.

05:37.400 --> 05:38.920
There was a lawsuit involved and so on.

05:38.920 --> 05:45.320
And at some point there was a release of BSD that ran on PCs.

05:45.320 --> 05:50.240
It was called 386 BSD.

05:50.240 --> 05:53.080
And the team was I think two people.

05:53.080 --> 05:54.680
And there was a lot of buzz around it.

05:54.680 --> 05:57.960
It was a lot of development and a lot of patch sets and stuff.

05:57.960 --> 06:04.160
But the development of 386 BSD itself was kind of sluggish.

06:04.160 --> 06:08.080
So people started taking matters into their own hands and that's where NetBSD comes from.

06:08.080 --> 06:18.240
So I found the announcement from 1993 of NetBSD 0.8 for whatever reason they called their

06:18.240 --> 06:21.960
first release 0.8.

06:21.960 --> 06:27.440
And it starts off a bit odd like we've been wondering what I've been up to, blah, blah,

06:28.080 --> 06:29.640
you know I've built this new system.

06:29.640 --> 06:31.800
I'm calling it NetBSD.

06:31.800 --> 06:40.160
Essentially what it is realistically it's the last 386 BSD release 0.1.

06:40.160 --> 06:45.480
And all the patches that were floating around the net and that were okay, added on top.

06:45.480 --> 06:48.840
And that's also why it's called NetBSD.

06:48.840 --> 06:55.840
Because in 1993 not that many people had internet access but NetBSD from the start

06:55.840 --> 07:03.200
embraced the internet as a method of development and getting patches and distributing the OS

07:03.200 --> 07:04.440
and so on.

07:04.440 --> 07:11.040
So NetBSD as the name implies is a creation of the members of the network community, meaning

07:11.040 --> 07:15.320
the internet, without the net it's likely that this release would not have come about.

07:15.320 --> 07:19.680
So this is 30 years.

07:19.680 --> 07:21.000
This is a bit more than 30 years.

07:21.000 --> 07:25.240
It's not quite 31 so I guess where it counts.

07:25.240 --> 07:28.000
I want to dwell on this announcement for a bit more.

07:28.000 --> 07:34.120
By the way there's four signatories on the bottom of the announcement.

07:34.120 --> 07:39.240
You see CGD is the one who sent it, but there's also Theo de Rage is one of the signatories.

07:39.240 --> 07:43.960
He was one of the founding members of NetBSD before they kicked him out and he ended up

07:43.960 --> 07:45.960
founding OpenBSD.

07:45.960 --> 07:51.360
But what is interesting is that it tells a little bit more about the purpose and the

07:51.360 --> 07:53.520
plans for NetBSD.

07:53.520 --> 08:00.080
And it's interesting seeing these and comparing what has happened since.

08:00.080 --> 08:04.880
So I've added a few highlights here.

08:04.880 --> 08:06.200
Why do this at all?

08:06.200 --> 08:14.800
And it says we consider this an escape from the political wars surrounding our wonderful

08:14.800 --> 08:22.400
operating system and we want to do a stable production quality release.

08:22.400 --> 08:26.160
And also this bit we intend to integrate free positive changes from whoever will provide

08:26.160 --> 08:33.560
them and we hope to create a stable, accessible system and to be responsive to the needs

08:33.560 --> 08:35.840
and desires of the users.

08:35.840 --> 08:42.480
So here you can see the project values laid out in short form.

08:42.480 --> 08:51.920
No religious wars, stability, community, acceptance of patches if they're okay.

08:51.920 --> 08:54.360
And I think these have largely held up honestly.

08:54.360 --> 09:00.720
Like 30 years later I think the NetBSD project is holding up these values even though probably

09:00.720 --> 09:04.480
most developers of today haven't read this thing here.

09:04.480 --> 09:10.200
I mean I hadn't until I prepared this talk.

09:10.200 --> 09:12.280
That's quite nice.

09:12.280 --> 09:19.560
And then what ended up happening is sort of a Cambrian explosion and one of these aspects

09:19.560 --> 09:23.880
of people contributing their stuff is people contributed support for the machines they

09:23.880 --> 09:24.880
were using.

09:24.880 --> 09:33.160
And that is how NetBSD got this reputation of running on all the things, even including

09:33.160 --> 09:34.720
toasters.

09:34.720 --> 09:39.200
So this was sort of the peak of NetBSD porting.

09:39.200 --> 09:41.600
The year was 1995.

09:41.600 --> 09:46.400
This person here is Jeff Rizzo, a NetBSD developer.

09:46.400 --> 09:53.000
And their company Technology Systems Design presents toaster running NetBSD.

09:53.000 --> 09:54.840
Of course it runs NetBSD.

09:54.840 --> 09:59.320
And the point of the project at the time, so you see there's an arm board there which

09:59.320 --> 10:01.160
is in the toaster.

10:01.160 --> 10:02.680
But it's sort of IoT in a sense.

10:02.680 --> 10:05.800
It had remote management and it could actually manage the toasting function.

10:05.800 --> 10:11.080
So it could change the duration or the heat or whatever.

10:11.720 --> 10:18.200
It has a little display which you cannot really see at the front.

10:18.200 --> 10:19.880
So this was like famous, you know.

10:19.880 --> 10:21.520
It runs on everything, even on the toaster.

10:21.520 --> 10:23.600
And that was 1995.

10:23.600 --> 10:30.640
And I want to go slightly heretic here and ask, is any of this relevant today?

10:30.640 --> 10:37.200
Because if you look at the list of architectures on NetBSD calls and ports, there's I think

10:37.200 --> 10:40.720
71, if I remember correctly.

10:40.720 --> 10:43.840
And they're in three tiers.

10:43.840 --> 10:47.680
Tier one is like the good ones.

10:47.680 --> 10:54.200
Tier two is the ones that may have some problems, but they're sort of chugging along, maybe

10:54.200 --> 10:55.880
not the main focus of the project.

10:55.880 --> 10:59.280
And tier three is the ones that are on live support and basically dead.

10:59.280 --> 11:03.360
Anyway, if you look at the tier two architectures, they all seem kind of retro in a sense.

11:03.360 --> 11:05.000
Dreamcast, really.

11:05.000 --> 11:08.440
Amiga, the B-Box, who here has a B-Box?

11:08.440 --> 11:12.920
I don't think any one of you has a B-Box.

11:12.920 --> 11:15.160
So I'm going to offer this.

11:15.160 --> 11:20.480
I think the portability argument is more or less dead.

11:20.480 --> 11:25.280
Because there's no modern hardware, I think, that runs NetBSD but not Linux.

11:25.280 --> 11:31.400
If you look at say, new RISC 5 boards or something, they come with a Linux kernel.

11:31.400 --> 11:33.320
They don't come with a NetBSD kernel.

11:33.320 --> 11:34.320
Usually.

11:34.320 --> 11:38.200
By the way, this is the list of tier one ports.

11:38.200 --> 11:57.440
So the important focus things are ARM, X86, 32, 42, 64 bits, Spark, and Xen emulation,

11:57.440 --> 11:58.840
and MIPS and PowerPC.

11:58.840 --> 12:01.640
Anyway, so these are the tier one ports.

12:02.120 --> 12:03.520
So it's a good list, but still.

12:03.520 --> 12:08.720
I mean, is portability the sales argument anymore?

12:08.720 --> 12:09.960
I don't think so.

12:09.960 --> 12:11.920
So what remains?

12:11.920 --> 12:17.920
Why would you want to use NetBSD?

12:17.920 --> 12:23.960
And going back to the values we heard about earlier, so we have an accessible system, but

12:23.960 --> 12:26.200
it's still powerful and stable.

12:26.200 --> 12:32.080
And by accessible, what was meant then, and what I mean now is, it's something you can

12:32.080 --> 12:34.360
understand from top to bottom.

12:34.360 --> 12:42.080
If you're starting out with Linux, let's say, and you try to figure out how a modern

12:42.080 --> 12:47.640
Ubuntu system works with system D and 100 demons running everywhere and things reconfiguring

12:47.640 --> 12:50.680
themselves, it's very hard.

12:50.680 --> 12:55.520
It's simple on the surface, but underneath hides a ton of complexity trying to make stuff

12:55.560 --> 12:56.560
work.

12:56.560 --> 12:59.560
NetBSD is different, I think.

12:59.560 --> 13:05.040
It's simple throughout, and that way you can understand it, all the layers and how they

13:05.040 --> 13:07.280
work together.

13:07.280 --> 13:08.720
There's also documentation there.

13:08.720 --> 13:13.600
There's a NetBSD guide, which is very long and complete and has a ton of stuff.

13:13.600 --> 13:20.160
So you have one eBook, if you will, that explains the system to you.

13:20.200 --> 13:26.520
You can read the main pages, which unlike in Linux, main pages are usually complete and

13:26.520 --> 13:27.520
well written.

13:27.520 --> 13:31.560
There's a system D, maybe some of you like that.

13:31.560 --> 13:39.160
But I keep saying to people, why should I try a BSD operating system?

13:39.160 --> 13:41.240
I think it's a learning opportunity.

13:41.240 --> 13:46.800
And even if you're, say, a Linux user today, and you try BSD for a few months and you come

13:46.800 --> 13:49.760
back to Linux, maybe you have learned something about the system.

13:49.760 --> 13:52.680
I think that's good.

13:52.680 --> 14:00.600
But also, NetBSD has some crazy research things in it, but it's also kind of old school unix

14:00.600 --> 14:01.600
in some sense.

14:01.600 --> 14:07.960
So I think it's a nice compromise between these two very different worlds.

14:07.960 --> 14:12.880
So if you boot it today, you're going to have a graphical console.

14:12.880 --> 14:14.320
You have graphics acceleration.

14:14.320 --> 14:18.160
You have like ZFS, modern volume management.

14:18.160 --> 14:19.520
You can run all sorts of software.

14:19.520 --> 14:20.640
You can run GNOME on it.

14:20.640 --> 14:22.920
You can run Firefox on it.

14:22.920 --> 14:26.200
You can run Rust programs, Go programs.

14:26.200 --> 14:27.200
It's all there.

14:27.200 --> 14:34.160
And I think the main actual uses that people are making of NetBSD, one is on the server.

14:34.160 --> 14:41.640
It is a very solid, very reliable server OS for things like routers and stuff, firewalls.

14:41.640 --> 14:48.880
But also, it is kind of surprisingly useful as a desktop OS.

14:48.880 --> 14:55.040
Maybe you might have to make some compromises here and there, but like you can listen to

14:55.040 --> 14:59.200
stuff, listen to music in Firefox or some other player.

14:59.200 --> 15:02.360
You can watch YouTube videos.

15:02.360 --> 15:04.160
You can use LibreOffice, whatever you want.

15:04.160 --> 15:06.720
It's all fine.

15:06.720 --> 15:08.360
Or you can do things like this here.

15:08.360 --> 15:18.760
This is a Dynabook running NetBSD with a patent input.

15:18.760 --> 15:22.920
Again coming back to the announcement email, I keep coming back to this.

15:22.920 --> 15:24.800
There's so much in it.

15:24.800 --> 15:27.360
The welcoming community is also an important thing.

15:27.360 --> 15:33.360
I think not all open source projects, not even all BSD projects, have welcoming communities.

15:33.360 --> 15:37.880
I think NetBSD does.

15:37.880 --> 15:43.120
This is the group photo from the 2019 package source con in Cambridge.

15:43.120 --> 15:47.000
I don't think we have done one since COVID hit, unfortunately.

15:47.000 --> 15:51.600
But like people are generally nice and welcoming.

15:51.600 --> 15:53.360
I think that's very important.

15:53.360 --> 16:02.480
And it's a good thing to have.

16:02.480 --> 16:04.880
Changing gears a little bit, I want to talk to you about the new release.

16:04.880 --> 16:07.880
We've done 30 years of development, but what do we have to show for it?

16:07.880 --> 16:12.600
We have NetBC 10, which in fact is not released.

16:12.600 --> 16:18.760
When I wrote the abstract for this talk in October, everybody was saying, you know, it's

16:18.760 --> 16:22.440
going to be released in a month.

16:22.440 --> 16:24.000
So I just put this as a given here.

16:24.000 --> 16:25.400
We have the new NetBC 10 release.

16:25.400 --> 16:26.400
I'm going to talk about it.

16:26.400 --> 16:27.400
It's not there.

16:27.400 --> 16:30.400
We have release candidate number three.

16:30.400 --> 16:31.400
But it's okay.

16:31.400 --> 16:35.280
It's all release candidate number three.

16:35.280 --> 16:38.360
To understand where we are, I want to talk a little bit about the release timeline and

16:38.360 --> 16:43.240
maybe also about the way NetBC development is organized in general.

16:43.240 --> 16:50.280
So NetBC has a core team and only the people, well, has a core team and has a slightly larger

16:50.280 --> 16:54.520
team of developers that have joined the NetBC foundation and have officially joined the project.

16:54.520 --> 16:59.520
And they're the ones that can directly commit to the repositories.

16:59.520 --> 17:09.080
So if you're not a NetBC developer, you cannot directly commit to the NetBC repo.

17:09.080 --> 17:17.120
And all the development of NetBC happens on the head branch, well, on the main line.

17:17.120 --> 17:22.840
And then what happens is every once in a while, there's a branch for the numbered releases.

17:22.840 --> 17:28.480
And between the branch and the release of the .0 version, there can be quite a lot of

17:28.480 --> 17:34.200
time because you find that there are some problems that you didn't notice.

17:34.200 --> 17:39.160
Usually you know, usually once you have a release branch and you're in beta at that

17:39.160 --> 17:42.480
point, many, many more people start using it.

17:42.480 --> 17:50.480
And they find many more problems that you didn't know about, for instance.

17:50.480 --> 17:55.160
So the release of NetBC 10 is probably going to be in February sometime.

17:55.160 --> 18:00.640
But the branch of the 10 branch was in December 22.

18:00.640 --> 18:05.080
So it's already been branched for quite a bit.

18:05.080 --> 18:10.840
And after the branch is done, there are no direct commits by random people into the branch.

18:10.840 --> 18:15.360
But instead it's all going, it goes by tickets and they're reviewed and there's the discussion

18:15.360 --> 18:16.360
on them.

18:16.360 --> 18:18.480
So it's a bit more stable in that sense.

18:18.480 --> 18:26.120
So like, so the basis of this development is already a bit old.

18:26.120 --> 18:28.720
It's already from 2022.

18:28.720 --> 18:33.760
So if you have hardware that's newer than 22 and it doesn't work on NetBC 10, maybe current

18:33.760 --> 18:35.440
is actually better.

18:35.440 --> 18:42.560
But also the point I want to make is the NetBC 9 branch was in July 2019.

18:42.560 --> 18:46.120
So you have three and a half years of trunk development that has also gone into this.

18:46.120 --> 18:52.360
So I'm going to explain some things that have changed that are new, but there's like

18:52.360 --> 18:57.040
a million other small changes that would be far too boring to talk about.

18:57.040 --> 19:03.920
So the one thing that you might immediately notice is performance.

19:03.920 --> 19:07.640
Performance has increased a great deal, especially file system performance, which to be fair

19:07.640 --> 19:10.200
was not very good before.

19:10.200 --> 19:11.640
It's good now, I think.

19:11.640 --> 19:14.560
And the scheduler has improved a lot.

19:14.560 --> 19:20.800
So if you have a system that has big and little cores, for example, an ARM or an Intel CPU

19:20.800 --> 19:25.280
with performance cores, they call it and power saving ones or something, the scheduler is

19:25.280 --> 19:26.760
aware of that.

19:26.760 --> 19:31.280
And depending on how much like punch you need, it'll use one or the other.

19:31.280 --> 19:33.440
That's very nice.

19:33.440 --> 19:37.840
The graphics drivers have updated to be on power Linux 5.6.

19:37.840 --> 19:42.560
So you have accelerated support for AMD, for Intel, for NVIDIA.

19:42.560 --> 19:45.880
There's a new wire guard driver, which may be interesting.

19:45.880 --> 19:53.520
So if you're using tail scale or another VPN on wire guard basis, and this is not the original

19:53.520 --> 19:59.440
wire guard, but it's a re-implementation from the spec.

19:59.440 --> 20:07.680
And then there's much improved DTFS, newer version, and also much improved virtualization.

20:07.680 --> 20:13.920
For example, for Xen, I don't know if a lot of you use Xen, but in the past Xen had two

20:13.920 --> 20:15.080
virtualization modes.

20:15.080 --> 20:20.600
There was the HVM mode, which did not require any collaboration from the OS.

20:20.600 --> 20:24.440
So you could run an unmodified Windows on it, but it was kind of slow.

20:24.440 --> 20:28.760
And then there's the PV mode, para-virtualized one, where the OS is sort of aware that it

20:28.760 --> 20:33.280
is running on Xen, and it's not actually, it's its own architecture, basically.

20:33.280 --> 20:39.800
Like the kernel is directly written against the interface of the hypervisor instead of

20:39.800 --> 20:41.880
pretending to talk to hardware.

20:41.880 --> 20:49.160
And Xen folks have added three sort of in-between modes, and I think we can do them all.

20:49.160 --> 20:55.240
So one thing you can do if you're on HVM, you can gain speed by using para-virtualized

20:55.240 --> 20:58.320
driver for network and storage.

20:58.320 --> 20:59.800
And these are called VIRT-IO.

20:59.800 --> 21:02.600
So NetBeasty has those.

21:02.600 --> 21:10.600
There's a mode called PVHVM, where you also have interrupt and timer that are, like, not

21:10.600 --> 21:15.280
pretending to talk to some Intel interrupt controller, but to talk to the hypervisor.

21:15.280 --> 21:16.280
This is called PVHVM.

21:16.280 --> 21:19.320
I have that too.

21:19.320 --> 21:25.840
And the highest performance mode these days is called PVH, which is a para-virtualized

21:25.840 --> 21:26.840
system.

21:26.840 --> 21:34.160
So I used the Xen kernel, not the, I don't know, AMD64 kernel, but it uses hardware support

21:34.160 --> 21:39.280
for page tables and stuff.

21:39.280 --> 21:42.360
So this is the highest performance mode, the PVH mode.

21:42.360 --> 21:47.360
If you're using Xen, this is what you should be running.

21:47.360 --> 21:50.120
And the whole thing is more multiprocessor aware.

21:50.120 --> 21:54.280
The DOM zero, which is the sort of the host system, can be multiprocessor.

21:54.280 --> 21:56.000
The individual VMs can be multiprocessor.

21:56.000 --> 21:58.120
This is really nice.

21:58.120 --> 22:00.640
This graphic here comes from Brendan Gregg's blog, by the way.

22:00.640 --> 22:01.880
What color is the Xen?

22:01.880 --> 22:07.200
If you don't know Brendan Gregg, you should look him up.

22:07.200 --> 22:08.200
He does good stuff.

22:08.200 --> 22:12.600
He's also done amazing talks at Fostern before.

22:12.600 --> 22:18.880
And then in terms of hardware, I think the biggest amount of work has gone into ARM.

22:18.880 --> 22:24.480
This in general, I.O. is a lot better in ARM, like if you're running it on a Raspberry

22:24.480 --> 22:31.520
Pi, let's say, you'll notice you'll have more network throughput, more disk throughput.

22:31.520 --> 22:33.120
That's all really nice.

22:33.120 --> 22:38.880
There's support for the security features in modern ARM processors in the ARM V8E instruction

22:38.880 --> 22:41.440
set.

22:41.440 --> 22:46.400
Many of them help against the sort of return-oriented programming, like exploits.

22:46.400 --> 22:50.120
For instance, you can authenticate, the kernel can authenticate the pointers.

22:50.120 --> 22:56.480
The pointers are tagged with a secret tag, and only if the CPU will check if the tag is

22:56.480 --> 22:58.720
there, otherwise the pointer cannot be dereferenced.

22:58.720 --> 23:03.160
So you can't just take random memory and say, this is no pointer.

23:03.160 --> 23:06.600
This branch target identification, where in the instruction set, only instruction set

23:06.600 --> 23:10.400
level, you can say, here's a branch, but it's only allowed to jump to this address or this

23:10.400 --> 23:13.840
address, something like this.

23:13.840 --> 23:17.560
And there's a mode called privilege access never, where the user space can actually

23:17.560 --> 23:19.680
forbid the kernel from accessing a page.

23:19.680 --> 23:27.400
So while you're holding your key material, for example, in memory, you can mark it as

23:27.400 --> 23:32.080
privileged access never, and then nobody else has access to it.

23:32.080 --> 23:34.320
So that's great.

23:34.320 --> 23:43.880
Crypto support, using crypto instructions if the CPU has them, and a lot of new systems.

23:43.880 --> 23:48.600
And there's three things that might bite you if you upgrade.

23:48.600 --> 23:50.200
So I want to mention them specifically.

23:50.200 --> 23:54.800
One is SSL route certificates are now in the base system.

23:54.800 --> 23:59.120
So before you had to install a package called Mozilla root certs, and that was always annoying.

23:59.120 --> 24:03.920
Nowadays, you install, SSL will just work, certificate validation will just work.

24:03.920 --> 24:07.120
It's nice.

24:07.120 --> 24:13.680
Entropy management means that if you don't have entropy, if you don't have randomness,

24:13.680 --> 24:16.240
then the kernel will not give you random data.

24:16.240 --> 24:20.200
And practice what that means if you're running in a VM mainly and you don't have an entropy

24:20.200 --> 24:25.240
source at all, things might hang when they ask for random data.

24:25.240 --> 24:26.720
And that's not great.

24:26.720 --> 24:32.880
So there's some, the config files have special support for stuff.

24:32.880 --> 24:41.600
Also there is a VRTIO RNG driver where the host of your VM can hand randomness to the

24:41.600 --> 24:42.600
VMs.

24:43.600 --> 24:48.600
And so if you enable that, you may have to enable it in your QMU config or whatever you're

24:48.600 --> 24:52.760
using, then this is better.

24:52.760 --> 24:57.440
And finally, there's a new feature around POSIX ACLs and extended attributes.

24:57.440 --> 25:01.960
So these are attributes on files.

25:01.960 --> 25:06.640
And they need a new file system, or rather like a variant of the existing file system.

25:06.640 --> 25:13.400
So by default, NetBC has FFS version 2, the fast file system.

25:13.400 --> 25:18.200
And there's a variant now that you can choose when you install called FFS v2 EA, which has

25:18.200 --> 25:20.480
extended attributes.

25:20.480 --> 25:24.800
And if you do that, you should be aware that older NetBC versions cannot read it.

25:24.800 --> 25:28.640
And also if you installed current at some point and used that, there was a flag day

25:28.640 --> 25:29.960
where that format changed.

25:29.960 --> 25:34.000
So you did, I don't know, there's a complicated procedure to not lose your data.

25:34.160 --> 25:40.560
So that's by the way one reason why NetBC 10 is late because there was this file system

25:40.560 --> 25:41.560
problem.

25:41.560 --> 25:47.880
But FFS v2 with extended attribute is not the default, I think.

25:47.880 --> 25:51.360
Only if you need POSIX ACLs, you can choose it during installation, but default is just

25:51.360 --> 25:52.840
to disable it.

25:52.840 --> 25:59.640
So now that I went through like this laundry list of things, I don't know, some of you

25:59.640 --> 26:01.520
might be bored.

26:01.520 --> 26:04.880
I'm going to ask, what are you going to run it on?

26:04.880 --> 26:09.600
Maybe you say, you have convinced me, I want to try out this NetBC 10 thing.

26:09.600 --> 26:11.720
What am I going to run it on?

26:11.720 --> 26:18.400
And here I have a little gallery of a couple of the ARM SBCs that are now supported in

26:18.400 --> 26:21.280
the new release that weren't there before.

26:21.280 --> 26:23.600
The Raspberry Pi 4 is very nice.

26:23.600 --> 26:26.040
I'm using one myself.

26:26.040 --> 26:30.240
The 5 is I think in current, the 3 to 2, et cetera.

26:30.240 --> 26:34.480
They're all also there.

26:34.480 --> 26:41.360
Then you have the Odroid and N2 plus, the Quad 64, the ASUS Tinker board, the humming

26:41.360 --> 26:43.720
board pulse, I don't know, there's various things.

26:43.720 --> 26:47.000
They all have very specialties, different SOCs.

26:47.000 --> 26:53.440
The Orange Pi 5 I like a lot because it has a pretty powerful processor and you can get

26:53.440 --> 26:57.040
it with up to 32 gigs of RAM.

26:57.320 --> 27:03.280
You see that slot at the top left, it's an NVMe slot, you can add an SSD there.

27:03.280 --> 27:08.480
So for less than 200 euros, you can have a really powerful ARM-based workstation with

27:08.480 --> 27:10.160
an Orange Pi 5.

27:10.160 --> 27:13.760
Highly recommended.

27:13.760 --> 27:17.720
So if you're using it on ARM, it used to be annoying with bootloaders.

27:17.720 --> 27:21.200
ARM bootloaders are a bit weird in many ways.

27:21.200 --> 27:24.720
This has become a lot better for the Orange Pi, the Raspberry Pi and a couple others.

27:24.880 --> 27:29.240
This thing called Tiano Core EDK2.

27:29.240 --> 27:33.440
You downloaded it for your model and you just unpack the thing onto your storage medium,

27:33.440 --> 27:40.520
whether it's an SSD or memory card or whatever, and then it acts like a BIOS basically.

27:40.520 --> 27:47.080
You get a UEFI shell and then you can just use a generic, like, Net-B-Ste-Arm image or

27:47.080 --> 27:48.160
some other OS.

27:48.160 --> 27:50.440
So that's become very convenient.

27:50.440 --> 27:53.280
ARM-SPCs are awesome.

27:53.360 --> 27:55.680
They're still the Pinebook Pro.

27:55.680 --> 27:59.480
It's a laptop that is, I think it's more than $1.99 now, it's $229.

27:59.480 --> 28:00.960
But still, it's very cheap.

28:00.960 --> 28:08.800
It has a nice ARM processor display.

28:08.800 --> 28:09.800
It's perfectly usable.

28:09.800 --> 28:12.760
Net-B-Ste runs really, really well on it.

28:12.760 --> 28:17.920
So this thing here talks about current, but now it's in 10.

28:17.920 --> 28:23.200
So you have display, backlight control, NVMe, USB.

28:24.120 --> 28:25.120
It all works.

28:25.120 --> 28:26.120
It's nice.

28:26.120 --> 28:30.320
So if you want a Net-B-Ste laptop, maybe that's the best choice.

28:34.320 --> 28:35.320
Or how about this thing?

28:35.320 --> 28:37.040
I don't know if I can get the video to work.

28:37.040 --> 28:38.440
I feel like a boomer.

28:38.440 --> 28:40.240
Can I get the video to work?

28:40.240 --> 28:43.320
Where's my mouse pointer?

28:43.320 --> 28:53.640
So this here is a Nintendo Wii.

28:53.640 --> 29:09.360
And then this happens.

29:09.360 --> 29:10.600
It turns out, I didn't know that.

29:10.600 --> 29:12.840
The Nintendo Wii has a PowerPC processor.

29:12.840 --> 29:17.920
So this runs the Net-B-Ste EVB PPC, EVB's evaluation board.

29:17.920 --> 29:23.160
So we treated like an SBC with a PowerPC processor.

29:23.160 --> 29:24.840
And there you are.

29:24.840 --> 29:27.440
This is pretty new.

29:27.440 --> 29:32.040
This is a few weeks ago that this support got added.

29:32.040 --> 29:35.960
I'm not sure if it's present in 10, but it's there.

29:35.960 --> 29:36.960
Here's Net-B-Ste.

29:36.960 --> 29:41.760
Did you ever want to run PostFix on your Wii?

29:41.760 --> 30:02.000
There you go.

30:02.000 --> 30:03.720
You can also run in the cloud.

30:03.720 --> 30:05.640
Net-B-Ste is pretty much at home in the cloud.

30:05.640 --> 30:08.600
It runs on all sorts of virtualization things.

30:08.600 --> 30:11.560
It itself includes several virtualizers.

30:12.360 --> 30:13.360
So I've talked about Xen.

30:13.360 --> 30:17.760
There's NVMM, which is a hypervisor that's integrated into QMU.

30:17.760 --> 30:18.760
There's Hex...

30:18.760 --> 30:19.760
I think Hexen...

30:19.760 --> 30:22.480
I'm not sure if it's still there, actually.

30:22.480 --> 30:28.400
But anyway, so there's various acceleration technologies that are in QMU.

30:28.400 --> 30:32.120
You can run it under Beehive if you have a free BST host.

30:32.120 --> 30:35.640
You can run it under KVM if you have a Linux host.

30:35.640 --> 30:37.000
You can run it on AWS.

30:37.000 --> 30:39.200
We have community AMIs available.

30:39.200 --> 30:43.080
These are AWS machine images for both Intel and ARM.

30:43.080 --> 30:45.560
The ARM ones in particular are nice.

30:45.560 --> 30:48.200
They're very cost-effective.

30:48.200 --> 30:55.200
There's this project here to build Google Cloud machine images with Net-B-Ste, Canon

30:55.200 --> 30:57.840
Vulture, Oracle Cloud, many others.

30:57.840 --> 30:59.280
So that's also an option.

30:59.280 --> 31:01.000
Why not have Yen?

31:02.000 --> 31:07.000
Now that you have a machine, what are you going to run on it?

31:07.000 --> 31:10.840
This is where I slightly switch gears and talk about packages.

31:10.840 --> 31:13.200
This is my hobby horse because I mostly work on packages.

31:13.200 --> 31:20.600
So Net-B-Ste comes with a package collection called Package Source, PKGSRC.

31:20.600 --> 31:24.000
And it's actually not Net-B-Ste only.

31:24.000 --> 31:28.840
You can run package source on 18 or 20 different OSes.

31:28.840 --> 31:35.720
You have 35,000 packages, although not all of them will probably build on all OSes.

31:35.720 --> 31:38.920
Once a quarter, we do a stable branch with binary packages.

31:38.920 --> 31:43.560
In fact, the last two stable branches have offered binary packages for 10.

31:43.560 --> 31:44.560
So I think that's very nice.

31:44.560 --> 31:52.120
You can install Net-B-Ste 10 somewhere and install the package manager and get going

31:52.120 --> 31:56.000
immediately.

31:56.000 --> 32:00.040
If you're on a platform that does not have binary packages you build from source, that's

32:00.040 --> 32:01.040
very easy.

32:01.040 --> 32:05.080
You just do make package install in the right directory and it downloads all the dependencies

32:05.080 --> 32:07.200
and builds them in order.

32:07.200 --> 32:12.600
If you're doing Firefox or LibreOffice, you may have to be a bit patient.

32:12.600 --> 32:16.280
Like on the Pinebook Pro, it's more an overnight run.

32:16.280 --> 32:17.880
But yeah, it works.

32:17.880 --> 32:22.960
And you can also update from sources when a new branch comes out.

32:22.960 --> 32:27.640
If you're using package in, then it's even easier to change the path to the binary packages

32:27.640 --> 32:33.480
and do package in upgrade and it does the thing.

32:33.480 --> 32:40.160
These 35,000 packages include all the stuff you expect, like NGINX and Apache and whatnot,

32:40.160 --> 32:46.080
but also GNOME and, as I said, LibreOffice, Firefox, Thunderbird, they're all there.

32:46.080 --> 32:48.280
It's pretty complete.

32:48.280 --> 32:53.080
And also, if you find something that you would like to be available as a package, but it's

32:53.080 --> 33:01.080
not there, you can relatively easily get access to the WIP repository work in progress and

33:01.080 --> 33:04.120
start creating your own package in there.

33:04.120 --> 33:08.200
The barrier is pretty low and it's sort of our gateway drug, I guess, to becoming a full-time

33:08.200 --> 33:12.720
contributor.

33:12.720 --> 33:19.520
This WIP thing is, I think it's a superb idea because it gives you a well-lit path to becoming

33:19.520 --> 33:23.360
a developer, at least in the packages space.

33:23.360 --> 33:26.280
But it's just starting to tinker there.

33:26.280 --> 33:31.080
And it comes without warranty.

33:31.080 --> 33:34.200
The WIP packages, they may be completely broken.

33:34.200 --> 33:36.440
So as a user, you don't quite know what you're getting.

33:36.440 --> 33:41.720
Maybe you want to stick to the main repo, but if you're tinkering, it's great.

33:42.720 --> 33:50.120
And one last thing that I want to mention, you can install a package source tree in an arbitrary

33:50.120 --> 33:57.640
prefix and you can do it without root privileges.

33:57.640 --> 34:02.040
So if you have a machine, even if it's a Linux or a macOS machine, and you don't have root

34:02.040 --> 34:08.680
on it for some reason, but you want to run some software that is not on there, you can

34:08.680 --> 34:14.600
bootstrap a package source into some tree and use that.

34:14.600 --> 34:19.600
And you can also use that the same way that Python developers would use virtual ENV.

34:19.600 --> 34:23.280
You can have a tree that has your development environment in it and then just copy it back

34:23.280 --> 34:26.560
and forth and use it on any machine that you're working on.

34:26.560 --> 34:31.200
So that's also a very, very powerful thing.

34:31.200 --> 34:33.360
It's not just for Python, it's for all software.

34:33.360 --> 34:38.000
So I think it's great.

34:38.000 --> 34:44.280
So to conclude, we've spent, not me personally, but the NetBeastie project has spent 30 years

34:44.280 --> 34:45.280
on NetBeastie.

34:45.280 --> 34:46.280
It's still going strong.

34:46.280 --> 34:48.920
We have a new release, almost out.

34:48.920 --> 34:51.560
A release, Canada 3 is the current one.

34:51.560 --> 34:53.560
You should go check it out.

34:53.560 --> 34:56.560
Thank you very much.

34:56.560 --> 35:08.600
We're open for questions.

35:08.600 --> 35:13.600
Any questions?

35:13.600 --> 35:16.760
Yeah.

35:16.760 --> 35:19.880
Hello.

35:19.880 --> 35:21.120
Okay.

35:21.120 --> 35:24.080
So we talked about where NetBeastie can run everywhere.

35:24.080 --> 35:26.640
And so maybe here a question.

35:26.640 --> 35:32.080
What is the current state about regarding the risk 564 integration?

35:32.080 --> 35:35.240
The risk 5, is that the question?

35:35.240 --> 35:36.240
Yes, exactly.

35:36.240 --> 35:37.240
Okay.

35:37.240 --> 35:39.440
What's the current state of risk 5?

35:39.440 --> 35:41.480
Not quite there yet, I think.

35:41.480 --> 35:46.720
There is a NetBeastie risk 5 port.

35:46.720 --> 35:54.720
I've seen videos of it booting, but it's not as good as Armiette, I think.

35:54.720 --> 36:00.040
Do we have any more questions?

36:00.040 --> 36:01.040
Yes.

36:01.040 --> 36:05.120
Hello, and thank you for your presentation.

36:05.120 --> 36:10.560
Is there something that can be provided to the students, Bachelor of Science, Computer

36:10.560 --> 36:18.360
Students, for, let's say, get them more involved in the project, like easy hacks and stuff

36:18.360 --> 36:25.080
like that, to tell them, hey, do this and you can learn something.

36:25.080 --> 36:31.440
You know OAS, but this is some OAS that you can start hacking with.

36:31.440 --> 36:32.440
Thank you.

36:32.440 --> 36:37.440
Okay, the question was about sort of low barrier contribution opportunities for students,

36:37.440 --> 36:40.680
like what can you do to get into hacking and so on.

36:40.680 --> 36:45.720
I think with Package Source WIP we've done a really good thing around packages.

36:45.720 --> 36:55.200
I'm not so sure if there is something for NetBeastie itself.

36:55.200 --> 37:01.640
We have the Google Summer of Code, so you can become a GSOC student and do a programming

37:01.640 --> 37:04.760
project there.

37:04.760 --> 37:09.960
If I remember correctly, on netbeastie.org there's a list of projects where you could

37:09.960 --> 37:12.280
even get funding for outside of GSOC.

37:12.280 --> 37:18.360
Like somebody has done bountains on things, but I'm not sure if they're beginner friendly,

37:18.360 --> 37:21.880
and there's also a list of possible projects.

37:21.880 --> 37:23.160
But maybe we could do more there.

37:23.160 --> 37:25.320
Thanks for the suggestion.

37:25.320 --> 37:29.200
Hi, good talk.

37:29.200 --> 37:32.840
So I've read a blog, I think it was last year, about the status of Weyland.

37:32.840 --> 37:33.840
Hello.

37:33.920 --> 37:39.920
So the status of Weyland in NetBeastie, where it was sort of early attempts to get it running.

37:39.920 --> 37:44.800
Are we ever expecting Weyland to land properly in NetBeastie, or is it going to be eight

37:44.800 --> 37:48.800
years, 10 years, heat death of the universe?

37:48.800 --> 37:50.720
It's a good question.

37:50.720 --> 37:55.440
The question is about the state of Weyland support.

37:55.440 --> 37:58.400
I think there is some Weyland.

37:58.400 --> 38:03.880
If I remember correctly, you can run Sway as a Weyland compositor.

38:03.880 --> 38:09.280
Various applications like Firefox are built with Weyland support by default.

38:09.280 --> 38:14.440
But I think the vast majority of NetBeastie users are still on X11.

38:14.440 --> 38:22.080
I'm not sure what it would take to change that, other than more manpower.

38:22.080 --> 38:26.640
Weyland on NetBeastie is more or less like a one woman show at the moment.

38:26.640 --> 38:32.320
So if you're interested in that, please contact us and contribute.

38:37.640 --> 38:43.160
Maybe to add one thing that makes it hard is Weyland has a lot of Linux-isms.

38:43.160 --> 38:48.160
For instance, the Weyland input API just takes the Linux input.h and wraps it, and that's

38:48.160 --> 38:49.160
it.

38:49.160 --> 38:52.760
So you get to reimplement parts of Linux APIs, which is annoying.

38:56.640 --> 39:03.640
More questions?

39:03.640 --> 39:15.120
Coming back to the question of NetBeastie is suitable for student projects.

39:15.120 --> 39:19.120
I'd like to talk with the person who asked that question.

39:19.120 --> 39:22.120
I have more information.

39:22.120 --> 39:29.120
Hi.

39:29.120 --> 39:45.600
So I've been in this Linux user for a while, and I'm interested in the BSD world.

39:45.600 --> 39:50.600
Why would I want to try NetBeastie instead of FreeBSD, say, on my laptop?

39:50.600 --> 39:54.600
That's a difficult question.

39:54.600 --> 40:01.400
Why would you want to try NetBeastie and not FreeBSD?

40:01.400 --> 40:05.200
FreeBSD has many of these things that I mentioned for NetBeastie as well.

40:05.200 --> 40:12.480
FreeBSD has a lot bigger community, I think more contributors and so on.

40:12.480 --> 40:17.080
What's in it for you personally?

40:17.080 --> 40:23.040
I think for some, depending on what the hardware is, the support for NetBeastie or FreeBSD

40:23.040 --> 40:29.400
might be better.

40:29.400 --> 40:36.160
Again if you want to get involved in the community, the FreeBSD community is bigger, but the NetBeastie

40:36.160 --> 40:37.920
community might be more accommodating.

40:37.920 --> 40:43.840
I don't know.

40:43.840 --> 40:46.000
I'm struggling a bit with an answer there.

40:46.000 --> 40:48.120
I think they're both good.

40:48.120 --> 41:05.080
You could try both and see which fits.

41:05.080 --> 41:06.080
Questions?

41:06.080 --> 41:07.080
Anyone?

41:07.080 --> 41:31.000
Who was it?

41:31.000 --> 41:41.200
For the last few years we have seen Linux take over many things.

41:41.200 --> 41:46.520
Things we take for granted about how the Linux in general work.

41:46.520 --> 41:54.640
There has been a lot of efforts to reimplement functionality in BSDs.

41:54.640 --> 41:59.720
I was wondering is there any organized effort to counter that?

41:59.720 --> 42:05.000
Not all of these interfaces are the best designs.

42:05.000 --> 42:12.920
There's a lot of room for improvement there, but I have seen BSDs lag behind.

42:12.920 --> 42:23.160
There's an engagement issue when it comes to companies that it's a lot easier for people

42:23.160 --> 42:32.480
to justify contributing to Linux versus contributing to BSDs just based on license, even though

42:32.480 --> 42:40.080
that's a bad idea anyway, because projects get founded to a point and then making things

42:40.080 --> 42:43.760
open source of course allows the cost for the companies.

42:43.760 --> 42:54.120
Is there anything going on to improve these situations?

42:54.120 --> 42:57.680
I think there were several questions.

42:57.680 --> 43:01.760
You said Linux has taken over mindshare.

43:01.760 --> 43:10.760
If you're at a company it is easier to justify contributing to Linux than to BSD on impact

43:10.760 --> 43:21.040
arguments, which is true, I think.

43:21.040 --> 43:27.320
There was also the aspect about Linux folks re-implementing more and more classical things

43:27.320 --> 43:34.200
with system D and network manager and all these things, or getting rid of the if config

43:34.200 --> 43:36.200
command.

43:36.200 --> 43:41.480
I think the BSD community in general just doesn't follow along in these things.

43:41.480 --> 43:47.800
There's no system D. There's no IP route 2 or whatever it's called.

43:47.800 --> 43:55.320
The route command still works the same way it worked in 1982.

43:55.320 --> 44:04.600
As for the impact argument, I think if you're looking for sort of impact in that sense,

44:04.600 --> 44:12.920
then let's say a contribution to free BSD might be more justifiable than to net BSD.

44:12.920 --> 44:15.000
In a company it depends on what you use.

44:15.000 --> 44:19.920
If you build your service on net BSD, then contributing to net BSD makes a lot of sense.

44:19.920 --> 44:24.480
If you're building your service based on Linux, then it might not.

44:24.480 --> 44:28.440
For example, Netflix, they're highest throughput streaming servers.

44:28.440 --> 44:31.920
They're on free BSD, not Linux, because free BSD achieves a higher throughput with the

44:31.920 --> 44:34.760
same hardware.

44:34.760 --> 44:35.760
It all depends.

44:35.760 --> 44:41.320
Maybe one other aspect, talking for myself personally, my company does not use net BSD

44:41.320 --> 44:42.960
in production.

44:42.960 --> 44:50.440
But I work on it precisely because it is not like my day job.

44:50.440 --> 44:55.360
So I guess you partially touched the answer to my question.

44:55.360 --> 44:58.120
I see that there is good support for Zen.

44:58.120 --> 45:04.040
So do you have any insights about application and workloads which people using on top of

45:04.040 --> 45:09.040
BSD under those hypervisors?

45:09.040 --> 45:18.320
The question was, I think, what applications are people running on net BST on Zen?

45:18.320 --> 45:23.240
Anything really.

45:23.240 --> 45:26.640
You can get Zen hosting from a lot of places.

45:26.640 --> 45:32.080
So get a virtual server that's a paravirtualized Zen VM.

45:32.080 --> 45:35.040
It used to be, AWS used to be like that.

45:35.040 --> 45:39.800
I don't think they offer that anymore.

45:39.800 --> 45:43.920
So some of it is just like a cheap shell access for somebody.

45:43.920 --> 45:51.000
You have a home in the internet somewhere that you can SSH into.

45:51.000 --> 45:56.600
I've used it for web servers, mail servers, file servers, all sorts of things.

45:56.600 --> 46:02.000
Hi, thank you.

46:02.000 --> 46:05.440
I have two questions if it's okay to related questions.

46:05.440 --> 46:09.880
The first one is the community looks really nice and welcoming.

46:09.880 --> 46:14.480
But do you think it's maybe too small with the best factor of one?

46:14.480 --> 46:22.480
And second question, how reactive is the community for incorporating new changes?

46:22.480 --> 46:26.160
Okay, two questions.

46:26.160 --> 46:29.120
One of them is about the size of the community.

46:29.120 --> 46:33.000
I think it would be great if it were bigger.

46:33.000 --> 46:43.440
Honestly, net BST is at least in some ways, I think, kind of minimal stuffing in a sense.

46:43.440 --> 46:46.680
We could use more hands on many things.

46:46.680 --> 46:51.960
Although it's not dead or in decline, which is good.

46:51.960 --> 46:56.520
I regularly see new people coming in.

46:56.520 --> 47:01.560
Maybe 10 years ago, there were a lot of really old school folks that were around since the

47:01.560 --> 47:02.560
beginning.

47:02.560 --> 47:05.880
There's been sort of a generational change as it's bound to happen after 20 years of

47:05.880 --> 47:06.880
running something.

47:06.880 --> 47:12.880
There's a lot of younger folks in here, which is nice.

47:12.880 --> 47:16.600
People would be welcome, of course.

47:16.600 --> 47:20.600
What was the second part of the question?

47:20.600 --> 47:22.760
How reactive is the community?

47:22.760 --> 47:26.200
It depends, unfortunately.

47:26.200 --> 47:31.040
Sometimes very fast, sometimes very slow.

47:31.040 --> 47:32.040
I don't know.

47:32.040 --> 47:36.600
There's no SLA or anything.

47:36.600 --> 47:40.600
What Ryan said in the previous talk, if you have people from the community working on

47:40.600 --> 47:44.320
something together, they're going to scratch their own itch.

47:44.320 --> 47:51.680
If you submit a patch and somebody sees it and thinks, oh, this looks interesting, they

47:51.680 --> 47:54.440
might react to it immediately.

47:54.440 --> 48:02.000
Sometimes you might have to ask on IRC or ping the thread again on the mailing list to get

48:02.000 --> 48:03.160
somebody to react.

48:03.160 --> 48:07.120
A lot of people are busy in their day jobs, unfortunately.

48:07.120 --> 48:13.920
Many, many thanks to all for attending and your questions.

48:13.920 --> 48:14.840
Many thanks, Benny.

