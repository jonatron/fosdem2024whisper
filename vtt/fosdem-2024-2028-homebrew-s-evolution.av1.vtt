WEBVTT

00:00.000 --> 00:14.680
That's a very nice soothing start to the talk of just people saying shh.

00:14.680 --> 00:18.720
As some of you may know, I really like to start talks with raising hands.

00:18.720 --> 00:21.480
So put your hand in the air if you use Humbrew.

00:21.480 --> 00:23.980
Lots of people, cool.

00:23.980 --> 00:28.280
Put your hand in the air if you've contributed to Humbrew.

00:29.040 --> 00:31.560
This clump over here will make sense for the next question.

00:31.560 --> 00:33.920
Put your hand in the air if you maintain Humbrew.

00:33.920 --> 00:41.640
Put your hand in the air if you're concerned about what happens if there's a CV during this talk

00:41.640 --> 00:45.400
and no one is able to march a critical PR to fix open SSL.

00:45.400 --> 00:47.120
Because all the maintainers are here.

00:47.120 --> 00:48.720
Yes, good. Thank you.

00:48.720 --> 00:53.320
Yeah, so a little bit of background for you folks.

00:53.320 --> 00:56.000
Let's see if this is working.

00:56.720 --> 00:58.160
There we go.

00:58.160 --> 01:01.600
Oh, sorry. No, this is a Humbrew. We're Mac people here.

01:01.600 --> 01:03.360
Okay, there we go.

01:03.360 --> 01:07.920
So I forgot, Humbrew doesn't actually support this version anymore.

01:07.920 --> 01:09.520
No, back to that one.

01:09.520 --> 01:11.880
Oh, there we go. Okay, that's fine. Humbrew supports this one.

01:11.880 --> 01:14.200
Sorry, the jokes don't get any better from here.

01:14.200 --> 01:15.840
They're only worse.

01:15.840 --> 01:18.280
Hi, I'm Mike McQuade.

01:18.280 --> 01:22.400
This is my almost becoming yearly tradition at this point.

01:22.400 --> 01:25.040
Sort of state of Humbrew talk at FOSDEM.

01:25.080 --> 01:26.920
The distribution's ruined kindly.

01:26.920 --> 01:29.720
Let's me come and do this here, even though Humbrew isn't really a distribution,

01:29.720 --> 01:36.400
but it feels like the least square round peg hold situation at the conference here.

01:36.400 --> 01:39.120
You can find me at various places on the internet

01:39.120 --> 01:43.360
if you want to talk or ask me things during or after or whatever.

01:43.360 --> 01:46.800
I'm currently the CTO of a startup called Workbrew,

01:46.800 --> 01:50.160
which is trying to do some interesting stuff around Humbrew.

01:50.160 --> 01:52.880
I'll talk incredibly briefly about that at the end

01:52.920 --> 01:54.840
with two former GitHub people.

01:54.840 --> 01:59.040
I spent 10 years at GitHub, which I left as a principal engineer last year,

01:59.040 --> 02:00.440
and I'm Humbrew's project leader,

02:00.440 --> 02:03.440
which is something I have to get elected to do every year.

02:03.440 --> 02:06.920
No one has ever run against me, so please, someone do that

02:06.920 --> 02:12.560
and set me free from my life of enslavement to an open source project that I suffer for.

02:12.560 --> 02:15.720
And I've maintained Humbrew for apparently 15 years this year,

02:15.720 --> 02:19.120
which is a little bit worrying.

02:19.200 --> 02:23.840
So I'm going to talk through some stuff we've done in the last year or so.

02:23.840 --> 02:26.000
Some of it may be new to you, some of it will not be.

02:26.000 --> 02:27.640
None of it will be used to any of the maintainers.

02:27.640 --> 02:29.080
I don't know why they're here,

02:29.080 --> 02:32.880
but hopefully they will just laugh at my jokes and stuff like that anyway.

02:32.880 --> 02:36.360
The first major thing, I don't know if any of you noticed

02:36.360 --> 02:40.160
how many of you run Brew Update or noticed updating Humbrew.

02:40.160 --> 02:43.080
Lots of people complain at me about how Humbrew does this automatically

02:43.080 --> 02:44.600
without being prompted.

02:44.600 --> 02:46.880
You can opt out, but please don't.

02:46.920 --> 02:51.720
This should have got, for most people, most of the time, a lot faster than the last year.

02:51.720 --> 02:58.320
And the main reason is that we have stopped using Humbrew's GitHub repositories

02:58.320 --> 03:01.440
as the main data source for Humbrew.

03:01.440 --> 03:03.400
So when Humbrew was first created in 2009,

03:03.400 --> 03:07.840
one of the relatively innovative things it did was to use Git

03:07.840 --> 03:11.440
and put essentially all the data on a GitHub repo

03:11.440 --> 03:15.400
and then instead of building some complex update information system

03:15.440 --> 03:19.520
which is going to pull from some server somewhere that someone would have to host,

03:19.520 --> 03:24.080
it's like, no, we'll just do essentially just run Git fetch in the background.

03:24.080 --> 03:29.880
And Humbrew has kind of had a long-going battle with...

03:29.880 --> 03:31.600
Like a little bit of a battle with GitHub

03:31.600 --> 03:35.560
and more of a battle with the performance characteristics of this.

03:35.560 --> 03:39.320
So Humbrew Core, the main kind of Humbrew repository for all our formula,

03:39.320 --> 03:43.080
for all our packages, has kind of grown and grown over the years.

03:43.120 --> 03:46.920
Like we've had over, I think, 11,000 contributors,

03:46.920 --> 03:51.600
like millions of commits, hundreds of thousands of pull requests at this point.

03:51.600 --> 03:57.000
And as a result, it is very, very, very, very, very, very, very, very slow

03:57.000 --> 03:59.160
to do almost anything related to Git.

03:59.160 --> 04:05.160
And particularly with Git fetch, like a no-op Git fetch was probably at its worst,

04:05.160 --> 04:07.520
taking about 30 seconds just to be like,

04:07.520 --> 04:10.680
no, actually, you don't have any updates or anything required at all.

04:10.680 --> 04:14.600
So when I was lucky enough to be simultaneously working on Humbrew and GitHub,

04:14.600 --> 04:19.560
I added a call to the GitHub API that was there specifically

04:19.560 --> 04:21.800
to try and make Brut update a bit faster.

04:21.800 --> 04:24.400
So you could go to the GitHub API and it could quickly respond like,

04:24.400 --> 04:27.680
hey, don't run Git fetch, you don't need to, it's going to be really slow,

04:27.680 --> 04:30.000
and you don't have any changes anyway.

04:30.000 --> 04:33.360
A few other package managers use that now as well, which makes me happy.

04:33.360 --> 04:36.480
But over the years, lots of people at GitHub have kind of grumbled

04:36.480 --> 04:40.560
about using a Git repo as a CDN that's kind of nicely global.

04:41.320 --> 04:43.960
Globally distributed, and I believe at our peak,

04:43.960 --> 04:47.880
we had a couple of GitHub servers that were essentially dedicated purely

04:47.880 --> 04:49.960
to people fetching from Humbrew Core.

04:49.960 --> 04:53.920
So eventually, after leaving the company, it's kind of weird that it took me

04:53.920 --> 04:56.840
to leave the company to actually make my coworker sloppy.

04:56.840 --> 05:00.720
We, like with a bunch of work from other maintainers,

05:00.720 --> 05:04.920
we kind of moved over to essentially just curling a JSON file off the internet now.

05:04.920 --> 05:10.280
So instead, we have like a 15 meg-ish, I think, compressed file for Humbrew Core,

05:10.280 --> 05:11.480
for Humbrew Cask.

05:11.480 --> 05:14.480
When there's an update, we don't have any sort of clever binary diffing

05:14.480 --> 05:17.080
or anything, unfortunately, so we just download the whole thing again.

05:17.080 --> 05:20.680
But that seems to be a lot faster for most of the people, most of the time.

05:20.680 --> 05:24.840
And we still, optimistically, will be able to make it faster in future.

05:24.840 --> 05:28.080
So in case you didn't know, Humbrew has like a JSON API.

05:28.080 --> 05:32.000
This is basically the kind of the basis of what we're using.

05:32.000 --> 05:35.000
We've had to kind of add some bits and pieces and modify, move things around.

05:35.000 --> 05:39.400
And one of our maintainers here added like nice signing to this and stuff like that

05:39.400 --> 05:42.000
so that we could meet the kind of security requirements,

05:42.000 --> 05:46.400
the performance requirements we wanted for this new API way of downloading.

05:46.400 --> 05:51.880
It's actually, our API is really, really fast because it's posted on GitHub pages.

05:51.880 --> 05:56.920
So if you've had an idea of like statically building your API,

05:56.920 --> 06:00.200
it's incredibly painful in some respects, but also kind of fun in other ways.

06:00.200 --> 06:03.560
But yeah, don't dig too deep on how that's implemented

06:03.560 --> 06:07.800
because it's pretty disgusting.

06:07.800 --> 06:12.520
Another thing, somewhat relatedly, if you have set any of these variables in the past,

06:12.520 --> 06:19.400
like commonly people will set these things because Humbrew was updating too often

06:19.400 --> 06:20.920
and it was too slow and annoyed them,

06:20.920 --> 06:24.680
or shortly after we rolled out the API stuff, a bunch of people opted out

06:24.680 --> 06:26.680
because it was a little bit buggy and stuff like that,

06:26.680 --> 06:32.000
or it also updates too often considering un-setting them for a little bit.

06:32.000 --> 06:35.600
And then if things are still annoying for you, feel free to set them again,

06:35.600 --> 06:39.320
but you might have a better time without these than you used to.

06:39.320 --> 06:43.640
Similarly, if you still have these reports on your disk, you can now un-tap them

06:43.640 --> 06:45.880
and then you will get much more space back

06:45.880 --> 06:50.880
and just generally your updating could be potentially a little bit faster

06:50.880 --> 06:53.600
and happier and all this type of stuff.

06:53.600 --> 06:56.040
The other relatively big thing we did in the last year,

06:56.040 --> 07:02.280
not super exciting for everyone, but our analytics were hosted by Google for a very long time.

07:02.320 --> 07:05.960
We had a lot of people who didn't like us having analytics at all

07:05.960 --> 07:11.160
and I chose to ignore those people because we need them to be able to do our job, unfortunately.

07:11.160 --> 07:15.160
But I guess a concern we did hear again and again from people was like,

07:15.160 --> 07:16.760
hey, we don't mind you having analytics,

07:16.760 --> 07:19.680
but we're a bit concerned with all this data going to Google

07:19.680 --> 07:24.120
and if you look at the analytics docs, you can opt out of certain data collection,

07:24.120 --> 07:27.840
but that's kind of a line on trusting Google to do what they say,

07:27.840 --> 07:31.240
which I kind of do, but I understand not everyone does.

07:31.280 --> 07:40.200
So we've kind of now moved to kind of a nice cloud-hosted like EU instance of inflex DB,

07:40.200 --> 07:43.560
which means that we're gathering essentially the same data we had before,

07:43.560 --> 07:45.960
but we're not kind of tying it to individual users.

07:45.960 --> 07:50.120
We don't have the ability to kind of do stuff like capture IP addresses even if we wanted to

07:50.120 --> 07:52.440
and that makes everything a little bit nicer.

07:52.440 --> 07:56.600
So we've now destroyed all of our existing Google Analytics data

07:56.600 --> 08:00.800
and this means that if you want to know what Hummoo was doing

08:00.800 --> 08:05.120
or what user accounts were like two years ago, tough luck,

08:05.120 --> 08:07.640
but we do have this new analytics system

08:07.640 --> 08:11.200
automatically kind of deletes data after 365 days,

08:11.200 --> 08:16.040
so this should get us a nicer, slightly more privacy-focused approach in future.

08:16.040 --> 08:20.640
And the other thing that has been kind of principal with our analytics is trying to have it.

08:20.640 --> 08:24.440
So if people may not trust us with Gather Analytics,

08:24.480 --> 08:28.840
I understand that like it's a touchy point in the tech industry with privacy and all this stuff nowadays,

08:28.840 --> 08:31.280
but we do try and make all the information we gather public,

08:31.280 --> 08:36.080
so we've got these pages like under formula brudo sh slash analytics,

08:36.080 --> 08:37.960
various pages of the analytics we gather.

08:37.960 --> 08:40.560
We've got a few more things there than we used to be able to have

08:40.560 --> 08:45.280
and you can kind of see the download counts, percentage counts, all this type of stuff.

08:45.280 --> 08:49.480
And basically maintainers don't have access really to any more information than you do.

08:49.520 --> 08:54.680
Like we have a couple, a handful of people can access our InfluxDB console directly,

08:54.680 --> 08:58.560
but like the data in there is in such a kind of messy, horrible format

08:58.560 --> 09:00.120
that no one is querying that directly.

09:00.120 --> 09:04.040
They're all just using the same web pages as you and I might use,

09:04.040 --> 09:06.400
which feels like again, from a privacy perspective,

09:06.400 --> 09:10.760
we're all kind of on the same page, whether you're a user of Hummoo or people maintaining it.

09:10.760 --> 09:16.920
So also, again, another thing to stick your hand in the air for,

09:16.960 --> 09:19.360
who considers Hummoo to be slow?

09:21.160 --> 09:22.520
Yeah, a few people.

09:23.840 --> 09:27.120
Put your hand in the air if you feel like it got faster in the last year.

09:28.520 --> 09:31.520
Mostly just maintainers who made it faster, so...

09:32.520 --> 09:34.520
It's all right, you still count iValue.

09:35.520 --> 09:38.920
So this is a relatively common critique we hear about Hummoo,

09:38.920 --> 09:45.400
is it's slow or why does it upgrade all my things all the times and things like that.

09:45.400 --> 09:52.080
So we are working on this, this is kind of a background, medium priority thing

09:52.080 --> 09:54.600
for us that we kind of considered for quite a while.

09:54.600 --> 09:56.680
So in the last year, hopefully,

09:56.680 --> 10:02.160
brew update, that's mainly got faster from the API stuff we mentioned before.

10:02.160 --> 10:06.200
Hopefully brew upgrades, we've now made it a lot,

10:06.200 --> 10:09.080
in certain cases at least, we can now upgrade

10:09.080 --> 10:11.520
fewer of your dependencies than we used to.

10:11.520 --> 10:13.560
This is a little bit of a hack, but I'm going to talk later on

10:13.560 --> 10:16.360
about how we might be able to make this better going forward.

10:16.360 --> 10:18.160
And then similarly around brew fetch,

10:18.160 --> 10:20.400
some of our maintainers noticed that there was a bunch of work

10:20.400 --> 10:22.560
happening there that didn't need to happen.

10:22.560 --> 10:26.280
So I guess if you do find Hummoo to be a little bit too slow,

10:26.280 --> 10:30.840
then be relatively confident that we do feel your pain

10:30.840 --> 10:33.560
and we are trying to make things faster most of the time.

10:34.400 --> 10:37.760
A really weird performance optimization we decided to do,

10:37.760 --> 10:39.560
considering everything I've said before,

10:40.560 --> 10:43.960
is I don't know if anyone who's not a maintainer ever went

10:43.960 --> 10:47.480
and clicked around on the repo pages on GitHub,

10:47.480 --> 10:50.840
but due to the Git issues I mentioned earlier,

10:50.840 --> 10:53.680
a lot of these pages were time out and stuff like that.

10:53.680 --> 10:56.920
And another thing that Git and GitHub people

10:56.920 --> 10:59.280
who knew a lot about Git have said to us for a while

10:59.280 --> 11:02.560
is due to some complicated Git internal stuff

11:02.560 --> 11:04.120
that I don't really understand,

11:04.120 --> 11:06.080
you have structured the Hummoo repo in pretty much

11:06.080 --> 11:08.240
the worst possible way for Git performance.

11:09.240 --> 11:11.960
Git apparently really does not like having directories

11:11.960 --> 11:14.960
with thousands of files in them,

11:14.960 --> 11:18.440
and we had, I think, a directory with 8,000 files

11:18.440 --> 11:19.760
and it was something like that,

11:19.760 --> 11:22.160
which means you can see it on the GitHub interface

11:22.160 --> 11:24.760
because all these operations list in the directory,

11:24.760 --> 11:27.560
if you did a Git blame or Git log on this directory,

11:27.560 --> 11:29.040
all of those were time out,

11:29.040 --> 11:31.560
which meant increasing amounts of the GitHub user interface

11:31.560 --> 11:35.160
was just not useful for when you were using Hummoo,

11:35.160 --> 11:37.960
and that also contributed to why Git fetch was so slow

11:38.680 --> 11:41.600
Git GC was so slow, like opening PRs,

11:41.600 --> 11:44.040
like the pushes and the pulls and all this stuff involved,

11:44.040 --> 11:45.800
which is like getting really slow

11:45.800 --> 11:47.840
and getting slower and slower and slower.

11:47.840 --> 11:50.680
We were also seeing more instance with GitHub

11:50.680 --> 11:53.360
that GitHub didn't seem to think we're related to this,

11:53.360 --> 11:55.360
but I kind of did.

11:55.360 --> 11:57.960
So we've now like sharded our repos,

11:57.960 --> 12:00.920
so essentially like everything is split into directories

12:00.920 --> 12:05.920
based on name, and because we have quite a lot of libraries,

12:05.920 --> 12:08.200
so Lib gets its own special directory,

12:08.200 --> 12:09.960
it doesn't get bundled in under L,

12:09.960 --> 12:12.600
we've done the same thing for Hummoo Cask as well,

12:12.600 --> 12:13.640
like again, as I say,

12:13.640 --> 12:15.080
GitHub would be wanting us to do this for ages,

12:15.080 --> 12:17.800
but we've finally actually done this now,

12:17.800 --> 12:19.560
and that now means that on these pages,

12:19.560 --> 12:22.360
you can actually finally now see the commit information

12:22.360 --> 12:24.560
and timestamps and all this type of stuff,

12:24.560 --> 12:26.440
and it makes it a bit more useful for people

12:26.440 --> 12:28.000
when it wasn't before.

12:28.000 --> 12:30.240
So a more exciting thing for us is,

12:30.240 --> 12:32.920
we moved to like using Ruby 3.1,

12:32.920 --> 12:36.080
Hummoo, who knew that Hummoo was written in Ruby?

12:36.080 --> 12:38.680
It's this widely known thing, yeah, cool.

12:38.680 --> 12:43.680
And so Hummoo originally I think was on Mac OS,

12:43.800 --> 12:46.800
10.5 I think the first version,

12:46.800 --> 12:50.360
and back then Apple provided like loads of stuff with the OS,

12:50.360 --> 12:53.880
including Ruby, 1.8 or whatever I think it was at the time,

12:53.880 --> 12:55.960
and Hummoo kind of particularly in the early days

12:55.960 --> 12:58.200
tried to use as much stuff from the system as possible

12:58.200 --> 13:00.640
and not pull in its own kind of libraries.

13:01.640 --> 13:04.040
We still try and do that where we can,

13:04.040 --> 13:09.040
but Ruby was an example where Apple said a few years ago

13:09.360 --> 13:11.600
that like, okay, we're kind of deprecating

13:11.600 --> 13:13.920
the system version of Ruby and Python

13:13.920 --> 13:16.360
and I think Perl and stuff like that,

13:16.360 --> 13:19.480
and for Apple kind of deprecating this stuff,

13:19.480 --> 13:21.000
we've sort of been playing chicken and being like,

13:21.000 --> 13:22.880
well, you say it's deprecated,

13:22.880 --> 13:24.160
but you keep upgrading it for us,

13:24.160 --> 13:26.400
so we're gonna just keep using your version

13:26.400 --> 13:30.000
as long as we can, and like eventually kind of went

13:30.040 --> 13:31.720
to some Apple people for the last release

13:31.720 --> 13:34.320
and were like, hey, the Ruby you supply is 2.6,

13:34.320 --> 13:36.000
that's really old, when are we gonna get a new one?

13:36.000 --> 13:37.920
And they were like, did you not read

13:37.920 --> 13:39.200
when we told you it was deprecated?

13:39.200 --> 13:41.720
And we were like, yeah, but, yeah, but please.

13:41.720 --> 13:44.040
And they said, no, this time we mean it.

13:44.040 --> 13:46.480
So like finally we've kind of,

13:46.480 --> 13:48.080
we've always had our own kind of thing

13:48.080 --> 13:51.920
we call portable Ruby, which allowed us a way

13:51.920 --> 13:54.000
to distribute a kind of a Ruby

13:54.000 --> 13:56.280
that you could install anywhere in your system.

13:56.280 --> 13:58.960
So it worked regardless of where your homebrew is,

13:58.960 --> 14:01.360
and it would work on a variety of Mac OS versions

14:01.360 --> 14:02.800
and stuff like that.

14:02.800 --> 14:05.680
And that was now moved to Ruby 3.1,

14:05.680 --> 14:08.320
so now we have a system where essentially everyone

14:08.320 --> 14:09.920
on Mac OS at least, on Linux,

14:09.920 --> 14:12.680
there's some configurations where you don't need this,

14:12.680 --> 14:14.720
but everyone has portable Ruby now

14:14.720 --> 14:16.520
and supplies kind of a nice,

14:16.520 --> 14:18.560
relatively new version of Ruby.

14:18.560 --> 14:21.520
So this is nice for us, it probably has some,

14:21.520 --> 14:24.440
it's had some mild performance increases,

14:24.440 --> 14:26.480
and it lets us use like newer language features,

14:26.480 --> 14:28.360
makes homebrew easier to kind of maintain,

14:28.400 --> 14:30.720
makes it easier for homebrew like Ruby users

14:30.720 --> 14:33.960
to kind of not be used to this kind of ancient version of Ruby,

14:33.960 --> 14:37.160
and then there's stuff like Surabay and Rubikop

14:37.160 --> 14:40.480
and all these other libraries we kind of depend on

14:44.960 --> 14:47.000
that were kind of creeping towards

14:47.000 --> 14:50.520
deprecating Ruby 2.6, or had already done so.

14:50.520 --> 14:52.240
So let's just kind of keep more up to date

14:52.240 --> 14:54.640
and stuff like that as well, which is very nice.

14:55.640 --> 14:59.920
We've also released a official like homebrew Mac OS package.

14:59.920 --> 15:01.440
This is another thing that's been kind of requested

15:01.440 --> 15:05.240
for a long time, people have a love-hate relationship.

15:05.240 --> 15:09.600
I think homebrew was one of the first projects

15:09.600 --> 15:13.160
to do the whole curl this bash script into your terminal,

15:13.160 --> 15:14.880
and then we'll install it that way.

15:14.880 --> 15:17.360
Who has security concerns about that approach?

15:18.920 --> 15:20.440
Almost everyone, good.

15:20.440 --> 15:22.320
We're gonna keep doing it, so yeah.

15:22.560 --> 15:23.400
All right.

15:23.400 --> 15:28.400
But if you don't like that, then you can use this instead.

15:30.120 --> 15:33.160
So this is kind of the more standard installation process

15:33.160 --> 15:35.880
you would expect, where you get a nice installer

15:35.880 --> 15:37.240
and you kind of click through these things

15:37.240 --> 15:38.360
and stuff like that.

15:39.640 --> 15:42.440
And you should end up at the end with essentially

15:42.440 --> 15:45.000
the same stuff, and it prints the same messages for you

15:45.000 --> 15:47.680
and all this type of stuff as the bash installer,

15:48.680 --> 15:52.440
but you can do this through like MDM tools

15:52.440 --> 15:54.000
and things like that.

15:54.000 --> 15:55.280
But as I mentioned earlier,

15:55.280 --> 15:56.680
I've actually been working on a few little bits

15:56.680 --> 15:59.280
which are kind of not strictly homebrew related.

15:59.280 --> 16:00.720
So I've been working on workbrew,

16:00.720 --> 16:03.920
which is this thing where we're building kind of

16:03.920 --> 16:05.920
some close source stuff on top of work,

16:05.920 --> 16:10.280
on top of homebrew to try and kind of find this balance

16:10.280 --> 16:11.360
where there's been a bunch of things

16:11.360 --> 16:13.360
where like the package is an example of one

16:13.360 --> 16:15.920
where people have asked for it over the years,

16:16.040 --> 16:18.000
some people wanted to get involved and built that,

16:18.000 --> 16:19.280
and that's all fine.

16:19.280 --> 16:21.120
Whereas on workbrew, there's been a bunch of stuff

16:21.120 --> 16:22.480
that people have asked for over the years

16:22.480 --> 16:25.720
and I've asked for it, it's homebrew volunteers

16:25.720 --> 16:28.480
and they don't want to do it, say okay, well fine,

16:28.480 --> 16:30.080
we can do some of this stuff for you for money.

16:30.080 --> 16:31.680
So we have our own package here now,

16:31.680 --> 16:34.720
which does a few more things than the homebrew one does

16:34.720 --> 16:35.560
and stuff like that.

16:35.560 --> 16:36.800
Not going to go on about workbrew too much,

16:36.800 --> 16:39.800
but if you are interested, go and have a look at our website

16:39.800 --> 16:41.360
and there's a little demo of like what we're doing

16:41.360 --> 16:42.920
and we're kind of recruiting people

16:42.920 --> 16:44.360
who we want to work with on this stuff.

16:44.400 --> 16:45.640
So get in touch.

16:46.720 --> 16:49.000
But on homebrew stuff,

16:49.000 --> 16:50.400
that's looking forward to the next year.

16:50.400 --> 16:55.400
So we meet together as kind of a homebrew group each year,

16:55.560 --> 16:57.520
so I'm not entirely sure what our roadmap is,

16:57.520 --> 16:59.680
we're going to kind of try and decide some things tomorrow,

16:59.680 --> 17:02.600
maybe as a group, kind of figure out like what we see

17:02.600 --> 17:03.560
as the most important things,

17:03.560 --> 17:06.760
but some ideas kind of I've seen flipping around

17:06.760 --> 17:08.400
and things that I have

17:08.400 --> 17:11.320
and kind of have currently open issues for them

17:11.320 --> 17:14.160
or stuff around like handling conflicts better.

17:14.200 --> 17:18.440
So there's this kind of ability for packages

17:18.440 --> 17:19.840
and homebrew to conflict with each other,

17:19.840 --> 17:21.800
that means you can't have either of them installed,

17:21.800 --> 17:23.080
sorry, you can't have both of them installed

17:23.080 --> 17:24.160
at the same time.

17:24.160 --> 17:25.120
That's kind of a pain in the ass,

17:25.120 --> 17:26.240
it doesn't really work very nicely,

17:26.240 --> 17:27.880
so we're hoping to improve some of that.

17:27.880 --> 17:30.840
There's also kind of inherent conflicts

17:30.840 --> 17:33.360
between CASCs and formulae.

17:33.360 --> 17:34.720
Who feels like they understand

17:34.720 --> 17:37.520
the difference between CASCs and formulae?

17:37.520 --> 17:40.280
Okay, only the homebrew maintainers, great.

17:40.320 --> 17:45.320
So homebrew had this kind of somewhat alternate approach,

17:47.200 --> 17:49.760
like the kind of integrated with homebrew,

17:49.760 --> 17:52.240
but was kind of its own separate ecosystem a few years ago

17:52.240 --> 17:54.440
that kind of merged into homebrew proper a few years ago

17:54.440 --> 17:55.920
called homebrew CASC.

17:55.920 --> 18:00.160
So homebrew, at least in the official kind of repo,

18:00.160 --> 18:02.000
is all about taking open source software.

18:02.000 --> 18:03.360
We build it from source,

18:03.360 --> 18:06.000
we give you binary packages, and then we ship that to you.

18:06.000 --> 18:07.440
Homebrew CASC is a little bit different,

18:07.440 --> 18:09.480
that's for distributing proprietary software

18:09.520 --> 18:12.320
where the upstream package,

18:12.320 --> 18:14.320
well, the upstream supplier of the software

18:14.320 --> 18:16.160
provides the binaries for you,

18:16.160 --> 18:18.440
and then we download that and install it for you.

18:18.440 --> 18:21.520
So for example, Wget might be a formula,

18:21.520 --> 18:22.640
because we can download the sources

18:22.640 --> 18:24.040
and build that from scratch,

18:24.040 --> 18:26.600
or something like Google Chrome, or Zoom,

18:26.600 --> 18:28.440
or whatever would be a CASC.

18:29.720 --> 18:32.920
So there's some cases in which there are CASC and formula

18:32.920 --> 18:35.080
for the same thing, like Docker, for example,

18:35.080 --> 18:36.640
is both an open source project

18:36.640 --> 18:38.000
that kind of, you get some nice binaries,

18:38.000 --> 18:39.200
you can build from source,

18:39.200 --> 18:41.680
but also there's like all the gooey stuff and whatever.

18:41.680 --> 18:44.560
And if you do, if you install the Docker formula

18:44.560 --> 18:47.120
and the Docker CASC at the same time,

18:47.120 --> 18:49.800
things get angry and start shouting at you,

18:49.800 --> 18:51.880
and it doesn't work very nicely.

18:51.880 --> 18:53.720
So that's something that we're probably

18:53.720 --> 18:55.320
gonna try and make better this year.

18:55.320 --> 18:58.000
Another thing is we're continuing to work on our API stuff,

18:58.000 --> 19:00.280
we're trying to make it smaller and faster

19:00.280 --> 19:02.440
and consider ways that we can do that

19:02.440 --> 19:05.000
to again make that updating experience

19:05.000 --> 19:06.680
more pleasant for people to use.

19:07.480 --> 19:08.880
The other, also the API,

19:08.880 --> 19:10.320
as someone who's kind of been consuming

19:10.320 --> 19:13.640
the Humbrew API a lot recently, it's pretty crap.

19:13.640 --> 19:17.000
It was originally kind of created

19:17.000 --> 19:19.400
in the relatively early days of like,

19:19.400 --> 19:21.800
I don't know, 2013 or something like that.

19:21.800 --> 19:24.120
And we've just kind of bolted on bits at this point

19:24.120 --> 19:26.600
where it's got like six arms and three legs

19:26.600 --> 19:29.640
and they're all the wrong shape and it's, yeah, yuck.

19:29.640 --> 19:32.160
So hopefully we can have something that's a little bit nicer

19:32.160 --> 19:34.840
for people who are kind of trying to integrate with Humbrew

19:34.880 --> 19:37.520
to use, release this year as well.

19:37.520 --> 19:39.640
And the stuff I mentioned earlier about upgrades.

19:39.640 --> 19:43.280
So part of the reason Humbrew is often upgrading

19:43.280 --> 19:44.840
everything all the time and people get grumpy

19:44.840 --> 19:46.000
because that's really slow,

19:46.000 --> 19:47.720
is because we don't have a good way

19:47.720 --> 19:51.640
of figuring out what upgrades are needed and when.

19:51.640 --> 19:54.960
So historically we had the kind of conservative approach

19:54.960 --> 19:59.280
of, well, if there's anything else that's new,

19:59.280 --> 20:00.760
that's in your kind of dependency tree,

20:00.760 --> 20:03.040
we will always try and upgrade everything every time

20:03.040 --> 20:04.200
just to be safe.

20:04.200 --> 20:05.760
But then we realized like, well,

20:05.760 --> 20:07.440
you upgrade a ton of stuff all the time

20:07.440 --> 20:10.560
and then that makes people sad and angry on the internet

20:10.560 --> 20:11.960
and all this type of stuff.

20:11.960 --> 20:14.280
So then what I mentioned we did last year

20:14.280 --> 20:17.400
was we basically said, well, we can kind of infer a little bit

20:17.400 --> 20:19.760
from the way the binary packages were built.

20:19.760 --> 20:23.720
The binary package was built with OpenSL 1.1.1

20:23.720 --> 20:25.960
and now we have OpenSL 1.1.2.

20:25.960 --> 20:28.520
We know that this package doesn't need 1.1.2

20:28.520 --> 20:30.560
so we don't have to upgrade it, yada, yada, yada.

20:30.560 --> 20:32.680
But hopefully we actually have like,

20:32.680 --> 20:35.560
there's a lot of the kind of bigger, proper package managers

20:35.560 --> 20:39.000
and distributions have like actual like ABI

20:39.000 --> 20:41.280
which stands for application binary interface,

20:41.280 --> 20:44.160
essentially like what libraries you can link again

20:44.160 --> 20:46.680
and change the versions without breaking things.

20:46.680 --> 20:48.240
They have a lot of tooling around that stuff

20:48.240 --> 20:50.920
that we could kind of adopt and similarly like we can have a way,

20:50.920 --> 20:52.760
even with our existing tooling to kind of make this stuff

20:52.760 --> 20:54.680
a little bit more explicit, which would mean

20:54.680 --> 20:56.600
that we don't need to upgrade as much stuff

20:56.600 --> 20:57.600
as much of the time.

20:58.840 --> 21:00.920
But because we're an OpenSL project,

21:00.960 --> 21:02.680
maybe what we do in the last year

21:02.680 --> 21:04.520
will be something that we haven't thought of yet,

21:04.520 --> 21:07.440
that we think of because someone in this room

21:07.440 --> 21:11.160
has a good idea in a pull request or you file a bug report

21:11.160 --> 21:13.960
and then that makes us think of something that's smart

21:13.960 --> 21:15.360
and then we go and do something in a clever way

21:15.360 --> 21:18.200
or you file a really well written feature request

21:18.200 --> 21:19.800
that then inspires us to do something cool.

21:19.800 --> 21:22.160
So I really encourage you,

21:22.160 --> 21:23.120
even if you've never been involved

21:23.120 --> 21:24.600
in an OpenSource project before,

21:24.600 --> 21:28.120
we're generally, myself excluded, a fairly friendly bunch

21:28.360 --> 21:31.920
and we will all try and help you get involved with Homebrew

21:31.920 --> 21:34.080
and help you along the way,

21:34.080 --> 21:35.640
particularly with something like a pull request,

21:35.640 --> 21:39.240
like if you have an idea and you think you can kind of make it happen

21:39.240 --> 21:42.520
and you can write some code in some sort of form,

21:42.520 --> 21:45.040
even if it's only like 10% of the way to working,

21:45.040 --> 21:47.000
feel free to open a pull request and then just say,

21:47.000 --> 21:50.240
hey, like this is what I tried, this is what I need help with,

21:50.240 --> 21:51.760
and then we can kind of help you along the way.

21:51.760 --> 21:54.440
It's often much easier to talk about the code

21:54.440 --> 21:57.760
than it is to talk about the ideas about the code beforehand.

21:57.800 --> 22:01.680
We're not the type of project where every pull request needs an issue

22:01.680 --> 22:05.840
open to beforehand, like we believe in discussing the code whenever you can

22:05.840 --> 22:08.720
rather than kind of discussing some abstract conception

22:08.720 --> 22:12.640
of what the code might look like when someone decides to write it.

22:12.640 --> 22:15.000
So I think we've got a little bit of time for questions now

22:15.000 --> 22:18.960
and also if you don't feel comfortable asking any questions in this format,

22:18.960 --> 22:20.600
then feel free to ask me anything privately.

22:20.600 --> 22:23.840
I'm on Mastodon and Twitter and you can email me and stuff as well.

22:23.840 --> 22:25.640
And yeah, thank you very much for having me.

22:25.640 --> 22:32.640
APPLAUSE

22:36.640 --> 22:38.640
Are there any questions? Oh, all right.

22:47.120 --> 22:49.400
Just going to ask, where's the...

22:49.400 --> 22:51.200
Oh, the beer costume.

22:51.200 --> 22:54.680
OK, so anyone who was here last year,

22:54.680 --> 22:57.920
I was wearing a head to toe beer costume

22:57.920 --> 23:00.840
because I love my Uber maintainer friends,

23:00.840 --> 23:03.600
but they're not always the most organized bunch.

23:03.600 --> 23:08.280
And someone posted a picture before Fosdame last year saying,

23:08.280 --> 23:10.240
like, here's a beer costume.

23:10.240 --> 23:12.400
Wouldn't it be funny we can make Mike wear this lol?

23:12.400 --> 23:15.800
And I was like, yeah, basically like challenge accepted.

23:15.800 --> 23:17.880
You're not organized enough to make that happen.

23:17.880 --> 23:22.120
And unfortunately they were and I had to wear a beer costume.

23:22.120 --> 23:24.520
There are pictures on the Internet. Don't look for them.

23:25.360 --> 23:27.960
Thankfully they were not organized enough to bring it this year,

23:27.960 --> 23:30.240
so that is why I'm not wearing the beer costume.

23:30.240 --> 23:33.640
And shame on you, sir, for reminding people that it exists.

23:33.640 --> 23:35.640
LAUGHTER

23:37.520 --> 23:39.520
Any more questions?

23:40.520 --> 23:42.520
Awesome. Thank you, Mike.

23:42.520 --> 23:45.520
APPLAUSE

23:54.520 --> 23:57.520
You

