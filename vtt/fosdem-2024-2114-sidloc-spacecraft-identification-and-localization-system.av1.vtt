WEBVTT

00:00.000 --> 00:11.520
Hello everyone, I'm Manolis from Liber Space Foundation and today I will present you the

00:11.520 --> 00:23.200
seedlock which is a new telecommunication standard that we started to propose in order to identify

00:23.200 --> 00:32.960
and localize satellites that are orbiting the Earth. So before I start, are you aware of the

00:32.960 --> 00:44.960
TLEs, two line elements? How many of you? Okay, a lot of people. So TLEs is two lines, two text lines

00:44.960 --> 00:52.080
that describe the orbit of an orbiting object. Okay, so what is the problem and the motivation

00:52.080 --> 01:04.240
behind the seedlock? Those orbital data are coming from limited sources, they are public but not

01:04.240 --> 01:14.080
Libre. So these sources are mostly military, so we have one source that is US military and France

01:14.080 --> 01:22.720
military and they announce them publicly but of course we have already restrictions that the

01:22.720 --> 01:32.720
military has. A very distinct limitation is that they provide public data only for

01:33.840 --> 01:43.840
space objects that are larger than 10 centimeters and someone may say okay, 10 centimeters

01:43.840 --> 01:50.080
are enough for satellite but I know some very annoying people behind there that they build

01:50.080 --> 01:57.360
satellites at smaller than 10 centimeters. Actually this is a cubic platform that we flown a year ago

01:58.320 --> 02:06.640
into space and with a firefly mission and it was a very very good use case because

02:07.360 --> 02:13.040
the second stage of the firefly rocket failed to deliver the satellites on the correct orbit,

02:13.040 --> 02:25.680
so it was 100 kilometers less if I recall correctly. So the orbit was not the one that we have

02:25.680 --> 02:33.200
prepared for our mission and it was changing very rapidly because due to the drug.

02:33.840 --> 02:44.400
Okay and the traditional ways of getting the orbital data rely on radars. This is the space

02:44.400 --> 02:53.360
surveillance network of US military that has few radars across the world, they are quite huge

02:54.320 --> 03:03.280
okay and in order to get a new orbital formation for your satellite the satellite

03:04.160 --> 03:14.240
must pass through the aperture of such a radar okay and again if it is small it is not guaranteed

03:14.240 --> 03:23.120
that you will get your orbital data for your satellite. So the idea of seedlock is to put

03:24.000 --> 03:34.640
a tiny beacon on a space object for example a rocket body, a satellite or anything that you want to

03:34.640 --> 03:42.640
fly and by transmitting specific signals you utilize existing ground station networks like the

03:42.640 --> 03:50.560
satnags or whatever you want, do the processing, extract the frequency offset and due to the Doppler

03:50.560 --> 04:02.480
and then by making cure fitting techniques you can estimate very accurately the orbit and this

04:02.480 --> 04:09.040
is something that we have already done with on satnags using the STRF, I don't know if

04:09.120 --> 04:19.600
some one of you are available with STRF okay and it has proven that it can produce a quite accurate

04:20.400 --> 04:32.800
orbit. So the goal of seedlock is to have a very low power transmitter on board the satellite or a

04:32.800 --> 04:41.840
space object to have low cost let's say reasonable cost for a space mission and also to be zero

04:41.840 --> 04:46.720
maintenance so you attach this beacon on your satellite and you don't have to do anything else

04:49.680 --> 04:56.720
of course all of the satellite operators want to in order to integrate such a solution

04:56.720 --> 05:09.520
wants to be as easy to integrate as possible so that's why we miniserize a lot the beacon and it's

05:10.800 --> 05:19.840
this form is for example is three times larger than required I will talk about later why

05:20.000 --> 05:28.880
and as I said before it can take advantage and also existing ground station network

05:30.320 --> 05:41.200
the other characteristics of the seedlock is we envision to use a UHS band and 401 to 402 especially

05:41.920 --> 05:48.560
this is quite dangerous band let's say because the

05:50.880 --> 06:00.560
meteorological satellites use it so there was an independent research from MISA if we can use it

06:01.120 --> 06:10.560
and by taking into consideration the power spectrum that we produce on such frequency

06:11.200 --> 06:20.000
it seems that we can coexist with meteorological satellites the band that the seedlock uses it's

06:20.800 --> 06:30.480
at around one megahertz and it it transmits a bpsk signal that is generated by a

06:31.440 --> 06:40.640
die sequence spectrum system we use the gold cores I don't know if some of you are familiar with

06:40.640 --> 06:51.040
them they have excellent cross-correlation properties and especially and more precisely we repeat 10

06:51.040 --> 06:59.440
times its gold sequence it has to do with the decoding procedure that's why the the repetitions

06:59.440 --> 07:06.800
and the effective rate is only 50 bits per second per second it's a frame of seedlock

07:06.800 --> 07:18.240
has a duration of about 12 to 14 seconds so quite low in data rate but quite resilient in the

07:19.360 --> 07:27.120
lowest in our scenarios the TX power is very low it's only 25 dbm

07:29.680 --> 07:39.360
so here describe a bit the process of the TX of the spreading you have a cheap rate which is

07:39.360 --> 07:46.240
much higher than the data rate as I said before this is one megahertz and you just so you perform

07:46.240 --> 07:56.880
the the XOR of the gold sequence with the initial data to produce a absurd noise sequence that is

07:57.840 --> 08:06.960
quite higher in bandwidth so this is the the transmission flow graph that we use in order

08:06.960 --> 08:16.000
to test and view the simulations actually it's quite it's quite simple most of the blocks are

08:16.640 --> 08:22.560
the the the ignore radio core blocks and we have created two additional ones which is the spreading

08:23.520 --> 08:35.040
and and the spreading and one that actually compiles the frame of the seedlock very very simple

08:37.680 --> 08:45.120
on the other side however as you may know everything comes with a cost okay so

08:45.360 --> 08:56.960
the the RX procedure is quite expensive and potentially intensive so we have to deal with

08:57.600 --> 09:06.400
terms of doing this in real time or or not have enough sensitivity to identify something and then

09:06.400 --> 09:15.680
start doing something more let's say robust so there are three major three major techniques to

09:15.680 --> 09:24.000
to to decode the the dss single it's the auto correlation one which from the from which we can

09:24.000 --> 09:35.040
get directly the frequency offset without any issue but it is the it doesn't perform well in

09:35.040 --> 09:40.720
low westerner environments okay the other one is the cross correlation with coherent integration

09:42.400 --> 09:51.120
which is i think the the most sensitive one but right now as we stand as we stand at this point

09:51.120 --> 09:58.000
we cannot do decoding real decoding in real time in nice seven so this is a very big deal

09:58.240 --> 10:05.280
and there is also the cross correlation with non-coherent integration which is something

10:05.280 --> 10:13.120
in the middle so the idea is to use to use auto correlation only to say hey probably a seedlock

10:13.120 --> 10:20.560
transmission is is currently active and then switch to cross correlation with non-coherent

10:20.560 --> 10:30.720
integration to extract the frame type and whatever it is needed to to be extracted in order to get

10:30.720 --> 10:39.440
the full the full frame and then offline if the snr is not enough switch to cross correlation

10:39.440 --> 10:47.520
with coherent integration in order to get the the whole frame so seedlock supports three different

10:47.520 --> 10:55.920
types of beacons the the minimal which is a super minimal amount of amount of information in order to

10:56.640 --> 11:04.480
identify which satellite you are currently receiving the full which has also

11:07.200 --> 11:10.240
location the location of the satellite if the satellite supports

11:10.720 --> 11:19.760
uh uh location estimation through a gps let's say and they they integrate it which is all it's

11:19.760 --> 11:29.360
similar to the full but uh the the satellite can pass can piggyback some uh minor information on the

11:29.360 --> 11:36.080
data on the on the seedlock frame itself so if everything goes wrong on the satellite

11:36.320 --> 11:42.800
operators could still have a clue if for example the satellite was never

11:44.400 --> 11:50.560
pinked the the seedlock beacon so it could be a clue that the it was a catastrophic failure of the

11:50.560 --> 12:04.560
satellite let's say these are the full beacon fields most of them most of them are related to the

12:04.560 --> 12:12.960
position the most interesting of them are two it's the sink word which is all all ones

12:15.280 --> 12:24.080
and the the satellite ID which is a unique identifier for its space both it's orbiting

12:24.080 --> 12:38.000
both let's say the the all ones is a bit weird for a preamble but imagine that you using a spreading

12:38.720 --> 12:48.320
you spread these all ones so you have a repeated pseudo noise sequence and if you if you keep it

12:48.320 --> 12:59.200
the same you can integrate it on on a larger time window so you could potentially identify easier

13:00.240 --> 13:11.040
the existence of siddler so the reference design of the siddler beacon uses an stm

13:11.840 --> 13:21.520
32 l4 series mcu which handles the main control of of the order of the hardware and the peripherals

13:22.720 --> 13:29.840
we have the for the for the single generation we use the 80 86 rf

13:30.480 --> 13:41.040
215 ic in iq mode so this particular transceivers can be set can be configured to operate in iq

13:41.680 --> 13:48.800
and the the whole dsp and the iq generation is done on the ecp5 fpj that we have on board

13:51.200 --> 13:57.920
so all of these components are inside this cube

13:59.920 --> 14:10.240
regarding its size it could be far smaller but we got an opportunity to fly with a ryan a ryan 6

14:10.240 --> 14:20.000
the new rocket from isa and a ryan and actually they mandate to have a deep sub nine connector

14:20.960 --> 14:30.880
so regard it is huge compared to the to the to the whole stack and manfos do you recall we had the

14:32.640 --> 14:48.720
m5 screws yes they they they required m5 screws which was yeah on this we use mv2.5 2.5 yes yes

14:50.800 --> 14:58.080
okay so the the the beacons could should be larger of course

15:00.400 --> 15:06.560
this is a flight model this will this will actually fly with ryan

15:08.400 --> 15:17.280
and it had passed the vibration testing this is the vibration pod that you that you shake it and

15:17.360 --> 15:28.080
in order to see if everything holds and of course the divac procedure so we we did also a deployment

15:28.080 --> 15:34.240
of the antenna inside the divac in order to to see if the the beacon can deploy its antenna in the

15:34.240 --> 15:43.920
cold plateau at minus 20 around minus 20 and actually we are quite happy with the sitlock because it's

15:44.480 --> 15:53.760
uh okay Libre space foundation produces everything in open source and open hardware way

15:54.800 --> 16:03.600
but our previous comms board had this limitation from xylem so we used in xylem's fpga so we had

16:03.600 --> 16:13.440
to rely on vivado in order to build the the beacon but this time we selected the properly the hardware

16:13.440 --> 16:23.920
in order to to use to in order to produce everything from open open tools so yeah we are quite

16:25.120 --> 16:31.760
proud about it so the the the projects involved is of course key card for the pcb is new radio for the

16:33.120 --> 16:39.360
ground station decoding and simulations free card for the mechanical

16:40.080 --> 16:52.480
uh zeffy arthos plus ecp 5 for the uh on board controller and uh liptix plus yosis plus trellis

16:52.480 --> 17:03.200
and xpnr for the ecp 5 bit 3 so that's all for me uh you can find more information on our github

17:03.200 --> 17:11.680
repositories everything is there from pcb to to software and also you can join our matrix

17:11.680 --> 17:23.040
transform more information from that's all for me thank you a lot

17:26.240 --> 17:29.040
so any questions

17:33.360 --> 17:36.400
like the box or is there any like special you know

17:36.400 --> 17:43.280
paper or for quite for example students who wants to uh implement it in their own designs

17:43.280 --> 17:51.280
so what about the about widths and all that so the question is uh if uh someone can uh can

17:52.880 --> 17:59.520
make it out of the box and use it for its own so yes you can do that it's everything there uh

17:59.520 --> 18:08.800
but of course you have to respect the the frequency um the the frequency that we'll use

18:08.800 --> 18:16.800
okay so for this particular uh beacon it's uh at the frequency that uh i i told you before it's uh

18:16.800 --> 18:20.640
for uh 401 uh to 402

18:20.880 --> 18:26.560
thing is that this uh i'm at all for our frequency basically so you chose it from your project

18:26.560 --> 18:33.520
i mean from your system as well not not really because we would like to to stay at uh ucf okay

18:34.640 --> 18:42.560
because uh it is a compromise between uh the Doppler and Doppler shift and

18:42.960 --> 18:53.360
um and path loss okay so ideally we would like to have to to to to to use higher frequencies

18:53.920 --> 19:01.120
because the Doppler there is larger so your quantization there and the Doppler estimation

19:01.120 --> 19:11.200
is less okay but then you have the path loss is larger so it's a chicken a problem let's say yeah

19:13.200 --> 19:15.200
yeah

19:20.560 --> 19:21.200
this space sorry

19:24.800 --> 19:32.800
hmm yes the question is uh who is doing the uh the spacecraft id coordination that's a very good

19:32.800 --> 19:44.400
question um actually there is um uh there is an idea to to to use the ui d's and the posture of it

19:45.760 --> 19:56.000
take the 76 bits of it and place it at the supply to identify it um but for now we focus mainly on

19:56.960 --> 20:05.520
on the modulation and post processing uh staff and i think that if we see that hey this is a valuable

20:05.520 --> 20:19.040
way to get uh accurate orbits and and rapidly then some we can we can think about an authority or

20:19.040 --> 20:24.480
registration form that you get an id so you know that in order to be sure that it's unique

20:26.960 --> 20:34.880
yes yeah so uh i see you're using the stm32 uh but there's no uh like red hard equivalent i know that

20:34.880 --> 20:39.760
you are using only cross components and that it's maybe not the core but there are other like

20:39.760 --> 20:44.240
microcontrollers out there that have like a radiation hardened equivalent that might be

20:44.240 --> 20:51.200
interesting for the future if you want to equip like geocentrelites for example um so uh what is there

20:51.840 --> 20:56.320
like a version two coming or something like that when you were thinking about that yeah so the question

20:56.320 --> 21:06.160
is uh if the stm32 microcontrollers is the only choice or we can move to other other choices that

21:06.160 --> 21:19.200
are also radiation hardened um so we there was no big reason to to to use the stm32 um only for

21:19.280 --> 21:26.240
convenience let's say because we are familiar with them uh or we can easily find uh artos that are

21:27.120 --> 21:35.440
already support them uh but as i said this is um this is the demonstrators the demonstrators

21:35.440 --> 21:44.560
demonstrators sorry uh we want to let's say focus on the modulation around the rf part to see to show

21:44.560 --> 21:55.360
that this is feasible and it can scale also uh and not on the hardware itself so i'll focus

21:55.360 --> 22:03.760
mainly on the protocol specification rather than the the actual hardware so the the protocol will be

22:03.760 --> 22:12.800
is open source so uh if someone wants to implement a beacon uh with red hard components

22:13.760 --> 22:14.720
he is free to do that

22:20.080 --> 22:25.520
or no more questions thank you again thank you

