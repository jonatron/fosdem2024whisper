WEBVTT

00:00.000 --> 00:06.600
I'm still remember their crest number.

00:06.600 --> 00:10.840
So anyway, this is, are you Florian zero or Florian one?

00:10.840 --> 00:14.080
We don't, maybe we just play flow.

00:14.080 --> 00:15.600
Flow, you go with the flow.

00:15.600 --> 00:18.360
Whoever is responsible will react to it and that's it.

00:18.360 --> 00:19.960
Skill display, this is Florian.

00:19.960 --> 00:27.560
All right, so anyway, Florian's organization skill display is in a really interesting space,

00:27.560 --> 00:30.440
very adjacent to ours.

00:30.440 --> 00:38.360
Thinking about the problems that from two sides, how do people coming into open source

00:38.360 --> 00:44.440
or technical careers in general qualify themselves and prove themselves qualified to potential

00:44.440 --> 00:52.680
employers and how do employers find qualified people and understand, you know, what's the

00:52.680 --> 00:56.480
basis of truth for understanding someone's skill level when you get to know them.

00:56.480 --> 01:00.520
So we're going to talk about certification now.

01:00.520 --> 01:04.760
We are talking about competencies on a lower level than certification, but can lead to

01:04.760 --> 01:07.000
certification of course.

01:07.000 --> 01:09.360
Competencies, yes.

01:09.360 --> 01:14.840
Well, hello, hello everyone.

01:14.840 --> 01:20.560
I want to propose, since we are here for the open website alliance, a shared competence

01:20.560 --> 01:27.320
standard focusing to get people into open source projects during educational state or

01:27.320 --> 01:32.520
whenever they want to go into development.

01:32.520 --> 01:35.480
For this, open source is already doing a lot.

01:35.480 --> 01:38.720
I mean, it's open by nature.

01:38.720 --> 01:44.480
We have low or no entry cost at all to start working on a project, getting the software

01:44.480 --> 01:46.480
start yourself up.

01:46.480 --> 01:50.240
There's vast amounts of resources on the net.

01:50.240 --> 01:55.000
I mean, there's the documentation, there's blogs, there's videos, YouTube is full of

01:55.000 --> 01:56.400
stuff.

01:56.400 --> 02:01.400
You have trainings, courses that can teach you how to get started with type of three,

02:01.400 --> 02:07.840
Drupal, WordPress, Jomla, how to prepare for certification if you want to go in a professional

02:07.840 --> 02:09.360
field.

02:09.360 --> 02:15.160
And as we are here now, we have events, we have camps, we have death days, there's lots

02:15.200 --> 02:17.680
of activity in the community.

02:17.680 --> 02:19.120
There is a community to turn to.

02:19.120 --> 02:22.040
That's the whole thing of open source.

02:22.040 --> 02:23.040
So that's great.

02:23.040 --> 02:25.000
You can start wherever you want.

02:25.000 --> 02:27.480
You don't need much resources.

02:27.480 --> 02:31.200
My are we talking about a shared competence standard then?

02:31.200 --> 02:36.600
There's still challenges for learners and for teachers, for coaches, for trainers.

02:36.600 --> 02:40.000
I want to break them down in four years.

02:40.000 --> 02:44.240
There is a problem with comparability.

02:44.320 --> 02:48.120
If I do a training, if I attend a class, it's cool.

02:48.120 --> 02:52.520
I'll learn a bit about PHP development or whatever.

02:52.520 --> 02:54.080
But I don't have a big picture.

02:54.080 --> 02:55.400
How close am I?

02:55.400 --> 02:58.360
Am I now a useful Drupal Dev?

02:58.360 --> 02:59.480
Where do I stand?

02:59.480 --> 03:06.480
What else do I need to qualify for a certificate, for instance?

03:07.320 --> 03:12.720
The resources I need, the resources I use to teach, the resources I use to learn, are

03:12.800 --> 03:13.800
up to date.

03:13.800 --> 03:18.440
For which version of Drupal is this article or this lesson?

03:18.440 --> 03:22.360
So there's a problem of obsolescence because the projects are living.

03:22.360 --> 03:26.920
They don't stay the same forever.

03:26.920 --> 03:33.920
Since we talked about common basis for the composer dependencies, for instance, there's

03:36.200 --> 03:37.640
a lot of shared stuff.

03:37.640 --> 03:42.080
So this can lead to redundancy, especially if I switch between technologies.

03:42.080 --> 03:46.320
I've worked with WordPress, I've worked with Jumler.

03:46.320 --> 03:49.040
I want to delve into type of three.

03:49.040 --> 03:51.760
What can I carry over?

03:51.760 --> 03:54.160
What can I skip?

03:54.160 --> 03:58.960
What's the most effective way to build on that, what I already know, to learn to use

03:58.960 --> 04:01.600
in my new environment?

04:01.600 --> 04:05.960
And lastly, ambiguity.

04:05.960 --> 04:10.600
There's lots of resources which one use I.

04:10.640 --> 04:13.520
What do I use to build my learning resource on?

04:13.520 --> 04:18.080
What can I use to be most effective with my training and my course?

04:18.080 --> 04:25.080
So these are the challenges and they open up somewhat of a gap in teaching.

04:25.720 --> 04:32.720
When I create a training, for instance, I need to ask myself, both in a school or in

04:33.400 --> 04:37.760
a professional environment, what do I need to cover?

04:37.800 --> 04:38.800
Where do I start?

04:38.800 --> 04:41.000
Where do I end?

04:41.000 --> 04:45.880
How do I guarantee that I do not skip anything important?

04:45.880 --> 04:52.880
And is there any knowledge that I can build upon from other lessons that my students had

04:54.040 --> 04:58.600
from different experiences, from different projects?

04:58.600 --> 05:02.000
But also a gap when I go for certification.

05:02.000 --> 05:05.640
How do I prepare optimally for certification?

05:05.640 --> 05:07.640
When am I ready for certification?

05:07.640 --> 05:11.040
I've worked for two years now as a dev.

05:11.040 --> 05:16.040
Do I know everything I need to get my developer certificate?

05:16.040 --> 05:23.040
Or in my company, is there anybody I wouldn't have thought about who is quite good and

05:23.040 --> 05:27.240
could already be certified without me knowing?

05:27.240 --> 05:30.960
Or do we have any lacking deficiencies in the company?

05:30.960 --> 05:36.360
Some areas that are just not covered by anybody?

05:36.360 --> 05:43.360
So we could build competences, skills to map these areas and to get a picture on who can

05:43.360 --> 05:47.480
do what and what are they missing.

05:47.480 --> 05:48.480
And this is what we want to do.

05:48.480 --> 05:51.480
We want to structure competences.

06:00.840 --> 06:05.760
So before we think about a big standard or anything, we should start at the basics.

06:05.800 --> 06:07.800
What is a skill?

06:07.800 --> 06:10.240
How do I define that?

06:10.240 --> 06:17.240
In its most easiest way, I have something simple, an identifier, a name, a title, and

06:17.720 --> 06:22.280
perhaps a description that makes my skill identifiable.

06:22.280 --> 06:27.280
About CMS, I know what a content management system is.

06:28.280 --> 06:35.280
I can clearly devise what that skill is if we have a denomination.

06:35.280 --> 06:38.280
Then we need to make it tangible.

06:38.280 --> 06:42.880
And you can understand what that skill entails.

06:42.880 --> 06:43.880
What can I do?

06:43.880 --> 06:44.880
What do I need to learn?

06:44.880 --> 06:47.960
And you have learning goals.

06:47.960 --> 06:54.960
So we can define those, for instance, as a list, as a short summary.

06:55.440 --> 07:00.440
And it transparency, because the skill definition can be something arbitrary.

07:00.440 --> 07:03.960
It's worth nothing if I don't know who made that definition.

07:03.960 --> 07:10.560
It's that someone who has a capacity, who has an authority on that field and whose definition

07:10.560 --> 07:14.760
has a worth for me as a teacher, as a learner.

07:14.760 --> 07:19.480
With these three things combined, we have a package that I can read.

07:19.480 --> 07:24.480
I can understand within a few minutes to tell me, okay, it will about a year.

07:25.480 --> 07:28.480
It will about so and so complex to learn this.

07:28.480 --> 07:30.480
I will take some time.

07:30.480 --> 07:37.480
I can make an assumption on how much a challenge I have before me to learn this.

07:37.480 --> 07:41.480
That would be a single competence.

07:41.480 --> 07:43.480
Type 3 is not a single competence.

07:43.480 --> 07:47.480
I know type 3 is worthless as a skill in itself.

07:47.480 --> 07:49.480
I need to go more into detail.

07:50.000 --> 07:56.000
So I need to put more skills and I need to put them into a relationship.

07:56.000 --> 07:59.480
And this is where we will need prerequisites.

07:59.480 --> 08:04.480
If I know what a CMS is, fine, I understand what the underlying construct is.

08:04.480 --> 08:06.480
Now I can go deeper.

08:06.480 --> 08:11.480
Now I can look how content anything works in a CMS on a basic level.

08:13.480 --> 08:16.480
So I can set my new learning goals.

08:17.480 --> 08:21.480
I know the difference between simple text and with weak editors.

08:21.480 --> 08:23.480
I know what content editing is.

08:23.480 --> 08:30.480
So I have skills built by prerequisites into, well, trees.

08:30.480 --> 08:33.480
And we have seen those.

08:33.480 --> 08:37.480
If the principle works for the shape shifter to it in Diablo,

08:37.480 --> 08:39.480
why doesn't it work for Drupal Dev?

08:40.480 --> 08:42.480
The only much larger scale.

08:43.480 --> 08:49.480
This way we can build a structure for competences and map them.

08:49.480 --> 08:56.480
Get a sense for where does my current level of skill lie, where am I,

08:56.480 --> 09:01.480
what is ahead of me, what is already covered, what did I miss?

09:02.480 --> 09:09.480
So how could we benefit from standardization,

09:09.480 --> 09:12.480
from structuring competences like that?

09:14.480 --> 09:18.480
First we create a language, a common language for what I can do.

09:19.480 --> 09:23.480
I, from education, I get a grade in school.

09:23.480 --> 09:29.480
In my CV I have X years in that and that project or that and that technology.

09:30.480 --> 09:33.480
But I have, I don't have hard facts.

09:34.480 --> 09:40.480
If I compartmentalize skills, I have a, sorry, I have a definition,

09:40.480 --> 09:47.480
a hard skill that can, that says what I can do and by whose definition I can do that.

09:50.480 --> 09:54.480
Second, we reduce redundancy.

09:55.480 --> 09:59.480
If I have a clear plan on my learning path, where I am,

09:59.480 --> 10:06.480
I can skip those parts that I don't need, that I already learned from other projects,

10:06.480 --> 10:08.480
experiences that I've already picked up.

10:09.480 --> 10:13.480
If I know doctrine, if I've acted for the doctrine,

10:13.480 --> 10:18.480
I can, I can skip repeating that learning process.

10:18.480 --> 10:24.480
And I can do that, also by skills provided by the pre-needling.

10:26.480 --> 10:29.480
And I can do with the shared principles of CMS.

10:29.480 --> 10:34.480
We have, we can't do anything basics for media libraries and so on.

10:34.480 --> 10:37.480
Those are shared principles between all the systems.

10:37.480 --> 10:41.480
Here I can reduce redundancy with hard skill facts.

10:42.480 --> 10:48.480
I can also create a, create higher comparability.

10:49.480 --> 10:51.480
What does it mean?

10:52.480 --> 10:56.480
If I have a learning resource and it just, I can't just take it by its cover,

10:56.480 --> 10:59.480
I have to guess how far it will bring me.

11:00.480 --> 11:07.480
If I can compare learning resources and courses and trainings by the skills they cover,

11:08.480 --> 11:13.480
I can pick the one that closes my learning, that gets me closest to my learning goals as possible.

11:14.480 --> 11:19.480
I can compare how to learn most efficiently.

11:20.480 --> 11:23.480
I can also compare what to learn at all.

11:24.480 --> 11:28.480
I might have experience with technologies, I might have experience with projects,

11:28.480 --> 11:30.480
I might have goals for what to achieve.

11:31.480 --> 11:41.480
I can now evaluate, okay, what do I have to learn to get to a project that brings me to my goal?

11:42.480 --> 11:49.480
I can compare between projects based on the skills that I have, based on the skills that I need to learn.

11:52.480 --> 11:55.480
And we could promote shared values.

11:56.480 --> 12:00.480
Open source built on collaboration.

12:13.480 --> 12:17.480
With a shared standard across CMS projects, we can emphasize this.

12:17.480 --> 12:24.480
We can bring the collaborative thought, the open thought to people already at an educational level.

12:24.480 --> 12:28.480
Matthias said open source mentality isn't taught at schools.

12:29.480 --> 12:30.480
We could bring it to schools.

12:30.480 --> 12:36.480
If we have an open standard that brings people on board, that helps teachers build a curricular for open source projects,

12:37.480 --> 12:40.480
we can teach open source mentality on schools.

12:41.480 --> 12:53.480
And we can incentivize the use of open source projects as well, because, well, teachers who are getting help by cutting their preparation times for courses by a competency standard,

12:54.480 --> 12:59.480
are more incentivized to use those projects on schools beyond the monetary advantages.

13:00.480 --> 13:05.480
And thus, it would help us to establish for more in the educational sector.

13:08.480 --> 13:11.480
So, how could we start with something like that?

13:15.480 --> 13:22.480
There already is a very basic tree that was created as part of a Erasmus Plus program, founded by the EU,

13:23.480 --> 13:28.480
created in cooperation between Type 3 and School in Vienna, the H. Taylor-Renwick,

13:29.480 --> 13:35.480
that covers CMS basics for use in the web development classes.

13:37.480 --> 13:40.480
It serves as a gateway to seconded management systems.

13:42.480 --> 13:51.480
To endorse this, and put the hopefully grand new open websites, Alliance logos on that, and expand on it,

13:52.480 --> 14:02.480
we could create a shared common basic skill set for working with FOSS, open source projects, with FOSS CMS projects,

14:03.480 --> 14:09.480
as a gateway into deeper documentations, deeper skill definitions for each project.

14:10.480 --> 14:15.480
So, this could not only be a cooperation, it could be a gateway into each single project.

14:16.480 --> 14:30.480
Which in turn would allow teachers and trainers to have a single source, a single structure, to build their curriculum,

14:31.480 --> 14:33.480
under a shared brand.

14:35.480 --> 14:40.480
So, there's no more running around, searching for articles, searching for running material.

14:41.480 --> 14:47.480
I have a skill structure, I have ideally referenced material, documentations that are endorsed or official,

14:48.480 --> 14:51.480
and I could build my courses from there.

14:55.480 --> 14:59.480
That's much centralization, and that's not open source.

15:02.480 --> 15:05.480
We want to have this, of course, as an open approach.

15:06.480 --> 15:09.480
How do we do so?

15:10.480 --> 15:13.480
Skill definitions should be open data.

15:17.480 --> 15:22.480
Have the possibility to contribute, to define skills where you see them, they are missing,

15:23.480 --> 15:29.480
provide them freely to teachers, to trainers, to businesses, to make their own certification preparation,

15:30.480 --> 15:41.480
and put this into initiative for open teaching, for teaching open source projects in a way that is accessible for everyone.

15:42.480 --> 15:52.480
That also could help, especially in territories where we don't have a broad supply of trainings,

15:53.480 --> 15:56.480
as Types van der Waas mentioned.

15:57.480 --> 16:04.480
With such a standard, we could bring teaching material to areas where professional help is a scarcer,

16:05.480 --> 16:07.480
there's not as much infrastructure.

16:10.480 --> 16:14.480
And we can also integrate that with certification.

16:15.480 --> 16:20.480
We have existing certificates for all CMS projects to different degrees.

16:23.480 --> 16:28.480
For type of feed, there are already skill definitions for most certifications that are out there.

16:29.480 --> 16:35.480
Nothing stops us from picturing those certifications with skills,

16:36.480 --> 16:38.480
provide a structure for preparation for them,

16:41.480 --> 16:46.480
and in this way, aid enabling and preparation for certification attempts.

16:47.480 --> 16:51.480
But we could, of course, also create new certifications for the Alliance itself,

16:52.480 --> 16:56.480
for shared approaches, for shared principles, especially on the entry level,

16:57.480 --> 16:59.480
but common principles that need to be taught.

17:02.480 --> 17:06.480
So, looking back at the challenge from the beginning,

17:07.480 --> 17:10.480
where we had no low comparability,

17:11.480 --> 17:16.480
you now have a greater scheme, a greater skill tree,

17:17.480 --> 17:19.480
where I can plan and track my progress,

17:19.480 --> 17:22.480
where I compare resources and trainings that are offered.

17:25.480 --> 17:29.480
With Anansi, it can be replaced by efficiency.

17:30.480 --> 17:33.480
I can now pick my learning goals and my learning path to that goals,

17:34.480 --> 17:39.480
based on the skills that I still need, skipping those that I already have.

17:41.480 --> 17:48.480
Transparency can solve the problems with obsolence, with skills,

17:49.480 --> 17:50.480
that are living index.

17:51.480 --> 17:57.480
If a skill, if a particular technology, for instance, falls out of favor or is replaced,

17:58.480 --> 18:00.480
the skills can be laid dormant, and replaced by newer versions,

18:01.480 --> 18:03.480
or completely other skills in the tree,

18:04.480 --> 18:11.480
and I still have the control for my curricula to be on the current state of the art.

18:12.480 --> 18:13.480
And lastly, versatility.

18:14.480 --> 18:19.480
By linking my trainings and resources to skills,

18:20.480 --> 18:23.480
I can still have a variety of resources available,

18:24.480 --> 18:28.480
but they are now anchored in the tree.

18:29.480 --> 18:33.480
I can choose them according to my needs,

18:34.480 --> 18:36.480
according to my learning goal,

18:37.480 --> 18:41.480
on what brings me the most for my current situation.

18:43.480 --> 18:47.480
So, this is what we in short propose, structure,

18:48.480 --> 18:51.480
defined structured skills for the CMS projects,

18:52.480 --> 18:54.480
find common pools, shared principles,

18:55.480 --> 18:59.480
and build from there an ecosystem for using education.

19:00.480 --> 19:01.480
Thank you.

19:01.480 --> 19:15.480
So, I think that in the open web alliance room,

19:16.480 --> 19:22.480
when we're looking at new ways to collaborate together as projects,

19:23.480 --> 19:26.480
the idea of shared and common competencies makes a lot of sense,

19:26.480 --> 19:31.480
and the idea of sharing the structures so that I might build mine more quickly and easily.

19:32.480 --> 19:34.480
All of that makes a lot of sense.

19:35.480 --> 19:37.480
Since we have some time, is there any chance that you might,

19:38.480 --> 19:40.480
unless other people have other questions, of course,

19:41.480 --> 19:46.480
but I'd really be interested in seeing a skill tree,

19:47.480 --> 19:51.480
or part of the typo three, one so that we can get a sense of what these things look like and feel like,

19:52.480 --> 19:55.480
and how I might as a learner, or a potential...

19:56.480 --> 19:59.480
Maybe you could dig into that a bit.

20:00.480 --> 20:03.480
Obviously, super happy for other questions,

20:04.480 --> 20:06.480
and Matthias is about to have one.

20:07.480 --> 20:14.480
So, I'm connected to you.

20:15.480 --> 20:19.480
I end up with these things that are not questions,

20:20.480 --> 20:22.480
but that are statements of support and stuff like that,

20:22.480 --> 20:26.480
but I've been working with skill display for a while,

20:27.480 --> 20:30.480
and one thing is you have a lot of skills,

20:31.480 --> 20:35.480
and mapping them afterwards can take some time,

20:36.480 --> 20:39.480
but once you have them, you have quite an amazing resource,

20:40.480 --> 20:47.480
and having people start their process of learning as CMS by, as we'll see, checking boxes of,

20:47.480 --> 20:50.480
I've learned this, I've learned this, I've learned this.

20:51.480 --> 20:55.480
A colleague says I know it, and I might have done a certification as well,

20:56.480 --> 20:58.480
I have a university degree or something like that.

20:59.480 --> 21:04.480
What it does in a working environment as well, I find is really amazing,

21:05.480 --> 21:09.480
because I've been working at agencies, and you've got a new project,

21:10.480 --> 21:12.480
and we need this technology,

21:12.480 --> 21:17.480
or we've got a new person in the team,

21:18.480 --> 21:20.480
what does that person most need to learn?

21:21.480 --> 21:28.480
You can use it to map out who knows what, and peer people,

21:29.480 --> 21:33.480
so that the person who knows something can work on a project with somebody who needs to learn it,

21:34.480 --> 21:36.480
for example, and that is a real strength,

21:36.480 --> 21:44.480
and I think also in multi-project environments, multi-technology environments,

21:45.480 --> 21:55.480
you need that kind of basic thing that, well, does everybody who works with code know get to a certain level?

21:56.480 --> 21:58.480
Do they know our processes?

21:59.480 --> 22:05.480
And you can build both, take processes from, all CMSs need the same basic processes, for example,

22:06.480 --> 22:09.480
but within the company you might have your own processes as well that you can enter,

22:10.480 --> 22:13.480
and you can build skill level, I love that.

22:14.480 --> 22:16.480
It might even be on a project level, for instance, for customer trainings,

22:17.480 --> 22:23.480
you might have different, you might have common parts within your projects across multiple projects for multiple customers,

22:24.480 --> 22:29.480
but if you build with this mindset customer trainings, you can reapply those resources,

22:30.480 --> 22:33.480
and expand them where necessary, and have a common shared basis for them,

22:33.480 --> 22:35.480
and also save time there.

22:37.480 --> 22:38.480
Good.

22:39.480 --> 22:43.480
I also want to contribute from my direct experience,

22:44.480 --> 22:49.480
so from my direct experience with skill display, I'm also coming from the Type 3 Association,

22:50.480 --> 22:58.480
and skill display was our partner in two years in which we have implemented an international Type 3 mentorship program all over the world.

22:58.480 --> 23:06.480
So we've actually touched and supported developers, web developers from about six countries in Africa and two countries in Latin America.

23:07.480 --> 23:13.480
And what we did was we used skill display to develop custom curricula.

23:14.480 --> 23:22.480
So custom learning paths which was aiming for people which were really in the beginning of their way as web developers,

23:23.480 --> 23:25.480
not so much skills, not so much skills in PHP and so on.

23:25.480 --> 23:31.480
So we've built custom curriculas that was matching them and their situation,

23:32.480 --> 23:36.480
and our mentors were using it step by step to check the acquired knowledge.

23:37.480 --> 23:48.480
It was very effective and showed also that you can actually customize the skill display path of learning on any way that will fit your purpose.

23:49.480 --> 23:50.480
Okay, thank you.

23:51.480 --> 23:54.480
Any questions somewhere else?

23:58.480 --> 23:59.480
I really want to demo.

24:00.480 --> 24:01.480
Ah, demo.

24:01.480 --> 24:02.480
Hey, yeah.

24:03.480 --> 24:04.480
Yeah.

24:05.480 --> 24:08.480
We have here as a demo a very, very simple skill tree.

24:09.480 --> 24:12.480
Again, we are talking about basic principles here.

24:13.480 --> 24:19.480
The idea was that we have a center core about a CMS.

24:20.480 --> 24:27.480
The root skill in this case, and from there branching the core principles for working with CMS.

24:28.480 --> 24:29.480
So I have the skill about a CMS.

24:30.480 --> 24:31.480
I know what a CMS is.

24:32.480 --> 24:41.480
I can define its ground functions, and that serves as a prerequisite for understanding what extensions and plugins are within the CMS.

24:42.480 --> 24:50.480
Because I need to know what the core functionality is so that I can deduct, okay, and then there's extensions that provide additional functionality.

24:51.480 --> 24:56.480
They are isolated and can be, I'm sorry, can be edited to projects as needed.

24:57.480 --> 24:59.480
Likewise, user management.

25:00.480 --> 25:03.480
This is a more in-deep function of a CMS.

25:04.480 --> 25:05.480
Again, in every CMS.

25:06.480 --> 25:11.480
So before I can go about user management, I need to understand what a CMS is.

25:12.480 --> 25:14.480
That is the core thought of a skill tree.

25:15.480 --> 25:17.480
That of course can grow and grow and grow.

25:18.480 --> 25:22.480
I think the type of three developer skill tree at this moment has about 130 skills.

25:23.480 --> 25:27.480
So we are going to, from Diablo 2 to Path of Exile here.

25:28.480 --> 25:36.480
But again, it is manageable, and I will rarely look at the whole tree, but only on the scope for my current learning needs.

25:37.480 --> 25:41.480
Because if I make a course, I don't need to focus on the whole tree.

25:42.480 --> 25:45.480
I can make a course about community working with CMS.

25:46.480 --> 25:47.480
So what do I need?

25:48.480 --> 25:49.480
I need to understand what a CMS is.

25:50.480 --> 25:51.480
I need to understand user management.

25:52.480 --> 25:53.480
And perhaps I should understand content editing.

25:54.480 --> 26:01.480
And these three skills now make my learning unit that I can dynamically create for my single purpose.

26:02.480 --> 26:05.480
For training someone for a community page.

26:06.480 --> 26:09.480
That is the strength of the tree structure, in essence.

26:10.480 --> 26:13.480
So I hope that somehow, first.

26:17.480 --> 26:18.480
Yeah.

26:18.480 --> 26:33.480
Does type of three having that skill tree in place, does that provide a template for Joomla or Drupal or WordPress to come in and basically fill in the blanks of their own tree?

26:34.480 --> 26:35.480
Of course.

26:36.480 --> 26:43.480
They can build on the common similarities, because, as for instance, about a CMS, basic skills are common.

26:43.480 --> 26:50.480
So why not go deeper into user management for the general principle, go deeper into Drupal user management?

26:51.480 --> 26:52.480
How does Drupal user management work?

26:53.480 --> 26:56.480
And from their branch of how does permissions work and so on and so on.

26:57.480 --> 27:00.480
So those need to be singular for a single system.

27:01.480 --> 27:02.480
They can intact with each other.

27:03.480 --> 27:04.480
I can compare, for instance.

27:05.480 --> 27:12.480
I can compare multilingual skills and requirements to create a multilingual page in each system.

27:13.480 --> 27:21.480
And I can see as a learner to say, okay, well, which of the systems has been covered better and which of those is easier for me to learn.

27:22.480 --> 27:34.480
And vice versa as a teacher, which is the best system for me to teach multilingual web development for my students from the scope of skills that will be required to actually make use of this.

27:35.480 --> 27:37.480
So yes, this can intertwine between multiple systems.

27:37.480 --> 27:45.480
Also with integration, booking platforms or commerce, commerce suites, you can integrate those as well.

27:54.480 --> 27:55.480
Okay, then.

27:56.480 --> 27:57.480
Thank you.

28:07.480 --> 28:08.480
Thank you.

