WEBVTT

00:00.000 --> 00:11.680
Well, as Alexander was mentioning, this is kind of a continuation of the talk I had before.

00:11.680 --> 00:15.280
The previous one was about pass keys.

00:15.280 --> 00:20.320
This time it's not only about pass keys but about other passwordless authentication mechanisms.

00:20.320 --> 00:24.920
So now I have more time so I will present myself correctly.

00:24.920 --> 00:26.080
So my name is Sikar.

00:26.080 --> 00:28.000
I'm a software engineer at Red Hat.

00:28.000 --> 00:35.520
I work in the identity management world, more specifically for the SSSD, Shadow and Linux PAM projects.

00:35.520 --> 00:37.840
I'm the upstream maintainer for Shadow.

00:37.840 --> 00:44.520
So if you want to contribute there, we are welcoming new patches and fixes.

00:44.520 --> 00:50.680
In the past, I also worked as a software engineer but in the automotive sector first

00:50.680 --> 01:00.160
and then in the 3D printing world for HP doing their industrial 3D printers.

01:00.160 --> 01:08.280
And something that I didn't mention here is that I like swimming so if you are a swimmer, we are in the same team.

01:08.280 --> 01:14.160
So regarding the agenda, I will have a little introduction about passwordless authentication

01:14.160 --> 01:18.600
and then I will deep dive into the actual status of the pass key.

01:18.600 --> 01:25.040
Smart Car are external entity provider authentication mechanisms in the graphical user interface.

01:25.040 --> 01:31.160
I will also provide some, well, something, the vision that we have right now,

01:31.160 --> 01:35.040
including some mock-ups and even a demo.

01:35.040 --> 01:38.600
And finally, I will give up a conclusion.

01:38.600 --> 01:41.840
So let's start with passwordless authentication.

01:41.840 --> 01:43.240
So what is passwordless?

01:43.320 --> 01:46.200
It's a way to authenticate a user without using a password.

01:46.200 --> 01:49.240
Well, that's kind of a common ground.

01:49.240 --> 01:55.160
It usually involves multi-factor authentication and also single sign-on.

01:55.160 --> 02:02.320
And on top of that, it strengthens the security by, well, you are using a public key instead of a password.

02:02.320 --> 02:04.480
You are not reusing it.

02:04.480 --> 02:13.760
And you are not vulnerable to a data breach because whatever the attacker takes from the server

02:13.760 --> 02:16.360
where you are storing this data, it's just a public key.

02:16.360 --> 02:18.560
They have no knowledge of anything else.

02:18.560 --> 02:24.240
And on top of that, it improves the user experience because, well, they don't have to remember so many passwords.

02:24.240 --> 02:30.360
They just go there and try to authenticate with passwords.

02:30.360 --> 02:36.160
So currently, the passwordless authentication mechanisms that we are providing in FreeAPA and SSSD

02:36.160 --> 02:40.040
are the PASCII, SMARCAR, and external identity providers.

02:40.040 --> 02:44.280
So for the PASCII, we are using FIDO2 in SMARCAR,

02:44.280 --> 02:50.640
this is one of our internal Spanish national identity numbers.

02:50.640 --> 02:55.640
And then we have OAuth2 for external entity providers.

02:55.640 --> 03:00.920
So now let's see what's the current status of PASCII in the graphical user interface.

03:00.920 --> 03:12.720
So first of all, you enter your username and you arrive to this screen where we can insert your PASCII, then what?

03:12.720 --> 03:14.520
I can't tell you. It's then press Enter.

03:14.520 --> 03:16.720
But it's because I know it.

03:16.720 --> 03:17.640
Nobody else would know.

03:17.640 --> 03:22.120
I mean, you can kind of guess, but you wouldn't then be sure.

03:22.120 --> 03:24.600
On top of that, that's a textbook.

03:24.640 --> 03:29.480
You are supposed to enter some data in a textbox, but we don't need any data there.

03:29.480 --> 03:33.080
So we are just informing you that you need to insert the PASCII.

03:33.080 --> 03:34.600
Nothing else.

03:34.600 --> 03:38.400
Second, if you press Enter there, you would arrive here.

03:38.400 --> 03:43.720
It's asking you for a pin, but it could be that you don't need a pin.

03:43.720 --> 03:47.040
You don't have an extra user verification.

03:47.040 --> 03:50.320
So why request for a pin when you don't need it?

03:50.400 --> 03:55.040
If you don't need it, just press Enter here and you would continue the process.

03:55.040 --> 03:58.080
But who knows it?

03:58.080 --> 04:01.840
And finally, you are requested to touch the PASCII.

04:01.840 --> 04:06.960
The LED is usually blinking, so you just touch it and you are authenticated.

04:06.960 --> 04:09.960
So our proposal.

04:09.960 --> 04:13.560
Two different things.

04:13.560 --> 04:19.800
So if you don't need a PASCII, sorry, a pin, you will be requested to insert the security key.

04:19.800 --> 04:24.480
You will insert it, insert it, press Enter, and then you are done.

04:24.480 --> 04:29.440
But if you are required to enter a pin, well, you have a textbook where you need to enter a pin.

04:29.440 --> 04:34.040
As you can see, it's kind of better understood what is suspected from the user.

04:34.040 --> 04:37.880
On top of that, I didn't mention it before.

04:37.880 --> 04:43.360
When you are doing PASCII authentication, you can do it either locally or remotely.

04:43.360 --> 04:47.960
If you are doing it remotely in the server, you will get a Kerberos ticket.

04:48.000 --> 04:50.920
But what happens if you are doing it locally?

04:50.920 --> 04:54.160
How do you know that you don't get the Kerberos ticket?

04:54.160 --> 04:56.920
Well, you need to inform the user somehow.

04:56.920 --> 05:02.400
And we are still trying to figure out how to inform the user that it will not get the Kerberos ticket.

05:02.400 --> 05:08.880
It will not be able to do the single sign-on and, well, to inform it.

05:08.880 --> 05:12.520
OK, next one, smart cards.

05:12.520 --> 05:15.400
So the state here is kind of better.

05:15.440 --> 05:19.160
You have the available users.

05:19.160 --> 05:21.840
You select a smart card, and then you come here.

05:21.840 --> 05:25.320
You are requested for the pin, and that's all.

05:25.320 --> 05:29.480
OK, this one was easy, but maybe not so easy.

05:29.480 --> 05:33.080
What if you have more than one certificate for the user?

05:33.080 --> 05:39.560
So you select the user, you come to the second screen, and we have the same problem as with PASCII.

05:39.560 --> 05:44.480
There's lots of tests here, and it doesn't fit in the same box.

05:44.520 --> 05:47.880
So maybe you know which one to choose.

05:47.880 --> 05:49.280
Maybe you don't.

05:49.280 --> 05:53.440
You come to the next screen, choose one, and you are requested for the pin.

05:53.440 --> 05:55.640
We also need to improve this.

05:55.640 --> 06:02.160
The user needs to know which certificates to select and why it's selecting this one.

06:02.160 --> 06:05.080
So currently, I don't have any proposal for this.

06:05.080 --> 06:06.400
We are still working on it.

06:06.400 --> 06:09.880
I will show you later on where we are proposing the OS mo-cups.

06:10.600 --> 06:12.600
OK.

06:12.600 --> 06:15.880
Last one, external identity providers.

06:15.880 --> 06:20.800
So I will show you the current state in the command line interface.

06:20.800 --> 06:25.600
So you try to log in with Sue, and it says authenticate with pin.

06:25.600 --> 06:30.600
It provides some pin at a web page, and then it requests you to press enter.

06:30.600 --> 06:35.800
So if you go to this web page in a browser and you input the code that is there,

06:35.800 --> 06:39.960
you press on continue, then you come to the next screen where you are requested to

06:39.960 --> 06:41.120
authorize this request.

06:41.120 --> 06:47.280
Because, well, maybe it's somebody else that is trying to be you, and it's not really you.

06:47.280 --> 06:52.400
So you authorize it, you press enter, and you are authenticated.

06:52.400 --> 06:53.400
Nice.

06:53.400 --> 06:56.520
And what about the graphical user interface?

06:56.520 --> 06:57.920
It's not possible.

06:57.920 --> 06:59.920
You cannot use it.

06:59.920 --> 07:02.920
And here comes the application.

07:03.920 --> 07:07.920
And here comes the first demo.

07:07.920 --> 07:09.920
Yeah.

07:09.920 --> 07:14.920
So I will input my username here.

07:20.920 --> 07:21.920
OK.

07:21.920 --> 07:22.920
You see.

07:22.920 --> 07:26.920
You have your username here, and then the login button.

07:26.920 --> 07:28.920
If you press it.

07:29.920 --> 07:35.920
You are shown a QR code, a URL, and the login code.

07:35.920 --> 07:40.920
So this QR code will redirect you to this web page.

07:40.920 --> 07:45.920
And on top of that, we haven't finished this yet, but we will provide also our embedded

07:45.920 --> 07:53.920
web browser alongside this, where you will be able to provide the login code and authorize

07:53.920 --> 07:54.920
the request.

07:55.920 --> 08:00.920
Thing is that, well, first of all, you are embedding a web browser inside the login screen,

08:00.920 --> 08:04.920
which is maybe not a good idea for security reasons.

08:04.920 --> 08:07.920
And then you also need to take into account that it's not easy.

08:07.920 --> 08:13.920
So we are still working on it, and it's, you know, a thing to do.

08:13.920 --> 08:20.920
So if I were to follow the workflow here, I enter the code.

08:24.920 --> 08:25.920
OK.

08:25.920 --> 08:31.920
I press and continue.

08:31.920 --> 08:37.920
Now I need to authorize the request.

08:37.920 --> 08:44.920
I'm requested for the PIN, for the password, sorry.

08:44.920 --> 08:45.920
OK.

08:45.920 --> 08:49.920
Now you are supposed to press on enter, and it will work.

08:49.920 --> 08:51.920
Well, I will tell you we have a bug here.

08:51.920 --> 08:52.920
A problem.

08:52.920 --> 08:56.920
I haven't been able to solve it before the presentation, so it will fail, and it will

08:56.920 --> 08:58.920
show you another screen.

08:58.920 --> 09:00.920
But in reality, that would be all.

09:00.920 --> 09:08.920
So you press done, and then you are authorized, and you are logged in inside the computer.

09:08.920 --> 09:10.920
So what more?

09:10.920 --> 09:11.920
OK.

09:11.920 --> 09:15.920
So we currently have several authentication mechanisms.

09:15.920 --> 09:19.920
But how do you select them in the graph?

09:20.920 --> 09:23.920
How do you select them in the graphical user interface?

09:23.920 --> 09:24.920
It's not possible.

09:24.920 --> 09:25.920
There's no way.

09:25.920 --> 09:29.920
So you are prompted for either the pass key or the smart card, and that's all.

09:29.920 --> 09:30.920
You cannot select it.

09:30.920 --> 09:32.920
No way.

09:32.920 --> 09:36.920
But we already have a proposal for that also.

09:36.920 --> 09:43.920
So I will come back again here.

09:43.920 --> 09:46.920
I will need, OK.

09:46.920 --> 09:52.920
You have the web login here, and you have this small key.

09:52.920 --> 09:56.920
And this user, apart from the web login, also has the password authentication option.

09:56.920 --> 10:04.920
So you can press it, and you are requested to enter the password.

10:04.920 --> 10:08.920
You can come back again, say, OK, I don't want the password.

10:08.920 --> 10:12.920
I want the web login.

10:12.920 --> 10:15.920
And it takes some time, but it comes back.

10:15.920 --> 10:18.920
On top of that, you are a user.

10:18.920 --> 10:23.920
You authenticate the first time with a given method, let's say pass keys.

10:23.920 --> 10:31.920
You log out, and the next time that you come back to the same login screen, it will ask you for the pass key, not some other method.

10:31.920 --> 10:41.920
It will remind that you try to authenticate using the pass key and that you succeeded so that the next time the graphical user interface will ask you for the same example.

10:41.920 --> 10:43.920
For exactly the same method.

10:43.920 --> 10:56.920
Of course, you can change, but so that you don't have to start changing the method every time because there's some priority that always tries to do the same authentication method.

10:56.920 --> 11:00.920
So in conclusion, we have here the software design.

11:00.920 --> 11:06.920
It's more or less that GDM prompts the user for the login prompt.

11:06.920 --> 11:12.920
The user will input the username and GDM will start upon conversation.

11:12.920 --> 11:30.920
So when SSSD has already resolved the username and obtained the available authentication methods and all the data related to them, it will generate a JSON message and send it back to the GDM.

11:30.920 --> 11:38.920
So GDM already has all the information for all the available methods and the prompts that it needs to provide.

11:38.920 --> 11:50.920
The user will provide the information and GDM will come back and will generate another JSON message informing SSSD which method to use and which data the user input.

11:50.920 --> 11:54.920
So if you want to know more about this topic, here you have a web page.

11:54.920 --> 11:58.920
This is the design that we are currently writing.

11:58.920 --> 12:07.920
It's still working progress, but for external IDPs, it's kind of more or less done, so we don't expect to change it much.

12:07.920 --> 12:13.920
As a wrap up, so these are the high level requirements.

12:13.920 --> 12:17.920
The user should be able to select the authentication mechanism.

12:17.920 --> 12:24.920
It also should be able to use the previously mentioned authentication mechanism to authenticate.

12:24.920 --> 12:34.920
On top of that, the previous attempt should be remembered so that the next time that the user comes, it's prompt for the same authentication mechanism.

12:34.920 --> 12:39.920
And finally, the user interface shouldn't get in the way, so it should be easy and simple.

12:39.920 --> 12:41.920
We don't need to start doing strange things.

12:41.920 --> 12:50.920
The user needs to feel comfortable and it should follow the same workflows that he's used to follow in other applications or in the web browser.

12:51.920 --> 12:55.920
So last slide, reference links.

12:55.920 --> 13:00.920
So the first link is the design mock-ups that the NOMI team has prepared.

13:00.920 --> 13:09.920
You have there almost everything except for the two or more smart card certificates.

13:09.920 --> 13:11.920
This is still working progress.

13:12.920 --> 13:20.920
On top of that, the second link is the link to the SSSD EDM interface that I mentioned previously, like two or three slides ago.

13:20.920 --> 13:23.920
And finally, you have a copper repository if you'd like to test it.

13:23.920 --> 13:37.920
We are building it for federal road height, so if you want to test it, well, I would wait one or two weeks more until we stabilize everything here, especially for external entity providers, but then you should be able to test it.

13:38.920 --> 13:43.920
So that's all. Thank you, and do you have any questions?

13:55.920 --> 14:03.920
Okay, so you are asking what happens if you are not connected to the Internet and, well, you try to authenticate.

14:04.920 --> 14:10.920
Well, if you try to do an external entity provider authentication, you will not be able to do it because you don't have to enter.

14:10.920 --> 14:12.920
Is there a way that I can connect to Wi-Fi?

14:12.920 --> 14:13.920
You can.

14:13.920 --> 14:14.920
Yes?

14:14.920 --> 14:16.920
You mean in the login interface?

14:16.920 --> 14:17.920
Yes, in the login interface.

14:17.920 --> 14:19.920
No, I don't think so.

14:19.920 --> 14:21.920
Uh-huh, no, yeah.

14:21.920 --> 14:23.920
Good idea, yeah.

14:23.920 --> 14:27.920
But maybe you can use another method that doesn't require Internet connection.

14:27.920 --> 14:31.920
Yes, but then what's the point of even having the Internet login?

14:31.920 --> 14:42.920
Like, if I need to remember my password and I have the ability to use a password which is less secure, then I just make the entire system even less secure by adding another way of logging in.

14:42.920 --> 14:43.920
Yeah, but.

14:43.920 --> 14:45.920
Well, not actually improving anything.

14:45.920 --> 14:47.920
Okay, so you want to know.

14:47.920 --> 14:48.920
I'm trying to criticize.

14:48.920 --> 14:49.920
Yeah, yeah, yeah, yeah.

14:49.920 --> 15:00.920
So I get your point here that, okay, you enabled the Web Login and you don't want to use another authentication method that is less secure just because you don't have Internet access there.

15:00.920 --> 15:08.920
Then I would recommend you to use pass keys or smart cards because usually the user is cached there in the.

15:08.920 --> 15:12.920
And is there like no network manager access in the login interface?

15:12.920 --> 15:13.920
No, I don't think so.

15:13.920 --> 15:16.920
Because that would make it like work.

15:16.920 --> 15:18.920
We can discuss it.

15:18.920 --> 15:20.920
Yeah, it's a good feedback.

15:21.920 --> 15:30.920
I mean, there are certain potential issues with network manager like network manager also has access, for example, to VPN configurations.

15:30.920 --> 15:35.920
So you would have to create a special interface for network manager that didn't expose secret information.

15:35.920 --> 15:36.920
Yeah.

15:36.920 --> 15:40.920
So this is actually a common problem that exists for quite some time.

15:40.920 --> 15:52.920
And I've been talking about this at FOSDM in 2016 already when the, how they call these in hotels they have portals.

15:52.920 --> 16:04.920
Yeah, yeah, before you connect to VPN, but you cannot connect to VPN before you go online and you need to be online to and then solve first this portal challenge.

16:04.920 --> 16:06.920
So it's still the same problem.

16:06.920 --> 16:10.920
You need to run browser effectively before.

16:10.920 --> 16:21.920
So running network manager with the access to you potentially user private information before authenticate and then identify the user is another problem.

16:21.920 --> 16:22.920
Yes.

16:22.920 --> 16:33.920
We are not looking at that problem specifically within the context of this one, but solving ability to run the browser before the login will help us to solve some problems.

16:33.920 --> 16:48.920
And I know that at least three major distributions are working on these set of problems, but it's question of prioritizing.

16:48.920 --> 16:51.920
Yeah, I think that it should be solvable to run the browser securely.

16:51.920 --> 16:53.920
Yeah, I think so.

16:53.920 --> 16:54.920
Yes.

16:54.920 --> 17:02.920
I mean, we have stuff to work in, but we'll take a while.

17:02.920 --> 17:03.920
Yeah.

17:03.920 --> 17:04.920
Right.

17:04.920 --> 17:08.920
Yeah, first thanks for working on this.

17:08.920 --> 17:13.920
Clearly, there's a lot of work to do.

17:13.920 --> 17:17.920
Have you done like accessibility review like on this?

17:17.920 --> 17:27.920
I mean for disabled people, especially and actually connected to that is, for example, I noticed that when you shown like the UI.

17:27.920 --> 17:32.920
It was a bit far off from what people expect when they go to a website.

17:32.920 --> 17:38.920
For example, like, for example, you shown like to select the factor notification factor was a small.

17:38.920 --> 17:42.920
And the bottom right with the key icon, right?

17:42.920 --> 17:47.920
It's not really what people are used to like when they go to websites.

17:47.920 --> 17:55.920
So why is that essentially and indeed like how is that connected to an accessibility.

17:55.920 --> 18:01.920
Okay, so the question here is whether we took into account the access to these ability people.

18:01.920 --> 18:09.920
I'm more specifically when you are about to select the authentication mechanism that the icon is kind of a small and it's on the right side.

18:09.920 --> 18:22.920
So I know there's been some people from the UX team working on this and I'm quite sure that if you go to the first link there and you provide your feedback there, they will take it into account.

18:22.920 --> 18:28.920
Yeah, there's like going to no issues in the design team section.

18:28.920 --> 18:30.920
There are actual these mocaps.

18:30.920 --> 18:32.920
Yeah, so you can add your.

18:32.920 --> 18:37.920
Yeah, yeah, and you can follow it and you know provide further feedback if you don't like it.

18:37.920 --> 18:39.920
Yeah, we are still working on this.

18:39.920 --> 18:48.920
So everything is like working progress as much feedback as we can get the better because we'll provide a better product for our customers to use.

18:48.920 --> 18:50.920
I just want to make good that was more than a criticism.

18:50.920 --> 18:51.920
No, no, no.

18:51.920 --> 18:53.920
Search for rationale.

18:53.920 --> 18:56.920
I'm not part of the UX team.

18:56.920 --> 18:58.920
So I don't have the exact details.

18:58.920 --> 18:59.920
Thank you so much.

18:59.920 --> 19:00.920
Okay, sir.

19:00.920 --> 19:04.920
First of all, thank you very much for your work as well as the presentation.

19:04.920 --> 19:10.920
There was a picture of logging with security that looked like mocaps.

19:10.920 --> 19:17.920
Are they already available or no, no, I guess you mean this one?

19:17.920 --> 19:19.680
I guess you mean this one, right?

19:19.680 --> 19:23.320
Yeah, it's still a mock-up and we'll work on it.

19:23.320 --> 19:26.480
So we started with external entity providers

19:26.480 --> 19:29.080
and we'll continue with the other two methods.

19:29.080 --> 19:30.840
So I don't know when this will be available,

19:30.840 --> 19:32.600
but we are working on it.

19:32.600 --> 19:33.440
Philip.

19:33.440 --> 19:34.640
Thank you.

19:34.640 --> 19:35.680
Sorry, go ahead.

19:35.680 --> 19:40.280
So of course you're primarily implementing,

19:40.280 --> 19:43.040
integrating this first into a GDM course

19:43.040 --> 19:44.960
because that's what you're working on.

19:44.960 --> 19:48.080
But will you implement it in such a way

19:48.080 --> 19:52.200
or when it is finalized and solidified,

19:52.200 --> 19:54.920
can people who have different display managers

19:54.920 --> 19:57.600
or even implement it all be able to implement that?

19:57.600 --> 20:00.120
Because otherwise we'll be forced to either use GDM

20:00.120 --> 20:01.680
or maybe SDDM.

20:01.680 --> 20:02.400
OK.

20:02.400 --> 20:08.000
So the question was whether other login providers,

20:08.000 --> 20:10.760
like I guess KDE or some other one.

20:10.760 --> 20:12.000
Like GDM maybe.

20:12.000 --> 20:15.440
Yeah, if they will be able to provide this authentication

20:15.440 --> 20:18.640
mechanism, the answer is yes.

20:18.640 --> 20:20.400
They just need to follow this design.

20:20.400 --> 20:23.760
So the PAM conversation is part of the LIPPAN,

20:23.760 --> 20:26.400
which is kind of a standard nowadays.

20:26.400 --> 20:32.000
And the JSON message, it's defined here in this design page.

20:32.000 --> 20:38.400
So the graphical interface just needs to follow this

20:38.400 --> 20:41.440
to be able to implement it.

20:41.480 --> 20:43.080
It's not implemented, but if somebody

20:43.080 --> 20:45.320
wants to already start implementing it,

20:45.320 --> 20:46.040
we are fine with it.

20:46.040 --> 20:47.320
I mean, we don't have any problem.

20:47.320 --> 20:50.640
We are providing Nomi because we are using that in Fedora.

20:50.640 --> 20:54.360
But anybody else can come here and implement their part.

20:54.360 --> 20:57.680
So they're going to have that tight level of integration

20:57.680 --> 20:58.640
where you need to have it?

20:58.640 --> 21:00.280
No, no, no, no, no, not at all.

21:00.280 --> 21:02.960
We just need a PAM conversation there happening

21:02.960 --> 21:04.760
and to follow this diagram.

21:04.760 --> 21:05.240
That's all.

21:05.240 --> 21:06.240
OK.

21:06.240 --> 21:06.720
Thank you.

21:12.440 --> 21:13.440
Yeah.

21:13.440 --> 21:14.440
Go ahead.

21:14.440 --> 21:18.880
I wonder if, for example, I have a laptop set up

21:18.880 --> 21:22.040
with both password authentication and a second PAMD

21:22.040 --> 21:28.440
module for Trezor, which is like this USB thing.

21:28.440 --> 21:30.920
And I can click the button and I can log in.

21:30.920 --> 21:33.680
And that allows me to choose whether I type in my password

21:33.680 --> 21:36.280
or I press the button on the Trezor.

21:36.280 --> 21:40.160
And you have it so that you have two different flows

21:40.160 --> 21:42.040
for the authentication.

21:42.040 --> 21:43.920
Do you think it would be possible to set it up

21:43.920 --> 21:45.720
so that you could either type in your password

21:45.720 --> 21:50.160
or tap your smart card to have it win a single flow

21:50.160 --> 21:52.880
without the user selecting the flow?

21:52.880 --> 21:56.040
If you have a smart card reader of an NFC device

21:56.040 --> 22:00.080
on your laptop, then when the password prompt is showing,

22:00.080 --> 22:02.200
it would potentially be possible for the user

22:02.200 --> 22:04.760
to tap their smart card even though the password

22:04.760 --> 22:07.600
prompt is showing without the user having to click on it.

22:07.600 --> 22:10.160
I'm like, I can type my password or log in

22:10.160 --> 22:11.520
to have a think of it.

22:11.520 --> 22:12.020
Yeah.

22:12.020 --> 22:13.520
It's the same on your phone.

22:13.520 --> 22:16.840
You can make your symbol or you can just use your fingerprint

22:16.840 --> 22:17.340
scanner.

22:17.340 --> 22:20.320
You don't need to choose what you want.

22:20.320 --> 22:25.600
This is a bit more complicated than the case of GNOME and GDM

22:25.600 --> 22:29.680
because GDM uses different PAMD stack configuration

22:29.680 --> 22:33.400
for cases when it detects a smart card.

22:33.400 --> 22:36.080
And it uses GDM smart card.

22:36.080 --> 22:36.580
Yeah.

22:36.580 --> 22:40.420
And that one explicitly includes expectation

22:40.420 --> 22:43.100
that smart card is engaged.

22:43.100 --> 22:48.180
So it will not use the one that uses just the password

22:48.180 --> 22:49.740
in that case.

22:49.740 --> 22:53.820
Your device, if it's supported by a separate PAMM module,

22:53.820 --> 22:54.420
yes.

22:54.420 --> 22:59.300
Then it will work in the stack of the normal password

22:59.300 --> 23:00.940
basis authentication.

23:00.940 --> 23:02.180
It will work with this one.

23:02.180 --> 23:05.180
This one will just be skipped completely

23:05.180 --> 23:07.460
because your module will handle it.

23:07.460 --> 23:09.060
That's how PAMM works.

23:09.060 --> 23:12.340
So the whole concept here, depending on PAMM,

23:12.340 --> 23:15.380
basically being used for everything.

23:15.380 --> 23:16.620
So time's up.

23:16.620 --> 23:18.820
Andreas, do you want to say something like that?

23:18.820 --> 23:19.320
Yeah.

23:19.320 --> 23:24.060
Do you plan to extend the PAMM conversion of how

23:24.060 --> 23:28.180
to talk to PAMM because that's still very limited?

23:28.180 --> 23:32.180
And one problem, for example, if you have multiple domains

23:32.180 --> 23:34.820
and have one to have the selection,

23:34.820 --> 23:38.620
that the user is able to select this domain,

23:38.620 --> 23:41.180
that's the problem to present.

23:41.180 --> 23:45.100
So you actually would need to extend the PAMM conversation

23:45.100 --> 23:48.100
actually to the first.

23:48.100 --> 23:52.260
So you can use this to start your life.

23:52.260 --> 23:54.260
We can use the same JSON format.

23:54.260 --> 23:56.260
It already allows you to do that.

23:56.260 --> 23:56.760
Yeah.

23:56.760 --> 23:59.880
Can I define a primary plausible which is part of PAMM

23:59.880 --> 24:01.880
that's not fully linked?

24:01.880 --> 24:03.880
And so they can go to that.

24:03.880 --> 24:10.880
So it's not a classic on multiple terms.

24:10.880 --> 24:12.040
OK, time's up.

24:12.040 --> 24:15.880
I think we can continue this discussion outside.

24:15.880 --> 24:16.380
Yeah.

24:16.380 --> 24:16.880
Yeah.

24:16.880 --> 24:17.380
Yeah.

24:17.380 --> 24:17.880
Yeah.

24:17.880 --> 24:18.380
Yeah.

24:18.380 --> 24:18.880
Yeah.

24:18.880 --> 24:19.380
Yeah.

24:19.380 --> 24:19.880
Yeah.

24:19.880 --> 24:20.380
Yeah.

24:20.380 --> 24:20.880
Yeah.

24:20.880 --> 24:21.380
Yeah.

24:21.380 --> 24:21.880
Yeah.

24:21.880 --> 24:22.380
Yeah.

24:22.380 --> 24:22.880
Yeah.

24:22.880 --> 24:23.380
Yeah.

24:23.380 --> 24:23.880
Yeah.

24:23.880 --> 24:24.380
Yeah.

24:24.380 --> 24:24.880
Yeah.

24:24.880 --> 24:25.380
Yeah.

24:25.380 --> 24:25.880
Yeah.

24:25.880 --> 24:26.380
Yeah.

