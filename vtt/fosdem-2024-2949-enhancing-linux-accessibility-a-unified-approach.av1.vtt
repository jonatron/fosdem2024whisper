WEBVTT

00:00.000 --> 00:15.000
Okay. Hello, everyone. I hope this room is not empty. It's hard to see from here. Okay.

00:15.000 --> 00:26.280
It seems like it's not. So do we have slides? Okay. So let's move to the table of contents.

00:26.280 --> 00:33.280
So good morning. Today we are going to talk about accessibility of Linux desktop environments.

00:33.280 --> 00:39.280
First, we will go through a little bit of theory. Unfortunately, it's needed, I believe,

00:39.280 --> 00:49.280
for the later part of the presentation. And then we will try to show you some live demos,

00:49.280 --> 00:54.280
kind of hands-on experience. And we will talk about what's the state of the accessibility,

00:54.280 --> 01:03.280
how we can improve it. And then in the end, there will be also something we tried to create

01:03.280 --> 01:10.280
to help developers improve the accessibility. So let's move to the introduction, please.

01:10.280 --> 01:18.280
So just a few words about us. My name is Wojciech Polaciek. I'm working at Red Hat in a security compliance team.

01:18.280 --> 01:31.280
I am blind. I'm a Linux user. I use mainly Arch Linux and Fedora. And I'm very slowly but steadily developing,

01:31.280 --> 01:41.280
trying to develop a special Linux distribution called Tboitux. It's aimed at blind and visually impaired users.

01:41.280 --> 01:50.280
Now I'm handing over to Lukasz. So, hi, everyone. I'm so glad to be here. My name is Lukasz, director.

01:50.280 --> 02:00.280
I'm also blind Red Hat, but working in the desktop team for a few years, but with Linux for 10 years.

02:00.280 --> 02:09.280
And I'm basically fixing accessibility issues whenever I find them. So mostly in GNOME upstream,

02:09.280 --> 02:19.280
or sometimes GNOME isn't enough, so we need to fix stuff in GTK and sometimes even lower.

02:19.280 --> 02:26.280
And let's continue with the presentation. So I'm handing the word back to Lukasz.

02:26.280 --> 02:34.280
Okay, thank you. So next slide, please. Very shortly, just to talk what is this accessibility actually about.

02:34.280 --> 02:45.280
To put it shortly, it's basically a property of a system which signifies that it can be used by a user with some kind of disability.

02:45.280 --> 02:53.280
But of course, this is a very large scope, so on this talk we will reduce the scope to computer systems and to blind users.

02:54.280 --> 03:06.280
So basically when I try to put it short, the accessible Linux desktop environment is such environment which can be effectively used by a blind user.

03:06.280 --> 03:15.280
That means that we can get the information from the environment and we can reasonably interact with the environment.

03:15.280 --> 03:22.280
We can get a work done, basically. Next slide, please.

03:22.280 --> 03:30.280
So why do we actually need to care about the accessibility? I will try to give you some reasons, hopefully.

03:30.280 --> 03:40.280
And mainly about Linux accessibility. So Linux is basically the only free of charge alternative to Windows and macOS desktop operating systems,

03:40.280 --> 03:57.280
which offers comparable level of accessibility. I think this is very important, especially in cases where, let's say, the funding might be low for the systems.

03:57.280 --> 04:05.280
Why actually blind users would like to use computers? That's also a question which would be answered.

04:05.280 --> 04:16.280
So basically computer for blind user is a gateway to a lot of information to internet. It's also a very efficient communication tool.

04:16.280 --> 04:26.280
It can be also very often used as a work tool. I hope we are quite good examples of that because we are basically developing on Linux every day.

04:26.280 --> 04:36.280
To move forward, I think that the accessibility is also important because I believe that diversity and inclusion in the open source ecosystem is important.

04:36.280 --> 04:44.280
And one more thing, I saw several stands which are dealing with the free open source on mobile devices.

04:44.280 --> 04:57.280
And as Linux can run on such some of these devices, I think this might be actually a future. So we might have alternative to Android and iOS in Linux.

04:57.280 --> 05:04.280
And I would like to see it being accessible. So let's move forward.

05:04.280 --> 05:16.280
On the state of current desktop accessibility in Linux distributions, I have good news and bad news. I will start with the bad news.

05:16.280 --> 05:28.280
Let's say that the initial hard law which is there for especially newbie Linux users is quite high.

05:28.280 --> 05:38.280
The reason is that most of users who are going to start using Linux are switching or previously using Mac OS or Windows.

05:38.280 --> 05:45.280
We've been running workshops in Czech Republic where we were basically trying to introduce Linux to users.

05:45.280 --> 05:51.280
And we very often encountered a situation when we started the desktop environment and everything was fine.

05:51.280 --> 06:06.280
And then we showed them that they were trying to use some elements of the environment like for example they were trying to find out what is the percentage of the battery in the laptop or what is the network they are connected to.

06:06.280 --> 06:16.280
And this was not accessible. They couldn't get this information and they were like so surprised because this is just no discussion about it in other operating systems. It's just there.

06:16.280 --> 06:31.280
This might be a bit problematic especially for new users. The good news is that when you sort these things out, you are actually doing pretty well compared to other desktop, to other operating systems.

06:31.280 --> 06:36.280
There is a lot of things you can do with Linux and it's still improving.

06:36.280 --> 06:52.280
So I think that the biggest hurdle is to get the things going and get the things set up correctly so that it doesn't introduce any additional learning curve or any additional obstacles for newbie users.

06:52.280 --> 07:02.280
Let's move forward. I think the next slide should be about some basic terminology. Just two terms so that we don't spend a lot of time here.

07:02.280 --> 07:13.280
First term is a screen reader. Screen reader is a piece of software which is essential for blind users of any operating system.

07:13.280 --> 07:19.280
And it's basically software which kind of creates a bridge between the graphical user interface and the user.

07:19.280 --> 07:28.280
So the screen reader gives feedback to user about what's going on on the screen. So what button for example is under focus.

07:28.280 --> 07:35.280
Focus means that basically by pressing space bar or enter you will interact with the control which is under focus.

07:36.280 --> 07:49.280
For example the screen reader tells you what's the current line in a text editor. It can read for example the alternative descriptions of images and various other stuff.

07:49.280 --> 08:12.280
But it also helps us interacting with the interface efficiently. So for example it can help us move around web pages by for example jumping over headings and it can for example display the list of links to us so that we can go through it very quickly and various other stuff.

08:12.280 --> 08:20.280
So this is screen reader and please do not confuse it with the speech synthesizer which is the second term and the last term on this slide.

08:20.280 --> 08:33.280
And this piece of software is also important because it's actually the mouthpiece of the screen reader. It's just a software which takes some text as an input and it produces speech as an output.

08:34.280 --> 08:42.280
And these two pieces of software are independent on each other basically. So that's just to set things straight.

08:42.280 --> 08:56.280
Next slide please. This is quite important and we will talk about it and we will show it in the following demos how to make these in a desktop environment accessible.

08:56.280 --> 09:12.280
So the first point is crucial. On the previous slide we talked about a screen reader and a speech synthesizer and together with some other software and configuration it's something we can call accessibility stack basically.

09:13.280 --> 09:22.280
If this is not present in distribution basically you can skip all the other points on this slide because it doesn't make any sense.

09:22.280 --> 09:33.280
You can have perfectly accessible desktop environment but if you don't have the screen reader present from the start basically there is like this is a showstopper.

09:34.280 --> 09:50.280
The second point is very related to the first one because you can have the screen reader present. You can have everything perfectly configured but when you don't know how to start it then like you are in trouble again.

09:51.280 --> 10:02.280
So this is usually accomplished through some standardized keyboard shortcut or something but there should be a way and there should be a documented way how to start it.

10:03.280 --> 10:19.280
Then there are like general or generic desktop interface elements which should be made accessible like icons, panels, as I mentioned on the previous slide.

10:20.280 --> 10:40.280
For example the icons in the panels these are often problematic. Then also the configuration facilities of the desktop environment these are also sometimes problematic and it provides quite bad user experience because as I said this is like standard.

10:41.280 --> 10:49.280
Then another point is about having reasonable keyboard shortcuts because keyboard is a primary input device used by blind users.

10:49.280 --> 11:03.280
So I think we should be able to like switch among applications, open the menus in some predictable way, in documented way, switch around virtual desktops and other stuff.

11:04.280 --> 11:11.280
Then one point which I mentioned separately is login screen because this is also quite often problematic.

11:11.280 --> 11:26.280
To have it fully accessible that means that after you enable the accessibility the screen reader should be started already on the login screen and the user should be able to use this screen to navigate it and to login.

11:26.280 --> 11:44.280
Then there is a documentation part because as each desktop environment is a little bit different we often or we encountered a situation where it looked like it's quite accessible but we actually didn't know how to use that.

11:45.280 --> 11:56.280
Then there are the apps provided by the desktop environment like these essential apps like clock, calendar, file manager which often go with the desktop environment.

11:56.280 --> 12:08.280
And last but not least are third party apps like they are mentioned here just mainly for the sake of completeness because I think it's a little bit out of scope but I would not be happy if we forgot about these apps.

12:09.280 --> 12:15.280
These apps I mean web browsers or word processors or whatever.

12:15.280 --> 12:17.280
So next slide please.

12:17.280 --> 12:27.280
I often get these kind of questions like so how about creating a custom distribution for blind users?

12:27.280 --> 12:41.280
Yeah that would be so awesome because you can configure it however we want and like if something does not work as expected like you know we just like we hack it around somewhere, we modify the configuration and it will be working so great.

12:41.280 --> 12:50.280
And I mean yeah like the idea is good and I believe that the thought behind it is like good positive.

12:50.280 --> 13:03.280
But I think this approach has several problems either like I might sound now weird because at the beginning I said that I'm creating my own windows distribution but I will explain it later.

13:03.280 --> 13:15.280
So basically yeah you can create your own windows distribution and during my 14 years with Linux I saw like three or four of them and each of them died in two years basically.

13:16.280 --> 13:36.280
Because there is quite significant bunch of people maintaining Linux distribution and these specialized news distros are usually maintained by one or two volunteers and that means that sooner or later they will run out of time or their nerves or something and because they have to keep with upstream and stuff like that.

13:37.280 --> 13:50.280
So this I think does not really work and then I think that rather than hacking around things which should work in the first place we should try to ensure that like they really work.

13:51.280 --> 14:13.280
To explain the thing with Wojtuk's I am basically creating the distribution based on Fedora with the hope that after I create for example I package some software or I create some configuration it might be in the end merged into some official Fedora repose.

14:13.280 --> 14:22.280
And so my vision is that in some years this distribution will not be needed because everything will be available in Fedora.

14:23.280 --> 14:42.280
So I was speaking for some time already so I think it's time to hand it over to Lukasz who will tell you something about our real examples and also stuff we prepared to make the process of.

14:43.280 --> 14:45.280
Creating accessible stuff environments easier.

14:48.280 --> 15:00.280
So unfortunately as Wojtuk already said the situation in the distribution landscape isn't ever happy and sunny and so on.

15:01.280 --> 15:05.280
And we didn't make up these things.

15:06.280 --> 15:25.280
So what we did we actually went through the most popular distribution so basically Fedora and it spins and then Wojtuk and it spins as well because we wanted to test more things and we tried to boot up their live images.

15:25.280 --> 15:34.280
And we looked around what happens and what we found one of three things actually happens.

15:35.280 --> 15:45.280
The most happy path was that everything was working and you could enable the screen reader using the shortcut and it actually talked.

15:45.280 --> 15:50.280
I'm not now talking about the accessibility of the environment itself.

15:51.280 --> 16:00.280
We have some issues basically everywhere but in comparison to the accessibility stack not being there it's a minor issue.

16:01.280 --> 16:06.280
The second group of distributions was quite interesting.

16:07.280 --> 16:14.280
There actually was the accessibility stack and everything but the accessibility shortcut wasn't working.

16:15.280 --> 16:19.280
So you pressed it and nothing happened and you didn't know why.

16:20.280 --> 16:43.280
Of course if you knew the next way you could turn the screen reader on in a different way but no new people know that and you don't want to describe them that they have to press shortcuts type of comment and press the return key and so on.

16:43.280 --> 16:48.280
Because they would say OK I will just stay where I am now.

16:49.280 --> 16:57.280
I will put up with all the marketing and stuff and we're not bothered with this system because it doesn't work.

16:58.280 --> 17:00.280
So we definitely don't want this situation either.

17:01.280 --> 17:09.280
But then there was the last group where there was no accessibility stack at the live image.

17:09.280 --> 17:13.280
So there was no screen reader no speech no nothing.

17:14.280 --> 17:19.280
So of course you couldn't even install this thing or do anything.

17:20.280 --> 17:31.280
And it's quite sad because as the video will show it's not so hard to make this thing available.

17:32.280 --> 17:40.280
Basically there was a package missing and everything else would be downloaded through dependencies.

17:41.280 --> 17:47.280
So I don't know it probably was only a mission on the part of the maintainers probably.

17:48.280 --> 17:50.280
So it should be a pretty easy fix.

17:51.280 --> 17:59.280
And of course there will be some size increase of the live image but it will not be something huge.

17:59.280 --> 18:03.280
So I don't think this will be relevant for them.

18:04.280 --> 18:05.280
Next slide please.

18:07.280 --> 18:15.280
So before we look at the demos I have to say something first.

18:16.280 --> 18:19.280
We of course don't use all the environments.

18:19.280 --> 18:37.280
So it may happen that we actually don't know how to use them correctly because as White has said the documentation on the accessibility part isn't always up to date or is a found double.

18:38.280 --> 18:39.280
So we could make a mistake.

18:40.280 --> 18:47.280
So if someone has some more information just say us them to us and we'll be grateful.

18:48.280 --> 19:03.280
And yeah we are using some names of keyboard keys and especially we have the super key which is usually mapped to the windows keys on most keyboards.

19:04.280 --> 19:09.280
And we managed to use both terms for the same key in the video.

19:09.280 --> 19:19.280
So no it's not anarchy but only a different name for one key in all the videos.

19:20.280 --> 19:28.280
And I think we are ready to show the first demonstration the happy one.

19:29.280 --> 19:30.280
So let's go.

19:30.280 --> 19:31.280
Of course.

19:32.280 --> 19:42.280
Oh yeah before we go we had some limitations in the presentation system so we will have to play the audio of the video through a speaker.

19:43.280 --> 19:58.280
So the experience may not be in the recording and probably may not be either either here but we will try and you can always watch the videos at home if you really want.

19:59.280 --> 20:01.280
And that's everything.

20:02.280 --> 20:04.280
And let's go for the first one.

20:11.280 --> 20:14.280
This video will show the work.

20:15.280 --> 20:17.280
And the show is done.

20:18.280 --> 20:20.280
The reference name is the number.

20:20.280 --> 20:31.280
And if the number is played after the old system boots up you have to just press the keyboard and it's shown in the monitor specifically.

20:32.280 --> 20:35.280
Out of the super plus S.

20:50.280 --> 21:16.280
And if you do it on the right moment because you of course don't know when the right moment is the speed starts and you can do basically everything you want.

21:20.280 --> 21:37.280
So what we actually saw we saw normal the home boot of course the boot sequence to what shortened on the video because it would be boring.

21:38.280 --> 21:57.280
And then we saw that on sometime after the machine started up the GNOME environment booted up but the visually impaired person wasn't aware of that because there was no start up sound or something like that.

21:57.280 --> 22:00.280
It would be quite handy to have something like this.

22:01.280 --> 22:13.280
But if the person was right and timed it correctly he could activate the screen reader by the accessibility shortcut and it actually started talking.

22:14.280 --> 22:22.280
So yeah that basically everything was working as best as it can in these times.

22:22.280 --> 22:27.280
And let's ask move to the second demonstration.

22:28.280 --> 22:39.280
We will show which will show a little bit in a certain state of things where we have all the components of the accessibility stack button.

22:40.280 --> 22:41.280
Not the accessibility shortcut.

22:42.280 --> 22:44.280
So let's play the second video.

22:53.280 --> 23:14.280
This video will show another case of an accessibility distribution but when the accessibility shortcut doesn't work this will be demonstrated on a Fedora main 39 live image.

23:15.280 --> 23:20.280
If we try to access the shortcut here.

23:28.280 --> 23:30.280
We get nothing.

23:31.280 --> 23:35.280
So we have to use another way.

23:36.280 --> 23:39.280
So we press out plus F2.

23:40.280 --> 23:51.280
Get to the command screen and type orca and confirm this thing with the entry key.

23:51.280 --> 24:04.280
Screen reader on desktop icon view.

24:05.280 --> 24:10.280
And so far surprise it worked.

24:11.280 --> 24:13.280
So it was just the shortcut missing.

24:13.280 --> 24:18.280
For example, move around the desktop icon.

24:29.280 --> 24:41.280
So here we saw made a scope environment with missing accessibility shortcut and of course no startup sound as well.

24:41.280 --> 24:52.280
But if you used a very complicated way for newbies but a way nonetheless the screen reader start.

24:53.280 --> 25:01.280
As you may have heard there is a career issue in the speech output.

25:02.280 --> 25:11.280
The pitch shouldn't change so often but that's another probably some Fedora configuration issue or something like that.

25:12.280 --> 25:15.280
We didn't make it to the root cause of this thing.

25:16.280 --> 25:18.280
But yeah, the thing actually talks.

25:19.280 --> 25:28.280
But in the last video you will see what happens if you have no accessibility stack out at all.

25:29.280 --> 25:31.280
So let's go.

25:31.280 --> 25:46.280
This video will show the most difficult case.

25:47.280 --> 25:53.280
Namely the case when there is no accessibility technologies on the live image.

25:54.280 --> 26:03.280
This will be shown on the cinema Fedora spin, the 39 version to be precise.

26:03.280 --> 26:22.280
So the first time of all the Fedora spins we actually got some sound when the boot is done.

26:22.280 --> 26:25.280
So that's definitely nice of them.

26:26.280 --> 26:34.280
But if we try to press the accessibility shortcut out past Windows plus S.

26:44.280 --> 26:46.280
We actually get an error message.

26:46.280 --> 26:53.280
Saying that there's no ORCA at all.

26:54.280 --> 26:56.280
So what we will do?

26:57.280 --> 27:04.280
Well, we will open the ground terminal using the outfdue shortcut.

27:05.280 --> 27:08.280
I think it's name.

27:17.280 --> 27:28.280
And then typing the command to install ORCA all the way.

27:28.280 --> 27:55.280
Of course we know nothing about the commands progress and we have to basically hope that we did everything correctly.

27:58.280 --> 28:07.280
Maybe we can infer something from the disc activity or so but that's everything we got.

28:07.280 --> 28:27.280
Is it done or not?

28:28.280 --> 28:30.280
Well, who knows the fact not me.

28:31.280 --> 28:32.280
So let's try.

28:32.280 --> 28:36.280
Let's start with the accessibility shortcut again.

28:44.280 --> 28:47.280
And it does nothing.

28:48.280 --> 28:52.280
But it actually may mean actually nothing as well.

28:53.280 --> 28:57.280
So let us try to out pass F2 method.

29:02.280 --> 29:28.280
And as you can see, to install was a success.

29:28.280 --> 29:42.280
We got everything we need for speech including some voice, the screen reader, the middleman and everything.

29:43.280 --> 29:50.280
So yeah, we can actually try to use this system.

29:51.280 --> 29:53.280
At least we can like read the terminal.

29:53.280 --> 29:55.280
There we go.

29:57.280 --> 30:00.280
It's a blank tab left out.

30:01.280 --> 30:04.280
Window, like user app.

30:07.280 --> 30:14.280
Blank, speech, dash, dispatcher, dash, error, dot, one, one, dot, five.

30:15.280 --> 30:18.280
Left control, window text.

30:18.280 --> 30:23.280
But of course, that's not everything.

30:24.280 --> 30:37.280
To make this system fully accessible, we would need to fix all the cinema accessibility issues and that's the story for another time.

30:37.280 --> 30:58.280
So here we saw something which would completely block Linux newbie because he wouldn't have an idea that he can even open the terminal.

30:59.280 --> 31:02.280
He probably wouldn't even know what a terminal is.

31:02.280 --> 31:26.280
And if he knew that, he would have no idea about the easy way how to install Linux packages because in most cases he wouldn't know about packages, package managers and everything needed for this quite hard way how to install this.

31:26.280 --> 31:28.280
So this was needed to the live environment.

31:29.280 --> 31:40.280
So this basically was quite big luck because I actually know a lot of these commands and tricks.

31:41.280 --> 31:47.280
So I could use some of them and I managed to do the Orca install.

31:48.280 --> 31:54.280
But no, it's not something I would expect from a normal user at all.

31:54.280 --> 31:57.280
So this shouldn't definitely happen.

31:58.280 --> 32:01.280
It should never happen to say it concretely.

32:02.280 --> 32:06.280
So let's go to the next slide.

32:08.280 --> 32:19.280
But enough talking about live media because very often a developer comes and asks,

32:19.280 --> 32:30.280
yeah, I got here some issue report about accessibility, but I have no idea how to do anything about it.

32:31.280 --> 32:35.280
Wow, he may even ask what actually is.

32:36.280 --> 32:38.280
It happened to me as well sometimes.

32:40.280 --> 32:45.280
So we wanted to do something about it.

32:45.280 --> 32:55.280
So if we look at the next slide, we saw that we needed an answer for this issue.

32:56.280 --> 33:11.280
And the answer was a small project that had with maybe four or six people called Linux as developer accessibility guide.

33:11.280 --> 33:20.280
This thing should teach the developers some very important things.

33:21.280 --> 33:35.280
First, it should teach them what accessibility is and what impairments he can actually encounter in the development career.

33:35.280 --> 33:42.280
Because of course the world isn't full of visual impairments.

33:43.280 --> 33:50.280
We have other impairments as well and we want diversity and all the things.

33:51.280 --> 33:57.280
So we want to talk about as many as these impairments as possible.

33:58.280 --> 34:07.280
Then because the usage of computer for these people is kind of different.

34:08.280 --> 34:11.280
They are for example not using the most at all.

34:12.280 --> 34:16.280
We talk a little about how they use the computer.

34:16.280 --> 34:27.280
And then we talk about which accessibility features of the top environment they use, how they use them and why.

34:28.280 --> 34:42.280
Because if the developer tries to find something on their own, they may find accessibility resources.

34:42.280 --> 34:49.280
They are there, they are plenty, but they explain only evaporated stuff.

34:50.280 --> 35:03.280
Of course there are some terms which are common, but the underlying ways how to accomplish the tasks are quite different.

35:04.280 --> 35:14.280
And to add to the issues, you either find some high level descriptions of the accessibility issues which doesn't help you at all.

35:15.280 --> 35:19.280
Because you don't know how to make your application accessible.

35:20.280 --> 35:28.280
Or you find for example the GTK reference which lists every accessibility role in GTK.

35:28.280 --> 35:43.280
But if you don't know when to use which of them, what accessibility roles are, what accessibility states and so on, the documentation is less as well.

35:43.280 --> 35:59.280
So another part of the developer accessibility guide is part where we try to describe how to make most controls accessible like buttons, check boxes, sliders.

35:59.280 --> 36:13.280
And then when we came to it, things like text controls, but text controls are one of the most complicated things to make accessible.

36:14.280 --> 36:16.280
So we didn't write this chapter yet.

36:17.280 --> 36:34.280
Well, until a few days ago we would have to say that you either use the GTK widgets or you have nothing because the accessibility interfaces couldn't be used by the developers itself.

36:35.280 --> 36:47.280
And as far as the guide goes now, we have only stuff for GTK4 and sometimes some comparisons with GTK3.

36:48.280 --> 36:50.280
But we want of course more.

36:51.280 --> 36:55.280
We want descriptions for QT or we will see what else.

36:55.280 --> 37:15.280
But we wouldn't be so successful without thanking our two colleagues from Red Hat, namely Anna Horser and Eshwin Kumar because they help with writing these widget descriptions and so on.

37:16.280 --> 37:25.280
And on the next slide, you can see that the work is publicly accessible on GitLab, of course.

37:27.280 --> 37:32.280
You can see the exact URL there as well.

37:32.280 --> 37:45.280
So if you want and we would like to, if you want to help us, let's basically do it and we are looking forward for maintaining Q there.

37:46.280 --> 37:57.280
And for the end, I'm just, Vojta just to go forward and finish the thing.

37:58.280 --> 38:04.280
Okay. Hello, hello. Does it work? No. Yeah. Okay.

38:05.280 --> 38:10.280
So for the conclusion, I would like to just summarize a few of these points.

38:12.280 --> 38:21.280
As you have probably guessed, we are a small group of people based in Red Hat and we basically share these points which are on the slide.

38:21.280 --> 38:28.280
So we think that accessibility should be integral part of the development.

38:29.280 --> 38:36.280
It's ideal case it should be like a first class citizen which is considered from the beginning.

38:37.280 --> 38:50.280
The second point is that we prefer to cooperate with upstream rather than, as I said, writing our own hacks and creating our own distros because I believe when we for example find some problem in the development,

38:51.280 --> 38:59.280
in one particular distro environment and we fix it or the developers of the environment fix it, it will get fixed in every distro.

39:00.280 --> 39:02.280
So I think that's just how it should be done.

39:03.280 --> 39:05.280
We also know that it's not an easy process.

39:06.280 --> 39:08.280
It will have its problems.

39:09.280 --> 39:14.280
For example, the user base of blind and visually impaired users is currently low.

39:14.280 --> 39:18.280
It's basically a closed circle because you have not many users.

39:19.280 --> 39:21.280
That means there are not many issues reported to developers.

39:22.280 --> 39:27.280
That means developers don't fix it and if it's not working, you will not attract many blind users.

39:28.280 --> 39:29.280
It goes around.

39:30.280 --> 39:33.280
So that's something we will have to improve.

39:34.280 --> 39:49.280
And the last part is probably if you care about accessibility, if you'd like to make your application accessible, look at the developer guide or contribute to the guide or you can even contact us.

39:50.280 --> 39:52.280
I think the next slides lists our contacts.

39:53.280 --> 39:54.280
There is an email.

39:55.280 --> 39:56.280
There is a matrix ID.

39:57.280 --> 39:58.280
There is a GitHub handle.

39:59.280 --> 40:02.280
And so that's everything from our slides for today.

40:03.280 --> 40:08.280
Thank you for your attention and we would be happy to answer some of your questions if you have any.

40:28.280 --> 40:30.280
So any questions?

40:41.280 --> 40:42.280
Hello. Thank you very much.

40:43.280 --> 40:48.280
So one of the criticisms is a bit more technical in nature.

40:49.280 --> 40:55.280
One of the criticisms that is leveled against Wayland as an environment is it's very tricky to get working with accessibility software.

40:55.280 --> 41:00.280
Is that something that you've come across or is it a solved problem and that's just out of date?

41:01.280 --> 41:03.280
Look, this sounds like a question for you.

41:05.280 --> 41:06.280
We have mine.

41:06.280 --> 41:07.280
Ah, okay.

41:08.280 --> 41:09.280
I'll give you this one.

41:15.280 --> 41:24.280
Okay. So Wayland, while the basic accessibility interactions are the same because the accessibility interactions are the same because the accessibility interactions are the same because the accessibility interactions are the same because the accessibility interactions are the same.

41:25.280 --> 41:28.280
Another phase is a separate device API.

41:29.280 --> 41:48.280
But, yeah, wayland changes things a lot because the users sometimes want to, for example, actually use screen reader specific comments and the screen reader needs to get the keys and on Wayland it can't.

41:48.280 --> 41:55.280
can't or it can't now but there are of course some experiments to change things. There are

41:58.160 --> 42:05.160
issues with mouse related things because the Visual Impart wants to use sometimes in a

42:06.680 --> 42:13.200
very, very broken application needs to do a mouse click from the keyboard and avoid

42:13.200 --> 42:20.200
the stuff and it's done very, very differently. And of course you need to get the coordinates

42:22.720 --> 42:29.720
for the widget as well for these mouse tricks and this is also completely different. So

42:30.240 --> 42:37.240
yeah, violent changes things, a lot, a lot changes things but it doesn't change the

42:38.240 --> 42:45.240
overall accessibility landscape at all. So you can use a lot of experience from the

42:45.720 --> 42:52.720
X days but you have to do some things differently to say.

43:01.040 --> 43:05.800
So first of all thank you so much for the talk. Before today I never really stopped to think

43:05.960 --> 43:10.960
about what it means to use a computer if you don't see the screen.

43:10.960 --> 43:16.960
Thank you so much for the talk. For today I never really stopped to think about what it's

43:17.480 --> 43:22.480
about when you're using a computer without seeing the screen. So it was very informative

43:22.480 --> 43:29.480
for me. It seems that a lot of the work that needs to be done is about essentially translating

43:29.880 --> 43:35.080
a user interface, a graphical user interface for example, into speech so that somebody

43:35.080 --> 43:40.640
can hear about what is being displayed. I was wondering if it's any easier to translate

43:40.640 --> 43:46.840
a CLI interface instead. So basically it seems to me that a non-graphical interface would

43:46.840 --> 43:53.840
maybe be easier for a blind person to use. Can you share something about that?

43:53.840 --> 44:00.840
Hello, hello, I will answer. So there are pros and cons to this approach. It's true

44:05.560 --> 44:12.560
that when it's just a pure text interface it's of course easier because it's just

44:15.360 --> 44:22.360
text that are no animations, no things which are kind of custom but it's not a very good

44:24.240 --> 44:28.680
approach. The thing is that in the end, even though you have a CLI interface, you have

44:28.680 --> 44:34.800
to access it somehow. You have to view it somehow basically. And most users will in

44:34.800 --> 44:41.800
the end again use some desktop terminal emulator. And also then there is a thing that as long

44:42.640 --> 44:49.080
as it's like really CLI, that you write some input, you get some output, then you review

44:49.080 --> 44:56.080
the output, decide what to do and do something next. That's quite easy but when you get to

44:56.080 --> 45:03.080
the more interactive ways, for example, when you, I don't know, if I want to use the midnight

45:05.000 --> 45:12.000
command area I would say, then actually it starts to be very tricky and in this case

45:13.000 --> 45:20.000
it's probably easier to have a well-working and well-accessible graphical user interface

45:20.000 --> 45:27.000
application than to think about how to make a midnight commander emit the correct events

45:27.760 --> 45:33.960
and stuff like that so that it can be used from the command line. And one more thing

45:33.960 --> 45:40.080
I want to say that basically when talking about graphical user interface, the most obvious

45:40.160 --> 45:47.160
way is how to fix this is just to add, for example, correct labels to controls or assign

45:47.320 --> 45:53.800
correct accessibility roles to controls. It's not like rocket science usually. The problem

45:53.800 --> 46:00.800
is that it's not well known and not well tested and so then the experience is sometimes poor

46:01.320 --> 46:08.320
and we are in the close circle I talked about. No users, no accessibility, no attracting

46:08.960 --> 46:15.960
of users, no users. Hello, thank you for the speech. I'm just wondering how do you advocate

46:20.640 --> 46:26.560
for integrating accessibility in the web because I feel like as a UX designer I spend a lot

46:26.560 --> 46:31.840
of my time being like, hey, we need to make this accessible and then you have, well, we

46:31.840 --> 46:36.720
don't have a surplus of developers working on a project and it's like, hey, good job,

46:36.800 --> 46:42.120
but we need to make spend more time making this accessible and I don't often feel like

46:42.120 --> 46:49.120
I met with a wall like it functions. Why should we do this? Do you have any tips for preaching

46:49.160 --> 46:56.160
accessibility to developers? So basically advertising accessibility to developers,

46:56.200 --> 47:03.200
question, how to do that? Did I understand it correctly? Yeah. That's the question.

47:06.800 --> 47:13.800
It's tricky because I think the best example would be to find someone who really wants

47:15.200 --> 47:22.200
to use the application and like I think here with the current Linux user base of blind

47:24.440 --> 47:31.440
users it's probably mostly about stories because like again as I said before, no users, no

47:32.440 --> 47:39.440
feedback, no accessibility, no users. I currently do not have any tips in my head. Lucas, do

47:40.640 --> 47:47.640
you have anything? I don't. It's very tricky because while accessibility is usually not

47:48.040 --> 47:55.040
somewhere near the top of the priority list for the development, I don't have so many

47:55.040 --> 48:02.040
tips because it's the circle because you don't want to recommend to your friends something

48:05.200 --> 48:10.440
which you know that they will basically hate every day because they find some unlabeled

48:10.440 --> 48:17.440
buttons but if you don't fix these buttons you can't recommend it never so. It's tricky.

48:18.440 --> 48:25.440
Basically we tried going to FOSDEM to fix this. I don't know if it helps. And yeah,

48:29.240 --> 48:36.240
like then of course what might also help is that there are standards for accessibility

48:36.320 --> 48:43.320
as I said for the web but also standards, there are standards which are derived from

48:43.600 --> 48:50.600
these web standards and they are more focused on desktop and they are in US based standards

48:50.720 --> 48:57.720
there are also U based standards and so if there is a motivation that you would like

48:58.240 --> 49:05.240
to fulfill these standards then this is probably a way, might be but depends.

49:06.240 --> 49:13.240
Thank you for the talk. You said at some point that one stopper is having some accessibility

49:19.560 --> 49:26.560
related packages missing from the distribution repository. I was wondering if there is some

49:26.560 --> 49:33.560
kind of list of usual accessibility packages that one would like to see in repository that

49:33.960 --> 49:39.720
we as package maintainer could verify that we actually package those things in our distribution

49:39.720 --> 49:44.720
repository somewhere. So do you know if such list exists somewhere?

49:44.720 --> 49:51.720
So I can answer that. Two answers. First answer is that I'm sorry maybe there was a misunderstanding

49:52.960 --> 49:58.280
but the problem is that the packages are in the distribution repositories basically but

49:58.280 --> 50:05.280
they are not present on the default life image of the system. But in reality it means like

50:06.680 --> 50:12.000
they never existed for us because as Lukash showed you would need to install them manually

50:12.000 --> 50:19.000
and you cannot do that basically. So this is probably not the problem but if it is a

50:19.760 --> 50:26.760
problem do we have this section in the accessibility guide which lists the packages?

50:26.760 --> 50:33.760
They should definitely be there but I don't think they are actually there yet.

50:34.280 --> 50:41.280
This is a very good item for us. But it's really just a couple of packages basically.

50:43.960 --> 50:50.240
It's an Orca screen reader as Lukash showed. This is the only desktop screen reader for

50:50.240 --> 50:56.720
Linux. It's easy. And there might be some dependencies. It probably doesn't make sense

50:56.720 --> 51:01.440
to say it here but just let us know and we will definitely add it to the Linux accessibility

51:01.440 --> 51:05.600
guide. Thank you for this.

51:05.600 --> 51:11.840
Hi. I have one comment and then two questions quickly. So first one you've moved me. I want

51:11.840 --> 51:16.080
to now try to go home and install Linux from scratch and see how this feels because that's

51:16.080 --> 51:21.280
interesting to me and I don't think I was ever aware of how hard this could be. Second

51:21.280 --> 51:25.920
are you the first question I guess I should say is are you involved are you aware of any

51:25.920 --> 51:31.680
work or connection to commercial interests? Have you worked with Bob Davis for example

51:31.680 --> 51:36.920
at Red Hat or like Rail Workstation to like kind of see if there's I ask is like I think

51:36.920 --> 51:40.600
the commercial driver could like drive more investment. So that's the first question.

51:40.600 --> 51:45.360
Second one and feel free to kick me if this is dumb but is there any work going on with

51:45.360 --> 51:50.160
large language models to like prompt and like answer instead of using labeling so that like

51:50.160 --> 51:53.720
if you put your mouse over something it would just say what does this see and then the large

51:53.720 --> 51:57.400
language model would tell you from scratch like if that's a dumb question please kick

51:57.400 --> 51:58.880
me but I'm curious.

51:58.880 --> 52:04.640
Can you just repeat the second question if there is a way how to like using a large language

52:04.640 --> 52:09.360
model and LLM to ask what it sees you know and describe it.

52:09.920 --> 52:16.520
Okay this is interesting I never thought about it. So first question yes we are in touch.

52:16.520 --> 52:22.320
We are in touch with Bob and we are this is one of the way we also try to improve the

52:22.320 --> 52:31.240
accessibility basically. Yeah so we try to find the cause or a case for Rail Workstation

52:31.240 --> 52:38.920
but as Rail is derived from Fedora we try to fix it basically upstream and then then

52:38.960 --> 52:45.440
take it from Fedora to Rail so that we can leverage this accessibility because I believe

52:45.440 --> 52:50.600
it can help us. And the second question this is actually interesting I never thought about

52:50.600 --> 52:59.080
that using language models but again I feel that it looks like an interesting idea but

52:59.080 --> 53:02.040
I think that in the end it's again just a hack.

53:02.040 --> 53:13.800
It's like we do not invent anything new here yeah we creating the accessibility accessible

53:13.800 --> 53:19.720
user interface was is possible for a very very long time and it doesn't take much effort

53:19.720 --> 53:28.960
it's just that no one is focusing on that. So I think this could be used but in some

53:28.960 --> 53:31.240
very rare and custom cases I would say.

53:31.240 --> 53:38.920
One more last question. Okay we are out of time.

53:38.920 --> 53:49.720
Yes for me I have a multi-factorial disability in one sense and the most painful for me is

53:49.720 --> 53:57.920
the activating power sitting of some function reducing the inserted the first one historical

53:57.920 --> 54:04.800
so the key insert key I want this activate this and the other one are the moving the screen

54:04.800 --> 54:11.200
horizontally vertically it's power sitting is how awful this kind of thing also reducing

54:11.200 --> 54:14.400
the screen to one line and something like that.

54:14.400 --> 54:22.720
Something I don't like it and I don't need it so for me it was very accessible more

54:22.720 --> 54:30.520
accessible without this kind of thing when I work on my computer.

54:30.520 --> 54:37.480
Okay I'm sorry was it like a question or was it more like a comment?

54:37.480 --> 54:42.480
It's not heard very well here.

54:42.480 --> 54:47.200
Was it more like a question or was it more like a comment?

54:47.200 --> 54:56.600
The question is not clear so it was about some functions to disable so what is for me

54:56.600 --> 55:09.720
it is there are problems of some short keys with the mouse with also the pointer and so

55:09.720 --> 55:23.840
on the path and so when I see the screen reducing to reduced to one line or something else the

55:23.840 --> 55:31.160
screen moving horizontally vertically so I did this it prayers in some way so for me

55:31.160 --> 55:44.680
it's difficult to make my job with this kind of things so that's clear I suppose.

55:44.680 --> 55:49.120
I have also reduced vision but that's not not bling.

55:49.120 --> 55:56.160
Yeah I'm not sure if I know the answer to this probably not.

55:56.160 --> 56:02.080
We can probably meet later after the talk so it is up.

56:02.080 --> 56:07.720
So we are at time thank you again for the presentation.

56:07.720 --> 56:19.720
We can move any Q&A out into the hallway while we get our next speaker up onto the stage.

