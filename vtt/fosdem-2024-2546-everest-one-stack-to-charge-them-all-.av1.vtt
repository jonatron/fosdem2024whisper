WEBVTT

00:00.000 --> 00:11.400
Yeah, I'm just going to talk a really quick presentation about Everest.

00:11.400 --> 00:13.200
First a few words about myself.

00:13.200 --> 00:14.200
My name is Kai.

00:14.200 --> 00:21.320
I have a background in computer science and robotics and I've been working at Pyonix on

00:21.320 --> 00:27.800
this Everest project since early 2021.

00:27.800 --> 00:29.160
So what's Everest?

00:29.160 --> 00:35.280
It's a complete software stack for electric vehicle chargers which is running on embedded

00:35.280 --> 00:36.280
Linux.

00:36.280 --> 00:40.360
It's released under the Apache 2.0 license.

00:40.360 --> 00:46.200
And the aim is to support many different hardware platforms and you can also build your own.

00:46.200 --> 00:50.600
Yeah, it comes with a lot of different modules already.

00:50.600 --> 00:56.040
So, you know, board support drivers for AC chargers, for DC chargers.

00:56.040 --> 01:01.040
It's already prepared for or comes with high level communication support.

01:01.040 --> 01:10.040
So we have Slack implemented, the Deanspec 7121 and ISO 508-2 and dash 20.

01:10.040 --> 01:18.160
There's OCBP 201 and 1.6 support with drivers for power meters for DC power supplies and

01:18.160 --> 01:19.160
so on.

01:19.160 --> 01:25.120
Yeah, the project is primarily written in C++17.

01:25.120 --> 01:31.560
There's also language support for JavaScript and Python and relatively recently we also

01:31.560 --> 01:36.360
introduced support for writing your own modules in Rust.

01:36.360 --> 01:43.040
Yeah, this is a, hopefully you can read the slide but it doesn't really matter that much.

01:43.040 --> 01:47.280
I'm just going to talk about it a little bit like the timeline, how this project came to

01:47.280 --> 01:48.280
be.

01:48.280 --> 01:56.360
So the first ideas on, you know, how to improve the EV charging ecosystem began in like the

01:56.360 --> 01:58.360
end of 2020.

01:58.360 --> 02:03.720
The company Pyonix, which started this project, was then founded in early 2021.

02:03.720 --> 02:10.120
And about a year later, Everest was announced as the latest Linux Foundation energy project

02:10.120 --> 02:15.200
with the source code being published in January 2022.

02:15.200 --> 02:22.360
And we had ChargeBite joined the technical steering committee and they also started integrating

02:22.360 --> 02:27.720
it into their charge controllers.

02:27.720 --> 02:35.840
In the beginning of 2023, we had different manufacturers of charging controllers and suppliers

02:35.840 --> 02:42.440
of chips and stuff like that launched several dev kits that are Everest enabled.

02:42.760 --> 02:50.160
And in October, we held our first little conference with like 100 people, the aptly named Everest

02:50.160 --> 02:51.160
Summit.

02:51.160 --> 02:56.200
It's always a bit of a mountaineering pun going on with some of the names.

02:56.200 --> 03:03.680
Yeah, and pretty much the same time we had the US Joint Office of Energy and Transportation

03:03.680 --> 03:09.080
as well as Charger Manufacturer Quello join our technical steering committee.

03:09.080 --> 03:15.280
And yeah, that leaves us pretty much here at FOSDEM 2024 and lots of exciting things

03:15.280 --> 03:19.960
basically planned in 2024 as well.

03:19.960 --> 03:25.360
And yeah, this is a slide basically showing a lot of the like ecosystem around it already.

03:25.360 --> 03:30.480
Like we have involvement from like academia from like enthusiasts just wanting to work

03:30.480 --> 03:37.360
on this, but also like charging station manufacturers, component suppliers and like standardization

03:37.360 --> 03:40.680
bodies as well.

03:40.680 --> 03:50.440
Yeah, then looking at 2023, that was basically the year where the project kind of like took

03:50.440 --> 03:52.920
off I would say.

03:52.920 --> 03:59.800
I held a short talk at FOSDEM last year in February and you can see like the stream of

03:59.800 --> 04:04.680
contributions basically increasing over the whole year, which was pretty cool.

04:04.680 --> 04:09.880
Lots of like pull requests to review lots of things to merge and a lot of like community

04:09.880 --> 04:12.880
engagement, which brings its own challenges with it.

04:12.880 --> 04:16.880
So it was a bit of a fast growing community.

04:16.880 --> 04:24.120
Like yeah, in 2023, we basically only had like a mailing list and at some point it was

04:24.120 --> 04:27.000
basically unmanageable because of all the traffic.

04:27.000 --> 04:32.280
So we kind of thought about how we want to like tackle this, how to make this, you know,

04:32.280 --> 04:35.120
sustainable for the future.

04:35.120 --> 04:40.080
So we thought about like moving to like a more like chat based solution to the Sulep

04:40.080 --> 04:44.520
chat and you can kind of see like the amount of messages kind of going down on the mailing

04:44.520 --> 04:48.920
list at the same time as you know, our active users on the chat system got up.

04:48.920 --> 04:54.320
So I think this is on a good track and we'll just have to see how this works out over the

04:54.320 --> 04:58.520
next couple of months.

04:58.520 --> 05:05.040
And yeah, with this introduction of the chat system, we kind of also created a new organizational

05:05.040 --> 05:12.840
structure to basically better engage with the community and manage this, you know, growth.

05:12.840 --> 05:18.520
So we introduced different working groups.

05:18.520 --> 05:22.000
One of them is, you know, focus on car communication.

05:22.000 --> 05:25.960
So I think ISO 1511A, Tadeimo and things like that.

05:25.960 --> 05:30.080
Another working group that I'm very active in is the cloud communication, which is mainly

05:30.080 --> 05:33.880
focusing on OCPP at the moment.

05:33.880 --> 05:39.160
Then there's one kind of talking about everything that's related to like the core of the Everest

05:39.160 --> 05:44.200
project itself, like builds tools and like the foundation of it, which has a bit of overlap

05:44.200 --> 05:49.520
with the CI and testing working group as well.

05:49.520 --> 05:54.640
And for everything there is not really a place for this general and Q&A working group.

05:54.640 --> 06:00.760
And yeah, what I find really interesting is that it's kind of like a multimodal approach.

06:00.760 --> 06:06.680
So we try to have like chat streams where people can ask questions and engage in like

06:06.680 --> 06:13.200
a text-based way, but also have like regular meetings, like video calls where people can

06:13.200 --> 06:14.200
also ask questions.

06:14.200 --> 06:17.120
And this seems to work pretty well.

06:17.120 --> 06:24.480
Yeah, let's talk quickly about some milestones in 2023.

06:24.480 --> 06:28.920
We had like set out a goal for monthly source code releases.

06:28.920 --> 06:31.720
And I think we more or less hit that goal.

06:31.720 --> 06:36.240
We had like 10 monthly source code releases in a year.

06:36.240 --> 06:40.960
We also just released the January 2024 release.

06:40.960 --> 06:48.920
Based on those source code releases, we also provide a Yachto layer for Kirkstone.

06:48.920 --> 06:53.320
And we're also kind of thinking about maybe a new release strategy going forward.

06:53.320 --> 06:58.800
So maybe doing releases every two or three months and focusing more on like stability

06:58.800 --> 07:00.160
of these releases.

07:00.160 --> 07:06.640
But this is still a bit up for debate at the moment.

07:06.640 --> 07:13.560
Some of the technical milestones of 2023, we worked pretty hard on OCPP 201.

07:13.560 --> 07:18.840
So the core and advanced security profiles of that, they are pretty much almost done.

07:18.840 --> 07:26.040
And some parties are already going into certification based on that code.

07:26.040 --> 07:32.440
And in general, there was very active development on OCPP in the last year, as well as OCPP

07:32.440 --> 07:36.360
1.6, we also continuously improved that.

07:36.360 --> 07:42.640
And yeah, on the car side things, car communication side, we now have a pretty well-tested Dean's

07:42.640 --> 07:48.680
back as well as ISO 1511.8-2 implementation, including plug and charge.

07:48.680 --> 07:56.920
And we had the first successful charging sessions with ISO 1511.8-20DC.

07:56.920 --> 08:03.040
And yeah, to make all of this work pretty well, we tried to attend lots of different

08:03.040 --> 08:04.040
testing events.

08:04.040 --> 08:10.600
So we intended to OCA OCPP plug fists in Arnhem, as well as three different like Charin test

08:10.600 --> 08:18.320
intervals, which are focused on testing interoperability with ISO 1511.8.

08:18.320 --> 08:23.680
Some of you might remember this, like last year I talked about the open hardware that

08:23.680 --> 08:31.760
we also launched, like the end of 2022, early 2023, this year, Jaggen-Yeti board released

08:31.760 --> 08:37.680
under the CERN Open Hardware License Version 2.

08:37.680 --> 08:40.160
But I'm not going to go into any detail here.

08:40.160 --> 08:44.360
So if you're interested in that, there's like two talks I gave last year about this

08:44.360 --> 08:53.640
hardware and you can basically find everything that you need on the GitHub page as well.

08:53.640 --> 08:58.680
Just another cool thing, we built with this hardware, it's like a DIY DC charger.

08:58.680 --> 09:05.160
So we basically plugged this with a wiring diagram, very similar to this one that you

09:05.160 --> 09:13.600
can also find on GitHub together and use basically our AC controller hardware to drive a functioning

09:13.600 --> 09:17.440
DC charger.

09:17.440 --> 09:21.920
Another cool thing that we've been working on last year was, is this what we call the

09:21.920 --> 09:23.160
micro megawatt charger.

09:23.160 --> 09:27.920
This is a handheld DC charger powered by Everest.

09:27.920 --> 09:33.400
And what's pretty cool about this is it's a functioning handheld DC charger.

09:33.400 --> 09:41.480
So it started out with just an early prototype in early 2023, still in a box with cables

09:41.480 --> 09:50.240
and everything and basically ended up in something that fits inside of the box just for delivery.

09:50.240 --> 09:55.280
And what's cool about this is given that it's a functioning DC charger that is battery powered,

09:55.280 --> 10:00.680
you actually have voltage on the DC pins so you can plug it into a car and you go basically

10:00.680 --> 10:04.000
through the whole charging sequence with the car.

10:04.000 --> 10:09.080
Not just protocol testing but you can actually go to the power delivery and then most cars

10:09.080 --> 10:16.160
basically say, okay, I can't do much with one watt, I just stop.

10:16.160 --> 10:17.760
So why do we do this?

10:17.760 --> 10:22.880
It's pretty cool to just walk around on like these testables but also like on a normal parking

10:22.880 --> 10:27.640
lot, you know, with consent of the owners to just plug this into the car and generate

10:27.640 --> 10:32.000
log files and packet dumps and things like that.

10:32.000 --> 10:40.320
And we also try to publish these on GitHub after we recreated them.

10:40.320 --> 10:46.280
Then we worked a little bit on EV simulations so we got a small children's electric quad

10:46.280 --> 10:52.480
outfitted it with a CCS port, runs a hacked up Everest simulation on it, EV simulation

10:52.480 --> 10:53.560
on it.

10:53.560 --> 10:59.920
And I think it's one of the only children's electric quads that can charge on a commercial

10:59.920 --> 11:03.680
DC fast charger.

11:03.680 --> 11:09.600
And we have some more plans with that in 2024 so we want to have this EV simulation like

11:09.600 --> 11:19.200
natively in C++, include like an EV manager in there and basically extend it with ISO

11:19.200 --> 11:22.760
15118-20 support.

11:22.760 --> 11:28.560
And there's a little bit of work going on on Tademo as well in the moment.

11:28.560 --> 11:34.160
And yeah, this brings me to the roadmap for 2024 and like no particular order.

11:34.160 --> 11:42.600
Like I just mentioned, the native EV simulation, we want to complete our OCBP201 implementation

11:42.600 --> 11:48.920
and start integrating OCBP 2.1 once the spec has been released.

11:48.920 --> 11:54.880
And there's going to be a lot of work going on on ISO 15118-20 so we have a C++ based

11:54.880 --> 11:58.120
XC parser and a parser generator in the works.

11:58.120 --> 12:05.360
We want to also include plug and charge there work on the AC unidirectional as well as bidirectional

12:05.360 --> 12:08.280
power transfer.

12:08.280 --> 12:16.040
And there's also a first lecture demo prototype for the charger side in the works.

12:16.040 --> 12:21.640
And yeah, if this sounded interesting for you, yeah, here so you can get involved.

12:21.640 --> 12:25.680
Basically you can find documentation and how to get engaged with the project, you know,

12:25.680 --> 12:30.400
like the mailing list, the group chats and things like that on everest.github.io.

12:30.400 --> 12:34.880
If you just want to look at the code, it's on github.github.com.

12:34.880 --> 12:38.280
And you can also find the open hardware under those two links.

12:38.280 --> 12:43.120
And yeah, I'm looking forward to your engagement, maybe contributions and thank you very much.

12:46.040 --> 12:53.040
We have about three minutes if anyone has any questions.

12:53.040 --> 13:05.120
Yes, I have information about to see the first is recuperation of energy when you are going

13:05.120 --> 13:11.720
down and the street is going down is the first question also the deceleration motor

13:11.720 --> 13:15.520
deceleration with trucks also in the system.

13:15.520 --> 13:23.520
And the other question is about this hardware or software for bicycle with electric assistance.

13:23.520 --> 13:31.440
Okay, I think the first two is mostly like on the EV side of things like proper EV side

13:31.440 --> 13:32.440
of things.

13:32.440 --> 13:35.080
And I mean, we are mostly focused on EV charges.

13:35.080 --> 13:41.380
But for bicycles, like, I think there's some work going on in some standardization bodies

13:41.380 --> 13:49.620
at the moment to basically specify like charging for small bikes for small like electric assisted

13:49.620 --> 13:56.500
bikes as well as, yeah, how do you call these things like the little motorcycles that are

13:56.500 --> 14:04.860
electric for the scooters and stuff like that.

14:04.860 --> 14:05.860
Doesn't look like it.

14:05.860 --> 14:18.220
So how much has the open hardware helped with the project in terms of contributions or say

14:18.220 --> 14:24.700
vendor adoption?

14:24.700 --> 14:31.380
I think it's really hard to quantify because people can just look at the designs and basically

14:31.380 --> 14:32.500
build stuff with it.

14:32.500 --> 14:37.660
Like our company, we had some orders for like finished kits of these things and I think

14:37.660 --> 14:41.900
we sold quite a few of those.

14:41.900 --> 14:45.780
But yeah, I think it helped.

14:45.780 --> 14:49.900
But it's more like, you know, we see it as like a dev kit that people can just play around

14:49.900 --> 14:50.900
with.

14:50.900 --> 14:52.340
And it's really not that complicated.

14:52.340 --> 14:55.980
I mean, especially like it's an AC charger.

14:55.980 --> 15:00.220
So you need some relays, you need a way to drive these relays.

15:00.260 --> 15:05.980
It's like a power meter on there, but usually if you want to build something for yourself,

15:05.980 --> 15:07.860
you don't need that.

15:07.860 --> 15:13.060
And then the high level communication board, this needs like a modem, like a power line

15:13.060 --> 15:15.340
communication modem to talk with the car.

15:15.340 --> 15:18.220
But only if you want to do Ice with an 11-8.

15:18.220 --> 15:22.020
If you don't want to do this, you can just leave this out as well and build something

15:22.020 --> 15:24.900
really, really simple.

15:24.900 --> 15:31.500
But for starting to hack around with Everest and all of these more advanced things, I think

15:31.500 --> 15:34.060
it helped.

15:34.060 --> 15:35.980
And there's definitely some interest there.

15:35.980 --> 15:38.820
Thank you very much.

