WEBVTT

00:00.000 --> 00:11.840
Welcome everybody. We're about to start our next talk. My name is David. It's my pleasure

00:11.840 --> 00:18.240
to introduce Vadim Toshinsky-Schmelev who will be speaking on distributed virtual worlds,

00:18.240 --> 00:20.920
problems and solutions. Thank you.

00:21.880 --> 00:30.720
I don't see. Okay. All right. Welcome. Thank you for coming. So my name is Vadim. I'm from

00:30.720 --> 00:41.280
a non-profit organization called Overtv. We distribute, we develop virtual worlds. Kind of

00:41.280 --> 00:46.120
could call it the metaverse, but that's kind of a bit of a dirty word these days. Thanks to

00:46.120 --> 00:53.640
Facebook. So there we are. Yeah. So who am I? I'm a software developer. I'm the current chairman

00:53.640 --> 01:00.400
of Overtv, a non-profit which supports our work. And I'm one of the active developers of the system.

01:00.400 --> 01:09.720
All right. So first I expect that a lot of people won't be all that familiar with what we're talking

01:09.720 --> 01:15.480
about here. So I have to give a short introduction to what we're talking about. We're talking about

01:15.560 --> 01:22.520
systems like Second Life, Aviyar Chat. They're kind of a very, follow a very kind of similar pattern.

01:25.880 --> 01:32.600
Oh yeah. They follow kind of a very similar pattern in that, well, first thing you get is a login

01:32.600 --> 01:40.920
screen. So basically it's a kind of vault garden. If you can access that, well, you get to access

01:40.920 --> 01:46.840
all the goodies. But if you're ever kicked out of it, that's it for you and all your content and all

01:46.840 --> 01:52.600
your relationships and everything else that goes with it. Same issues happen with things like

01:54.360 --> 01:59.960
if they happen to go bankrupt. So for instance, it's kind of been rumoured that

02:00.920 --> 02:05.880
Aviyar Chat could have some possible financial problems at some point. Who knows?

02:06.840 --> 02:15.240
All right. So to give a bit of context about what we're talking about here, the first of all,

02:15.240 --> 02:20.760
I'm just going to give a short introduction of what these platforms provide to the normal user.

02:20.760 --> 02:26.840
All right. So we have here an open source client for Second Life. First thing is you get a login

02:26.840 --> 02:33.560
screen. You're not going anywhere without that. It's a multi-user world. This is kind of old

02:33.560 --> 02:40.200
fashioned. There are pretty places over there. But yeah, basically it's a 3D environment with no

02:40.200 --> 02:51.560
fixed purpose where you can create, socialize, build stuff. There's typically a set of worlds you

02:51.560 --> 02:59.080
can explore. On Second Life, this is actually pretty neat in that there's a contiguous simulation.

02:59.080 --> 03:05.480
You can actually cross from one world to the next just by walking around. So that creates a huge

03:05.480 --> 03:12.520
amount of stuff you can explore, which is larger in space than many cities. This actually costs a

03:12.520 --> 03:21.720
lot of money to maintain, which is kind of why they do things the way they do. On some other

03:21.720 --> 03:29.160
systems, you also have things like isolated environments that are completely just floating

03:29.160 --> 03:37.560
in the world. You have an inventory where you can keep your stuff that can be objects, avatars,

03:37.560 --> 03:43.720
sounds, textures, text documents, things like that. That's all typically kept server side.

03:44.680 --> 03:51.080
You have user accounts which provide you with a name, profile picture,

03:51.960 --> 03:55.720
membership into groups, which can grant you access to places, for instance.

03:59.080 --> 04:04.440
And most of those systems also have some sort of scripting language. In the case of Second Life,

04:04.440 --> 04:12.920
it's a proprietary one. Not a big fan of that. That allows you to do things. You can do guns that

04:13.480 --> 04:19.400
shoot things. You can implement games. You can do various kind of management functions, like

04:20.520 --> 04:31.000
deciding who gets to enter an area who does not. Yeah. Right. So what do we do? We are a virtual

04:31.000 --> 04:38.200
world in the style of this. We support Linux and Windows. We have a distributed architecture,

04:38.200 --> 04:45.800
which is very different from what the other systems implement. And we do scripting in JavaScript

04:45.800 --> 04:51.560
with V8, so very modern. And we are supported by Non-Profit, which I'm chairman of.

04:55.240 --> 05:03.000
So the issue with the previous ones is that Second Life is like 150 million business. I believe

05:03.080 --> 05:07.320
VRChat is like 100 million investment. We can't do that. We are a tiny project.

05:08.760 --> 05:17.080
We actually are a fork of high fidelity, which was a kind of commercial successor to Second Life,

05:17.080 --> 05:24.040
but that died, so we picked it up. So high fidelity heavily leaned into decentralization,

05:24.040 --> 05:31.960
and we keep on with that spirit. So how do we do it? We distribute server hosting. We distribute

05:31.960 --> 05:38.280
content hosting. We don't require logins anywhere. We script in V8. We have,

05:40.360 --> 05:45.160
we support VR, desktop VR, which is, I think, extremely common in open source.

05:46.440 --> 05:52.520
We don't have any kind of cryptocurrency sort of deal. That monetization is not what we do.

05:53.720 --> 06:00.120
There's no lock-in of any kind. So basically, in structure, our system is something like the

06:00.200 --> 06:10.600
World Wide Web. We do both a 3D web server and a 3D web client. So this is all kind of glued

06:10.600 --> 06:17.000
together with an absolute minimum of things that do have a slight centralizing effect,

06:17.000 --> 06:22.040
but are completely optional. Like, we do have an account server, but you don't have to use it.

06:22.040 --> 06:26.360
You can just use it anonymously. It's like a 3D web page. When you go to foster.org,

06:26.360 --> 06:33.800
you don't have to log in anywhere. All right. So how does this work? Servers run on an EVPS,

06:33.800 --> 06:38.920
or you can use NAT hold punching to just run it from your home laptop if you want to.

06:42.440 --> 06:48.040
So what is a good thing about this? Well, hosting is a troublesome for an organization. We don't

06:48.760 --> 06:54.520
have actually the resources to pay huge bills for Amazon. Also,

06:55.480 --> 07:00.600
this is legally troublesome in that in some areas, some kind of content may be

07:02.280 --> 07:07.400
trickier to host than others. We also can't lock you out of anything. And this is like a 3D web

07:07.400 --> 07:13.480
server. So if you set it up, you own it. It's yours. We can never prohibit anyone from connecting to

07:13.480 --> 07:20.040
it. And you can use any kind of resources you provide. It just downloads assets over HTTP.

07:20.760 --> 07:27.960
But what are the problems with this model? Well, our users have to seek a third party host. So

07:27.960 --> 07:34.360
basically, the first step anyone has to do to deal with this is to go to AWS or a line

07:34.360 --> 07:41.160
out or digital ocean and figure things out. Personal servers may just go down entirely.

07:42.280 --> 07:47.960
Setup is easy, but not completely trivial. And the world can't be coherent. By this,

07:48.520 --> 07:53.560
I mean that we can do like second life and just kind of a small, smoothly flow from one

07:53.560 --> 07:58.920
environment to another because there's no sort of, no any kind of central infrastructure that

07:58.920 --> 08:07.080
says, hey, this guy is to the left to this other guy. All right. How do we make this easier for

08:07.080 --> 08:16.200
our users? Pre-packaged packages, pre-made images from common hosts. We have a very

08:17.000 --> 08:21.800
friendly build script, which you can run on pretty much any language distribution and build it from

08:21.800 --> 08:28.280
source. This is also intended to make it easier to try experimental developments. You can build

08:28.280 --> 08:34.920
any branch or any pull request we have. We support hosting from home so that you don't

08:34.920 --> 08:44.280
actually have to deal with AWS. And yeah, one of the kind of potential future developments that

08:44.280 --> 08:49.320
we've been discussing is appearing in between servers to share different kinds of content.

08:49.320 --> 08:56.840
This would avoid having to reach out to anything else. So what do we mean by that? So the servers

08:56.840 --> 09:02.440
would establish links to each other and exchange things like sound streams, textures and messages.

09:02.440 --> 09:08.040
So in this way, we could have a chat system that doesn't actually depend on anything external.

09:08.120 --> 09:16.680
We've had discussions of connecting to matrix, for instance, or to have some sort of discord

09:16.680 --> 09:24.120
plugin. But yeah, that's not quite in the spirit. We have an internal chat system which works inside

09:24.120 --> 09:30.280
each environment. But we want to have better support for intercommunication in between the areas that

09:30.280 --> 09:39.000
exist. So how do you distribute content? It's just an HTTP server. Clients just get a URL from

09:39.000 --> 09:47.000
our server to download it. So the actual servers that contain each environment don't decide anything

09:47.000 --> 09:51.880
about the content because they don't even see it. They just provide a URL to it. And it can come from

09:52.440 --> 10:01.880
places like AWS or Dropbox. And since completely standard format. So benefits for us. Well, hosting

10:01.880 --> 10:08.040
stuff is legally troublesome, especially if you allow people to upload stuff. It costs money.

10:08.840 --> 10:13.560
Yeah, there can be kind of legal troubles. And we can't lock you out of anything. If

10:13.560 --> 10:18.440
Second Life kicks you out, well, all your content goes with it. It's locked inside your account.

10:19.400 --> 10:28.680
Yeah, cost of that. Well, again, a typical thing that used to be recommended is that if you want to

10:28.680 --> 10:35.800
host an avatar, you go to AWS and use the free tire. That's not particularly user-friendly. So we're

10:35.800 --> 10:42.360
dealing, trying to deal with that. Content tends to disappear. That's one another big problem for

10:42.440 --> 10:50.760
our system. In Second Life, you can steal things from 2004 because the actual central server

10:50.760 --> 10:57.080
maintains the content even if the user is physically dead. We can't do that so far. So

11:01.320 --> 11:08.520
yeah, there's content loss. Content protection. That's an interesting wrinkle in our system. So

11:09.480 --> 11:15.880
in places like VRChat, some people like closed environments because that allows you to sell

11:15.880 --> 11:23.880
content by the copy. Like you make an avatar, you maybe spent a month polishing it up. That's

11:23.880 --> 11:31.720
a huge time investment which might be thousands of dollars if you were to contract somebody to do it.

11:32.280 --> 11:39.160
So what they do is to sell it by the copy. That's only possible in a system that actually locks you

11:39.160 --> 11:46.200
in because you need to ban people who break the rules. If somebody extracts the assets and re-uploads

11:46.200 --> 11:52.680
them, well, that kind of breaks that user model. So we've had to come to terms that we can't actually

11:52.680 --> 12:01.640
do this in any way. Because we only contract our own infrastructure. The system is copied

12:01.880 --> 12:06.120
and opened for client and server and there's no way to actually do this.

12:07.720 --> 12:15.160
Right. How do we work on solving content issues? We support common hosts like Dropbox. It actually

12:15.160 --> 12:23.160
reverse your URL to download. We have maintenance tools to scan things for broken content links.

12:24.440 --> 12:29.560
We are working on implementing support for WebDAF which actually allows uploads

12:30.520 --> 12:38.680
to the Web. So that would allow things like creating an inventory like in Second Life within the

12:38.680 --> 12:45.640
world. To work, for instance, in Blender, save an avatar and have it immediately reload inside the

12:45.640 --> 12:54.680
environment. One of the things that we've considered for preventing the loss of content is actually

12:54.760 --> 13:00.920
exposing public server backups. The server backups itself. But this is just for the server owner right

13:00.920 --> 13:12.280
now. So one of the kind of things we've considered is to allow anybody to download the entire content

13:12.280 --> 13:19.560
if the user doesn't feel very attached to the contents of it. So if they think anyone should

13:19.640 --> 13:28.440
be able to get this, we want to make it there. Yeah. Authentication is a bit of a problem in that

13:29.880 --> 13:35.880
everything is by default anonymous. That creates some difficulties with moderations and there is

13:35.880 --> 13:42.840
nothing as banning everyone for the same system. To deal with this, we've considered things like

13:42.840 --> 13:49.560
allowing each server to export information like a ban list which other servers could

13:49.560 --> 13:55.400
subscribe to voluntarily. In this way, there's no center, there's no central repository of anything.

13:55.400 --> 14:02.360
You say, hey, I trust Bob that his opinion is of who is a good or not person.

14:04.920 --> 14:11.400
Yeah. But on the good side, just start the client. As soon as you download it, you just can log into

14:11.960 --> 14:20.920
and connect to our environments. There is, yeah, we also support authentication by fingerprint,

14:20.920 --> 14:25.640
which is calculated for things like the MAC address. This is an opaque identifier.

14:25.640 --> 14:30.120
So you can just say this particular machine is allowed administrative access here. You don't

14:30.120 --> 14:39.160
need an account server to do that. And there's an issue with scripting security. So

14:41.320 --> 14:47.560
the system we inherited doesn't really have a security system. We're having to build it from

14:47.560 --> 14:56.680
scratch. So the current solutions work out to asking the user for permissions like a browser does

14:57.240 --> 15:05.800
and code-signing. But turns out there's no convenient solution for siding for JavaScript.

15:05.800 --> 15:12.520
And we've decided to steal something from Java. We can package everything in a JAR file. And it

15:12.520 --> 15:17.640
turns out that actually there can be multiple signatures on a JAR file, which means we don't

15:17.640 --> 15:26.040
need one central authority. You can trust whoever you want as a certifier. And that's about it.

15:27.400 --> 15:32.840
And yeah, fortunately, that's all I have time for. We have matrix and we have our website.

15:32.840 --> 15:40.200
So for questions, please come to our chat. And yeah.

