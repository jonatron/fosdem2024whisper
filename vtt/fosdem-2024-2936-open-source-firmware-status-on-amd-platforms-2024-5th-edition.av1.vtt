WEBVTT

00:00.000 --> 00:10.400
Welcome to my presentation about open source firmware status on AMD platforms on Fosden

00:10.400 --> 00:11.400
2024.

00:11.400 --> 00:17.960
It is a fifth edition already of this presentation.

00:17.960 --> 00:24.160
For those who don't know me, I'm a firmware engineer at Friendep.

00:24.160 --> 00:25.360
We are based in Poland.

00:25.360 --> 00:27.560
We do open source firmware stuff.

00:27.560 --> 00:34.680
I'm mainly interested in core boot, advanced hardware features, security, stuff like that.

00:34.680 --> 00:38.120
I'm a maintainer of a few platforms in core boot.

00:38.120 --> 00:40.120
Sorry, I'm full.

00:40.120 --> 00:42.120
You have to stop.

00:42.120 --> 00:44.120
We don't have the devices.

00:44.120 --> 00:46.120
Two of them.

00:46.120 --> 00:48.120
So we have full.

00:48.120 --> 00:50.120
Two of them.

00:50.120 --> 00:52.120
Yeah.

00:52.120 --> 01:00.120
So yeah, please have a seat and we will continue quickly.

01:00.120 --> 01:04.120
But a few people I think.

01:04.120 --> 01:06.120
Yep.

01:06.120 --> 01:10.120
There's one more here.

01:10.120 --> 01:12.120
One more here.

01:12.120 --> 01:14.120
Yep.

01:14.120 --> 01:18.120
Okay, so yes unfortunately.

01:18.120 --> 01:22.120
There are like two people in the corner.

01:22.120 --> 01:24.120
Yeah.

01:24.120 --> 01:26.120
That's it.

01:26.120 --> 01:28.120
Sorry, excuse.

01:28.120 --> 01:52.120
Okay, come on, come on.

01:52.120 --> 01:57.120
So for those who don't know Friendep yet, we are doing various core boot stuff.

01:57.120 --> 02:02.120
UFI, FWPD, Yocto.

02:02.120 --> 02:11.120
So you may always also find various contributions in those projects as well from us.

02:11.120 --> 02:17.120
And the platforms I will be like mentioning throughout this presentation are mainly on this slide.

02:17.120 --> 02:20.120
This is like kind of glossary.

02:20.120 --> 02:24.120
For the terms I will be using throughout this presentation.

02:24.120 --> 02:36.120
And those processors or micro architectures are either currently now supported in core boot or where supported in core boot up to some point of time.

02:36.120 --> 02:43.120
So if you need to please go back to the slide.

02:43.120 --> 02:45.120
I have uploaded them already onto the system.

02:45.120 --> 02:48.120
So you can always check on that.

02:48.120 --> 02:50.120
And let's start.

02:50.120 --> 02:55.120
So a little recap from the last year.

02:55.120 --> 03:10.120
In the January 2023, we had another release of core boot, which happened to deprecate a few more platforms based on AMD silicon.

03:10.120 --> 03:21.120
We were not fulfilling certain requirements about the code quality and drivers and interfaces that were being also deprecated by this release.

03:21.120 --> 03:32.120
So like we lost a couple of platforms like PCN, GCP-1, Lenovo AMD laptop, the G505S and others.

03:32.120 --> 03:38.120
However, since then there were no more removals of any AMD boards yet.

03:38.120 --> 03:45.120
So that's kind of promising because all that is left right now is like quite modern hardware.

03:45.120 --> 03:52.120
So I don't think it will be like dropped very soon.

03:52.120 --> 04:00.120
Okay, to also recap the recent status about the mobile processors of AMD in core boot.

04:00.120 --> 04:06.120
So last year I have talked about the patches that were sent to the review by Starlabs.

04:06.120 --> 04:14.120
Apparently they had their own design on AMD processors for laptops.

04:14.120 --> 04:29.120
However, since then there were unfortunately no updates and I haven't received any information from Starlabs about any plans or status of it, unfortunately.

04:30.120 --> 04:49.120
For those who track also the other developments like AMD Chromebooks, the AMD, Mendocino and Phoenix are still in development, but the FSP binary, which is responsible for the whole

04:50.120 --> 04:58.120
slickensization for Mendocino has been published, but not yet for the Phoenix.

04:58.120 --> 05:14.120
And of course the publication intervals indicate that it may happen quite soon because we had the interval between season and Mendocino about five months.

05:14.120 --> 05:19.120
So right now it's like passed about...

05:27.120 --> 05:34.120
So it should quite soon happen, but I'm not sure about the release dates.

05:35.120 --> 05:47.120
But yeah, the difference is that the Mendocino is like Zen 2 architecture while Cezanne was Zen 3, so it's also quite...

05:47.120 --> 06:02.120
not so straightforward about the release dates because Zen 3 is like a newer architecture, but then there seems to be some kind of update to an older architecture.

06:05.120 --> 06:16.120
So let's continue with the Corbuth status on a little bit older and newer platforms.

06:16.120 --> 06:22.120
So we also had the initiative to bring back the ASUS KGP D16 platform.

06:22.120 --> 06:30.120
We have been trying to upstream that code that we have rebased to a newer Corbuth revision.

06:31.120 --> 06:48.120
However, we have received a response that it will be like too much work to get it back and probably there is like no manpower to actually review the whole of the code.

06:49.120 --> 07:11.120
So we decided to try to redirect the funds we have received from Immune 5 for the KGP revival to offer some additional features based on the Corbuth Dachar that we released for the KGP.

07:12.120 --> 07:17.120
However, there was no response from them, so this project is kind of stalled.

07:20.120 --> 07:30.120
But yeah, let's leave the bad news behind us and let's move maybe some forward with some more positive news.

07:32.120 --> 07:37.120
There is also an initiative by an individual with a nickname Hanetser.

07:37.120 --> 07:49.120
His name is Marty Plummer and he decided to port MD-FSP to a desktop board.

07:49.120 --> 07:52.120
He is doing it in time as a hobby.

07:53.120 --> 07:57.120
He has had some successes with CISAN-FSP.

07:58.120 --> 08:08.120
However, he has success with Picasso-FSP, so the older micro-architecture than CISAN.

08:09.120 --> 08:18.120
He could sort of boot the platform, but of course there are still some problems to solve.

08:19.120 --> 08:32.120
MD-FSP for example can initialize only soldered down memory, so if you have a platform with typical memory modules, it is kind of problematic.

08:35.120 --> 08:45.120
When he tried to use some kind of newer processor with CISAN-FSP, he faced problems where FSP had CPU IDs hard-coded in there,

08:45.120 --> 08:56.120
so he possibly couldn't get past the insertization for processors that were not intended for use with this FSP.

08:59.120 --> 09:08.120
Also, there is also a problem with the PSP binaries that are actually published for the Chromebooks, so the mobile processors.

09:09.120 --> 09:21.120
These PSP binaries are specially crafted for Chromebooks and the verified boot, and they might not work well also with something that is not Chromebook.

09:22.120 --> 09:34.120
And the hardware that is not Chromebook, because apparently there are some configuration fuses that are distinguishing like a Chromebook device with a non-Chromebook device.

09:35.120 --> 09:51.120
But you have also some new initiatives which are much more promising than hacking with FSP or old platforms, and what I mean to say is servers.

09:52.120 --> 10:01.120
Something that was my many probably considered almost not possible not quite long ago to have open source firmware on servers.

10:02.120 --> 10:14.120
There were moves from Intel to make it happen, and we probably saw some FSPs being released on EDK2, Tynocore.

10:15.120 --> 10:27.120
We have had efforts from 9 elements that were porting some servers on Safari Rapids, for example, but that still uses the old, good-known Intel FSP.

10:28.120 --> 10:33.120
What AMD thought about is like entirely new approach.

10:35.120 --> 10:48.120
Because the model of FSP is like very, very costly, because they have to port the UFI reference code for their silicon into an Intel FSP format,

10:48.120 --> 11:00.120
just like constant work of rewriting, adapting the code, testing, and to be honest, it is not like maintainable and scalable approach.

11:01.120 --> 11:23.120
So what they come up with is the open-sill, which stands for open silicon-icization library, which is fully open-source silicon-icization code for AMD servers.

11:24.120 --> 11:41.120
This project has been announced on OCP Summit in Prague last year, and the initial plan was to show a proof-of-concept on a general platform.

11:42.120 --> 11:57.120
So it is current generation AMD Epic Server processors, and we also have a working Corbuth proof-of-concept, as well as EDK2 reference code as well.

11:58.120 --> 12:16.120
If you want to know more about open-sill, I also encourage you to watch the presentations from the OCP Summit or from the OSFC conference, so they are covering in more detail what open-sill is.

12:17.120 --> 12:26.120
So let's try to summarize how the current state of the open-sill Corbuth looks like.

12:26.120 --> 12:40.120
So I did a quick round and tried to build the general reference board Corbuth binary with these few little simple steps.

12:41.120 --> 12:59.120
And just to show you a few statistics, there are still of course some blobs that are needed, like the PSP, there is no way around that, and they are still quite heavy, like it's like four megabytes, as you can see, the APU, AMD APU firmware.

13:00.120 --> 13:22.120
But comparing to Intel, where, let's say, current generation desktop has one megabyte blob of microcode, four megabyte blob of management engine, and another one and a half megabytes of FSP, that's already like much better situation.

13:23.120 --> 13:31.120
But at the end of the build, we are informed about some missing blobs, which is the APCB.

13:31.120 --> 13:48.120
So the Agiza configuration block, if I recall correctly, it is the input information for PSP, how to train the memory, what is the topology, how to find the training parameters, and stuff like that.

13:49.120 --> 13:59.120
I have later checked that these blobs are somewhere present in OpenSyndery repository, I think.

13:59.120 --> 14:12.120
So I don't know why Corbuth hasn't integrated them, maybe they already did, because this presentation is like two weeks old, so things could happen in the meantime.

14:13.120 --> 14:21.120
So I think it is doable to get those APCB blobs from OpenSyndery for sure.

14:26.120 --> 14:36.120
So we have like a revolutionary approach for AMD for OpenSource firmware on their silicon, but what can we expect in the near future?

14:37.120 --> 14:55.120
According to official AMD information, the OpenSyndery is going into production mode around 2026 with the server processors that will be released that year.

14:56.120 --> 15:07.120
Currently now it is only a proof of concept code, so it is just for evaluation only, and you can use it for personal purposes.

15:10.120 --> 15:18.120
But what is more important, that AMD plans to expand all market segments of their silicon to use OpenSyndery.

15:18.120 --> 15:26.120
So in the coming years we will see all possible platforms that could run OpenSyndery.

15:27.120 --> 15:39.120
So basically we returned to the golden era from like I would say 2000 something, where AMD were releasing also full installation called 4-Dale platforms,

15:40.120 --> 15:49.120
where everybody could actually make a fully OpenSource bios firmware for AMD platforms.

15:50.120 --> 15:54.120
So that is very reassuring and exciting news.

15:55.120 --> 16:12.120
I have also got information from AMD employee about a new library, something like that, which is called the AGSA compatibility layer reduced,

16:12.120 --> 16:30.120
which is a wrapper on the original AMD UFI reference code that can be integrated with Tyanochor EDK2 to boot a Ginoa server platform using UFI firmware.

16:30.120 --> 16:41.120
So it is very Ginoa specific, so building it might be a little bit tricky, even for experienced developers.

16:42.120 --> 16:48.120
It is quite fresh, so don't expect a rocket high quality of it.

16:49.120 --> 16:57.120
It is just an initiative done in probably some free time by one of people who sits together with us today.

16:58.120 --> 17:08.120
Feel free to try it. I haven't yet had time to look at it, but it is there. It is also public repository on GitHub.

17:11.120 --> 17:18.120
Okay, I will speed up a little bit because I am running out of time due to those disruptions in the beginning.

17:19.120 --> 17:25.120
PC engines, probably most of us know what these platforms are, what this company were doing.

17:26.120 --> 17:28.120
They were supporting Corboot for many, many years.

17:29.120 --> 17:32.120
And we see more interest in this platform.

17:33.120 --> 17:50.120
We are going to launch a product based on Corboot with the Shara, where we will offer the standard features that we offered with the standard PC engines firmware,

17:51.120 --> 17:54.120
but we will try to use the UFI, so we will provide more security.

17:54.120 --> 18:07.120
We will have secure boot, we will have setup password, TPM 2.0 support, measured boot, verified boot, stuff like that.

18:08.120 --> 18:22.120
And it also will be available as a subscription, so anybody can donate us to support us and make the development happen for this platform.

18:23.120 --> 18:30.120
Because for the past few months it was quite neglected because PC engines ended the official open source firmware support.

18:31.120 --> 18:42.120
There are also efforts by Felix Held from AMD, which also did some work recently in upstream for this board in free time.

18:45.120 --> 18:50.120
So this platform will still be alive for those who are fans of PC engines.

18:53.120 --> 18:59.120
Change boot. We also have dedicated talk for that, so I will just only briefly mention it.

19:00.120 --> 19:14.120
So we are expanding the possibilities of launching the operating systems with dynamic root of transfer measurement for AMD platforms.

19:14.120 --> 19:23.120
We will cover the UFI boot mode and booting Zen with QPSOS using Anti-AvenMate.

19:26.120 --> 19:38.120
So I encourage you to come to Mach-A's talk, which will be at 20 past 4 p.m. in this room, so you will get more details about this initiative.

19:39.120 --> 19:45.120
And I mentioned Densharo, but possibly not all of you know what this is.

19:46.120 --> 20:00.120
So this is like our downstream Corbo distribution, which aims to make the firmware more approachable for end users and regular people.

20:01.120 --> 20:17.120
So we aim to provide a validated pre-builds of the firmware that are known to work and which are to help spread the open source firmware usage that way.

20:18.120 --> 20:39.120
We also offered the subscription model, which allows the subscribers to integrate directly, for example, with developers, request the features, have the most recent updates earlier than regular public builds.

20:40.120 --> 20:48.120
Also, they are given a special treatment in terms of newsletters and stuff like that.

20:52.120 --> 20:56.120
So a little bonus at the end, which is might also be interesting.

20:57.120 --> 21:04.120
AMD also published the AMD secure encrypted virtualization firmware to GitHub.

21:05.120 --> 21:15.120
This is the firmware that is running on the PSP, so it is very revolutionary publication, I would say.

21:16.120 --> 21:26.120
Because till now nobody released any parts of proprietary co-processors to public.

21:27.120 --> 21:30.120
I haven't heard about Intel releasing any parts of Intel ME code.

21:30.120 --> 21:34.120
So again, AMD number one.

21:35.120 --> 21:46.120
And I would like to give special thanks to Paul Grimes, which is with us here from AMD and Fakesheld for the insights, review and suggestions to the presentation.

21:47.120 --> 21:52.120
And yeah, I'm open for questions if we have time for that. Thank you.

21:56.120 --> 21:58.120
Do we have time for some questions?

22:00.120 --> 22:03.120
Yeah, three minutes, I guess. Please.

22:30.120 --> 22:43.120
Okay, so the question is whether the approach taken by Oxide to bring up a modern platform just using the PSP Blobs could be adapted to Corboud.

22:44.120 --> 22:53.120
Technically, yes. But what Oxide did was still like some bare incision of the IO buses.

22:53.120 --> 22:57.120
They needed to program certain registers to get the PCI Express and stuff like that.

22:58.120 --> 23:06.120
So it's not entirely, let's say, independent from the code that runs on the host.

23:07.120 --> 23:16.120
So they still needed to put some kind of small portion of incision and extract the secret bits needed for the incision.

23:16.120 --> 23:24.120
So what we are right about is that the PSP actually, yeah, it can bring the RAM app and boot the platform.

23:25.120 --> 23:31.120
So you have at least half the responsibility of the BIOS less to do. That's true.

23:32.120 --> 23:37.120
But adapting that thing is, I would say, not so scalable.

23:38.120 --> 23:45.120
And it would result in a very feature-limited result, right?

23:47.120 --> 23:50.120
And other questions? Please.

23:51.120 --> 23:59.120
Do you have a plan to support Corboud with open-sealed on framework laptops?

24:00.120 --> 24:01.120
Our framework laptops?

24:02.120 --> 24:06.120
Yes, there's a plan to support it. It's going to be a proof of concept.

24:07.120 --> 24:09.120
It will not be a full replacement.

24:10.120 --> 24:14.120
For example, it won't support any power management features.

24:14.120 --> 24:20.120
So if somebody wants to build it and put it on their framework device, they can.

24:21.120 --> 24:24.120
The framework is not going to be supporting it. It's going to be independent.

24:25.120 --> 24:29.120
But yes, we will have it for both the 13 and the 16 inch.

24:30.120 --> 24:32.120
Did you ask about AMD?

24:33.120 --> 24:35.120
I've been talking about AMD.

24:36.120 --> 24:37.120
Yes, AMD because open-sealed.

24:38.120 --> 24:40.120
Also, I forgot to mention, I'm sorry, Felix.

24:41.120 --> 24:43.120
This is also like last-minute information.

24:44.120 --> 24:50.120
Felix also pushed some patches for AMD Phoenix to be integrated with open-sealed.

24:51.120 --> 24:54.120
But right now, as open-sealed for the mobile platform, it's not available.

24:55.120 --> 24:58.120
The open-sealed is stopped. But the infrastructure is being prepared, I would say.

24:59.120 --> 25:03.120
So we might probably expect something in not so distant future.

25:04.120 --> 25:05.120
We are out of time.

25:05.120 --> 25:09.120
Yes, I can also answer questions like outside or later. Thank you.

