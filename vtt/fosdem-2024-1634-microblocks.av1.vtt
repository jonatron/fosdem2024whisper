WEBVTT

00:00.000 --> 00:15.760
I think we've got a lot to do, so we might as well get started.

00:15.760 --> 00:21.000
I'm John Maloney, and I'm going to be talking about micro clocks live coding the real world.

00:21.000 --> 00:27.600
You'll get to see a lot of real world stuff, including maybe real world bugs.

00:27.600 --> 00:32.600
I'm being joined today by Kathy Giori, who will be helping with the presentation.

00:32.600 --> 00:40.600
I'm the chair of the Runeisu, and there in the back of the room we have Peter, who's organized this day of the room.

00:40.600 --> 00:44.600
And where's Bernat? Bernat is another member of the MicroBlocks team.

00:44.600 --> 00:49.600
The next room is Yensu, who was sort of one of the founding members of MicroBlocks at the very beginning.

00:49.600 --> 00:57.600
So the goal of MicroBlocks is to make it the most intuitive and engaging tool for physical computing imaginable,

00:57.600 --> 01:03.600
and create a global community of learners and educators around it, which here we have a global community.

01:03.600 --> 01:12.600
A sort of a sub-goal is to inspire a wide range of learners, especially those who do not initially see themselves as potential technologists.

01:12.600 --> 01:16.600
So this is really important. We want to invite people in to STEM,

01:16.600 --> 01:21.600
not just the people who are excited about it, but get new people in.

01:21.600 --> 01:30.600
This is the kind of testimonial we like. I won't read the whole thing, but this is the story of a teacher who started teaching some girls STEM,

01:30.600 --> 01:39.600
and they initially were very unexcited about it, but then they started doing stuff with the micro-buildings of art and music and stuff.

01:39.600 --> 01:42.600
They got more excited, so they signed up for a second trimester.

01:43.600 --> 01:47.600
And the third trimester, not only were they so excited, they brought their friends in.

01:47.600 --> 01:52.600
And this is, I just love hearing stories like this, and it's not unusual to hear about this.

01:52.600 --> 01:58.600
So what makes MicroBlocks special, and how does it differ from other languages for physical computing?

01:58.600 --> 02:01.600
What makes it especially easy for beginners?

02:01.600 --> 02:07.600
So the first kind of obvious thing that you see with MicroBlocks is that it's a blocks language.

02:07.600 --> 02:15.600
So just as a comparison, if you're getting started with Arduino, you have to type this, and you just want to make a little blip program.

02:15.600 --> 02:21.600
It's 140 characters. There's a lot of unusual characters like curly braces and semicolons and stuff.

02:21.600 --> 02:28.600
And if you get almost any of those wrong, it won't compile, it won't do anything at all except give you error messages.

02:28.600 --> 02:34.600
In contrast with MicroBlocks, there's the same program, 6 blocks.

02:34.600 --> 02:41.600
You can't get anything wrong, basically, except maybe to have both of those set LEDs the same so that nothing happens.

02:41.600 --> 02:43.600
The LED might turn on, but not blink.

02:43.600 --> 02:45.600
So this is really easy to get started.

02:45.600 --> 02:49.600
And the neat thing about it is that once you get started, you can start playing with stuff.

02:49.600 --> 02:55.600
So you've got a working program, you start saying, well, I want to make it live faster or slower.

02:55.600 --> 02:58.600
I can change those milliseconds, et cetera, et cetera.

02:58.600 --> 03:05.600
So I think that's one of the biggest differences with MicroBlocks, but that's the same with MakeCode.

03:05.600 --> 03:07.600
Let's talk about another difference.

03:07.600 --> 03:12.600
This one is hard to explain without some pictures, so I made some pictures.

03:12.600 --> 03:19.600
So supposing you've got a microcontroller like this microbit, and you've got a laptop and you want to write a program for the microbit.

03:19.600 --> 03:21.600
Well, obviously, you can't type on microbits.

03:21.600 --> 03:24.600
You're going to use your laptop to write the program.

03:24.600 --> 03:32.600
And so the sort of standard way to do it in the old days was you write a program on the laptop, you compile it, download it onto the microbit,

03:32.600 --> 03:34.600
and now it runs on the microbit.

03:34.600 --> 03:37.600
A little gear show where the program is actually running.

03:37.600 --> 03:40.600
So that's sort of the Arduino type world.

03:40.600 --> 03:43.600
But the problem with that is that it's not very interactive.

03:43.600 --> 03:44.600
It's not live.

03:44.600 --> 03:47.600
You can't just change something and quickly see what happens.

03:47.600 --> 03:51.600
You have to go through this kind of compiled download cycle every time.

03:51.600 --> 03:53.600
You lose track of what you're thinking.

03:53.600 --> 03:57.600
So various people came up with this idea of doing a tethered system.

03:57.600 --> 04:03.600
So I think there was Scratch for our Arduino, and then Berlatt did Snap for our Arduino.

04:03.600 --> 04:08.600
And then there's also a microbit plugin for the regular Scratch.

04:08.600 --> 04:15.600
So the idea here is that you have a program running in whatever language it is, Snap or Scratch.

04:15.600 --> 04:22.600
And that is driving the microcontroller, which is acting as a sort of peripheral.

04:22.600 --> 04:27.600
So this is great because Scratch and Snap are super live, so you can make changes

04:27.600 --> 04:29.600
and they happen right away.

04:29.600 --> 04:34.600
But the problem is you constantly have to keep your laptop next to tethered to the microcontroller

04:34.600 --> 04:39.600
because the program, as shown by the ears, is actually running on the laptop.

04:39.600 --> 04:42.600
So the microcontroller is not autonomous.

04:42.600 --> 04:47.600
So with MicroLux, we try to combine the best of both of those worlds.

04:47.600 --> 04:51.600
So while you're programming it, it's tethered, and you can make changes and you see them right away.

04:51.600 --> 04:52.600
So it's live.

04:52.600 --> 04:58.600
And tomorrow, Berlatt is actually going to do a live coding music presentation

04:58.600 --> 05:03.600
where he just writes all the coded blocks and the music just keeps happening as he's programming.

05:03.600 --> 05:05.600
Quite amazing.

05:05.600 --> 05:10.600
But in the case of MicroLux, instead of the program running on the laptop,

05:10.600 --> 05:12.600
it actually does run on the microcontroller.

05:12.600 --> 05:18.600
And incrementally, as you work, it's downloading your scripts onto the microcontroller,

05:18.600 --> 05:20.600
bringing them into Flash memory.

05:20.600 --> 05:26.600
So that means that once you're done programming, you just unplug untether and plug in a battery

05:26.600 --> 05:27.600
and you can take this with you.

05:27.600 --> 05:33.600
You could build it into a hat or a Halloween costume or I know somebody who mounted one on a skateboard

05:33.600 --> 05:40.600
and used it as a skateboard speedometer, like he was actually measuring acceleration with it.

05:40.600 --> 05:46.600
So anyway, that's probably the biggest difference between MicroLux and other languages,

05:46.600 --> 05:49.600
is this combination of liveness and autonomy.

05:49.600 --> 05:55.600
But I think really the best way to understand MicroLux is to actually see it in action.

05:55.600 --> 06:01.600
So I'm going to do a lot of demos so you can kind of get a feel for it.

06:01.600 --> 06:03.600
So here's the MicroLux IDE.

06:03.600 --> 06:05.600
We're going to be reloaded.

06:05.600 --> 06:11.600
We have standalone versions, but the easiest thing is to just start it up in the Chrome browser.

06:11.600 --> 06:18.600
It has to be the Chrome browser because Chrome is the only one that supports Web Serial and Web Bluetooth,

06:18.600 --> 06:21.600
which are the ways that we connect to the board.

06:21.600 --> 06:27.600
So I'm going to pull out this little handy camera view so you can see what I'm doing.

06:27.600 --> 06:31.600
So I'm going to plug the micro bit into this board.

06:31.600 --> 06:35.600
And the first thing I'm going to do is connect to the board.

06:35.600 --> 06:39.600
So I have to sort of select the board.

06:39.600 --> 06:43.600
And now when it's connected, as soon as it connects, it realizes, oh, this is a micro bit.

06:43.600 --> 06:47.600
So it loads some libraries like this display library and stuff.

06:47.600 --> 06:52.600
And you can also tell it's connected because of that green circle behind the USB icon.

06:52.600 --> 06:57.600
So anybody who's used Scratch, this will just seem second nature, like why wouldn't it work this way?

06:57.600 --> 07:00.600
But you can just drag out a block, click on it, and see what it does.

07:00.600 --> 07:02.600
So it made a smiley face.

07:02.600 --> 07:04.600
And you don't even have to drag the block out.

07:04.600 --> 07:09.600
You can just click it right in the palette so this clear takes the smiley face away.

07:09.600 --> 07:11.600
So plot, OK, that sort of plots.

07:11.600 --> 07:13.600
Three, three must be the middle.

07:13.600 --> 07:15.600
Unplot, unplot stat.

07:15.600 --> 07:17.600
I can display a character.

07:17.600 --> 07:20.600
I can scroll some text.

07:20.600 --> 07:22.600
I can stop scrolling the text.

07:22.600 --> 07:24.600
So this is important.

07:24.600 --> 07:29.600
The idea is that just by clicking on blocks, you can discover what they do.

07:29.600 --> 07:31.600
You don't have to read a manual.

07:31.600 --> 07:37.600
You don't have to have somebody tell you or do sort of a whole bunch of tutorials.

07:37.600 --> 07:41.600
You basically can sort of see what's there, try it out, and learn how it works.

07:41.600 --> 07:44.600
Well, let's actually start writing a little program.

07:44.600 --> 07:51.600
So I'm going to take this display block, and the first program I'm going to write is just,

07:51.600 --> 07:55.600
I want it to display the smiley face when I press the A button.

07:55.600 --> 08:01.600
Microbits, for those of you who don't use microbits, have two buttons on them, A and B.

08:01.600 --> 08:05.600
So the A button on the microbit has nothing to do with the A key on the keyboard.

08:05.600 --> 08:09.600
So anyway, there, I'll click that, and we get a smiley face.

08:09.600 --> 08:15.600
And I could make a second program, and I'll say the B button is pressed.

08:15.600 --> 08:19.600
Just maybe make the display clear.

08:19.600 --> 08:23.600
So we've got clear, smiley clear.

08:23.600 --> 08:26.600
And so we've already got a little program in.

08:26.600 --> 08:29.600
For beginner, this is actually pretty magic.

08:29.600 --> 08:38.600
I mean, they've got something that they can, in fact, I can just unplug this and take this battery and plug it in.

08:40.600 --> 08:43.600
And ignore a few little flashes of them.

08:43.600 --> 08:45.600
As soon as I turn this on, oh, it's on.

08:45.600 --> 08:47.600
It's running.

08:47.600 --> 08:51.600
So there's the smiley, there's the non-smiley.

08:51.600 --> 08:55.600
Well, let's say I wrote this program and I forgot I didn't save it.

08:55.600 --> 08:59.600
So I'll clear this slate, I'll save the new program here.

08:59.600 --> 09:05.600
That's no problem with MicroLocks because you can actually read the program back from the board.

09:05.600 --> 09:07.600
Another pretty unique feature.

09:07.600 --> 09:12.600
So what I say is I say open from board, it says, OK, plug in the board.

09:12.600 --> 09:17.600
And what it's going to do is it's going to read the code from the board.

09:17.600 --> 09:20.600
I still have to say connect.

09:20.600 --> 09:22.600
Oh, right.

09:22.600 --> 09:24.600
The actual action is going to happen in the ID.

09:24.600 --> 09:31.600
So it's going to read the code from the board and decompile it and reconstruct the script.

09:31.600 --> 09:34.600
So it's not actually, it didn't actually save the source code on the board.

09:34.600 --> 09:41.600
It saved the compiled form, but we have a decompiler so we can get back to the original, almost exactly the original.

09:41.600 --> 09:45.600
So one thing you'll notice is the position of these, they were sort of reversed,

09:45.600 --> 09:49.600
like the A was on the left and the B was on the right before or maybe below.

09:49.600 --> 09:52.600
So it doesn't remember positions, it doesn't record comments

09:52.600 --> 09:55.600
because those are not part of the compiled code.

09:55.600 --> 10:01.600
But it gets all the logic back for you, which is what you really want if you've forgotten to save your program

10:01.600 --> 10:05.600
and you only have it on the board.

10:05.600 --> 10:11.600
All right, well, so far we have been using just the stuff a bit.

10:11.600 --> 10:13.600
Oh, I forgot a very important thing.

10:13.600 --> 10:16.600
The micro bit also has a bunch of sensors.

10:16.600 --> 10:20.600
So for example, it has an accelerometer that has three axes.

10:20.600 --> 10:24.600
So there's this tilt, we sort of show it as tilt.

10:24.600 --> 10:28.600
So the x-axis is kind of tilting left and right like this.

10:28.600 --> 10:33.600
And so you can see that it's sort of negative in this direction, positive in this direction.

10:33.600 --> 10:36.600
It's a little tedious to keep typing that though.

10:36.600 --> 10:41.600
So what I'm going to do is I'm going to use this save block to save it

10:41.600 --> 10:44.600
and then I'm going to put that in a forever loop.

10:44.600 --> 10:49.600
So it's going to save it over and over and it's actually going really, really fast.

10:49.600 --> 10:57.600
So I'll slow it down a little bit by putting this block in, maybe change that to a 100.

10:57.600 --> 11:04.600
Okay, so now we've got this interactive thing and we can see more quickly, negative, positive.

11:04.600 --> 11:08.600
And you get a feel for what that sensor is doing.

11:08.600 --> 11:13.600
But I just shook it and I saw some 200s but they went by really fast.

11:13.600 --> 11:17.600
So let me get a sort of a time recording of this.

11:17.600 --> 11:20.600
So I'm going to take the same tilt block.

11:20.600 --> 11:21.600
I'll just take these out.

11:21.600 --> 11:23.600
And now I'm graphing it.

11:23.600 --> 11:26.600
So I'm going to open this graph here.

11:26.600 --> 11:31.600
We'll see that if I tilt it this way it goes down to sort of minus 100-ish.

11:31.600 --> 11:36.600
Tilted this way it goes up to positive 100 and in the middle it's about zero.

11:36.600 --> 11:37.600
I shake it.

11:37.600 --> 11:39.600
I shake it really hard.

11:39.600 --> 11:42.600
It goes even more than 100.

11:42.600 --> 11:51.600
So this is a really cool way to get an intuitive feel for different kind of inputs, sensor inputs.

11:51.600 --> 11:54.600
Okay, so so far I've been showing you stuff that was built into the micro bit.

11:54.600 --> 12:02.600
And I have to say I think the BBC folks that originally designed the micro bit were brilliant

12:02.600 --> 12:09.600
because you can do a whole lot with everything that's built into the micro bit and never have to connect anything external.

12:09.600 --> 12:14.600
But if you do want to connect stuff that's external there's ways to do it.

12:15.600 --> 12:19.600
I have here, this is called a ring bit.

12:19.600 --> 12:27.600
And it's a little extension board that costs about $7 US, probably a little less than euros.

12:27.600 --> 12:32.600
It has a battery pack built in so you don't need this battery pack.

12:32.600 --> 12:38.600
And more importantly it has several sets of pins that you can plug things into.

12:38.600 --> 12:41.600
So let me plug this guy in.

12:41.600 --> 12:50.600
And I'm going to use with it, this is what's called a NeoPixel strip.

12:50.600 --> 12:55.600
So it's a strip of 10 RGB LEDs.

12:55.600 --> 13:00.600
And I can just plug it into, in zero here.

13:00.600 --> 13:03.600
Oh, wow.

13:03.600 --> 13:06.600
I forgot I already had a program on this board.

13:06.600 --> 13:09.600
Actually let's see what it is.

13:09.600 --> 13:12.600
Yeah, exactly, let's open from board.

13:25.600 --> 13:27.600
I didn't plan that actually.

13:27.600 --> 13:31.600
That would have made it cool if I had planned it but I didn't actually plan it.

13:31.600 --> 13:40.600
Okay, so we have here, we have one script here which is, I'm using this NeoPixel library.

13:40.600 --> 13:48.600
So when I run this it initializes all of these to a different, well it's actually got two things going on.

13:48.600 --> 13:51.600
Let me take it apart a little bit.

13:51.600 --> 13:58.600
So one thing is that this little for loop that says for 1 to 10, or I in 10,

13:58.600 --> 14:03.600
but sort of implied that it starts at 1, you can change the range if you want.

14:03.600 --> 14:06.600
It's going to set each NeoPixel i to a random color.

14:06.600 --> 14:10.600
So here we've introduced a for loop in a way that's very visual.

14:10.600 --> 14:15.600
I'll hold this up higher.

14:15.600 --> 14:22.600
And then all I did was I put this in a forever loop and there's another little block here that says,

14:22.600 --> 14:27.600
oh it should actually say pin zero.

14:27.600 --> 14:32.600
So it's now running this forever so it's kind of randomly showing a bunch of new pixels.

14:32.600 --> 14:40.600
While that's happening, and let's see if we can, yeah you can sort of see from the glow on the table that this is still running.

14:40.600 --> 14:50.600
While that's happening I can also run this script here which is going to do a little animation of the face on the display.

14:50.600 --> 14:55.600
So you can see it's actually doing these two totally different things at the same time.

14:55.600 --> 14:59.600
So it's doing this which is just alternating between two different faces.

14:59.600 --> 15:01.600
That's one idea.

15:01.600 --> 15:05.600
And then the other idea is this thing about animating the NeoPixels.

15:05.600 --> 15:08.600
And each of those is separate and it has a separate script.

15:08.600 --> 15:12.600
And that's another thing that's really nice about Viproblox is that it has concurrency.

15:12.600 --> 15:15.600
So you can have up to 10 things happening at once.

15:15.600 --> 15:18.600
It's got a limit to how many stacks you can have because of RAM limits.

15:18.600 --> 15:24.600
But you can do 10 things at once which is more than enough usually.

15:25.600 --> 15:33.600
Okay so the next thing I guess I wanted to show was that Viproblox runs on a lot of different boards.

15:33.600 --> 15:36.600
I'm not quite to that set of boards yet.

15:36.600 --> 15:39.600
But I'll show you a couple of interesting things.

15:39.600 --> 15:46.600
This is actually a micro bit plugged into a board called the Pipobris board.

15:46.600 --> 15:53.600
And Yashir over there is the owner of the company that created this board, maybe the mastermind behind it.

15:53.600 --> 15:59.600
But this has a whole bunch of peripherals that are sort of hardwired into the circuit board.

15:59.600 --> 16:03.600
But they can be broken apart so you can make something like, you can come up and look at it later,

16:03.600 --> 16:07.600
this little robot that Peter made with all the different components.

16:07.600 --> 16:12.600
So you can learn how the components work without having to plug in any wires.

16:12.600 --> 16:19.600
And then you can disassemble it, break the board apart and build the components into something if you want.

16:19.600 --> 16:25.600
So this is a new thing, this is on a Kickstarter right now, it's not yet available but will be soon.

16:25.600 --> 16:32.600
This is another freaking board, this is the Calliope Mini V3.

16:32.600 --> 16:35.600
So there's been a Calliope Mini V1 and V2.

16:35.600 --> 16:43.600
This is the V3 which has got more things like a microphone and a faster processor.

16:43.600 --> 16:48.600
You can also do Bluetooth and motor controller and so forth.

16:48.600 --> 16:52.600
It's also got a couple of Jack-Doc boards which I don't know how to use yet.

16:52.600 --> 16:55.600
But MicroBlocks already supports this board.

16:55.600 --> 17:00.600
It's still pretty new because it was only announced in November.

17:00.600 --> 17:04.600
But I guess they're already out on the market.

17:04.600 --> 17:08.600
Here's another one, this one I'll show you with the camera.

17:08.600 --> 17:21.600
This device is made to run, is a scientific instrument, it's really sold for doing science.

17:21.600 --> 17:26.600
It doesn't have much in the way of output devices except for three multicolored LEDs.

17:26.600 --> 17:29.600
But it's packed with sensors.

17:29.600 --> 17:36.600
So the idea, it's small enough and it has built-in batteries so the idea is that you could use it to instrument something like a weather balloon.

17:36.600 --> 17:40.600
Or a garden or something like that.

17:40.600 --> 17:45.600
So I have a little program on it that one of the sensors is a gesture sensor.

17:45.600 --> 17:48.600
I wave my finger over it, it just changes color.

17:48.600 --> 17:54.600
So left and right is green and blue and up and down is sort of a purple and red.

17:54.600 --> 17:59.600
So this is kind of a cool board.

17:59.600 --> 18:06.600
And the nice thing is the guy who created this thing has been building a whole set of curriculum around it.

18:06.600 --> 18:12.600
Both for computer science but also for science, physics and yeah.

18:12.600 --> 18:14.600
What is the name of the board?

18:14.600 --> 18:20.600
Oh it's called the Data Bot and the guy who created this is Robert Grover.

18:20.600 --> 18:23.600
So it's got an ASP32 inside.

18:23.600 --> 18:25.600
Yeah.

18:25.600 --> 18:36.600
Another board that's sort of in the beam created as we speak is, so this is a prototype of something called the MakerPort by a guy named Roger Wagner.

18:36.600 --> 18:38.600
He's got his name right on it.

18:38.600 --> 18:46.600
The sort of interesting thing about this is it doesn't have any, you can plug a display in, but it has a built-in MP3 player.

18:46.600 --> 18:49.600
That's what that little speaker drill will do.

18:49.600 --> 18:57.600
And what I really like about it is that it has this extension port for touch sensors.

18:57.600 --> 19:04.600
So plug that in and I'll try to get all of them in the camera for you.

19:04.600 --> 19:27.600
So we've got this ribbon cable coming out of here that goes to these 12 sort of pins of, yeah, 12 wires which I've stuck little pieces of bare wire in and then connected to these foil strips.

19:27.600 --> 19:34.600
And I can, I leave, I just powered this up.

19:34.600 --> 19:43.600
I have a program in here already that sends MIDI to the computer.

19:43.600 --> 19:45.600
Oh you've got it in there.

19:45.600 --> 19:46.600
Yeah.

19:46.600 --> 19:54.600
So let me just start a program called SimpleSynth.

19:54.600 --> 20:02.600
So SimpleSynth is a program that is, it's a free program that can receive MIDI from.

20:02.600 --> 20:12.600
So over this serial cables, not only is the MakerPort being powered by the serial cable, but it's sending MIDI commands over the serial cable.

20:12.600 --> 20:20.600
So if I turn off my volume here, we should be able to...

20:20.600 --> 20:29.600
So we've got a little piano and it's actually polyphonic because it's sending MIDI commands and the MIDI sends polyphonic.

20:29.600 --> 20:30.600
So you can do...

20:37.600 --> 20:38.600
Oops.

20:38.600 --> 20:46.600
That's not how I'm going to make the keys part of the polyphonic.

20:46.600 --> 20:48.600
Okay, so...

20:52.600 --> 20:55.600
Did you want to just show more boards?

20:59.600 --> 21:06.600
Kathy, Kathy is our hardware geek. She's always trying to get me to make a port micro box to more different boards.

21:06.600 --> 21:07.600
My problem.

21:07.600 --> 21:09.600
By the image in the middle?

21:09.600 --> 21:10.600
Yeah, yeah.

21:10.600 --> 21:11.600
Yeah.

21:11.600 --> 21:21.600
So this is a sort of a micro bit light board, but it actually has a Raspberry Pi Pico chip in it.

21:21.600 --> 21:23.600
This is the Raspberry Pi Pico...

21:23.600 --> 21:24.600
Wireless.

21:24.600 --> 21:25.600
Wireless.

21:25.600 --> 21:31.600
Without any pins. This one has pins. That's a micro bit, too.

21:31.600 --> 21:37.600
These two round things are circuit playground express two different versions with different chips.

21:37.600 --> 21:42.600
This is called a clue. It's also from Adafruit and it has a TFT display.

21:42.600 --> 21:45.600
You'll see that one running over there in a second.

21:45.600 --> 21:50.600
And here's even more boards.

21:50.600 --> 21:57.600
This one, unfortunately, has a lovely big screen, but you can't buy it anymore because the company went out of business.

21:57.600 --> 21:59.600
But it's actually a touchscreen.

21:59.600 --> 22:09.600
And this one is something from a company called M5 Stack and they made a wristwatchable kind of thing on a wristband.

22:09.600 --> 22:13.600
It's this OTT Go. This has a little display on it.

22:13.600 --> 22:22.600
This has a sort of matrix 5x5 matrix, but they're actually RDB LEDs instead of just single color.

22:22.600 --> 22:28.600
This one is a Chinese company. It has a few little power problems, so we're not so keen on it anymore.

22:28.600 --> 22:34.600
This has a built-in battery and you'll see one of those running over there, but a nice display of buttons.

22:34.600 --> 22:37.600
This one has 5x5 LEDs and the whole top is a button.

22:37.600 --> 22:39.600
So lots and lots of options.

22:39.600 --> 22:52.600
Microblocks actually supports, well, built into Microblocks itself, you can install something like 16 different, firmware for 16 different boards.

22:52.600 --> 23:06.600
So those are the ones we expect educators to be using, but then there's something like 5 dozen more boards that you can build from, you know, if you download from our Git repository and just type a command.

23:06.600 --> 23:13.600
You can build and install on some of these other boards like the Mbits and the T2Go board and so forth.

23:13.600 --> 23:17.600
So there's a lot of options out there.

23:17.600 --> 23:25.600
It's kind of a will-earing for an educator, so we kind of try to limit it like, you know, the micro-bit is a pretty good starting point if you've never done any microcontroller stuff.

23:25.600 --> 23:33.600
I wanted to show you also this. This is something called a Q-POD, the camera.

23:33.600 --> 23:44.600
It's a little robot that has a micro-bit on the front of it, and it also has some batteries to little motors and it's got a distance sensor.

23:44.600 --> 23:52.600
So I'm going to turn this guy on and, oh, it's got a program on it already.

23:52.600 --> 23:59.600
So the, let me turn it back on. It's a little hard to, I'll take this off for a moment.

23:59.600 --> 24:07.600
When I first turned the micro-bit on, it makes this three-letter code which was O-B-Q.

24:07.600 --> 24:16.600
That code is actually a code that will help you identify the board when you try to connect to it with Bluetooth.

24:16.600 --> 24:18.600
So that's what I'm going to try to do right now.

24:18.600 --> 24:27.600
So I will, actually, maybe I will open from board from this one too.

24:27.600 --> 24:33.600
No, that's going to be, it's going to be slow. I'll just connect via Bluetooth.

24:33.600 --> 24:36.600
And, oh my gosh, there's a lot of micro-bits in here.

24:36.600 --> 24:39.600
Is it that one?

24:39.600 --> 24:40.600
Yeah.

24:44.600 --> 24:46.600
And, let me just see it.

24:46.600 --> 24:53.600
Ah, right. We need to install a library here called the Q-POD library.

24:56.600 --> 25:00.600
And now I can, oops, there are loads that stop the wheels.

25:00.600 --> 25:02.600
Now I can put it down.

25:04.600 --> 25:09.600
So what I wanted to do here was I wanted to play a little bit with the distance sensor.

25:09.600 --> 25:17.600
So it's got this Q-POD distance thing, which is, as with all of our sort of reporter blocks,

25:17.600 --> 25:19.600
you can just click on it to see what it says.

25:19.600 --> 25:24.600
So as I move my hand closer to it, we should get lower numbers.

25:24.600 --> 25:34.600
And what I'd like to do is, actually, I think what I'd like to do at this point is load a program that I made already.

25:36.600 --> 25:38.600
Yeah, to save time.

25:38.600 --> 25:46.600
So the idea is to have a sort of a robot that senses when it's getting close to something and stops.

25:46.600 --> 25:51.600
So here's the beginning of that program.

25:51.600 --> 25:55.600
So it's got these headlights. We'll set them to green.

25:55.600 --> 26:00.600
And then we're kind of continuously going to get the distance and do things with it.

26:00.600 --> 26:04.600
We'll graph it, so I guess I could open the graph here.

26:06.600 --> 26:10.600
And then we'll set the headlights to red if the distance is below some threshold.

26:11.600 --> 26:21.600
So you know what? It doesn't bounce, ultrasound doesn't bounce off hands very well.

26:21.600 --> 26:23.600
So I'm using my phone.

26:23.600 --> 26:25.600
We don't see the screen.

26:25.600 --> 26:27.600
That's getting full.

26:27.600 --> 26:31.600
I just know not to move that.

26:31.600 --> 26:32.600
Oh, I see.

26:32.600 --> 26:33.600
We're going to open it.

26:33.600 --> 26:34.600
There's that, too.

26:34.600 --> 26:36.600
Well, I didn't want to completely cover the script.

26:36.600 --> 26:43.600
So you'll see that when it gets below a certain threshold, and you can see in the graph, you can see that changing.

26:43.600 --> 26:49.600
In fact, let's increase the scale of the graph a little bit.

26:52.600 --> 26:58.600
You can see that when it falls below about 25, the headlights turn red and it beeps.

26:58.600 --> 27:04.600
So now I'm going to sort of extend that by putting in some actual control.

27:04.600 --> 27:10.600
So I'm going to say when the headlights turn red, I want it to stop the wheels if they were going.

27:10.600 --> 27:20.600
And now the magic bit is I'm going to drop this block in that says if you don't see, if you're not close, then turn the wheels on.

27:20.600 --> 27:32.600
So we've got a self-derving car.

27:32.600 --> 27:41.600
Oh, and it also, it does the thing that a lot of real cars do that as they get closer to an obstacle, it speeds up.

27:41.600 --> 27:46.600
So it's pretty cool that you can write that program yourself, and it isn't very hard to understand.

27:46.600 --> 27:54.600
It's basically just the time for, the length of time it's playing the note is proportional to the distance.

27:54.600 --> 27:56.600
So it's a longer time between notes.

27:56.600 --> 28:02.600
If it's a bigger distance, and the notes, the time between notes gets shorter, the shorter distance.

28:02.600 --> 28:07.600
At this point, I think I want to show the grand set of things.

28:07.600 --> 28:11.600
So if we can hand that, the end of that way to him.

28:37.600 --> 28:42.600
Yeah, no, it's not recognizing the webcam. Did I plug it in the right thing?

28:42.600 --> 28:45.600
Yeah, I have that. I feel like the GCC is not.

28:45.600 --> 28:53.600
Oh, let's try that.

28:53.600 --> 28:55.600
Great.

28:55.600 --> 29:11.600
So, I guess the basic idea is that there's a lot of different things that are running microblocks.

29:11.600 --> 29:17.600
What Kathy's holding the photo of right now is a glove that has a color sensor.

29:17.600 --> 29:21.600
And then if you hold it over the right color, yeah.

29:21.600 --> 29:25.600
The LEDs are supposed to change that color. Actually, they are.

29:25.600 --> 29:27.600
Red.

29:27.600 --> 29:29.600
Black.

29:29.600 --> 29:31.600
I need some more color.

29:31.600 --> 29:33.600
Blue.

29:33.600 --> 29:37.600
Getting the blue.

29:37.600 --> 29:39.600
There we go.

29:39.600 --> 29:43.600
Detects color.

29:43.600 --> 29:47.600
Okay, and then...

29:47.600 --> 29:52.600
Oh, one of the points I wanted to make, can you show that the clue and the...

29:52.600 --> 29:57.600
What we try to do is we try to, when there are similar things, features between boards,

29:57.600 --> 30:03.600
like if they have a display, it might not be a 5x5 display, it might be a TFT color display.

30:03.600 --> 30:08.600
We try to sort of make it so that the program that ran on a micro bit could run on that.

30:08.600 --> 30:12.600
So we'll simulate the micro bit display on these boards.

30:12.600 --> 30:16.600
This is a CIDLAV-81 and an 8-of-3 clue.

30:16.600 --> 30:22.600
This is a Kaliope Mini V3. This is an atom, M5 stacked atom.

30:22.600 --> 30:26.600
This is a electrix Pico...

30:26.600 --> 30:28.600
Pico.

30:28.600 --> 30:30.600
Yup.

30:30.600 --> 30:32.600
And this is...

30:32.600 --> 30:37.600
This is, yeah, this is, yeah, Sierra's new Pico Bricks board with a micro bit controlling it.

30:37.600 --> 30:39.600
And we're using the micro bit display.

30:39.600 --> 30:43.600
The old Pico Bricks with the raspberry pi.

30:43.600 --> 30:45.600
Yup.

30:45.600 --> 30:48.600
So let me have my phone back.

30:48.600 --> 30:54.600
So now I want to also show you, I just remembered one more thing I wanted to show you.

30:54.600 --> 30:57.600
You may wonder about this backpack that Kathy will hold on to.

30:57.600 --> 31:02.600
So this backpack can be remotely controlled.

31:02.600 --> 31:08.600
So it's running a program that responds to Bluetooth.

31:08.600 --> 31:13.600
And the controlling program is a program called Octa Studio.

31:13.600 --> 31:15.600
Has anybody heard of Octa Studio?

31:15.600 --> 31:17.600
A couple of people.

31:17.600 --> 31:21.600
Octa Studio was created by the Lifeline Kinegar and Media Lab.

31:21.600 --> 31:23.600
Same group that created Scratch.

31:23.600 --> 31:27.600
And you might think of it as like, here's Scratch for tiny screens.

31:27.600 --> 31:34.600
So let's see if I can get my Ikevo camera back.

31:34.600 --> 31:36.600
Oh.

31:41.600 --> 31:43.600
See if you can see this.

31:49.600 --> 31:51.600
Click.

31:51.600 --> 31:53.600
Please.

31:55.600 --> 31:56.600
Oh.

31:56.600 --> 31:59.600
Alright, well, it's not, yeah.

31:59.600 --> 32:00.600
What's your...

32:00.600 --> 32:03.600
Well, you can hold this in front of your...

32:03.600 --> 32:08.600
So you won't be able to see the details exactly, but...

32:08.600 --> 32:12.600
Oh, yeah, there's a thought.

32:12.600 --> 32:14.600
So this is...

32:17.600 --> 32:20.600
This is sort of what Octa Studio looks like.

32:20.600 --> 32:24.600
You can see that it's got sort of blocks like in Scratch.

32:24.600 --> 32:26.600
And they can be...

32:26.600 --> 32:29.600
I can do this, drag around and drop.

32:29.600 --> 32:32.600
There's a palette at the bottom of the screen.

32:32.600 --> 32:37.600
So I wrote a program here, and I'm going to make it go full screen.

32:37.600 --> 32:39.600
And...

32:40.600 --> 32:42.600
And run it.

32:42.600 --> 32:44.600
Hard to do it in a mirror.

32:44.600 --> 32:48.600
So this is a program written in Octa Studio, which is a very, very simple program.

32:48.600 --> 32:51.600
They call it beaming.

32:51.600 --> 32:52.600
It sends...

32:52.600 --> 32:53.600
Oh, a Bluetooth.

32:53.600 --> 32:55.600
It sends one of these five shapes.

32:55.600 --> 32:57.600
And that backpack is supposed to be receiving it.

32:57.600 --> 32:59.600
So we'll see if that really works.

32:59.600 --> 33:01.600
Let's try Circle.

33:01.600 --> 33:03.600
And...

33:04.600 --> 33:06.600
Mirror image.

33:10.600 --> 33:12.600
Star.

33:12.600 --> 33:14.600
Triangle.

33:14.600 --> 33:16.600
And Heart.

33:16.600 --> 33:22.600
So if you go to the Octa Studio website,

33:22.600 --> 33:24.600
it's just octa studio.word.

33:24.600 --> 33:26.600
And you want to download this.

33:26.600 --> 33:30.600
We'll just leave this backpack up here while Kathy is talking.

33:30.600 --> 33:35.600
And you can actually send it messages yourself and have it changed.

33:35.600 --> 33:39.600
So Kathy, do you want your laptop?

33:39.600 --> 33:41.600
Yeah.

33:41.600 --> 33:47.600
But I could just start with some of the demo stuff.

33:47.600 --> 33:50.600
So for example,

33:50.600 --> 33:57.600
I have Octa Studio set up on the library for this little robot.

33:57.600 --> 34:09.600
So Octa Studio is something...

34:09.600 --> 34:11.600
Is it a controller?

34:11.600 --> 34:13.600
Yeah, anyone can control it.

34:13.600 --> 34:17.600
So that's kind of the tricky part is that Octa Studio right now,

34:17.600 --> 34:20.600
we don't have a way to test it certainly.

34:20.600 --> 34:24.600
Yeah, there's no channels.

34:24.600 --> 34:31.600
So this is my controller basically for this guy.

34:31.600 --> 34:37.600
But if I say stop, then it will stop.

34:37.600 --> 34:48.600
And then if I set it down, I can say go forward, go back, go left, go right, and stop.

34:48.600 --> 34:56.600
And you can hear I have little beads as well that go with the program.

34:56.600 --> 34:59.600
So each one has like send a beam shape and make a noise.

34:59.600 --> 35:02.600
So it's really trivial to do something like that.

35:02.600 --> 35:08.600
Now, so that's Octa Studio control.

35:08.600 --> 35:16.600
Then I have these little robots that I just used yet another micro bit.

35:17.600 --> 35:21.600
These ones I call my dancing robots.

35:21.600 --> 35:27.600
And what I do with this is I use button A to go forward.

35:27.600 --> 35:29.600
I use button B to go back.

35:29.600 --> 35:36.600
And then I use the tilt sensor with both buttons to go left or to go right.

35:36.600 --> 35:41.600
And so probably...

35:41.600 --> 35:46.600
So...

36:02.600 --> 36:08.600
Alright, so this is a really fun way to use just robots.

36:08.600 --> 36:13.600
And then I will...

36:16.600 --> 36:19.600
We'll have a little bit of time to play around with those.

36:19.600 --> 36:25.600
And then right before I came to Fostum, like the night before my flight,

36:25.600 --> 36:29.600
I bought this new robot from Electric Freecs.

36:29.600 --> 36:32.600
It's an X-Go Q-Frot.

36:33.600 --> 36:42.600
And yesterday we downloaded a library contributed by one of our Chinese community members.

36:42.600 --> 36:44.600
The library is all in Chinese.

36:44.600 --> 36:48.600
So we use our little playcoop to translate the commands.

36:48.600 --> 36:50.600
And then we didn't know the serial pins,

36:50.600 --> 36:53.600
or the communication with serial trying to fit with the two pins.

36:53.600 --> 36:58.600
So we got those pins this morning and then like right as we're setting up here,

36:58.600 --> 37:01.600
I'm able for the first time to command the robot.

37:01.600 --> 37:05.600
And so I have a couple buttons where...

37:05.600 --> 37:07.600
This is where I should...

37:07.600 --> 37:12.600
Where I press button A and this is going to make it P.

37:12.600 --> 37:19.600
And then I programmed it so that button B will make it sit.

37:19.600 --> 37:27.600
And then it has like dozens, you know, there's like 30, 40 pre-set moves that it will do.

37:27.600 --> 37:33.600
Or you can just actually actuate all the servo's and controls and make your own things, you know.

37:33.600 --> 37:36.600
So it has dance moves, it has all these moves.

37:36.600 --> 37:39.600
I literally just got it working, so that's why we don't have much going.

37:39.600 --> 37:41.600
But I will use the...

37:41.600 --> 37:46.600
The micro bit has a microphone, so the other part I don't have working yet,

37:46.600 --> 37:52.600
but I can use voice commands with like high syllables just using our clapper library.

37:52.600 --> 37:58.600
You can take the intensity of the syllables and then you use commands with different numbers of syllables

37:58.600 --> 38:00.600
and you could actually voice command to it.

38:00.600 --> 38:02.600
So I could say sit, sit.

38:02.600 --> 38:06.600
And then I say go forward like three syllables.

38:06.600 --> 38:11.600
And I just detect those three beats and you can actually command it with your voice.

38:11.600 --> 38:16.600
Or you could command it with Octa Studio or you could command it with another micro bit.

38:16.600 --> 38:19.600
I mean there's just numerous ways that you can do these things.

38:19.600 --> 38:28.600
And now with the cool thing with Connect over VLE is you could connect up to this micro bit and you could change things on the fly.

38:28.600 --> 38:36.600
You could like open from board, see my program, you could share programs with each other by just connecting and opening the board.

38:36.600 --> 38:44.600
I mean it's fabulous what we can do now with micro blocks and wireless communications in the state of 15.

38:44.600 --> 38:49.600
So when we're going to have a workshop directly after this presentation,

38:49.600 --> 38:52.600
but I'm going to do a very quick spin.

38:52.600 --> 38:57.600
We had created a presentation for the SNAP conference last year and Snowpixels,

38:57.600 --> 39:03.600
the only thing that I started with, they died Bob Martin of microchip.

39:03.600 --> 39:09.600
And there are seven LEDs that we have college students on the top row actually soldered these things together.

39:09.600 --> 39:19.600
I didn't bring Snowpixels, I should, but every year they have Christmas in the park and it's like fifth graders, you know that age.

39:19.600 --> 39:26.600
So they get to build their own patterns, create patterns and have them on Christmas trees.

39:26.600 --> 39:29.600
And we've done this except COVID had a little bit of break.

39:29.600 --> 39:34.600
And then I made a little box for my grandkids so they could push buttons inside the box.

39:34.600 --> 39:40.600
You can see I just have a couple of natural and zero buttons and LEDs.

39:40.600 --> 39:44.600
And then I had a smart Christmas tree and pull it together with the Raspberry Pi.

39:44.600 --> 39:48.600
This is running a web things project that I worked on as a Godzilla.

39:48.600 --> 39:59.600
And I just thought you might want to see this is this year, little auto, and it's just exploring, you know, pushing the button.

39:59.600 --> 40:02.600
So he's kind of like not knowing exactly what's going on.

40:02.600 --> 40:07.600
But Emmy had done it last year, so she already kind of knew the drill.

40:07.600 --> 40:15.600
So she was already going through the boxes, the buttons like one at a time and exploring each one that works.

40:15.600 --> 40:25.600
But then because I could talk to the Raspberry Pi with my smartphone and when she was looking down and changing the buttons, then I was also changing the patterns.

40:25.600 --> 40:31.600
She's like, what? You know, it's really fun to get them.

40:31.600 --> 40:38.600
Anyway, it was very, very fun to do.

40:38.600 --> 40:41.600
And you know, there's bromance in the back here.

40:41.600 --> 40:46.600
I taught this like group of real engineers how to program these types of things.

40:46.600 --> 40:54.600
And then I'm part of this TechLimit organization, TechLimit program, which is a volunteer by the mentors funded by the US Department of State.

40:54.600 --> 41:00.600
We get women coming from 21 different countries in Africa, Central Asia and the Middle East.

41:00.600 --> 41:06.600
And they come and I load them up with this stuff because we really want micro blocks to be global.

41:06.600 --> 41:12.600
So here they are like in my house and I'm training this and next month I'm going to Nigeria to train this.

41:12.600 --> 41:17.600
I've been on two delegation trips, Uzbekistan.

41:17.600 --> 41:29.600
And then last year I went again to Uzbekistan, Kyrgyzstan, Kazakhstan, teaching at the American Corners.

41:29.600 --> 41:32.600
And then I left, I leave all the hardware behind.

41:32.600 --> 41:37.600
Yasser was fabulous to donate like these Pico Bricks kits.

41:37.600 --> 41:42.600
It's like this board only has the Raspberry Pi Pico.

41:42.600 --> 41:54.600
So there are 40 of these kits in Central Asia now that I was fabulous enough to donate to leave behind and they started using them.

41:54.600 --> 42:00.600
Then I had a gal from Morocco and she's already written her own little book to train the kids.

42:00.600 --> 42:07.600
And then she got a grant, she got the money now to teach the kids in the mountains where the earthquakes were.

42:07.600 --> 42:09.600
They don't have laptops up there.

42:09.600 --> 42:22.600
So she's handing her first Lego League, creating this project that teaches basic coding that all the kids up in the mountains will have is they'll have the micro bit and a robot.

42:22.600 --> 42:28.600
And they'll be able to use coding cards and button presses and stuff like that to learn coding.

42:28.600 --> 42:31.600
So even without the micro box part.

42:31.600 --> 42:36.600
And then I've been part of this summer camp, the Society of Women Engineers in the Bay Area.

42:36.600 --> 42:42.600
It has a summer camp every year that I've been doing since 2017 and we, again, teaching them.

42:42.600 --> 42:49.600
And most of these girls underprivileged starting their incoming freshmen and they haven't learned to code yet.

42:49.600 --> 42:57.600
And so micro box is a fabulous way of basically getting them into coding, getting them confident about coding before they go into high school.

42:57.600 --> 43:00.600
Because you don't want to be afraid of it, you want to have.

43:00.600 --> 43:07.600
And the experience of micro box, they did this class library and the commands, it's absolutely fabulous.

43:07.600 --> 43:11.600
And then I've roped in some of the tech women and some other friends.

43:11.600 --> 43:13.600
I did some other summer camps.

43:13.600 --> 43:16.600
And then we have a big following in China.

43:16.600 --> 43:18.600
It's fabulous how micro boxes pick up in China.

43:18.600 --> 43:24.600
So we here at Wu is one of the guys, they translate the entire website and host it in China.

43:24.600 --> 43:31.600
So if you go to microboxfund.cn, you'll find the entire website in Chinese with all the resources.

43:31.600 --> 43:35.600
They do competitions in the summer, this dot pack.

43:35.600 --> 43:37.600
I mean, they're full of hardware over there.

43:37.600 --> 43:42.600
So they've done numerous different things in competitions.

43:42.600 --> 43:48.600
Then Turkit, I'm going to let him speak for himself because he does this stuff in Turkey.

43:49.600 --> 43:52.600
And then John has done a whole bunch of stuff.

43:52.600 --> 43:55.600
I'm not going to skip through the videos.

43:55.600 --> 44:00.600
Ben Nott here in Sidi Lev has done fabulous work.

44:00.600 --> 44:06.600
So, and then Pierre, who's taking him back to the room and to the dev room and stuff.

44:06.600 --> 44:10.600
He's done fabulous work with Kododojo in the Netherlands.

44:10.600 --> 44:14.600
And he's the one who got us inspired to come to Boston for the first time last year.

44:14.600 --> 44:22.600
And we hope to have a set up booth over there in the booth area to have one of his donuts too.

44:22.600 --> 44:26.600
So anyway, I'm going to hand it off to Turkit.

44:26.600 --> 44:29.600
One slide back, can't be everybody wants to use.

44:29.600 --> 44:30.600
One slide back, that one?

44:30.600 --> 44:32.600
No, the one with the QR codes.

44:32.600 --> 44:33.600
Oh, this one, yeah.

44:33.600 --> 44:40.600
So we have a Discord server that you can join us and talk to us in real time.

44:40.600 --> 44:44.600
The website, microblocks.com, fun of course.

44:44.600 --> 44:47.600
And those need the right thumbnail to know more.

44:47.600 --> 44:49.600
Oh, that's something I wanted to know more.

44:49.600 --> 44:52.600
I think I can go to the student on the next slide.

44:52.600 --> 45:01.600
Okay, go to the microblocks.com website and then get the correct, this is the old one we had in the kitchen.

45:01.600 --> 45:08.600
And together with the other company, Robots.com, which John already mentioned, they did this product called Pickle Breaks.

45:08.600 --> 45:17.600
And Pickle Breaks was a precursor, Pickle Breaks with the Raspberry Pi version, was last year and they won all kinds of awards.

45:17.600 --> 45:23.600
And this year, we want to duplicate the same success with the microbeach version of it.

45:23.600 --> 45:33.600
And basically the idea behind Pickle Breaks is that anybody who has put kids together for projects knows that when you have like 10-some sensors,

45:33.600 --> 45:36.600
you can display motor controllers and stuff like that.

45:36.600 --> 45:45.600
And then you have this, it's still details of it, whether it's analog or digital or 3 volts or 5 volts or where's the ground, where's the power, all that stuff.

45:45.600 --> 45:51.600
You want to put something big like this together, it's almost impossible to get it right.

45:51.600 --> 46:00.600
So the idea behind the Pickle Breaks board is that everything is already pre-mounted and the circuit board that is on, why is everything together?

46:00.600 --> 46:07.600
Because you don't have any cables. All you have to do is provide a processor on it, which is in this case, you have a microbeach here,

46:07.600 --> 46:15.600
that you can stick in one or two into it. And then we need some power, so we get a little thing like a battery.

46:15.600 --> 46:17.600
The cameras work well.

46:17.600 --> 46:22.600
Okay, cool. I'm going to make the connection and then put it under the camera so you can see it working here, okay?

46:22.600 --> 46:29.600
So I have a servo motor here just to demonstrate that the motor portion is doing something.

46:29.600 --> 46:37.600
I plug the servo into the monitor servo ports. Lost my little rabbit here.

46:37.600 --> 46:41.600
Okay.

46:41.600 --> 46:54.600
Okay, and now, I have a battery pack with E-myon and then we're just going to plug that to the back of the board so they get some juice.

46:54.600 --> 46:59.600
And we should have the demo starting to run.

46:59.600 --> 47:02.600
Let's take this one.

47:02.600 --> 47:04.600
Is the battery?

47:04.600 --> 47:14.600
Turn it on, turn it on. Okay, so in the beginning, we have a little animation happening on the old end screen that you're going to see.

47:14.600 --> 47:21.600
And then all of the 10 sensors, because as John mentioned, microblocks is multitasking real-time.

47:21.600 --> 47:30.600
All the sensors are active that you see here. The one we don't work with in this demo is the pier sensor, which detects motion because it makes a lot of crazy things.

47:30.600 --> 47:35.600
And then the infrared sensor here is very timing sensitive because it has to decode the codes.

47:35.600 --> 47:42.600
So those two are releted out of the demo, but everything else you see will be operational and just show it, walk it through it.

47:42.600 --> 47:49.600
So I'm turning on the battery here and we start off with a little demonstration.

47:49.600 --> 47:59.600
It starts with a picogreggs OLED display, microblocks and a picogreggs robot come together and then we see the display.

47:59.600 --> 48:03.600
It's kind of a really blurry display.

48:03.600 --> 48:06.600
Okay, can you fix it?

48:06.600 --> 48:08.600
Wow.

48:09.600 --> 48:13.600
It actually got worse when you got closer to it.

48:13.600 --> 48:16.600
Yeah, okay, cool.

48:16.600 --> 48:21.600
So basically what I have here is I'm showing you a button status, which is this...

48:21.600 --> 48:24.600
Oops, now we lost it.

48:29.600 --> 48:33.600
Okay, so there's a button on the picogreggs button here.

48:33.600 --> 48:39.600
When you press that, it detects it and it puts the little LED on top.

48:39.600 --> 48:43.600
We have put that as your mirror is being measured.

48:43.600 --> 48:45.600
The new pixels are going on.

48:45.600 --> 48:49.600
And what I've done is to show you that things are working real time.

48:49.600 --> 48:55.600
I programmed the A button of the microband and the D button to make the new pixels moving in the direction.

48:55.600 --> 49:01.600
So if I just go in here and I just press A, you'll see them cycle to the left.

49:01.600 --> 49:03.600
And I do it this way and they go to the right.

49:03.600 --> 49:06.600
Everything else you see displaying here.

49:06.600 --> 49:09.600
We have really interesting sensors on this board.

49:09.600 --> 49:11.600
One of them is this gesture sensor here.

49:11.600 --> 49:15.600
Gesture sensor detects three different things mainly.

49:15.600 --> 49:20.600
It detects that your hand is moving over to sensor left or right or up and down.

49:20.600 --> 49:26.600
Or you can detect the proximity, which is how far your hand is this way from the sensor.

49:27.600 --> 49:35.600
So doing this over here, if I go near to the sensor, you'll see on the display here, you should say near and far.

49:35.600 --> 49:40.600
So you should say near, far.

49:40.600 --> 49:49.600
And then if I move my hand this way, it says right, left, up and down.

49:49.600 --> 49:54.600
And then you have a light sensor here which detects the ambient light.

49:54.600 --> 50:02.600
So if I put my finger on it, it gets dark and you see the LDR numbers go low and high.

50:02.600 --> 50:07.600
And then the other neat sensor is this sensor over here which is a touch sensor.

50:07.600 --> 50:13.600
And it has two buttons, four arrow keys and all the keyboard, zero key, notes, not it.

50:13.600 --> 50:15.600
So that's also active.

50:15.600 --> 50:22.600
And if I take my, I've made it so that if I put the pot above 512 value, it becomes active.

50:22.600 --> 50:25.600
So just simple tone.

50:25.600 --> 50:28.600
Do you hear?

50:28.600 --> 50:37.600
And as I'm pressing the keys here, we also display over there under the key what notes it is playing or detecting and things like that.

50:37.600 --> 50:47.600
So the other thing we have, I programmed this for the servo motor, which is the one with the rabbit head on it.

50:47.600 --> 50:51.600
Let's see if I bring that in the picture.

50:51.600 --> 50:53.600
Okay.

50:53.600 --> 51:01.600
I'm going to, if I press both the A and B buttons on the micro bit, it's going to make it rotate left and right two times.

51:01.600 --> 51:10.600
So I'm doing that.

51:10.600 --> 51:12.600
So that's the little motor action.

51:12.600 --> 51:20.600
And the other thing we have is this relay here, this black relay on the bottom of the board.

51:20.600 --> 51:24.600
So it's actually a AC switching circuit.

51:24.600 --> 51:29.600
And when you press the button on the micro grids, I programmed it to come on and off.

51:29.600 --> 51:43.600
And I don't have anything connected to it, but the fact that you can press it and the light comes on means if you plug anything in electrical here, like a light or something, you know, a device or gas if you have it on,

51:43.600 --> 51:51.600
you can put, putting a, turning the button on or off, you can have this thing drive your appliances at home if you want to do that kind of stuff.

51:51.600 --> 52:00.600
So that's like even beyond the realm of playing around with these little gadgets, you can actually control stuff in your house, a toaster or a coffee machine or something.

52:00.600 --> 52:08.600
You know, you could say at 6 o'clock in the morning, turn it on and the coffee machine comes on and it's the coffee that's ready for you.

52:08.600 --> 52:11.600
That's basically all the different features we have.

52:11.600 --> 52:16.600
One other thing we want to show you is all the documentation and stuff that goes with it.

52:16.600 --> 52:33.600
We have a wiki site and we have documented the entire board and all the modules, as well as in the library, the entire set of blocks that are used to program the ecobrips is fully documented.

52:33.600 --> 52:41.600
And for each and every block that controls, that's in the library, we provide a small demo code.

52:41.600 --> 52:50.600
And the demo codes are on our wiki page, but the neat thing is if you have like, MicroBlocks ID as John was showing you before when he was programming it,

52:50.600 --> 52:58.600
if you have that open and you open the wiki and you mouse-drag one of the demo codes onto the ID, it'll be instantly running.

52:58.600 --> 53:00.600
So you don't even have to write the code.

53:01.600 --> 53:06.600
These are the module documentation for each one of them, for example.

53:06.600 --> 53:14.600
And the micro-bit connected, how to load firmware, how to connect the battery, how to power up in two, three different ways the whole board.

53:14.600 --> 53:18.600
And then the demo programs, how to download it.

53:18.600 --> 53:23.600
And that's a better shot of the screen picture there, so you did see it earlier.

53:23.600 --> 53:27.600
And then we can look at the library blocks too.

53:28.600 --> 53:32.600
Okay, so this is the page with the library blocks.

53:32.600 --> 53:40.600
And as you can see, you know, all these different blocks that we use to control it, that's on the wiki page.

53:40.600 --> 53:51.600
And if you, for example, we touch the temperature block with the mouse, and when you click it, it will go to the expanded description of that particular block.

53:51.600 --> 53:59.600
And you have the, it shows you where on the board the sensor is, and the actual sensor is pictured, what block you're using it with.

53:59.600 --> 54:03.600
And then the demo program that's written, and it's sitting in the wiki.

54:03.600 --> 54:11.600
So can you open like a, just to show it to the drag and drop, you know, that picture onto it.

54:11.600 --> 54:13.600
You can just drag it from there to here.

54:15.600 --> 54:17.600
Yeah, okay, that's perfect.

54:17.600 --> 54:24.600
So John will take this code from here and drag and drop it onto the micro blocks idea so you can see how easy it is.

54:24.600 --> 54:26.600
You can just start playing with it.

54:26.600 --> 54:33.600
Micro blocks right here, we've got this code, and just drag it over here and drop it.

54:33.600 --> 54:36.600
And there you go, it's in the idea.

54:36.600 --> 54:42.600
And now if you have your board plugged in with Bluetooth, with cable or whatever, and you hit run, and off you go.

54:42.600 --> 54:46.600
And you can switch these codes, switch these programs.

54:46.600 --> 54:51.600
The programs, all the blocks work by themselves, you don't really need a program to run the blocks.

54:51.600 --> 54:55.600
You can just click on them and they will do whatever it is they do.

54:55.600 --> 55:01.600
But we wrote little programs to demonstrate because it's a little easier and it has descriptive things.

55:01.600 --> 55:07.600
And sometimes it combines one or two functions to make it more interesting than just a sensor value.

55:07.600 --> 55:08.600
It's not playing into it.

55:08.600 --> 55:15.600
No, I'm just saying that in order to get a script, a picture with your code in the picture,

55:15.600 --> 55:24.600
you just save a picture of this script and in the PNG's metadata it has a project blocks program.

55:24.600 --> 55:30.600
So then you just drag a picture into the scripting area and it has your code.

55:30.600 --> 55:36.600
And this new PicoBridge board with the micro bit is a Kickstarter right now.

55:36.600 --> 55:41.600
It started about a week ago, a few days ago, and it will be there, how long is it? A month or so?

55:41.600 --> 55:42.600
About a month.

55:42.600 --> 55:44.600
Yeah, about a month is going to be Kickstarter.

55:44.600 --> 55:50.600
So if you're interested, you can go in there and examine it and maybe do a pre-order and stuff.

55:50.600 --> 56:01.600
And not only you get this board, but after the show come back and see, for example, we have a car key here, a robot car here with tracks.

56:01.600 --> 56:04.600
So that's running over the components of the sensor.

56:07.600 --> 56:08.600
Is that it? Remote control?

56:08.600 --> 56:11.600
Yeah, it could be. Yeah, there's a remote control too.

56:11.600 --> 56:21.600
So this is just one of the projects. There's like 25 or 30 different projects that you can build using these nicely laser cut wood parts.

56:21.600 --> 56:31.600
And you put them together in kits and then you take any one of the sensor components or motor components from the board and build it into the project.

56:31.600 --> 56:33.600
And off you go.

56:34.600 --> 56:46.600
This is the Raspberry Pi PC version of it, but you can see through basically these little parts, you just like snap and break the parts.

56:46.600 --> 56:52.600
And that's what you break the bricks off. When you first buy the board, it's wirelessly connected through these little strips.

56:52.600 --> 56:57.600
I mean, it's wired. You know, it's like the PC board is actually connected.

56:57.600 --> 57:03.600
And you break them apart, then you have to connect the cable.

57:03.600 --> 57:07.600
There's grow cables that go between the main board and these things.

57:07.600 --> 57:13.600
So I think we should wrap up at this point because it's slightly over time.

57:13.600 --> 57:15.600
I was going to ask you a question.

57:15.600 --> 57:16.600
Yeah, of course.

57:16.600 --> 57:21.600
You mentioned Chinese, but generally language support.

57:21.600 --> 57:22.600
Right.

57:22.600 --> 57:30.600
So we have a bunch of languages and you can switch the blocks to different languages.

57:30.600 --> 57:42.600
We also have on our website, we have a Learn page and we have some of our documentation in different languages.

57:42.600 --> 57:45.600
I don't know if we have any.

57:45.600 --> 57:58.600
If you're on the wiki pages, let's say on our Chrome browser or whatever, if you do a right click translate, it really translates beautifully into any language that you want.

57:58.600 --> 58:08.600
And therefore we didn't bother going to writing separate versions of all the different things because Google Translate is pretty good these days or whatever version that you're going to use.

58:08.600 --> 58:10.600
Okay, thank you.

58:10.600 --> 58:11.600
Thank you.

58:11.600 --> 58:12.600
Thank you.

58:12.600 --> 58:13.600
Thank you.

58:13.600 --> 58:17.120
So I think next up in here is actually a workshop on Microsoft's

58:17.120 --> 58:18.120
Will this take?

