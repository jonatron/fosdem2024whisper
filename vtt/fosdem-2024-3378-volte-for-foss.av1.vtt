WEBVTT

00:00.000 --> 00:07.000
I'm not sure if you should attach the mic.

00:07.000 --> 00:08.000
Maybe.

00:08.000 --> 00:11.000
One of you should attach the mic.

00:11.000 --> 00:12.000
Maybe.

00:12.000 --> 00:13.000
Okay.

00:13.000 --> 00:18.000
Do you want this one or me and Mike?

00:18.000 --> 00:19.000
Me and Mike.

00:19.000 --> 00:21.000
I'll give you this mic.

00:21.000 --> 00:23.000
How can I use it?

00:23.000 --> 00:28.000
So put this in your pocket and this one you attach to your...

00:28.000 --> 00:30.000
Yeah.

00:30.000 --> 00:35.000
Is it correct?

00:35.000 --> 00:38.000
Because I'm bad with mics.

00:38.000 --> 00:40.000
Yeah, that should work.

00:40.000 --> 00:42.000
Can you put it up here?

00:42.000 --> 00:44.000
Maybe like this?

00:44.000 --> 00:46.000
No.

00:46.000 --> 00:47.000
No.

00:47.000 --> 00:50.000
I'll just speak and test it.

00:50.000 --> 00:52.000
Okay.

00:52.000 --> 00:54.000
Let's try it once.

00:54.000 --> 00:56.000
Let's try it once.

01:24.000 --> 01:27.000
It shows here. Yeah, it shows there but not...

01:27.000 --> 01:29.000
It's here.

01:32.000 --> 01:34.000
I have a green light.

01:46.000 --> 01:49.000
Are you going to...

01:49.000 --> 01:51.000
How do you say that?

01:51.000 --> 01:54.000
I will do my...

02:00.000 --> 02:04.000
Alright, next up we have a talk called Volte for Force.

02:04.000 --> 02:05.000
It's over LTE.

02:05.000 --> 02:08.000
I'm pretty sure we all want to see that on Linux Mobile.

02:08.000 --> 02:13.000
And this talk was originally supposed to be given by Marius from UbiPort.

02:13.000 --> 02:18.000
But Marius is not here today so please give it up for Nikita and Ivan instead.

02:22.000 --> 02:27.000
So, hello everyone.

02:27.000 --> 02:34.000
I'm Nikita Ukhenko from the UbiPort community and also looking for Yula.

02:34.000 --> 02:37.000
People mostly know me from Telegram as NotKid.

02:37.000 --> 02:41.000
And since Marius is not here, we cannot be here to the replacement

02:41.000 --> 02:47.000
but we try to say what we have learned so far when trying to make the evolves in the same work

02:47.000 --> 02:50.000
on Ubuntu Touch and other mobile industries.

02:50.000 --> 02:55.000
Currently it's still HMS but I hope that we can get more people involved into this

02:55.000 --> 03:01.000
and if you want you can stay here to discuss on how we can implement the Volte 3

03:01.000 --> 03:06.000
on more Linux distros and what can we do together in our understanding.

03:06.000 --> 03:08.000
Can you turn up the volume like...

03:08.000 --> 03:10.000
You put the mic up or something.

03:10.000 --> 03:11.000
Yep.

03:11.000 --> 03:13.000
Okay, is it much better now?

03:13.000 --> 03:14.000
Yeah.

03:14.000 --> 03:15.000
Great.

03:15.000 --> 03:23.000
And the chat is not yet so can you raise it up more into the...

03:23.000 --> 03:25.000
Oh, yeah, that's a delay.

03:25.000 --> 03:26.000
Okay, good.

03:26.000 --> 03:27.000
Just go on, yeah.

03:27.000 --> 03:28.000
Yeah.

03:28.000 --> 03:33.000
So, I expect people in this room are familiar with voice over LTE and what is it for

03:33.000 --> 03:38.000
but briefly just a communication standard for voice calls over LTE networks.

03:38.000 --> 03:44.000
And there are similar standards for voice over Wi-Fi and voice over 5G networks

03:44.000 --> 03:49.000
which is called VOR NR basically.

03:49.000 --> 03:53.000
The main reason that we have to worry about the things is that GSM and LTE networks

03:53.000 --> 04:00.000
are now becoming scarce resource and if you want to make calls from our mobile Linux distros

04:00.000 --> 04:04.000
we need to implement this VOR LTE at some point.

04:04.000 --> 04:10.000
And if you had voice over Wi-Fi it allows other cool things like when you're in a roaming

04:10.000 --> 04:19.000
you can try to connect to your mobile operator endpoint and make local calls to your home

04:19.000 --> 04:23.000
country at local prices, not roaming prices.

04:23.000 --> 04:28.000
So, let's start from how it currently works on Android.

04:28.000 --> 04:36.000
There's a picture with the TelephoneLinux website but the point here is that there is a modern

04:36.000 --> 04:37.000
firmware.

04:37.000 --> 04:45.000
On top of it there is a modern interface library or a library that is used by RIL which stands

04:45.000 --> 04:49.000
for Radio Interface Layer on Android.

04:49.000 --> 04:56.000
On top of it it provides an HDDL server which implements HDDL radio interface and on the

04:56.000 --> 05:04.000
recent Android versions it became ideal instead but that's not what we care about at the moment.

05:04.000 --> 05:14.000
So, the frameworks part are the ones that implement the communication with HDDL radio interface

05:14.000 --> 05:22.000
and there are vendor specific IMS parts which plug into IMS Android interfaces but the vendor

05:22.000 --> 05:30.000
implementation is closed source and unfortunately device specific as well or it is chip specific.

05:30.000 --> 05:38.000
When we go to Ubuntu Touch we keep those four bottom layers but we don't have the frameworks

05:38.000 --> 05:39.000
anymore.

05:39.000 --> 05:46.000
And here the problem comes that the IMS parts are provided by the frameworks on Algam and

05:46.000 --> 05:54.000
we have instead of frameworks we have Ophono that talks to Radio Interface and Ophono is

05:54.000 --> 05:59.000
talked to by Telepathy, Ophono or other layers on TelepathyCondistro.

05:59.000 --> 06:07.000
On SelfieShow as we use TelepathyRing but in just implementation details.

06:07.000 --> 06:19.000
So, if we don't have the IMS part of frameworks what can we do now?

06:19.000 --> 06:22.000
From here we have a motif option.

06:22.000 --> 06:29.000
First we can reimplement the Android frameworks part of IMS so it can still talk to vendor

06:29.000 --> 06:36.000
interface and that's how it's currently done on SelfieShow as for Xperia 10.2 and 10.3.

06:36.000 --> 06:41.000
It's also been tested to work for other Qualcomm devices but unfortunately the plugin by YOLA

06:41.000 --> 06:49.000
is currently closed source as it relies on Qualcomm specific headers and I think YOLA

06:49.000 --> 07:00.000
is afraid of some legal stuff that's going to happen if it's publicly released.

07:00.000 --> 07:08.000
On Obuntu Touch we've been trying to use the same plugin around here but the problem is

07:08.000 --> 07:14.000
that the Qualcomm IMS part is black box and sometimes it works and sometimes it doesn't

07:14.000 --> 07:16.000
for no reason.

07:16.000 --> 07:22.000
It's quite hard to actually understand what's happening because basically what's the more

07:22.000 --> 07:28.000
the Ophono part sending is just asking the model, hey can you connect to the IMS for me

07:28.000 --> 07:32.000
and the model just answers yes I can and that's it.

07:32.000 --> 07:38.000
So you don't know when it's connecting, why it's connecting, how it's connecting and it's a complete black box.

07:38.000 --> 07:44.000
So, as you see in the picture we can try to write an IMS plugin and we plug it between

07:44.000 --> 07:50.000
the radio interface and Ophono or some other telephony layer.

07:50.000 --> 07:55.000
It works but it's device specific and it's a bit of a pain.

07:55.000 --> 08:01.000
I've been trying to write a similar plugin for many of the devices now and the idea of it is very simple

08:01.000 --> 08:06.000
like you tell the model, okay please enable IMS, here is the IMS IP and connect to it,

08:06.000 --> 08:11.000
copy and config from some pass but whether it works or not it's a bit of luck.

08:11.000 --> 08:13.000
Dependent on your career.

08:13.000 --> 08:19.000
The positive of this approach is actually that you don't need a 4G network knowledge

08:19.000 --> 08:25.000
and so you don't need voice over utility knowledge but it's a black box and if it works,

08:25.000 --> 08:28.000
if it works you don't know why.

08:28.000 --> 08:33.000
Yeah, so second option we have, it's very similar to the first I mentioned

08:33.000 --> 08:37.000
but it's maybe interesting for mainland people and that's why I'm mentioning it.

08:37.000 --> 08:45.000
So we can ignore completely the ICTL Android parts and you just write a library of a driver

08:45.000 --> 08:51.000
that talks to modem firmware directly.

08:51.000 --> 08:56.000
That's how it currently works on Pinephone actually because on Pinephone the Qualcomm modem

08:56.000 --> 09:06.000
is a separate USB modem and you can tell the modem via QMI to enable IMS and voice over utility.

09:06.000 --> 09:15.000
So it's the same black box approach but on a bit lower level and I don't think we will use it on Halium distros

09:15.000 --> 09:24.000
because it will cause MS if Android and direct modem interface communication done at the same time.

09:24.000 --> 09:26.000
But that's possible, yeah.

09:26.000 --> 09:35.000
This approach requires at least a little bit understanding of the network stack.

09:35.000 --> 09:39.000
And you need to also know your modem firmware protocol.

09:39.000 --> 09:45.000
On Qualcomm it's QMI as mainland people probably know and on media it's interestingly 80 commons

09:45.000 --> 09:49.000
but of course it modifies it up 80 commons.

09:49.000 --> 09:56.000
And then the most annoying approach but also maybe the most interesting is that we can

09:56.000 --> 10:04.000
attempt the modem to set up a data connection to MSAPN and interface with mobile service operator services

10:04.000 --> 10:11.000
on network transport layer and it becomes a real mess of senders and protocols.

10:11.000 --> 10:17.000
Basically that's the end goal but we wanted to show you how the voice over utility stack looks like

10:17.000 --> 10:19.000
and that's the picture.

10:19.000 --> 10:25.000
It's not only the voice over utility, here's the full 4G stack how it looks like

10:25.000 --> 10:33.000
and the voice over utility in the network is going over just a second.

10:33.000 --> 10:36.000
So this is the TCP IP network stack.

10:36.000 --> 10:44.000
This is the transport protocol used for the 4G network and the voice over utility network

10:44.000 --> 10:48.000
and then we're going for the stack which we showed you previously.

10:48.000 --> 10:59.000
So our end goal is trying to implement this on software so it would be open source for every distro to use

10:59.000 --> 11:03.000
but as you can imagine it's quite a challenge.

11:03.000 --> 11:12.000
It can also allow for some interesting things to do like there is a project to perform the SIM card authentication

11:12.000 --> 11:21.000
and set up encrypted AKV2 IPsec tunnel to the mobile operator endpoint from your laptop.

11:21.000 --> 11:27.000
So it makes it a bit easier to debug if you can just use the phone for authentication

11:27.000 --> 11:34.000
and then you set up the voice over Wi-Fi connection from your host PC.

11:34.000 --> 11:40.000
And there are multiple projects who try to implement the open source telephony.

11:40.000 --> 11:48.000
The most prominent one is currently DoaBungo for IMS services

11:48.000 --> 11:52.000
but sadly it has been un-maintained for the last five years or so.

11:53.000 --> 11:59.000
It's in a working shape but you'll probably need to figure out a lot of throw-angels later on.

11:59.000 --> 12:06.000
However, courtesy of Mohammed who also wanted to make it here to Brussels

12:06.000 --> 12:09.000
but he was refused a Belgian video suddenly.

12:09.000 --> 12:19.000
We have a screenshot of DoaBungo connecting to the mobile operator endpoint via APsec tunnel for voice over Wi-Fi

12:19.000 --> 12:26.000
and it tried to receive a call while it couldn't because audio part wasn't really working.

12:26.000 --> 12:28.000
But at least it could receive an SMS.

12:28.000 --> 12:39.000
Here are those symbols you see because SMS uses ETF16 text encoding and the console is ETF8.

12:39.000 --> 12:44.000
It did receive something and that's where I am currently.

12:45.000 --> 12:55.000
If to summarize the set of part is that we have voice over LTE working with device-specific...

12:55.000 --> 13:03.000
using Android radio interface on selfish OS and we won't touch Android on this selfish OS plugin

13:03.000 --> 13:05.000
but only for specific welcome devices.

13:05.000 --> 13:10.000
We have something cooking for MediaTek and we tried the third option for implementing

13:10.000 --> 13:15.000
and we are facing with IMS services in software.

13:15.000 --> 13:21.000
Both of them are possible but we are not there yet.

13:26.000 --> 13:33.000
Since Marius is not here he cannot speak about all the operator wordnesses he encountered over the road

13:33.000 --> 13:39.000
but we are open for discussion and if there are other mobile projects who want to get voice over LTE working

13:39.000 --> 13:42.000
it would be nice to see how we could collaborate.

14:04.000 --> 14:06.000
Do we have any questions?

14:09.000 --> 14:11.000
Maybe in the chat room?

14:16.000 --> 14:18.000
That's a question. Can you pass the mic?

14:21.000 --> 14:25.000
Okay, so you are going to touch. I get that right.

14:25.000 --> 14:28.000
Who is developing a funnel?

14:30.000 --> 14:36.000
I was wondering who is pushing these kinds of efforts forward.

14:36.000 --> 14:38.000
It's interesting question.

14:38.000 --> 14:40.000
Even Ophono is not...

14:40.000 --> 14:43.000
We have multiple folks of Ophono.

14:43.000 --> 14:47.000
The upstream one is... I don't know how other developers of upstream one.

14:47.000 --> 14:51.000
It was sponsored by Intel at some point, by Migo,

14:51.000 --> 14:55.000
but they have some community maintenance for Ophono.

14:55.000 --> 15:02.000
But the Ophono version we are using for is developed by YOLO for selfish OS

15:02.000 --> 15:05.000
and it's heavily forked from the upstream Ophono sadly,

15:05.000 --> 15:14.000
but they have been enforced by Adam Peek to bring latest Ophono changes back into selfish OS fork.

15:14.000 --> 15:19.000
So it's closer to upstream Ophono and it can be used for pine for selfish OS.

15:19.000 --> 15:28.000
And the Ophono binder plugin I've been talking about has been developed by Slava Monich also inside YOLO.

15:29.000 --> 15:36.000
Is there any cooperation with YOLO or are you just taking their stuff and developing it forward?

15:36.000 --> 15:41.000
I have a style of fish, so I'm interested in it from the user perspective.

15:41.000 --> 15:43.000
It never worked for me, by the way.

15:48.000 --> 15:55.000
Obviously, the stuff on the fork is open source and when it's possible we try to make upstream MMRs,

15:55.000 --> 16:01.000
but the code base is quite diverse, so currently we are taking from Ophono and we will be using it.

16:05.000 --> 16:08.000
So I thought that's a question in the chat.

16:08.000 --> 16:12.000
So somebody asked, on the Librim I learned that it can be very carrier-specific,

16:12.000 --> 16:16.000
whether voice over AT works or not, and it carries white or black list specific modems.

16:16.000 --> 16:19.000
Is there anything we can do in this regard, like spoofing modems?

16:20.000 --> 16:25.000
So there are multiple carrier-level specific things.

16:25.000 --> 16:35.000
First, each one has vendor-specific configs provided by its vendor.

16:35.000 --> 16:42.000
For example, on Qualcomm you have vendor-firmware MNT partition, it has image-modem subfolder,

16:42.000 --> 16:51.000
and for many carriers there is carrier-specific, modem-firmware configuration,

16:51.000 --> 16:57.000
and it's very much assigned black box, we cannot do anything about it.

16:57.000 --> 17:02.000
Of course, we can try to load configuration from a different carrier and whatnot,

17:02.000 --> 17:07.000
but as Alan would say from Sony, do not do this, you will break the carrier's network.

17:08.000 --> 17:14.000
So I think the detection of modem on carrier-level is mainly done by few parts.

17:14.000 --> 17:20.000
First is the EMI of your phone, which you cannot spoof in most cases, and there is also user-agent.

17:20.000 --> 17:23.000
The user-agent part when connecting to the...

17:23.000 --> 17:28.000
I'm a service on the network stack level, of course it can be spoofed.

17:29.000 --> 17:35.000
Okay, thanks. Any more questions from RUM? Yes, at the very back. One sec.

17:38.000 --> 17:46.000
So a bit related to this, are you encountering any pushback from carriers,

17:46.000 --> 17:50.000
because you could potentially be messing with our stack?

17:50.000 --> 17:56.000
I guess we are too small for carriers to care about us, unless we break something to bed,

17:56.000 --> 17:59.000
so not at the moment at least, but on us.

18:01.000 --> 18:04.000
Do we have another question in the room? Yeah.

18:08.000 --> 18:13.000
Hi, just by chance I was on the schedule for later today.

18:13.000 --> 18:16.000
There's some talk, ProvideVol.te using OpenZips.

18:16.000 --> 18:18.000
Have you ever heard of OpenSips?

18:18.000 --> 18:20.000
And is that interesting for us?

18:23.000 --> 18:30.000
Yeah, I haven't heard of them, but it would be nice to check the talk and see if it can be run on Linux.

18:30.000 --> 18:32.000
Can I get some?

18:35.000 --> 18:41.000
Just to expand on the previous question a little bit, in order to not have problems with the carriers,

18:41.000 --> 18:47.000
I'm also trying to set up just a 4G network with a software-defined radio, a private one,

18:47.000 --> 18:51.000
so we can test whatever we like without breaking stuff, you know.

18:52.000 --> 18:55.000
Okay, maybe from the chat again.

18:57.000 --> 19:02.000
Are there any plans to upstream Ophono changes to kernel.org or Ophono version?

19:02.000 --> 19:07.000
I don't know, I cannot speak for Ophono developers at the other side.

19:09.000 --> 19:10.000
Okay.

19:11.000 --> 19:13.000
Is there another question?

19:13.000 --> 19:15.000
Okay.

19:19.000 --> 19:22.000
Yeah, I guess then we close it. Give another round of applause, please.

19:33.000 --> 19:35.000
Don't forget the mic.

19:35.000 --> 19:37.000
The mic?

19:37.000 --> 19:39.000
Yeah.

19:39.000 --> 19:41.000
Would you buy the pack already, the mic?

19:41.000 --> 19:43.000
Yeah, I'll take it.

19:45.000 --> 19:49.000
We talked in video chat at some point from SusmoCom.

19:49.000 --> 19:51.000
Yeah, yeah, yeah, yeah.

19:51.000 --> 19:52.000
It's good, nice.

19:52.000 --> 19:58.000
Yeah, so this is also your, how do you say that, your field.

19:58.000 --> 20:01.000
Did you get any further with it or?

20:01.000 --> 20:04.000
No, not really, no.

20:04.000 --> 20:09.000
I think it's a little bit with everyone that is like, we married that guy who's working,

20:09.000 --> 20:13.000
but couldn't figure out why if some last work, some doesn't work.

20:15.000 --> 20:23.000
Yeah, so I don't know, we just need people to like to have a different approach with everybody.

20:23.000 --> 20:24.000
Is this your bag?

20:24.000 --> 20:27.000
No, it's the Coulance here, so I like to...

20:28.000 --> 20:31.000
Are you also late for the mobile mic?

20:34.000 --> 20:37.000
Yeah, I guess I'll make you check it out.

20:47.000 --> 20:48.000
Thank you.

21:05.000 --> 21:07.000
I think the refuges are here.

21:07.000 --> 21:09.000
I got an avid setup here.

21:09.000 --> 21:11.000
What is the score on my...

21:11.000 --> 21:15.000
Here's the HMI and here's the...

21:15.000 --> 21:17.000
Just be safe, whatever you need.

21:17.000 --> 21:18.000
Just be...

21:18.000 --> 21:19.000
Okay.

21:25.000 --> 21:28.000
I mean, it's also small.

21:35.000 --> 21:37.000
Nothing that much specific.

21:40.000 --> 21:43.000
Looks really nowhere.

21:48.000 --> 21:53.000
And you have some more minutes for the end of the 30, so it's like 9 minutes.

21:53.000 --> 21:54.000
Okay.

22:04.000 --> 22:07.000
I have so many problems with the inters, because I would say like...

22:07.000 --> 22:12.000
I mean, you're gonna do a little bit of this, but I'm like, let's say like...

22:12.000 --> 22:15.000
Okay, er...

22:15.000 --> 22:17.000
Check the camera.

22:20.000 --> 22:23.000
I'm like, fuck, I can't say my name.

22:23.000 --> 22:25.000
I'm like, seriously.

22:25.000 --> 22:28.000
I think the ref I have is the one I was saying about.

22:28.000 --> 22:31.000
I was like, I should be shooting myself more often.

22:31.000 --> 22:34.000
I don't know.

23:01.000 --> 23:03.000
I don't know.

23:13.000 --> 23:15.000
I'm gonna get a step-by-step.

23:31.000 --> 23:33.000
Sorry.

24:01.000 --> 24:03.000
I'm sorry.

24:03.000 --> 24:05.000
So I had to write something.

24:05.000 --> 24:07.000
But they felt like, you know,

24:07.000 --> 24:09.000
I should have written something.

24:09.000 --> 24:11.000
I could have thought of something.

24:11.000 --> 24:13.000
Otherwise, I could have done that.

24:13.000 --> 24:15.000
I don't want to.

24:15.000 --> 24:17.000
I don't want to.

24:17.000 --> 24:19.000
I was thinking the very smallest bit.

24:19.000 --> 24:21.000
I'm not sure.

24:21.000 --> 24:23.000
I'm not sure.

24:23.000 --> 24:25.000
I don't know.

24:25.000 --> 24:27.000
I'm just wondering.

24:27.000 --> 24:29.000
I still have a few questions.

24:29.000 --> 24:33.000
Have you talked to me before about the Dragon Messenger?

24:33.000 --> 24:35.000
No.

24:35.000 --> 24:39.000
I'm just trying to set it.

24:39.000 --> 24:43.000
What was your voice before?

24:43.000 --> 24:45.000
I was just wondering.

24:45.000 --> 24:47.000
I was just wondering.

24:47.000 --> 24:49.000
I was just wondering.

24:49.000 --> 24:51.000
I was just wondering.

24:51.000 --> 24:53.000
I was just wondering.

24:53.000 --> 24:55.000
I was just wondering.

24:55.000 --> 24:57.000
I was just wondering.

24:57.000 --> 24:59.000
I was just wondering.

24:59.000 --> 25:01.000
I was just wondering.

25:01.000 --> 25:03.000
I was just wondering.

25:03.000 --> 25:05.000
I was just wondering.

