WEBVTT

00:00.000 --> 00:11.400
Good morning. I'm Tim. I work as a performance specialist at Akamai, but that's not what

00:11.400 --> 00:18.120
my talk is about. And everybody here in this room has two things in common. I assume. First,

00:18.120 --> 00:23.680
we love web performance. And two, how many of you think already about food? Because I'm

00:23.680 --> 00:29.520
starving. And actually, if you don't know what to eat in the next days, when you're

00:29.560 --> 00:35.560
here in Belgium, there is this waffle burger at a Belgian restaurant called Quick. And if

00:35.560 --> 00:41.560
we are performance focused, Quick is also a nice way to get there. Now, next to my day job at

00:41.560 --> 00:48.440
Akamai, I also run the largest scale modeling websites in the world. With 50,000 visitors a

00:48.440 --> 00:56.240
day and 6 million pay juice a month. It's a bit too big for the talk of Tvetan earlier today. And

00:57.240 --> 01:03.800
it's not only the largest scale modeling website in the world. It's also the fastest one. And this,

01:03.800 --> 01:11.360
thank you. Thank you. Thank you. And this, despite the fact that I run banner advertising,

01:11.360 --> 01:19.240
because normally banners means slow, slow, slow and annoying for your end users. And this talk is

01:19.240 --> 01:26.680
all about how I switch to an open source ad server solution in order to give my users a better

01:26.680 --> 01:31.880
privacy. And then also because I love performance, make sure that the performance is lightning fast.

01:33.840 --> 01:45.080
Who remembers this day? One. Yes. GDPR. Correct. This was the this was when GDPR almost six years

01:45.120 --> 01:51.600
ago was introduced. And if we travel back in times to six years ago, my website back then I used Google

01:51.600 --> 01:57.400
AdSense and a few other ad serving solutions. And what is great about these solutions, you can just

01:57.400 --> 02:07.400
add some JavaScript on your website, and you start earning money. That's it. Now, the problem is that

02:08.280 --> 02:14.520
when you then you look at your waterfall that you see all these extra requests to third parties,

02:14.520 --> 02:20.040
third parties calling third parties, fonts are downloaded, CSS, JavaScript, cookies are set,

02:20.040 --> 02:26.880
tracking cookies, a lot of stuff happens. And this is a tool by my ex colleague Simon Herne,

02:26.880 --> 02:33.200
request map that shows you the blue bar, the blue circle at the bottom is the actual website. And

02:33.680 --> 02:38.560
then you have all these spiders crawling off additional requests going to additional things. And

02:38.560 --> 02:46.800
from a privacy perspective, this is not ideal. And this is all you need to do to create a nice

02:46.800 --> 02:56.040
banner of in this case, a hamburger. Now, when I started, this was how my website looked, I was

02:56.040 --> 03:01.440
basically chillax. This was just how the web worked. This was the only way there was no different

03:01.520 --> 03:08.480
way. This was just how the web worked. Now, in April 2018, one month before GTPR, I was like a

03:08.480 --> 03:13.840
little bit in panic. I was hoping that the ad providers, not only Google AdSense, but all the

03:13.840 --> 03:18.880
others would come up with a privacy friendly version for Europe, and would therefore also make

03:18.880 --> 03:24.880
the websites faster. And in April, nothing was moving. So I looked for a plan B. And luckily,

03:24.880 --> 03:32.560
I was able to find a plan B, which was open source. So revive open source ad server. And why did I

03:32.560 --> 03:37.600
pick it? It was PHP based. My website was PHP. So it's good. It was already five years old. So it

03:37.600 --> 03:43.840
was like not brand new. So it was already proven. And it had fairly stable releases at a regular

03:43.840 --> 03:49.920
time. Today, this open source project is maintained by the Aqua platform by Eric and his team. They

03:49.920 --> 03:56.560
also run a, of course, paid hosted version of the solution. But I use the download free version.

03:57.680 --> 04:01.920
So what can you do very quickly? Everything you expect from an ad server. You can manage your

04:01.920 --> 04:07.600
campaigns. People can sign up for to start adding ads on your website. Basically, everything which

04:07.600 --> 04:13.280
is needed to send to serve ads on your website isn't there. And this is the result.

04:14.160 --> 04:19.200
Remember before that spider going everywhere, everything hosted on the same domain. So from

04:19.200 --> 04:26.640
my privacy perspective, I was back in chill X mode. Now, let's talk about performance.

04:30.080 --> 04:36.640
Just by implementing the open source solution on my own systems also gave me some performance

04:37.120 --> 04:43.920
gains by design. And the first is here revive itself does not require all these requests. So

04:43.920 --> 04:49.120
that's the first thing. But as you can see, what is missing here are things like DNS lookups,

04:49.120 --> 04:54.000
TCP connections as a cell handshakes in order to talk to different systems. So that basically means

04:54.000 --> 05:00.960
that everything which is needed to serve that hamburger banner as soon as possible, it's not

05:01.920 --> 05:08.240
delayed, which is good. The other benefit is we already talked about IMP before and JavaScript

05:08.240 --> 05:14.480
performance. The library broadly compressed only 1.7 kilobytes. And typically the more bytes you

05:14.480 --> 05:20.400
ship and JavaScript bytes you ship the less good for things like IMP first input delay total blocking

05:20.400 --> 05:26.560
time. So it's a fairly small library. Other things I work for a CDN so I can run my website on the

05:26.560 --> 05:32.160
CDN. So also use the image optimization services to make sure that I return modern formats like

05:32.160 --> 05:39.760
AVIF or web P, et cetera. And then finally, last but not least, the fact that everything is under

05:39.760 --> 05:45.760
my control also means that I fully control priorities things like fetch priority high,

05:45.760 --> 05:53.760
fetch priority low, preload the order in the page. I fully control the order of things and I

05:53.760 --> 05:58.560
decide do I want the banner to be served first or do I want the actual content to be served

05:58.560 --> 06:04.560
to be served first. This of course assumes that your web server or your CDN listens to the priorities.

06:06.400 --> 06:13.920
Now, this was the basics. Just setting up revive great for performance, great for privacy. Now,

06:14.880 --> 06:19.920
good is not good enough. And in order to get these very, very good results, you still need to do a

06:19.920 --> 06:25.520
little bit more. So let me explain you that. So we'll first look at LCP or largest contentful paint.

06:26.320 --> 06:32.560
Just as an example, what is here the LCP element on this page should be fairly obvious.

06:33.680 --> 06:38.800
It's the largest image on the screen, which is that nice helicopter, which I'm currently building.

06:40.560 --> 06:48.480
Now, that's easy. Second one. What is the largest contentful paint element here?

06:49.440 --> 06:57.360
Sorry, it's early and I'm hungry. It's actually as expected, the top one, because that's the biggest

06:57.360 --> 07:03.120
image. Now, this is not what my users perceive as the LCP element, because they come for that small

07:03.840 --> 07:13.280
picture of the car. Now, what is the problem? This image is late discovered. It's first needs

07:13.280 --> 07:18.240
JavaScript to run, then it needs to do a request to a PHP server to know which ad to serve.

07:18.560 --> 07:23.200
And then only the image will download. So it's late discovered, and it means it will come in

07:23.760 --> 07:33.040
of potentially a few seconds later. So what is the best solution? Just send more bytes.

07:35.600 --> 07:43.920
So my website is driven by a lot of contributors. So when somebody uploads a smaller image,

07:44.720 --> 07:50.800
I basically nudge some other people like, Hey, do you have a bigger image of this one? So

07:51.520 --> 07:58.560
my LCP gets better. Not only my LCP, people also like to watch nicer pictures as well. Now, that's

07:58.560 --> 08:04.880
a plan A. That's the best. Now, I'm not sure, not always sure if it actually happens. So sometimes

08:04.880 --> 08:09.600
I do have pages where the images are too small compared to the banner.

08:09.680 --> 08:17.920
And what is my plan B? I call that a fast fallback banner. And it's exactly what it's doing. It's

08:17.920 --> 08:24.240
fast. And it's a fallback. So in order to make it fast, you need to make sure that it's early

08:24.240 --> 08:29.440
discovered. So it's just it becomes a standard image tag. So basically my PHP code, I check,

08:29.440 --> 08:34.560
Hey, when I generate this page, I already know the size of the image I will embed.

08:35.520 --> 08:41.360
Rather than using the JavaScript based version, which is slow, I fall back to a default image

08:41.360 --> 08:48.000
variant. The downside is that from an ad perspective, I can no longer track revenue. I can no longer

08:48.000 --> 08:53.280
know exactly which banner should be targeted. Yes or no. So I lose some functionality. But

08:53.280 --> 08:59.520
typically on a website, you don't always sell all your potential banner locations. So you anyway

08:59.600 --> 09:06.240
have some, for example, I sponsor certain scale modeling events, or I have some coffee mugs of

09:06.240 --> 09:11.600
my website with internal banners. So I can basically perfectly display these non revenue

09:11.600 --> 09:17.680
generating banners, but keep performance. And here is then what you see is request number four

09:18.480 --> 09:24.800
is the LCP element, which is requested quite soon rather than somewhere at the end.

09:24.960 --> 09:32.960
That was for LCP, making sure that it's green under all conditions. Next is CLS,

09:32.960 --> 09:39.520
CLS cumulative layout shift. And this is something everybody knows, typically on newspaper websites,

09:39.520 --> 09:45.840
you're looking at a page, you're, you're reading the content and then suddenly bam, everything

09:45.840 --> 09:52.080
goes down because the banners start loading. Now the solution for this is quite simple.

09:52.240 --> 09:59.920
Just add a class, add a placeholder that the browser while rendering and painting everything

09:59.920 --> 10:05.600
on the screen makes room for them already reserves the room for that nothing special.

10:06.880 --> 10:15.520
Now, unfortunately, this was not good enough. Why not? Because in add systems, and in all

10:15.520 --> 10:20.400
add systems, you can do you have basically the choice between user experience and making more

10:20.400 --> 10:27.680
experience and making more money. And the top one is the fixed zone. You basically say, hey,

10:27.680 --> 10:34.160
in this location, when it's a fixed zone, I only want to show banners which are this size 300 times

10:34.160 --> 10:41.680
250 pixels. Now, you can also have flexible zones. You hear I can define, you know what I have my

10:41.680 --> 10:47.360
design allows 300 pixels wide, but I can show bigger banners, smaller banners, a variety of things.

10:48.240 --> 10:53.840
From a money perspective, this is better. Why the bigger the pool of ads you can potentially

10:53.840 --> 11:00.160
serve to your users, typically the more money you make. The top one is better for

11:01.760 --> 11:07.120
end user experience because you know, hey, my placeholder is always this, which one did I implement?

11:07.120 --> 11:13.680
Of course, the top one. Now, a new problem arrived.

11:17.600 --> 11:22.960
Page is rendered. You see the nice placeholders. And then suddenly this happens. Watch carefully.

11:26.560 --> 11:37.280
Everything moves to the top. Which same browser would do this? Safari, Chrome, Firefox.

11:39.280 --> 11:46.720
All browsers are same. However, ad blockers are not always same. Ad blockers assume

11:48.320 --> 11:53.440
and assume that when you have advertising, they try to remove everything. So what happens is they

11:53.440 --> 11:57.760
detect the ads on my website. Although they're privacy friendly, although they're fast,

11:57.760 --> 12:05.120
they get removed. And you have this shift. So how do you solve that? Not blocking the ad blockers.

12:05.760 --> 12:09.600
If my users want ad blockers, that's fine. That's okay. If they are free to use that.

12:10.160 --> 12:21.040
This solution is to add an additional container around your ad. So this is the EINS. That's the ad.

12:21.920 --> 12:30.320
Make sure that the container has the placeholders. And then when the ad blocker arrives and deletes

12:31.200 --> 12:36.480
the ad, the container is left. So no layout shifts.

12:39.760 --> 12:50.560
And this is really my mantra. CLS should really be reduced to zero. Every single pixel which moves

12:50.560 --> 12:55.440
is in my view a bad thing, an annoying thing. And CLS should really be reduced to zero.

12:57.600 --> 13:03.920
So we covered privacy. We covered performance. Now let's look at the revenue perspective.

13:04.000 --> 13:11.200
Because in the end, the revenue part is I need the money to fund the hundreds of dollars which

13:11.200 --> 13:21.120
are paid every month on the server cost. And when I started, it was easier. I used ad

13:21.120 --> 13:23.520
sanctions.

13:51.120 --> 14:02.660
task

14:02.660 --> 14:06.060
steamed

14:06.060 --> 14:07.240
student

14:07.240 --> 14:08.280
stock

14:08.280 --> 14:09.900
of

14:09.900 --> 14:16.300
a

14:16.300 --> 14:19.120
sort

14:19.120 --> 14:20.300
of

14:50.300 --> 15:16.100
So, banners does not mean bad.

15:16.100 --> 15:18.420
You can implement it in a positive way.

15:18.420 --> 15:24.340
If you have full control with open source, you are perfectly able to do that.

15:24.340 --> 15:28.940
And it's also possible to make that lightning fast.

15:28.940 --> 15:36.700
Now, I didn't get any money for this.

15:36.700 --> 15:41.260
So, I'm really dreaming already about this burger later on today.

15:41.260 --> 15:43.780
There is just one small problem.

15:43.780 --> 15:44.780
It's Robin.

15:44.780 --> 15:47.020
Robin, do your hand up.

15:47.020 --> 15:48.020
Robin is the next speaker.

15:48.020 --> 15:50.060
Robin is my colleague.

15:50.060 --> 15:55.700
And we also call him Mr. Quick, so the Quick restaurant, but he normally works on the

15:55.700 --> 16:00.460
HTTP protocol and he hates it when I call him Mr. Quick with the K.

16:00.460 --> 16:01.460
He stands between us.

16:01.460 --> 16:07.620
So, Robin, please talk fast so we can all go have a great lunch.

16:07.620 --> 16:09.420
Are there any questions?

16:09.420 --> 16:10.420
Yes.

16:10.420 --> 16:11.420
Thank you.

16:11.420 --> 16:21.420
So, I've heard that your scale mates is very popular in various continents.

16:21.420 --> 16:31.420
So, for the answer, do you need to get practical somewhere in the continent or they're all

16:31.420 --> 16:32.420
like...

16:32.420 --> 16:33.420
Yeah, okay.

16:33.420 --> 16:34.420
Yeah.

16:34.420 --> 16:39.140
So, the question is, so that scale mates, my website is visited by people across the globe,

16:39.140 --> 16:43.020
here in Belgium, in Australia, Japan, Brazil, everywhere the globe.

16:43.020 --> 16:50.180
And the question was, if I need to have a replicated setup, so I use a CDN that gives

16:50.180 --> 16:53.620
you a replication for static content images, etc.

16:53.620 --> 16:54.980
So, that's a given.

16:54.980 --> 16:59.900
But I actually also replicate my servers across the globe, not all.

16:59.900 --> 17:04.980
I have, for example, servers in Australia, in Japan, to make sure that when a user does

17:04.980 --> 17:10.340
a database call or does a search, that they get an instant response.

17:10.340 --> 17:11.340
Thank you for the question.

17:11.340 --> 17:13.780
We have a few more minutes, I think, for questions.

17:13.780 --> 17:14.780
Two minutes.

17:14.780 --> 17:15.780
Otherwise, two minutes.

17:15.780 --> 17:16.780
Any additional questions?

17:16.780 --> 17:17.780
Yes, they're true.

17:17.780 --> 17:18.780
Yes, but the...

17:18.780 --> 17:20.220
Yeah, great question.

17:20.220 --> 17:34.820
So, the question is, in a revive, which ad providers can I introduce?

17:35.660 --> 17:39.860
In theory, in revive, you could also make a non-privacy friendly version, because you

17:39.860 --> 17:44.420
can also say, hey, in case I don't have any direct inventory, let's say, for example,

17:44.420 --> 17:49.300
with a scale modeling company, you can also decide to fall back to, for example, adsense

17:49.300 --> 17:50.660
or anything else.

17:50.660 --> 17:56.420
And it's just the only thing you need to do is add that their JavaScript and your advertiser

17:56.420 --> 17:59.700
code, so in theory, you could integrate any SSP.

17:59.700 --> 18:02.980
But then you're back into the same game, then you're...

18:03.140 --> 18:05.660
You have a performance impact and privacy impact.

18:05.660 --> 18:09.660
So, revive allows you, potentially, to do everything.

18:09.660 --> 18:10.660
Does that answer your question?

18:10.660 --> 18:11.660
Thank you.

18:11.660 --> 18:12.660
There was one question in the back as well.

18:12.660 --> 18:13.660
Yeah.

18:13.660 --> 18:29.500
So, the question is, which frameworks did I use or modules did I use to build a website

18:29.500 --> 18:32.860
or just for the advertising?

18:33.740 --> 18:36.980
Everything builds myself from scratch.

18:36.980 --> 18:37.980
Yes.

18:37.980 --> 18:38.980
Yes, I...

18:38.980 --> 18:39.980
Yeah.

18:39.980 --> 18:40.980
Yeah.

18:40.980 --> 18:41.980
Everything builds from scratch.

18:41.980 --> 18:49.500
The only thing I used was jQuery and I still use jQuery on some admin sites of the thing.

18:49.500 --> 18:54.420
But yeah, saying jQuery in 2024 is not cool, but I'm okay with that.

18:54.420 --> 18:58.380
Now, everything, yeah, PHP built from scratch.

18:58.380 --> 18:59.380
Thanks for the question.

18:59.380 --> 19:00.380
Any additional questions?

19:00.900 --> 19:05.300
Robin can maybe already come up as the next speaker.

19:05.300 --> 19:06.300
There was one question in the back.

19:06.300 --> 19:07.300
Yes.

19:07.300 --> 19:09.300
You can already switch my laptop, Robin.

19:09.300 --> 19:10.300
Yes.

19:10.300 --> 19:15.300
Just to look at it here, you are negotiating with these advertisers directly or...?

19:15.300 --> 19:16.300
Yes, correct.

19:16.300 --> 19:17.300
Yeah.

19:17.300 --> 19:18.300
So, the question is...

19:18.300 --> 19:19.300
Sorry?

19:19.300 --> 19:21.300
They call some people or you can go to them?

19:21.300 --> 19:22.300
Yeah.

19:22.300 --> 19:25.700
So, the question is, how do I get in touch with these advertisers?

19:25.700 --> 19:29.100
Because before, any banner would just show up.

19:29.980 --> 19:31.820
So, Revive also has an API.

19:31.820 --> 19:34.340
So, on my website, I basically have what you can sign up.

19:34.340 --> 19:37.740
You can create an account and register as a business account.

19:37.740 --> 19:42.340
And then I have a simplified interface where you can just upload the banners and you can

19:42.340 --> 19:46.020
ask, hey, is it for all scales or for specific scales?

19:46.020 --> 19:50.980
Are you targeting all scale models or just the aircraft ones or the shipbuilders?

19:50.980 --> 19:56.900
So, I have a simplified interface and they just sign up themselves.

19:56.900 --> 19:57.900
Thank you for that question.

19:57.900 --> 19:58.900
Yes.

19:58.900 --> 20:04.180
So, the whole question, have you had to deal with bad ads and bad actors?

20:04.180 --> 20:05.980
Yes and no.

20:05.980 --> 20:12.900
So, the question was, do I have to deal with bad ads and bad actors?

20:12.900 --> 20:17.700
Because I also have a shop database.

20:17.700 --> 20:23.820
And I basically already have a database of domains which are from scale modeling companies.

20:23.820 --> 20:28.860
So, when somebody signs up with a Revell, which is a brand, the e-domain, I basically

20:29.060 --> 20:33.300
know that it's linked to a, I basically can give them some confidence.

20:33.300 --> 20:39.100
If I'm unsure, they can already start creating their campaigns, but I can't, I still need

20:39.100 --> 20:42.340
to enable them before they're actually published.

20:42.340 --> 20:44.620
And people can't add JavaScript on the website.

20:44.620 --> 20:49.220
And so, in Revive, you can add JavaScript banners, but I blocked that because JavaScript

20:49.220 --> 20:50.540
is bad for performance.

20:50.540 --> 20:53.220
Does that answer your question?

20:53.220 --> 20:54.220
Thank you.

20:54.220 --> 20:56.220
Thank you very much and have a great lunch.

20:56.220 --> 20:56.500
Thank you.

