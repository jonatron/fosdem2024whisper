WEBVTT

00:00.000 --> 00:07.000
What is that time again?

00:07.000 --> 00:14.000
The time we switch our compiler from the ghost.NET compiler to the tiny.go compiler.

00:14.000 --> 00:19.000
Same language that there are friends. Let's be sure about tiny.go or our friends.

00:19.000 --> 00:25.000
Because they are the reason they supply us with this pretty go for hardware and these go for badges.

00:25.000 --> 00:27.000
That's all running tiny.go.

00:27.000 --> 00:33.000
So when I switch into the tiny.go session of the go dev room, I always forgot what I'm doing here.

00:33.000 --> 00:39.000
And I want to very special thanks to our speaker here.

00:39.000 --> 00:44.000
Because Danielle is just like, was it yesterday?

00:44.000 --> 00:45.000
What?

00:45.000 --> 00:47.000
Was it yesterday that I asked you to give this talk?

00:47.000 --> 00:48.000
Yeah, probably.

00:48.000 --> 00:51.000
It was yesterday that I called him, bad king.

00:51.000 --> 00:54.000
I have no talk at this slot.

00:54.000 --> 00:56.000
I need to have a talk.

00:56.000 --> 01:02.000
And I couldn't move schedules around because the people will be very angry at me for doing that.

01:02.000 --> 01:05.000
So what I did is I called Danielle instead.

01:05.000 --> 01:07.000
Give me what you got.

01:07.000 --> 01:09.000
You said give me a day.

01:09.000 --> 01:16.000
And apparently we are finally going to have some live music using my favorite stuff in the world,

01:16.000 --> 01:21.000
and I'm going to give you a little bit of a round of applause for Danielle.

01:21.000 --> 01:26.000
And I'm Daniel Esteban, also known as Konejo.

01:26.000 --> 01:36.000
And I'm here to talk today about having fun with MIDI and Go.

01:36.000 --> 01:41.000
So the year is 2014.

01:41.000 --> 01:44.000
We have got the room at first then.

01:44.000 --> 01:54.000
Since then we have been, we have more than 130 talks, more than 100 speakers, two virtual Kone, thanks to COVID.

01:54.000 --> 02:01.000
A dozen of lightning talk, multiple room changes because we grow bigger and bigger.

02:01.000 --> 02:05.000
Konejo is an attendee, so happy 10-year anniversary.

02:05.000 --> 02:16.000
But also five years ago at Fosden we make the first release of TinyGo.

02:16.000 --> 02:23.000
Since then we have 36 releases, more than 150 contributors.

02:23.000 --> 02:31.000
We have given multiple talks here at Fosden and another conference.

02:31.000 --> 02:39.000
We have two Not-A-Spy weather balloon launches one last year at Fosden also.

02:39.000 --> 02:53.000
And this year we have our own subtract of TinyGo because I'm the first, but then you will hear my college a.k.a. and then roam with more TinyGo surprises.

02:53.000 --> 02:57.000
So let's celebrate. Let's make a party.

02:57.000 --> 03:00.000
Woohoo!

03:08.000 --> 03:14.000
I'm going to make music with MIDI.

03:14.000 --> 03:18.000
MIDI is done for musical instrument digital interface.

03:18.000 --> 03:28.000
And it's basically each interaction with a key, a knob, a button or a slider is converted to a MIDI event.

03:28.000 --> 03:44.000
And then you need a MIDI synthesizer to understand the event and make the audio.

03:44.000 --> 03:56.000
So today we are going to make part of the MIDI controller, which is kind of the instrument.

03:56.000 --> 04:13.000
And then we will send all the MIDI data to the laptop and then just play in a wedge page called Virtual Piano that will play the music for us.

04:13.000 --> 04:25.000
So basically MIDI works like you press a button and then you send like, okay, play this note at that volume and that channel and that information.

04:25.000 --> 04:34.000
And the synthesizer, which is the Virtual Piano webpage, will process that information and really make this sound.

04:34.000 --> 04:49.000
So to make music, first we need a group or a band. I present you these two days.

04:49.000 --> 05:00.000
These are the GoFerbaches. I have one on my neck, March have another and you can see them here.

05:00.000 --> 05:11.000
They actually run a RP2040. It's this little, little tiny chip here and we are going to put Go code in the chip.

05:11.000 --> 05:21.000
It also has RGB LEDs. It has six buttons and LCD. It has a serial feature.

05:21.000 --> 05:39.000
And what is TinyGo? Well, TinyGo is not a superset of Go. It's nothing different because it's a different compiler that just puts your regular Go code into the microcontroller.

05:39.000 --> 05:47.000
Like RP2040 or Arduino or a 10C or something like that. Something very, very small.

05:47.000 --> 05:58.000
And how are we going to play music with just one simple function? It's from the MIDI package. It's MIDI.noteOn.

05:58.000 --> 06:11.000
We specify the cable. We specify the MIDI channel. We specify the note. In this case it's the B3. We want to play and the volume.

06:11.000 --> 06:19.000
So demo time. This worked like 10 minutes ago. Hope they still work.

06:19.000 --> 06:26.000
And let's just try the simple thing is press a button, make a noise.

06:27.000 --> 06:30.000
So how will this look like?

06:33.000 --> 06:40.000
Just first we configure the button to understand when it's pressed or not.

06:40.000 --> 06:52.000
And then if the button is pressed, we play a song, play a note and if we release the button, we stop.

06:57.000 --> 07:02.000
We are going to flash the code.

07:08.000 --> 07:20.000
I am here just to make the audio hearable from the laptop because we have no fancy AV setup. I am not here to play any actual music instruments behind the scenes. This is all real.

07:21.000 --> 07:28.000
We have flashed the code. We can see it's the same here.

07:28.000 --> 07:33.000
We go to our MIDI synthesizer.

07:35.000 --> 07:43.000
We select our instrument. The channel is one. And if I press the A button, it's a song.

07:51.000 --> 07:56.000
Okay.

08:00.000 --> 08:09.000
But that would be too easy. So let's make things a little bit more complicated. Let's play air drums.

08:10.000 --> 08:23.000
What I have here is an array of five distance sensors connected to another buffer batch.

08:24.000 --> 08:32.000
It's almost the same. We just configure here the distance sensor.

08:33.000 --> 08:37.000
Wait.

08:37.000 --> 08:44.000
And then if the distance is less than 90 millimeters, we play a note.

08:45.000 --> 08:57.000
In this case, we are using the channel 10, which is a special channel for MIDI, which is a drum set.

08:57.000 --> 09:02.000
So it's not an instrument per se, but different instrument.

09:13.000 --> 09:18.000
Hopefully, it's too low.

09:27.000 --> 09:32.000
Thank you.

09:46.000 --> 09:50.000
And this was only 24 hours notice.

09:50.000 --> 09:55.000
Can we make things more complicated again?

10:00.000 --> 10:06.000
In this case, the buffer batch has an accelerometer, three axis.

10:07.000 --> 10:16.000
We are going to use the data from the accelerometer and also the buttons here in this little tiny guitar.

10:16.000 --> 10:26.000
And in this case, when I move the guitar and the batch, I will change the pitch of the sound.

10:27.000 --> 10:36.000
What happened?

10:45.000 --> 10:53.000
Select channel one and I select this one.

10:53.000 --> 10:59.000
So now, I can play the music.

11:13.000 --> 11:18.000
It's okay.

11:23.000 --> 11:28.000
Okay.

11:31.000 --> 11:38.000
And finally, sorry if I'm going too fast. This was supposed to be a lightning talk.

11:39.000 --> 11:44.000
I don't know how to program, but I want to have fun too.

11:44.000 --> 11:49.000
So what could I do? Well, I introduce you to Blockly.

11:49.000 --> 11:54.000
This is a visual programming language.

11:54.000 --> 12:03.000
You just drag and drop the block. You don't need to write any code.

12:04.000 --> 12:09.000
So there is also a playground.

12:10.000 --> 12:18.000
And you have different sections with different blocks that do different things.

12:18.000 --> 12:25.000
And then we can translate those blocks to go code.

12:26.000 --> 12:31.000
So Blockly is a JavaScript library.

12:31.000 --> 12:37.000
It's 100% client-side. It's compatible with all the major browsers.

12:37.000 --> 12:42.000
And you can customize and extend it as much as you want.

12:42.000 --> 12:46.000
Blockly does not officially support TinyGo.

12:46.000 --> 12:54.000
And that's part of my hobby here that tries to make it output go code.

12:54.000 --> 12:59.000
So how it looks like, it will look like something like that.

12:59.000 --> 13:04.000
It's like the first sample, an infinite loop, like repeat while true.

13:04.000 --> 13:11.000
And then you do the button up, for example, play the note D3.

13:12.000 --> 13:19.000
So, that's it.

13:29.000 --> 13:36.000
Just to save some time, I have the demo here, but you can see, like, you just...

13:36.000 --> 13:43.000
You can drag and drop the element. You can modify them if you want to.

13:43.000 --> 13:50.000
And finally, here is the go code that should appear.

13:50.000 --> 13:54.000
Is this one? Okay.

13:54.000 --> 13:58.000
We are going to...

13:59.000 --> 14:03.000
We are going to copy.

14:03.000 --> 14:08.000
We are going to pass in a U.

14:28.000 --> 14:41.000
We are here again.

14:41.000 --> 14:44.000
Select...

14:44.000 --> 14:49.000
And now if I press the up button, it should...

14:49.000 --> 14:51.000
Sound.

14:51.000 --> 14:54.000
And we just do that with the...

14:54.000 --> 14:57.000
Sorry.

14:57.000 --> 15:02.000
We did that with the blocks only.

15:13.000 --> 15:16.000
And that's it. Thank you.

15:16.000 --> 15:18.000
Sorry.

15:18.000 --> 15:21.000
Thank you again.

15:22.000 --> 15:29.000
Thank you very much for this very, very last minute, but still awesome talk.

15:29.000 --> 15:33.000
I finally have a musical act in my room.

15:33.000 --> 15:37.000
What's next to your Taylor Swift? Does anyone know her?

15:37.000 --> 15:40.000
They're not going.

15:40.000 --> 15:43.000
They're not going.

15:43.000 --> 15:47.000
Come on, one last pass.

15:52.000 --> 15:55.000
Any questions?

16:04.000 --> 16:11.000
Yeah, for your tiny go compiler, which microprocessor popular ones do you currently support?

16:11.000 --> 16:17.000
Which one? We do support a lot, actually.

16:18.000 --> 16:23.000
I'm not sure the least.

16:23.000 --> 16:32.000
I mean, you can go to tinygo.org and you could see...

16:40.000 --> 16:43.000
No, it's not driver.

16:43.000 --> 16:48.000
I'm not sure right now, but from...

16:48.000 --> 16:57.000
Yeah, from NRF, son of the Nordic compiler chips, at Mega also.

16:58.000 --> 17:06.000
Sandy 21 and Sandy 51, RP 2040, the one used in the 10C board also,

17:06.000 --> 17:12.000
and also like ESP family kind of.

17:16.000 --> 17:18.000
Cool.

17:18.000 --> 17:20.000
Thank you.

17:27.000 --> 17:29.000
You

