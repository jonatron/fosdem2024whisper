WEBVTT

00:00.000 --> 00:07.000
Hello.

00:07.800 --> 00:12.800
Hello.

00:14.120 --> 00:16.000
All right. Hello.

00:16.000 --> 00:18.840
Welcome. Thank you for joining this talk.

00:18.840 --> 00:22.600
This is about infrastructure, code,

00:22.600 --> 00:25.800
and mostly about...

00:25.800 --> 00:27.440
and mostly about choices.

00:27.440 --> 00:29.360
So that's the main point I want to make.

00:29.360 --> 00:31.720
There will be some analogies with food.

00:31.720 --> 00:35.320
So, yeah, I hope you don't leave the room to go find food.

00:35.320 --> 00:38.120
So, stay with me.

00:38.120 --> 00:39.120
Mm-hmm.

00:39.120 --> 00:41.120
You really need to stay close to that.

00:41.120 --> 00:43.120
Yeah, yeah, okay. Thanks.

00:43.120 --> 00:44.720
All right, so this is me.

00:44.720 --> 00:46.880
The one piece of information you may want to keep

00:46.880 --> 00:49.200
is the Codeberg username I have,

00:49.200 --> 00:51.600
because the code I'm talking about,

00:51.600 --> 00:54.160
so some samples and things you can copy from

00:54.160 --> 00:56.800
are in the Codeberg repo I'm going to show later.

00:56.800 --> 00:58.880
So if there's something to keep from this slide,

00:58.880 --> 01:00.880
it's this one.

01:00.880 --> 01:04.160
And also that I'm working for Kyros,

01:04.160 --> 01:07.200
which I'm going to talk about a bit more later.

01:07.200 --> 01:09.320
That's the project I'm working on,

01:09.320 --> 01:11.040
the App & Source project I'm working on.

01:11.040 --> 01:15.320
So, yeah, I said this is about choices, mostly.

01:15.320 --> 01:16.880
So I'm starting with food,

01:16.880 --> 01:19.920
because it's a general thing in life.

01:19.920 --> 01:22.040
I mean, when you have to judge something

01:22.040 --> 01:23.080
with just one criterion,

01:23.080 --> 01:25.880
sometimes choices seem obvious, right?

01:25.880 --> 01:26.880
So let's take...

01:26.880 --> 01:29.400
This is a popular choice, a popular Greek,

01:29.400 --> 01:32.480
this, Musaka, and that's the well-known burger.

01:32.480 --> 01:35.920
So if we were to choose what we eat

01:35.920 --> 01:37.480
based on just one criterion,

01:37.480 --> 01:40.480
that one was the amount of time you need to prepare,

01:40.480 --> 01:42.160
the choice is obvious, right?

01:42.160 --> 01:46.040
But obviously we don't always eat burgers for some reason.

01:46.040 --> 01:48.480
And the reason is that we have other requirements.

01:48.480 --> 01:53.240
But sometimes when the main criterion is there in front of us,

01:53.240 --> 01:56.800
our mind gets stuck to certain choices.

01:56.880 --> 01:58.960
And we had to choose otherwise,

01:58.960 --> 02:00.440
and that's what I want to show you,

02:00.440 --> 02:03.120
our story in Kairos and how we chose to do infrastructure

02:03.120 --> 02:04.880
otherwise.

02:04.880 --> 02:06.720
So this was our problem.

02:06.720 --> 02:08.560
So what Kairos is in a sentence?

02:08.560 --> 02:10.680
No, maybe two sentences.

02:10.680 --> 02:14.800
It's an immutable OS, a special purpose OS,

02:14.800 --> 02:16.440
mainly targeting Kubernetes.

02:16.440 --> 02:18.560
So it makes Kubernetes very easy to deploy,

02:18.560 --> 02:21.400
maintain data operations and such.

02:21.400 --> 02:22.760
But it's this diagnostic.

02:22.760 --> 02:26.160
What that means is it brings immutability

02:26.200 --> 02:27.920
on top of your favorite distribution.

02:27.920 --> 02:29.720
So you start with your distribution

02:29.720 --> 02:32.120
and then you apply Kairos, let's say, on top,

02:32.120 --> 02:36.480
and it makes it immutable, safe, secure, encryption and all.

02:36.480 --> 02:38.040
But that also means for our CI

02:38.040 --> 02:40.360
that we have to build many different images,

02:40.360 --> 02:41.520
lots of artifacts.

02:41.520 --> 02:45.560
So you see some numbers there, like the number of pipelines.

02:45.560 --> 02:48.480
And one thing to keep in mind, and you all know that,

02:48.480 --> 02:50.760
is that when you're working,

02:50.760 --> 02:53.400
you don't generally want to think whether you push something

02:53.400 --> 02:55.120
or if you open a pull request or something.

02:55.160 --> 02:57.680
If you just do it, you don't want to have to think

02:57.680 --> 02:59.480
that you're gonna pay for something.

03:00.640 --> 03:03.600
So initially we started, it's on GitHub, by the way,

03:03.600 --> 03:05.920
the project, so we started with GitHub Actions,

03:05.920 --> 03:07.360
the free ones.

03:07.360 --> 03:08.560
But because of these requirements,

03:08.560 --> 03:11.520
like huge disk space in some cases,

03:11.520 --> 03:14.480
like two VMs in one job,

03:15.680 --> 03:19.080
KVM support which free runners didn't have,

03:19.080 --> 03:21.120
we were looking for a different solution.

03:21.120 --> 03:24.600
And initially we said, okay, let's put money into it, right?

03:24.600 --> 03:27.360
Money solves everything, and let's just start paying

03:27.360 --> 03:29.320
for runners.

03:29.320 --> 03:31.000
In our case, that didn't work because,

03:32.600 --> 03:34.680
like I said, we didn't want to have to think

03:34.680 --> 03:36.680
whether we push, so we were controlling ourselves,

03:36.680 --> 03:39.520
okay, let's not open a draft pull request, right?

03:39.520 --> 03:41.960
Because that also runs pipelines, let's wait a bit.

03:41.960 --> 03:43.920
I'll do that tomorrow and things like that.

03:43.920 --> 03:46.480
So we very quickly reached the point where the cost,

03:46.480 --> 03:49.000
the amount of money we were paying was double the money

03:49.000 --> 03:51.920
for the same kind of hardware, but on bare metal.

03:52.920 --> 03:54.640
So what did we do?

03:54.640 --> 03:57.040
I mean, okay, we rejected that one.

03:58.440 --> 04:01.360
Dog fooding, so as I said, Kairos makes it easy

04:01.360 --> 04:04.440
to deploy Kubernetes, which is maybe the hardest

04:04.440 --> 04:06.920
and the more complex part, if you want to start

04:06.920 --> 04:10.800
with your own hardware, like how do I maintain it and such?

04:10.800 --> 04:12.440
And that's what we do as a project.

04:12.440 --> 04:14.600
So we said, okay, we're gonna do that.

04:14.600 --> 04:17.040
And then some more tools, like, okay, Kairos,

04:17.040 --> 04:18.320
we solved the Kubernetes problem,

04:18.320 --> 04:21.560
how we provision stuff and how we maintain it.

04:21.560 --> 04:24.840
Then we chose FlexiD for GitOps.

04:24.840 --> 04:26.680
I can't go into details on what these are.

04:26.680 --> 04:29.080
I hope many of you know what these tools are,

04:29.080 --> 04:32.400
but look them up because I only have 10 minutes or so.

04:33.200 --> 04:34.880
Shops for Secrets, so that allows you

04:34.880 --> 04:37.840
to actually commit secrets in your repository

04:37.840 --> 04:38.920
but being encrypted.

04:38.920 --> 04:40.520
So it's safe to commit them

04:40.520 --> 04:42.720
because you need keys to decrypt them.

04:42.720 --> 04:46.160
But if you give the keys to FlexiD at runtime,

04:46.160 --> 04:47.680
they will be decrypted and deployed.

04:47.680 --> 04:49.280
That means you can have full GitOps,

04:49.280 --> 04:53.920
nothing, no manual intervention for secrets or whatever.

04:53.920 --> 04:55.200
And then there is a project.

04:55.200 --> 04:57.160
You probably know that the Actions Runner Controller

04:57.160 --> 05:00.960
that allows you to run GitHub runners

05:00.960 --> 05:02.320
in a Kubernetes cluster.

05:02.320 --> 05:04.640
So this is our toolset.

05:04.640 --> 05:06.120
The next slide is completely relevant.

05:06.120 --> 05:09.080
It's just that I generated this one with AI

05:09.080 --> 05:11.080
and it reminded me of something.

05:11.080 --> 05:13.040
And after a while, I remember what it reminds me.

05:13.040 --> 05:16.200
That's my real dog there doing the same thing.

05:16.200 --> 05:19.160
So we don't need the AI, just remember that real life.

05:19.200 --> 05:20.920
Does the same.

05:20.920 --> 05:22.840
So yeah, back to infrastructure.

05:23.880 --> 05:25.680
Yeah, so some steps we did.

05:25.680 --> 05:29.560
So you can start with a cluster on your laptop, right?

05:29.560 --> 05:32.920
Very easy to get one, K3D kind, micro-kates,

05:32.920 --> 05:33.920
whatever you prefer.

05:34.880 --> 05:37.760
Then you read the docs for FlexiD, obviously, and Shops.

05:38.640 --> 05:39.960
You create the keys you need.

05:39.960 --> 05:43.240
I'm not going into details, but this is what we did.

05:43.240 --> 05:44.880
More documentation on how you deploy

05:44.880 --> 05:46.440
Actions Runner Controller.

05:47.320 --> 05:48.440
And when everything is working,

05:48.440 --> 05:49.880
that's the interesting part.

05:49.880 --> 05:52.560
Then you can go and get some real hardware.

05:52.560 --> 05:54.960
We went for value for money things.

05:54.960 --> 05:56.240
We tried a couple of them.

05:57.760 --> 06:00.280
So we got, I don't know, 10 different machines

06:00.280 --> 06:01.760
or something and then we deployed.

06:01.760 --> 06:02.920
And that's the interesting part.

06:02.920 --> 06:04.160
The three commands there.

06:04.160 --> 06:05.320
How much time do I have?

06:05.320 --> 06:06.960
I think I can show you a demo.

06:06.960 --> 06:09.880
At this point, where am I?

06:09.880 --> 06:10.720
I'm there.

06:12.080 --> 06:12.920
There.

06:13.680 --> 06:14.960
No, no, no.

06:14.960 --> 06:15.800
Where are you?

06:17.160 --> 06:18.240
Where did you go?

06:18.840 --> 06:19.680
There you are.

06:23.320 --> 06:27.600
So what I'm doing here, not here, but here,

06:27.600 --> 06:29.160
I will restart it, don't worry.

06:30.040 --> 06:33.600
So I start on a project that has no runners.

06:33.600 --> 06:34.640
On the left one is the repo.

06:34.640 --> 06:36.720
I'm gonna show you the link in a while.

06:37.840 --> 06:41.240
And on the right, I'm just copying and pasting three commands.

06:41.240 --> 06:42.320
There's a timer down there.

06:42.320 --> 06:45.320
It's three and a half minutes spoiler.

06:45.320 --> 06:47.040
So what I'm doing is with three commands,

06:47.040 --> 06:49.280
I'm gonna start from a cluster, from scratch.

06:49.280 --> 06:51.320
So I use K3D to create a cluster.

06:54.240 --> 06:55.440
And I play the secrets.

06:55.440 --> 06:59.000
So there are just two secrets one that Fluxy needs

06:59.000 --> 07:02.960
to pull the repository and another one

07:02.960 --> 07:06.120
to decrypt the secrets that are encrypted with SOPS,

07:06.120 --> 07:08.360
like up keys for GitHub and such.

07:10.720 --> 07:12.960
This is the secrets command.

07:12.960 --> 07:16.040
This is the one that creates the namespace in the final

07:16.080 --> 07:18.480
and bootstraps the already existing repository.

07:18.480 --> 07:23.480
So after three minutes, you'll see that we got runners

07:25.120 --> 07:27.280
deployed and connected to GitHub.

07:27.280 --> 07:29.000
And that's from a scratch cluster.

07:29.000 --> 07:30.840
And we had to do that two or three times

07:30.840 --> 07:33.360
because we chose some hardware that didn't work

07:34.480 --> 07:38.680
because of some network issues in Hexen, I think.

07:38.680 --> 07:41.280
We had, then we moved, but by moving,

07:41.280 --> 07:43.320
we were afraid that, okay, we're gonna do that again,

07:43.320 --> 07:45.120
but it turned out to be very simple.

07:45.120 --> 07:47.960
So what I'm trying to say here is that the choice we made

07:47.960 --> 07:52.320
paid off because every time we need to recreate

07:52.320 --> 07:54.280
the whole thing, just three commands, right?

07:54.280 --> 07:57.760
We create a cluster and we just spin it up.

07:57.760 --> 08:00.800
So the initial choice, I mean, we weren't sure

08:00.800 --> 08:04.840
if we had to spend the time to create all these

08:04.840 --> 08:07.280
because yeah, I described that in 10 minutes,

08:07.280 --> 08:09.920
but it took a sprint or two, like a week or two

08:09.920 --> 08:12.560
to implement it, but it turns out it pays off

08:12.560 --> 08:15.960
because now our infrastructure is cut.

08:15.960 --> 08:17.280
It's not patch anymore.

08:17.280 --> 08:18.120
We don't care.

08:18.120 --> 08:20.840
We can go somewhere else if it's cheaper.

08:20.840 --> 08:22.080
So it does pay off.

08:22.080 --> 08:23.280
So I'm not sure where it is now.

08:23.280 --> 08:26.080
Yeah, I'm cheating a bit here because I don't want

08:26.080 --> 08:27.520
to wait for the reconciliation.

08:27.520 --> 08:31.040
So I just keep the controller to force it to check.

08:31.040 --> 08:32.880
This tool is K9s, by the way, if you don't know

08:32.880 --> 08:36.680
that check it out, it makes it extremely easy to navigate

08:36.680 --> 08:38.520
through Kubernetes resources and all.

08:39.520 --> 08:45.200
So yeah, at this point, yeah, this is the action

08:45.200 --> 08:50.200
runner's controller and this will bring up the runners.

08:50.200 --> 08:52.520
So when we want to make changes on this thing,

08:52.520 --> 08:53.600
we just commit.

08:53.600 --> 08:56.160
So if you don't know what GitOps is, you probably know,

08:56.160 --> 09:00.640
but you just make a change, you commit, yeah.

09:00.640 --> 09:05.160
You commit that to Git and you can actually review that

09:05.160 --> 09:11.120
and this thing will apply the diff to make your cluster look

09:11.120 --> 09:12.840
like what you described.

09:12.840 --> 09:14.520
So yeah, after a while, they come up.

09:21.760 --> 09:25.480
Maybe quickly I can skip a bit.

09:25.480 --> 09:26.160
Yeah, there we are.

09:26.160 --> 09:29.960
And eventually they show up.

09:29.960 --> 09:31.600
So just go back.

09:31.600 --> 09:33.040
Yeah, that was it.

09:33.040 --> 09:33.800
This is the repo.

09:33.800 --> 09:35.640
So everything I showed is there.

09:35.640 --> 09:38.520
You can't really use it because some of the secrets

09:38.520 --> 09:41.680
are encrypted with my own keys, but you can copy everything else.

09:41.680 --> 09:44.680
You just have to replace with your secrets.

09:44.680 --> 09:45.440
There are instructions.

09:45.440 --> 09:48.000
I try to write as many docs as possible,

09:48.000 --> 09:50.920
but feel free to open issues or ask me anything.

09:50.920 --> 09:53.840
I have my, yeah, that was a screenshot in case I didn't

09:53.840 --> 09:55.360
have the video.

09:55.360 --> 09:57.080
So the outcome, yes, it works.

09:57.080 --> 10:00.080
It broke sometimes initially, but it balanced out.

10:00.080 --> 10:02.280
And like I said, it really paid off

10:02.280 --> 10:05.360
because it makes making changes extremely easy.

10:05.360 --> 10:09.640
So yeah, what I wanted you to think that it is possible

10:09.640 --> 10:10.600
and it's a good idea.

10:10.600 --> 10:12.880
And I'm not saying it's going to work for everybody.

10:12.880 --> 10:16.440
And I'm not certainly saying that GitHub, but others,

10:16.440 --> 10:18.560
the paid ones or whatever is not good one,

10:18.560 --> 10:20.840
but different teams have different needs.

10:20.840 --> 10:22.520
So if you're thinking about it, check it out.

10:22.520 --> 10:24.480
Check Kairos and ask us any questions.

10:24.480 --> 10:25.480
This is my email.

10:25.480 --> 10:26.600
This is the team's email.

10:26.600 --> 10:27.400
We'll get that one.

10:27.400 --> 10:29.040
And this is our matrix channel.

10:29.040 --> 10:30.640
So whatever questions you have, we'll

10:30.640 --> 10:32.280
be happy to talk to you.

10:32.280 --> 10:32.880
And we're around.

10:32.880 --> 10:35.760
We also have an ice hoodie like this, but it's large.

10:35.760 --> 10:39.240
So the first come, first served, who is large and we have

10:39.240 --> 10:41.720
stickers and we'll be happy to talk to you outside.

10:41.720 --> 10:42.720
Thanks.

10:42.720 --> 10:51.320
Do we have time for questions?

10:51.320 --> 10:53.400
Yeah, we have.

10:53.400 --> 10:54.480
OK.

10:54.480 --> 10:55.320
Need a mic?

10:55.320 --> 10:57.000
I don't know.

10:57.000 --> 10:58.680
Microphone?

10:58.680 --> 10:59.680
Where?

11:00.680 --> 11:03.320
Or you can shout.

11:03.320 --> 11:04.320
I'll try to hear.

11:15.680 --> 11:17.920
Hold this there.

11:17.920 --> 11:18.400
Hi.

11:18.400 --> 11:21.480
Have you faced problems with different CPU architectures?

11:21.480 --> 11:25.320
Because sometimes it may be hard to get some types of hosts,

11:25.320 --> 11:27.880
like ARM x86.

11:27.880 --> 11:29.400
Are you talking about Kairos?

11:29.440 --> 11:29.920
Yes.

11:29.920 --> 11:30.720
Yes, we're not trying to test.

11:30.720 --> 11:32.560
We're not trying to specifically.

11:32.560 --> 11:38.440
So the architecture of Kairos had problems with the...

11:38.440 --> 11:39.920
Can you repeat the question?

11:39.920 --> 11:43.720
So you run the test, but it's mostly based on containers

11:43.720 --> 11:47.280
locally, but have you found problems testing in different

11:47.280 --> 11:48.280
CPU architectures?

11:48.280 --> 11:49.080
Yeah, got you now.

11:49.080 --> 11:52.760
No, the tests are mainly running with QMU.

11:52.760 --> 11:55.320
That's why we need big machines because it's a full OS.

11:55.320 --> 11:57.200
So we do test ARM as well.

11:57.200 --> 12:00.760
It's just a bit hard to test boards because Raspberry Pi's

12:00.760 --> 12:02.760
are just not as easy to automate.

12:02.760 --> 12:04.080
You need some KVM or something.

12:04.080 --> 12:07.280
So yeah, mainly QMU would do ARM, but not the actual boards.

12:07.280 --> 12:09.080
So sometimes things break.

12:09.080 --> 12:10.760
But yeah, that's a Kairos question.

12:10.760 --> 12:11.240
Thanks.

12:13.640 --> 12:14.400
Anybody else?

12:14.400 --> 12:15.360
We can take one more, I guess.

12:15.360 --> 12:15.960
Yeah, there you go.

12:19.320 --> 12:22.160
I saw that you're using the summer bind renders.

12:22.160 --> 12:23.600
Those are the old ones, right?

12:23.600 --> 12:25.440
Yeah, no, sorry.

12:25.440 --> 12:26.880
I realized when I was running, yeah,

12:26.880 --> 12:27.760
we have to update.

12:27.760 --> 12:28.440
You saw that.

12:28.440 --> 12:29.840
You're going to switch to the Google

12:29.840 --> 12:33.680
Managed GitHub supported runners.

12:33.680 --> 12:35.840
Ah, they changed the images you mean?

12:35.840 --> 12:39.040
Yeah, I think the GitHub adopted the actions

12:39.040 --> 12:39.680
runner controller.

12:39.680 --> 12:41.040
Ah, I didn't even notice that.

12:41.040 --> 12:41.800
Yeah, sorry.

12:41.800 --> 12:42.960
Thanks.

12:42.960 --> 12:45.440
We'll do that.

12:45.440 --> 12:46.160
Last question.

12:49.880 --> 12:50.760
No, OK.

12:50.760 --> 12:51.360
Thank you.

12:51.360 --> 12:52.360
Thank you.

12:52.360 --> 12:53.360
Thank you.

12:53.360 --> 12:54.360
Thank you.

12:54.360 --> 12:55.360
Thank you.

