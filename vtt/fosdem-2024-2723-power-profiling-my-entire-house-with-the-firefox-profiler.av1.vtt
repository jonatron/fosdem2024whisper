WEBVTT

00:00.000 --> 00:14.600
Thanks for coming so late. I'm Florian Kez. I work for Mozilla as a performance engineer.

00:14.600 --> 00:20.680
You might have been here last year when I was talking about the work I do. So as a performance

00:20.680 --> 00:25.680
engineer, my work is to understand how much Firefox uses power and what we can do to reduce

00:25.680 --> 00:33.400
it. So I was explaining last year how we developed power profiling tooling. That was the cover slide.

00:33.400 --> 00:37.240
For example, I was explaining that we have power profiling tools that let us understand

00:37.240 --> 00:42.200
how much power is used by things so small as just blinking the cursor in the address bar.

00:42.200 --> 00:46.440
So this is what I was presenting last year. And if you want to hear more on this topic,

00:46.440 --> 00:53.360
I will be doing a similar presentation updated and extended tomorrow in the main track. So today,

00:53.360 --> 00:59.960
I will be sharing a different story. It will be more a story, actually, because it's late and I want

00:59.960 --> 01:06.880
this presentation to be easy to follow, maybe a bit entertaining if I can. So first a story about

01:06.880 --> 01:12.480
why I worked on power profiling the entire house and then technical details and then lots of examples

01:12.480 --> 01:19.640
because those are the most interesting. So the story. So there was first time in February and in

01:19.720 --> 01:25.280
April, we had a new member in our family that I was very happy to welcome and that completely

01:25.280 --> 01:32.200
changed our life, of course. Two days before she was born, I installed this on the wall. One of the

01:32.200 --> 01:39.240
reasons why I installed this is solar panels, it's not obvious. I wanted most of her energy used to be

01:39.240 --> 01:43.640
renewable. And I tried before to have solar panels on the roof of our house and it turned out to be

01:43.640 --> 01:50.040
extremely difficult, which means we failed to get around those. Reasons were mostly there were chimneys

01:50.040 --> 01:56.480
on the south side of the house that were making massive shadows on the roof. Lots of other issues

01:56.480 --> 02:01.440
with the roof. Basically, all the companies who came, they never gave us a code. So we couldn't get

02:01.440 --> 02:07.520
panels on the roof. So install this and I was wondering, can this power of a bottle warmer that

02:07.520 --> 02:13.320
we will use for the milk we give to the baby? I work from home. I work on energy efficiency all

02:13.400 --> 02:21.440
the time. Will this power my home office? So I had questions and it answers. So how could I answer

02:21.440 --> 02:28.240
those questions? I installed the power meter that you see here inside the electric switchboard of the

02:28.240 --> 02:39.120
house. So it's communicating with RFI, I'm measuring three different things. The link with the grid.

02:39.520 --> 02:44.640
So seeing if we are importing or exporting electricity. It's measuring specifically the solar

02:44.640 --> 02:49.560
panels I had put on the wall. And it's also measuring my home office. So that I could answer the

02:49.560 --> 02:55.200
questions. Of course, I very quickly came up with more questions. So I was also wondering about the

02:55.200 --> 03:02.960
washing machine, the freezer, and a few other things in the house. So this is what the thing

03:02.960 --> 03:09.120
quickly looked like. So a bunch of things in here. I made the thing in the first place so I could

03:09.120 --> 03:14.480
make a mess of it if I wanted. So now we are measuring also the link to upstairs because there's a

03:14.480 --> 03:21.080
second panel upstairs. The freezer, the boiler, the washing machine, those kind of things. And also,

03:21.080 --> 03:25.240
I needed to answer the questions. So we put a smart plug on the bottle warmer to be able to figure

03:25.240 --> 03:30.600
out what was going on there. So now let's go into technical details. What am I doing over all this?

03:31.200 --> 03:38.160
How can I get relevant information? So first I need to correct and start the data. I have a

03:38.160 --> 03:47.000
constraint. I have nothing in the cloud. Because it's very personal, sensitive data. All the

03:47.000 --> 03:51.200
parameters are connected through Wi-Fi. But with parental control, they have no internet access.

03:52.160 --> 04:00.960
They all send data through MQTT. They send one piece of data every second. And there's an Ubuntu

04:00.960 --> 04:06.560
virtual machine somewhere in the house that hosts an MQTT server. And with trivial scripts, logs

04:06.560 --> 04:12.680
everything to disk. So that part is pretty simple. Then second part, I need to visualize the data.

04:12.680 --> 04:16.480
Because if I just have massive log files, I do nothing with it. And this is where the Firefox

04:16.560 --> 04:21.640
provider part comes in. A tool I was very familiar with because the power profiling part I made

04:21.640 --> 04:30.760
the previous year. I have on the Ubuntu virtual machine a trivial script that converts the data

04:30.760 --> 04:37.880
from the files on disk to a JSON file the profiler can understand. And the profiles contain

04:37.880 --> 04:45.280
mainly two things, power counters and markers. So this is what it looks like if you're not familiar

04:45.360 --> 04:53.640
with a profiler UI. You might not be. I will explain very briefly. So there's a time axis here. The

04:53.640 --> 04:58.600
top part here is what we call the timeline. Everything is against time. The values thing I

04:58.600 --> 05:02.880
said I'm metering, you can see them here. You see the shape of the chart for each of those.

05:02.880 --> 05:09.280
And markers, they are here. And they can give us more specific details about specific things that

05:09.280 --> 05:14.280
the script thought was interesting. And you can see here that for example, so BIM is the brand of

05:14.840 --> 05:19.400
the wall. You can see that typically produces more in the middle of the day. You can see that

05:19.400 --> 05:25.960
when the cloud is less interesting, many other things will go into more details later about what

05:25.960 --> 05:32.360
we see there. So one thing I wanted to mention here was the date, which is the most important, sorry,

05:32.360 --> 05:38.800
the date is the most important thing here. We were three weeks in after we got the baby. And this is

05:38.840 --> 05:47.400
what I spent most of my days doing. And actually most of the nights too. And how this works. Usually

05:47.400 --> 05:51.400
when people get a baby, they say they have no time left. I actually had the exact opposite. I

05:51.400 --> 05:56.520
ended up suddenly having plenty of spare time at night because she was waking up so often that we

05:56.520 --> 06:00.480
couldn't sleep. So we were taking turns. And half of the night I was up. And she would wake up,

06:00.480 --> 06:05.280
want to have some milk and then sleep a few minutes later. So I had plenty of hacking sessions

06:05.280 --> 06:10.440
that were somewhere between 10 minutes and three hours. Unpredictable. But I had multiple weeks

06:10.440 --> 06:14.680
of having those sessions at night, which was why the code is maybe a bit messy because I had to do

06:14.680 --> 06:18.920
it in small chunks. But it worked pretty well. Otherwise I would have had no time to do any of

06:18.920 --> 06:24.720
this hobby project on the side. Also the generous parental leave at Mozilla helped a lot because

06:24.720 --> 06:28.600
that meant I had lots of those weeks where I could stay up at night and do those kind of things.

06:28.600 --> 06:34.560
And then more seriously, generating a JSON file that the profiler can understand was really simple.

06:35.520 --> 06:39.680
Maybe because I work with a profiler a lot, but still I think most people could get it done and

06:39.680 --> 06:46.000
get something that works relatively quickly. And also I don't have to host any web UI or anything

06:46.000 --> 06:52.080
because I can just generate URLs like this with the URL to where I generate the JSON file. And

06:52.080 --> 06:58.360
that's all I have to handle. I don't have to take care about anything in the UI. Then there's the

06:58.360 --> 07:03.840
stuff that didn't work as well. The profiler was made to profile Firefox. Typically we were having

07:03.920 --> 07:10.200
profiling sessions over a few seconds. I accidentally had profiles that were an entire day. So stuff

07:10.200 --> 07:13.920
didn't work so well in terms of units, for example. So I did put some good requests to add

07:13.920 --> 07:21.840
minutes and then hours. And then a few weeks later, days also. Changing the units, if you remember

07:21.840 --> 07:26.120
the screenshot I gave of profiling the cursor blinking in the address bar, we were talking about

07:26.120 --> 07:33.200
milli-watt-hour, micro-watt-hour. I wanted to see kilowatt-hours because numbers with many zeros

07:33.280 --> 07:40.400
were not so fun. Performance also, showing a profile that contains data for an entire day. It

07:40.400 --> 07:48.480
was not that bad, but it took maybe five seconds to display. I fixed it. And another thing that was

07:48.480 --> 07:52.080
a lot more important when profiling the house and that is completely irrelevant when profiling

07:52.080 --> 07:56.320
Firefox is knowing when something happened. In Firefox, typically we want to know how long

07:56.320 --> 08:00.160
something took. Here I mostly wanted to know at which time of the day something happened when we

08:00.240 --> 08:05.360
were starting to consume more power. So I also had to tweak that a little bit. It's also nicer when

08:05.360 --> 08:12.320
using the Firefox use case, but it was a lot more important for profiling the house. Colors,

08:12.320 --> 08:16.400
but it was just nicer. Everything was gray in terms of power in Firefox because there were a few

08:16.400 --> 08:28.720
attracts. Now let's go into examples. Doing laundry. Washing machine dryer. So washing,

08:29.120 --> 08:35.200
it consumes a lot of power twice. And this is most likely when heating the water. And then there's

08:37.600 --> 08:39.120
what?

08:41.840 --> 08:47.600
Okay. Whatever. I also wondered why it's doing it twice here. I think I saw it doing it

08:47.600 --> 08:51.760
new once a few times. So it depends on the program. Actually, I would like to profile the values programs.

08:51.840 --> 08:59.760
And if we zoom into this part that looks interesting, but we don't see because of a big thing here,

08:59.760 --> 09:02.960
we see there are lots of patterns here that are probably good enough to figure out what the

09:02.960 --> 09:09.680
machine was actually doing. And then the dryer, and it turns out it uses less power than the washing,

09:09.680 --> 09:13.680
even though it takes longer. And this is probably because we took the most efficient dryer we could

09:13.680 --> 09:18.640
find with a heat pump. And I also profiled my mother's dryer and it uses seven times more power than

09:18.640 --> 09:27.520
mine. Typical day at the office, home office. And this is why I don't want this data to be in the

09:27.520 --> 09:32.320
cloud. And I don't want my manager to have access to this data. We can say exactly at which second

09:32.320 --> 09:37.040
I return to my desk throughout the entire day. And you can see that there are typical days like

09:37.040 --> 09:41.920
this with small breaks in the middle. You can see the shape here is different. And then there are

09:41.920 --> 09:48.160
days like this one. And the main difference here is when you see that it's high first and then

09:48.160 --> 09:52.720
decreases, it means my battery was not full. So that means I probably worked from somewhere else than

09:52.720 --> 10:00.000
my office. So here, here and here, I clearly worked somewhere else from my office. And then the last

10:00.000 --> 10:04.960
one is on Sunday. So on Sunday, the only thing that remains power down is the modem, which is also

10:04.960 --> 10:10.640
useful for Wi-Fi and the rest of the house. But maybe before working, I should have started with

10:10.640 --> 10:17.280
breakfast. So this is micro-oven from the 90s, generated from my grandmother. And two things

10:17.280 --> 10:27.600
we typically do in the morning is unfreezing bread and heating milk. And I was surprised by the

10:27.600 --> 10:33.200
patterns there. The surprise is I was thinking that when in the infreasing mode, we would use

10:34.480 --> 10:38.640
significantly less power. And that's actually correct. But the problem is it's

10:39.680 --> 10:43.840
heating at the maximum power for a few seconds, then nothing for a little while. And every 30

10:43.920 --> 10:48.720
seconds, it's heating for seven seconds, which means that if I'm hoping to use solar panels,

10:48.720 --> 10:54.080
and it's in the morning, and they are not at their peak production, I'm basically buying all the power

10:54.080 --> 10:59.280
from the grid, even though the average power is only 300 watts. And that's the kind of stuff we

10:59.280 --> 11:04.480
see when power profiling with a high rate sampling, but I would not see if I was looking at that

11:04.640 --> 11:11.840
every hour. And heating milk is what you would expect, almost a rectangle.

11:14.320 --> 11:20.240
So now, time for a quiz to ensure you are still awake. In your opinion, what uses most power here?

11:20.880 --> 11:27.200
Is it the massive chest freezer we've got that's full of milk? Is it the internet modem? Who thinks

11:27.760 --> 11:31.760
the freezer? Raise your hand. Who thinks the modem?

11:35.360 --> 11:42.240
So let's provide it to figure out. So, of course, very different shape. The modem is using the

11:42.240 --> 11:48.960
segment of power almost the entire day with very tiny variations. And the freezer, there's a spike

11:49.520 --> 11:55.920
at the beginning for a few seconds. And then it's stable for a few minutes, and then stops

11:55.920 --> 12:05.440
entirely, and then starts again. Modem, 27 watts all day long. It also runs the virtual machine that

12:05.440 --> 12:14.400
does all of us power profiling. So the answer is you are all right. They used exactly the segment

12:14.400 --> 12:25.840
of power during the entire day. So back to the initial question about warming the milk

12:25.840 --> 12:32.960
for the baby. So there's this milk pump, and then there's the bottle warmer. How much do each of us

12:32.960 --> 12:41.680
consume? You can just see the number. I don't think I'm going to read them out loud. Something that we

12:41.680 --> 12:47.200
quickly realized when looking at those profiles that was interesting is we see the timing, same as

12:47.200 --> 12:50.960
figuring out when I'm working or when I'm not working. And I'm not sure if you had a baby

12:50.960 --> 12:55.520
recently and had this experience, but you have lots of constraints about how long you can keep

12:55.520 --> 13:00.160
things. So milk that has just been pumped and kept at room temperature you can use for four hours.

13:01.200 --> 13:03.920
If it has gone in the fridge and you are heating it, you can use it for two hours.

13:04.560 --> 13:09.040
So to be able to know if the bottle of milk in front of you is usable, when suddenly the baby

13:09.040 --> 13:13.440
wakes up and you don't know when it just slipped last time because you were not in charge of that

13:13.440 --> 13:22.160
time, usually it's a mess. And we can make use of this data, and we did. And that's actually what we

13:22.160 --> 13:26.000
used the power metering data the most for is figuring out if the bottle of milk in front of us is

13:26.000 --> 13:36.160
usable. And we figured this out. The reason why we figured this out is only because we could see

13:36.160 --> 13:42.480
on the chart that actually it's very easy to detect the pattern. So it's time for a summer break. We

13:42.480 --> 13:46.560
visited my parents and they recently had those nice solar panels installed on the roof of their

13:46.560 --> 13:55.120
kitchen and it came with a gateway that's sending the data to the manufacturer or the gateway who's

13:55.120 --> 14:00.160
collecting a lot of data. I'm not too happy about that but it was not my decision. So it's sending

14:00.160 --> 14:06.800
one data point every 15 minutes which is good enough to figure out how much electricity was

14:06.800 --> 14:10.640
imported or exported on that day. Use this to figure out what you're actually doing with your

14:10.720 --> 14:16.640
electricity. And I noticed during one night of taking care of a baby that actually we can get one

14:16.640 --> 14:27.840
data point every second if we query a local HTTP API. So I did. Put a Raspberry Pi in there.

14:29.520 --> 14:35.200
Of course we can get profiles. So now let's see what they look like. That's what I saw at my parents'

14:35.200 --> 14:41.200
house and one thing quickly caught my attention. So it's a free-phase system because of a large heat

14:41.200 --> 14:45.520
pump I will go into it later. This thing looks strange. There's high power use here and it's

14:45.520 --> 14:50.400
throughout the day. And the only thing that could be using as much power is this thing.

14:51.520 --> 14:57.120
And it's supposed to be using power of peak hours because the price of electricity is not the same

14:57.120 --> 15:03.360
in France at night or during the day. And after investigating a little bit we realized that there

15:03.360 --> 15:08.000
was this switch here that was in the wrong position that was forcing the thing to be on all the time.

15:08.000 --> 15:13.840
So it was pouring on whenever someone was using water. And we changed the switch and now it's

15:13.840 --> 15:18.880
eating only around midnight and then a little bit around 7 a.m. and then it stops the rest of the day.

15:19.600 --> 15:26.560
And that probably saved quite a bit of money. I said there's a large heat pump so now we are no

15:26.560 --> 15:33.920
longer in the summer. I forgot to say something. The heat pump here has a large accumulator also.

15:35.200 --> 15:40.160
And when we look at the power use pattern we see the heat pump that's pumping and using a lot of

15:40.160 --> 15:45.520
power on all the free phases six times a day. And then there's the circulator here that's

15:46.400 --> 15:52.240
going throughout the day. So we actually can understand how things work. And we can see also

15:52.240 --> 16:01.600
how the power from the solar panels was used. Back at home some magic happened. I said we couldn't

16:01.600 --> 16:06.400
have solar panels on our roof but we had a baby which means that we returned home and after returning

16:06.400 --> 16:12.080
home there was a midwife who came to visit to check everything was right. And on the car that she

16:12.080 --> 16:18.240
used to visit us there were ads for company putting solar panels on roofs that was owned by her husband

16:18.240 --> 16:22.640
who's very proud of figuring out solutions to all the desperate cases where there's nothing possible

16:23.520 --> 16:28.160
and who came gave us a code that was very reasonable on a couple months later. The baby solved all

16:28.160 --> 16:33.120
problems that we were not able to solve for two years. So now we have real solar panels on the roof

16:35.040 --> 16:39.680
but that's enough about this part of the story. Fast forward December and it's time for another baby

16:39.680 --> 16:46.480
picture. She's grown up quite a bit. She's really into trees. Whenever she's crying and we don't know

16:46.480 --> 16:53.760
why we show her a tree and she's super happy. So we had to get her a nice Christmas tree for our

16:53.760 --> 17:00.480
first Christmas. And it's time for another quiz. In what you see in this picture what's using the most

17:00.480 --> 17:08.640
power. So obviously there's the Christmas tree here. The Christmas tree turns itself on at sunset

17:08.720 --> 17:16.080
and turns off at midnight. Then you might not have seen but we have the solar panels here

17:17.360 --> 17:21.760
and they produce power during the day. They use power during the night for some reason.

17:23.040 --> 17:26.400
So what's using the most power in your opinion. Who thinks the Christmas tree?

17:29.280 --> 17:33.280
Who thinks the solar panels? Okay let's provide it.

17:34.160 --> 17:42.800
So the Christmas tree uses 10 watts for a few hours here and the solar panels about five

17:42.800 --> 17:46.800
during the end of the day and the beginning of the next day. And if we look at the numbers

17:47.360 --> 17:53.520
Christmas tree 64 solar panels at night 67. That was a surprise to me

17:55.840 --> 17:58.320
but yeah you couldn't be surprised twice by my quiz I guess.

17:58.720 --> 18:03.600
But they did produce a lot more power so it's still worth having them.

18:05.520 --> 18:09.200
And I think we still have a minute or two so I have a few more things I can share.

18:10.800 --> 18:15.280
I have more power matters that are funnier and the interesting thing about this one is it can give

18:15.280 --> 18:22.800
me data at a 50 hertz something rate which is the frequency of the oscillating AC power.

18:23.840 --> 18:27.280
And I forgot this profile at home on a computer that's not connected to the internet but the

18:27.280 --> 18:33.280
profile was fun because we can see what happens whenever the rotation direction changes. We can

18:33.280 --> 18:38.000
see that there's a break in power used for a few milliseconds and then it uses more power when the

18:38.000 --> 18:43.920
motor restarts. So all those details we can see and expose with fast sampling and power profiling

18:43.920 --> 18:50.000
and it's pretty nice to see. And then USB power meters those are interesting if you want to look

18:50.000 --> 18:56.640
at the energy used by any random USB thing or anything that charges through USB. And there are

18:56.640 --> 19:00.240
quite a few in this picture all of those are reverse engineered to make compatible with

19:00.240 --> 19:05.040
profiler and that's part of the topic for another talk that I will be giving tomorrow

19:05.040 --> 19:10.160
but this is kind of how I worked with those. So reverse engineering a bit and then putting

19:10.880 --> 19:16.640
a load here USB light that I knew what it would look like. The code is in here if you want to play

19:16.640 --> 19:24.480
with it. So I will explain why this is useful for profiling Firefox and Android and even

19:24.480 --> 19:34.400
Firefox and laptops tomorrow in the main track. Now let's see the things that were not working so

19:34.400 --> 19:39.600
well or that I still need to look into. All the profiles I shared were looking good. I selected

19:39.600 --> 19:45.520
them. Some don't look that good. So this is a profile of a boiler. I said we profile the boiler

19:45.520 --> 19:50.560
so this is just it's a gas boiler so it's not most of the energy used but still during winter it

19:50.640 --> 19:54.480
uses a lot of electricity to just circulate water so that the hot water it's producing is going

19:54.480 --> 20:00.080
through the house. And then the Wi-Fi is not so good. It's especially terrible in our house

20:00.080 --> 20:06.160
because there's a lot of concrete with metal in it almost everywhere. Despite putting multiple

20:06.160 --> 20:11.680
repeaters it's still not so great. And someday I still have missing data like this and profiles that

20:11.680 --> 20:17.920
are almost garbage. And it could lead to incorrect conclusions because the shape here is just clearly

20:17.920 --> 20:24.640
wrong. So if we can, wired network is probably better. It's not really possible to put those wires

20:24.640 --> 20:30.320
exactly everywhere like on smart sockets or things like that. I think the best solution if I have

20:30.320 --> 20:35.440
time would be to change the firmware in those devices for an open source one and ensure that they

20:35.440 --> 20:39.440
store the data until they receive an act from the server that the data has been received and

20:39.440 --> 20:45.120
include timestamps in the data. So probably a project from next time I have many nights

20:45.920 --> 20:46.560
without sleep.

20:51.360 --> 20:54.960
I would really like to clean up this code so that all of us could play with it easily.

20:55.520 --> 21:00.240
It's not very complicated but if we don't duplicate it, that's much better. So the code for power

21:00.240 --> 21:05.520
profiling with USB meters I cleaned up enough because it was part of my work and I put it in a

21:06.240 --> 21:11.360
easily accessible repository. The code to do profiles that are nice from on-phase gateways

21:11.440 --> 21:16.560
I would like to do soon. And the rest, it's a bit of a mess because it's a mix of my code and

21:16.560 --> 21:20.240
configuration data with the same files because like you know 10 minute hacking sessions.

21:22.000 --> 21:27.120
And I would also like to blog some of our profiles of appliances and devices that I tested because

21:27.120 --> 21:31.440
I think there's quite a few surprises we could have when looking at devices. Some don't really

21:31.440 --> 21:38.560
behave like we would expect. And as a conclusion I would say sampling at a high rate is useful to

21:38.560 --> 21:44.320
understand how things work just because we are often curious. I definitely am. It's also useful

21:44.320 --> 21:48.800
to find and fix bugs like the water header thing at my parents that was wasting a lot of power

21:48.800 --> 21:55.840
on costing money. And if we want to optimize consumption from the power that's generated

21:55.840 --> 22:01.520
based photovoltaic panels, it's better to have an idea of how much we will consume. Like especially

22:01.520 --> 22:06.160
unfreezing bread like I was sharing is probably not a good candidate for using energy from solar

22:06.160 --> 22:13.520
panels. And that's all I wanted to share for today. Thanks for your attention.

22:13.760 --> 22:37.760
Could you match the power used by your workstation with the solar panels in the end?

22:38.480 --> 22:48.080
Oh I forgot to say but I could totally use the power from the solar panels for my home office

22:48.080 --> 22:53.360
because it was clearly enough and I'm mostly working during days. And I could actually decide that

22:53.360 --> 22:57.040
when we have a lot of power from the solar panels maybe it's time to compile for your folks that

22:57.040 --> 23:02.400
will use a lot more power. But actually the one thing that uses the most power as we have seen

23:02.400 --> 23:08.160
in my profiles from the home office is whenever I decided to use the computer without being plugged

23:08.160 --> 23:12.720
and then plug it back in because then it charges and that's where the power used is the biggest.

23:13.760 --> 23:17.920
The other thing that contributes a lot of power use of my office is screens. I have two external

23:17.920 --> 23:24.560
screens and surprisingly the 27 inches screen and the 20 inches screen they have almost the same

23:24.560 --> 23:29.280
power use. So if I use only one I could turn off the second one and they will also save significant

23:29.280 --> 23:37.440
power. The profiling your stuff is often called NILM non-intrusive load monitoring so if you go

23:37.440 --> 23:42.400
and look up there there are databases you can contribute to. The end phase be careful if you're

23:42.400 --> 23:47.680
running on version three and you're using production.jose and it all goes away and it's all behind a

23:47.680 --> 23:56.960
power paywall and horrible don't upgrade. And things like water so microwaves yes are just on

23:56.960 --> 24:02.160
off so those are hard to do so you should run them when it's sunny. And washing machines right

24:02.160 --> 24:07.760
so normally washing machine is on heating the water at the beginning and then that's it you

24:07.760 --> 24:12.720
know there's mechanical effort which you could see on yours. Dishwashers are usually at least two

24:12.720 --> 24:18.800
because you get the main wash and then a hot rinse. So washing machine with two is weird.

24:18.800 --> 24:32.960
So I'm not sure there was a question in this or if it was just comments but about the versioning

24:32.960 --> 24:39.920
of the young phase gateway. The young phase gateway we've got at home is not collecting data about our

24:39.920 --> 24:46.400
power use. The on-phase gateway we've got at home is not collecting data about our power use so I put

24:46.400 --> 24:54.880
my own power meter behind it and the reported data about how much power is used by the on-phase

24:54.880 --> 25:00.640
system at night is dramatically different and my parents profile on in mine because in my parents

25:00.640 --> 25:05.280
profile is the data reported by the on-phase gateway and it's counting only the power used

25:05.280 --> 25:10.240
by the micro inverters that are on the panel and it's around one watt and mine is also counting

25:10.240 --> 25:12.800
the power used by the gateway itself and now we are on five.

25:24.960 --> 25:26.480
So time's up thank you so much.

25:31.520 --> 25:35.360
And you can see the presentation tomorrow if you want more details about Firefox for approfiling.

25:36.800 --> 25:38.080
Thank you so much.

