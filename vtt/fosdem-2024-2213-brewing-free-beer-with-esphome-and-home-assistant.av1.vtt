WEBVTT

00:00.000 --> 00:05.000
All right, good.

00:05.000 --> 00:11.000
Today, I'm going to be giving a presentation called Brewing Free Beer with ESP Home and Home Assistant.

00:11.000 --> 00:15.000
This is free as in beer, as in freedom beer.

00:15.000 --> 00:17.000
I love brewing.

00:17.000 --> 00:22.000
My name is John Britton and I'm an amateur brewer.

00:22.000 --> 00:27.000
This is a Belgian triple that I brewed this summer back at my house in western Massachusetts.

00:27.000 --> 00:31.000
I'm also a contributor to Homebrew, the open source package manager.

00:31.000 --> 00:33.000
I'm a cheer at that as well.

00:33.000 --> 00:38.000
And I'm the co-founder of a company called Workbrew, which is a team for tools that use Homebrew at work.

00:38.000 --> 00:41.000
Here's an outline of what we're going to be talking about today.

00:41.000 --> 00:44.000
First, I'm going to give you an overview of something called All Green Brewing,

00:44.000 --> 00:49.000
which is in contrast to something called Extract Brewing, which some of you may have heard of before.

00:49.000 --> 00:55.000
Then we're going to talk about building a brewery, specifically a Hermes style three vessel system.

00:55.000 --> 00:57.000
And then we're going to get into the open source stuff.

00:57.000 --> 01:01.000
There's a really cool project called the Electric Brewery that if you're interested in this,

01:01.000 --> 01:03.000
I highly recommend you check out their website.

01:03.000 --> 01:06.000
They have tons and tons of DIY guides.

01:06.000 --> 01:10.000
I would assume many of you have heard of an ESP32 before, but I'll give a little introduction to that

01:10.000 --> 01:17.000
and a project called ESP Home, which is for writing firmware and programming ESP devices,

01:17.000 --> 01:19.000
and lastly Home Assistant.

01:19.000 --> 01:22.000
So let's start with All Green Brewing.

01:22.000 --> 01:24.000
What is beer?

01:24.000 --> 01:28.000
There's four main ingredients, water, malted grain, hops, and yeast.

01:28.000 --> 01:32.000
The process of making beer is extracting the sugar from the malted grain,

01:32.000 --> 01:40.000
adding in hops for flavor, and then using yeast to convert the sugar that's extracted from the grain into alcohol.

01:40.000 --> 01:43.000
Water is the most abundant ingredient in your beer.

01:43.000 --> 01:45.000
I think of it as like the canvas.

01:45.000 --> 01:47.000
In my brewing, I use well water.

01:47.000 --> 01:49.000
I just take the water right out of the ground and use it as it is.

01:49.000 --> 01:51.000
Some people I know use spring water.

01:51.000 --> 01:53.000
They buy it at the store.

01:53.000 --> 01:58.000
Sophisticated brewers will do chemical testing on their water to get an idea of what salts are dissolved

01:58.000 --> 02:04.000
and they'll add their own additives to make it the palette that they want for their beer.

02:04.000 --> 02:08.000
And if you're really, really into this stuff, you can use reverse osmosis or distilled water

02:08.000 --> 02:14.000
to start from a totally blank slate and add your own kind of salts and whatnot.

02:14.000 --> 02:16.000
Next is malted grain.

02:16.000 --> 02:19.000
Primarily barley.

02:19.000 --> 02:24.000
Barley is malted in a process where you steep it in liquid, which starts a germination process.

02:24.000 --> 02:32.000
During germination, the organism converts using enzymes, some starches into sugars,

02:32.000 --> 02:39.000
and then you kiln the grain, which is kind of like toasting it to stop the germination, stop it from growing,

02:39.000 --> 02:42.000
and it also imparts color and flavor.

02:42.000 --> 02:45.000
Hops, probably the most famous of the beer ingredients,

02:45.000 --> 02:51.000
added during boiling and during the fermentation process to add bitterness and aroma.

02:51.000 --> 02:56.000
And then lastly yeast, which is used to convert sugar into alcohol.

02:56.000 --> 03:00.000
Primarily there are two types of yeasts, ales and loggers.

03:00.000 --> 03:07.000
I'm an amateur brewer so I won't tell you the difference between the two other than loggers are much more difficult.

03:07.000 --> 03:10.000
So next, how is beer made?

03:10.000 --> 03:12.000
There's a lot of steps.

03:12.000 --> 03:15.000
One of these steps can be broken down into a whole day lecture.

03:15.000 --> 03:21.000
So I'm going to give you a really high level overview of mashing, sparging, boiling, fermenting, and packaging.

03:21.000 --> 03:25.000
So the first thing that you do is you take your grain that's already been malted by your maltster,

03:25.000 --> 03:28.000
you crush it up, you put it in a pot, and you add hot water.

03:28.000 --> 03:30.000
The hot water works like tea.

03:30.000 --> 03:36.000
It extracts the sugars from the malt and then it releases them into the liquid.

03:36.000 --> 03:41.000
The next step is sparging, where you add more liquid on top of this kind of grain bed

03:41.000 --> 03:45.000
and strain the water through, extracting the sugar from your mash.

03:45.000 --> 03:48.000
And in this picture you can see that it's kind of, the liquid on top is clear.

03:48.000 --> 03:52.000
By the end of your sparge, the liquid that's going through basically has nothing in it.

03:52.000 --> 03:56.000
You've extracted all of the sugars out of your mash.

03:56.000 --> 03:59.000
The next step is boiling.

03:59.000 --> 04:02.000
Boiling primarily exists to sterilize,

04:02.000 --> 04:06.000
but it also removes volatile compounds that create off flavors in your beer.

04:06.000 --> 04:11.000
During your boil you can add your aromatic and your bittering hops to extract the flavor.

04:11.000 --> 04:16.000
And then the last step, after you boil you chill your wort down.

04:16.000 --> 04:20.000
So basically all of the process we've talked about so far is making wort.

04:20.000 --> 04:26.000
Then you put it into a fermenter, add yeast, and the yeast makes the beer.

04:26.000 --> 04:28.000
So that's kind of the process.

04:28.000 --> 04:33.000
After a couple of weeks, in my case I usually let this sit for about two to three weeks.

04:33.000 --> 04:38.000
Take a couple of readings to see how the alcohol, the process has progressed.

04:38.000 --> 04:41.000
And then lastly, packaging.

04:41.000 --> 04:45.000
Beginner brewers will often use bottling because it's really easy, there's not a lot of equipment.

04:45.000 --> 04:47.000
But it takes a lot of time.

04:47.000 --> 04:49.000
Step by step you've got to put each bottle, fill it up.

04:49.000 --> 04:53.000
Additionally you have to add more sugar into your beer at the end,

04:53.000 --> 05:01.000
so that the yeast can then convert that sugar into more alcohol and produce CO2 to carbonate your beer.

05:01.000 --> 05:09.000
After a new brewer gets into packaging their beer with bottles, inevitably they switch to kegs and they do forced carbonation.

05:09.000 --> 05:13.000
So basically after you're done boiling, you chill down the beer, you put it in a keg,

05:13.000 --> 05:18.000
you use a container of CO2 and you pressurize it to a high PSI and you let it sit for a couple of days,

05:18.000 --> 05:21.000
and then you have carbonated beer ready to drink.

05:21.000 --> 05:23.000
So this is all fine and good.

05:23.000 --> 05:25.000
I wanted to go out and try this for myself.

05:25.000 --> 05:28.000
I had some friends in university who did home brewing.

05:28.000 --> 05:31.000
They did extract brewing, so basically on the stove in their kitchen.

05:31.000 --> 05:35.000
And my friends and my family all know that I like to overdo everything,

05:35.000 --> 05:39.000
so I decided I was going to do this all grain and build it from scratch myself.

05:39.000 --> 05:41.000
There's lots of different systems you can use.

05:41.000 --> 05:45.000
I decided to use something called the Herms three vessel system.

05:45.000 --> 05:49.000
Herms stands for heat exchange recirculating mash system.

05:49.000 --> 05:54.000
It's basically three kettles, so the three squares in the middle are each 20 gallons,

05:54.000 --> 05:57.000
I don't know, like 40 liters or so, I guess.

05:57.000 --> 05:59.000
That's my brewing set up on the right.

05:59.000 --> 06:01.000
This is kind of like a diagram.

06:01.000 --> 06:07.000
From right to left, you have the hot liquor tank, which is used for the starter water that you use to make the beer.

06:07.000 --> 06:09.000
You heat it up to a certain temperature.

06:09.000 --> 06:12.000
Then in the middle you have the mash louder ton, which is where the process of mashing happens.

06:12.000 --> 06:14.000
You add your grain in there.

06:14.000 --> 06:16.000
And then lastly you have the boil kettle.

06:16.000 --> 06:18.000
And down below you see the two circular things, those are pumps.

06:18.000 --> 06:23.000
Those pumps are rated for high temperature, food grade, etc.

06:23.000 --> 06:26.000
And then in the bottom left you have a chiller, this kind of coil thing.

06:26.000 --> 06:31.000
You run cold water in one direction and hot work through the other direction to cool it down.

06:31.000 --> 06:38.000
All of this stuff is available online through the open source project called the Electric Brewery.

06:38.000 --> 06:41.000
Now I say open source, they call themselves open source.

06:41.000 --> 06:46.000
They have a shop, they sell all their stuff, but really it's just, there's a website,

06:46.000 --> 06:52.000
it has tons of information, and they have two main guides, building your brewery and using your brewery.

06:52.000 --> 06:58.000
And what's cool about the Electric Brewery setup is everything is off the shelf.

06:58.000 --> 07:04.000
So you could go out, you could buy a brewery setup from a vendor, but if some part breaks, you're beholden to that vendor.

07:04.000 --> 07:08.000
And if that vendor goes out of business, if you can't get the part anymore, you're kind of host.

07:08.000 --> 07:12.000
With the Electric Brewery, everything is what you get in the plumbing section of your local hardware store.

07:12.000 --> 07:17.000
And in the electronics section or in the electrician section of your home improvement store.

07:17.000 --> 07:22.000
So when it comes to controlling this system, they have a control panel that you can build yourself.

07:22.000 --> 07:24.000
It takes months to do.

07:24.000 --> 07:28.000
And also the components alone cost, you know, 1500 US dollars or more.

07:28.000 --> 07:31.000
And if you want to buy it pre-assembled, it's only 2300 dollars.

07:31.000 --> 07:34.000
So totally out of the price range of what I was willing to do.

07:34.000 --> 07:37.000
So I thought to myself, what actually is this thing doing?

07:37.000 --> 07:44.000
Well, all it's really doing is turning on and off a high voltage, high amperage switch for a heating element.

07:44.000 --> 07:49.000
So inside of my hot liquor tank and inside of my boil kettle, I have a heating element.

07:49.000 --> 07:58.000
And it's the same heating element that you find in like a US like water heater, like a household water heater that's maybe 50 or 100 gallons.

07:58.000 --> 08:00.000
It's the same kind of thing.

08:00.000 --> 08:03.000
And all this does is let you set a temperature and turn it on and off according to a schedule.

08:03.000 --> 08:06.000
It's a PID controller basically.

08:06.000 --> 08:10.000
But because it's high voltage, high amps, you need to do a lot of stuff for safety.

08:10.000 --> 08:13.000
So I thought, can I replace this with a microcontroller?

08:13.000 --> 08:16.000
And I started to learn about ESP32.

08:16.000 --> 08:21.000
I found the dev boards, you know, you could buy one of these dev boards for less than 10 dollars.

08:21.000 --> 08:25.000
It has Bluetooth, it has Wi-Fi, it has a processor on it, it has tons of GPIO.

08:25.000 --> 08:31.000
And it has a huge community of support for building things, you know, with it.

08:31.000 --> 08:37.000
There are also lots and lots of devices out on the market that are built for consumers based off of ESP32.

08:37.000 --> 08:41.000
So this device is called a Sonoff THR320D.

08:41.000 --> 08:49.000
And it's a 20 amp relay with a display and a button and some LEDs and then nice terminals on the bottom where you can attach your electrical wires.

08:49.000 --> 08:55.000
And so what I did is I basically bought one of these devices for less than 50 bucks, took it apart at home.

08:55.000 --> 09:00.000
They don't have a UART on them, so I had to like solder in my own UART so that I could flash it.

09:00.000 --> 09:02.000
But it's a normal ESP32.

09:02.000 --> 09:06.000
And once I got my first firmware on there, I was able to do over-the-air updates.

09:06.000 --> 09:11.000
So basically a $50 device now replaced a $2300 device.

09:11.000 --> 09:14.000
So that was a pretty big savings for me.

09:14.000 --> 09:19.000
The next project that I used with this whole thing is called ESP Home.

09:19.000 --> 09:24.000
ESP Home, I believe, is made by the same folks that make Home Assistant, but it's a separate project.

09:24.000 --> 09:32.000
And it exists to make it easier for people to build custom firmwares for their ESP32 devices without necessarily having to write C code.

09:32.000 --> 09:36.000
I can write C code, I don't want to write C code, especially when I'm making beer.

09:36.000 --> 09:38.000
Like, I don't think I can handle it.

09:38.000 --> 09:45.000
So I took a look at ESP Home and learned that they have what they call components.

09:45.000 --> 09:47.000
There's hundreds of these components.

09:47.000 --> 09:58.000
Anything from Wi-Fi updates to PID controllers to switches to sensors to Bluetooth to long range radio without Wi-Fi, all kinds of different things you can do.

09:58.000 --> 10:09.000
They're basically pre-made code snippets that you can piece together to make your own firmware.

10:09.000 --> 10:14.000
So I'll give you just a tour of a couple of the core components that I used in my project.

10:14.000 --> 10:16.000
One is GPIO component.

10:16.000 --> 10:26.000
So this is just a code snippet that shows use the GPIO component, turn on pin number 27, and that powers up my temperature controller.

10:26.000 --> 10:31.000
The Dallas component lets me read a digital output from the temperature sensor.

10:31.000 --> 10:38.000
And then the most kind of valuable or biggest impact component that I used is climate.

10:38.000 --> 10:42.000
Within the climate, this was made for, you know, managing a thermostat.

10:42.000 --> 10:47.000
They have a platform called PID, which is proportional integral derivative.

10:47.000 --> 10:59.000
And the idea is that it lets you set a set point of what temperature you want to reach, and then you can tune it with some algorithms so that rather than overshooting your target temperature and dropping and overshooting and dropping,

10:59.000 --> 11:05.000
you can ease right up to your target temperature and hold it there within like 0.1 degrees Celsius very, very accurately.

11:05.000 --> 11:11.000
So I wrote this, you know, it's not very many lines, 10 lines of code or so, put in my tuning parameters.

11:11.000 --> 11:21.000
And you can see it says heat output, relay PWM output, and that connects to this component that I use, which is a P2M pulse width modulation.

11:21.000 --> 11:27.000
So effectively what happens is the PID controller outputs a number between 0 and 1 indicating a percentage of power.

11:27.000 --> 11:31.000
And then this PWM, what it does is I set it to a two minute period.

11:31.000 --> 11:38.000
So if I set it to 50% in a two minute period, every two minutes, one minute the heater will be on and one minute will be off.

11:38.000 --> 11:40.000
And it just pulses the relay on and off for me.

11:40.000 --> 11:48.000
And the PID controller manages kind of the percentage automatically to hit the target.

11:48.000 --> 11:53.000
And then there's another one that I used on here, so I showed that device has a button.

11:53.000 --> 11:58.000
This is just a small snippet of the controls that I built, but it has on multi-click.

11:58.000 --> 12:06.000
And you can just say when you touch the button down for one second and let go for at least 0.3 seconds, you can build whatever kind of gesture if you want, if you want to call it that.

12:06.000 --> 12:13.000
I have a ton of them, but what's really nice is the firmware that I put on these devices runs totally locally without internet access, without network access.

12:13.000 --> 12:17.000
And I can control the entire thing with one button by pressing a series of clicks.

12:17.000 --> 12:21.000
Or I can open up my phone and do it with Home Assistant.

12:21.000 --> 12:26.000
And then, for example, another one is interacting with LEDs.

12:26.000 --> 12:32.000
So when the device is powered on, the power LED turns on or when the heating elements turn on.

12:32.000 --> 12:35.000
The last kind of component to this is Home Assistant.

12:35.000 --> 12:41.000
Home Assistant is a really awesome project that lets you control any kind of IoT device in your home.

12:41.000 --> 12:46.000
And they have built right into it support for ESP Home.

12:46.000 --> 12:50.000
So as you can see on the right side here, you can see my different brewery controllers, Brewery C.

12:50.000 --> 12:52.000
I also have heat pumps that I'm controlling.

12:52.000 --> 12:56.000
All of these are done in the same kind of gamel where I use a pre-existing module.

12:56.000 --> 13:00.000
I have a couple of configurations and it automatically integrates.

13:00.000 --> 13:02.000
And on the left side, that's my mobile phone.

13:02.000 --> 13:09.000
So when I'm in the brewery, and this is what I see, I can drag the slider to set the temperature in my mash tun or in my boil kettle.

13:09.000 --> 13:13.000
And then down to the bottom, I have on-off switches for my work pump and for my water pump.

13:13.000 --> 13:15.000
And those are just done using smart plugs.

13:15.000 --> 13:22.000
So the entire system costs maybe less than $100 in hardware with all the wiring and whatnot instead of $2,300.

13:22.000 --> 13:24.000
So that's everything that I have to share with you.

13:24.000 --> 13:26.000
Reference materials.

13:26.000 --> 13:30.000
I definitely recommend it like Brewery, ESP Home, all of this stuff up there.

13:30.000 --> 13:33.000
And then some photos of the finished products.

13:33.000 --> 13:35.000
And that's it. Thank you very much.

13:46.000 --> 13:49.000
We have time for just, I think, one question.

13:49.000 --> 13:53.000
Okay, one question. Let's go to the guy in the front because it's just together.

13:53.000 --> 13:55.000
He's in the front row, yeah.

13:55.000 --> 13:58.000
Can you talk about all the sensors and...

13:58.000 --> 14:00.000
Can you say it?

14:00.000 --> 14:07.000
Say, you work with the Sonos device and I guess you have many other sensors.

14:07.000 --> 14:14.000
Can you talk, did you do any reverse engineering or you just put them in ESP?

14:14.000 --> 14:18.000
Yeah, so what's really great about this is the ESP Home community is huge.

14:18.000 --> 14:24.000
And they have a directory on the ESP Home website of all of the devices that they know of that are ESP based.

14:24.000 --> 14:30.000
So if you buy an off the shelf consumer ESP device, you can go to their website, see all the pinouts and everything.

14:30.000 --> 14:34.000
And so, for example, when I said GPIO 27 is the...

14:34.000 --> 14:39.000
There's like an RJ9 or RJ11 jack on top that's connected to that pinout.

14:39.000 --> 14:45.000
I didn't have to figure that out. I just went to their website and it said the pinout for that pin is this number.

14:45.000 --> 14:47.000
And it's all in a database.

14:47.000 --> 14:56.000
The only thing that I had to kind of reverse engineer was off the shelf devices don't expect you to flash them so they don't have headers for the first flashing.

14:56.000 --> 15:00.000
So once you get the first flash on there, you can do all over the air updates.

15:00.000 --> 15:01.000
Thank you.

15:01.000 --> 15:03.000
Okay, well, thank you.

