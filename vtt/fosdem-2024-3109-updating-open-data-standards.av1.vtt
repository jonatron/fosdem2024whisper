WEBVTT

00:00.000 --> 00:07.200
Okay, so thanks for bearing with me.

00:07.200 --> 00:11.280
I'm Sara Petti and I'm going to talk to you today about updating

00:11.280 --> 00:15.720
open data standards based on the journey that brought us from

00:15.720 --> 00:18.920
the Frictionless Specification version 1 to the version 2,

00:18.920 --> 00:20.720
which is currently ongoing.

00:20.720 --> 00:22.360
So briefly about myself,

00:22.360 --> 00:23.840
I'm the International Network Lead

00:23.840 --> 00:25.280
at Open Knowledge Foundation and also

00:25.280 --> 00:26.920
the Frictionless Data Community Manager.

00:26.920 --> 00:29.800
I love the digital commons and I'm based in Bologna, Italy.

00:29.800 --> 00:32.240
I left here some ways you can contact me via email,

00:32.240 --> 00:35.120
ex-former in Onos Twitter and GitHub as well.

00:35.120 --> 00:37.120
So before we start,

00:37.120 --> 00:39.840
I just wanted to give you a quick introduction for those of you

00:39.840 --> 00:43.080
who might not know the Frictionless Data Project and

00:43.080 --> 00:46.080
the Frictionless Standards about the Frictionless Data Package,

00:46.080 --> 00:49.160
which is the core Frictionless specification.

00:49.160 --> 00:52.520
The Frictionless Data Package is basically a standard to package your data.

00:52.520 --> 00:54.080
It's very simple and very easy.

00:54.080 --> 00:56.480
Basically, you package your data together with a descriptor,

00:56.480 --> 00:59.200
so containing your metadata and a scheme about your data.

00:59.400 --> 01:01.360
There I put a link if ever you want to explore

01:01.360 --> 01:02.840
all the specification of Frictionless Data,

01:02.840 --> 01:04.440
you can just go on that website.

01:04.440 --> 01:09.480
But so the Frictionless Data Package was released in 2016 in its version 1.

01:09.480 --> 01:11.800
So some years have passed meanwhile,

01:11.800 --> 01:13.720
and it has actually gained a lot of

01:13.720 --> 01:16.360
tractions in research communities, academia,

01:16.360 --> 01:18.880
but also it has often been mentioned in

01:18.880 --> 01:20.600
the Open Data Guidelines of

01:20.600 --> 01:22.840
governments and public administrations,

01:22.840 --> 01:25.720
and it's often used by data wranglers as well.

01:25.720 --> 01:28.480
So we started to think about what

01:28.480 --> 01:30.600
actually was the success of Frictionless,

01:30.600 --> 01:32.520
why was this standard so successful,

01:32.520 --> 01:35.680
and these are some of the things that we came up with.

01:35.680 --> 01:37.680
So the first thing is,

01:37.680 --> 01:42.680
so the Frictionless specifications were not developed alone in a room,

01:42.680 --> 01:48.080
but they were really the outcome of modern 10 years of iteration with

01:48.080 --> 01:50.720
community of practices, stakeholders,

01:50.720 --> 01:56.000
and also a full engagement on issues around interoperability,

01:56.000 --> 01:58.200
data analysis, and data publications.

01:58.200 --> 02:00.080
As you've seen from my slide before,

02:00.080 --> 02:02.960
the specifications are very simple.

02:02.960 --> 02:08.080
I think that that's also one of the key of the success of it.

02:08.080 --> 02:10.920
Basically, because they are very simple,

02:10.920 --> 02:12.880
they disrupt as little as possible,

02:12.880 --> 02:16.560
whatever existing infrastructure is already there.

02:16.560 --> 02:20.320
When thinking about actually the Frictionless specifications,

02:20.320 --> 02:23.000
we always had in mind as an example the CSP,

02:23.000 --> 02:25.560
which is a standard for tabular data,

02:25.920 --> 02:29.760
and we think that the key element of CSP and why it is so adopted,

02:29.760 --> 02:33.480
it's because it is so simple that everybody can use it.

02:33.480 --> 02:36.400
It's not maybe the most adaptable to specific use cases,

02:36.400 --> 02:39.840
but it's still adaptable by almost all,

02:39.840 --> 02:43.640
and so it's one of the most used actually tabular standard right now.

02:43.640 --> 02:47.320
So the simplicity of the Frictionless standard also mean that they are

02:47.320 --> 02:49.520
extensible and customizable by design.

02:49.520 --> 02:51.640
So they are designed for tabular data,

02:51.640 --> 02:55.040
but we have a lot of people in the community that use it for other data as well.

02:56.040 --> 02:59.440
We have metadata standards that are much unusable,

02:59.440 --> 03:02.800
because of course we want to have to bear in mind that data must be fair,

03:02.800 --> 03:06.520
but we also keep in mind that there are human that might want to manipulate that data,

03:06.520 --> 03:10.200
and so the metadata standards are also human editable.

03:10.200 --> 03:14.800
Another thing also very important for us was not to reinvent the wheel,

03:14.800 --> 03:19.960
so try to reuse as much as possible existing standards and existing formats for data.

03:19.960 --> 03:22.720
And then last but not least,

03:22.720 --> 03:25.640
we tried to build as much as possible something that was language,

03:25.640 --> 03:28.560
technology and infrastructure agnostic.

03:30.480 --> 03:33.600
Once that was done, we started thinking about the options of the standards,

03:33.600 --> 03:40.160
and one thing that became clear quite quickly was that a standard alone was sometimes not enough,

03:40.160 --> 03:45.200
and that you need also a technical implementation of those standards.

03:45.200 --> 03:48.200
And it's funny because I was talking yesterday with someone from the Frictionless community

03:48.200 --> 03:53.200
who was telling me exactly this, that it's so great that we have basically built libraries on top

03:53.200 --> 03:56.200
that you can use to perform a number of things on your data,

03:56.200 --> 03:58.880
for example validate your data or extract your data,

03:58.880 --> 04:02.560
and those are present in a number of programming languages.

04:02.560 --> 04:06.880
So I work at the Open Knowledge Foundation where the core Frictionless team sits,

04:06.880 --> 04:11.080
and we developed for example a Python framework, which is the first link that you see there,

04:11.080 --> 04:16.400
but then the community that uses Frictionless also developed other libraries in other programming languages

04:16.440 --> 04:18.440
that perform some of the same functions as well,

04:18.440 --> 04:21.440
so we have Frictionless R for example, Frictionless JavaScript,

04:21.440 --> 04:24.440
and those all form what we call the Frictionless universe,

04:24.440 --> 04:30.440
and here's a website that I'll definitely encourage you to go and have a look if you're interested.

04:30.440 --> 04:34.440
So okay, it's all very nice, everybody adopted the standard and it gained traction,

04:34.440 --> 04:36.440
why did you need to update then?

04:36.440 --> 04:42.440
Well, of course since 2016 issues started to accumulate in the GitHub repository,

04:42.480 --> 04:46.480
so basically last year with the core team at Frictionless,

04:46.480 --> 04:49.480
we started having conversations with the community,

04:49.480 --> 04:53.480
and we started to go through all these issues, try to triage them and see those that were more requested,

04:53.480 --> 04:56.480
those where there was more conversation ongoing,

04:56.480 --> 05:01.480
those that made more sense because of the internet requirements that came up during the years,

05:01.480 --> 05:08.480
and so we decided to start a draft roadmap for version two,

05:08.520 --> 05:12.520
and then the second part was okay, now that we decided to update those standards,

05:12.520 --> 05:14.520
how do we coordinate this update,

05:14.520 --> 05:18.520
and that was probably the part that took most part in as a community manager,

05:18.520 --> 05:23.520
and here I tried to resume the key elements of this update

05:23.520 --> 05:28.520
and the things that it was important to take into consideration for us for this coordination,

05:28.520 --> 05:30.520
for the coordinating this update.

05:30.520 --> 05:33.520
So the first thing is of course don't do it alone,

05:33.520 --> 05:37.520
right from the beginning it was very clear to us that we had to take into account

05:37.560 --> 05:41.560
and bring in people from as many backgrounds as possible,

05:41.560 --> 05:46.560
because as I said before, the Frictionless data standards are very simple

05:46.560 --> 05:49.560
and they are adaptable to many different use cases,

05:49.560 --> 05:53.560
but if you want to build something so simple you need to also hear a lot of people,

05:53.560 --> 05:56.560
a lot of, have in mind a lot of use cases,

05:56.560 --> 06:01.560
because they can actually help you to build a common data model that will fit then the needs of everyone,

06:01.560 --> 06:05.560
or at least it will help you find some minimal common ground.

06:05.600 --> 06:09.600
And so when we started our Frictionless data specification working group,

06:09.600 --> 06:14.600
we brought in people from research institutes and universities from different academic fields,

06:14.600 --> 06:19.600
but also libraries, open data cooperatives for example, and engineers as well.

06:20.600 --> 06:25.600
The other thing is be clear, so the first thing that basically the working group asked us was,

06:25.600 --> 06:30.600
okay, very nice, you want to do this, but please let's define the overarching goals of this project,

06:30.640 --> 06:35.640
let's have a roadmap of this project and let's have it somewhere that it's easy to find.

06:37.640 --> 06:41.640
So for us it was quite easy, we have a project website which is frictionlessdata.io,

06:41.640 --> 06:45.640
so there we published a website announcing the specs update,

06:45.640 --> 06:48.640
detailing the goals, the deliverables,

06:48.640 --> 06:52.640
and from there we also linked to the roadmap, which is actually on GitHub,

06:52.640 --> 06:58.640
because that's where also the technical discussion with the community is happening in all the issues that you see there.

06:58.680 --> 07:04.680
The third thing that was in the beginning a bit taken for granted,

07:04.680 --> 07:09.680
but it actually needed some thinking as well, was to decide how to decide,

07:09.680 --> 07:14.680
because okay, we sat down with the working group and everybody was like, yeah, okay, we'll do this with consensus.

07:14.680 --> 07:19.680
But then we clearly realized that it needed some definition as well,

07:19.680 --> 07:22.680
because not everyone was understanding what consensus really meant,

07:22.720 --> 07:25.720
does everyone need to participate every time to the discussion,

07:25.720 --> 07:29.720
even if maybe it's some part of the specs that's not really important to them.

07:29.720 --> 07:34.720
And so we basically decided that PR can be merged in the specs only

07:34.720 --> 07:37.720
if two-thirds of the working group has participated in the discussion

07:37.720 --> 07:41.720
and has a favorable opinion about it, and that consensus,

07:41.720 --> 07:47.720
we understand as consensus when we reached a kind of like solution that everybody can live with.

07:47.720 --> 07:51.720
And the blog, it's in the announcement blog if you want to go and have a look.

07:51.760 --> 07:53.760
So that's it.

07:53.760 --> 07:57.760
So just to give you a view of where we are now,

07:57.760 --> 08:03.760
at the moment, basically we had 36 issues that were part of our first roadmap.

08:03.760 --> 08:07.760
So 10 out of 36 are now closed already.

08:07.760 --> 08:12.760
Of the remaining 26 open issues, 11 already have a first PR proposal,

08:12.760 --> 08:19.760
and then 23 over those 26 have already actually an ongoing working group discussion.

08:19.800 --> 08:23.800
What we decided to add also as a kind of like information for the community,

08:23.800 --> 08:26.800
for the working group as well, but also for the broader community,

08:26.800 --> 08:30.800
is to have a public live track also on GitHub live as an issue,

08:30.800 --> 08:33.800
and basically you can go there and we update it on a weekly basis

08:33.800 --> 08:37.800
to basically have a place where people can monitor the progress.

08:37.800 --> 08:44.800
And our aim by June 2024 is of course the release of the friction specs version 2,

08:44.840 --> 08:49.840
but we would also like to release a small Python metadata mapper

08:49.840 --> 08:55.840
and also some integrations in external systems like SICAN and Zenodo.

08:56.840 --> 09:00.840
To conclude, I just wanted to mention that this update is made possible

09:00.840 --> 09:05.840
thanks to the generous support of the NL Net Fund, NGI Zero and Trust.

09:05.840 --> 09:09.840
There's a lot of fantastic opportunities out there that maybe could be useful for you as well.

09:09.840 --> 09:13.840
They found a lot of open source projects, so I encourage you to go and have a look.

09:13.880 --> 09:16.880
And then I wanted to thank you for listening to me today.

09:16.880 --> 09:19.880
I left there a bunch of links that might be useful.

09:19.880 --> 09:22.880
So the first one, the frictionestlitter.io that I mentioned a couple of times,

09:22.880 --> 09:26.880
is the project website where everything is linked from.

09:26.880 --> 09:29.880
So if you want to find, for example, all the GitHub repositories, you will find it there,

09:29.880 --> 09:32.880
but also the different project pages.

09:32.880 --> 09:35.880
We have a community chat on Slack, but if you prefer to use an open protocol,

09:35.880 --> 09:38.880
you can access it by a matrix as well.

09:38.880 --> 09:41.880
I left the website of the Open Knowledge Foundation

09:41.920 --> 09:44.920
and also our Twitter handles of the Frictionless Data Project

09:44.920 --> 09:46.920
and Open Knowledge Foundation.

09:46.920 --> 09:48.920
Thanks.

09:48.920 --> 09:51.920
APPLAUSE

09:54.920 --> 09:57.920
We have time for one question.

09:59.920 --> 10:01.920
Yes, thank you.

10:01.920 --> 10:03.920
A very short question.

10:03.920 --> 10:06.920
We said, we said, agree on a commentator model.

10:06.920 --> 10:09.920
Someone who has repeatedly failed at that.

10:09.960 --> 10:11.960
I'll be right back.

10:11.960 --> 10:13.960
Thank you.

10:13.960 --> 10:17.960
So the question was how to agree on a data model,

10:17.960 --> 10:21.960
because that's very, very difficult to agree upon.

10:21.960 --> 10:25.960
I think for us, the key,

10:25.960 --> 10:28.960
it's of course something very difficult to do,

10:28.960 --> 10:31.960
but it's basically to take away all the layers of complications

10:31.960 --> 10:36.960
and all the sometimes specifics of some type of data.

10:37.000 --> 10:40.000
Instead, what we did was basically collect all the kind of data

10:40.000 --> 10:44.000
that we wanted to support and try to understand what the common things were

10:44.000 --> 10:46.000
and basically start from there.

10:46.000 --> 10:51.000
Of course, again, it is very simple, adaptable,

10:51.000 --> 10:54.000
but it is also something that is focused on tabular data.

10:54.000 --> 10:56.000
It is extensible to other kind of data as well,

10:56.000 --> 10:59.000
but that's the kind of course you have to have a data type in mind.

10:59.000 --> 11:02.000
I don't know if that answers your question.

11:02.000 --> 11:04.000
Thanks again to Sada.

11:04.000 --> 11:06.000
APPLAUSE

11:06.960 --> 11:09.000
APPLAUSE

