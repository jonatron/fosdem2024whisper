Hello, thank you first the organization for accepting my talk and thank you for coming.
And in this talk I will present software that I am developing since I think two years ago
named the Dublang.
It's a multi-language live coding system.
And then I will do a very short presentation here with a small video demonstration.
And first a bit about my profile.
I work as a research software engineer inside the project named Cortex Platform in France
inside the University Gustave Eiffel.
Also I am a collaborator of the software heritage project as an ambassador and a debunk
contributor and also as a hobby.
I am a live coder and visual artist.
I am very interested in live coding to produce sounds and to produce video as well.
And that's why I created this tool to support my interest in this subject.
First the name of the project.
I think it's important to mention from where comes the inspiration.
The Dublang name is inspired by the musical style Dub.
And Dub consists of remixes of existing music and Dublang consists of remixes of existing
software.
Then one of the goals of the Dublang tool is to have a single interface text to our interface
live coding interface to manipulate and to use multiple different tools in the same source
code in the same session.
Then how it is designed.
The Dublang system is designed in a client server architecture.
And for that I am using in the client side I am using Nail Vim text editor because I
found it very easy to implement not also because it's easy to implement using the Lua language
that it's a really nice script language that fits very well in the purpose of this tool
as the purpose is to mix different tools in the same environment than a script language
like Lua language works very well.
And then in the other side I have the servers that is being managed by system D service.
Then here is one example of how it looks like Dublang source code.
Then here is an example where I have two different languages and the region with the hashtag
and exclamation defines a region for a specific language.
And then I can have in the same source code different regions with different program language.
And then for each language I have to implement inside the Dublang system extension through
a plugin.
Then the Dublang system is built on top of the architecture is pluggable.
And I can create plugins, new plugins to integrate new languages or new tools.
Let's see if I can play this video here as example.
I hope the sound works.
It doesn't work the sound?
No, it doesn't.
But I don't have sound yet in this moment.
Oh, that's still something.
You can try.
You should be here.
Plugging this into the audio object.
If you're looking, you might get sound.
What I do with this?
Which put a click left or right?
Sorry.
Oops.
What happened?
I don't know what happened here.
Oh, man, what's happening?
Okay, there we are.
I clicked it in the wrong button.
Sorry.
It won't feel screen apparently, but there you are.
Let me go back one or two seconds.
Then here, I have more or less the same code I showed in the previous presentation.
Where is the sound?
I lost the sound.
Ah, look here.
Oh.
Yes.
Then here, when I evaluate this, it's being executed by the super collide server.
And then in the same source code, I'm going to add some...
I think I finished my time.
Just to finish this is now them.
Then this is Bambam, it's being executed by the Tidal Cycles language.
Then two different servers and the client is sending it to the proper server.
Sorry for extending my time.
Thank you for your attention.
No time for questions, I suppose.
Thank you.
