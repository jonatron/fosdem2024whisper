Okay, so let's go.
Okay, so thank you very much.
So I'm very happy to be here with you today and I will give an overview about the
Alton project. So as far as I'm concerned, I am a professor at the University
Catholic of Rueval and Heuve, not very far away from here.
And I've been working on this Alton project for a long time.
So before diving into the project, I will talk a bit about how medical imaging
works in hospitals. So everything is built around what is called the DICON standard.
So whenever you are going to do PET scan, CT scan, MRI scan or whatever,
all of your images are captured by the modality and sent to a large database
in the hospital that is called the PACS, the picture archiving and communication system.
Then the radiologist comes into play and they write a report about the case they see
and then the images are sent back to the patients, to the general practitioners
through web portals typically. And also there can be specialized devices
of our applications that connect to the PACS in order to apply for instance
artificial intelligence, algorithms and so on. So what is very nice in medical imaging
is that everything is driven according to one open standard that is called the DICON standard.
So DICON rules everything in medical imaging, the imaging devices and the viewers,
but also the PACS server. And you must also know that DICON is not only inside the big imaging
but it is also part of the small imaging for instance with mammographies,
with ecographies, with CT scans, with radiographs and so on.
And it is also used in veterinary applications.
And DICON is really two things. It's first, the file formats.
So you can think of it as a kind of a GPEG image with metadata that describes the acquisition
of the patients, the physicians and so on. Plus a network protocol.
It may look a bit outdated as a network protocol because it was designed almost 40 years ago,
but still it is commonly used nowadays and it is used to send images between the different
modalities, to search the contents of remote modalities, to retrieve data and so on.
So everything is built around this DICON standard.
And now what is the Orton project?
Actually the Orton project has its roots in my post doc at the University Hospital of Liège
where we wanted to get back in control with our medical imaging workflows.
Because at that time we wanted to treat machine learning applications and we came to the conclusion
that the different modalities that we had inside the hospital were not very easy to use
and so we needed to create one new platform that was called Ortonc.
So the first release of Ortonc was in 2012 and it was released as the first free and open
source DICON server that just starts out of the box and that has a REST API.
Now there are other DICON servers in the free software community that also provides such features
but ArtOrtonc was one of the first.
So the basic idea behind Ortonc is that we wanted to create a micro service that is available
as free software in order to foster and share the knowledge about DICON.
And nowadays the main use cases of Ortonc are threefold.
First, Ortonc is a DICON server that can be used as a PAX.
It is commonly used to route images between hospitals and between sites for instance for doing research,
for doing the applications of artificial intelligence algorithms and so on.
And we have also tele-radiology portals.
So here you see the main user interface of Ortonc.
It is translated in different languages, not only in English, French,
I think there is also a Spanish translation and a Russian one.
And so the main features of Ortonc are the fact that it is very lightweight.
You can start very easily an instance of Ortonc on your laptop.
And it is an industrial grade, large-scale project with over 400,000 lines of codes.
We do have tele-radiology solutions that are built inside Ortonc.
So you can, when you install Ortonc, have many different viewers like those ones.
2D viewers but also 3D volumetrics rendering and also stuff that are very specialized
and that are focused on nuclear medicine and radiotherapy.
Ortonc is really deployed in actual hospitals.
Here for instance you have screenshots of an hospital in Malaysia that runs Ortonc
for all of its medical imaging workflows.
Installing Ortonc is very easy.
You just, if you are using a proprietary ecosystem,
you just have to download the installer and it will work.
But you can also use Docker, Kubernetes and so on.
Now I will just show you some advanced features because I don't have much time
but if you want you can get in touch with me if you want some demonstration.
We have support for digital pathologies, images which are very large images
and we want to publish them in a web browser.
We can automate workflows notably using Python.
So we have the possibility of writing Python scripts like this one
that allow to route images between the different modalities inside the hospital.
I would also like to mention the fact that physicians are nowadays very excited
by artificial intelligence, obviously.
And for them it is something that is very magic and it is very good
but from my perspective as a computer scientist I just see a black box.
So I'm not very happy with this
because now if you ever look at the number of artificial intelligence algorithms
for radiology, there are hundreds of them.
But there is no knowledge sharing about those ones.
So people don't know how to use those artificial intelligence as end users.
We do have a lot of open source libraries, open source models, open access models and so on
but the general audience cannot deploy and run those algorithms easily on their own computers,
on their own infrastructure.
So we are working on this and for instance here you have a research project
that was published one year ago where we used WebAssembly in order to run deep learning models
directly inside the web browser.
So this means that it is a fully open ecosystem that is secure by design
because everything is run by the laptop of the physician
and you don't have to install anything.
Everything comes with Ortonc.
It is a C++ software so you don't have any dependency
and it can run even on Microsoft Windows 7.
So we are very proud of it.
Here you have an instance of Azor, a research project we have with Musea.
So we treat 3D images of bones, of human bones and it is used for cultural heritage.
So it is one of our research projects nowadays.
We use, as I mentioned earlier, the different viewers in order to do nuclear medicine and radiotherapy.
So just now to the conclusion, thanks you for the reminding.
We have here a recognized project with a worldwide community.
As Gérald mentioned, we are very friends with the global community.
We are a digital public good so with the 3 and 9 goals.
We have been recognized by the Free Software Foundation
and so our mission statement is to freely share the knowledge about medical imaging
including about artificial intelligence
because I think it is really something that is very important nowadays.
So thanks for the attention.
We share the Q&A session I think.
We have time for a few questions here for these two speakers
because they got together and merged their two things.
We have a quick question.
So we were talking about human health and that you would like to have a European
or questioning how to get a human.
What do you think is the limiting factor?
Is it big hospitals being afraid of not having a commercial entity delivering it
during the support of what is limiting?
Why don't we have this?
I would say just three words, third, fear, uncertainty and doubt.
People are not comfortable with open source and with Free Software
simply because they are not used to use them.
I am pretty sure that every hospital in all their infrastructure
use Free Software, Postgres, MySQL and so on.
Every hospital in the world already uses Free Software
but they are not aware about the equivalent software for the medical uses.
Yes, there was a question.
Can you show me the side view so that you can actually pan and zoom in to the map?
Yes, yes, of course.
If you want, I can show you.
So the files, you don't have to import large files.
You can just leave the files where they are and just browse through them, right?
Yes, the question was, is there a need to bring all the entire volume
which is quite a heavy weight volume of data inside your own computer in order to see them?
So the answer is no.
Actually, not for this viewer.
It is a tele-radiology viewer which means that we only download one to this slide at a time.
We don't know the full volume.
But here, in this case, we do have to download the full volume.
Yes.
Yes.
Yes.
Do you have examples?
I'm sorry, I have problems with my ears.
So you're getting started with Docker or some of the windows.
Yes.
Do you also have example images that we can use out of the box to play with it?
Oh, yes.
We do have a web server, for instance.
Can you repeat the question?
Sorry, the question was, is there sample images for DICOM?
If you go to the demo website, if I open the web interface, then I have the possibility here to download a zip file.
And so you can just download the image.
But it is open access images, so you could find them elsewhere.
Yes.
I'm just going to call that the software thing used in the UDT.
Oh, sorry.
When your software is being used for diagnostic purposes, does that mean that you need to have effectively FDA certification or a class 2 medical?
Is that anything that you're thinking of?
So, at once, so, S, Gerard, sorry.
Good.
So the question is, do we need an FDA or CE approval in order to use this inside the hospital?
So you already mentioned this.
The answer is you don't necessarily have to have this regulation.
People, physicians can decide to take the risk of using a free software.
They can always decide this.
It is up to them to decide.
If they don't want to take the risk, then they want to have someone in the commercial entity to take the risk at their place.
And that's what, that's the meaning of the regulation, actually.
It is to give the risk to someone else.
Actually, that's the essence of the certification.
So, if I can jump onto that.
Yes.
Even the big commercial players do not want to be seen as a medical device because that entails that all your source code needs to be audited.
So it's not only, it's not that it's a problem for open source.
Even the commercial parties, they do not want to be seen as a medical device and they're actively fighting with them.
And it is also important that Gnuels and Ortonc are not medical devices.
We are not, we are at the class zero, just like Microsoft Windows is a zero class medical software.
The, oh, I'm sorry.
We have to repeat what he said.
We can.
Oh.
So we, so the commercial, please do.
So the commercial players also don't have the interest to get classified as medical device.
That was what he said.
Yes.
And I was telling that you, the, the DICOM viewer, I've, I've shown you this kind of stuff can be considered as medical device at the moment that the physician uses the, uses the software to do some diagnosis or some treatment on the patients.
If it is just to inform a people, there is no regulation needed.
For instance, a web publication portal doesn't need any kind of certification.
But if the web, the tele-radiology portal is used to make a diagnosis, then you come into the class two medical software.
So, sorry.
One last question.
Yes.
Yes, yes.
We are actually, I have one of my researchers.
So the question is, can we extend this kind of models in order to do explainable AI inside?
So the answer is yes.
And actually I have, for instance, one of my researchers who works on mammography in order to create explainable models that can be run in any computer.
So that's, that's one of our goals in the next few months.
Thanks.
Thank you both, Sebastian and Eira.
We have a session that up until 10 minutes ago wasn't in the schedule.
