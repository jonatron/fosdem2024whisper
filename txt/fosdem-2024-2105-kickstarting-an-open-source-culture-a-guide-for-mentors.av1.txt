Welcome folks, we're on the final leg of Faust tomorrow, so hopefully we keep you awake.
So I'm delighted here to be chatting today with a good friend of mine, Phyllisys, around
something that we're both quite passionate about.
I suppose from our experiences out in the open source, you know, when we first got involved
and we got through it as we go along, and then, you know, just working with the community,
collaborating with folks, and then seeing, realizing how we can bring that into our
companies and bring that culture to help, you know, things get done better for one
to a better world.
Okay, so, so I'm Arton and I work over, I'm a developer over at IBM, and for the last
about eight to ten years I've been in the cloud native space, and I've later started
getting involved in AI as well.
Yeah, and I'm Phyll, also a long time, we're both old guys now, a long time working as
software developers, but, you know, done a lot in the, again, cloud native space, that's
even though Martin and I worked at IBM together, that's really where we're connected over
open source.
Now I'm at AWS, still focused on open source, and we thought we'd start with really just
kind of how we got our start.
Again, we started our careers a very long time ago, we're not involved in open source for
a good long part of our careers doing software development.
For me, it was around 2014 that I had joined a new group in IBM that was focused more on
open source, doing some work in OpenStack and Cloud Foundry, and this new thing called
Docker came out, and I was asked to go check out this new technology, see if we could get
involved, I became a contributor, and in essence I got hooked.
I loved open source, I'd been a long time Linux user, but this was really my first experience
contributing, making pull requests, reviewing code, helping others in the community, and
that's led to the last 10 years of working in the OCI and CNCF and the Container D project
where I'm a maintainer as well.
So yeah, similar to Phil, I was working on Cloud Orchestration product that built on top
of OpenStack about 2013, so we were downstream, we were building on it, and then I got an
opportunity to say, okay, can we extend Horizon, which was the desktop at the time for OpenStack,
it probably still is, and I remember the first conference I went to was over in Atlanta,
I think someone fell off the bus, to be honest, because my manager came to me on a Friday
evening of a long weekend to say, do you want to go to Atlanta to a conference the following
weekend, do you know what to head over?
So I went, and I was just blown away, and I think it was the whole collaboration of folks
and all that, and then as I went into the community and I started then contributing into the Neutron,
which was networking, and if you've ever worked with networking folks, they really are into
the black arts, and they really take networking seriously, and I always felt like I'm going
to get funged out here, because I don't care about IP4 or IP6, I just record, but it was
a great experience, and they really made me feel welcome, I remember we had a meet-up,
there was meet-ups at the time over in Rochester, Minnesota, and the work I worked on, they
came up to me a lot and they maintained the same, we really liked what you've done, we
really liked the fact that you took it on the chain when responses came back to you,
you didn't get upset, you just moved on, you made the changes and go again, and then going
to Hallways forward a few years then on to getting involved in Kubernetes and in the
Helm community, and being really welcomed in there, being part of the Helm Tree release
going out, and then becoming a maintainer in the community, and getting to actually talk
at San Diego, which was a fabulous experience, so yeah, it's been great, you know.
This is where his fancy clicker does the work.
Yeah, a clicker's being unresponsive, sorry.
Use the buttons.
So why do companies need to cultivate a culture of open source?
And I suppose the key one here is, and you get lost a lot of the time, I know we bang
on about it in the community the whole lot is that, you know, nearly every company today
producing software is, or are probably built on top of an open source stack, so if you're
consuming it, you know, you're really involved in communities, sorry, you're involved in
using communities, but you need to look at, you know, how do you feed that back into the
community as well, because if you're using the stacks, if something goes wrong in the
stack and you haven't been helping in those communities, then you don't really have a
leg to fall back on.
The other part of that is the amount of, when you're building on these stacks, you're building
on the shoulders of people who put in hundreds and hundreds of hours.
So you're getting a real lot of value here to build your product on top of it, where
you can concentrate on your product, where you can drive it forward and that you may
not have all the people in the community to do the good work for you like you're getting
from the community.
As you can see up here, there is so much open source out there, and that's coming from Linux,
over the last 100 years, definitely from the Linux community, because maybe prior to that
in the 90s, there's a bit more niche, the amount of people that were involved in open
source, but definitely the Linux foundation community, up along through open stack, up
along, it has really opened the door for people to contribute into communities, and it's
created a real momentum and shift that, you know, if anything we, I suppose, that came
out of log4j was that we realized that it's open source software is in every product around
there, and we need to be aware of that.
The final one then is, and this is very important for your customers, is most customers don't
want vendor locking anymore, and open telemetry is a great example of that. It took a long
time to come up with, there's been multiple standards in the telemetry space, but open
telemetry has been probably the fourth standard where the different vendors have bought in
and decided to work together, and a lot of clients know they want to be able to write
their telemetry metric generations, their telemetry generations, or sorry, their generation
of data once and use whatever back in they want. They don't want to be coming back again,
having to change code and so forth to look to do observability and maintainability. They
want to be able to have that, path finger Newton, and then use the particular back in
they want after that.
Yeah, so it's coming into the community dev room, it feels maybe like we're preaching
to the choir, many of you here, you know, fully agree with the why, you know, why do we do
open source, why do companies need to do open source, but I thought one extra data point
on top of what Martin was just talking about is a report that just came out a year and
a half ago that had this amazing stat that 82% of companies are looking for a vendor
who's not just like Martin said, and like we all know, everyone's consuming open source,
but 82% said they'd like to select a vendor who's actually participating upstream in an
open source community. And then there were a bunch of responses about why, you know,
oh, because, you know, they're familiar with open source processes or they're helping sustain
a community of something that I'm depending on. And we definitely have experienced that,
you know, working on container D for myself that was used in IBM's Kubernetes engine.
It's used in several AWS container compute offerings. And AWS and IBM wants people who
are active in that community so that we can fix problems so that, you know, like this
last response from vendors, 46% said, I'm choosing a vendor that contributes because
I know when I hit a problem, I can depend on that vendor because they have people in
the open source community. And I think Martin, you had an example of that.
Yeah, I have a little example, I can touch them because I didn't want to go near the
stats that I feel was thrown out there because was it 46% of people didn't want it or they
did want it. Sorry, I was a bit confused. No, on a serious note, the final point there
is very telling about a year and a half ago, I was working with a partner and they were
getting involved with us at the time. And they were really, really technical. They knew
their stuff and they were a dream to work with being a technical person where, you know,
they told us they told me what they were looking for. I had them alone. But one evening anyway,
they were using the operator SDK from the operator framework, which is in the CNCF.
And they found the bulk. And before the engineer and that engineer was on North American time,
so he'd gone home to bed. He raised the issue and then he came up along. So I came in the
next morning and was one of those lovely mornings, I didn't even have the coffee and he was like,
oh my God, I'm doing this, you know, but I thought he was brilliant. They put it out there to say,
that's great. All I went, I worked away and he took me on maybe two days to narrow down the
bog, get the fix in. But for that partner that I was able to jump out there, make a fix. It wasn't
a big issue. The big issue was just finding where the thing was as always. Once you find this,
usually the solution isn't so bad. And then just working with the community getting in. And I think
they really appreciated that fact. And you know, most of our customers out there and clients and
so forth, they're very, very technical. They know their stuff. So they're not going to be hoodwinked.
Yep. So yeah, Martin, you're going to take, you know, we've talked a little about companies,
but why do employees care about involvement in open source? And this is, this is a lovely thing.
And it's from my experiences. And when I talk in a while, we've a jumpstart program to help people
get involved in open source is it's an amazing kind of, you know, I hate to use the word organic
and just throw it around there, but it's a great way for somebody to get opportunities that they
may not get within their own company. Because sometimes, you know, in companies or in teams and
stuff, you know, things are rigid or certain ways or maybe, you know, sometimes it's like a public
service for one do a better work where they know I've been there 10 years, so I'm entitled to do this or
whatever. But for me, I just the ability to get opportunities either to speak at conferences, to
meet people on different topics, to suddenly be involved in conversations that, you know, you
taught were for, you know, somebody who is way more experiencing you is just amazing. It also gives
people that ability to work on, you know, you may work in certain technology in your company, but
then all of a sudden you're exposed to these technologies that are out here. And Phil said it
there, like, when we first go out in the communities, you know, everyone's, get up, there's no
problem to that. When you first go to get up, you're playing around with it, or you go out into
USB IRC, but you're open to Slack now, whatever, like, it's a bit, you know, it's a big
challenge when you first start out there and you're trying to engage and so forth. But it really
gives you an opportunity to know how to collaborate with people and work with people, because it's
not always about the technology. It's not always about contributions. It's a collaboration as
well. Because at the end of the day, in your own company, you know, Bob or Mary beside you, they're
paid to, you know, to work with you. When you're on the communities, you know, if, you know, people
will only work with you if you're a decent person to work with. So you get that, you get those
opportunities. And the funny thing I'd say is, just the friendship you made, as Phil said there, we
worked in the same company, we met each other at Open Slack. And over the years, we never worked
together internally, but we'd meet each other at, you know, KubeCon somewhere or some other
conference or like Fosdom here again, and we get a chance to talk together. So I think that's
lovely.
Yep.
And we usually take an old man selfie together. You make me do that.
Yeah, he just wants it because he's got hair still in, I don't.
All right, so we've talked a bit about the why. Just a few points. You know, what does it mean?
What does it mean that a company has an open source culture, some kind of way that they're
they're doing things to encourage open source involvement? One is just the simple fact that
you're contributing back in some way. You know, you have employees who have a pathway. And I know
there's probably a bunch of amazing Ospo leaders here or have been active in this room. You're
making, you know, policies and capabilities, making it possible for people to do that in a sort
of a clear way. You may create open source projects. I've had the pleasure AWS to be involved in
creating two new open source projects that we've shared. We've gotten other people to collaborate.
We're continuing to build those. And then, you know, there's the whole aspect of not just that
you're allowing it, but there's some kind of encouragement. There's some way that employees
who do open source don't feel like they're they're sort of stuck on a different track than
everyone else. Like a promotion is harder because I'm mostly doing open source, and I'm not, you
know, providing for the bottom line. And really that connects that there's some value, some, some
incentive that employees think, you know, choosing to work on open source is just as valuable as,
as, you know, being on a product team or working on a service. And then, you know, I think one of
the cool things I've seen both at IBM, you mentioned the partner story, we have a group of AWS
focused around actually collaborating with other vendors and customers and partners trying to not
just do things between ourselves, but say, hey, join us in this community, and let's work on this
together. And so, you know, these are, again, there's probably a lot more. But really, these are
some of the keys that you would look for is, you know, what does it mean to even have an open
source culture? Just going back in that last night to finish there is, you know, generally,
partners are really, really on the ball technically, and they're really got the air to
ground with their customers. They want to give the customers exactly what they want. And for them,
open source is always that easier path to do and stuff. And it's the way they want to do it. So,
you know, it is in your benefit to be able to engage like that. So how can you do this? So I've
been very lucky in that a number of years ago, two great colleagues, Matt Rizowski and Anne Graham,
came up with the idea for a junk star program. And the idea was that, you know, for early
professionals, we'll get a chance to do a course for about nine weeks where there'd be an intro for
the first two weeks, for so I'll tell them we're open source and how to contribute to open source
and how to use open source and then particular projects and to pick one. And the goal being to
get to push a PR out there. Now, you're probably, you know, if you've been open source, well,
you go PR, but you forgot about the very first time you try to get that PR rate, especially if
you took a while, you're probably looking at your GitHub, you were probably on your phone going,
come on, review it, get it in there, you know. And it is still like we've all had that experience,
I wish that we'd get in there and then you get to a stage and you're like, sure, if they leave it
in, they leave it in, if they don't, I'm okay. But you know, and it's just giving people the
confidence and as I say, we started with early professionals and now we've gone to experience
folks because we realize they want the chance, especially, I don't know, maybe if you're, you
know, as old as I feel there and myself, you know what I mean? You may have got caught in the
rutter work or you might have got opportunities and I've seen people that come and see this and go,
I wish I'd seen this years ago. You know what I mean? You know, they see the potential, they see
the opportunities, they see where, you know what, I can take off here, you know, and it gives people
that go. So the biggest thing is informing your company, tell them about open source and the
benefits of it. The next part then is introducing that into your company, the tools and practices
because things don't work in open source if the practices and the way people work and the tools
are using are chunky or awkward because you have to remember here, it's people all over the world
and all different companies, all right? You know, you have to find a common ground and a common way
of working and a lot of companies know you can hear inner sources coming out all over the piss
and you know, sometimes you hear, you'd swear inner source was something that's started, you know,
that just grew from the sky, whereas to be honest, all you're doing is taking the first word of
open source and changing it. You know what I mean? So the value has been seen here by companies that
it's the collaboration, I think, more than anything. And you know, if your teams have been
struggling or they've been finding a hard to get stuff out the door, that when they really start
buying into this, they realize here, look, you know, one boat lives on. It's not about the individual,
it's about the greater good. So I think that's important. The last two here, educating folks,
okay? And like I said about the jumpstart, we had, look, some people, and I always talk when we do
the jumpstart, you know, we have, we have weekly stand-ups for a half an hour or an hour and I
said to folks, look, this is not like school. If you don't have the stuff done or you haven't made
progress, please attend anyway, and we'll help you on block. But I always make that story. So when
they come in and they'll have a PR push literally in the first week, and someone else is struggling
because, you know, their kids are sick or they're gone on holidays or work has been really busy,
but giving them the opportunity to be able to say right. And I always use the story of the hair
and the tortoise, okay? You know, everyone gets there on their own time. And the last bit then is
around and Phil touch on it. You really need to have a pat in your company that when people
contribute to open source, because they're doing serious work out there. It's not someone out
there having parties, even though people do go to parties, you know, I see John Willicky up there
at the USSF party last night. So but on a serious note, you need to be able to give a
sanctify and say to people you're doing really good work here. Well done. Yeah, and I just one
thing to add to that. You know, Martin talked about the jumpstart program at IBM. We have an
open source talent task force at AWS that just kicked off in the last year. We have an amazing
Ospo and Nithya Ruff, many of you know her. And just trying to think about how to actually
include HR in these discussions about, you know, what does it mean to have open source
maintainers on your staff? How do you treat them differently than, you know, other parts of the
company? How do you incentivize them in the same way that maybe other employees are incentivized?
And then, yeah, just a lot of the practical education parts. Is there a way for open source,
you know, newbies, so to speak, to get mentored to get, you know, and I do a lot of mentoring,
we've built a small container runtime team at AWS, where I mentor some of those younger
engineers. And with them, we've created like an open source hour, actually, I think it's two or
three hours now, where the there's sort of an open, you know, video call, and, you know, the guy
that's three weeks into the, into the job, you know, he's just created his GitHub ID. And he's
like, I don't even know what to do. But he can join this call. And there's others on the team,
who are like, here's an issue, you know, go read the issue. Let's help you figure out, you know,
how to get your get set up and clone the repository. And, and so, you know, these are the practical
sort of nuts and bolts of like how to get people involved, how to get them educated, how to get
them incentivized. And again, I'm sure there's there's ways, you know, your companies are doing
that. And, you know, I think this is an area where I think it'd be awesome to see more sharing of
practices. You know, what are you doing in your company to incentivize and educate for open source?
And just one little thing on that is one size doesn't fit all. So, you know, I'm way a laugh at
that is I saw I know if it wants to fit all or one size fit most, I think is what it said,
but no, I was mentoring a person work a couple of years ago, just one to one. And, you know,
he noticed I was in helm and he said, all right, I want to get involved in him. So the very first
meeting we had, he said, right, I want to get in the helm or whatever. And then I said to him, I
said, do you know what you do? Pick five projects in order of your preference and come back to me.
And I'd say he was a bit stunned. He told me afterwards, he said that was the worst he taught
at the time, the worst mentor and he ever got was he comes in, and I tell him come up with five
things goodbye. I'll meet you next week. So off he went. And he came back with the five things. And
lo and behold, helm was not in the list of five things. He had interest in other stuff. All
right. But I kind of knew that I wanted that person to know what they wanted to get involved in. So
they went away and got involved in tech on. And they made a couple of contributions and they were
doing a bit of work. But as the months went on, I didn't notice him jumping to the committer, you
know, getting more a serial contributor, reviewing more and more. And I eventually said to him about
six, seven months in, I said, look, what's the story? And he said to me, said I was afraid to tell
you, but I don't like tech time. Now that's nothing against tech time. And if you're in tech time,
do not attack me on the way home this evening. All right. But he was honest. And we found out
afterwards he was more interested in K native. And once he got into K native, because he wanted to
do it, he flourished. And he's doing unbelievable well after all. And you know what I mean? Every
known again, he meets me says thanks for helping out. And you know what? That's relatable. Give him
someone to help and listen to him, not telling him what to do. Yeah, Phil, you do it. Sorry. No
problem. Yeah, we got a couple minutes left. We thought we'd connect. You know, we talked about
how we got involved in open source initially. You know, kind of the where are we now? For me, you
know, I've been now 10 years in, you know, almost spending the bulk of my time focused on open
source as a project maintainer as a technical oversight board member in the OCI, a CNCF ambassador,
and then focusing, you know, all the things I've learned trying to help others at AWS similar to
what I did when I was at IBM, being a subject matter expert, helping other teams were figure out,
hey, we have an open source project. We like to launch. Can you help us think through what that
looks like? So it's kind of an exciting point for me to feel like I'm almost more focused on helping
others now than so much, you know, trying to get involved in open source myself.
Yeah, a bit like Phil, I didn't put the specifics in our general digital shows, you know, left hand,
right hand doing different things as we fill it in. But, you know, for me, I think it's been, you
know, people believe in me, helping me in the communities and know a chance to help other folks
do it. That gives me great joy when I when we do the jumpstart and I come in on a Monday and I'm
pissed off for whatever reason, because it's a Monday, maybe, you know, it's just to get the joy of
helping folks and then also being able to help teams internally if they need a hand with open
source. So to just finish out, okay, there are no free dinners in life, my dad, you saw with saying.
And he's right. If you're going to consume something, give back, because it's the best way of driving
things forward and knowing what's going on. What we've learned from working in open sources,
and for me, definitely, is collaboration, the ability to work together, no matter where we're
from, who we are, it doesn't matter. As long as you're a decent person, you're willing to work away,
you know, you will get things done. And that's what team works about. All the best teams, especially
sport teams, I'm going to land at Lorna, don't worry, especially sport teams, all right,
they work the best when everybody is willing to do the job that they need to do, not they don't
have to be the heroes. And finally, it's a great place for people to grow in their careers and
their life. And if you're a senior leader or someone who's in the community that's done really,
really great stuff, please help other people because that's what life is about.
Great, Margot. Awesome, thank you. Q&A, I will run this back and forth. Any other questions?
There'll be a few jelly babies in for you.
Yes.
What is the biggest community lesson you learned from OpenSack and how have you seen that applied
in open source projects that have gotten large since, like for example, Kubernetes?
Well, you're handing that to me. Well, you spent more time in OpenSack than I did. I feel like I didn't.
I actually can't answer that question.
No, no, no, no. I suppose, like from my experience, OpenSack, I had really great experiences from
it. I thought the collaboration was really, really good there. And I think that was brought forward
into the cloud native communities afterwards like Kubernetes, etc. So I think a lot of folks went
and worked in in the Kubernetes communities with new people that came in. But I think the key at
all times was that people understand that collaboration and being decent to each other and
that you're trying to work towards the bigger thing. We don't need heroes in other words.
Thank you. Anyone else?
Can't be good. Either we did really well or people are bored out of their lives.
Yeah, very possible. Okay. Thanks very much. You need folks and thank you.
