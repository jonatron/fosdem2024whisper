Nameless. You cannot blame me for anything.
Hello everybody. Thank you so much for joining.
This is a much packed room than I was expecting, but it's fine.
My name is Alessandro. I have a slide that I present myself.
Of course, I need to fill up the time. Why visual change is good?
We're going to talk about the dreaded. We're going to change things up
and your user will absolutely love it. Nobody will be upset about it.
And we are going to look at a little bit of history about Thunderbird,
what we did and the success that came from all the changes that we did.
So first of all, who the hell am I? I'm the director of product engineering
and you might ask yourself, what is a director of engineering doing here talking about design?
I've been a designer and a developer for almost 20 years.
Yuck. Started as a front-end developer and UX designer at Thunderbird.
First I was already there. Build many absolutely terrible GTK applications.
I'm a really strong advocate of open your process. Open, share everything
from the ideation, prototype, mock-ups, anything that you have.
Just share them with your community. It's free user feedback.
You don't have to pay for user research. We already have people to do that for you for free.
So who doesn't know what Thunderbird is?
Okay, good. That would be very awkward for you to be here.
This is Thunderbird. This was Thunderbird. This was Thunderbird version one.
We officially initially released it in December 2004. So Thunderbird is actually 20 years old.
It looks pretty nice. I guess pretty standard email application.
It has a folder pane, message list, a message pane, a toolbar. Nothing crazy, nothing new.
This is Thunderbird 102. We released this a little bit more than two years ago.
Kind of looks worse, right?
This is colorful. You can identify. It's easy to read.
You can identify the major interaction points. There's a lot of nice white space.
It's breathable. Yes, it's dated with the little icon from Windows XP era.
All this type of thing. But this is flat, cramped, 25 toolbars,
all flat icons. What the hell happened? So all these wonderful things.
And the reasons because this happened is if you don't know,
Thunderbird is actually built on top of Firefox.
Thunderbird is a bunch of layers of C++, CSS, HTML, and JavaScript on top of the GECO render engine.
And at that time, when Thunderbird was initially created,
Firefox and Thunderbird were developed at the same time.
Anything that was happening in Firefox was trickling down into Thunderbird without much control.
All the user interface changes or the tool kit changes, we were just inheriting those things.
So when Firefox adopted the Aero Windows 7, we got that by default.
All those rounded tabs. Even having tabs was weird for Thunderbird, but that worked.
When Firefox was completely compliant with GTK 3 and accent colors,
we got that by default. Windows 10, their new flat accent color toolbar.
So there wasn't really a time where designers were on top or in charge of Thunderbird.
It was all just at some interface things from Firefox.
But the problem is that Firefox UI is technically just a toolbar and a setting page.
Yes, there's much more, but the majority of the things that you use your browser for is just browsing the web.
You don't use your browser to look at the UI.
Hopefully the UI gets out of the way so you can enjoy the web much more.
Thunderbird has a lot of UI, a million dialogues, a lot of message panes, a lot of options.
It's just all the tool kit and UI and design system and ideas that come from Firefox,
they don't translate and adapt seamlessly on Thunderbird.
And then these happen. We broke up.
So these are all excerpts taken from Wikipedia.
The Thunderbird development was just a burden.
They decided to give it to the community, which was fantastic because community members stepped up and kept the project alive.
The problem is that community members were, the majority of them were engineers.
And when you leave the user interface choice to an engineer, everything goes great, right?
Like they, oh, we have so much space on this toolbar. Let's add another button.
Where's the option? Let's put in a sub-menu, a sub-menu, a sub-menu.
It's fine. Users will find it.
So it turned into the most powerful email client that no one can fully use.
Still off today. As off today, we get email supports and requests like,
I wish I could use Thunderbird, but it doesn't do this or it doesn't do that.
And our answer is mostly, well, it can, but you need to enable it from the preferences
but in the sub-menu and also change this dialogue a little bit.
And now you can use it the way you want.
So this is an example of the steps that you need to do if you want to move an email to a folder without using a mouse.
This is the only access point to keep it fantastic, right?
Like very easy if you do a wrong step, everything closes all of a sudden, fucking great.
And then we have other examples that are like the pinnacle of user experience.
We have our filters dialogue. You can create custom filters.
It's extremely powerful. It's an amazing piece of engineering.
But oh my God, what is that?
A lot of users, they say, I prefer to go into Gmail and set the filters there because it's easier.
We have these situations when you need to change something, you need to open a dialogue
and then open another dialogue from a dialogue and then another dialogue and then you can do your things.
Or this, which is for a lot of our users, this is the most optimal interface ever created.
I can see everything all at once and again, I have stacks of toolbars.
What can I ask more for that?
So obviously this translated in slowly losing users because what was working 20 years ago
and what was working 10 years ago in terms of what was the standard of user interface and user experience,
it's completely different.
The level of interest in an approach to accessibility and assistive technologies
or just the heuristic researches and discoveries, they are completely different from what they were even five years ago.
And that translates to user retention.
Users will see Gmail is easier to use.
Yes, there are a lot of other value propositions from like a webmail,
but even other applications are more enticing.
They look a little bit more beautiful and things like that.
So we had, yes, our absolutely fantastic community kept us alive and they continue.
We kind of have a steady stagnant user base, but slowly, slowly declining.
These tip down are December because people don't use email in December.
Thank God.
But yeah, we were like, I don't know, 20 years, maybe a thunderbolt would die, like no more users.
So whoever got this type of feedback from any of their users, this is kind of a silly but honest and knee-jerk reaction to any change
because users, they love their muscle memory.
It's the most important thing, which is true.
When you get comfortable with an interface and when you start doing things without actively thinking where to look for, it just becomes natural.
And when you see someone like a designer stepping into a project, hey, I'm going to change everything because this is bad.
The first reaction is like, fuck you.
And this is a little formula and hopefully if there's any developer in here, you would appreciate this strict operator.
This is a little formula that reminds myself sometimes.
When you don't have any, any like zero user interface and user experience updates, you basically have a stagnant application, which doesn't mean that it's familiar.
Familiarity doesn't mean that you cannot change anything.
You cannot bring any improvements, any updates.
You can maintain familiarity but without creating a stagnant environment.
That's what we did.
We created a new effort called Supernova because we literally wanted to blow things up and create new elements from these galaxy explosions.
And this is a little screenshot.
This was one or two.
This is 115.
It's not finished, but it looks like an email application from 2005 now rather than like 1992 or it was before.
And you can go to Thunderbird.net, click on what's new.
There's a little funny little slider.
You can see the differences.
The thing is we really focus on familiarity and muscle memory and retain the current user.
We didn't want to alienate our audience that for 20 years they kept using Thunderbird, even if it didn't have any substantial update.
So rather than just saying we need to make this prettier, we need to make this look modern, which modern is a very relative concept.
What is modern today is not modern tomorrow.
Don't follow the trend.
So we approached this from what are the improvements that we can do?
And we started focusing on the first problem.
We have a million and one features that users cannot discover, cannot find.
The density control and font size control that we have here are very important because a lot of our users, they have multiple monitors with different DPI.
Sometimes they plug and plug out inside like different monitors.
They're going on laptop.
And it depends on the operating system, especially in Linux, how the operating system talks with the application, how our gecko engine reacts to it.
Sometimes the density doesn't change.
Sometimes the font is a little bit too small, a little bit too big.
These solve 50 bucks per month constantly.
My font doesn't work.
My density doesn't work.
We just exposed these on the primary menu and we made them, not in an option, sub-option, with like multiple text fields.
Just a little thing and this is absolutely lovely.
We focus primarily on accessibility.
Who cares about colors?
Who cares about, it's pretty, no.
It is accessible.
Users with mouse, keyboard assistive technologies, color blind users, can they actually use this without tabbing with the tab like 35 times and losing their minds?
Then we focus on consistent paradigms.
Every tab in Thunderbird, if you open the address book, it looks from another application, the calendar from a third application and all these things.
We start implementing some consistent paradigms.
Let's create an accent primary color that we're going to use for primary buttons.
They use the same color to indicate user call to action or indicator.
Let's create a color palette that is consistent across the space, consistent icons.
Also the icons were coming from Firefox.
We didn't design our own icons.
All the icons were coming from what the designer of Firefox did.
Incredible design that was working well for Firefox, not for us.
So we decided to take in our hands and then fewer dialogues because before the address book, you want to edit a contact in the address book.
You needed to open three dialogues.
Now we have this crazy application called different panels and models and all like very, very intuitive and makes things much more easier and compatible with assistive technologies.
Obviously, our community loved it.
It was like, thank you for doing this.
We were waiting for it because the main complaint that we got was this is not familiar for me.
Like you broke my muscle memory.
I don't want to reuse Thunderbird.
I don't want to relearn how to use Thunderbird.
And the majority of our audience, unfortunately, are like old engineers, like people in their 16, their 70s, asking your mom or your grandma,
please relearn everything from scratch is absolutely not going to fly.
But something happened.
The last little thing in at the end of August, 2023, we officially opened the faucet and upgraded all our users to Thunderbird 115 before we were trickling in and fixing bugs and regressions and things of that.
And now look at that.
For the first time in six years, we're getting more users.
It's absolutely beautiful.
And the feedback that we're getting are incredible.
We have two major feedback.
One is I used to use Thunderbird in 2017 at a stop because it didn't have this or it was looking outdated.
I was looking for something different.
Now I'm back and it's perfect.
I love it.
Or the other is I never used Thunderbird, but I tried and downloaded a couple of years ago.
I hated it.
So I just left it there and now they're trying it again and they're using it and we're getting new user, which is fantastic.
So at the end of the day, visual change is good only, only exclusively if you do it tastefully and you do it with a controlling intuitive upgrade path.
So thank you.
You've actually got like 10 minutes left.
Holy shit.
Let's do this again.
Okay.
We've got a lot of time for questions.
Yes, please tell me.
Tell me everything.
So remember repeat the question before you answer.
Do we have questions from the room?
I see one there and one there.
So we'll go Mike.
Great.
Great talk.
I'd be curious in terms of, I'm not sure what sort of like format you're getting at, but you've seen, I assume overall, user growth.
Yeah.
Did you see a lot of your legacy users drop off?
We had a little bit of a drop off.
We didn't, sorry.
Hey, I have 10 minutes.
I can do whatever I want.
The lovely person asked if we have data to confirm if we saw any drop off in existing user.
Yes, we had a little bit of a drop off, but we didn't pull any actual numbers so I cannot speak like specifically, but in general, we have an average of 15 million active users per month.
And the total complaints that I got of people very upset were around 200 messages.
So it looks like as a first impact is like, oh my God, our community is absolutely upset, but the rest of the 15 million didn't really care.
So always take the grain of salt off, like take them with a grain of salt.
When you get user complaints, is that really the voice of the whole community or is just the knee jerk reaction of you're changing things I hated.
So fuck you.
Thank you.
You mentioned focus on accessibility.
Yeah.
I have some tests that interact with under birth using accessibility API.
Yeah.
And I noticed from version to version it's working worse like less descriptions and left on the notes, etc.
Is it going to be improved with this?
100%.
So that's our question.
The user is asking this lovely person is asking throughout the years, which version do you remember?
Whatever throughout the years, the accessibility got worse than worse.
And if we're going to address this and we're improving it.
Yes, 100%.
The major problem is that what we were using before all those message list and folder pain were and this is probably you're going to collapse some of you.
The user interface was generating C++.
That's a Zool 3.
I don't know Zool XUL.
Yeah.
Very easy to work with absolutely fantastic.
It was easy to inspect everything in like, yeah.
We had like almost borderline zero control on that.
So if things broke, it was very, very hard to figure out what broke.
Now our new folder pain message list is a virtual HTML list box.
It's just an order list with list items.
We need to rebuild all the accessibility that we broke in the past 10 years.
It's going to take us a while, but we collaborated with visually impaired users from our community.
We do a lot of beta testing.
Version 115 is later a lot better.
There's also a little thing which is funny.
NVDA and JAWS, which are the most famous assistive technology softwares out there, because Thunderbird was so broken, they created layers to create compatibility with Thunderbird.
And now those layers are broken because we removed the whole thing.
So great.
Okay.
You go.
One, two, and someone else.
Yeah.
Okay.
So I initially was one of the absolute users and I might say it could have been improved a lot by communication.
So as you see, even in the pictures, the default on the old version was much denser in the number of emails per screen.
So the trick to be happy with the new version is to set your density much denser than you had previously, but this was not announced.
So I had to learn it through Hacker News.
Okay.
So the user, that's not a question, but it's fine.
The user is saying that the default density is much more spread out.
There's much more white space compared to the old one.
So in the previous version, the button did not really do anything and it was well hidden, so everyone forgot about it.
Yes.
The density button was not this horrible.
Yes, absolutely.
We're going to talk later.
I want to ask you why you need that density.
So, you receive fewer emails.
Is that it?
You receive fewer emails.
No.
Well, technically, a lot of designers might know this, but your focal point is actually like this big.
So you don't need all the density.
You have the perception of, I'm seeing everything.
It's great.
I was like, no, you're not that efficient if you have everything cramped as well.
You need space.
Faster to scroll your eyes than to scroll your mouth.
Yes.
There was another question.
Yeah, there was another.
There was, I think I saw her first.
Yeah, one, two.
Yeah, good.
Dan, sorry.
How do you market to users you may have lost to say, hey, try us again.
We've changed.
Okay.
So you're asking how do we market and target users that we lost and change?
We don't really, right?
They're still part of our community.
They're still shouted at us.
They tell us we're doing a terrible job.
And then we show, hey, we made $9 million in donation this year.
So I guess we're doing something right.
And we're gaining 30% of users.
So we don't, there's a certain point where you need to pick your battle.
Like if this person is very upset, like what do I gain from servicing them specifically
and their niche needs rather than the whole community that we were completely like not servicing.
So, thank you.
So I actually used it for like 15 or 20 years maybe.
So thank you.
Thank you for using Thunderbird.
I was actually mostly not contributing.
My point is like so I'm very happy to see more users and probably more money coming.
And so the software is going to improve in 10 years.
But do you actually really attribute these two weeks changes or is it because honestly like for the past five years or like, okay, seven years ago, let's say,
Cernibur was dead for a long time.
Like, Mozilla was not taking care of it anymore.
Other people were thinking should it move to like, like we talked about many different people starting to take care of Cernibur.
So I was wondering if the peak now that we are seeing is just something like, okay, the project is back on track.
There are actually people taking care of it again.
So if I ask for something, someone is actually going to listen to this.
Like also a lot of good work has been done on the booth like the performance.
For me, the increase can be like something bigger than new weeks improvement.
Yeah, so yeah.
So the question is can we make sure how are we sure that the user increases attributed to exclusively UX improvement and not all the other things that happen throughout the years.
Like Thunderbird has more development and there's more trust in the community, all these things.
So Thunderbird was announced that it was part of MZLA, had a new for profit, and we started releasing monthly beta releases and ESR.
We had all the resources in, I was hired in 2019.
Our marketing and outreach for the user continue constantly throughout these four years.
Users, the clients still going down.
We kept having the same feedback.
Oh, Thunderbird is not that fantastic.
I'm going to try it.
Oh, it looks like from 1999.
That's, yes, is not 100% UX exclusive success.
It's a lot of other things, but your user, when they use an application, the first reaction should be, oh, wow, this is nice.
And if you don't have that, it doesn't matter if it's a well supported or they hold the features.
There's the whole thing, but the entry barrier is absolutely terrible.
Your general population, not the open source enthusiasts and the privacy focused person that really knows that one's Thunderbird, the general population will just like don't care about any of that.
So yes, it's a combination of a lot of things, but if you don't, if the first impression is yuck, nobody's going to stay around.
You can take one more question.
One more question.
I saw him, sorry.
You showed operating system themes, not messing with the UI.
Is that still a problem?
Where are the canonical people here?
The person is asking if the operating system changes are still the compatibility with the operating system still messing things up.
Yes, because we release on Windows, Mac OS and Linux.
Windows and Mac OS is pretty stable.
They have the human interface guidelines.
We kind of stick with them with those pretty quite frankly.
We still have bug reports of my custom arch with KDE on Dracula theme doesn't work with your theme.
Can you fix it?
So yes, it's still a problem.
Unfortunately, we rely on the gecko render engine.
So if Firefox fixes it, we get it.
But it's very, very tricky and we have limited amount of resources.
Our front-end team and designer, we're only six people in total and we're services 20 million active users.
So it's a pill bottle.
Can we show some love to...
Thank you.
