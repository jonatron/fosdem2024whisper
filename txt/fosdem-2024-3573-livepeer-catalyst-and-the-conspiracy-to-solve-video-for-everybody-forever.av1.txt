Hello everybody. My name is Eli Malin and I'm here to talk about the conspiracy to solve
video for everybody forever. It's top secret. Don't tell anybody. Definitely don't live
stream this talk or anything like that. This is a conspiracy. We don't want to let anything
out. My name is Eli Malin. Like I said, I've got socials there. I'm a director of engineering
at Live Peer, actually very close to my five year anniversary at Live Peer, which is longer
than I've done anything. Today I want to talk about what motivates me and what I think we
can do to make video better for everybody in the world. I'm also going to talk about
Live Peer Catalyst, which is software we put out, a media server that I think is going
to help us toward this end. I've been working in decentralized video since 2016. I quit
my job to try and go start my own company and from there all the experience I gained
in that led me to Live Peer. This is the best life advice I've ever gotten from Dominic
Tarr who founded Secure Scuttlebutt. If anybody is familiar with that project, I asked him
how I could contribute to Scuttlebutt and he said, figure out what you are uniquely suited
to do and then do it. I think since this tweet that's been approximately what I'm doing is
I happen to know a lot about video tech. I thought I could think of ways to improve the
lives of people using it. That's what motivates me and that's what causes the mission to try
and solve video for everybody forever. We've had a lot of nice state of the union talks
in this room about how things are going. This will be the state of the union for our conspiracy
to solve video for everybody forever. There have been some setbacks. Video is not yet
solved for everybody forever. I'm going to talk about a few of them here. The first I want to talk
about is corporate centralization. This is an analysis of game stream platforms, actually
like all live streaming platforms of a certain category here. You can see we sort of live in a
world where it would seem to send out video to people. You need to be a mega corporation. We've
got YouTube owned by Google and Twitch owned by Amazon. Everybody else add up every other
competitor and they don't come close to those two. While these platforms have enabled a lot of
people to get started with video, there's also been some problems. In order to make these platforms
work at these scale and make it work with all the different content producers, these platforms
tend to be extremely strict about things like having copyrighted music. Even when we're talking
about a clip that you put in years ago, if that gets reported, you can get your Twitch account or
YouTube account permanently banned. This has happened to a lot of people. Basically, it wrecks
their entire careers. They build entire careers on top of Twitch, on top of YouTube. Basically,
these backroom deals that Twitch and Amazon, that Amazon and Google rather, have had to sign
with different folks, causes them to, in order to make the copyright holders happy, in order to
these deals they sign with the big music labels and that sort of thing, they have to permanently
ban these streamers. I want to point out this isn't a law or anything like that. This isn't the
rules about how you're supposed to use copyright. You're not supposed to use copyrighted content,
but in terms of permanently deleting things, that's something that they just negotiated
amongst themselves. But it basically, given this chart here, it basically has the force of a law.
That's people's entire livelihoods going away. This is one group of people for whom we have not
solved video for everybody forever. Another one would be, of course, Twitch streamers in South
Korea, where Twitch has said, nah, it's too expensive to operate networks there, some sort of
contract dispute between local Korean ISPs and Amazon. You just can't stream on Twitch in South
Korea anymore, or you've got to go around in VPNs and that sort of thing, which is probably fine
for the people in this room, but not fine for most people that are wanting to actually go about
having a live streaming platform. YouTube, same deal. If you get three copyright strikes in 90 days
per the contracts they've signed with the big record labels, yeah, just gone, gone forever.
Here's another one. This came up in my research for this just recently. I used to do a little bit
of Twitter live streaming, because it was a fun way to show, especially like the coding I was doing.
I've got a local archive of all my stuff, because I'm a video engineer, and that's how I operate.
Most people wouldn't, and so this is Twitter saving a little bit of money, post deal on acquisition,
and then, of course, Tumblr's ban, which was on adult content, but there's sort of algorithms,
just sort of ended up nuking a lot of people's old Tumblr libraries, things they had spent years
cultivating and building, and that's just all gone now. I would contend that video has not been
solved for everybody forever for these people. Oh, yeah, here's a fun one. Yeah, so a lot of people,
if you build up a PlayStation and you buy an episode of Mythbusters, because you like Mythbusters,
then you have Mythbusters and you want to watch that. Yeah, it's just gone now. You don't get to
watch it anymore. Why? Some agreement between Sony and Discovery that happened in some boardroom
somewhere that will never be privy to, and that's just gone. The concept of buying a piece of digital
content apparently is just not something that really exists. Here's one in the news recently.
Deepfakes, Taylor Swift was briefly blocked from being searched for on Twitter X, which is kind of
funny because there is a ton of explicit Deepfakes being made of her and they didn't have any way to
get that under control other than to block her from search entirely. This is an emergent problem.
This has actually gotten worse. Some of this other stuff is long-standing problems, but this,
technology continues to develop. This is an emerging problem that's making video less solved for
people, so that's not very encouraging. This next one is just a little pet peeve of mine, but have
you ever had a video on your phone and you want to put it up on a TV? Yeah, that's like impossible.
You can get a Chromecast. The best ways to do that are Chromecast, which is of course,
you can have this proprietary Google framework built into every app on iOS and Android in order to
make that happen, which is not super impressive. Some very heroic efforts to reverse engineer that,
but I don't think it's quite to the point where it would work in all cases. Or if you have an
iPhone, you can pay Apple 130 bucks for an Apple TV. This is to get, think of the cumulative
video knowledge in this room. That TV knows how to play an H.264 video, I guarantee it. It shouldn't
be a problem, but to this very day it is. Curious if anybody, this is maybe my personal pet peeve,
but I've worked in video adjacent startups for a little bit. I'm going to take it out on B2B
SAS a little bit. This is the fate of every video startup if you don't actively combat against it.
You might start with high ideals and all the stuff you want to open source and make a really
accessible product to everybody, but then the big client comes along and they've got specific
requirements, specific demands, and your company basically just turns into doing whatever they
want. I've been around in the video industry for a little bit. This is very common pattern that's
happened with friends of mine, and I think it's sunk a lot of other really promising products.
More on that at live here in a little bit. That's the depressing part of the talk. Let's talk about
some successes. There have also been some things that have gone really, really well. One thing that
really took off during the pandemic is like masses and Plex servers. I don't know if anybody has got
like a Plex login or a Synology login for a friend's mass or that sort of thing. My group of friends
got really into this in the pandemic where anybody could access this. Shout out to my mom who I
think has ripped more DVDs than anybody in America. I bought her a NAS for Christmas a few years back
and she's, they just talked her and my stepdad through doing a raid on the NAS in order to get
more storage on there. That was maybe the best Christmas present I've ever given. Yeah, this has
been, these don't go away. Like Mythbusters on Discovery does when you buy it on PlayStation.
Take a DVD, you put it on this and this keeps working. Little self-explanatory.
This works. This has worked since it came out. BitTorrent is arguably the most
successful decentralized project of all time. It works consistently. You can get everything on it
and your content doesn't get yanked when somebody else, when there's some weird contract negotiation
that happens. This is a popular one, maybe an unpopular one, but I did some work with video
NFTs at Live Pier and these still work. On OpenSea, the video is all backed up on Filecoin there.
You can play it on this and there's actually entire like crypto platforms that this, your
creator library, you can upload this and it's an NFT collection associated with your crypto address.
They could decide not to mirror that content for you, but in terms of like having your own content
library compared with the YouTube and Twitch and Tumblr cases where they're like the company
could just yank it from you. Yeah, no, this, you have to have some faith in the blockchain
that you're running on of course, but other than that your library is your own.
So those are some good ones. There's also some emergent projects I want to talk about
that I think are going to help us sell video for everybody forever.
The first is that decentralized social is going to become a thing. I put some of my favorite ones
up here. I am a big fan of Blue Sky and the At Protocol. I worked with Scuttle, actually got
my sort of my start in decentralized tech pre-crypto working with Scuttlebutt from Dominic Tar,
who you saw earlier there. Some stuff on the farcastered lens in the Ethereum ecosystem.
Activity pub and mastodon. I sort of give half credit. I have a lot of love for people in those
ecosystems. I think there's a lot of incredible work happening. I think they, a lot of them,
would acknowledge that the weakness there is the sort of the lack of a portable user
that could move between servers like a concept of like a user with a key that can sign data
and own that with what they're working for, which allows them to own their own media library
and not be nuked when a corporation signs some deal or whatever. It's consistent with what I
call the fundamental principle of decentralization, which is that user actions are sovereign.
If I upload a video, I should have access to that no matter what else happens. They could decide to
take my videos down from their servers, but in terms of like the definition of my content library,
what videos are associated with me. That shouldn't be something that anybody can take away from me.
Yeah, some of you may be familiar with this. There's a group called the Coalition for Content
Providence and Authenticity. It's a bunch of companies now. It's started by Adobe and the BBC.
This does a couple things. This was a little bit, these companies getting ready for a world full
of deep fakes where to combat in a world where these models proliferate and anybody could
generate any video that says, whatever, how do you ever trust the video you're looking at?
And the answer here is actually pretty similar to the blockchain answer, which is you do so
with signing chains. So you've got a C2P enabled camera, which has a little encoding chip on there.
It's got a private key associated with that. That signs the video as soon as it's created.
That goes to some editing software that makes some transformations to that and signs that it did so.
And then by the time you get to a user on the web, they could theoretically click in the corner and
say, okay, here, this video is created at this time and edited by this person. And it's not perfect,
but especially with the provenance chain back to the original camera, you can have more confidence
that you're looking at the right thing. This isn't in wide adoption yet, but I'm very excited about
it. And I think it has an answer to some of the things I'm talking about here.
So yeah, the goal in my mind for that to leverage this in the social case would be like,
I could livestream on Blue Sky, transcode that video on the LivePeer Network,
more on that in a second, and then somebody else could post a clip to their mastodon.
And you could look at that clip and be like, oh, I'm looking at a clip from Eli's livestream,
right, through the magic of signing and deterministic transformations and that sort of thing.
Yeah, this is a really crude example that we came up with for how that could look,
like a little button you can press in the corner of the video to get information on that.
Yeah, so let's talk about, so that's me talking about some problems and solutions in
video as a whole. Let's talk about what LivePeer has contributed to this. I'm going to give a
really fast overview of what LivePeer is and the LivePeer Network. LivePeer's mission is to build
the worlds open video infrastructure. We started out doing that with the decentralized network
of video transcoders. Most people in this room has probably run into the concept that video
transcoating is very expensive. Doing this kind of processing can cost as much as like a dollar
per hour video on different cloud services. The LivePeer Network instead has this group of
decentralized orchestrators, basically people running in video cards in lots of sort of
unconventional spaces, not in data centers as people might be accustomed to.
Because of that, we can offer sort of this radical low-cost transcoating solution
that's much cheaper than existing approaches to this. But we got caught in some of our own traps
here. We had the decentralized network. It worked really well, but as we stepped into the video
industry, people didn't want to hear about loading up an Ethereum wallet with funds and
transcoating on the network and that sort of thing. They're like, hey, can I log in with an
email and password? We're like, so just sort of because it's what you do, we ended up building
a SaaS product, which I'm really proud of. We did a lot of really good work. Shout out to the
MIS server team who MIS server makes sort of the core streaming engine for the live streaming parts
of this. But it got to the point where engineers at LivePeer couldn't even boot this up on their
own laptops. This was just so chaotic, so many different microservices. It's a globally distributed
team, so it tended to be like one person had their own service that only they knew how to operate
and that kind of thing. My work for the last six months in particular started out as something
called LivePeer in a Box, where we take all of this and we put it all in a single Docker image
with a single point of configuration management and that product became what we now call LivePeer
Catalyst. There's the LivePeer Studio hosted product. We've been using the phrase get lab model
a lot. There's LivePeer Studio hosted product and there's LivePeer Catalyst, which is the
self-hostable version that anybody can run on a laptop. I'm just going to give a really quick
demo of this. Let's see if it'll cooperate. There we are. There's instructions for this on
doc.livepeer.org. I intended to have this running when I started, but ended up having to restart
this laptop here. Good, good. We should get a ridiculous amount of spam here. Shout out to
MistController booting everything up here. Okay, okay. As I mentioned, lots of different services
that are all crash looping until everything is set up and running here. We'll go over to...
This is local host. I just have it as my URL here for the purposes of putting a TLS cert in there.
This is a full self-hostable version of LivePeer Studio. I can step into a stream and hopefully
this will work. I can go live right from here. Nice. We support WebRTC, ingest, RTMP, SRT,
and then RISC as soon as the Mist server project that was mentioned ships. We'll have that.
I'll stop the broadcast here. It's got scalable live streaming that can be fan out to as many
nodes as you want. We've scaled up to... We tested most recently with 200,000 concurrent viewers
all over the world. We've got assets. There's one I recorded when I was testing this. This is my
live stream when I was sitting there finishing my slides. This is an asset associated with that.
We've got lots of different features here, multi-streaming, so you can push out to Twitch and
YouTube, stuff like web hooks and signing keys. Going for this freely distributable,
full-featured server here. I want to leave some time for questions, so I'm going to jump back over here.
Concluding thought, what do you take when you put all these things together? We've got the rise
of decentralized social. We've got stuff like the C2PA, which is going to provide content
provenance about video, so we know it came from. We've got this freely distributable
MIT licensed server with all these different capabilities. What do you get when you put
all those things together? The answer is I don't know yet. This is all emerging very quickly.
I can see the future a little bit. I can see a world where some of these decentralized social
projects start to take off, and of course any social thing is going to have live streaming
eventually. In order to make all of that work, it cannot just be assertions by a particular server.
We want to have signing mechanisms and that sort of thing. I'm looking forward to that world.
I'm looking forward to building it. If any of you are interested, you can join the conspiracy here.
That's the Live Peer Catalyst community page on the QR code on the right there, if anybody wants to.
We're hosting a party this evening at Market Bar at 7 p.m. Feel free to stop by that,
and we'll talk about solving video for everybody forever.
I've got a couple minutes for questions, if anybody.
Other than that, I can just give you some time to scan some QR codes.
How can people contribute?
How can people contribute was the question. There's a landing page over there talking about how to
get started. Actually, if you go to docs.livepeer.org here, there's a whole catalyst section now,
talking about both how to boot up your own catalyst node locally and how to develop on it.
If you want to make changes to things internally, if you want to change some of the internal
microservices, that sort of thing. Yeah, we also have, I didn't do it yesterday because I was here,
but every other week we have the Catalyst Hackers Group on the Live Peer Discord.
So, discord.gg.invite.livepeer, or you can just google it and figure out how to get there.
That's all the people that are helping us build this sort of thing, coordinate there.
Cool. Thanks, everybody.
