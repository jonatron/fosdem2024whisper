So, okay, we got the hard task to be the first one to speak, and so we failed.
My name is Jean-Lin√©ie.
I'm the CEO and co-founder of OnTech, and today with Louis, we will discuss what we've
done so far and what we are trying to achieve.
So, we wanted to have a bit of a general introduction of how we see the energy and how it could
become more and more open source over the years.
The idea is that we see it as a pyramid with the bases being the power hardware and then
having levels of sensors, real-time algorithms, industrial informatics, higher level in terms
of communication, how we dispatch information from these devices on the field, what protocol
we'll use, how we dispatch the energy among different power hardware, and then there is
the highest level, which is like simulation, optimization, and modeling, forecasting, and
so on.
Today it's really exciting because if we look at what is it all about in this session, we
have like plenty of amazing projects that are filling these pyramids, and it's really
interesting because eventually we can reach that point where we have like the whole chains
from the power hardware to the modeling, to the forecasting, to the optimization, through
all the complexity as well of communication and protocols and so on.
An interesting thing to note is that like the time constraints in the power hardware
is not necessarily the same as the one for modeling and simulation for grid, for instance.
So, the complexity associated with these things makes the informatics different, it's different
fields between like the embedded world to the HPC and the modelization and optimization
world.
So, there is like an inherent complexity in the energy domain that is really interesting
as a technical asset and thing to explore.
And this is why I'm really excited today is that like in this session we are combining
simulation, communication, hardware, and so it seems that we have already all the bricks
and maybe tomorrow we'll build the pyramids.
So we the energy people have the power to change the world and so I'm really excited
about that.
We'll let the floor of speech to Luis now.
Thank you, Jean.
And this pyramid is built with different bricks and these different bricks are hardware softer
like Jean just said and hardware usually is hard until it isn't anymore, until somebody
comes along and bundles the hardware somewhere and makes it ergonomic, makes it easy to use.
That's what Arduino has done, that's what Raspberry Pi has done, Microbit has done it
as well and they have inspired us to do that for power hardware.
And that's what we have achieved.
We have, there's a box there with one of our circuits and I'll pass it around a little
bit later.
We propose a community based compact versatile open source and low cost technology for learning
and prototyping power electronics.
That's the goal, that's what we want to achieve.
The idea here is to create a technological sandbox just like Raspberry Pi, just like Arduino
have something that is standardized, that is simple to use, that can be used by academia
for teaching, can be used by industry for fast prototyping or for using in other applications
for makers and fab lads to make fun stuff and burn it.
And this is the place where we hope to foster new ideas and come up with new talents, people
who are willing to build electric bicycles, people who want to build a microgrid, who
want to understand how it works and put together the bricks and build the hardware upon which
they can test their forecasting algorithms or test in their models.
Now, how does, starting to get a little bit under the hood, how does power hardware work?
If we look at it from the perspective of a functional analysis, the power is really
the red arrow in the corner.
And to get that arrow to work as we want, we have all these different arrows in the middle.
And if we take a top down approach where we come, we did a forecasting, we did a simulation
which allowed us to do a forecasting, which allowed us to do, to calculate an energy management
strategy which we then send via dispatch through a protocol all the way to the target.
And when it gets to the target, it gets here through the communication backdoor or frontdoor.
And that goes into the industry informatics and the control systems which are operating
in real time, locked into this micro or nanosecond level loop.
It also receives measurements from its own embedded sensors, but these are not normal
sensors that we come in interrogate via Laura once a week.
Or these are sensors which are sending information at a one megahertz bandwidth which you are
sampling at 50 microseconds or sampling at a very, very precise moment as well.
These combined the control with the algorithms that are in here, they create the low level
electric signals which then go there and trigger the power electronics for them to work the
way you want them to.
And then the loop is closed and the thing works.
There's a little fiddler secret in the middle, never forget it, the energy has to come from
somewhere so sometimes if that little fiddler secret fails, the whole thing stops.
So everything kind of stands on the choice of the little component that you made when
you put that little fiddler secret there somewhere.
And what we did is that we got all the stuff, we put it into a board and you have all the
different blocks which are somewhere bundled there together.
But you don't have to understand to that level of complexity unless you want to.
You see the communication coming in and the power going out, that's it.
And that's the idea.
We have two products.
We have one which is a power product, the twist board which uses the second product,
a passage to talk about.
The twist board is a module which we can then either rack up together so we pick several
twists, we put them together and that allows us to handle more power since they synchronize
and communicate with each other.
It's a linear progression.
The more twists we put together, the more power we can handle.
And we created a communication bus at the low level which can talk in CAN, can talk in
NRS 485 so we can talk at the millisecond, we can talk at the microsecond and we can
talk at the nanosecond with analog.
So we have different bandwidths which we can dispatch with through different communication
methods and protocols.
And we have the spin board which I'll let Jean present you.
So eventually in order to control power hardware so fast you need like some special embedded
microcontroller.
And this microcontroller has some real time constraints to it.
So it's not a regular Arduino or Raspberry Pi that will do the job.
If you want to have good performances you need really precise timers, really special
communication peripherals.
And so eventually we came up with designing our own board which is like the spin board.
The spin board is both a piece of hardware that looks a bit like an Arduino Nano or a
Raspberry Pi Pico.
And this thing has tremendous resolution for its PWM signals, so the driving signals
that will eventually drive the power stage, but also a really flexible acquisition of
signals.
So it will connect with the analog signals on the board.
Eventually microcontrollers are great only if they work together with great ergonomics
and coding a microcontroller can become either a nightmare, either a piece of cake, depending
on what is the software and the ideas that you use to do so.
So we wanted to comply with the maker movement mindset where you basically take a piece of
microcontroller, you plug it with USB to your computer and you start coding in seconds
and minutes.
You don't have to install all the tool chain and so on and everything is done by the ID
itself, so without the complexity to set and so on.
In order to do so we use platform IO together with visual studio code so it's a really seamless
experience for the developer.
But also we have IO level of development that is possible for MATLAB for simulation people
that want to deploy some control loops and control those directly in the target.
They can do so through an IO level of graphical coding, let's say.
And those are there is something from the Linux foundation, the FliarHartus that is providing
a framework on top of which we've built APIs.
So these APIs are calls that are basically making things seamless for the user so that
you don't have to go through the hassle of the 2,000 pages of the microcontroller in
order to program the power hardware.
You have like high level functions that relates to the power world, so okay, what is the duty
cycle, what signals I want on that MOSFET or directly related to the application.
I want to increase the voltage, I want to decrease the voltage so I can go in my level
of complexity in the language I talk daily and I don't have to go through documentation
and things like that.
So we have different APIs.
One is the microcontroller API if you want to develop your own hardware, your own power
hardware and control it through the spin board, you can do so.
Or you can directly call another API that is built for the power hardware that we provide
as well with the spin module.
So this way you can call functions and not signals.
And then there is a communication API, how to synchronize things with the surrounding
world and task APIs to say okay, I want to dedicate that amount of time to do this calculation
and that amount of time to do communication or higher level housekeeping stuff.
And then there is a user code that is basically your main as in a not doing no experience,
let's say.
So this is the pinout.
Of course everything is open source, so the hardware itself is a CERN HL license based.
The idea here is to push people to share back the modification so that we can move on with
a better and better hardware of the time.
Of course all the documentation is Creative Commons, all the interfaces and the graphical
stuff is GPL.
And we have like a dataware and something that you can plug and see like the data live
like if you were having a kind of a low bandwidth oscilloscope just by plugging your USB cable
and gathering your data from the device directly.
In order to make that thing happen, like we've created a foundation that is under the
Aegis of the Seniors Foundation, so it's a National Council of Research in France that
has put a ton of effort into making this thing a reality.
So we got a lot of support from a public lab in France and this is where it comes from.
And so the foundation is holding the IP.
So if you want to contribute to this project, everything will be under a dedicated foundation
that has strict rules to enforce the open source vibes of the project forever, forever
one.
And then there is a startup that is basically providing the hardware because if you want
to develop things, you need someone to be able to provide the hardware to go fast basically.
And yeah, so on the foundation side, we create tutorials, content, MOOCs and we make that
thing available online.
So we create an online space for that.
We also coordinate a small embryo of community at the moment, but we hope that it will be
more vivid and for some international collaboration around these fields of power for energy.
And also we are starting to organize training sessions and events to answer local needs
and the idea is to spread and to make things decentralized in a way that everyone can tackle
its needs of energy with this kind of Arduino for energy thing.
So to give an example of the first use case, at the moment we are working on a use case
with a fully open source e-bike and in this e-bike you have inverters, you have battery
chargers, BMS system in order to monitor all the cells of the battery, converter as well
for the PV panel on the roof.
And so we are collaborating with our great open source hardware projects such as Libre
and Vosola and we are aiming at replacing all these closed source pieces of converters
inside of this e-bike and make it fully open source A to Z from the smallest piece of electronics
to the frame to the bike itself.
So yes, that's it for me and hopefully Luis will be able to make a demo in five minutes.
Yeah, maybe we can combine with a question.
And how much? Sorry, can we buy the boards and how much?
We started producing so we have our own pick and place machine so everything is made in
France at the moment, assembled in France. So we have started assembly, we have shipped
our first eight boards to a university in France for students. They haven't destroyed
the boards yet so it's a good sign.
And so we have pre-orders at the moment and so to give an insight of the price at the
moment the power module is 300 euros and the microcontroller is 45, 49 euros.
Can it be used in a full tour around the architecture?
So yeah, to answer that really fast maybe I will come up back to that slide. So one of
the strengths of the modular approach is that we've put a lot of effort into making
different modules, being able to share power loads and share communication. And it's a
good thing for fault tolerance because if you go modular, if a module fail you can think
of clever ways of replacing the faulty modules with another module.
Yeah, just one, an application is a complete autonomous, energy autonomous for electricity
home with wind power, a little solar panels for the voltaic, also bicycle with electric
assistance and so on. So also for with low tension DC for computers and something else
and high tensions AC and also taking account of the day of the day, the battery charging
with lead, battery charging with lithium or lithium, I don't know, something like that.
So definitely off grid applications are key and also for energy independence and so on.
At the moment the module that we've developed is DC based, so it's DC to DC. It has a really
wide range of operation between 90 volts down to 10 volts also. So it complies with all
battery technologies from 12 volt batteries, 24 volt batteries, 48 and 90, like 86 volt
batteries. So it covers a range of battery application let's say. In the future our goal
is this kind of grid applications and home and energy independence is to go for a microinverter
basically and this will be made by combining different modules. So this one is a DC module
and then we'll add an AC connection on top in order to cover this off grid applications
and energy independence. There is one in the back.
Could you create also some BMS or open source?
So we haven't developed a BMS but that is already covered by the hardware from Libre
Solar I think.
Hello, it's a bit of an implementation question. So you are using Canvas, so you are using
Canvas for now. Maybe it's because the automotive world is using it. I was wondering if you
were thinking about moving to something like T1S. I'm not sure you're familiar with that.
It's kind of Ethernet but with the CAN topology, so multi-drop. So it's really nice and kind
of microcontroller friendly and IP based by thanks to Ethernet. So I was wondering if
you were kind of thinking about it.
So yeah, we thought about it because Ethernet is as great features but it tends to be costly.
The idea is to go like to lower a bit down the cost of the overall communication architecture
and so on. Yet we are making things like to the biggest extent modular in a way that
if you want to plug a different way of communication you can do so. You can access all the pins
of the microcontroller that we have. Maybe in the future we will make it think we will
support different microcontrollers as well that will have more features and more peripherals
but at the moment it's not planned. We have like two different things. CAN is for housekeeping
and sending average data. And RS485 is for superfast communication. So we go at 20 megabits
with RS485. So it's a bit uncommon but it permits to have like one cycle of control
communication with different modules. So they can share one reference and a set point but
also measurements among multiple modules still at 10 kHz control frequency for instance.
No? Sorry, no demo.
Can I convey it for you guys? We are here the whole day but the thing just crashed of course.
Of course it did.
Demo effect.
Demo effect but I would like to just share something with you though.
I can hear you online.
But I would like to share something with you. Can we get into a...
Yes.
Yes.
So we do have a...
We do have a GitHub and what I wanted to show you is that on our own tech foundation GitHub
there are sample codes, the examples of the data that we have.
And in the example repository we have multiple different examples of how do we use the twist
board at different applications, DC to DC, microgrid, AC. What I wanted to show you, the demo that I failed miserably to achieve,
was the microgrid. So what is that supposed to look like if we get the peer to peer AC microgrid?
We have the documentation. How to connect the boards together.
And the communication that goes here. And these two boards then will work together to share power.
In this case it's a peer to peer exchange. So one board is drawing power while the other is supplying.
And this is actually data from the board itself. That means that we can ask the power converter to sample very quickly data.
And keep in its memory and then we can retrieve it later. So we can do this kind of test where we get...
Every point is about five microseconds apart so we can get a lot of resolution and see what's going on.
It's offline because we do it after the work but it still works like that.
And for the DC-DC side, same thing, we had the DC...
Comes up. Okay. We have the different structures and different examples. They are there.
So we invite you to go there, take a look at our Github. Take a look at the spin board. It's there. It's in Kaikaa.
The twist board as well. And if you want to talk with us during the day, I have everything that I would need normally for a demo.
And we can just sit down and do it together.
