Okay, next up we have Stéphane who will be talking to us about his project to build an
open source Braille printer.
So please give a warm welcome to Stéphane.
Hello everybody.
Thank you for attending this session.
We are here to talk about a project, an open source open hardware project which is called Braille Wrap.
And we will explain the story of the project, basically the technical subtlety of the machine.
And talking about some questions the machine is asking to us.
First we will talk a little about Braille.
Braille has been imagined in 1829 by Louis Bray, he is a French guy.
We build a system with six dots grid that you can read with your finger.
It's a tactile system for excited people with a well defined dimension that you must respect if you want to call it Braille.
Basically each combination of the six dots correspond to a letter in the alphabet.
Very simple.
But with six dots you have a very limited combination for a style.
So every country in the world have adopted a different system.
The grid of six dots remain but the signification is slightly different.
Even from French or from English, for a basic letter you can have the same.
A is just one dot in French, just one dot in English.
If you have a capital A this is slightly different.
If you have a number it's different in French and in English.
About that, making Braille documents is a subject, a topic in the maker's movement a long time ago.
You have many projects in open source movement to make Braille documents or Braille labels.
I think the first one was Braille Go.
It was a teenager who built Braille and Bosse with Lego bricks.
You have also open Braille from Carlos Campos.
This was a project with a recycled printer.
Many of these projects were successful because you can use it to produce Braille documents.
But they are proof of concept because they are very hard to reproduce.
If you want to build a Braille Go you have one or two pages of documents of how to build it.
If you want to build a system from Carlos Campos, open Braille,
you need to find the good old printer and deal with his document to produce it.
In 2016, my name is Kit. It's a French nonprofit organization.
Basically it's a fab lab oriented to technical solutions for disables.
They start to test making Braille with different solutions.
In Hackathon, they customized a 3D printer just putting a Braille needle at the end of the 3D printer.
They write a piece of software to translate text into Braille and the Braille into G code.
This was functioning about an hour.
You need to customize your printer and you always need to do things for the device to continue functioning.
It's based on 3D printer so it's not very fast.
Just to make a dot, you have a stepper motor so it takes some time to push the paper.
If you need to make 600 Braille dots on a piece of paper, it takes about an hour.
In 2018, we take all this project, think it's proof of concept, and start a project.
Open source.
Actually Braille is less than 1.2.
Easy to build in a fab lab.
The idea was to have a device that everyone can build, not to have the better device of the world.
With widely available parts, we wanted to have something that not very specific parts that will be hard to approximate.
The first point of the project was how to make Braille dots.
All the projects we have seen are using a Braille needle, pushing the paper on some kind of soft material.
Sometimes a mouse pad, sometimes a piece of plastic.
They always use stepper motors or something like that.
We think that using a solid needle would be a better choice because they are strong, fast, cheap, and you just have to make an on-off.
It's really easy to operate.
We put a Braille needle at the end of the solenoid, and it's working incredibly well if you put an anvil on the other side of the paper.
You have the solenoid on the bottom with the Braille needle at the top.
We have the sheet of paper on the other side.
You have just an anvil just to control the shape of the dots you are making.
Once you have that, you have a tool to make Braille dots.
You just need to move the tool around the paper sheet.
You just need to have an X and Y system.
This is a very standard design.
Every numerical machine, 3D printers, CNC are doing that.
They are moving a tool in X and Y space.
Actually, this is what is a Braille wrap.
This is a numerical machine, but something like a wrap wrap.
If you remind of the first 3D printer, it was a 3D printer that you can build yourself.
It's a wrap wrap with an embossing tool, and not with a hot hand with plastic provisioning.
The frame is built with laser cut.
You can do it in many materials.
The most popular one is plywood or PMMA acrylic sheet.
You can do it with any single one.
All mechanical parts are 3D printed parts.
All the bearing, linear rails, the stappers, and also all the electronics.
We chose to use a 3D printer controller with customized firmware
just to have some specialized functions to handle the paper.
Finding the edge of the paper is not really the same as doing a reference course in a numerical machine.
It's very little.
Because making a machine that is working well, easy to build, easy to build for everyone,
we make workshops with the machine.
You can see that the first version, the image on the left,
is not the same as the last version, the image on the right.
The message starts small, but starts.
The main problem probably was handling the paper sheets,
because paper is very strange.
When you handle it in your hand, you imagine a very soft material,
but if you lock it in the good position, you can jam a printer,
you can see it in the 3L1, and you can jam a sheet of paper in a bright wrap.
What I wrote is you can lock a stapper with just a piece of paper if you put it in the good situation.
This time, we learned that you must not force a piece of paper to go where you want it to go.
You just have to tell him gently where to go and everything will go fine.
The next aspect is the software.
Once you have a good device, you can print, make dots on paper,
but you still have the problem of the braille.
At the start of the project, we made a piece of software in a hackathon,
so in a few days, you know, with a start of braille translation, only in French.
And the software that generates G-code files that you need, another software to send to the printer.
It works, but it was not very user-friendly, you know.
A few months later, we used NadBri.
NadBri is an open source braille translation software.
It's available on the Internet. It's a French project.
So the braille translation is still in French, but we were able to modify the software to put a driver
and just to have a print button in the software.
So you write your text, you translate it into braille, you put a print and you have the result and the embosser.
So for the user, it's a big improvement, but we had some problems due to the evolution of Java
and the lack of maintenance on the NadBri project.
So we start our own software.
Looking in the Internet how to translate braille, we find a wonderful project that's called Libre.
Libre starts many years ago and is a fork of a project that is called Braility Onlinex.
This project started in 1995, you know.
So it is widely available, free, open source.
Many developers contribute to have a good translation in many languages.
So you have 200 braille standard translations available in Libre.
You have everything you want, French, Italian, Spanish, Chinese, Swiley, Arabic, many, many.
So we use this to make the translation and also we made an accessible software.
Software Access Braille Wrap has been tested with what we call a screen reader.
This is software that the Insighted use to use a computer.
You know, this is basically something that read the screen to tell them what is written.
When you want to write accessible software, it's not just reading the screen.
You must imagine the scenario and putting just the information you want to be told by the computer
for the Insighted people to use it easier.
We have some projects for the future.
USB Braille, this is basically a Wi-Fi extension to use the embosser just with a smartphone.
You know, you connect it to the Wi-Fi.
No software to install on the phone.
You just have a web application.
You write a piece of text, you put print and you have a label, a piece of braille on the embosser.
This project is funded by another organization, Moolove Open Source.
This is a CCLab.
We have another project that is called Desktop Braille Wrap.
The idea is to mix vector graphics to make tactile schematics and Braille.
The idea behind this is to build a metro plan, a building plan, something like that.
We made some tests and it's working very well.
Since 2088, as we put the project on the internet,
we have people on the other side of the world sending mail,
okay, we have build one. It's working well.
We made some operations with the machine, Braille Wrap Cameroon,
where we built six Braille Wrap in Cameroon in four workshops in four cities.
One guy built one in Fab83 in Bhutan with his team and earned the public price of Fab83.
It's interesting.
The best reason for this project to have been reproduced
is that we are working hard on the documentation and the assembly guide.
Of course, it's a never-ending story.
We need to work on it on every evolution of the hardware.
Nowadays, it's more than 100 pages of documentation, step-by-step assembly guide.
What we have learned with that is that sometimes using 3D rendering in the documentation
is better than using photo, you know, because you don't want to take photo like you build the prototype
and once you have build one, you don't want to build another machine just to take the photo.
The other reason is that when you're making 3D rendering, you choose what you want to show.
So you can hide some parts just to focus on some parts.
I'm at the end.
Bright availability is still an issue even in our country.
So the question asked in this machine is how an open source solution can spread in the population where they need it.
Can FabLab contributed?
And more widely, what can we do with open source for promoting a more inclusive world?
And as the time is over, there is some details on the project issue.
Download the presentation that I have uploaded on the software for the first time.
Thank you.
So thank you. We'll have questions out in the hallway.
If anyone has any questions, you can meet out in the hallway.
We're going to set up for our next presentation, which will be starting momentarily.
As you come into the dev room, please do try to move into the center of the rows and leave the outside seats available for other people to follow.
Is Pieter here?
Oh, yes.
Thank you.
