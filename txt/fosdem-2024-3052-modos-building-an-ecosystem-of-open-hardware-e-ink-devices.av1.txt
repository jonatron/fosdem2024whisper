Hi folks, thank you. So my name is Alexander Soto. I go by Alex, the founder of Modos.
And yeah, so we're building an ecosystem of open hardware e-inck devices. There's a box
of a PCB, red one, green one, and also our prototype or our paper monitor. Please don't
plug it in. If you're interested, I can show a little demo in the back. And let's get it all back.
I love to get my PCBs back at the monitor and such. But yeah, trust you all. But yeah, please
check it out and I'll do a little bit of a live demo a little bit later. We'll do it here,
but think it'll be a little bit complex. But yeah, please all pass it around and check it out.
So a little bit of backstory. In 2021, sort of the height of the pandemic during lockdown,
my bedroom kind of transformed into a workspace. And just from the morning to night, I was
just constantly being distracted, having to refocus and then be distracted again. And yeah,
being in front of a computer for 13 hours, I got to the point where the device that I'm using to
be able to do my work is also the same thing that I use for leisure, is the same thing that I use
for entertainment. So can we have technology that is different, that is more calm, that is more
humane, that's more aligned with what I got while being. So our focus is reimagining personal
computing with a focus on creating calm, inclusive and humane technology. We'll upload the slides,
but here we have two links to some earlier videos where we show off our electrical
ferretic display controller. It runs at about 60 hertz, open hardware, uses an FPGA,
get a bit more into the details of the hardware specs in a little bit. And this is the team that
sort of turned that vision into reality. So Wenting has been the lead designer of creating the
Electro-Ferretic Display Controller. He's been working there for quite some time and going to
wait a little bit so we get the whole image back on the screen.
Oh no. Hey! Thank you, awesome.
His presentation is read by design. You didn't believe me.
Yeah, so recap, Wenting has led the design of our Electro-Ferretic Display Controller. Brody has
worked in particularly on the CAD manufacturing chassis. Michael had many conversations thinking
about what would it look like to create a software architecture or software stack that's
tailored for E-Ink has like a medium. And I'm kind of the guy that does everything in between
and kind of supports everyone, thinks about this nonstop and tries to make things happen.
Alright, so lastly I also want to say thank you to our community and also the NoNet Foundation.
We've had about 300 plus people who want to be able to be in our private program, about 5,000
people in our mailing list and also about 3,000 testimonies and in those testimonies as well a lot
of feedback, learned a lot and there's also, sorry, and also I'm going to say thank you to
our NoNet. NoNet really, we're a NoNet-sponsored project. It looks up on our caster and yeah,
thank you for your support and thank you for helping us really getting to finish our prototype.
Okay, so from the community survey findings, we did a community survey. We're asking folks,
you know, what are the particular use cases that they use their computer and or also what they
would like to use for the E-Ink device and the overlapping categories were reading, writing,
coding and focused sort of focused task and those are the majority of categories that people had
mentioned. But that I had a general idea that most people would be interested in but I think
where I learned a lot with the takeaway were the sort of same problems that I was experiencing
myself with just being distracted, being stuck on the rabbit holes or having to use a computer for
an extended period of time kind of got that a lot from different people in the community who also
kind of expressed similar concerns and then here as well, folks discussing about problems
related to like eye strain, people who have tried to use like other solutions and still, you know,
filtering glasses and such and but still being a problem. So overall, there's these sort of general
categories of one people who are looking for more of a balanced digital life, sort of reducing
screen time on social media, entertainment, unplugging, seeing the sun, being outdoors,
seeing away from a screen. But also people who are looking for like less visually stimulating
digital environments and trying to reduce a digital clutter. So that was like one group or one
demographic. The other one being folks who experience some form of visual impairment or maybe some
form of like light sensitivity. For example, there's, I always mentioned this, I need to look up the
specific person who did who filled this out but there was an engineer who was writing on behalf
of his wife who was experiencing epilepsy and she tried all different types of solutions and just
is trying to find something so she can be able to interact with her digital devices and that
comment has stayed engraved in my mind and a big motivator for myself. But there are other health
issues that people reported, things related to like myopia, epilepsy, light sensitivity,
headaches, migraines, traumatic brain injury and post-concussion syndrome were quite frequent
as well, which to me was also very much a surprise. So here's my pitch, I guess you want to look
at it. I think there's a need, right? I think there's a need for being able to create technology
that like satisfies our essential needs but also protects our well-being. I think we can
maybe redefine the role of our devices to foster more healthier balanced life and hopefully
with the start of this control is with the display controllers to create a new class of
devices that are kind of like built from scratch to sort of embody these principles of human
technology both through hardware and software design. So, Alan Kay, people who are really
serious about software should make their own hardware. So, I think hopefully the monitor
I have no idea where the monitor is but hopefully it's being passed around. People check and
take a look at it, great. So, that's our monitor, that's our newer revision that we have. We
built that using our key cat and also our free cat. We have a bit of a block diagram
here for folks. Also, folks want to know a little bit more in details. We recently updated
our repository which has a much more documentation into specifics of how it all works. So you
can feel free to take a look at that. I have some excerpts from there as well. And yeah,
so we're using a Spartan 6 FPGA Type C for the display port. We also have a HDMI or DVI
video input. Using a Raspberry Pi 2040 for USB communication and upgrading anything related
to the firmware and waveforms. And then this is the caster block diagram for our FPGA.
Good. Take a look at that. Again, I would redirect folks to take a look at the documentation
that we have on our GitHub that goes a bit more in detail than I could possibly do in
this one presentation. But some of the features of the display controller is that it works
with screens from 6 inches to about 13 inches. Works with the sort of black and white electronic
operating displays from E-Ink. Also works with color displays and also DES. Really extremely
low processing in the video. Finish show it, but also do a live demo. Very low processing
delay. Yeah, we got four level grade scale, 16 as well working. Let's see. Yeah, optimized
for the four level grade level scaling. If you ever use a commercial E-Ink monitor, they
have these buttons that are in the front that switches these particular modes. We also
have that. I don't know who has the monitor right now, but yeah, in the back, yeah, in
the back there's like a little button. It's a little blue button. It doesn't work right
now, but no, no, it needs to be connected to like a laptop and such. But I'm just saying
in that button you can cycle through and it switches between different modes and the different
modes are for the particular use cases. So if you want to be able to focus on typing or
reduce input delay, there's a mode for that that you press it or if you wanted to use
it for looking at black and white image and looking at grade scale it switches and that's
all happening locally through the host software that's on the hardware itself.
And a little bit more about how it's driven. I'm not going to go read through all of that.
Let's see, I want to do more slides. So yeah, so pixels, they're ranging at 2D array. Refresh
rate to between 50 to 120 hertz. It's a bi-stable display. So they maintain their stay after
the electrical field is removed. And the sort of frame buffer driving mechanism, it uses
two frame buffers to determine the picks of colors and then the picks of color changes
between the particular value 0, 1. And there's also sort of a global counter of how it's
used for the track, for the frame duration. So this is just a little bit of the basics
when it comes to electrophoretic display controller and sort of e-extrins in general.
Going to create a better version of this. It's a bit more simplified, so I apologize to just
sort of make it, yeah. So let's see, give us grade scale. So when it comes to grade scale
you're often switching between black and white in order to be able to get that. So you're
constantly switching between zeros and one and kind of switching between these particular
different modes. And then lastly, so one of the optimization that we've done is that instead
of having one global counter, we allow for individual updating for the region. So we're
updating each pixel independently. And we also have this sort of like early cancellation
method. Could talk about it more, but just kind of want to leave it there. And I think
just the last thing for next steps. So, how much time is that? Okay. So for next steps,
we have a, so we've been working on this for about two years now and I think we finally
have the prototype more or less finished. So we want to be able to do a crowdfunding
campaign, most likely on CrowdSupply this year. So there's a link here where it, if you
want to be notified when the crowdfunding campaign happens, we can send you email to
be notified. We're also a relatively small team of about three or four people. There's
also a separate link that as for folks who want to contribute with just various different
skills if you want to be able to support in documentation, in CAD or getting more involved
with the display controller. We have a link there for more information. Don't think, yeah,
pretty much wraps things up. I think it could talk a little bit more, but I'd rather leave
room for questions. And that's it.
We have some, okay, let's see. Questions are always right in the middle.
Thanks for the talk. How do you deal with the waveforms being proprietary? We've generated
our own waveforms. Do you put any work into updating those, improving them? Yes. Sorry,
the question was related to waveforms and how we generate them. I'll say that we generate
the waveforms ourselves and there's certain similarities or patterns across different
displays, regardless of different sizes. So we are maintaining and updating the waveforms
that we have right now for the 13-inch panel as well and for the 6-inch panel.
So you focus mainly on the hardware, but especially doing focused tasks, for example,
requires quite some specialized way of displaying things. Are you also providing some kind of
solution for that in software?
Yes. So the question was related towards hardware that we've been focusing on that and what
would things look like on the software side? Yeah, we've spent quite a bit of time looking
into what that would look like. The one approach that we've looked at is to use in Wayland
protocols in order to use things related to damage tracking in order to be able to do
partial refreshes. For example, if you have two overlapping windows and you drag in one
window over, it would recognize that this is the area that has changed damage tracking
and would only update that particular region rather than doing a whole full refresh. So
I think that there are things, for example, that we can use with Wayland and Wayland
protocols at the higher level of the software stack that in one way you can look at it is
that it abstracts away the idea of waveforms and you let the higher level software stack
take care of that with the display manager. So one of the hopes and dreams is that we
can work with SORSA with Drew DeVau and a few other folks raising up funding for that
to be able to work with them to have that be part of something we can do, which would
allow us to one, create applications that are native for E-Ink and also backwards compatibility.
Yeah, just one ring. I have no... Yes, oh, hi. I am so sorry. Yes, hi. Yes, why did you
show us the Spark on 6 as a platform since it's quite old by now? It's what we were
most familiar with and what we had access to and experience. Sorry, the question was
why did we choose Spark on 6? It's what we were most familiar with and had experience using.
There is another gentleman, another person from NowNet, Victor Suarez, who is also interested
in porting our work into other FPGAs. So I think it's not tied to Spark on 6, it's just where we
started. Yeah, so I think it's regarding the FPGA only. So you have plans to upgrade to
let's say FPGAs that are faster or this was just the original decision, but just because
you were more hands on that particular family of FPGA. Yeah, so the question is related
to the FPGAs if we plan to use more modern ones. So yeah, it goes back. That was the
one we're most familiar with and that's the one that we're going to keep using maybe in
some future with Switch, none of the one. Spark on 6 FPGA is doing the job right now.
People are more welcome to contribute and port it to other FPGAs. That's one way, so welcome that as well.
