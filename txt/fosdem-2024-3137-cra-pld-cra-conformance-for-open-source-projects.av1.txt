Our next speaker for today is Marta Rybczynska and I probably didn't manage to pronounce
her last name so I will be asking her to do that again and show how I was almost right
but not quite. Marta will be talking about CRA conformance and the thinking that Eclipse
has been doing around this and she has a background for a number of years developing different
solutions but I think she also closely followed the CRA. You may have seen her article on
the Linux Weekly News months back which was a very good summary of where things were at
at that time. So without further ado this is Marta and enjoy her talk.
Thank you Marta and you pronounced my name quite correctly in fact. My name is Marta Rybczynska
and I'd like to do a test implementation of a Siri in five minutes today. So let's go.
The example open source ecosystem that is quite standard one with a physical product
to make things easier. Starting from the end we have the final product that is sold to
customers and we have the device manufacturer of that product and that device manufacturer
is assembling multiple open source and preparatory elements adding their own software to the whole
thing to build their product. This device manufacturer can of course have multiple product and they
are not integrating one open source project they are integrating upstream project A and
of course a hundred other open source projects that upstream project A develops a project
under an open source license and they have dependencies. They have a dependency B that
is another open source project working in a similar way. So okay here enter open source
towards you have already probably seen the definition I highlighted the important parts for me.
Legal person that has a purpose of objective to provide support of open source. Okay so what
comes out of it was towards pop in in the whole thing. They pop up for the dependency B. They pop
for the upstream project A. That's that's pretty expected and then a few remarks in there.
Very likely stewards will be foundations especially if they have trademark to the project name. That
is quite quite obvious situation but we also have situations that are little less obvious.
When we can think between stewards or manufacturers or none of those for example if there are four
profits that are supporting projects that are not critical to their income like open sourcing
CI scripts, open sourcing, programming, tooling for their board. Things that are absolutely not
critical that they are absolutely not monetizing. And we also have consulting companies not giving
names. They are many consulting companies that are contributing to open source projects in a
sustainable way for years. So how do they qualify? And when we add this
can we have multiple stewards for a single project? If we just take that definition of a steward
why not? There may be a foundation and there may be a company that actually donated the code to the
foundation that's still contributing. If it's if they are not monetizing why not?
And then interesting case stewards. There's a definition by stewards also have some obligations
and what happens if the stewards cannot force the project or they want to force the project but
the main developer say I'm not going to implement that. Pay someone to do that work. What do you do?
Question mark. Okay and then we finish adding the CRA elements to our scenario. We add due diligence
or that the device manufacturer should do about the open source projects they are implementing. We
have the conformity assessment that they should do while releasing their product and we have the
final user documentation that they are expected to release. And well mostly for the con we have
some challenges for the conformity assessment. Changes and opportunities for the open source world.
A final product includes dozens of hundreds of open source projects usually.
So manufacturers quite often use the same project in many different places and many manufacturers
use the same open source project in different places. So what makes sense and what is logical
to do the conformance work, to do the paperwork all together in an open source way and release it
open source license? Oh there's an alternative. The big ones will be able to pay the whole work on
their own. The small ones I'm not absolutely sure if they include a hundred projects.
So that will be it for me. Thank you.
