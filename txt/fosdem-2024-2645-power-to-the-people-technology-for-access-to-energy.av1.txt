Okay, I think we can start.
Hi, I'm Vivien Barnier and this is Martin Jager.
We will talk about Power to the People technology for energy access, or access to energy.
We have seen a lot of great presentation today, very technical, very detailed.
This presentation will start slightly differently.
It goes also like this general discussion we had shortly about community
and how to grow the community for energy projects.
I want particularly to talk to you guys about access to energy
and how we can use open source and which potential open source has
for this completely under-explored area for open source,
because a lot of these great projects are particularly targeting industrialized
geographies, let's say, and their realities.
But there's also another reality which looks like that.
As you can see, in the north and hemisphere, like the global north,
a lot of lights in the night.
While you see, there's a lot of people living here and here and also here.
But there's much less light. That's because there is no electricity.
So if it's the energy death room, we should also think about how to leverage open source,
both software hardware and community to help electrify these areas.
And if we look particularly on how electrification has gone in the recent years,
you can see there's been some progress in reducing people without electricity.
So we started in over a billion in 2012.
But then in the recent years, this improvement of access to electricity stopped
and we have even a back trend.
Any idea why?
Not exactly.
Not only Bangladesh as well and also on the African continent.
There's a bit of progress.
And now it's not getting cheaper anymore?
Exactly. General population growth.
The speed of electrification is the same.
Just the population growth has outpaced the speed we are electrifying.
So we have now every year more people with electricity than less.
So we need to speed up the process of electrification in general.
Now electrification of areas which haven't been electrified in the past
brings particular challenges.
Which is you have extremely low income customers.
You have extremely remote areas and don't think about what is remote in Belgium
or in Europe or somewhere.
It's completely different.
You have unknown future demand patterns and forget about AI machine learning.
It's just not going to work.
You don't have data.
It's people that never use electricity.
So you have no clue and you can't use these like digitalized methods to predict
what will be the demand.
Data connectivity issues.
So if you want to communicate with the assets, extreme weather conditions
and regulatory uncertainty.
Because a lot of countries which are not that stable in the political situation.
So you also don't know if they are coming the main good.
If they are not coming the main good, what technology will they need and so on.
So you need extremely low resilient technology to achieve universal electricity
because you have to respond to all these particular challenges.
And now you have NGOs, you have private companies, you have international companies.
Large utilities are trying to go into this market.
Non-profits, corporatives, communities, even agribusiness.
Because they are already present in these areas.
Often are going into energy ventures.
And all these companies or stakeholders or NGOs are developing technology.
Software, hardware and also business models.
And very often they come up with exactly the same thing.
Almost the same thing.
So they are constantly reinventing the wheel.
Because it's a very decent sector with a lot of players.
So perfect playground for open source I would say.
Because we have to overcome this constant reinvention of the wheel and it's decent.
So there is a lot of possibilities to still shape the sector.
Which in industrialized countries often is a bit more tricky because there are more established industries,
more established players, bigger players and so on.
So what we do at an access is we promote and support open source development and adoption for energy access.
Very particularly for technologies that are meant to provide electricity to people who have not been electrified in the past.
Particularly to generate an equitable ecosystem.
Where more local companies, particularly domestic companies can participate.
They can compete against large utilities like the ANGIS of this world.
And so on like trying to grab this market.
And have this adaptable and resilient infrastructure that we need to electrify.
And to say what that means.
A couple of projects that we have funded and supported in the development in the past.
They range from software, hardware and business models.
I will not go into details for the sake of time.
And we want to speak particularly about one in particular today.
Which is an open hardware project.
Which is the open source battery management system.
The Libre Solar, BMS C1.
Which has been developed by Libre Solar.
And which Martin will now provide you more insights on.
Yeah, thank you very much.
Yeah, so I'm from Libre Solar.
Which is mostly an open source hardware and firmware project.
But we're also a very small company.
And doing some consultancy work around the open source hardware development.
And yeah, we've developed these battery management systems.
With a particular focus on energy access in a project together with the NXS foundation.
And I will explain a little bit what a battery management system is at the very beginning.
And talk about some of the technical aspects.
As well as the community.
And how we are interacting with other people interested to join our movement.
So to say.
Yeah, a battery management system is part of almost any modern electrical equipment.
That's battery powered because all those batteries, those systems use lithium ion batteries.
And yeah, in the energy sector, energy access sector in the past.
There was still a huge use of lead acid batteries.
Which have some issues with environmental damages.
And which also don't last that long.
And nowadays lithium ion batteries are getting cheaper.
And so also.
Okay, so I covered the antenna apparently.
Yeah, so.
Yeah, nowadays also in the energy access sector, which is very cost sensitive, as you can imagine, we also.
Yeah, using lithium ion batteries more and more.
And so we need a battery management system that takes care of the safety of those battery systems.
So that's basically what it does.
We have a pack of lots of different cells, which in series connected in series.
We measure each single cell voltage, make sure that they are well balanced.
We measure the current.
And if something goes wrong, we have the safety measures like a fuse and a switch, which open the battery.
And so that you don't get an overheating battery that could potentially even explode.
And of course it's a safety critical component.
So you have to take care to develop it right.
And yeah, open source is a really good method for collaborating and not reinventing this wheel, which could be a costly process.
So yeah, this is the hardware board that we developed.
It can be divided into two parts largely.
This is the power part, which does the switching and the current measurement.
And you see those pretty large connectors.
We can handle up to 100 amps, which is not that common for most people used to Arduino and so on.
Of course, for the own take guys who had the presentation before, it's also going in that direction.
Yeah, and that's a little bit challenging to put the microcontroller and the power parts onto the same PCB.
But we decided to go with that route because we really have to make it as cheap as possible, but still handle this amount of power.
And with these 100 amps and up to 48 volts, you can provide one huge in that sector AC inverter with enough electricity,
like 3, 4, 5 kilowatts almost.
And that's sufficient to build a small AC mini grid in such an area.
There are also so-called solar home systems, which are really tiny, like 150 watts, 50 to 150 watts are really tiny systems.
This BMS is not targeted at those systems, but more at the slightly larger systems.
But you can also use the technology for light electric vehicles and other things, especially because the firmware is open and can be adapted easily.
For in terms of communications, we have the CAN bus, which is the automotive and industrial state of the art protocol used for batteries as well.
But we also have Wi-Fi and Bluetooth low energy, so that would be more for the non-control part.
So we can talk to inverters, for example, with the CAN bus, but you can also have a smart phone app and connect to your battery.
Where's the antenna?
Okay.
All right.
So for an open source product, we think it's also essential to use only open source tools.
And so that's why we decided to go with the Kikead, obviously.
And yeah, so since a few years, I think Kikead is really a completely professional, great PCB design software.
And it has very nice plugins, which you can use to automate some processes.
And we're always trying to somehow get towards a similar experience than you have with software development for the hardware development.
Because if you get a pull request and you get a binary, then you try to understand what's happening, what did the person change.
That's difficult.
So we use some community developed tools to create diffs in PDF format.
So you can see what the pull request changes.
And that makes it easier to collaborate also on hardware development, even though it's still not as easy as with software.
Yeah, also we generate an interactive HTML bill of materials where you can see all the part placement.
So if you want to assemble it manually or you want to fix something, then it makes it easier to understand and find the parts.
Yeah, all those are community developed plugins.
And for the firmware side, the software that's running on the BMS, we are using the Zephyr real time operating system.
And I can really recommend anyone who's into embedded development and maybe didn't use R-Tosys before, really try it out.
It's maintained by the Linux Foundation, so really fully open source.
And it has extremely great features.
So you can use it for almost any architecture.
And you can also switch between different microcontrollers because it's very well abstracted.
And that's something we experienced during our development.
So we started with an SDM32 microcontroller.
And then a chip crisis came and we couldn't get any SDM32 microcontrollers anymore.
So we thought, hmm, what are we going to do?
And we replaced the microcontroller with an ESP32 C3 microcontroller.
And it was really just a matter of changing a few board configuration files.
And then all the things like UART communications and so on worked out of the box, almost out of the box, I have to say,
because there were some bugs in some drivers, which we, of course, upstreamed and fixed.
But this is now fixed because that microcontroller was still pretty young.
But yeah, that's really a huge advantage.
And so if someone comes and needs this battery management system,
but needs a different communication protocol or slightly different hardware configuration,
a different microcontroller for whatever reason,
it's almost a matter of a day to get it ported to a different board.
Yeah, as mentioned already, we have lots of communication stacks in DeFa already working out of the box.
For this energy access market, the GSM communication is very important
because most of those batteries or off-grid systems need remote communication through GSM.
But we can also use Bluetooth Low Energy and CAN and Modbus for the more local communication.
Yeah, there are also some Zephyr folks here at FOSSTEM.
We don't have a dedicated DEF room, but yeah, so if you want to learn more about Zephyr,
I'm also an active contributor and maintainer.
Just let me know afterwards and then we can talk about it a bit more.
For the communications, we are using a protocol, so to say, that's called Thinkset,
which you can think of as an API, a REST API, but for microcontrollers.
So you can use it over the serial interface, you can use it over WebSocket remotely,
you can use it over CAN bus, over Bluetooth Low Energy.
We are using exactly the same upper layer of the communication protocol for all these layers,
which makes it really easy to integrate it also into other projects.
It's not meant to be just for battery management systems and it's self-explanatory.
So you can see an example here. You can send a request.
This would request the battery parts from the battery with a question mark for a GET request
and then you get the data as JSON, including the units.
Whether they are read-only or write-only values and so on.
It's quite versatile and we are making good experiences with that in case you're interested.
Here are the links. The presentation is also uploaded online, by the way.
Now, coming to one challenging part of open-source hardware development,
which is the manufacturing or production.
So, often you can order electronics hardware on JLCPCB,
but for these power electronics boards it's a bit more difficult.
Sometimes you don't get the board specifications you need,
because you need thicker copper layers than with boards where you just send out some data
or communicate on the PCB.
And also we have some quite heavy connectors on the boards,
which need special soldering processes and so on.
So far we haven't ordered anything with the Chinese manufacturers yet,
but mainly ordered boards locally in Germany.
And we're in contact with some companies in Nigeria who are also trying to produce it,
or they will be able to produce it in the future,
so that we want to basically also break this chain of developing something in Europe,
producing it in China and shipping it to Africa.
So, yeah, the idea is that it can be produced locally.
And thanks to these features in KiCat, you can also easily,
kind of easily solder it by hand.
So this is an image of the first prototype in our FabLab in Hamburg,
where we have a manual pick and place machine, but you can also use tweezers.
And you need a pizza oven and a small reflow oven,
and then you can do it yourself.
That being said, we have ordered some PCBs.
If you want to participate in the project, they will be ready soonish in one month, maybe.
And you can also get in contact with us.
Our plan is, of course, in the future to be able to provide boards for easily and for low price,
so that everyone can participate, but it's also regulatory issues,
or that's on our list to improve on that situation as well.
Right, so final slide, almost.
So how's the situation with adopters?
We have had about 10 companies who started using the product during our project,
and more than five companies who are actually starting to use it in their products and in the field.
Also some companies from Europe picked it up and provided really valuable feedback and pull requests.
We also tried to really start from the very beginning, from requirement specification,
towards the final design of the PCB, to have everything on GitHub.
So the specification was on GitHub, everyone could interact with us.
And yeah, we've also got a community forum, one is on the AdNXS foundation website
and in the LibreSolar forum.
But I usually prefer just using GitHub issues and pull requests for communication,
so you have it in the right place and people will find it.
Yeah, so if you're interested in developing such systems or using them,
just join us on our journey to bring power to the people.
And here are some resources, some websites where you can find all the hardware designs,
firmware designs and the community.
And now, yeah, we're open to hear your questions.
So first, thank you very much for your presentation and for your great work in the open source community.
I had several few questions.
First, I saw that you had a passive balancing board on your BMS.
I was wondering if you are also offering or thinking about active balancing.
Yeah, good question.
We really tried to use active balancing at the very beginning and had this on our requirements list,
but finally dropped it because of cost reasons.
So there are some linear technologies chips and Texas Instruments chips,
which cost $5 each for six cells.
And they are really expensive.
You have lots of passive components as well that you need.
So that was the main reason that we are just going with passive balancing at the moment.
There are some Chinese chips we couldn't get anywhere from a reliable distributor
and we couldn't get any data sheets and so on.
So that was also not an option.
If you have an idea how to implement a cheap active balancing system, let me know.
There was also already some contributors that wanted to do active balancing.
Okay.
Did you already have some cases in which you had to handle the balancing between
lithium cell storage and other kind of storages such as compressed air
or concrete and fibers or the storage system than lithium cell?
No.
So far it was only lithium cells of the different chemistries like iron,
lithium iron phosphate, lithium nickel manganese cobalt oxide.
We were in discussions with some people developing redox flow batteries
where the voltage is smaller so you could potentially monitor multiple cells at once
and get an average kind of.
But yeah, so far these technologies you mentioned we haven't tried.
But if the voltage range matches then it should also be possible to do the monitoring
at least for those cells.
I have a couple of questions.
I don't know if I can ask multiple questions or just one.
Okay.
I can also stay outside the room after the session.
Okay.
You talk about network and notably having GSM but you don't talk about
security feature for software and remote control.
So I don't know, is there any, how is it handled or anything?
Yeah, so we are using TLS certificates for the communications.
And currently, yeah, that one of the problems with security is that with TLS
you have the handshake mechanism every time you restart sending something out
via the modem and in these areas you usually have SIM cards with roaming
and they are rather expensive for high data rates.
So you have like six megabytes per month only.
And if you do a TLS handshake every time then that gets tricky
so you have to reduce your data rate.
We also thought about other things like co-op where you don't have the handshake
but it's tricky but we're still implementing security
so we're not making any compromises on that.
Thanks.
Originally it was the same question as the first one
but I can switch to the next one.
Did you consider to have a bit more modularity like on the other models you had?
Those were somehow split up because on a bicycle for example 36 volts
I wouldn't need 100 amps so that would be a bit much.
And I think for everyone afterwards,
we'll come out together and we could chat about the Vigotech project,
Ointech mentioned.
Yeah, so you have a certain degree of modularity
which you can implement through leaving out some components.
So you could just have less MOSFETs
or take cheaper and smaller connectors
and then reduce the amount of time you have to do that.
That's possible in that direction but not in the other direction.
So we designed it for 100 amps which is almost the limit
of what you can get with the power and control PCB
on the same control part on the same PCB
because the chips have small pin pitches
and if you need a huge copper then you get into trouble with that.
So, yeah.
And as you mentioned the bicycle, so this is really designed for energy access as we said
and for high power appliances in energy access.
So like milling machines or stuff like, or a tri-cycle
where actually then you possibly get to the 100 amps that you will need
and not for like an e-bike, like one person e-bike.
Last question.
We have a certain number of people who are using the same power supply
and the same power supply to e-bike, like one person e-bike.
Last question.
We have 13 seconds.
It's precise.
I'll be quick.
So, as you know there isn't a standard protocol for talking to BMSes from all,
you know, because you're going to be talking to standard inverters
in a typical system assuming there's some solar input
and the problem is that most of those aren't open yet.
So, they expect that there's a whole series of battery protocols.
And so, currently if you buy a generic inverter,
it speaks 15 different battery impersonation modes.
I'm just wondering what you've done some of that
or if anybody's thinking of a sensible standard for this madness.
Five seconds, Enswer.
Okay, yeah.
We thought about that, but that's all only software.
So, the ideas that we have are RS485 and CAN bus,
so you can implement any special kind of battery protocol.
We have CAN open readymade out of Zephyr,
so that's already something, yeah, a higher level complicated stack
that's already pre-built in.
But, yeah, anything, any very special thing would have to be implemented.
Thank you so much.
Thank you very much.
