So, hello, I'm Markus Feiner.
I'm, some of you may know me.
I've been around the Linux and open source world since 1994.
Started really early with Linux and had three operating systems at the time on my computer.
And since the early 2000s, I'm an open source journalist working for Linux magazine.
And the Hi-Zi-X Big Jump Tech magazine also.
And super, thank you.
So, wonderful.
Perfect.
So, I've done a lot of things.
I was also team leader at SUSE, at documentation team lead.
And yeah, having done lots of things, we don't have that much time.
So, I better be fast now also.
But within this talk, I have a lot of links and hints for you where to go to get much more information.
Because all of you that are here, probably are only here because you heard the term conference and you like it a lot.
And like everybody does.
And it's, we started six minutes late, but we have 15 minutes left, I guess.
Good. Okay. You ping me five minutes before we're done. Thanks.
So, this is a presentation that is kind of typical for me.
I'm going to rush through a lot of topics, but there's a lot of links inside.
And you can go and find a lot of things.
If you're not a German native speaker, you will find some articles that I wrote that you have to translate.
But the best thing is that something we did in December or November last year is a large
tabela chart of lots of open source alternatives to Atlassian.
And I'm not going to dive deep into the things that happen with Atlassian and the 15th of February coming up.
I'm sure you're all aware of that, that the support is running out.
So, that's a different thing.
I'm going to talk a little bit about knowledge management and about a concept that we found in
SUSE in the documentation team that I called Agile Recursive Documentation.
And generally the problem in knowledge management, and that is what Atlassian actually is about,
is that we all sort of mis-underestimate the problem.
I'm doing this Bush reference by Bonn-Perlman.
But it's like an iceberg, and this is probably the iceberg that hit the Titanic,
an original photo that I found.
And I've been using it in knowledge management presentations because,
like icebergs, there is implicit and explicit knowledge in companies.
You have a lot of knowledge that is documented, that is fine, that everybody knows,
but there is a lot of Rumsfeld reference, unknown unknowns.
And in companies about, yes, there is.
And about 80% in companies today is assumed to be implicit knowledge.
So, knowledge that is there, but nobody knows that it's there, and people just do it.
And just announcing doing knowledge management now will not help against that,
and will not mitigate that in any way, because you have to take the people.
You have to, oh, I forgot something.
The implicit knowledge is also referring to, for example, people that go into,
yeah, in a longer holiday, or that go into old age pension, and that are gone.
And there are stories of, yeah, I can tell a lot of stories about that,
what happens when the people are gone, and you have to find out what actually did they do,
and how did they do it.
Some people that I know, they had to understand,
and had a Pearl Programmer in the company, and the Pearl Programmer had called all of the processes
and scripts of his whole big setup after figures from the Simpsons.
So, they found a process that was called like APU, and they were like, what does it do?
What does it do?
And then they found out, oh, it forks a lot.
And only once they knew this, they could figure out what the whole Pearl thing does.
But there's many stories like that.
But in the end, you have to inspire and motivate your people to follow you.
So, you need solutions that work in the processes and software that works,
and that the people like in your company.
So, as many as you are here, there will be lots and lots of different solutions in the end.
Because documentation and knowledge management is teamwork.
That's one article I wrote for the Linux Magazine together with my former colleagues from Susie.
It's always teamwork, and you always have to work together,
and you have lots and lots of different people in the company from the...
I once heard that we could...
When I was a consultant, we are the pathfinders, the mountain guides.
We are the ones that find the trails, and then we tell others how to go them.
And as we have different people in the mountains, you have the locals,
you have us, the pathfinders or whatever, you have the tourists,
and the locals and other beings.
So, you have to make sure that everybody understands what you're talking about
when you give them a description about something.
And for that, we have the engineering part or the scientific background.
And this is all...
Every one of these is so huge and a large topic that you can do university studies on some of them.
Knowledge management itself, organizing knowledge, process management, quality assurance,
and then all of that basically combined into some things like knowledge process quality management.
That is K-P-Q-M...
K-P-Q-M, yes.
And at the end, there has to be a presentation layer.
That's what the people see.
That's basically the editor with which we work.
But in the background, you have to do lots of ordering,
indexing with metadata.
Anybody here who knows the term RDF?
Still, the semantic web and all of that stuff.
Yes, that's the background.
And then you have taxonomies, terms, terminologies, registers,
tables of contents, notations, catalogs.
And it's a huge scientific realm that you can read books on each of those.
But for a company, it's important that you do the needful, not all.
And the representation, showing it to the readers,
the customers is actually the mapping of the information.
How do you do this with models, glossaries, how-to's, encyclopedias, documentation?
And you see there's already the type, the form of how you present things is coming in with glossaries.
And well, of course, what I'm going to tell you is the way, the right way,
and found this yesterday in Brussels here, and I really like that.
Maybe some of you remember Magritte.
This is not a pipe.
So, and somebody pointed this on his garage door.
This is the way.
And I still have to dive into the apple.
I think the apple is also a Magritte thing.
But the cloud, and I really like that.
So, of course, what I'm presenting to you is the way how to do it.
No, it's just a suggestion.
Because if you don't have time for all that scientific research and all of that,
maybe, and that is the usual, that is, then you're not alone.
It's usual that companies, we don't have time to do the documentation.
We don't have time for all that.
And then we were at SUSE in the situation.
We had five people in the doc team, and we were told to grow up to 10 people fast.
And the people in the doc team, documentation team, they said,
we don't have time to teach the new ones.
So, what we did was we created this agile recursive onboarding.
That means we have one new guy in the team, and this new guy will be,
for example, the mentor for the next new guy or girl.
And we created a mentor who is in charge of teaching the new guy.
And the new guy would, for example, as an article in Linux magazine that I did.
And some of the, why we call it agile is because only because we're using agile tools and methods.
Like a Kanban board for it.
So, this is what the new guy saw.
Not at this one, but it's structured.
This is an easy tool in next cloud that you can use, for example.
For the start.
This is the task that the new guy had.
Or this is the tasks that the mentor had to do before the first day.
These are the tasks that the new guy would have to do on the first day.
This is in the first week, and so on.
You know, Kanban, very easy there.
And out of this came the first documentation of the job,
of the documentation shop, the description, what he's doing.
And this is an individual board for a new team member.
And this new person was from the start involved in making the team better,
making the documentation everything better, and yada, yada, yada.
Until, and it was recursive because the next one would again start at the same point.
But with the new improvements from the last one.
And that is exactly what you can do with documentation and knowledge management in a company.
You can start documenting things and have people be a part of it.
That is the most important, take them with you.
And there is other things that are really cool, but only larger companies usually can apply it.
There's things that Stack Overflow and Reddit, those companies do really good.
You can have your customers, your readers, the signpost,
a triage by user pane, so the important documentation items first.
And what nobody needs will disappear from the list and topics that are interested
will go up in lists and documentation.
So if you're writing on something nobody ever reads,
maybe you could have invested your time better.
But I'm jumping over to the tools because that is what we are talking about.
And yeah, so in decision making, decision making is also very clear.
You have this important, regular, not important ones,
and thereby you decide what to document on this scale.
But it's probably not you at FOSTA who decides that.
It's usually the management because there's constant risk involved.
So this is the stuff that we need to document because if this guy is run over by a car,
we won't know how to do this process and this will be a lot of money
and customers will be angry at what we're getting.
The team has the expertise, the knowledge or documentation team has the expertise,
but the management knows about money and risk.
So that is why they have to actually define what.
So if you're not, yeah, and the tool, oh, super, good.
The tool that you're using should be the last decision that you take.
Otherwise you end up in technology-driven development or design.
I don't know if you've heard that before.
That is, for example, happening with AI a lot.
We want to do something with AI or we want to do something in Rust.
We want to do something in what is this new framework that we bought.
Oh, in Go. Let's do something in Go or whatsoever.
That's not uncommon that a company buys some development framework
and then they think, okay, what can we do with it?
It should be the other way around.
You should, as in project management, you should see what you want,
what you need, all the needs and then the risk and the money involved
and then in the end look which product does match my requirements the best.
Well, with Atlassian, that's usually not the case.
Also because it's just simply there and for a long time it has been there without competition.
And now in the last years, Atlassian did these moves to the cloud.
This increase of license cost and, well, and they have, of course,
they have a good product, a viable product and it's highly integrated with ticketing
and you remember Trello.
And I like to call them something like the Microsoft of Knowledge
because everybody in the development world uses it and it's hard to get around it.
And most people are not very happy about it and especially since I learned that the price increase
that comes now or came now for small companies can be up to 1,000% that they have to pay
because the small bundles start at 500 users or something like that.
And it's not the usual, you know,
the usual increase is something I think like 10 times more than before.
So not that bad.
And so they did also an article on that that I don't have a screenshot in there
but they're forcing the users into the cloud.
They say no we don't because they can buy a data center license.
That's the one that's like 100 times more expensive than before.
But they reacted also to that but there's other issues also.
But them being an Australian company and thus part of the Five Eyes
which is the five countries that are very closely working together in terms of the NSA
stuff.
So there is GDPR issues.
They even told their customers when in 2018 when we were working with Trello at SUSE
they let a mail came in that told us we shouldn't put business secrets into Trello
because that might not comply with data protection rules in Europe already then.
We're like what the fuck are you doing?
Knowledge management tool and you're telling us not to put business knowledge in there?
And so yeah and then recently there have been more issues.
There have also been security issues and also but that's okay that every software has that.
But then there is also the fact that they are more focused on a global market
than for example on a German or European market.
So we had the situation that we had severe issues at a company I was working with with
Umlauts, the German Umlauts A and they said well there and we opened the ticket and the answer was
oh yeah most of our customers are using English.
We are very sorry about that.
We're like okay good but that's just basics and so last year and that's actually the core part
of this.
I did with Tim Schurman together we did two articles in the IT administrator where we took
a deep dive into the open source alternatives for Atlassian.
Both of them make five pages and a large chart that I have here yeah that's two pages.
That wasn't in the printed that's only online and the link is this is the this is the link to it.
It's in the presentation that will be on the FOSTA website.
Yeah and um nice take the photos tell me when you're done then I go back good so
and we came to the solution that there is a lot of alternatives and a lot of them also
are facing a boom.
Some of them say we have so many calls right now from people that want to get rid of Atlassian
that we can't handle it all and one of the companies is a friend of our friends of mine
from Regensburg where I come from in Bavaria and they say it's most of them are customers that
don't want to use Atlassian anymore they don't want to do the move and now they have this
deadline coming up on the 15th of February when their support is ending for their old product so
yeah so many customers are turning away from Atlassian the priorities have shifted and as you
see in this table I'm going to show you a picture of each of those and hopefully if my brain is good
enough I will say a few words to each of those five minutes great so in this list we have blue
spice just don't worry I'll tell you more about the names just name dropping now blue spice bookstack
it's alphabetical docu wiki fos wiki media wiki open km outline p m wiki wiki js and x wiki
that's the ones we compared in this list I'm sure there's more out there but we tried to address
those that are open source and have enterprise support so that's what we this wrong laptop
and here you the first one of course the big the biggest knowledge management software is of
course wikipedia but wikipedia with media wiki software has one big flaw it's not well it scales
obviously very good yeah it can run the seventh largest website in Germany I think but um what it
it has only one use case and that is not the enterprise clearly it is has the use case of
making wikipedia run and work forever and really good and so I mean you all know wikipedia and
you all know that this is already the editor of you I don't know if you've been to wikipedia recently
last year or so they integrated this wikipedia editor not you don't have to work in in markdown
whatever it was anymore you can really type inside the text and from them there is a there is an
enterprise distribution that's called blue spice that's the guys from rigs book that I've been
talking about disclaimer I they're a friend of mine and I blog for their website so um but that's
you can make your own image about them they have a lot of things that enterprises need for example
something like privacy administration so they add usability and at enterprise features on it yeah
and they're open source they base they're based on media wiki and they have several versions up to
cloud and farm and sars and stuff and um we have then we have x wiki there was just a talk so I hope
I'm not saying anything that's that's wrong x wiki is also very old and they are in my opinion
really interesting because they do a lot of innovative features that go way beyond the wikis
like their crypt pad and there which is sort of like a um end-to-end browser based collaboration
office thingy space that is actually if I understand it right serverless yeah and so they are so
and if and then there is doku wiki doku wiki is um something that is often found in scientific
and or educational realm I have been okay I've been working with blue spice I've been working with
x wiki I've been working with doku wiki and um doku wiki I found at a company I was consulting
that did that is from the space agencies from German aeronautics space uh it was the gaf
the yeah so they this this world somehow yeah and so they have a lot of people that are experts
and I call that that's where the expert systems start I think I think that both x wiki and blue
spice is something that you don't need much expert knowledge to work with yeah but with doku wiki
it starts but doku wiki is actually really cool because you have some features that others don't
have for example you have a shortcut and then the page that you're working is a presentation
just one thing and that's that's really cool and uh then we have t wiki we just heard of I think
was it t wiki that you just heard or x wiki the previous t and that is um well it came from
well the t wiki was the old project and first wiki and q dot wiki are folks from it they have a
lot of extensions and a lot of features also but I I haven't really seen them that much in companies
and they are very um I can how do you say they um you have to look you have to see if they work
for you but they are not like for me they are not like a valid atlasian replacement because
you but these you need to be an expert to use them yeah and other ones there's there's a lot of
more I found these four and I think I'm good in the time there is for example there's bookstack
which is another very interesting project that works with books and shelves so this German here so
bookstack has this imagery of um use the knowledge is stored in books in bookshelves and chapters in
books so they always use those those metaphors from the from from books so they have pages chapters
books and shelves and this is the page of the um uh the access rules and uh
