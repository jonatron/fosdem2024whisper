So we're just in a knowledge management setup for me. This is just the K-Outliner document.
I did have a bit of an epistemic funk, so there's going to be a bit of bouncing around
in terms of this. But just to sort of clarify things, I'm going to be presenting things
regarding version control and logic from more of a wider perspective in the context of my work.
And there's some very distinct pillars in terms of that, and unfortunately it does involve me
quickly going through some of the things I've done historically. I got into technology as a
consequence of doing some work on the government, which was looking at modern ICT systems for
breaking down silos. It seemed very perverse to be looking at Conway's law later on and
realizing that apparently that's the wrong thing to be doing, that I made the folly of
thinking that the organization should be below what the capabilities of communication are.
I later had the opportunity to assemble and aggregate lots of focusonomies using delicious,
which gave me the autonomy to just use the non-alpha numeric characters that sit on the
right hand side of a keyboard and use that as a form of creating logic rather than just going
through a list of 26 characters and deciding which one is closest to A. It seems a very perverse
way of being quick on a computer and being rational and orderly, both for input as well as
recall. I had some fun later on once I realized that I probably should be doing coding with things,
and so I looked into things regarding using logical forms to recognize what text is as well as
be able to make transformations starting out with things like all can said and more recently
doing things with regards to TXR, which is a list which does some very interesting passing. Some
things which I've been developing over the last 10 years is key, which is my desiring to order
things within the buttons which sit at the middle of the home row rather than obviously the
inelegant aspect of just using my right hand for the non-alpha numeric keys forming things. I did a
bit of DJing last night, I used to do that a lot and one of the things with collecting records as
a physical object is that you have boxes and if you like to put things in boxes you reach a limit
and if you're a bit too chaotic you end up putting all of the wrong things in the boxes and that
doesn't help you in terms of things. Having done things with regards to folksonomies and aggregating,
aggregating about 200 random people on the internet for things, you get a kind of idea that
people's perspective on things are different and distinct and they can converge but it might need
of various things like that. So I've really been sort of exerting myself and doing things as a,
I've been truiting it out of what I've been doing as a body language and where I'd be providing
annotations for what I call key as a recursive modeling language where there may be a point of
precision but you have the ability to drill down on things and work on things later, perhaps having
a sense of definition and compounding things just as with body language you might combine multiple
gestures and people might not understand and you can put clarifications. So I started from the point
of just doing things for separating things within a document just with headers with a
classification then I started separating configs and documentation and just even attacking things.
So for instance I separated them across the file structure and various things like that but I've
done this so much that I have about a thousand directories in my home folder which are sort of,
I have two annotation forms, there's the classics syntax which is based upon 36 of one type and
then there's another thing which is bloom which I consider to be like a kind of, I refer to it as
like a kind of plant sexual organ that there's a kind of propagating thing and it allowed me in
my mind to think of rather than the home folder being the root that in effect it was the budding
of an information systems concept and that everything in terms of the files and the subsets
within a file are the roots, the things pushing down deep into the soil and I've been looking at
intersecting things because obviously if you partition things out then you have to have
these things flowing across and so in many respects I've spent a lot of time building in terms of
what my perspective on information systems and how it should operate on a spatial aspect and
trying to get in terms of passing of time in the context of things is very important in terms of
things. As you can imagine I have been liable to make mistakes and having to reassess things as
well as the fact that I have improved on things so for instance I rather than just having the
classic annotation I would give it a sort of hub nucleus which would sit to exist in terms of two
main forms in terms of a normative thing in terms of somebody having an opinion whether it's somebody
else or yourself exerting an opinion as well as positivists where it's got more of a general
thing and I would use the same sort of character to also provide an emphasis on whether something is
coming in or coming out or as well as being destroyed and so that was a kind of evolution of
concept which needs some clarification and being somebody who appreciates folksonomies and actually
doing tasks as well as the joy of improvisation and free improvisation which has fantastic
applications regarding how individuals communicate in a live setting but there's a
sense of order and perspective but it does need a tiny bit of calibration and so for instance
you have I would like to retrospectively deal with things as well as just as when people do
things in say the geek's environment to repurpose thing and put a definition of everything
calibrating behind and for me logic programming is is is one of the ways in which I can represent
that and for instance one of the joys in terms of RDF is which is one of the kind of midway
points is that I don't have to be trapped within these silos of each git database within each
repository as well as the potential pitfalls of having a mega git database across an entire system
that I could be using the RDF to acknowledge what something is but also point towards the fact
that that might be an obsolete thing and that there's and that they and that there's something
more ideal in which it should be considered in terms and that way you're not necessarily
raising the thing but just in maturity realizing various things I'm gonna I'm gonna actually
make use of this green so I'm gonna I'm gonna I'm gonna type in rainbow because that's I would
have just jumped in terms of things but for some reason the word rainbow is yes rainbow
there we go rainbow so this is a nice thing in emacs which so I click on that and it's gonna
jump into the other folder which let's see if it jumps back give me give me a rainbow
have we lost the rainbow I'm sorry but it's no rainbow okay well I never expected that
the this is live presenting but okay one of the main points I was I had a picture of a rainbow
you can imagine it and there was a rock in the middle ground and there was a rock in the foreground
and one of the things which RDF does is having an open world that if I'm describing the middle
ground rain rock formation it doesn't exclude that there might be other rocks in the environment
whereas something like prologue would be expecting that if there's reference to one other thing
then there is only one other thing and that's just worth dealing with and I wanted to talk
about disjointed classes because that in terms of the aspect of the rainbow which you are imagining
on this screen that for five left okay and my annotation system because it's based upon certain
forms I can automatically have a reference which acknowledges that there are that there are
distinctions within just the pattern of typing the main set for the bloom is 36 which within a
semantic model works very nicely and the 2 to 15 characters for the annotations to exist as a
representative form would be something like half a million I've already done about dictionaries of
about with the text to the annotation about 2002 wiki data and I'll be dealing with that in terms of
forming with things I'm going to briefly deal with bio make because this is this is you're not
on the screen I'm gonna because this for me is very fascinating I was this is a form which
allows you to have sets in terms of various things so that you're not just operating off input
output in terms of things but having a collection as well as pulling in some of these logical
forms and for me that's very significant regarding the the work I'm doing I should just briefly jump
back to the the make file oh yeah there's I've been using remake for dealing with things regarding
that so I've been using I've been using these annotations within the documents so I will
yeah right so this is my make file where I've been using these annotations
representatives so for instance I would have the arrogance of creating say 20 aliases for print
so then I'm using the annotation within the print form to provide an inference within the script
but this is this is how I build out scripts and coding and I'm going to be using an intersection
of logic and forms for intersecting things so it all looks like that across different languages
and I could use something like remake which would output the genuine code which exists and I'm just
spending the time providing descriptions and because of the accumulation of forms and the
fact that they congregate I have just like with an and system the ability to grow smarter and
smarter of each form that my own orientation will feed into a wider network which can point around
and because I have this chain of descriptions within the files and everything if you point to
something somewhere else you can have that very large mesh of inheritances and various forms
I'm going to hopefully have some experiments with using RDF with a transport agents who'd be doing
federal best related content so one could be exerting things both from the perspective of
version control and then forming responses for interacting things and you could be building
business logic in terms of state as well as having having different criteria there's a there is a
machine that I did load up which is a position of an architect adapting ideas from Aristotle the
idea that rather than a straight line corridor that you are having to orientate and deal with
things one of the great tragedies of our modern ages that we're forced to be distracted and
things like this is a way of having a directed force in a logical more orderly way the below
diagram is a impression of how this was done for a an architectural place for radiologists and I
thought the feedback that they made the quiet room smaller so that the senior radiologists
couldn't hide away from the juniors to be quite an interesting feedback loop in which I'm sure
any logical that system in in an informatic system would be commensurable okay yeah and that's a
nice diagram but we don't have time for some digression I suppose that's it yes good sorry for
the rainbow I can be your mic stand if you prefer as well I can just stand yeah questions
there there in effect you could you could make an inference from just creating a list of various
things and seeing how it relates my my feelings that it would be better to once I've mastered the
logical intersection of this stuff is to compile a mega dictionary based upon a collection of
things and I think that's just efficient and I ever there's lots of people have been watching this
will be very delighted once I push a button and an API springs up but like with most employment
things there's a question of five or ten concepts and you can start in and deal with things that
these are these are 36 odd things so that's just two page manual if needs be just to get somebody
going yeah all right I've been just treating it as as a as a as a alternative to shell and a way of
breaking things into ways of breaking problems things into smaller problems as well as a form of
building coding against other subsets upstream so it's just a giant sandbox I'm going to be
putting that into dedicated libraries and I think SWI prologue will be a very apt choice for that for
a range of reasons yes thank you
you
