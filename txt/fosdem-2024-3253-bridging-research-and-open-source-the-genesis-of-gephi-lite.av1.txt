All right.
Well, thank you everyone for having us.
So I am Paul.
I am from Westware, a company based in North in France,
together with Alexi and Benoit.
We have the full team here in front of you.
And we are going to talk about software,
JFE Lite, web applications to analyze network online.
But we will be more talking about the genesis of this open source project,
which is very linked to academia as you will see.
Okay, let's get started.
So we are going to present the history of how we ended up creating this software.
The first point started in 2007,
where in a university, in University of Technologie de Compiência in France,
a professor called Frank Gitala, who is actually a linguist,
started to do research on mapping the web.
Looking at the web as a space of documents,
and I see how we can actually study that.
Together with Mathieu Jacomi, with there,
they created a session called Web Atlas to start creating tools
and do research on mapping the web.
Mathieu created the first prototype, which is called Graphilte,
to depict the network as you can see in the screenshot.
One year after that, still based in academia,
a research project called TIC Migrations,
led by Don Adiminescu, a sociologist.
They wanted to study how my immigrants keep a link to their home country using the web.
To be able to do this study, they created the first version of Gefi,
Gefi being a desktop application,
coding Java to actually create maps of nodes connected by edges, a network.
One year later, in 2009, they actually published a paper in the ICWSM,
which is a big conference of computational social media.
This paper, actually, it was a poster, as you can see in the picture.
This is Mathieu Bastion, one of the lead devs of Gefi software.
This paper actually won the Test of Time Award,
which is an award for the most cited paper.
It's not a paper, it's a poster, actually, but still.
Ten years later, this paper has been very cited a lot.
Sorry.
Gefi, at that time, was really used a lot to create maps that you could print,
or even step on, as you can see in those pictures,
because it's a huge map of words, and you can actually explore it with your feet.
Thank you.
So, at this point, we're in 2010,
and we start to see infographics on the Guardian's website, on the New York Times website,
and it's kind of the beginning of the data-vis online era.
And researchers and people who use Gefi want to actually share the networks online.
At this point, I'm a student at the University of Technology at Compiègne,
and one of the best solutions to actually do things interactively online is Flash.
So, I start developing solutions for Gefi users to actually share JXF.
JXF is a graph exchange format, actually.
That's how Gefi exports networks.
And there's various experiments on this,
and they're up on Sigma, which means simple graph mapper, actually,
though the weird case thing is.
And in the same time, people from Gefi actually find a pretty good solution to share networks online.
The idea is to generate a very large, very big picture,
and to use C-Dragon, which is a technology at this point that has been replaced later by Open C-Dragon.
Basically, it works like in a cartography software.
You can zoom in and see better resolutions images while you zoom, etc.
And this works well, but you have no interactive feature, but at least you can share things online.
Also, another researcher, Raphael Welt, who is working at Erie in Paris,
develops Geixf.js, which is the first full-featured application to actually zoom in a network online,
have the mini-map, a search field, information about the nodes you select, etc.
And it still works today, which is kind of amazing.
And that's the first step into real, enhanced navigation in graphs online.
Also, multiple people work on JavaScript graph rendering engines.
So there's Protovis, which has been replaced by D3.js,
which has become a very successful library to render all kinds of graphics online.
So I started working on the first version of Sigma in JavaScript.
And at this point, some people from the Oxford Internet Institute
bind all of this together by developing this Sigma.js exporter,
which is still kind of used like two or three years ago.
There were still publications based on that.
And that's it. People can successfully share the networks online after Jaffy, basically.
So let's move on. So the next step is start in 2013.
And it's about exploring those networks online.
This only starts with another research lab, which is the Sciences Po Media Lab,
in which I was part of this team, and Alexi too, actually, for many years.
And starting in 2013, Alexi joined the team.
And Sciences Po Media Lab was actually, the mission was actually to help social scientists
to actually use digital methods, either data, but also tools.
And so one of the research we've been conducting in this lab was to try to see
how we can use a network math and analysis by studying pictures.
As you can see on this picture, we call that the visual network analysis,
where we really think that, like Tufta introduced in the statistics,
how we can actually use the picture as a way to analyze your corpus.
And to do that, we needed to actually go even further in developing ways
to produce those pictures and to interact with it online.
So we worked on SigmaJS to publish a V1, which was much more a performance.
And right after, we did integrate this library into another research tool called HIFE,
which is a web caller dedicated for social sciences, kind of.
And as you can see, this tool was really key.
SigmaJS was really key to actually embed the social network analysis right in the tool
that we were producing in the lab.
We also created other lots of different tools, like many lines,
which was more rooted into pedagogy issues.
The idea was you could create a slideshow directly with a network on it,
and you could actually, each slide was defined by the way you can filter, zoom in in your network.
And that was a proof of concept of how you can actually guide your audience through analyzing a network.
This work has been presented for them, actually.
So at this point, we have a lot of tooling to rendering graphs online,
and the next step is kind of to work more on manipulating graphs online.
I mean, one of the things that Jeffy does well is computing things,
like page rank, centrality, clustering algorithms, and this kind of things.
So the first big step in this direction is from Biomplik in the room as well,
who also started working on Sigma in 2013.
And he develops this JavaScript library that allows handling networks as a data structure.
And within the library, there's lots of standard algorithms.
So it's easy in graphology to compute a page rank, to compute various metrics,
but also to render some layout algorithms, so not rendering, sorry, to compute layout algorithms,
like the position of the nodes in a graph.
All the things that Jeffy does well, graphology starts to mimic it, basically, in computing side.
And we start thinking of Sigma as just a rendering engine that would be based on graphology,
so that we don't have to take care of computing things in a rendering library.
Mathieu develops graph recipes, which is yet another tool to actually generate renderings of graphs online,
but this one is a bit different instead of having those applications that look like Jeffy.
Here you actually script, graphology, and get an image output.
And this allows having kind of crazy things like heat maps or...
...area diagrams, I don't know how to call this, or kind of circles around areas, etc.
And this is really a new approach on all those tools.
Also, there's Minivan, which is yet another application online to actually start exploring networks
that uses graphology and Sigma, etc.
And yeah, at this point... I forgot this one.
And Guillaume also develops Ipy Sigma, which is a binding to display Sigma networks in Jupyter notebooks.
And this has been quite popular as well.
So graphology is more and more used, and yeah, at this point, really, we can do lots of things
in well applications on the graph computing and rendering.
And so our last step in our history starts in 2019.
So as Alex just said, at that point we had a lot of different tools to do lots of different network analyses
in lots of different contexts.
But from there, we still don't have a generic graph network editing tool online.
But from 2019 started some convergences to actually go into the directions.
So actually Alex and Mathieu and Eduardo with another dev of Gefi did a presentation here in POSM
trying to explain how contexts of doing network utilization from a Java desktop application
or from a JavaScript web browser based one are really two different contexts
where you can't hope to achieve as much precise or scaling memory management in the web browser
for many different reasons.
Yet right after some guys from MediaLabsence were still, so Guillaume and also Robert,
did this prototype, a hidden one actually, that you probably never heard of, Nancy,
which was actually mimicking Gefi editing tools.
So in that tool, you start having like you load a file, you can render the layout,
you can change the color, you can actually edit your map clearly.
So we start this paved way to having a really editing network experience on the web browser.
But at the same time, we three of us actually ended up creating Westwares,
this company we are in for many different reasons.
I have no time to stay here, but still we ended up creating this place where one of our main skills
of this team is managing networks in web application.
So we were lucky to have clients paying us to do that, to integrate all those technologies
we talked about into custom web application for them.
While doing so, we just made all those tools much better and better.
And so for instance, still thanks to our friends from Sianxpom Media Lab,
we published a new version of Sigma.js, for instance, the V2.
And also sometimes to that, another researcher, Thomas Venturini, sociologist,
paid us to actually create yet another tool to share with Network Online.
And we call that one Retina.
It's really like we try to do that with all the features that we wanted to be there
to make it easy to search, to filter, to manipulate a network as a document.
You don't edit the network here, you share it.
But right after in the same year, we were to this event here, the GIFI Week 2022,
which was actually organized by Mathieu.
So it's a social event to gather the community of developers around the GIFI community,
and so we joined this week and we proposed the community to bootstrap this project
of mimicking GIFI on the web.
So what is GIFI Lite?
It's kind of GIFI on the web, but lighter.
So we just like, we put ourselves together and we said, what makes GIFI GIFI?
And we picked the main features like we need to be able to actually customize the appearance
of my nodes and edges because it's a mapping application basically.
And we need to be able to actually modify the position of my nodes
because this is a mapping application again.
So we picked all of those features and we kind of decided to design simpler versions of them
and versions of them that we could implement in the web applications basically.
And the good thing with the web application part is that it's just a full client web application.
It's just some JavaScript and HTML file.
It's very portable.
Once your browser loads it, it just runs inside your browser.
Your browser kind of becomes GIFI Lite.
If you need to have custom features for yourself and fork it, you can just deploy it on your domain.
And people actually already did this in DMI at Amsterdam and Cortex in Paris, both research programs kind of.
And yeah, let's dive just straight into it.
So this is what GIFI Lite looks like.
So for people familiar with GIFI, it's kind of the same thing.
I mean, the center of it is a map of my network.
And I will load a network.
This network is actually the network of the people, the tools, the conferences and the institutions that we discussed in this presentation.
So as a GIFI user, I will start by computing things like, yeah, let's see how the nodes do group with each other.
So this is a community detection algorithm.
I have a new modularity class attribute in my data.
So I can render it.
I can go to appearance and say, okay, I want to see the colors of my nodes by modularity class.
Okay, but it's still a bit messy.
So I'm going to change the position of my nodes.
I can start by putting them on a circle, for instance.
I don't know.
And then maybe run some physics algorithm that has been fully designed inside GIFI.
It exists in graphology.
So we put it back in GIFI Lite.
Yeah, okay.
First, I can just stop it.
It starts to look like a map.
That's nice.
Also, here, so I see my communities.
There's this purple community, which is about kind of us, actually, westward and Sigma.
There's this media lab community.
There's this original GIFI community.
So, okay, that's nice, but I want to see the type of my nodes, actually.
So what if I put the type as the color of my nodes?
Did that work?
Okay, yeah.
I have all these purple that are softwares, purple nodes.
Blue nodes are papers.
Okay.
I see the enterprises, the events.
That's nice.
I can also maybe set the color of my nodes.
Sorry?
Size of my nodes?
Oh, that's big.
So let's put lower things.
I don't know.
Okay, that works well.
And at the end, since it's GIFI and it aims to actually generate a picture, I'm just going to export the file as a PNG file.
Okay, I won't click on it because it's going to lose the context of the browser.
I prefer to stay in it.
Also, I can filter.
That's interesting.
I can filter on nodes.
The easiest thing would be to actually display the start range and to redo the whole presentation, but here.
So it all starts in 2007 with Web Atlas, Mathieu Jacomi and Fran Guittara.
And yeah, one year later, they built this thing called GIFI.
And one year later, I start working on weird flash applications.
And then at some point, those two clusters are joined by SigmaJS and the GIFI SigmaExporter and so on and so on.
Also, one interesting thing in this network is if I come here and I search for FOSDEM, I can actually see that if I select all nodes.
There are 10 confrontations in the 12 or 13 past years that have been done in FOSDEM to present all those tools and all this context.
So yeah, it's been a long run.
Yeah, so as a wrap up, so at the end, what's all of us creating this GIFI Lite software?
So the first thing is like, we were about to do that.
Thanks to the very vibrant and brilliant community around the GIFI software.
In this community, you can find academic people, you can find developers, some designers too, and also small experiments and prototypes that have been produced along the way helped us actually to make also the ecosystem of libraries and the thing better till we could actually at the end create this tool.
Also, well, this is what I just said.
Yeah, thanks to Internet Archive, actually, which helped us a lot finding traces of old forgotten prototypes.
And the web is an amazing platform.
It was easy, really easy for us to actually create this tool to put it online with all the web capabilities of the features we have now.
And of course, as I said, many of those tools exist.
Actually, all of them mainly exist because they are rooted into academic needs, also design and support.
A lot of money and time come from academic projects in this story.
We are a company.
And so we have some customers that are from academic but also some which are not from and also customers also hire us to make also ecosystem of tools better and better.
So we also benefited from having our customers paying us to make that happen.
And the last tribute goes to FOSDEM as Alex said before, because this place is very important place actually to share all those ideas.
And new prototypes and just emulate all those energy to all going into developing open research tools.
Because when you are really looking at how we do research, you, well, I've been trained with Bonilla tool, for instance, to understand how crucial are those tools that manipulate knowledge to create or to do research.
And those tools needs to be open to really assure that all the transformation of fact till knowledge is reversible and questionable.
So we are very happy to provide the community with the new tools, the Giffy Light, and we hope that it will meet also needs you might have.
Thank you.
So we have time for questions.
Do you have any questions?
I actually added graphs, meaning, you know, connecting information, looking together, like even joint collaborative editing.
Do you have any easier tools to allow people to collaborate online to, you know, do journalistic research or do you have any new medities or things like that?
Yeah, so the question was, we talk about editing networks, but we only talked, we only demode editing the visual aspects of the visualization.
Actually, this network we showed you has been created inside Giffy Light.
So we can, you can create nodes.
You have a graph on the here.
You can create edges, of course.
So you need to select a source by searching into your networks and targets.
And so we actually, so we have to say that we, we did a new iteration of work on Giffy this week.
And we added, we're making those addition, that addition features much better for this.
Do you actually want to add a photo of the egg nodes visually and drag edges?
Yeah, you can drag, you can also drag nodes.
I don't know, you can't create an edge on the stage.
That could be done.
But for the second part of the question was, can you also do that collaboratively?
So this is going to be more difficult because since it's all based in the broader,
making collaborative features, we'll ask you to have a server and to have WebSocket and everything,
which is a brand new thing.
But you could use the interface and fork and see.
We actually worked on one of the biggest projects we've worked on those last years is actually what you're describing.
Like this, but with a backend and collaborative features.
And it's named GraphCommons, but it's not open source.
But a good example for that.
Yeah, yeah, no, this collateral, yeah, Giffy Lite is just in the browser right now.
The one, another question, yeah.
So I really enjoyed the community mapping part of this.
And I'm wondering if you could speak to metrics and measurement.
How have you seen this used to analyze communities and actually pushed community development strategy using Giffy Lite?
So the question was how I tried to rephrase it.
In which extent can you work on community detection and with community statistics inside Giffy Lite?
So the answer is for now, well, here you will find all the algorithm statistics that are available in the Graphology library,
which is JavaScript based library to work on statistics on algorithm on networks.
So far about community detection, we have Louvain only.
But I mean, as long as we develop new algorithm in Graphology, it will be easy to port it inside this tool.
Yeah, it's kind of a modular way to take it.
Yeah.
I was wondering what has been your publication strategy to support this work?
Particularly, do you target graph conferences?
Is it more successful to target graph conferences or social sciences conferences?
That's a good question.
So the question was what was the strategy for communicating around the tool?
Actually, we don't have a strategy.
So basically, you see that actually the Giffy desktop software was presented at ICWSM,
which is definitely a social network analysis discipline, kind of.
We are not from academia and for them is one of our place of choice to communicate about what we do.
But yeah, so I'm a bit short, actually, to answer you.
Last question?
Have you looked at new renderers for Graphology?
And also, in this slide, the addition to all that things like how and the numbers of such,
do you consider including those in the range of them?
You can send the pull request.
There are other developers who have developed other rendering algorithms around Graphology,
outside of Sigma to render more complex things such as hit maps or halos around the nodes, et cetera.
Benjamin was asking if we are planning to actually integrate those features inside Jaffy Lite.
One answer is that contrary to Jaffy Lite, which shows that what you see here is actually the preview of the export,
yet you will do it as an image.
So right now, no.
It has to be done in Sigma to be rendered in Jaffy Lite.
Thank you very much.
