Hello. Hello, Europe. Welcome to FOSDEM 2024. I am Carlo Roestel and I want to explain ZIM.
ZIM JavaScript is a new way of coding creativity for kids who wants to type and not drag blocks.
We can do different things. I will explain you the version 014, the version 015 and we launched this January two weeks ago, number 16.
So let's enjoy the new tablet apps creating online. ZIM is created by Dan Zenn.
You see a little man at the left side. He's from Canada and his name is Dan Zenn, but his alias is Dr. Abstract.
And I am Carlo from Belgium and I created my own signature ZIM Salabim, the magic of code. Let's start.
So this year ZIM already exists 10 years. So if you go to ZIM's history, you can see different versions. You can click on.
So we now launched speech. Everybody is talking about AI, but we can now show you Happy New Year. It's okay, February, but still we can say Happy New Year to everybody.
When we launch an app, here you have the possibility to see the promo for the app, the full version at the right side, the editor to see the code and to view the app in the online editor.
So I'm going to give you a promo in the full version. So click on the button of the computer. You see an animation of the hand. It's a GIF. You can import into an HTML canvas and the computer should talk.
If you click on it. So here it's a computer voice speaking, but you can choose wherever sound of the computer is active. Speak.
This is Dutch. The language Dutch. I speak Dutch. So we are 10 years old. So we celebrate with this FOSDEM edition. I'm happy I can give you some information. I was here a year before also.
But we now have the new ZIM forum. A little applause because we always work into the Slack version. So if you have problems or questions for ZIM, please contact ZIM forum.
There is a big team of developers helping you if you have a problem to make apps. It's a pleasure to meet us there. So how did I start with ZIM? It was Corona three years ago and I'm a teacher and I was looking for my wife who is a teacher for little people, so toddlers in school.
She was making videos. And the videos, they are not interactive. So I want to make apps because I'm a graphicist. I did not have lessons into JavaScript. So I found a man. I found Frank. I found Ken Academy.
But suddenly Dan Zan came up and he is the inventor of ZIM. His little crazy man, but he loves a lot of inspiring people all over the world. You can see a little introduction. This movie.
I was like a little bit of that myself. Now a two time Canadian New Media Awards winner. The second time was for educator of the year. I'm a professor of interactive media at Sheridan College in Canada.
The first time was the programmer of the year for my website called Dan Zan because I'm also inventor of Dan Zan. Dan Zan is a large site. He's been going since the 90s. Many games and gadgets. Tools. There's a tool called Appartica, which was the number one appart making tool in Google for 20 years.
Until Flash Die. And most of the Dan Zan site was made with Flash or even directed before that. And so it's now treated as a museum. I'm well known in the physical world for dancing and fashion parties.
I had a happy celebration. Here are some of the things people have to say about me. These can all be found at the front of the creativity framework.
Okay, so many people are telling about him and the reviews of the website. And I'll show you some reviews. So kids want to be happy and they want to make apps. So that was my first idea. And Dan Zan helped me to create simple active apps to go with the robot up and down, for example. It's a D-pad.
And you can, for example, make dialogues and the kids can animate robots and aliens, for example. So if you click on the aliens, you can move them around in space or you can move the robot left and right.
So this is what kids like a lot. They want to be satisfied with 10 minutes lesson, maybe about coding. And they can make this. We have assets for children made into ZIM kits slate. That's a new way of programming for kids.
So also we have a hero sensor inside the RG. Here's him. Mobile device and we tilt the device. Also the robot can tilt left or right.
And in 2023 we have results and no time is set. Frank Loss. So Frank Loss is somebody in the known physical world for game making with JavaScript. He made space inventors.
And I was asking Dan, can we make also retro games? It's fun for kids also. But with the knowledge Dan gave me, I could use the information of Frank Loss and he is talking about ZIM that it's really fun.
And fun is a factor for me to start exploring ZIM. Even videos in five minutes you can explore. So for example Angry Birds, if you want that, making Angry Birds a very known game. You have articles on dev.2 Angry Birds in 15 minutes. You have little videos where he's explaining how to code.
So this is the intro. You see, he's really doing cool things for children. We look to other libraries also for examples and then maybe show you my example. I made on my website ZIM Salabim. You can find it there.
And then you can drop and drag. So we have physics in ZIM. You can do whatever you want in ZIM. Just your imagination and you can make it. All for free and with a little help of others on the forum. It's nice to know.
So for example the reviews. Thank you to ZIM. Develops. Time was quite short and a very smooth ride along a quick learning curve. So all around the world we are now.
When you are a beginner intermediate or you're an expert, no problem. You can join. This is a survey so we can collect the people who are meeting us and the cat is Omi. We have given the name as Scratch has a cat. We also have our cat, the grown up, you know, the big one.
Because we have to type a little introduction by then.
Okay, so this is the framework ZIM slate. We a little change it.
One year back it looks like this, but the main idea stays on the left side. You have the view of the app. Other outside you can code. For example, if color is white, you can use that to color the background in white.
Okay, you see Harry Potter is teaching you because it's magic code, you know. Okay.
We have.
What is bubbling at ZIM bubbling is like what are we doing with ZIM. I'm Carl and I just had the idea to make kids happy. So I put a lot of effort each night because I also I have kids of one of five years and one of one year and eight months.
So I need to measure time settings with my wife and it's very difficult because I believe in the product. It's free. It's open source and why shouldn't I invest in this beautiful website because I want to spread it to the world, you know.
But I'm not alone. For example, I see games. It's from UK. They make a lot of kids apps. I'll show you.
This is a website of I see games. You have math or English you can learn. You have even Dutch examples of apps. You're learning tools. This is, for example, a beautiful one. You can expand. So you have to learn the numbers.
So you have to push 123.
So the kids have to follow just with the finger. It's not doing anything, but the animation is made in ZIM.
So I clicked the one. It's okay. There comes a star. Here we use physics so you can drag the wooden block and you have to make a bridge. So the children has to count because the one is before two and then we have the three after the two.
And then we already have to running. So this is a sprite running, you know, this makes us fun for kids.
So that's the idea after ZIM, but also top marks, for example, has a lot of examples for kids. If you want to be inspired as the teacher, this is like all made in ZIM, you know.
So and also close up makes a lot of games. I'll show you a little further.
So here we have the ZIM kids golden bar at the right side. If you go on the red side, you can click kids and then you can make the apps.
But we do also VR for kids. So and we do AI. It can be imported in AI also. So here you are at the right side. You have a virtual environment.
So I'll show you an example in some minutes. ZIM has also a Facebook where you can find some information. So the latest apps or post there.
This is a clap lap from Israel who's making apps in ZIM.
So this is the mediums of users have already played and use the products we developed this year.
In the past, again, they want to take us about two months of work. Now takes us only two weeks of work. Working with ZIM is very flexible and makes it possible to work with dozens of components developed in the past.
And also to develop and expand our own components and code elements that optimize the work.
One of the biggest advantages of ZIM is the connection and support done and healthy.
The availability and possibility of the web kind of ZIM developers and Slack or Git allows us to rely on ZIM as our main platform for development.
Any question, buy or request is immediately a sensitive tool and we are very quick and we and our customers know that there is something to trust.
Unlike other platforms, ZIM is constantly being updated.
And every few weeks new features and innovations are released that optimize the work.
Working with ZIM is easy and fast. Images, videos, samples, vector files and much more work naturally with ZIM.
ZIM allows us to be present in the design and focus finishing our developments and games.
The number one reason to work with ZIM is coding with ZIM is just fun.
So thank you ZIM and all the team developers in ZIM. ZIM is here to stay.
Okay, so I hope it's little advertisement but they also have the possibility made to tap lab to create your own game with an environment.
So three games are free and the other of us you have to pay for.
And I'll go to the next slide.
So also the ICT games.
It's not about why another ZIM is in the S when I'm in the game.
And why I'm in the game.
So I started 16 in the year 2000 and I wanted to make educational games to support my children from the past.
On the learning objective of doing that thing and we get home.
I wanted it to be free so that all children had the equal opportunity.
And I originally made games in Clash and then about six years ago I was with an alternative and then ZIM.
ZIM.JS which is just brilliant.
So hopefully we'll see some things.
So you can turn things and through this space.
It's cute.
And there's a mask to make it to chop off the edges, make it look like it's a mask.
We've got randomly sorted shapes and words and then you can drag.
And if you look at the code with this, then it breaks it up.
See the grid there, climate and outfits.
They describe how it works.
It makes sense of what's happening.
Also, I really like the documentation.
It's not clear.
The documentation.
So we saw rectangles.
We just found rectangles.
I can type in something.
I have a new rectangle again.
So remember the themes of light in that game over there.
This is all this section.
This is all rectangles.
These are all the powers and variables you need to make a rectangle.
So you'll see.
We have.
We have explained the ICT man.
The library has a lot of components made by ZIM and eco-appointments.
You can use, for example, to make games for kids to connect lines.
So many kids want to learn the numbers and connect them.
And then you have an image popping up.
So that was a question of me and then implemented it.
So I was happy I could make games like that.
So for my wife, this is the website.
We have Dragon Games and matching games together.
So you can visit it if you want.
The slideshow is online.
But now we will talk a little more about the environment where kids can make games.
So it's a scene.
So you have to choose for a background and some pictures.
And you have to combine some pictures like the eyes on a gem.
And you can then make your own creativity.
So first of all, the names for a picture.
We shortened it to pick.
So you have a new pick.
New out is audio.
A video is feed.
A hif is an animation.
A hif is a hif.
And a sfiji is a scalable vector graphic in a purple box.
You have seen it.
So Pragma is a little woman in the middle is the daughter of Dan Zan.
And she's also helping kids programming because also girls can code of course.
So it's good because also love it a lot.
If you want to know how, for example, you need to make a new pick.
We also have at the right side a help button.
And then you see a video.
So if you click the video, it then is explaining how you can work with the assets.
A little explanation.
So that's a little tricky.
But let's try that again.
Test.
So no sound is playing because the user is supposed to interact with the act first.
Here's what they do.
Start.
And now the back of the sound plays.
Yay.
So that's a little tricky.
But.
Okay.
You can get to kids at kids.zinjs.org.
So come on in and I'm going to show you how you can make a scene.
Scroll down here.
Make scenes.
If you want to learn about coding, then you should be taking a look at all of these parts and trying out the handy tutorials here to work with you.
But you can also make a scene in Slate.
And Slate is this link right here.
Or you can click.
And that's a place where we can type any code that we want.
Of course it needs to work.
And then we can test our code over here.
You may see it's starting with this demo.
And then we can test our code over here.
And then we can test our code over here.
You may see it's starting with this demo right here.
A fragment.
And there's the code for that.
But we want to make our own scene.
And we'll do that over here.
And test right now.
We got nothing in it.
Alright.
We can add some assets.
And then available up here.
And if you want help on how to do that.
Well, this is a help video.
So hopefully this will give you help.
But you can press help there.
And what that does is it jumps you down to this help section right here.
Where it tells you how to use the asset buttons.
And it says see the video.
There's a bunch of examples as well.
We can add a background color.
And that just adds a color.
That's not really using assets.
But here's adding a background image.
Such as a beach.
And there's adding images.
Like a butterfly.
We'll do that too.
There's a code to be able to do that.
We'll talk about that.
Here we can put things into containers.
And move them all together as well.
So we'll take a look at that.
Here's adding sounds.
So that when we press on above, it plays a sound.
And then here's adding a background sound.
Which is a little bit tricky.
Because we're really supposed to click on something in the app.
Something in the app.
Something in the app.
Before we can play a sound.
It's a sort of a polite thing that the browsers make it do.
Because otherwise people would go to a page and sound would be playing right away.
So that makes it a little tricky to add the code for a toggle button.
As you can see.
Or the start button.
It's not too bad.
We can actually test just fine.
Nice and easily with the background sound.
But that will only work because we're pressing the buttons here.
If you did.
In a full mode.
Don't worry too much about that.
Let's start before we go into the assets.
Let's just show you how to change the color of this.
The way you do that is you go frame.color
is equal to something.
Such as yellow.
We have a bunch of colors.
Most of the playing colors there are green.
For instance, will work.
And we get test.
So there it is.
This outer color here didn't change.
It's still black.
We can change that color by going frame.outer.color.
Is equal to blue.
Oops.
That's cool.
And we can test that.
We may have done some other colors down.
In the example.
There you go.
There's also a way.
If you take a look at the demo.
You see how that's called a gradient.
And if you take a look at the code there.
We made a new page.
And we told it the stage would.
And the same type.
And we told it two different colors.
We added that to the stage.
So if you did that.
Copy this.
Copy.
And paste it in here.
And do a test.
There it is.
It's going from pink to blue.
And our outer color happens to be blue.
Okay.
So that's some ways that you could.
Change the other color at that point.
There we go.
You can see how I think of it.
That's some ways that you could start off.
Without the background image.
And just start building things here.
For instance.
A new rectangle.
Or a new circle.
And we'll make it 100.
Radius and red.
And dot center.
And dot drag.
So this is you making an app.
It just doesn't have any pictures.
But it allows you to think.
Think what if we want.
Start making a game.
It just has these shapes.
Okay.
Now let's go to assets.
And see how that works.
We'll clear that.
And test.
So we're back to nothing here.
We're going to go and add a background image.
So I'll click on backies.
And then we'll go to the background image.
And here's a bunch of different backings.
We've collected for you.
And thank you to back easy.
We've got these right.
And thank you to our co-ops.
You help process all these.
Okay.
Let's choose the beach.
Beach one.
So you put on the beach picture.
Or the check box.
You want that check gone.
And then hit save.
What that does is it says.
Okay.
So we're back.
And we can access that by going asset.
Singulate.
Asset.
We're using an asset.
And then you put the name that is right here.
Beach zero one.
Inside of little quotes.
That turns it into a string.
If you don't use a string, it will break.
And then we will talk center that.
So there's the asset.
Asset by the way is a word for images and sounds.
And we have images here.
And also sounds.
One day we may add sprints.
So there is our background image.
Now you can go to phone mode here.
You'll see the phone mode makes it a bit longer.
And you can see that the image doesn't really fit perfectly in the stage.
And if we're not intended to.
It's not high enough.
So that's because the asset is just a little bit too big.
And you can see that the image doesn't fit perfectly in the stage.
And if we're not intended to.
It's not high enough.
So that's because the asset is just a little bit too big.
Or for this.
Which means we'll need to adjust.
We can do that with scale.scot.
So we put in a.scot.
And if we make it twice as big.
And save it.
Or get test.
There it is.
And that fits.
It's a little bit too big.
As a matter of fact, if you want,
we could drag it and sort of see what we mean.
See?
There's some.
Maybe it's just fine.
Maybe we like it like that.
But we sort of have to guess at the scale a little bit.
Or we could make it this scale.
And then move it over.
For instance, we could center.
And then m o b e for move.
And then we want to move it this way.
This way.
Then it has to move negative.
It's negative x.
So we could move it minus 300.
Hey, there we go.
So if we moved it to zero.
There's what it looks like.
You can see.
But we're going to move it 300 pixels.
Over in the negative direction.
Okay?
So that would look like this.
Negative 300.
And hey, that looks pretty good.
I like that.
But there's an easier way perhaps to just pick the picture.
Or make the picture.
Fill.
And let's show you how we can do those two things.
Moving it.
What we'll do is we'll use scale.
To.
So if we use scale to.
That will scale to the stage.
And I say this.
And now it's scaled to fit in the stage.
Like that.
If we made it at a bone.
It fits to the top this time.
And if we made a portrait.
There it is.
Fitting in there.
That's okay.
Well not really.
Because it leaves this stuff on the top and the bottom.
That's fit.
So we want the sweepy bracket.
Tight.
Pulling.
Fill.
So we'll see what we've done there.
We've used the sweepy bracket.
To go to the tight parameter.
Of.
Fill.
Hey look.
Now it fills the stage.
Fill in the stage at a bone.
And you know the portrait.
It fills it.
So it fills it.
No matter what you choose.
You can still move it afterwards.
But that will probably do us for now.
It also may.
Okay.
A little introduction.
To the slate.
We have made several changes now.
To import 3D into the editor.
And a slate so kids can make 3D apps.
Everything is explained by new teaching videos.
And we have made for teachers the editor.
Yes the editor.
You can save for free all your zaps you're making.
Otherwise you have to download it.
Save it on a place you don't know.
So now you can make zaps.
Zim apps.
Is a combination of zaps.
The name.
And then you can make lists of zaps and share them with your students.
You can also find some demos.
And all that is for free.
So no advertisements.
So this is the other one.
The newer one.
How you can explore.
Zim with demos.
And here you can have a look.
To the.
Editor.
So.
You can also find some demos.
And all that is for free.
So no advertisements.
So this is the other one.
operate seeds and make sure you錢.
Come on.
Got a start.
Good news.
All 2018.
Slowing.
So we have.
the search here, like in DITS.
And as soon as we do all the collapse, all of that
means the results are, but this collapse is also
the opening of my collapse, my result part.
So there's how many we have in so far, 30 seconds of them.
And the fact is that the current one
that I have to put in here.
So if we take a look at the dianobesan,
oh, there's dianobesan, the bactezan,
the grids, the guides, the do-wees, and passing parameters
or object pages, the variables, and so on.
And you go into the slide.
So those are the dits.
And in other words, great, great, we can just hide it that way.
But we do have as well, and this one's called list.
So once again, I'm logged in, which
allows me to keep track of the files.
And then here, what we're going to do is copy the bits.
And I'm going to copy it to my own list.
And I will call it bits.
And note that they're all the names of the bits.
And you work nice and happy with them.
And it's saved.
Now under save, here, see there's the files.
List, OK, so that's right.
That's not a list.
So save is anything that I happen to get plus sign on.
And then save plus my own list.
So here under save, we have my own list.
So you would have your own list.
But we want to look into this.
And then I can have these are my list.
And they are my art, my prepassion, my basics,
and here's my new list.
Wow, take a look at that.
So I have.
OK, so you understand the idea, making lists of all your zeps.
You can share them with the world.
And we can go then for children much more into depth
to learn code, of course.
So we're building, building, building.
And we hope everybody understands
how you can manage and share your zaps, your ZIM apps,
your little code to let children be creative.
For example, this is a blob.
A blob is a shape that is closed with a kbizier curve.
And you need to change the parameters, the lines,
to make all the form of shape.
And this is needed to make, for example, the kids app connector.
So you have to make a path or a blob that is closed.
And when you have the blob, you can make a game of it.
OK?
So I also was thinking if kids can make games.
If I have to make all the games for the kids,
it's a lot of work.
So I made a tool.
Kids can import their own image.
And then they can change the blob themselves.
So you have like this basic blob.
Hide the numbers.
I can say I want to edit a blob.
And I can just drag around the cat, the blob.
Otherwise, you have to program it and drag and drop
with big buttons.
It's very easy.
And then you have saved the new blob.
And you can have the points to code, to use it into your game.
So that is very important for children
that they understand what is a form, of course, of a shape,
to explore a code.
Also, beats are possible.
Beats, for example, stars.
You can make the Europe flag.
We are in Fosdame.
It's Europe.
So 12 stars need to be on the circle.
And then you can add beats.
Also, emojis.
We made a tool to get kids creative with emojis.
So what is the code for an emoji?
They all send emojis on the phone.
But what is the code after an emoji?
So we are going to the depth for the kids and then, oh, wow,
we can make emojis.
So for example, the code for an emoji is new emoji.
We have the code and then 200 pixels width
and then in the middle of our game.
So if you go to the site, the emoji, for example,
this is a tool.
You have like, ah, I want to do a tennis ping pong game.
I want this, I can do copy and I can import it into Zimkits.
Or I want another one.
You can also find one by your own operating system.
So for example, I'm happy.
I'm in love with Fosdame.
So I want to use the code of this emoji.
So this is why kids are loving Zimkits a lot
because there can be real coders.
They can see the code behind.
Also, we have panels.
You can close, open and close.
For example, emojis in the list for teachers, kindergarten.
For example, then they can talk about what is this, what is that.
So in a little time, you have pictures because they are emojis.
And if they want to not anymore on the screen,
you can remove them.
So you can open close.
You can move around.
So you can make whatever you want and let children talk with,
what is this?
Oh, my daddy likes this a lot.
I don't know what it is.
But I think here everybody knows.
I also have a little thirsty.
I'm a little thirsty.
So I will drink something afterwards
because I'm happy and in love with Zimkits.
But also the indicator has love emojis.
So indicators in games, you want to know how many lives you
still have after hitting something.
And then now you can use emojis.
So another tool we launched Zimkits is the emitter.
So Zimkits has lessons.
But the emitter wasn't yet possible to show to people.
So this is the confetti.
You can choose whatever you want.
You can make fire if you want other colors.
You emit something.
And the code you can create by the button.
And this code, you just copy it and paste it into the editor.
So you paste it.
Zimkits is slate.
And we just do this way.
And then we test it.
And we have the code.
You see?
What I also explained to kids is how color works.
Color is a big problem for children how RGB is working.
So I made a tool for kids so they can change the color.
And they understand what is alpha, what is looking through,
what is hue, what is black, white, how does it work.
So they can learn a lot of the techniques about color.
Hexadism, all the thinking.
This is all possible in Zimkits.
Sliders.
It's unbelievable.
So these are tools I really need as a teacher
to explain what is coding.
Also, if you have particles for stars or a snow simulating fire,
we have a website.
And Zimkits has different levels for animating objects,
of course.
I'll show you a little example.
So we go to the parts, events.
Here you have a triangle.
And you click on the triangle, and it goes to the right side.
No problem at all.
I go to the code, and kids can learn the code.
This is a triangle.
It's rotated.
It has a cursor, the hand.
And it has a position at the left center.
So at the left side, in the middle,
it's positioned some pixels on the right side.
So that's the start position.
But if you go to the level two, they
learn about animation with the spacebar of the keyboard.
So that is also possible.
But here, you can click, and the circle is moving.
But what is also possible, the other side,
you can go with the arrows up and down.
And when it's hitting, you get confetti.
So this is why we needed the confetti, the emitter,
to show children what is possible.
Because when they are fighting in a game online,
they also have to see something when they die.
So this is also a possibility.
Confetti, when we shoot something in the air,
it goes to another place.
And this is a little faster.
But we have also the sound with it.
We have a counter of the time.
It goes down.
And then, oh, we have 10 seconds left.
We need some more points.
Come on, come on.
And then when it's finished, we need
to see what do you think, what do you see?
Game over.
So this is a little animation for children.
How can we make a game?
If you want more complex, then we have sprites.
We can really animate like in a real game.
So this is the emitter, why it's used.
You can also catch beats.
So an emitter I used for is my own name.
I learned kids of 12, 30 years how to make their own name.
And a little game for the name is please
raise all the cookies.
And when you're happy, all cookies are coming.
These are pictures into the emitter.
So you can do whatever you want in the emitter.
And if you want to play again, you can launch the button
to play it again.
So creativity is all yours, of course.
Walking onto a path is also something
why we use the path, of course.
Here you have the path.
And on the horse, there's center class.
It's a typical Flemish ritual.
So he comes on the roofs of the houses
to bring presents to the children.
So he's walking in Antwerp above the roof tops.
And you can stop and do help.
What do you have to do?
So there's also a path.
But it's coming back when it's at the end.
OK.
So also I made a game for Saint Martin.
I live in Bevereux, next to Antwerp.
And there is like a candy man.
And the candy man is there at night.
And he has to throw some candy.
So you have to hit the little people to get them candy.
So if they are happy, yay.
And this is creativity.
You can put your own pictures into the background
on characters.
You even can now play multi-pong.
If you are with three screens, so two phones and one laptop,
you can play pong along with your phone.
So I would say test it sometimes.
But I cannot show it now because I have no time anymore.
But it's also working.
OK.
We have also animating.
So if I see something on a classroom,
I want to make it myself.
So animating is with sprites.
This is Dr. Abstract.
He has colons and rows.
And sprite sheets, we call it.
And then we use it also for games.
So for example, this one, we have three layers.
And we can shoot.
So that's what kids also like, of course.
And they want playing games.
But I'm not a shooter man.
So I make it with vortex.
Vortex is a little brave or another way of thinking.
So you can remove somebody standing over there or something.
But there is nothing to do.
It's suddenly walking and jumping.
But you can shoot.
So another ID.
What do I have here?
We have also a video.
Mr. Sander is somebody from Holland.
He makes a lot of videos.
I was asking him, can I do something with your videos?
So he's asking, where do we hear the letter B or something?
So on the left side, the different images has to come.
And then you have to click left or right.
What is the answer?
So this is only the first step that I've shown you.
But we have also Mr. Sander in the 3D space.
So I want to show 3D.
Why?
Because in September, Zim launched the possibility
to go forward into a 3D space.
So everything is 2D, but you walk around.
And you can go with your mouse left to right.
And this is very amazing for kids.
So they want a game.
And they can even play videos in 2D space.
All made by Dan Zain.
So this is also about the science day in Belgium.
This is Mr. Sander again.
So this is playing.
We are moving.
So you can pause.
And you can go forward.
And you can do several interactions
with the several Zim apps.
So everything is a ZAP.
And you can place it wherever you want.
This is the book.
We have an interactive book also in Zim.
So we can go left and right by touching it.
This is unbelievable.
We can do it in 3D.
Interactive books.
So if I put the little people there, I go back.
It's still on ZAP.
So we can make books.
We can path.
We can go like here.
We have a circle.
We make it bigger.
Other right side.
We can animate everything in 3D space now.
So this is a big step forward for people who are 3D makers.
This is another example.
We can even use the VR glasses.
So down you have a button, not support,
because on a website, a computer, Chromebook.
But if you have the glasses on, you
have to push the button below to go.
And then you can go forward, backwards.
You can then animate things, make it bigger, make the solution.
So this is very amazing for me.
So this is for the high school in Belgium.
I made an example.
Thomas Moore in Mechelen.
So this is a big step forward for us.
The game then made.
It's also on the right side.
But it's not with animated panels.
It's only with cylinders.
Also, we have a game module.
So you have to import some modules.
And then you can make a talking people.
We have sensors, ZimCam, for making games interactive,
of playing music.
You can wave to your cam, and it's interactive.
So this is the magic of code.
I put the wrong button.
So if I go to the number 5, demo 5, it's very cool.
We have like a cursor.
But now your cursor is your hand.
You move your hand onto the red button circle.
And it's activated, and you can place it somewhere else.
So this is what I want to say about the magic of Zim.
Zim can do everything.
I didn't push the button just with my hands.
I can move along.
So you can make an Ufu landing on the world
and giving everybody some happiness, love.
But the next thing I want to show is speech.
Speech is launched two weeks ago.
And I did some pioneering work for it.
So this is a little man, a boy.
And of course, I want to talk to him.
So I have a red button.
Hello, everybody.
How are you doing?
And he's typing what I'm saying.
So this is a big applause for Denzen in implementing it.
So in Canada, thank you very much.
All over the world, speech technology is very huge.
And nobody else I've seen implementing it into apps.
And we can do it.
So also, for example, a robot, Basin Adrian, is from the 80s.
I was a lover of Basin Adrian from Holland.
And I made a robot because I was a huge fan.
So I show you.
So I made the finger at the left side
so you know what you have to do.
Hello, I am Robin, the robot.
And then you have to, for the next sentences,
hello, I am Robin, the robot.
Again, hello, I am Robin, the robot.
Yes, robot, of course.
And then you can play it.
And Robin is Robin in the language.
And Robin is Robin in the language.
So the language you can choose the language you want.
Hello, I am Robin, the robot, of Fosdam.
Hello, I am Robin, the robot, of Fosdam.
So, even my name.
Thank you for listening to Carl Roosale.
Thank you for listening to Carl Roosale.
Thank you very much.
So I don't know what to say anymore.
This is what I was liking a lot.
But the problem, at least, is the children
can talk every word.
So what do they want to say?
Words they don't want to hear as a teacher.
So what did I offend?
A list where children can only talk the words of the list.
So he has the center class.
He comes.
He wants to bring presents.
What are the presents that he brings about a Vliegtheug?
So it's a plane, a bear.
And if you talk to the circle, Vliegtheug,
you get the word and you see the image.
But you cannot talk any word.
He only listens to the words I'm talking.
That's extra magical.
So I'm very excited about him.
And we even have the controllers possible.
So you can play with your controllers, also games.
So if you go to heart 2, you can go to mouse for now.
But if you have a Bluetooth connection or a controller,
you can collect all the buttons or the circles.
And when you are finished, you get love.
OK, so I want to inspire my kids of five
and one year and eight months.
So I don't know anymore what more I can expect from the end
end.
But if you have questions, ask him.
He made already the Groovity app.
It's a PWA app.
PWA apps or progressive web apps.
Progressive web apps can be installed on your phone
without internet.
It's working.
So we have like Groovity with many pages.
You know you have seen apps with one page.
Of course, we want to have children of the kindergarten
with multiple games at once.
So these are all stages after each other.
You can play around.
It comes back.
It becomes bigger.
I am on Placement in Belgium.
It's a big website where you can post all the things
about internet, you know.
And it's very liked by the people, the teachers in Belgium.
So now they want to make it theirself.
And that's why I'm making Slate better and better.
Also, the physics.
We have a ball, for example, to jump.
This is a basic example of sim.
So you have to push the ball.
And it can go outside or sim.
So there are no limits for the border.
So you have to push and then it comes.
So now it's cool.
We can add sound to it because we have the speech and the sim.
So the kids know it's a number one.
It's a number two.
He can learn counting to 10, for example.
This is what I show you.
The explosions already.
Sim coding with Slate.
So these are all the websites you can visit.
And also on TikTok, on YouTube, of Instagram,
we are everywhere on all social media.
Just take the time to explore Sim because it's much.
But if you have grown up and about the blocky
and all the blocks dropping, just go and typing.
That's my thing I want to say to everybody.
And last but not least, in March, we
have Flanders Technology and Innovation.
It's a festival about what we invent in Belgium.
We invented the Jeepig compression
by a woman from the university in Limburg, the province.
And I made a little VR glass.
You can see a video playing while we are turning.
We are looking for our own way.
We are looking for our own way.
But above all, we are doing it for the sake of it.
Like one of the first windmills,
which we just saw here, in Zürich,
there is a smartphone that is a little bit
connected to an image in Leuven.
And each one is only available through the game in Limburg.
Strattoch or mitroscopic levels are available
by the name of Strattoch.
Red means order beginning or flight to the next
if we want to make it better.
Really, Flanders is working on it.
But I'm sure even smarter
if we make our own screenings for the big block
if we can speak to each other.
Look at the future.
Or do we need to calm down?
The future.
Because that's exactly what we want
with Flanders Technology in a vision.
Do.
Do it.
Do it.
Here in Flanders and all over the world.
Yes, even this world.
To stimulate, inspire and support talents.
The problem of tomorrow is now solved.
So, please join us.
Thank you for coming to see how the world changes.
And above all, how it started in Flanders Technology in a vision.
So you see the head of the person.
This is Flanders.
By night, the lights on Brussels Antwerp, the coast.
If you know, we have two parts in Belgium,
Boulogne and Flanders of course.
And if you have this in a Zapp,
so you saw a website, I made also the Zapp.
You can go to the full mode.
You click on the QR code, you can do it yourself.
But here I put it into a newer glass.
The quest to reach with an image.
Problems are stuck.
That's what we want.
Experiment, problems.
So you see, you take a 360 degree picture
and you can put whatever you want into the space with Zipp.
Thank you very much.
APPLAUSE
See you online or somewhere else.
Any questions?
We have, I think, one minute for questions.
Yes, or any other questions, please.
You are all amazed about what Zipp can do.
