I'm very pleased to welcome someone who many of you will know, Bradley Kuhn, I'll let
him introduce himself and he's going to talk about copy left and the GPL and its role in
defending our right to repair.
Over to you Bradley.
Thank you.
I never thought of myself as a legend so it's kind of you to say that but I don't know if
it's really accurate.
In many ways this will be an update of the keynote that I gave at Fosdham 2017.
I realize many of you may not have been to Fosdham from four years ago or whatever, more
than four years ago, six years ago.
If you didn't, I don't mind if you start clicking on the links, they're in my notes
on the Fosdham page and you can click through those slides as I get started if you want
the context because my goal here is to kind of give an update on what's happened in the
last couple of years.
I approach all of the things in free and open source software from the role of an activist
which is frankly quite different from most of the kind of work that people tend to do.
I am trained as a software developer, I spent many years doing software development including
proprietary software development once upon a time and it's what turned me into an activist
such that I'm not doing so much software development but instead trying to change the way that
the technology industry works with regard to the rights that people have with regard
to their technology.
I really believe it's important if you're an activist to keep your goals and your area
of activism narrow.
It's not that I don't believe other causes are very important.
Probably most of the causes that you would expect I am supportive of, I am.
But I spend my time focused really narrowly on trying to reach a world where everyone
has universal software freedom or the phrase that I've been using a lot more to refer to
it is a universal right to software repair.
You should have the right to fix your software and I want a world where everyone has that
right for all the software that they use.
As I get older I become more and more morbid, I was already morbid but now even more so
and not a week goes by that I don't think about the fact that this activist cause that
I'm working on has basically no chance of succeeding in my lifetime.
I will die in a world that most people in the world are using proprietary software for
most of the things that they do with computers and most people won't have the right to repair
that software the day that I die.
It's an unfortunate fact but it's expected with regard to work as an activist.
Ultimately activism is not really just politics although it feels that way most of the time.
Most days I end the day feeling like I'm some sort of politician and I don't particularly
like that feeling but it's fundamentally different from politics because politicians
really seek only to achieve what is politically viable and the art of politics is the art of
compromising to a solution that everybody can agree on.
But activists tend to, oh shoot sorry my colleagues are apparently talking about my talk and I'm
getting notices about it.
I think the big contrast to all of that in between activism and politics is that activism
is really trying to reach something that's politically unviable that really doesn't seem
like it could ever happen and the only similarity between the two really is that the goal of
the activist is different but the strategies tend to be the same.
So as an activist I have to find and every activist needs to find strategies that are
politically viable but those are not end goals in themselves and it's a mistake to look at
them as end goals in themselves and if you look at my previous talk you'll see I've talked
about how copy left is not an end goal in itself it's a strategy to achieve software
freedom.
Now being an activist you often get insulted as it turns out.
I've been called many times to be tilting at windmills.
I counted at least ten times that's happened either after one of my talks and I actually
always wonder if folks who have said that to me or actually have read the source material
or at least the cliff notes.
Here is actually an excerpt from the cliff notes on the book Don Quixote and I actually
think it really explains activism quite well.
Ultimately acts of rebellion or reform are quixotic because the reformer aims to undermine
the existing institutions in order to change them and I believe that activism for software
rights is designed to undermine the existing technology industry in order to change it.
Copy left is a strategy a politically viable mechanism to bring about that change.
Copy left is subversive, copy left is quixotic, copy left is counterculture.
Now the interesting thing is that it also has to be politically viable and we also have
to succeed at using it to push forward the long term, never happening in my lifetime
goal of software rights for everybody.
Now one of the things that's been incredibly difficult for copy left to continue to succeed
and I think it has had some success but its success is in peril in recent years is because
of the level of co-option that we now see with regard to free and open source software.
Co-option is a process that happens in social justice movements whereby the mainstream takes
control of the politically viable parts of the otherwise idealistic activist cause and
uses them to seek its own goals and usually supersedes the activists in time without tremendous
work to fight against it.
You can actually look at the history of copy left and really see that the technology industry
has done a really good job of co-option of free and open source software and copy left
has faced challenges as a strategy because of that co-option.
Since 2001 almost every large big technology company has had some sort of strategy to discredit
undermined or otherwise work against copy left.
You'll find that most big companies really really love non-copy lefted open source and
free software and they really dislike copy lefted open source and free software.
This is not necessarily, I was just going to say, it's reasonable that they take this
position because copy left is designed to undermine the technology industry and they
don't want it undermined.
They want to continue to make proprietary software and copy left is attempting to prevent that.
I realize a lot of you probably work for some of these companies and I suspect that last
slide for those of you in the audience who work for one of those companies or the many
others that aren't on the list, it creates a certain amount of cognitive dissonance.
I want to be clear that it's not your fault.
You're part of a system, as am I, that has systemic institutionalized problems that take
away people's rights to repair and improve their software.
No individual in the culture altogether can avoid this.
If you take a look at the keynotes that Karen Sandler and I gave in previous years about
the issue of trying to use only free software in your life, it's very very difficult.
So it's not necessarily a surprise that many people are going to be in a situation where
they're both working for and against open source and free software at the same time.
In the end, these are the systems, these systematic problems in the technology industry that are
the windmills that someday the activist cause of universal software freedom will take down
but try to get comfortable with the cognitive dissonance that if you're doing work at a
company, even if you're working on open source, but that company also does lots of proprietary
stuff, you're both part of the problem and part of the solution at the same time.
And I'm going to talk about a couple things at the end of the talk that you can do to
help.
Companies have been paying attention to what copy left does and how it works for a very
long time, the entire history of copy left more or less.
And this is the laundry list I came up with of basically the playbook that companies use
to keep copy left from succeeding.
It's relatively disturbing that you'll find, for example, on GitHub.
For a while there was a GitHub employee who spent, I guess, their free time, maybe their
paid time, not sure, going to various different projects that were copy left and trying to
shame them into changing their license to a non copy left license.
I don't think that's occurring anymore, but it was one of the many examples I saw where
there was real pressure from the corporate environment to shame people who chose copy
left, tell them their software was never going to be popular.
And I've seen many colleagues who work for companies reassigned from working on a copy
lefted project to a non copy lefted one, or who asked to have a project be released under
copy left to be told they have to release it under the MIT license or something else.
It's very interesting to me, too, that there has been such pushback in the free software
world about assigning copy rights to nonprofit entities that want to pursue this long term
goal of copy left and software freedom when most of the copy rights generated in software,
open source and free software, are held by companies because your company keeps the copy
right when you are an employee.
And for Europeans, I'm talking about the exploitative rate, and moral rates really tend not to
come into play with regard to copy left licenses.
And what we've seen in my work doing enforcement and compliance with copy left licenses is
that really companies have become incredibly brazen and simply ignoring copy left requirements
entirely, or just promulgating interpretations that make no sense, saying that, well, that's
what the source code is.
Even though it's not the source code that they use, they make up a separate source release
to give to you and claim that it corresponds to the binaries you've received, but it doesn't
in fact do that.
So there's a lot of activities that folks who want to take away software freedom are
using to succeed.
Now, we've had a lot of success doing various different actions around copyright law to
succeed in making copy left work.
I don't want this to sound like copy left has been a mitigated disaster.
I think it's actually been quite successful.
Howard Veltner for years was doing enforcement in Germany that was very successful under
copyright law.
He's no longer doing that activity.
The organization I work for, Software Freedom Conservancy, had a successful copyright litigation
regarding the Busy Box project that did gain software freedom on a few devices.
We've learned a lot of lessons from doing copy left as a copyrighted focused endeavor.
The remedies that courts offer for copyright rather are not particularly well fitting with
what we're trying to get done with copy left.
Typically courts offer either injunction, which is a prohibition on further distribution
of the software and financial damages.
Now, it's never been our goal to stop people from copying and redistributing copy lefted
software.
So injunction tends not to be that interesting other than leverage to get compliance.
And similarly, a threat of financial damages is not normally what activists want.
I don't want money for copy left infringement.
I want compliance with the copy left license.
I want users to have the rights they were supposed to get in the first place.
And there's no amount of financial reward that can ever replace the importance of having
the right to modify the source code of your software.
Additionally, any copyright action has to be brought by the copyright holder or someone
they've assigned to.
This creates a weird burp.
I think Harold Vulta was a true hero that he spent basically 10 to 15 years with probably
half or 75% of his time just doing GPL enforcement to liberate Linux devices that had his code
in it.
But it's a lot to ask of any developer who would rather be writing code to have to go
out and do these actions to get compliance with software that companies have violated
the GPL on.
So I've come to the conclusion, and many of us who do this work, that copyright was
a pretty clumsy mechanism for getting what we actually want with copy left.
The goal of copy left was to have a strategy that would liberate software for users.
They would have the right to the source code.
The source code would compile.
The source code would install.
But in the end, courts in copyright cases don't order entities to do the things that
GPL says.
So over the last few years, I've been thinking a lot about this quote that was actually the
quote I put in the US you put in your high school yearbook.
It's when you finish your four-year post-secondary education and you get to put a quote in your
yearbook.
This is the quote I put in my yearbook, which I should have went back and read long before,
because in fact, always trying to do copy left enforcement as a copyright-based action
was really a foolish consistency, because other options were available.
In fact, when you look at the GPL v2, the word you or your appears 93 times.
It refers to what you are supposed to be allowed to do, what your rights are.
The phrase copyright holder appears twice.
The GPL and copy left license general have never been about the copyright holder.
They're about you.
They're about the user.
They're about the person who received the software and what their rights are, namely,
their right to modify, repair, and reinstall the software.
What the lawyers call this is they are third-party beneficiaries of the GPL agreement.
For various reasons that I can't get into because there's only eight minutes left in
my talk, we spent a lot of years only looking at copyright solutions and not looking at
the third-party beneficiary solutions to getting compliance with copy left and getting
source code to users who were looking for it.
At Software Freedom Conservancy, we currently have a third-party beneficiary case in the
United States that is going quite well.
You can read about it on our website against a seller of Linux-based televisions in the
United States.
We're also engaged in some grant making to bring actions outside the U.S. on a third-party
beneficiary basis with regard to the GPL.
I believe this is an important step that we have to take because we can't, as the English
phrase goes, put all our eggs in one basket.
Copyright-based solutions for copy left are useful and they've succeeded in the past,
but we shouldn't only be doing those.
We should be looking at other mechanisms that we have in the legal infrastructure that
we have for the defense of users' rights and software and using any of the mechanisms
that we find and really all of the mechanisms that we find.
The other thing we're doing in the Visio case is we're asking for this thing that lawyers
call specific performance.
Now, specific performance is typically used for things like a family heirloom or some
other type of object or thing that has no equivalent and no amount of money can replace
it.
Well, the fact is we never felt that any amount of money could replace users' rights anyway,
so specific performance is exactly the type of legal mechanism that we should seek with
regard to getting the proper and correct source code for the devices that we have that contain
GPL software.
Furthermore, we don't even ask for financial damages.
Our goal being that we're being very clear with the court what we want as activists.
We want the right to copy, modify, and reinstall the software so that we can make use of it,
so that we can take these computers, which just look like televisions, and use them
for other purposes like every other computer was 20 years ago.
Today, most of our computers can't be repurposed, and usually they can't be repurposed because
they're violating the GPL.
That's something that we want to change.
Now, there's a lot of stuff that you can do to help with this.
I know I fed you some cognitive dissonance early, but there's real steps you can take
if you're employed doing open source and free software development.
I mentioned that companies tend to require their employees to effectively assign their
copyrights.
Usually it's part of your employment contract.
Now, I realize if you're unemployed and desperately looking for a job, you don't have a lot of
leverage, but most people in the technology industry switch jobs voluntarily.
I ask that when you switch your job voluntarily, make it a term and condition of your new employment,
that you get to keep your own copyrights, that you can decide when your software should
be copy-lefted or not, instead of letting your employer decide that for you.
As I said, we still will need to pursue copyright-based solutions to open source and free software
issues with regard to copy-lefts.
Assign your own copyrights is a useful thing.
And if you're willing, you can assign them to SFC, because I don't think it should then
on top of that be your job to go out and figure out how to get compliance with the copy-left
license after you've done all the hard work to get it released under a copy-left license.
SFC is one of the organizations that's willing to do that work for you, and we're prepared
to do it.
You can also help on these two, and we have a new program that I'm announcing today at
SFC that will hopefully really make it possible for you to make real progress in dealing with
these issues.
We're launching this new thing called Use the Source.
Use the Source is designed to be a program where we can teach you and mentor you and
get you involved in the process that we do to deal with all these millions of embedded
devices that are violating the GPL.
We've, as FOSS developers, have taken a FOSS development approach to it.
We want a solution where volunteers can check the offers for source, because almost every
device that you've bought in the last five years probably is based on Linux and probably
has an offer for source.
With the Use the Source community, you can post any source requests that you've made,
submit whatever the company gave you, and work with the rest of the community to figure
out how to get it to build, because the big problem is that most of these companies are
not actually giving the right source code.
They are not giving you the scripts used to control compilation and installation of the
software, which the GPLE2 has mandated since 1992.
You have so much power as consumers and users of these devices to put pressure on these
companies that are constantly telling us, oh, it's going to take us six months to get
you the source code.
Oh, well, that's an old product, and we don't have to give you the source code.
Not true.
I want to and would like you to join with my colleague Denver and I to learn how to verify
these source releases.
It really hearkens back.
If any of you were on Harold Delta's mailing list in the early 2000s on gplviolations.org,
they're now defunct, but if you look back at those archives, you'll see that's what
people were doing in the early 2000s to try to get companies into compliance as a collaborative
effort.
We want the issues of copy left to be something that operates like an open source and free
software community.
I hope that you'll join us in doing that.
This was really scheduled to be an update from my previous talk, so I'm going to finish
up there.
I don't have a lot of time for questions.
However, we have the legal and policy dev room that's happening this afternoon.
There will be lots of discussion of issues related to copy left there, and I'll be there
along with my other colleagues who work on this kind of stuff that you can ask questions
there.
Use the source was launched today, and so you can take a look at the website and read
more about it there.
I hope you'll donate to become a sustainer.
We're a non-profit charity that we operate based on your donations, and I'd really appreciate
it.
With that, I think I'm completely out of time.
I'm sorry I can't take questions, but please find me later.
Thank you very much, Steve Bradley.
