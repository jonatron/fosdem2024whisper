
S, he just said it's an example of a boot line of it's fairly easy to change a kernel. And currently, we just like the script and we did this, you can see, you can test it, which has the kernel that's like a new kernel. And so on the kernel will go and finally you can modify a kernel and eventually inside this and then you can also add a special or the devices between using some stuff like. So, you can do it. You can see the kernel to write the disk or a boot, okay. You have a boot space. You use the boot of system. You have a kernel image. And then the kernel will be used that config file system and you can disable the kernel has to send the kernel will start with the kernel that all, and then your kernel is the kernel-based kernel boot kernel is booted into the disk effectively we want to connect all that. If the kernel module that like system, of's coming to, you have to the other kernel only the kernel and then it's probably the boot and then be implemented. So this's just don't know, you can do. You basically you can just run and if you can run a root of encryption kernel kernel as you can say basically use the devices. You can boot, and if you can basically get my kernel namespace of the kernel access to me in the boot loader and call the kernel. You can connect to the kernel. You can actually have some use a container kernel system the boot system calls or not boot is for file system. So that was all of now all the kernel which are in my kernel and it also kind of the boot space because the kernel service that might be needed by the kernel of the boot. So I was currently there's like the code in TPM, there. System boot and then the kernel configuration can be used for example of the kernel kernel and boot. You can be called TFS. And basically a boot boot. And these kernel works that's essentially, has a boot system needs a boot command on the kernel boot. And every kernel that was all of course they can be the kernel kernel has shared keys to be the kernel. You can allow you can be some keys, which are done automatically the kernel from the kernel space key and boot kernel just by boot could build system enabled right boot is the kernel. And if the same the kernel have to boot on the file system boot. It's a TPM kernel subsystem works and on the kernel kernel system which just have keys. The TPM is now you know the keys. So there are again is a kernel can boot space of system bootPM, which is the kernel like boot into the kernel files you can tell you have a kernel thing. It's not of the kernel that that's actually really visible in virtual kernel and that just need to the kernel, but the boot needs to be the boot loader so to build was about boot scripts and you have and for the user boot lock into kernel boot menu to fetch that I said that basically. Um as you can be mentioned that the boot process and the kernel boot and the kernel in the kernel on the kernel and boot file system kernel boot system so when you can contain to bootPM stuff and the kernel kernel only like that it's bootloader is supposed to a kernel into the kernel calls and the kernel as system are the kernel kernel, and boot loader and TPM is the kernel keys to basically sort of the host with hashes that you can actually port into kernel kernel as kernel has to boot and then it's all of just the the kernel is a kernel kernel the native hash kernel driver and kernel as far as a kernel actually boot and debug. So the boot process it's going to the kernel configuration space is boot and the boot boot configuration measurements from the kernel format. And actually runs the kernel kernel and kernel keys are going on the kernel kernel. So you can define you can actually keep in the kernel host boot file, you can basically get to be able to the boot, when you can re-PM has to work, both boot itself is shown the kernel boot config file system kernel drivers are the boot menu system and then you will be configured. So you are about U space of the kernel. You have much disk kernel space and the kernel kernel kernel like boot menu and's on the kernel binary kernel should be a TPM in the boot system and file system kernel status and you need the kernel kernel and device you can boot directory that was for the kernel and get to have to debug to the boot, for because the PCR kernel tree of the kernel is linked of system that the kernel system of the kernel kernel space kernel to bootPM is still would potentially that device, we have a kernel bootPM is visible to all the kernel device, which hashes. So the boot kernel does that's not, you boot on the kernel kernel and then the the kernel runtime boot enabled. So TPM kernel is not only TPM, but it has to the boot which is the normal init gets the kernel. It's just the bootPM boot kernel boot menu to command line has the kernel to boot of it's happening to a kernel. So this should be on means no thing are provided by boot kernel. It's actually used on the debug the firmware boot keys, which's really the execution. And in which was trying to the process menu space kind of it was a boot loader actually the kernel kernel boot loader boot would be a boot file DPM hashes actually has the kernel file system boot of boot was just does the kernel I used and it's just puts all the request can and that the kernel file and kernel is going to be done. So it's the key keys are the same kernel is used by kernel kernel boot space. And the kernel has to do boot of it. This is that we have, we have is going to do with that anymore of the kernel does. And this file system kernel menu are the kernel has a kernel devices. You can have a user space of the way. And it in the kernel as well, and the system and the kernel so that you can be because on the VM boot kernel looks like would be aware that it's fully and it's not always like that. You can look at least about that. And then you can actually knows you get the kernel keys that. But it's quite slow to get the kernel stuff are so you don't have a boot. So you know exactly how it's the kernel boot was interesting part of the kernel configuration, if you're on your boot and it's got it's basically like a kernel space and it's very well and it's the kernel to actually used so that TPM actually have a boot code. But there's what right kernel was just a system boot now I thought that I thought. So you would like if you know that you know most of this would like the kernel space. So I am I made one of the kernel container kernel. Yeah, I think like boot over the kernel bootloader because it completely measured for the kernel would be the boot line boot menu I mean. So it's basically the kernel as a kernel kernel actually possible well in file kernel is got inside the kernel boot in the kernel, the kernel boot of that we havePM to boot. So in the boot and for system. The kernel is the boot was in menu wasm andm, you can't just set. So you are some init system also have file are not protected. So that we are just really the kernel D as you are basically have a kernel a kernel and that the kernelPM supports kernel command line actually handles root the kernel kernel boot and then have no boot has no boot for the boot system to boot was possible, because of system is boot boot on Debian kernel bootPM kernel kernel of its stack disk.1 calls. I said obviously you're using bootPM to the Windows kernel boot line of this was working kernel memory boot done. I started boot that's the use TPM actually wasm does all the boot and boot system space and after that we did the boot space because you get all boot kernel and see the kernel as you know you can boot loader boot boot process boot and port is kernel in the boot didn't do much and debug key kernel options, that like that because the boot is the bootloader calls that boot, on kernel looks like boot system boot or is encrypted kernel that the kernel boot and boot patches is pretty boot in bootPM calls were the TPM, so like a new bootFI kernel boot kernel boot it's the kernel like you know boot and because it's the kernel that's not very complex kernel has a system boot was useful. So there wasn't all just even in kernel uses's extended and as you can also boot you should actually have to have a boot PCR. It's basically a kernel and you can have this driver that's not what is the boot keys that have. So the kernel a boot has some kernel boot, actually you have actually have to boot. And basically is designed by config as we have a system boot side of boot and we have the boot boot of the kernel boot by and bootPM calls are deprecated root needs to the boot, we want to run the kernel boot file system that the kernel boot keys to re-PM system boot as a is not fully boot on different kernel boot image because of that's a file system and we have and the kernel automatically is the kernel wasm kernel are the kernel kernel that is we're available on this kernel would be like has changed, I'm not want to run and the kernel only this kind of the kernel space is just has a boot of it's entirely PCR doesn't have is a boot as the kernel to boot right boot itself. But when I haven't think, sorry, if we have the boot. I don't made a boot. So it's the boot has aFI would be in kernel keyPM now it might be a system boot address would like boot. It's not to boot menu. I'm not going to bootPM kernel for adding boot to boot system kernel that in these kernel was still have only theseVM, so but the system is a kernel boot binary boot space system and boot base was because it has not boot loader is not that this and sometimes we want. Everything else would work before. And we still works, we have these file system boot for the TPM would be the kernel had again and boot in GTPM but that and actually the kernel process is like can only is that some kernel kernel space has a boot was still possible. So kernel boot was a kernel is being doesn't so you know that we want for the boot, it's for this boot menu to boot directory and boot request, it's pretty fast, but very easy to use and it just the way. It was a way. It's just running on the boot keys for the kernel has to boot port that's not I would be using boot. It's a lot of course had some boot on the boot time. It's being booted that you some different kernel firmware, or boot space boot boot of the kernel. It's only a kernel, you can do have the kernel boot. So the kernel boot menu system has enabled that's only run on. But the kernel is that are important boot. I'm probably to do you could be able to use and read it to build kernel was probably go and then you can't think this file system. So you currently the boot? I'm just a boot menu are using boot binary boot was because if I'm going to boot is sitting on disk system to have not only way. We have this boot directory is not want to boot as your boot, but of the kernel. And the kernel boot file is the system is set the kernel actually knows that the kernel boot and bootar would not like boot and anything else I could allow the boot keys, but while the kernel calls were running binaries. So I could actually that's there are running on was the kernel is a device, C kernel didn't really have not a boot. You can't have a boot firmware kernel to have in the kernel. So that's not didn't the kernel and atm kernel boot boot menu and is actually the kernel boot menu boot kernel and at TPM and I think to disk kernel boot file system didn't have to have we were generic kernel boot loader for the boot kernel boot menu, so they boot like boot version of the kernel kernel is actually have boot boot that all device and does kernel it.0 one partition to update process. But of the kernel works. Yeah, the kernel kernel kernel as kernel thing is enabled were used like, we have was not so you to bootloader. There was no boot options here was some kernel, I know I was also some kernel does and that just because another disk kernel kernel to have it was not. It would love to boot. We have this boot system kernel kernel kernel boot. And even if you would make the boot kernel kernel kernel says which doesn't done the kernel in do that this boot loader, it wasn't have configuration file, but that. Yeah, you should you don't only have the Linux system boot kernel partition system only the kernel kernel but other kernel calls because it have is the kernel boot boot boot loader and the kernel kernel not on the kernel kernel would be the kernel does. That's available. I don't know about kernel partition file system actually be the kernel boot process. And that's the kernel boot menu was the boot and then the kernel boot in the boot doesn't really can have to reboot of your kernel space. You can be configured. I'm going to boot boot menu that the driver and it depends on the boot and it was boot itself has before, but it has no boot system boot menu boot to look at the boot image to boot blAP, and boot the kernel is. And so yeah, all of the boot kernel binary and I mean. But the kernel boot menu should be quite was done in boot boot boot in the system boot on boot patches like the kernel booting. I could really didn't do it when you always work, why I mean, the kernel bootPM was sent my kernel boot menu file in the kernel kernel boot kernel didn't. And that I still gets actually need to it's basically doesn't want to have to boot in boot keys. It is basically runs the only. And I don't have the boot file system bootFS on. So I was happening at bootPM kernel that well the kernel boot wasm as you have UFI kernel boot loader was just the boot boot on boot menu, which is configured from the PCR driver and boot process boot command on its kernel kernel and even. So if you have is done in kernel boot before a boot menu that you're just