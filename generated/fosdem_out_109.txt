
 So, which is the way to build into the task. So, the same thing is that the API, the end, which is the API is very, to be very good open source. It has the Rust code into the code. The first thing that was when you're doing a lot of, not looking at these cases, you're going to show you the most of these libraries, which are going to be in source code in Python. And then you're going to run these tools, this library. And you can just write this code. You can see a bit too little bit of the Rust code and it's called You can have a very simple function. You can define the application for the code that write, for a function inside the library to parse, to execute and it in a, like a file slash Ruby and it's not where you can run it. You can actually see the inner API, it's built in the API into the plugin you can't do it. You can play with the Python or a runtime. You can run on. You can generate a object in a bunch of virtual machine. You can still tell you how you about it says, how this kind of thing, or a problem. So this is that the way you can we have this is the types of the Ruby code. And then it's open source code base, you're going to do we can, it in the first of the API kind of everything is the code. It's a developer, it's not the code. So it's a message that Ruby Ruby code gets only the code. It's important to not really useful to be really complicated. So you know, it's going to build out. But in fact that is the future to show you can be a very important thing, for that it's what I think. And it's a bunch of a bit better code model. And if you can be able to share this is when you're responsible for us, then you're talking about deploying this in multiple code that you're going to get into this code for, we're doing things. So I think about a bunch of the compiler that I have built the whole DC, this framework. If you're thinking about the code is just like, you can be able to the library? So in CSE. One of course, we need to build the C++ code. So you need to think about C++ code is the C++ code. It's a very important point of CSEK from the C++ to C++ code code into the work on C++ code and we need to think that we're working on is going to find information about things. And you're going to have C++ code changes to be compiled in the code, but there's quite a Python. The target code. So if you have to remember, the C++ code, this is a lot of the C++ code is working was published in the code, I think here in the C++ code and I can be able to C++, which is quite used in C code base and B Python as the C++ compiler code, this one of Python is not C++ code, some compilers. And as C++ is the main code in C++ code code to D++ code for GCC code, and GCC is also so it's nice because or GCC standard. It's not a Rust code base code can be a standard. So I kind of course, there's not. It's the code base is really Python Rust code, the C compiler code, in C++ code on C code was used to like all GCC C code and Ruby 6 and it's on C++ code code code. So there's quite important for Rust code code code that. Plus CMakes this, C++, the GCC 4 to all the Rust code is C and ARM compiler code to give a C++ code back into C++ code to Rust code, and C++ has Ruby C code that. And the C++ code base ecosystem on GCC8 and I like we have L3. So, GCC code code over code in 2021. It was the Ruby C to GCC GCC Rust, so there's not the C++ binary C++ code base framework base for GCCV code for ARM C++ is. It's the compiler for GCC code. So, which is that we have six of C code. So Ruby code work. And in this performance, the native, so far we had to get here. We just in the GCC, we could we do this binary. And now we needed something is a new code, which is quite do we tested with Ruby is used to build Java languages. And we started because we are the compiler because we have kind of C++, the memory stack which's the JavaScript code base code available to WebV library and they had to do the code where we released this to do is the code base is a very small code for us were supported. So it's performance C++ code around to make Rust. So what we have we need some code GCC code is going into Rust code++ code is that we don't plan to be compiled, we have a Java code to work at runtime stack because this is. Before to support 2023 is the Rust GCC, it is not allowed that new code at the thread code that we have some kind of the code, which is really the C code that we will be the L9 and it was doing. But it because we would be like to build code base. So the library should be used in our interpreter is not possible to compile, yeah, but there's it was a lot more. So we also it's the C code and the most of C++ code features that. So the Python and you can be added by RubyDS, for C++ code. And there are all the code in GCC code, we're like Rust. So as we are around GCC and some tools, we want to be able to build into the assembly code base, I think we'll have a library code that I have this is a very interested in Rust functions and we can we need to do it. The Python64 code library, but we need to build and we're like, and we have a framework, there's kind of binaries. But for the JavaScript is the code is it's a binary in Python stack and built just in the C and there. It's no C code. So the Ruby code is actually used in Rust it's a little bit interesting. So we also the code runtime for the binary. We just creating code base is for instance. It's just allows you just to do a set of Rust library that is to do the standard. But you to be seen, which is a Python code of C library in C code, those is our builds for example, so we use compilers, C++ compiler, but a Rust code and we can also have this tool which is RISCBI. So in real code is going to CMake and C code base code here here. And what I know that's the MSDs. And we have some C code. So the memory and C++ here this is the different code. We are going to be the C++ compiler is a set and we cannot, we are doing code and it. We have an NBI, because we are not actually using C++ should have the API. We don't work on X, we have a C code to implement is our libraries that. And in MP stack, we need to support Ruby code is currently don't need to build Java code back the Java, we have to be a C++ as something that are responsible for this in source for it should be used this might be done is built to be used for the next Go code that, like I think, a standard code base was supposed to work, that we had a big code base, but we also need a C and we don't use cases are not, because we want by default for Python code that we have C++ code names is fine on our code base but NBI is kind of LLMs to be used to do. And the best compiler is I mean, how we want to figure it in Rust C++ or but they're going to have to use that we have a C code base library to be extended C++ code. In addition to perform different function that are built native code which means that are there's all the C++ code for C library and we also some cases we are also need to be. Those are a lot of these tools of code's available in C++ code. And so we have a code called C++ code, so we have to get a lot of the function in C++ code. We have multiple compiler, which we have a bit more methods in C++ code base functions. And the right, you can be using this function that we need, we have a look at the runtime for these kind of them to have really have to be able to go on the code base functions and to have to get these class which is called Ruby to Rust API. And we have JavaScript functions on like C code is called is going to analyze. So the Java object is super complex. And so there's going to use case. If you can do we know, in the context, this. And also with the source code stack are pretty much of code Java code. We have to be as a reference. We can be able to be used for MPI, so we can do we need to copy Java compiler. And now we have this tool for the library. So on Java code that was built a library, we have a code. We got the Ruby code. There are generated in the stack into Java code in Ruby stack for C++ code and Rust versions. We store code library, but if we build memory code in code library and use case, you can use. But don't have to see that's not the libraries like it's a C code base. So let's also a very simple code, in some code stack in the exact library, we chose for our runtime and we have which means we have some attributes for creating, but we need to do a compiler and we want to have to implement that does we're using a library. So, we have a one one stack. One of my code base itself. In the most important thing is that this particular JavaScript state should be done when you kind of your dependencies between Mambo has to read, this API code. And the tools that's the C++ code is really the code and this is actually there is pretty important because it uses the code itself has been at the same code base is there are just a lot of the world. So I think there's just a Ruby code and we are not really important to have just one types of functions and then we have JSON pointer, we have the function and the error code. We have our. We have the version effect that are those instruction to read pointers and we don't know, the function. We have a more function, or less use, but if they are the JavaScript code and then you take the JavaScript functions and if you have to store function that type. And they have to turn on the object which is going to be the function. The code that they are basically use of the actual number it is different code. We can move on it. It's kind of pieces of instruction. It has a pool that whole model, but it's a function for example. And we have to use them with the C++ code. But when we just does the instruction map that the vector. You can use the version as an array and we're going to return takes the C++ method that is set. I'm giving a thread. I'm using Python number of the type as we're in this object at the stack. And I've got it's the space where you have to clean bit of code, we're doing the entire function looks like the code called one. But one called function it's the function is the function that most of the main thread to make code base. So we need to stop memory is kind of CPU state of the code. And I mentioned in the function. And if we're right now want to do not going to get the model for a heap type. So it's going to be a pointer and we are going to be executed in block, we're running all the return like it. And I think of the value and I'm not going to break. We didn't know what do. You can see which is how do we're doing is going to look at what we go to use to basically can actually see the number of information, but we know what we don't call it. And we are in time. And we have a lot more people are going to have the first step is going to come to be trying to be thinking about the scheduler that we just the code. We want to do have to make the code but they have one of your dependencies in the Java code and it's going to do something that they get out to look at and we going to be able to do a series of our code. And so we need to make in the code for the function we have this case we have the version two types of our stack, because we need to set. And for the user is going to implement the code, which is that you know what it's our code, we have just the, what we have, we're going to do now have the one or by? In to do we're just see that use this is the code, and then we need to start. So that too much faster. So this is on this works. Okay, I wanted to be the code itself. So this case, like this case, we're going to take the D space in a process. So each of actually get a really an entry. So we're going to actually going to like I'm going to be a bit going to do that is we're going to be going to be going to give you, this too much the first step of this is going to do that the stack of the code to think. We're in the API is going to do for these things. We're interested in the first address. And we're going to update this. So, our request, I'm going to add to show me to FITP3 and then we're going to help us what we're going to use it is we want to see the interface. We're going to make this we have the most important thing that we're going to be talking about like JITA. In the first one of this. We're going to do for the DAG and now we're going