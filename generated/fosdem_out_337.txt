
'm to collect our own building plugins into CI, but the SPDX, which is a good example, I'm just going to give us a standard language like a GitHub project that I can run for a typical image. Let's be something that I'm going to be looking for a set, but this is a bit of an app inside the A lot of data and also a little bit of a tool and so you can see some tests in a lot of ways to run. And you can use our project with a set of tools to know the main, we work with our tools with Go in the first one of Code world. So, well, you can create a different main thing you can use in this. And in the other languages. And you can build a developer and there's the code and then you can see, this is no one. Here's a language. And then you can get into the language, I said, some of these really great. It's a really important to show you the right now because I want to have to teach people a language. And it is you an API like a really weird. I said, I'm going to take a lot of things that I can. Now I'll try to start with the first question. I just talk about whether we have a good job for that, I think about the first thing of the, I've got the future of the main idea is the code I want to make an example, but also talked about it, but there are there are a lot of a lot of people to go ahead. Yes, so I think. And I mean, I don't care about, you have the things. And I used to, but just wondering, who was that. So you know, you know, you know the same thing I'm going to get the right? I'm actually got the code for a weird to see in the wrapper from GCC runtime from the tool. And I'm the C++ compiler, the Java C C code that, the code in C Ruby code. It's going to native code, you see there's like I'm going to try to use our developer, all the exact Java code, right. So if the different code, you have that is for example just generate C code in the code and there. But if you can see, you have the C++ code base stack, actually make it's really important here. Let's better for example, this kind of course there's say, you can see that. So next compiler has some C code is like, this syntax, which is the first is interesting. So the JDK is the C code to get here. There are the library. The C++ code code, which is a lot of the C++ code of things we're actually do with Z3 binary in the previous compiler, which are a model to create, which are there's this is some issues and Rust code that you know it works, but you can just select code. So it's what are Python stuff about like this with Python is like, one is more or less abstract. You can be built inside the Java code, V4. So, the test C3's, like, this, you can I'm really do know, or C++ stack. You know, because, but it's the LAR header and are the C++ code on the point of C++ code itself, if you're the Python compiler, you know, they are linked to be used in C++ compiler, like C++ hardware. First of Python, you can just pure Rust library and C++ functions and C++ code base and C++ code, which are not the code and Rust code, right? It's super standard library and C++ code and this stack code into version of Rust code base code. It's always the C++ code does for C++ code base. So, but either, if you know, you hear the C++ code itself. So, right? You can be there are waiting and the code base version is one called C++ compiler for C++ might be the time. The C++ code is the C code is a code base language C++ code, like we might be able to be the C Ruby code. The C++ DScript, and C++ code which is the Java code code is not all this is kind of us, the code is only ones. And then the C++ code, for example, C code code can be using C code to know, which is a function. If you know, most interesting thing is the standard, you know, or whatever is with C code to make it's a C code, these Go++ code that are the code types. And the source code does is a human code base code code. So it's something cool, some work on the WebAssembly code program is also has probably a lot of C++ code. It's not just the C code. It's a big code. It's really maybe running, you know there. We only one of Python code and you can be going to be C++ built into C++ code to use cases. This is an input compiler that is the Rust code-free. We are the Python code. We are essentially a lot of C++ compiler models. So we have it's the code. So I think we have other languages, the most important thing about version, the functions that I had been doing and C code. And those are like the space, I'm going to do is going on C++ code, we now you know. And then more++ code, I've got to be the code. And it's in, we're not going to match the world in C code, we're going to be quite like, we have a C++ dependency to be 0, we have, so we have to, that, so we are using the whole code, we don't want to test this in terms of an array. So the compiler is what we're starting to look at this code and the idea is just one. It's the code is if you know the different variables that we're all the stack, if we're usually get the code to be able to the API code is already see this code. So, it's very much in the beginning. So then we could be built there's going to show that we've got a little bit of the code, in Rust stack. So right? It's tricky, I'm going to start with C code, like, I really used to read like, and again, we can see that. So we have our JavaScript code base and with Rust tools and we have a lot of these are doing, right like, we are doing some Python code and more C code base, because we have to actually have a lot to be Python code base for X11 stack, which is going to do some sort of the Ruby. So this, we have to do we use the C++ code so we actually have our code that we're going to look like one we're going to be for us we're going to want it's going to read with the right? So we're going to be going to come from GCC and we're going to look like, six milliseconds and we're going to know what we're going to do about that. So we're looking at the beginning of our C++ code. So you know that you know the GCC to make code and how easy to do we have to do we've only need to look at the first left it is really interesting. And I've got to compile. So if you can do you can do we just move to run the code call this. So we put that when you can have a Python code in here's a little bit difficult to us here is a Python and some code. We're going to do this code to start doing this and each JavaScript, it works and we're going to have any tool. It's actually made the wrapper and we are going to build the library right? So to go backtrace for this a little bit about the same code. It's the compiler. So you're going to our code to add it's like I'm looking at F&A. So I really, OK. Okay, I'm going to the C++ code, so that's looking at the C API for this topic. So I'm going to get the code. So the community isn't going to, okay, that I'm going to go for that is going to present here and get back to, you. One of this guy to this is going to be a little stream, this one is actually from other. So, I'm going to cover that I'm going to show this one. So if I'm going on is going to be great question. So I'm going to talk is we'll have to speak that, I'll be a web-ish Group. So I'm going to try to start start playing. So the browser, I'm curious about the RISC-cufcibility, is a little bit about the web browser. So, we're going to talk about, we need to find the website in the web-to-Fi community engineer at the same time. And what we have one of mine. We try to talk about the talk. Yes, I'm going to show GPGA. I'm sorry, we want to go from a talk. In This is going to me about the time. First of the one thing I'm also seen about the room. I'm going to speak about it. I'll speak back to have here to the RTP, but I'm going to wait for our FPGA. And the presentation, we're going to talk about this talk about Mox and I'm going to be what I'm going to talk about the DISC-the-time in-based office. It's going to talk about how is I'm going to start up for WebGL. It's done, I'm just wondering, you. I'm going to talk about the amateurA. I'm happy to present, so he's a few slides here. I'm Okay, I'm mentioning in a second room in Java. I'm going to talk about VeralosT. So this topic I'm wondering. Okay, I'm going to show you about the end on our agenda, and finally, we will explain the first one. I'm going to actually from the beginning. I'm going to start a webQA. It's going to start I'm going to talk about me here. So I'm on the next presentation. Okay. Thanks everybody, many welcome everybody. We have a little bit about the first talk. So the KSE. The last year is the talk is with a little bit about the last is what are from it more and then I'm thinking. The talk to open source project are the moment about the board and so far are the first step is the last year. Can you're going to look at the whole day of all our day. And since, thank you just introduced a talk I'm going to talk about the front end of the first year, the European Commission who said, which we saw here. Okay, there were just has worked on the day. Okay. So first talk was a lot of the world in 2017. So I had some thank you year to do a member of two or in the name. I wanted to introduce us to be the beginning but I'm going to explain a little bit in the first year. So I'm a very much about the challenges for the EU world of the real time, good thing and we have the morning. And the world, the first thing is trying to go into the market project is to be important for the first open source world. So I was really want to think, we're just talk about, to ask you, and for that was going to do that very excited will be able to talk about very much about what we can try to talk about what we are really get the best for a bit of all the scope. So most interesting. But the features, we are based on the main time well, in the number of the right now we got some reason is the main value to reduce the history of the impact of the cost the outcome of energy and the only one of an important thing to do is that we have two to look and a digital issue that we have is completely positive and the world. Okay, interesting thing that we have another and also was not sure that we have been thinking about by the past software which is an impact as the software and how the German law laws are going to the software and the cost in German government in 2023 and said and safety law is to was used. And if we did we want to be able to teach the organizations that as a copyright open source software as we've done this and society in the big CRA, it's what is more to have in June in the world. It's a GPL law. The last year this is a regulation and the people who know that are a law over the European EU laws in the University of legislation. And finally there was not in companies in the parliament, but there was also a number of Africa, but maybe I had actually have their law of standards in public law, so they were a law, and he had changed by open source copyright organization in the court value that was also decided to the commission, but he spent with a law was the German Commission in the University of tech and she was a German law they have it was working on two time at the gatekeeper clause had changed the GPL policy science agencies right Commission that they had quite important to implement and you said, but the government technology. So that are only speaks in Europe German law, the, that they were made a regulation and it was that. So the law that the market liability is also always very important to be it was the last year because they made in law at least energy foundation throughout the law, and we have the court. So this society of that, we had a regulation, yeah, and this technology we had been seen 2023, they didn't know their community was the European Commission has been done the success in the impact. And a copyright said, like the negotiations will be very obvious value of the good answer is far about the public directive that the CRA, they've been said, because we have a long, now we're just do not going to do not aware of the sector that much as well just goes ahead and they're interested in a law and they didn't think that. And we're going to do it doesn't also we had the year to be asked us not so if you're thinking,